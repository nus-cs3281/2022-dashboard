[{"path":"docs/CONTRIBUTING.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributing to TEAMMATES"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Thanks for taking your time to contribute to TEAMMATES!"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"We welcome contributions from anyone, in particular, students (see [here](https://teammatesv4.appspot.com/web/front/about) for the list of our contributors). One of the main objectives of TEAMMATES is to help students get experience in an OSS production environment. Here are some information that might be useful to would-be contributors."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Getting started](#getting-started)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * [Know the product/project](#know-the-productproject)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * [Code of Conduct](#code-of-conduct)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [How can I contribute?](#how-can-i-contribute)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * [Submitting an issue](#submitting-an-issue)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * [Manual testing](#manual-testing)"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * [Submitting a pull request](#submitting-a-pull-request)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* [Contributor orientation guide](#contributor-orientation-guide)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * [Knowledge required](#knowledge-required)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * [Orientation task list](#orientation-task-list)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* [Other resources](#other-resources)"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Getting started"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Know the product/project"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"Understand what TEAMMATES is about, both as a product (users\u0027 point of view) and a project (developers\u0027 point of view)."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"* [Product intro page](https://teammatesv4.appspot.com) shown to potential users"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* [Features overview](https://teammatesv4.appspot.com/web/front/features)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* [Project vision, challenges, and principles](overview.md)"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Code of Conduct"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"By participating in this project, you agree to uphold the [TEAMMATES Code of Conduct](../.github/CODE_OF_CONDUCT.md), which is adopted from [Contributor Covenant Code of Conduct](https://www.contributor-covenant.org/)."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"## How can I contribute?"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Submitting an issue"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"We use the [issue tracker](https://github.com/TEAMMATES/teammates/issues) to contain bug reports and feature/enhancement requests."},{"lineNumber":38,"author":{"gitId":"-"},"content":"Before submitting a new issue, search the issue tracker to ensure that there is no similar open issue."},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"If you are certain that you are reporting a new issue, [open a new issue](https://github.com/TEAMMATES/teammates/issues/new) using the templates provided."},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"### Manual testing"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"We welcome anyone manually testing our product and reporting bugs or suggestions for enhancements in the issue tracker."},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"If you want to undertake such a role without actually contributing code, [get an instructor account from TEAMMATES](https://teammatesv4.appspot.com/web/front/request)."},{"lineNumber":47,"author":{"gitId":"-"},"content":"Remember to mention the purpose of your request under \"Any other comments/queries\". "},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Submitting a pull request"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"We accept patches/fixes in form of pull requests (PRs). Make sure that the pull request addresses an open issue in the issue tracker."},{"lineNumber":52,"author":{"gitId":"-"},"content":"Remember to follow the [TEAMMATES Development Process](process.md)."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"By submitting a PR, you agree to allow the project team to license your work under the terms of the [GNU GPL v2 License](../LICENSE)."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"If this is your first time contributing to TEAMMATES, you may want to read up the contributor orientation guide lined out in the next section."},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"## Contributor orientation guide"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"Contributing to an OSS project requires you to figure out things on your own when you can, and seek help from the right resource (Google, StackOverflow, troubleshooting guides, issue tracker, etc.) when you cannot. To become a TEAMMATES contributor, you need to start honing those skills. To help you with that, we have created a sequence of tasks you can try to complete. Try to complete as many of them as you can, in the order they are listed."},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"Of course we are happy to guide you if you encounter any difficulties when doing these tasks; we have provided a [troubleshooting guide](troubleshooting-guide.md) for some commonly faced problems. Failing that, you may post a help request in our [issue tracker](https://github.com/TEAMMATES/teammates/issues)."},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003e - The task descriptions are brief by intention. We want you to try to figure out how to do those things by yourself."},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003e - While the dev team members will be glad to answer your questions, you will not make a good impression if you ask questions which are already answered in the mentioned resources."},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Knowledge required"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"Although TEAMMATES uses many tools and technologies, you need not know all of them before you can contribute. The diagram below shows which technologies you need to learn to contribute in different roles."},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"![RolesAndTechnologies.png](images/RolesAndTechnologies.png)"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"Note that these roles are not fixed or formally assigned; it is simply for guidance only."},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"Roles:"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"* **Web page developer**: Works on static web pages, such as those used in the TEAMMATES product web site."},{"lineNumber":78,"author":{"gitId":"-"},"content":"* **Front-end developer**: Works on the front-end of the app, i.e. the dynamically-generated user interface."},{"lineNumber":79,"author":{"gitId":"-"},"content":"* **Test developer**: Works on automating system tests."},{"lineNumber":80,"author":{"gitId":"-"},"content":"* **Back-end developer**: Works on the back-end logic of the app, including data storage."},{"lineNumber":81,"author":{"gitId":"-"},"content":"* **DevOps developer**: Works on automations (CI, static analysis, scripting) and operations (logging, monitoring, troubleshooting)."},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Orientation task list"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"#### Phase A: Set up locally"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. [Set up TEAMMATES development environment on your computer.](setting-up.md)\u003cbr\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"   **Important: Follow instructions to the letter. Install the specified versions of the tool stack, not the latest versions.**"},{"lineNumber":89,"author":{"gitId":"-"},"content":"1. Get all component tests to pass (more info in [_Development Guidelines_ document](development.md))."},{"lineNumber":90,"author":{"gitId":"-"},"content":"1. (Optional) Get all E2E tests to pass."},{"lineNumber":91,"author":{"gitId":"-"},"content":"   It is OK to proceed to the next phase if you have fewer than 5 failing test cases."},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"#### Phase B: Learn"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"In order to contribute effectively, you are advised to learn how to do the various development routines lined out in [the _Development Guidelines_ document](development.md)."},{"lineNumber":96,"author":{"gitId":"-"},"content":"Try your best to be familiar with at least building and testing the application in your local development environment."},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"#### Phase C: Start contributing"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"When you are ready for a real contribution, you are advised to start with an issue labelled [good first issue](https://github.com/TEAMMATES/teammates/issues?q\u003dis:issue+is:open+label:\"good+first+issue\") (but do not do more than one of those), then move on to other issues labelled [help wanted](https://github.com/TEAMMATES/teammates/issues?q\u003dis:issue+is:open+label:\"help+wanted\")."},{"lineNumber":101,"author":{"gitId":"-"},"content":"Steps for fixing an issue are lined out in the [process document](process.md)."},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003e In the event that you cannot find a `good first issue`-labelled issue, you can start with a `help wanted`-labelled issue."},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"#### Important"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"Fixing an issue quickly is not the important thing. In fact, issues given to new contributors are the ones we already know how to fix."},{"lineNumber":108,"author":{"gitId":"-"},"content":"We are more interested to see how you go about fixing the issue. We want to know whether you are systematic and detail-oriented."},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"Take your time to learn and follow the workflow to the letter. Do not skip any steps because you think that step is \"not important\". We are more impressed when you finish an issue in fewer attempts than when you finish it in a shorter time but take many attempts because you were not meticulous enough along the way."},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"## Other resources"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"* [Support request](../.github/SUPPORT.md)"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* [Comprehensive directory of resources, including style guides](../docs/README.md)"}],"authorContributionMap":{"-":113,"samuelfangjw":2}},{"path":"docs/design.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Design"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"- [Architecture](#architecture)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"- [UI Component](#ui-component)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"- [Logic Component](#logic-component)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"- [Storage Component](#storage-component)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"- [Common Component](#common-component)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"- [Test Driver Component](#test-driver-component)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"- [E2E Component](#e2e-component)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"- [Client Component](#client-component)"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Architecture"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"![High Level Architecture](images/highlevelArchitecture.png)"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"TEAMMATES is a Web application that runs on Google App Engine (GAE). Given above is an overview of the main components."},{"lineNumber":17,"author":{"gitId":"-"},"content":"- **UI (Browser)**: The UI seen by users consists of Web pages containing HTML, CSS (for styling) and JavaScript (for client-side interactions such as sorting, input validation, etc.). This UI is a single HTML page generated by Angular framework. The initial page request is sent to the server over HTTP, and requests for data are sent asynchronously with AJAX."},{"lineNumber":18,"author":{"gitId":"-"},"content":"- **UI (Server)**: The entry point for the application back end logic is designed as a REST-ful controller."},{"lineNumber":19,"author":{"gitId":"-"},"content":"- **Logic**: The main logic of the application is in POJOs (Plain Old Java Objects)."},{"lineNumber":20,"author":{"gitId":"-"},"content":"- **Storage**: The storage layer of the application uses the persistence framework provided by **Google Cloud Datastore**, a NoSQL database."},{"lineNumber":21,"author":{"gitId":"-"},"content":"- **Test Driver**: TEAMMATES makes heavy use of automated regression testing. Test data is transmitted using JSON format."},{"lineNumber":22,"author":{"gitId":"-"},"content":"  - `TestNG` is used for Java testing (all levels) and `Jest` for JavaScript unit-testing."},{"lineNumber":23,"author":{"gitId":"-"},"content":"- **E2E**: The E2E (end-to-end) component is used to interact with the application as a whole with Web browsers. Its primary function is for E2E tests."},{"lineNumber":24,"author":{"gitId":"-"},"content":"  - `Selenium (Java)` is used to automate E2E testing with actual Web browsers."},{"lineNumber":25,"author":{"gitId":"-"},"content":"- **Client**: The Client component can connect to the back end directly without using a Web browser. It is used for administrative purposes, e.g. migrating data to a new schema."},{"lineNumber":26,"author":{"gitId":"-"},"content":"- **Common**: The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"The diagram below shows how the code in each component is organized into packages and the dependencies between them."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"![Package Diagram](images/packageDiagram.png)"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"Notes:"},{"lineNumber":33,"author":{"gitId":"-"},"content":"- `[logic] - [ui::website] - [ui::webapi]` represent an application of `Model-View-Controller` pattern."},{"lineNumber":34,"author":{"gitId":"-"},"content":"  - `ui::website` is not a real package; it is a conceptual package representing the front-end of the application."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"## UI Component"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"The diagram below shows the object structure of the UI component."},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"![UI Component](images/UiComponent.png)"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"Notes:"},{"lineNumber":43,"author":{"gitId":"-"},"content":"- `ui::website` is not a Java package. It is written in Angular framework and consists of HTML, SCSS, and TypeScript files. The framework will build those files into HTML, CSS and JavaScript files ready to be used by standard Web browsers."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"The UI component is the first stop for 99% of all requests that are received by the application."},{"lineNumber":46,"author":{"gitId":"-"},"content":"Such a request will go through the following steps:"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Request received by the GAE server."},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Custom filters are applied according to the order specified in `web.xml`, e.g. `OriginCheckFilter`."},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. Request forwarded to a `*Servlet` object as specified in `web.xml` for further processing, depending on the type of request."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"There are two general types of requests: user-invoked requests and automated (GAE server-invoked) requests, which are processed differently."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"### User-invoked requests"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"User-invoked requests are all requests made by the users of the application, typically from the Web browser (i.e. by navigating to a particular URL of the application)."},{"lineNumber":57,"author":{"gitId":"-"},"content":"The request will be processed as follows:"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"![UI Workflow](images/UiWorkflow.png)"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"The initial request for the web page will be processed as follows:"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Request forwarded to `WebPageServlet`."},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. `WebPageServlet` returns the built single web page (`index.html`)."},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. The browser will render the page and execute the page scripts, most of the time requiring AJAX requests to the server."},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"Subsequent AJAX requests sent to the server will be processed as follows:"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. Request forwarded to the `WebApiServlet`."},{"lineNumber":70,"author":{"gitId":"-"},"content":"1. `WebApiServlet` uses the `ActionFactory` to generate the matching `Action` object, e.g. `GetFeedbackSessionsAction`."},{"lineNumber":71,"author":{"gitId":"-"},"content":"1. `WebApiServlet` executes the action."},{"lineNumber":72,"author":{"gitId":"-"},"content":"   1. The `Action` object checks the access rights of the user. If the action is allowed, it will be performed, interacting with the `Logic` component as necessary."},{"lineNumber":73,"author":{"gitId":"-"},"content":"   1. The `Action` packages and processes the result into an `ActionResult` object. The most common format is `JsonResult` (requests for obtaining data or processing existing data) and other formats are defined as necessary, e.g. `ImageResult` (e.g. profile pictures)."},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. `WebApiServlet` sends the result back to the browser which will then process it on the front-end."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"Requests for static asset files (e.g. CSS, JS files, images) are served directly without going through `web.xml` configuration at all."},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"The Web API is protected by two layers of access control check:"},{"lineNumber":79,"author":{"gitId":"-"},"content":"- Origin check: This mitigates [CSRF attack](https://owasp.org/www-community/attacks/csrf)."},{"lineNumber":80,"author":{"gitId":"-"},"content":"- Authentication and authorization check: This checks if the logged in user (or lack thereof) has sufficient privileges to trigger the API\u0027s actions."},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"Special keys (`csrf key` and `backdoor key`) can be used to bypass each of the checks, typically for testing purpose. Those keys are strings known only to the person who deployed the application (typically, the administrator)."},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Automated requests"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"Automated requests are all requests sent automatically by the GAE server during specific periods of time."},{"lineNumber":87,"author":{"gitId":"-"},"content":"This type of request will be processed as follows:"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"1. The source of the request will be checked for administrator privilege. If this privilege is absent (e.g. non-administrator users trying to invoke the automated actions), the request will be dropped and a `403 Forbidden` status will be returned."},{"lineNumber":90,"author":{"gitId":"-"},"content":"   - Requests generated by the GAE server are equipped with this privilege."},{"lineNumber":91,"author":{"gitId":"-"},"content":"   - Administrators can manually invoke these requests; this is particularly useful in testing the actions associated with those requests."},{"lineNumber":92,"author":{"gitId":"-"},"content":"1. Request forwarded to the `WebApiServlet` and subsequent actions are the same as user-invoked AJAX requests."},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"GAE server sends such automated requests through two different configurations:"},{"lineNumber":95,"author":{"gitId":"-"},"content":"- Cron jobs: These are jobs that are automatically scheduled for a specified period of time, e.g. scheduling feedback session opening reminders. It is configured in `cron.yaml`."},{"lineNumber":96,"author":{"gitId":"-"},"content":"- Task queue workers: These are hybrids of user-invoked and GAE-invoked in that they are queued by users (i.e. users request for the tasks to be added to queue), but executed by GAE (i.e. GAE determines when and which tasks in the queue are executed at any point of time). This is typically used for tasks that may take a long time to finish and might be blocking user\u0027s interaction. It is configured in `queue.yaml` as well as the `TaskQueue` nested class of the [Const](../src/main/java/teammates/common/util/Const.java) class."},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Template Method pattern"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"- Since the high-level workflow of processing a request is same for any request (differing by the two request types only), we use the [Template Method pattern](http://en.wikipedia.org/wiki/Template_method_pattern) to abstract the process flow into the `Action` classes."},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Policies"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"On designing API endpoints (for AJAX requests):"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"- Design endpoints for resources. For example, `FeedbackSession` is a resource. The corresponding endpoint is `/session`. We use `GET`, `POST`, `PUT`, `DELETE` HTTP methods to get, create, update and delete the resource respectively."},{"lineNumber":107,"author":{"gitId":"-"},"content":"- Prefer multiple REST calls over single RPC (Remote Procedure Call) calls."},{"lineNumber":108,"author":{"gitId":"-"},"content":"  - Reason 1: REST paradigm promotes reuse of many business logic and is not dependent of the structure of the requesting web page (or any other type of requesting agent)."},{"lineNumber":109,"author":{"gitId":"-"},"content":"  - Reason 2: Multiple REST calls can be parallelized which will improve performance."},{"lineNumber":110,"author":{"gitId":"-"},"content":"- Separate access control logic and execution logic completely."},{"lineNumber":111,"author":{"gitId":"-"},"content":"  - In the case that an endpoint serves multiple purposes, we use `Intent` to distinguish the intent for the request. For example, instructors can access `/session` with intent `INSTRUCTOR_SUBMISSION` or `FULL_DETAIL`. Some `Intent` will naturally require stricter access rights."},{"lineNumber":112,"author":{"gitId":"-"},"content":"- Prefer HTTP request body over URL parameters (key-value) to contain data for `POST` and `PUT` requests."},{"lineNumber":113,"author":{"gitId":"-"},"content":"  - Reason 1: The URL parameters are used to identify a specific resource for an endpoint, not what should be done to them."},{"lineNumber":114,"author":{"gitId":"-"},"content":"  - Reason 2: Request body is not limited to key-value format which allows proper design and validation."},{"lineNumber":115,"author":{"gitId":"-"},"content":"  - Data Transfer Objects (DTOs) which represent different API requests and responses are defined in `request` and `output` package respectively."},{"lineNumber":116,"author":{"gitId":"-"},"content":"- Preprocess data sent/received by the server to hide complexities. For example, timestamp is passed as UNIX epoch milliseconds in the output while it is represented as `Instant` in the back-end."},{"lineNumber":117,"author":{"gitId":"-"},"content":"  - Some constructors in the `output` package contain logic to hide \"hacks\" in the backend."},{"lineNumber":118,"author":{"gitId":"-"},"content":"  - Some getters/setters in the `request` package contain logic to cater the conventions in the backend."},{"lineNumber":119,"author":{"gitId":"-"},"content":"  - Some fields are required be hidden in the API response, mostly for data privacy purposes. Whenever required, there should be methods in the request output objects catered for this."},{"lineNumber":120,"author":{"gitId":"-"},"content":"- API endpoints should not be concerned with how data is presented."},{"lineNumber":121,"author":{"gitId":"-"},"content":"  - Case study 1: some endpoint will pass timezone information via two information: timezone ID and UNIX epoch milliseconds. It is up to the front-end on how to make use of those two pieces of information."},{"lineNumber":122,"author":{"gitId":"-"},"content":"  - Case study 2: CSV file for session result or student list is just a different way of presenting the same information in the web page. Due to this, when downloading CSV, the web page will request the same information as that used when displaying in web page and do the necessary conversion to CSV."},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"On data exchange between front-end and back-end:"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"- Back-end is the single source of truth for all data format and the code used by front-end is generated from this."},{"lineNumber":127,"author":{"gitId":"-"},"content":"  - Some important constants (including API endpoints information) are synced to `api-const.ts`."},{"lineNumber":128,"author":{"gitId":"-"},"content":"  - The schemas of the DTOs defined in `output` and `request` packages are synced to `api-output.ts` and `api-request.ts` in the frontend."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"On handling exceptions:"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"- The UI component is responsible for catching all exceptions and transforming them to properly formed, user-friendly output format. It includes the status message shown to user as well as the HTTP status code."},{"lineNumber":133,"author":{"gitId":"-"},"content":"  - As a consequence, the UI component cannot throw any exception, because there is no layer which will catch those exceptions if it does."},{"lineNumber":134,"author":{"gitId":"-"},"content":"- In order to streamline the process, custom runtime exception classes which correspond to different HTTP status codes are used. For example, there is `EntityNotFoundException` which corresponds to HTTP 404, `UnauthorizedAccessException` which corresponds to HTTP 403, etc."},{"lineNumber":135,"author":{"gitId":"-"},"content":"  - It is highly preferred to throw these custom exceptions instead of setting the HTTP status manually in the action class, as the API layer has been configured to automatically log the exception and assign the correct status code to the HTTP response."},{"lineNumber":136,"author":{"gitId":"-"},"content":"- All `4XX` responses must be accompanied with logging at `warning` level or above. `5XX` responses must be accompanied with `severe` level logging."},{"lineNumber":137,"author":{"gitId":"-"},"content":"  - `502` (Bad Gateway) responses may skip the `severe` level logging if the upstream components (where the error happened) already did the `severe` level logging."},{"lineNumber":138,"author":{"gitId":"-"},"content":"- We use the HTTP status codes as close to their standard definition in [RFC7231](https://tools.ietf.org/html/rfc7231) as possible."},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"## Logic Component"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Logic` component handles the business logic of TEAMMATES. In particular, it is responsible for:"},{"lineNumber":143,"author":{"gitId":"-"},"content":"- Managing relationships between entities, e.g. cascade logic for create/update/delete."},{"lineNumber":144,"author":{"gitId":"-"},"content":"- Managing transactions, e.g. ensuring atomicity of a transaction."},{"lineNumber":145,"author":{"gitId":"-"},"content":"- Sanitizing input values received from the UI component."},{"lineNumber":146,"author":{"gitId":"-"},"content":"- Connecting to GCP or third-party services, e.g. for adding tasks to the task queue and for sending emails with third-party providers."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"![Logic Component](images/LogicComponent.png)"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":151,"author":{"gitId":"-"},"content":"- **`logic.api`**: Provides the API of the component to be accessed by the UI."},{"lineNumber":152,"author":{"gitId":"-"},"content":"- **`logic.core`**: Contains the core logic of the system."},{"lineNumber":153,"author":{"gitId":"fsgmhoward"},"content":"- **`logic.external`**: Holds the logic of external services such as task queue service."},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"### Logic API"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"Represented by these classes:"},{"lineNumber":158,"author":{"gitId":"-"},"content":"- `Logic`: A [Facade class](http://en.wikipedia.org/wiki/Facade_pattern) which connects to the several `*Logic` classes to handle the logic related to various types of data and to access data from the `Storage` component."},{"lineNumber":159,"author":{"gitId":"-"},"content":"- `UserProvision`: Retrieves user information (based on request cookies)."},{"lineNumber":160,"author":{"gitId":"-"},"content":"- `EmailGenerator`: Generates emails to be sent."},{"lineNumber":161,"author":{"gitId":"-"},"content":"- `EmailSender`: Sends email with the provider chosen based on the build configuration."},{"lineNumber":162,"author":{"gitId":"-"},"content":"- `TaskQueuer`: Adds tasks to the task queue, i.e. to be executed at a later time."},{"lineNumber":163,"author":{"gitId":"-"},"content":"- `FileStorage`: Manages CRUD of binary files such as profile pictures."},{"lineNumber":164,"author":{"gitId":"-"},"content":"- `LogsProcessor`: For more advanced usage of logging that cannot be captured by the standard logger class."},{"lineNumber":165,"author":{"gitId":"fsgmhoward"},"content":"- `RecaptchaVerifier`: For verification of the reCAPTCHA token."},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"Many classes in this layer make use of proxy pattern, i.e. they only connect to production services such as Google Cloud Storage in the staging/production server."},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Policies"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"Access control:"},{"lineNumber":172,"author":{"gitId":"-"},"content":"+ Although this component provides methods that are relevant to access control (e.g. providing user information), the access control check itself does not happen in this component. The UI is expected to check access control (using `GateKeeper` class) before calling a method in the logic component."},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"API for creating entities:"},{"lineNumber":175,"author":{"gitId":"-"},"content":"+ Null parameters: Causes an assertion failure."},{"lineNumber":176,"author":{"gitId":"-"},"content":"+ Invalid parameters: Throws `InvalidParametersException`."},{"lineNumber":177,"author":{"gitId":"-"},"content":"+ Entity already exists: Throws `EntityAlreadyExistsException` (escalated from Storage level)."},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"API for retrieving entities:"},{"lineNumber":180,"author":{"gitId":"-"},"content":"+ Attempting to retrieve objects using `null` parameters: Causes an assertion failure."},{"lineNumber":181,"author":{"gitId":"-"},"content":"+ Entity not found:"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  - Returns `null` if the target entity not found. This way, read operations can be used easily for checking the existence of an entity."},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"API for updating entities:"},{"lineNumber":185,"author":{"gitId":"-"},"content":"+ Update is done using `*UpdateOptions` inside every `*Attributes`. The `UpdateOptions` will specify what is used to identify the entity to update and what will be updated."},{"lineNumber":186,"author":{"gitId":"-"},"content":"+ Entity not found: Throws `EntityDoesNotExistException`."},{"lineNumber":187,"author":{"gitId":"-"},"content":"+ Invalid parameters: Throws `InvalidParametersException`."},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"API for deleting entities:"},{"lineNumber":190,"author":{"gitId":"-"},"content":"+ FailDeleteSilentlyPolicy: In general, delete operation do not throw exceptions if the target entity does not exist. This is because if it does not exist, it is as good as deleted."},{"lineNumber":191,"author":{"gitId":"-"},"content":"+ Cascade policy:   When a parent entity is deleted, entities that have referential integrity with the deleted entity should also be deleted."},{"lineNumber":192,"author":{"gitId":"-"},"content":"  Refer to the API for the cascade logic."},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"## Storage Component"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"The `Storage` component performs CRUD (Create, Read, Update, Delete) operations on data entities individually."},{"lineNumber":197,"author":{"gitId":"-"},"content":"It contains minimal logic beyond what is directly relevant to CRUD operations."},{"lineNumber":198,"author":{"gitId":"-"},"content":"In particular, it is reponsible for:"},{"lineNumber":199,"author":{"gitId":"-"},"content":"- Validating data inside entities before creating/updating them, to ensure they are in a valid state."},{"lineNumber":200,"author":{"gitId":"-"},"content":"- Hiding the complexities of the database from the `Logic` component. "},{"lineNumber":201,"author":{"gitId":"-"},"content":"- Hiding the persistable objects: Classes in the `storage::entity` package are not visible outside this component to hide information specific to data persistence."},{"lineNumber":202,"author":{"gitId":"-"},"content":"  - Instead, a corresponding non-persistent [data transfer object](http://en.wikipedia.org/wiki/Data_transfer_object) named `*Attributes` (e.g., `CourseAttributes` is the data transfer object for `Course` entities) object is returned. These datatransfer classes are in `common::datatransfer` package, to be explained later."},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `Storage` component does not perform any cascade delete/create operations. Cascade logic is handled by the `Logic` component."},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"![Storage Component](images/StorageComponent.png)"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":209,"author":{"gitId":"-"},"content":"- **`storage.api`**: Provides the API of the component to be accessed by the logic component."},{"lineNumber":210,"author":{"gitId":"-"},"content":"- **`storage.entity`**: Classes that represent persistable entities."},{"lineNumber":211,"author":{"gitId":"-"},"content":"- **`storage.search`**: Classes for dealing with searching and indexing."},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"![Storage ER Diagram](images/StorageClassDiagram.png)"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"Note that the navigability of the association links between entity objects appear to be in the reverse direction of what we see in a normal OOP design."},{"lineNumber":216,"author":{"gitId":"-"},"content":"This is because we want to keep the data schema flexible so that new entity types can be added later with minimal modifications to existing elements."},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Storage API"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"Represented by the `*Db` classes. These classes act as the bridge to the database."},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Policies"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"Add and Delete operations try to wait until data is persisted in the database before returning. This is not enough to compensate for eventual consistency involving multiple servers in the Google Cloud Datastore environment. However, it is expected to avoid test failures caused by eventual consistency in dev server and reduce such problems in the live server."},{"lineNumber":225,"author":{"gitId":"-"},"content":"Note: \u0027Eventual consistency\u0027 here means it takes some time for a database operation to propagate across all replicas of the Google Cloud Datastore. As a result, the data may be in an inconsistent states for short periods of time although things should become consistent \u0027eventually\u0027. For example, an object we deleted may appear to still exist for a short while."},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"Implementation of Transaction Control has been minimized due to limitations of Google Cloud Datastore environment and the nature of our data schema."},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"API for creating:"},{"lineNumber":230,"author":{"gitId":"-"},"content":"+ Attempt to create an entity that already exists: Throws `EntityAlreadyExistsException`."},{"lineNumber":231,"author":{"gitId":"-"},"content":"+ Attempt to create an entity with invalid data: Throws `InvalidParametersException`."},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"API for retrieving:"},{"lineNumber":234,"author":{"gitId":"-"},"content":"+ Attempt to retrieve an entity that does not exist: Returns `null`."},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"API for updating:"},{"lineNumber":237,"author":{"gitId":"-"},"content":"+ Attempt to update an entity that does not exist: Throws `EntityDoesNotExistException`."},{"lineNumber":238,"author":{"gitId":"-"},"content":"+ Attempt to update an entity with invalid data: Throws `InvalidParametersException`."},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"API for deleting:"},{"lineNumber":241,"author":{"gitId":"-"},"content":"+ Attempt to delete an entity that does not exist: Fails silently."},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"## Common Component"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"The Common component contains common utilities used across TEAMMATES."},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"![Common Component](images/CommonComponent.png)"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":250,"author":{"gitId":"-"},"content":"- **`common.util`**: Contains utility classes."},{"lineNumber":251,"author":{"gitId":"-"},"content":"- **`common.exceptions`**: Contains custom exceptions."},{"lineNumber":252,"author":{"gitId":"-"},"content":"- **`common.datatransfer`**: Contains data transfer objects."},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"`common.datatransfer` package contains lightweight \"data transfer object\" classes for transferring data among components. They can be combined in various ways to transfer structured data between components. Given below are three examples."},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"![Data Transfer Classes](images/dataTransferClasses.png)"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"1. `Test Driver` can use the `DataBundle` in this manner to send an arbitrary number of objects to be persisted in the database."},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. This structure can be used to transfer search results of a student or instructor or response comments."},{"lineNumber":260,"author":{"gitId":"-"},"content":"1. This structure can be used to send results of a feedback session (e.g., when showing a feedback session report to an instructor)."},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"Some of these classes are methodless (and thus more of a data structure rather than a class); these classes use public variables for data for easy access."},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"## Test Driver Component"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"This component automates the testing of TEAMMATES."},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"![Test Driver Component](images/TestDriverComponent.png)"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"The test driver component\u0027s package structure follows the corresponding production package structure\u0027s exactly,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"e.g. `teammates.logic.core.*` will contain the test cases for the production code inside `teammates.logic.core` package."},{"lineNumber":272,"author":{"gitId":"-"},"content":"In the same spirit, for the front end, each `*.component.ts` will have the corresponding `*.component.spec.ts` in the same folder (similarly for `*.service.ts`, `*.pipe.ts`, etc.)."},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"The test driver component introduces the following additional packages:"},{"lineNumber":275,"author":{"gitId":"-"},"content":"- **`architecture`**: Contains test cases used by one of the lint tools to check for architectural integrity."},{"lineNumber":276,"author":{"gitId":"-"},"content":"- **`test`**: Contains infrastructure and helpers needed for running the tests. Also contains the test cases for the said infrastructure/helpers."},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"Notes:"},{"lineNumber":279,"author":{"gitId":"-"},"content":"- Component tests: Some of these are pure unit tests (i.e. testing one component in isolation) while others are integration tests that test units as well as integration of units with each other."},{"lineNumber":280,"author":{"gitId":"-"},"content":"- Front-end files (particularly TypeScript) are tested separately with `Jest`. The test cases are found in `*.spec.ts` files."},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"This is how TEAMMATES testing maps to standard types of testing."},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"```"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Normal"},{"lineNumber":286,"author":{"gitId":"-"},"content":"|-----acceptance tests-----|-------------------system tests-------------------|-----integration tests-----|-----unit tests-----|"},{"lineNumber":287,"author":{"gitId":"-"},"content":"|--------manual testing--------|------automated E2E tests------|-------------------automated component tests-------------------|"},{"lineNumber":288,"author":{"gitId":"-"},"content":"TEAMMATES"},{"lineNumber":289,"author":{"gitId":"-"},"content":"```"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"## E2E Component"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser (as a whole application) or REST API calls (for the back-end logic). Its primary function is for E2E tests."},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"![E2E Component](images/E2EComponent.png)"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"- **`e2e.util`**: Contains helpers needed for running E2E tests. Also contains the test cases for the said infrastructure/helpers."},{"lineNumber":300,"author":{"gitId":"-"},"content":"- **`e2e.pageobjects`**: Contains abstractions of the pages as they appear on a Browser (i.e. SUTs)."},{"lineNumber":301,"author":{"gitId":"-"},"content":"- **`e2e.cases`**: Contains system test cases for testing the application as a whole."},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Client Component"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics."},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"![Client Component](images/ClientComponent.png)"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"- **`client.util`**: Contains helpers needed for client scripts."},{"lineNumber":312,"author":{"gitId":"-"},"content":"- **`client.connector`**: Classes needed to connect to the back end directly."},{"lineNumber":313,"author":{"gitId":"-"},"content":"- **`client.scripts`**: Scripts that deal with the back end data for administrative purposes."}],"authorContributionMap":{"fsgmhoward":2,"-":311}},{"path":"docs/e2e-testing.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# E2E Testing  "},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"* [What is E2E Testing](#what-is-e2e-testing)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"* [Running E2E Tests](#running-e2e-tests)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    * [Configuring browsers for E2E Testing](#configuring-browsers-for-e2e-testing)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    * [Running the tests](#running-the-tests)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    * [Testing against production server](#testing-against-production-server)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [Creating E2E Tests](#creating-e2e-tests)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    * [Page Object Pattern](#page-object-pattern)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    * [Creating Page Objects](#creating-page-objects)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    * [Things to avoid when writing E2E tests](#things-to-avoid-when-writing-e2e-tests)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    * [FAQ](#faq)"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  "},{"lineNumber":14,"author":{"gitId":"-"},"content":"## What is E2E Testing?"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  "},{"lineNumber":16,"author":{"gitId":"-"},"content":"E2E (End-to-end) testing is a testing methodology where the objective is to test the application as a whole.   "},{"lineNumber":17,"author":{"gitId":"-"},"content":"- It aims to ensure all integrated components of the application work together as expected when it is being used by the end user.   "},{"lineNumber":18,"author":{"gitId":"-"},"content":"- This is done by simulating user scenarios on the fully built product.  "},{"lineNumber":19,"author":{"gitId":"-"},"content":"  "},{"lineNumber":20,"author":{"gitId":"-"},"content":"E2E tests in TEAMMATES can be found in the package `teammates.e2e`. "},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Running E2E tests"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"### Configuring browsers for E2E Testing"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"TEAMMATES E2E testing requires Firefox, Chrome, or Edge (Chromium-based)."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before running tests, modify `src/e2e/resources/test.properties` if necessary, e.g. to configure which browser and test accounts to use."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"#### Using Firefox"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"* You need to use geckodriver for testing with Firefox."},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Download the latest stable geckodriver from [here](https://github.com/mozilla/geckodriver/releases)."},{"lineNumber":34,"author":{"gitId":"-"},"content":"    The site will also inform the versions of Firefox that can be used with the driver."},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Specify the path to the geckodriver executable in `test.geckodriver.path` value in `test.properties`."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"* If you want to use a Firefox version other than your computer\u0027s default, specify the custom path in `test.firefox.path` value in `test.properties`."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"* If the test suite or any test leaves the browser open (e.g. due to failure), you will have a dangling geckodriver process.\u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  You may want to manually kill these processes after the tests are done."},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * On Windows, use the Task Manager or `taskkill /f /im geckodriver.exe` command."},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * On OS X, use the Activity Monitor or `sudo killall geckodriver` command."},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"#### Using Chrome"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"* You need to use chromedriver for testing with Chrome."},{"lineNumber":47,"author":{"gitId":"-"},"content":"  * Download the latest stable chromedriver from [here](https://sites.google.com/a/chromium.org/chromedriver/downloads)."},{"lineNumber":48,"author":{"gitId":"-"},"content":"    The site will also inform the versions of Chrome that can be used with the driver."},{"lineNumber":49,"author":{"gitId":"-"},"content":"  * Specify the path to the chromedriver executable in `test.chromedriver.path` value in `test.properties`."},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"* If the test suite or any test leaves the browser open (e.g. due to failure), you will have a dangling chromedriver process.\u003cbr\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  You may want to manually kill these processes after the tests are done."},{"lineNumber":53,"author":{"gitId":"-"},"content":"  * On Windows, use the Task Manager or `taskkill /f /im chromedriver.exe` command."},{"lineNumber":54,"author":{"gitId":"-"},"content":"  * On OS X, use the Activity Monitor or `sudo killall chromedriver` command."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"#### Using Edge"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"Only modern Edge (Chromium-based) is supported."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"* You need to use edgedriver for testing with Edge."},{"lineNumber":61,"author":{"gitId":"-"},"content":"  * Download the latest stable edgedriver from [here](https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/)."},{"lineNumber":62,"author":{"gitId":"-"},"content":"    The site will also inform the versions of Edge that can be used with the driver."},{"lineNumber":63,"author":{"gitId":"-"},"content":"  * Specify the path to the edgedriver executable in `test.edgedriver.path` value in `test.properties`."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If the test suite or any test leaves the browser open (e.g. due to failure), you will have a dangling edgedriver process.\u003cbr\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  You may want to manually kill these processes after the tests are done."},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * On Windows, use the Task Manager or `taskkill /f /im msedgedriver.exe` command."},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * On OS X, use the Activity Monitor or `sudo killall msedgedriver` command."},{"lineNumber":69,"author":{"gitId":"-"},"content":" "},{"lineNumber":70,"author":{"gitId":"-"},"content":"### Running the tests"},{"lineNumber":71,"author":{"gitId":"-"},"content":"E2E tests follow this configuration:"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"Test suite | Command | Results can be viewed in"},{"lineNumber":74,"author":{"gitId":"-"},"content":"---|---|---"},{"lineNumber":75,"author":{"gitId":"-"},"content":"`E2E tests` | `./gradlew e2eTests` | `{project folder}/build/reports/e2e-test-try-{n}/index.html`, where `{n}` is the sequence number of the test run"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Any individual E2E test | `./gradlew e2eTestTry1 --tests TestClassName` | `{project folder}/build/reports/e2e-test-try-1/index.html`"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"- `E2E tests` will be run in their entirety once and the failed tests will be re-run a few times. "},{"lineNumber":79,"author":{"gitId":"-"},"content":"- Before running `E2E tests`, it is important to have the dev server running locally first if you are testing against it."},{"lineNumber":80,"author":{"gitId":"-"},"content":"- When running the test cases, a few cases may fail (this can happen due to timing issues). They can be re-run until they pass without affecting the accuracy of the tests."},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"### Testing against production server"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"If you are testing against a production server (staging server or live server), some additional tasks need to be done."},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. Edit `src/e2e/resources/test.properties` as instructed is in its comments."},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * In particular, you will need a legitimate Gmail account to be used for testing."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"1. If you are testing email sending, you need to setup a `Gmail API` as follows:"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * [Obtain a Gmail API credentials](https://github.com/TEAMMATES/teammates-ops/blob/master/platform-guide.md#setting-up-gmail-api-credentials) and download it."},{"lineNumber":91,"author":{"gitId":"-"},"content":"   * Copy the file to `src/e2e/resources/gmail-api` (create the `gmail-api` folder) of your project and rename it to `client_secret.json`."},{"lineNumber":92,"author":{"gitId":"-"},"content":"   * It is also possible to use the Gmail API credentials from any other Google Cloud Platform project for this purpose."},{"lineNumber":93,"author":{"gitId":"-"},"content":"   * Run `EmailAccountTest` to confirm that the setup works. For the first run, it is expected that you will need to grant access from the test Gmail account to the above API."},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. Run the full test suite or any subset of it as how you would have done it in dev server. "},{"lineNumber":96,"author":{"gitId":"-"},"content":"   * Do note that the GAE daily quota is usually not enough to run the full test suite, in particular for accounts with no billing enabled."},{"lineNumber":97,"author":{"gitId":"-"},"content":"   "},{"lineNumber":98,"author":{"gitId":"-"},"content":"## Creating E2E tests"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  "},{"lineNumber":100,"author":{"gitId":"-"},"content":"As E2E tests should be written from the end user perspective, each test case should reflect some user workflow.   "},{"lineNumber":101,"author":{"gitId":"-"},"content":"  "},{"lineNumber":102,"author":{"gitId":"-"},"content":"In TEAMMATES, E2E test cases are organized by page. For each page, we:  "},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. Identify the important user workflows  "},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. Simulate the user actions involved in the workflow by interacting with the UI elements.  "},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. Assert the expected conditions are present after the interaction.  "},{"lineNumber":106,"author":{"gitId":"-"},"content":"  "},{"lineNumber":107,"author":{"gitId":"-"},"content":"[Selenium](https://www.selenium.dev/) is used to locate and interact with elements in the UI.   "},{"lineNumber":108,"author":{"gitId":"-"},"content":"  "},{"lineNumber":109,"author":{"gitId":"-"},"content":"All E2E test classes inherit from `BaseE2ETestCase` which contains methods that are common to most test cases, such as preparing the `Browser` object used for testing.   "},{"lineNumber":110,"author":{"gitId":"-"},"content":"  "},{"lineNumber":111,"author":{"gitId":"-"},"content":"To help verify the state of the database, `BackDoor` contains methods to create API calls to the back-end without going through the UI. "},{"lineNumber":112,"author":{"gitId":"-"},"content":"  "},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Page Object Pattern"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  "},{"lineNumber":115,"author":{"gitId":"-"},"content":"In order to make E2E testing more robust to UI changes, the [Page Object Pattern](https://martinfowler.com/bliki/PageObject.html) is adopted.  "},{"lineNumber":116,"author":{"gitId":"-"},"content":"  "},{"lineNumber":117,"author":{"gitId":"-"},"content":"Each page in TEAMMATES is represented by a page object class. The page object class abstracts interactions with UI elements and only exposes the functionality of each page as methods.   "},{"lineNumber":118,"author":{"gitId":"-"},"content":"- This way only the page object classes require updating when there are UI changes  "},{"lineNumber":119,"author":{"gitId":"-"},"content":"- Without Page Object Pattern, all test cases that use the changed UI element would require updating  "},{"lineNumber":120,"author":{"gitId":"-"},"content":"  "},{"lineNumber":121,"author":{"gitId":"-"},"content":"To maximise the effectiveness of Page Object Pattern, interaction with UI elements should not occur outside the page objects.   "},{"lineNumber":122,"author":{"gitId":"-"},"content":"  "},{"lineNumber":123,"author":{"gitId":"-"},"content":"  "},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Creating Page Objects"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  "},{"lineNumber":126,"author":{"gitId":"-"},"content":"The page object should have methods to represent the main functionality of the page that testers can use to simulate user actions.   "},{"lineNumber":127,"author":{"gitId":"-"},"content":"- The public methods for page objects should avoid exposing the UI elements it interacts with and instead focus on the functionality of the webpage.   "},{"lineNumber":128,"author":{"gitId":"-"},"content":"- For example, instead of having methods like `fillSearchBox` and `clickSearchButton`, it is better to have a method `searchForInstructor` which hides the UI elements used.    "},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"All Page Object classes inherit from `AppPage` which contains methods that are common for interacting with the web elements such as filling in textboxes.   "},{"lineNumber":131,"author":{"gitId":"-"},"content":"  "},{"lineNumber":132,"author":{"gitId":"-"},"content":"  "},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Things to avoid when writing E2E tests"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  "},{"lineNumber":135,"author":{"gitId":"-"},"content":"1. **Testing based on implementation** - The focus should be on user actions instead of implementation details. Therefore, black box testing should be adopted and test cases should be designed around use cases.   "},{"lineNumber":136,"author":{"gitId":"-"},"content":"1. **Excessive exception testing** - Testing edge cases with E2E tests should be avoided. This is because E2E tests are expensive to run and not that effective for isolating bugs. Hence we should focus on the happy path and exception paths that are more common. We should leave more exhaustive testing to lower-level unit or integration tests.   "},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"1. **Not following \"Tell Don\u0027t Ask\" Principle** - Instead of \"asking\" for data from the page objects and performing operations on them, \"tell\" the page object to do the operations. This is mostly seen in the verification methods where assertions are done in the page object instead of in the test case. This improves readability and maintainability as data and behavior are placed together.  "},{"lineNumber":138,"author":{"gitId":"-"},"content":"  "},{"lineNumber":139,"author":{"gitId":"-"},"content":"### FAQ  "},{"lineNumber":140,"author":{"gitId":"-"},"content":"  "},{"lineNumber":141,"author":{"gitId":"-"},"content":"**Why are all the tests done in one `testAll()` method?**  "},{"lineNumber":142,"author":{"gitId":"-"},"content":"We bundle together everything as one test case instead of having multiple test cases. The advantage is that the time for the whole test class will be reduced because we minimize repetitive per-method setup/teardown. The downside is that it increases the time spent on re-running failed tests as the whole class has to be re-run. We opt for this approach because we expect tests to pass more frequently than to fail.  "},{"lineNumber":143,"author":{"gitId":"-"},"content":"  "},{"lineNumber":144,"author":{"gitId":"-"},"content":"**Why is there one JSON file for each test case?**  "},{"lineNumber":145,"author":{"gitId":"-"},"content":"Each test case has its own JSON file and the data inside has a unique prefix to prevent clashes in the database that may cause test failure, since tests are run concurrently."}],"authorContributionMap":{"-":144,"samuelfangjw":1}},{"path":"src/e2e/java/teammates/e2e/cases/AdminHomePageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.AdminHomePage;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#ADMIN_HOME_PAGE}."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class AdminHomePageE2ETest extends BaseE2ETestCase {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        testData \u003d loadDataBundle(\"/AdminHomePageE2ETest.json\");"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.ADMIN_HOME_PAGE);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AdminHomePage homePage \u003d loginAdminToPage(url, AdminHomePage.class);"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Test adding instructors with both valid and invalid details\");"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String name \u003d \"AHPUiT Instrúctör WithPlusInEmail\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String email \u003d \"AHPUiT+++_.instr1!@gmail.tmt\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String institute \u003d \"TEAMMATES Test Institute 1\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        homePage.queueInstructorForAdding(name, email, institute);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String singleLineDetails \u003d \"Instructor With Invalid Email | invalidemail | TEAMMATES Test Institute 1\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        homePage.queueInstructorForAdding(singleLineDetails);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        homePage.addAllInstructors();"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String successMessage \u003d homePage.getMessageForInstructor(0);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(successMessage.contains("},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \"Instructor \\\"AHPUiT Instrúctör WithPlusInEmail\\\" has been successfully created\"));"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String failureMessage \u003d homePage.getMessageForInstructor(1);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(failureMessage.contains("},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \"\\\"invalidemail\\\" is not acceptable to TEAMMATES as a/an email because it is not in the correct format.\"));"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(BACKDOOR.getAccountRequest(email, institute));"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        BACKDOOR.deleteAccountRequest(email, institute);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Failure case: Instructor is already registered\");"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes registeredAccountRequest \u003d testData.accountRequests.get(\"AHome.instructor1OfCourse1\");"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        homePage.queueInstructorForAdding(registeredAccountRequest.getName(),"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                registeredAccountRequest.getEmail(), registeredAccountRequest.getInstitute());"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        homePage.addAllInstructors();"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        failureMessage \u003d homePage.getMessageForInstructor(2);"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(failureMessage.contains(\"Cannot create account request as instructor has already registered.\"));"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Success case: Reset account request\");"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        homePage.clickMoreInfoButtonForRegisteredInstructor(2);"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        homePage.clickResetAccountRequestLink();"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        successMessage \u003d homePage.getMessageForInstructor(2);"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(successMessage.contains("},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                \"Instructor \\\"\" + registeredAccountRequest.getName() + \"\\\" has been successfully created\"));"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(BACKDOOR.getAccountRequest("},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                registeredAccountRequest.getEmail(), registeredAccountRequest.getInstitute()).getRegisteredAt());"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":46,"samuelfangjw":29}},{"path":"src/e2e/java/teammates/e2e/cases/AdminSearchPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.AdminSearchPage;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#ADMIN_SEARCH_PAGE}."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AdminSearchPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (!TestProperties.INCLUDE_SEARCH_TESTS) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/AdminSearchPageE2ETest.json\");"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        putDocuments(testData);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!TestProperties.INCLUDE_SEARCH_TESTS) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.ADMIN_SEARCH_PAGE);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AdminSearchPage searchPage \u003d loginAdminToPage(url, AdminSearchPage.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d testData.students.get(\"student1InCourse1\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AccountAttributes studentAccount \u003d testData.accounts.get(\"student1InCourse1\");"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d testData.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AccountAttributes instructorAccount \u003d testData.accounts.get(\"instructor1OfCourse1\");"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d testData.accountRequests.get(\"instructor1OfCourse1\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: Search student email\");"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String searchContent \u003d student.getEmail();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        searchPage.inputSearchContent(searchContent);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        searchPage.clickSearchButton();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String studentDetails \u003d getExpectedStudentDetails(student);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String studentManageAccountLink \u003d getExpectedStudentManageAccountLink(student);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String studentHomePageLink \u003d getExpectedStudentHomePageLink(student);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        int numExpandedRows \u003d getExpectedNumExpandedRows(student);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        searchPage.verifyStudentRowContent(student, studentAccount, studentDetails, studentManageAccountLink,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                studentHomePageLink);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        searchPage.verifyStudentExpandedLinks(student, numExpandedRows);"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: Reset student google id\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        searchPage.resetStudentGoogleId(student);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        student.setGoogleId(null);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        studentManageAccountLink \u003d getExpectedStudentManageAccountLink(student);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        studentHomePageLink \u003d getExpectedStudentHomePageLink(student);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        searchPage.verifyStudentRowContent(student, studentAccount, studentDetails, studentManageAccountLink,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                studentHomePageLink);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: Regenerate registration key for a course student\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        searchPage.clickExpandStudentLinks();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String originalJoinLink \u003d searchPage.getStudentJoinLink(student);"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        searchPage.regenerateStudentKey(student);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        searchPage.verifyRegenerateStudentKey(student, originalJoinLink);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        searchPage.waitForPageToLoad();"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: Search for instructor email\");"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        searchPage.clearSearchBox();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        searchContent \u003d instructor.getEmail();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        searchPage.inputSearchContent(searchContent);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        searchPage.clickSearchButton();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String instructorManageAccountLink \u003d getExpectedInstructorManageAccountLink(instructor);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String instructorHomePageLink \u003d getExpectedInstructorHomePageLink(instructor);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        searchPage.verifyInstructorRowContent(instructor, instructorAccount, instructorManageAccountLink,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                instructorHomePageLink);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        searchPage.verifyInstructorExpandedLinks(instructor);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: Reset instructor google id\");"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        searchPage.resetInstructorGoogleId(instructor);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        instructor.setGoogleId(null);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        instructorManageAccountLink \u003d getExpectedInstructorManageAccountLink(instructor);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        instructorHomePageLink \u003d getExpectedInstructorHomePageLink(instructor);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        searchPage.verifyInstructorRowContent(instructor, instructorAccount, instructorManageAccountLink,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                instructorHomePageLink);"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: Regenerate registration key for an instructor\");"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        searchPage.clickExpandInstructorLinks();"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        originalJoinLink \u003d searchPage.getInstructorJoinLink(instructor);"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        searchPage.regenerateInstructorKey(instructor);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        searchPage.verifyRegenerateInstructorKey(instructor, originalJoinLink);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        searchPage.waitForPageToLoad();"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Typical case: Search for account request by email\");"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        searchPage.clearSearchBox();"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        searchContent \u003d accountRequest.getEmail();"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.inputSearchContent(searchContent);"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.clickSearchButton();"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.verifyAccountRequestRowContent(accountRequest);"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.verifyAccountRequestExpandedLinks(accountRequest);"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Typical case: Search common search key\");"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.clearSearchBox();"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        searchContent \u003d \"Course1\";"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        searchPage.inputSearchContent(searchContent);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        searchPage.clickSearchButton();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        searchPage.verifyStudentRowContent(student, studentAccount, studentDetails, studentManageAccountLink,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                studentHomePageLink);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        searchPage.verifyInstructorRowContent(instructor, instructorAccount, instructorManageAccountLink,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                instructorHomePageLink);"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.verifyAccountRequestRowContent(accountRequest);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: Expand and collapse links\");"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.verifyLinkExpansionButtons(student, instructor, accountRequest);"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Typical case: Reset account request successful\");"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        searchContent \u003d accountRequest.getEmail();"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.clearSearchBox();"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.inputSearchContent(searchContent);"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.clickSearchButton();"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.clickResetAccountRequestButton(accountRequest);"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(BACKDOOR.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute()).getRegisteredAt());"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Typical case: Delete account request successful\");"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest \u003d testData.accountRequests.get(\"unregisteredInstructor1\");"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        searchContent \u003d accountRequest.getEmail();"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.clearSearchBox();"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.inputSearchContent(searchContent);"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.clickSearchButton();"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        searchPage.clickDeleteAccountRequestButton(accountRequest);"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(BACKDOOR.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute()));"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private String getExpectedStudentDetails(StudentAttributes student) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return String.format(\"%s [%s] (%s)\", student.getCourse(),"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                student.getSection() \u003d\u003d null ? Const.DEFAULT_SECTION : student.getSection(), student.getTeam());"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private String getExpectedStudentHomePageLink(StudentAttributes student) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return student.isRegistered() ? createFrontendUrl(Const.WebPageURIs.STUDENT_HOME_PAGE)"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .withUserId(student.getGoogleId())"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .toAbsoluteString()"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                : \"\";"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private String getExpectedStudentManageAccountLink(StudentAttributes student) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return student.isRegistered() ? createFrontendUrl(Const.WebPageURIs.ADMIN_ACCOUNTS_PAGE)"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .withParam(Const.ParamsNames.INSTRUCTOR_ID, student.getGoogleId())"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .toAbsoluteString()"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                : \"\";"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private int getExpectedNumExpandedRows(StudentAttributes student) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        int expectedNumExpandedRows \u003d 2;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes sessions : testData.feedbackSessions.values()) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            if (sessions.getCourseId().equals(student.getCourse())) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                expectedNumExpandedRows +\u003d 1;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                if (sessions.getResultsVisibleFromTime().isBefore(Instant.now())) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    expectedNumExpandedRows +\u003d 1;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return expectedNumExpandedRows;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private String getExpectedInstructorHomePageLink(InstructorAttributes instructor) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String googleId \u003d instructor.isRegistered() ? instructor.getGoogleId() : \"\";"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE)"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .withUserId(googleId)"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private String getExpectedInstructorManageAccountLink(InstructorAttributes instructor) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String googleId \u003d instructor.isRegistered() ? instructor.getGoogleId() : \"\";"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return createFrontendUrl(Const.WebPageURIs.ADMIN_ACCOUNTS_PAGE)"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .withParam(Const.ParamsNames.INSTRUCTOR_ID, googleId)"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":159,"samuelfangjw":31}},{"path":"src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.ITestContext;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterClass;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.exception.HttpRequestFailedException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.AppPage;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.Browser;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.DevServerLoginPage;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.HomePage;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.e2e.util.BackDoor;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.e2e.util.EmailAccount;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCaseWithDatabaseAccess;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.test.FileHelper;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Base class for all browser tests."},{"lineNumber":39,"author":{"gitId":"-"},"content":" *"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis type of test has no knowledge of the workings of the application,"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * and can only communicate via the UI or via {@link BackDoor} to obtain/transmit data."},{"lineNumber":42,"author":{"gitId":"-"},"content":" */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public abstract class BaseE2ETestCase extends BaseTestCaseWithDatabaseAccess {"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    static final BackDoor BACKDOOR \u003d BackDoor.getInstance();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    DataBundle testData;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Browser browser;"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void baseClassSetup() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        prepareTestData();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        prepareBrowser();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Prepares the browser used for the current test."},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    protected void prepareBrowser() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        browser \u003d new Browser();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Prepares the test data used for the current test."},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    protected abstract void prepareTestData();"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Contains all the tests for the page."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThis approach is chosen so that setup and teardown are only needed once per test page,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * thereby saving time. While it necessitates failed tests to be restarted from the beginning,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * test failures are rare and thus not causing significant overhead."},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    protected abstract void testAll();"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    protected String getTestDataFolder() {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return TestProperties.TEST_DATA_FOLDER;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void baseClassTearDown(ITestContext context) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (browser \u003d\u003d null) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        boolean isSuccess \u003d context.getFailedTests().getAllMethods()"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .noneMatch(method -\u003e method.getConstructorOrMethod().getMethod().getDeclaringClass() \u003d\u003d this.getClass());"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isSuccess || TestProperties.CLOSE_BROWSER_ON_FAILURE) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            browser.close();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Creates an {@link AppUrl} for the supplied {@code relativeUrl} parameter."},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The base URL will be the value of test.app.frontend.url in test.properties."},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code relativeUrl} must start with a \"/\"."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    protected static AppUrl createFrontendUrl(String relativeUrl) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new AppUrl(TestProperties.TEAMMATES_FRONTEND_URL + relativeUrl);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Creates an {@link AppUrl} for the supplied {@code relativeUrl} parameter."},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The base URL will be the value of test.app.backend.url in test.properties."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code relativeUrl} must start with a \"/\"."},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected static AppUrl createBackendUrl(String relativeUrl) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new AppUrl(TestProperties.TEAMMATES_BACKEND_URL + relativeUrl);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Logs in to a page using the given credentials."},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    protected \u003cT extends AppPage\u003e T loginToPage(AppUrl url, Class\u003cT\u003e typeOfPage, String userId) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // When not using dev server, Google blocks log in by automation."},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // To work around that, we inject the user cookie directly into the browser session."},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!TestProperties.isDevServer()) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            // In order for the cookie injection to work, we need to be in the domain."},{"lineNumber":121,"author":{"gitId":"-"},"content":"            // Use the home page to minimize the page load time."},{"lineNumber":122,"author":{"gitId":"-"},"content":"            browser.goToUrl(TestProperties.TEAMMATES_FRONTEND_URL);"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String cookieValue \u003d BACKDOOR.getUserCookie(userId);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            browser.addCookie(Const.SecurityConfig.AUTH_COOKIE_NAME, cookieValue, true, true);"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return getNewPageInstance(url, typeOfPage);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // This will be redirected to the dev server login page."},{"lineNumber":131,"author":{"gitId":"-"},"content":"        browser.goToUrl(url.toAbsoluteString());"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        DevServerLoginPage loginPage \u003d AppPage.getNewPageInstance(browser, DevServerLoginPage.class);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        loginPage.loginAsUser(userId);"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return getNewPageInstance(url, typeOfPage);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Logs in to a page using admin credentials."},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected \u003cT extends AppPage\u003e T loginAdminToPage(AppUrl url, Class\u003cT\u003e typeOfPage) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return loginToPage(url, typeOfPage, TestProperties.TEST_ADMIN);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Equivalent to clicking the \u0027logout\u0027 link in the top menu of the page."},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    protected void logout() {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        browser.goToUrl(createBackendUrl(Const.WebPageURIs.LOGOUT).toAbsoluteString());"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        AppPage.getNewPageInstance(browser, HomePage.class).waitForPageToLoad();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Deletes file with fileName from the downloads folder."},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    protected void deleteDownloadsFile(String fileName) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String filePath \u003d TestProperties.TEST_DOWNLOADS_FOLDER + fileName;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        FileHelper.deleteFile(filePath);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Verifies downloaded file has correct fileName and contains expected content."},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected void verifyDownloadedFile(String expectedFileName, List\u003cString\u003e expectedContent) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String filePath \u003d TestProperties.TEST_DOWNLOADS_FOLDER + expectedFileName;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        int retryLimit \u003d TestProperties.TEST_TIMEOUT;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        boolean actual \u003d Files.exists(Paths.get(filePath));"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        while (!actual \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            actual \u003d Files.exists(Paths.get(filePath));"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(actual);"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            String actualContent \u003d FileHelper.readFile(filePath);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            for (String content : expectedContent) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                assertTrue(actualContent.contains(content));"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Visits the URL and gets the page object representation of the visited web page in the browser."},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    protected \u003cT extends AppPage\u003e T getNewPageInstance(AppUrl url, Class\u003cT\u003e typeOfPage) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        browser.goToUrl(url.toAbsoluteString());"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return AppPage.getNewPageInstance(browser, typeOfPage);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Verifies that email with subject is found in inbox."},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Email used must be an authentic gmail account."},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    protected void verifyEmailSent(String email, String subject) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        if (TestProperties.isDevServer() || !TestProperties.INCLUDE_EMAIL_VERIFICATION) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!TestProperties.TEST_EMAIL.equals(email)) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            fail(\"Email verification is allowed only on preset test email.\");"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EmailAccount emailAccount \u003d new EmailAccount(email);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            emailAccount.getUserAuthenticated();"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            int retryLimit \u003d 5;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            boolean actual \u003d emailAccount.isRecentEmailWithSubjectPresent(subject, TestProperties.TEST_SENDER_EMAIL);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            while (!actual \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                retryLimit--;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                ThreadHelper.waitFor(1000);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                actual \u003d emailAccount.isRecentEmailWithSubjectPresent(subject, TestProperties.TEST_SENDER_EMAIL);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            assertTrue(actual);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            fail(\"Failed to verify email sent:\" + e);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    AccountAttributes getAccount(String googleId) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return BACKDOOR.getAccount(googleId);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    protected AccountAttributes getAccount(AccountAttributes account) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        return getAccount(account.getGoogleId());"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @SuppressWarnings(\"PMD.EmptyMethodInAbstractClassShouldBeAbstract\")"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    protected StudentProfileAttributes getStudentProfile(StudentProfileAttributes studentProfileAttributes) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        return null; // BACKDOOR.getStudentProfile(studentProfileAttributes.googleId);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    CourseAttributes getCourse(String courseId) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return BACKDOOR.getCourse(courseId);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    protected CourseAttributes getCourse(CourseAttributes course) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return getCourse(course.getId());"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    CourseAttributes getArchivedCourse(String instructorId, String courseId) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return BACKDOOR.getArchivedCourse(instructorId, courseId);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    FeedbackQuestionAttributes getFeedbackQuestion(String courseId, String feedbackSessionName, int qnNumber) {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackQuestion(courseId, feedbackSessionName, qnNumber);"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    protected FeedbackQuestionAttributes getFeedbackQuestion(FeedbackQuestionAttributes fq) {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        return getFeedbackQuestion(fq.getCourseId(), fq.getFeedbackSessionName(), fq.getQuestionNumber());"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"    FeedbackResponseCommentAttributes getFeedbackResponseComment(String feedbackResponseId) {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackResponseComment(feedbackResponseId);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    protected FeedbackResponseCommentAttributes getFeedbackResponseComment(FeedbackResponseCommentAttributes frc) {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return getFeedbackResponseComment(frc.getFeedbackResponseId());"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"    FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId, String giver, String recipient) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackResponse(feedbackQuestionId, giver, recipient);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    protected FeedbackResponseAttributes getFeedbackResponse(FeedbackResponseAttributes fr) {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        return getFeedbackResponse(fr.getFeedbackQuestionId(), fr.getGiver(), fr.getRecipient());"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"    FeedbackSessionAttributes getFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackSession(courseId, feedbackSessionName);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    protected FeedbackSessionAttributes getFeedbackSession(FeedbackSessionAttributes fs) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        return getFeedbackSession(fs.getCourseId(), fs.getFeedbackSessionName());"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    FeedbackSessionAttributes getSoftDeletedSession(String feedbackSessionName, String instructorId) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return BACKDOOR.getSoftDeletedSession(feedbackSessionName, instructorId);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"    InstructorAttributes getInstructor(String courseId, String instructorEmail) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        return BACKDOOR.getInstructor(courseId, instructorEmail);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    protected InstructorAttributes getInstructor(InstructorAttributes instructor) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        return getInstructor(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    String getKeyForInstructor(String courseId, String instructorEmail) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        return getInstructor(courseId, instructorEmail).getKey();"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    protected StudentAttributes getStudent(StudentAttributes student) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return BACKDOOR.getStudent(student.getCourse(), student.getEmail());"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"    String getKeyForStudent(StudentAttributes student) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        return getStudent(student).getKey();"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":312,"author":{"gitId":"samuelfangjw"},"content":"    protected AccountRequestAttributes getAccountRequest(AccountRequestAttributes accountRequest) {"},{"lineNumber":313,"author":{"gitId":"samuelfangjw"},"content":"        return BACKDOOR.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":314,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    protected boolean doRemoveAndRestoreDataBundle(DataBundle testData) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            BACKDOOR.removeAndRestoreDataBundle(testData);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        } catch (HttpRequestFailedException e) {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    protected boolean doPutDocuments(DataBundle testData) {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            BACKDOOR.putDocuments(testData);"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        } catch (HttpRequestFailedException e) {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":332,"samuelfangjw":6}},{"path":"src/e2e/java/teammates/e2e/cases/FeedbackResultsPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRubricQuestionDetails;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.FeedbackResultsPage;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#SESSION_RESULTS_PAGE}."},{"lineNumber":25,"author":{"gitId":"-"},"content":" */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FeedbackResultsPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private FeedbackResultsPage resultsPage;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes openSession;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackQuestionAttributes\u003e questions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/FeedbackResultsPageE2ETest.json\");"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        openSession \u003d testData.feedbackSessions.get(\"Open Session\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d testData.feedbackQuestions.size(); i++) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            questions.add(testData.feedbackQuestions.get(\"qn\" + i));"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ______TS(\"unregistered student: can access results\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StudentAttributes unregistered \u003d testData.students.get(\"Unregistered\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.SESSION_RESULTS_PAGE)"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .withCourseId(unregistered.getCourse())"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .withStudentEmail(unregistered.getEmail())"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .withSessionName(openSession.getFeedbackSessionName())"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .withRegistrationKey(getKeyForStudent(unregistered));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        resultsPage \u003d getNewPageInstance(url, FeedbackResultsPage.class);"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        resultsPage.verifyFeedbackSessionDetails(openSession);"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ______TS(\"unregistered student: questions with responses loaded\");"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        verifyLoadedQuestions(unregistered);"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ______TS(\"registered student: can access results\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d testData.students.get(\"Alice\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        url \u003d createFrontendUrl(Const.WebPageURIs.STUDENT_SESSION_RESULTS_PAGE)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withCourseId(openSession.getCourseId())"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withSessionName(openSession.getFeedbackSessionName());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        resultsPage \u003d loginToPage(url, FeedbackResultsPage.class, student.getGoogleId());"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        resultsPage.verifyFeedbackSessionDetails(openSession);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ______TS(\"registered student: questions with responses loaded\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        verifyLoadedQuestions(student);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ______TS(\"verify responses\");"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        questions.forEach(question -\u003e verifyResponseDetails(student, question));"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ______TS(\"verify statistics - numscale\");"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String[] expectedNumScaleStats \u003d { student.getTeam(), \"You\", \"3.83\", \"4.5\", \"3\", \"3.5\" };"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        resultsPage.verifyNumScaleStatistics(5, expectedNumScaleStats);"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ______TS(\"verify statistics - rubric\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        verifyExpectedRubricStats();"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ______TS(\"verify statistics - contribution\");"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String[] expectedContribStats \u003d {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \"of me: E +20%\","},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \"of others:  E +50%, E -50%\","},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \"of me: E +71%\","},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \"of others:  E -20%, E -31%\","},{"lineNumber":89,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        resultsPage.verifyContributionStatistics(11, expectedContribStats);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ______TS(\"verify comments\");"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        verifyCommentDetails(2, testData.feedbackResponseComments.get(\"qn2Comment1\"), student);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        verifyCommentDetails(2, testData.feedbackResponseComments.get(\"qn2Comment2\"), student);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        verifyCommentDetails(3, testData.feedbackResponseComments.get(\"qn3Comment1\"), student);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        verifyCommentDetails(3, testData.feedbackResponseComments.get(\"qn3Comment2\"), student);"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        verifyCommentDetails(4, testData.feedbackResponseComments.get(\"qn4Comment1\"), student);"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ______TS(\"registered instructor: can access results\");"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        logout();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d testData.instructors.get(\"FRes.instr\");"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        url \u003d createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_SESSION_RESULTS_PAGE)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withCourseId(openSession.getCourseId())"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withSessionName(openSession.getFeedbackSessionName());"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        resultsPage \u003d loginToPage(url, FeedbackResultsPage.class, instructor.getGoogleId());"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        resultsPage.verifyFeedbackSessionDetails(openSession);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ______TS(\"registered instructor: questions with responses loaded\");"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        verifyLoadedQuestions(instructor);"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ______TS(\"verify responses\");"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        questions.forEach(question -\u003e verifyResponseDetails(instructor, question));"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void verifyLoadedQuestions(StudentAttributes currentStudent) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cFeedbackQuestionAttributes\u003e qnsWithResponse \u003d getQnsWithResponses(currentStudent);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        questions.forEach(qn -\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (qnsWithResponse.contains(qn)) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                resultsPage.verifyQuestionDetails(qn.getQuestionNumber(), qn);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                resultsPage.verifyQuestionNotPresent(qn.getQuestionNumber());"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void verifyLoadedQuestions(InstructorAttributes currentInstructor) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Set\u003cFeedbackQuestionAttributes\u003e qnsWithResponse \u003d getQnsWithResponses(currentInstructor);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        questions.forEach(qn -\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            if (qnsWithResponse.contains(qn)) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                resultsPage.verifyQuestionDetails(qn.getQuestionNumber(), qn);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                resultsPage.verifyQuestionNotPresent(qn.getQuestionNumber());"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void verifyResponseDetails(StudentAttributes currentStudent, FeedbackQuestionAttributes question) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e givenResponses \u003d getGivenResponses(currentStudent, question);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e otherResponses \u003d getOtherResponses(currentStudent, question);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e visibleGivers \u003d getVisibleGivers(currentStudent, question);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e visibleRecipients \u003d getVisibleRecipients(currentStudent, question);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        resultsPage.verifyResponseDetails(question, givenResponses, otherResponses, visibleGivers, visibleRecipients);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void verifyResponseDetails(InstructorAttributes currentInstructor, FeedbackQuestionAttributes question) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e givenResponses \u003d getGivenResponses(currentInstructor, question);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e otherResponses \u003d getOtherResponses(currentInstructor, question);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e visibleGivers \u003d getVisibleGivers(currentInstructor, question);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e visibleRecipients \u003d getVisibleRecipients(currentInstructor, question);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        resultsPage.verifyResponseDetails(question, givenResponses, otherResponses, visibleGivers, visibleRecipients);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void verifyCommentDetails(int questionNum, FeedbackResponseCommentAttributes comment,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                                      StudentAttributes currentStudent) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String editor \u003d \"\";"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String giver \u003d \"\";"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (comment.getLastEditorEmail() !\u003d null) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            editor \u003d getIdentifier(currentStudent, comment.getLastEditorEmail());"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!comment.getCommentGiverType().equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            giver \u003d getIdentifier(currentStudent, comment.getCommentGiver());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        resultsPage.verifyCommentDetails(questionNum, giver, editor, comment.getCommentText());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private Set\u003cFeedbackQuestionAttributes\u003e getQnsWithResponses(StudentAttributes currentStudent) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return questions.stream()"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .filter(qn -\u003e !getGivenResponses(currentStudent, qn).isEmpty()"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                        || !getOtherResponses(currentStudent, qn).isEmpty())"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private Set\u003cFeedbackQuestionAttributes\u003e getQnsWithResponses(InstructorAttributes currentInstructor) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return questions.stream()"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .filter(qn -\u003e !getGivenResponses(currentInstructor, qn).isEmpty()"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                        || !getOtherResponses(currentInstructor, qn).isEmpty())"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e getGivenResponses(StudentAttributes currentStudent,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                                                               FeedbackQuestionAttributes question) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e givenResponses \u003d testData.feedbackResponses.values().stream()"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .filter(f -\u003e f.getFeedbackQuestionId().equals(Integer.toString(question.getQuestionNumber()))"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                        \u0026\u0026 f.getGiver().equals(currentStudent.getEmail()))"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return editIdentifiers(currentStudent, givenResponses);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e getGivenResponses(InstructorAttributes currentInstructor,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                                                               FeedbackQuestionAttributes question) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e givenResponses \u003d testData.feedbackResponses.values().stream()"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .filter(f -\u003e f.getFeedbackQuestionId().equals(Integer.toString(question.getQuestionNumber()))"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                        \u0026\u0026 f.getGiver().equals(currentInstructor.getEmail()))"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return editIdentifiers(currentInstructor, givenResponses);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e getOtherResponses(StudentAttributes currentStudent,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                                                               FeedbackQuestionAttributes question) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e visibleResponseGivers \u003d getRelevantUsers(currentStudent, question.getShowResponsesTo());"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        visibleResponseGivers.add(currentStudent.getEmail());"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e questionResponses \u003d testData.feedbackResponses.values().stream()"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .filter(fr -\u003e fr.getFeedbackQuestionId().equals(Integer.toString(question.getQuestionNumber())))"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e selfEvaluationResponses \u003d questionResponses.stream()"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .filter(fr -\u003e fr.getGiver().equals(currentStudent.getEmail())"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                        \u0026\u0026 fr.getRecipient().equals(currentStudent.getEmail()))"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesByOthers \u003d questionResponses.stream()"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                .filter(fr -\u003e !fr.getGiver().equals(currentStudent.getEmail())"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                        \u0026\u0026 visibleResponseGivers.contains(fr.getGiver()))"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesToSelf \u003d new ArrayList\u003c\u003e();"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (visibleResponseGivers.contains(\"RECEIVER\")) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            responsesToSelf \u003d questionResponses.stream()"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    .filter(fr -\u003e !fr.getGiver().equals(currentStudent.getEmail())"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                            \u0026\u0026 fr.getRecipient().equals(currentStudent.getEmail()))"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toList());"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e otherResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        otherResponses.addAll(selfEvaluationResponses);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        otherResponses.addAll(responsesByOthers);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        otherResponses.addAll(responsesToSelf);"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"        return editIdentifiers(currentStudent, otherResponses);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e getOtherResponses(InstructorAttributes currentInstructor,"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                                                               FeedbackQuestionAttributes question) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e visibleResponseGivers \u003d getRelevantUsersForInstructors(question.getShowResponsesTo());"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        visibleResponseGivers.add(currentInstructor.getEmail());"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e questionResponses \u003d testData.feedbackResponses.values().stream()"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .filter(fr -\u003e fr.getFeedbackQuestionId().equals(Integer.toString(question.getQuestionNumber())))"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e selfEvaluationResponses \u003d questionResponses.stream()"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                .filter(fr -\u003e fr.getGiver().equals(currentInstructor.getEmail())"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                        \u0026\u0026 fr.getRecipient().equals(currentInstructor.getEmail()))"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesByOthers \u003d questionResponses.stream()"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                .filter(fr -\u003e !fr.getGiver().equals(currentInstructor.getEmail())"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                        \u0026\u0026 visibleResponseGivers.contains(fr.getGiver()))"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesToSelf \u003d new ArrayList\u003c\u003e();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        if (visibleResponseGivers.contains(\"RECEIVER\") || visibleResponseGivers.contains(\"INSTRUCTORS\")) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            responsesToSelf \u003d questionResponses.stream()"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    .filter(fr -\u003e !fr.getGiver().equals(currentInstructor.getEmail())"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                            \u0026\u0026 fr.getRecipient().equals(currentInstructor.getEmail()))"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toList());"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e otherResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        otherResponses.addAll(selfEvaluationResponses);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        otherResponses.addAll(responsesByOthers);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        otherResponses.addAll(responsesToSelf);"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"        return editIdentifiers(currentInstructor, otherResponses);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    private Set\u003cString\u003e getVisibleGivers(StudentAttributes currentStudent, FeedbackQuestionAttributes question) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        return getRelevantUsers(currentStudent, question.getShowGiverNameTo()).stream()"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                .map(user -\u003e getIdentifier(currentStudent, user))"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"    private Set\u003cString\u003e getVisibleGivers(InstructorAttributes currentInstructor, FeedbackQuestionAttributes question) {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        return getRelevantUsersForInstructors(question.getShowGiverNameTo()).stream()"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                .map(user -\u003e getIdentifier(currentInstructor, user))"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"    private Set\u003cString\u003e getVisibleRecipients(StudentAttributes currentStudent, FeedbackQuestionAttributes question) {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        return getRelevantUsers(currentStudent, question.getShowRecipientNameTo()).stream()"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                .map(user -\u003e getIdentifier(currentStudent, user))"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"    private Set\u003cString\u003e getVisibleRecipients(InstructorAttributes currentInstructor, FeedbackQuestionAttributes question) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        return getRelevantUsersForInstructors(question.getShowRecipientNameTo()).stream()"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                .map(user -\u003e getIdentifier(currentInstructor, user))"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    private Set\u003cString\u003e getRelevantUsers(StudentAttributes giver, List\u003cFeedbackParticipantType\u003e relevantParticipants) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e relevantUsers \u003d new HashSet\u003c\u003e();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d new ArrayList\u003c\u003e();"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        if (relevantParticipants.contains(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            students.addAll(getOtherStudents(giver));"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        } else if (relevantParticipants.contains(FeedbackParticipantType.OWN_TEAM_MEMBERS)) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            students.addAll(getOtherTeammates(giver));"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        students.forEach(s -\u003e relevantUsers.add(s.getEmail()));"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        students.forEach(s -\u003e relevantUsers.add(s.getTeam()));"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"        if (relevantParticipants.contains(FeedbackParticipantType.RECEIVER)) {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            relevantUsers.add(\"RECEIVER\");"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        return relevantUsers;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"    private Set\u003cString\u003e getRelevantUsersForInstructors(List\u003cFeedbackParticipantType\u003e relevantParticipants) {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e relevantUsers \u003d new HashSet\u003c\u003e();"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        if (relevantParticipants.contains(FeedbackParticipantType.RECEIVER)) {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            relevantUsers.add(\"RECEIVER\");"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        if (relevantParticipants.contains(FeedbackParticipantType.INSTRUCTORS)) {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            relevantUsers.add(\"INSTRUCTORS\");"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        return relevantUsers;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"    private Set\u003cStudentAttributes\u003e getOtherTeammates(StudentAttributes currentStudent) {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        return testData.students.values().stream()"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                .filter(s -\u003e s.getTeam().equals(currentStudent.getTeam())"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                \u0026\u0026 !s.equals(currentStudent))"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    private Set\u003cStudentAttributes\u003e getOtherStudents(StudentAttributes currentStudent) {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        return testData.students.values().stream()"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                .filter(s -\u003e s.getCourse().equals(currentStudent.getCourse())"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                \u0026\u0026 !s.equals(currentStudent))"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e editIdentifiers(StudentAttributes currentStudent,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                                                             List\u003cFeedbackResponseAttributes\u003e responses) {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e editedResponses \u003d deepCopyResponses(responses);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        editedResponses.forEach(fr -\u003e {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            fr.setGiver(getIdentifier(currentStudent, fr.getGiver()));"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            fr.setRecipient(getIdentifier(currentStudent, fr.getRecipient()));"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        return editedResponses;"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e editIdentifiers(InstructorAttributes currentInstructor,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                                                             List\u003cFeedbackResponseAttributes\u003e responses) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e editedResponses \u003d deepCopyResponses(responses);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        editedResponses.forEach(fr -\u003e {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            fr.setGiver(getIdentifier(currentInstructor, fr.getGiver()));"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            fr.setRecipient(getIdentifier(currentInstructor, fr.getRecipient()));"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return editedResponses;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"    private String getIdentifier(StudentAttributes currentStudent, String user) {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        if (currentStudent.getEmail().equals(user)) {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            return \"You\";"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        if (Const.GENERAL_QUESTION.equals(user)) {"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            return Const.USER_NOBODY_TEXT;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        if (user.equals(currentStudent.getTeam())) {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            return \"Your Team (\" + user + \")\";"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        String identifier \u003d getInstructorName(user);"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        if (identifier \u003d\u003d null) {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            identifier \u003d getStudentName(user);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        if (identifier \u003d\u003d null) {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            identifier \u003d user;"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        return identifier;"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"    private String getIdentifier(InstructorAttributes currentInstructor, String user) {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        if (currentInstructor.getEmail().equals(user)) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            return \"You\";"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        if (Const.GENERAL_QUESTION.equals(user)) {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"            return Const.USER_NOBODY_TEXT;"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        String identifier \u003d getInstructorName(user);"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        if (identifier \u003d\u003d null) {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            identifier \u003d getStudentName(user);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        if (identifier \u003d\u003d null) {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            identifier \u003d user;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        return identifier;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"    private String getStudentName(String studentEmail) {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        return testData.students.values().stream()"},{"lineNumber":397,"author":{"gitId":"-"},"content":"               .filter(s -\u003e s.getEmail().equals(studentEmail))"},{"lineNumber":398,"author":{"gitId":"-"},"content":"               .map(StudentAttributes::getName)"},{"lineNumber":399,"author":{"gitId":"-"},"content":"               .findFirst()"},{"lineNumber":400,"author":{"gitId":"-"},"content":"               .orElse(null);"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"    private String getInstructorName(String instructorEmail) {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        return testData.instructors.values().stream()"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                .filter(s -\u003e s.getEmail()"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                        .equals(instructorEmail))"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                .map(InstructorAttributes::getName)"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e deepCopyResponses(List\u003cFeedbackResponseAttributes\u003e responses) {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e copiedResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responses) {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            copiedResponses.add(new FeedbackResponseAttributes(response));"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        return copiedResponses;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"    private void verifyExpectedRubricStats() {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        FeedbackRubricQuestionDetails rubricsQnDetails \u003d"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                (FeedbackRubricQuestionDetails) testData.feedbackQuestions.get(\"qn10\").getQuestionDetailsCopy();"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        List\u003cString\u003e subQns \u003d rubricsQnDetails.getRubricSubQuestions();"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        String[] formattedSubQns \u003d { \"a) \" + subQns.get(0), \"b) \" + subQns.get(1), \"c) \" + subQns.get(2) };"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"        String[][] expectedRubricStats \u003d {"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"                        formattedSubQns[0],"},{"lineNumber":429,"author":{"gitId":"-"},"content":"                        \"33.33% (1) [1]\","},{"lineNumber":430,"author":{"gitId":"-"},"content":"                        \"33.33% (1) [2]\","},{"lineNumber":431,"author":{"gitId":"-"},"content":"                        \"0% (0) [3]\","},{"lineNumber":432,"author":{"gitId":"-"},"content":"                        \"0% (0) [4]\","},{"lineNumber":433,"author":{"gitId":"-"},"content":"                        \"33.33% (1) [5]\","},{"lineNumber":434,"author":{"gitId":"-"},"content":"                        \"2.67\","},{"lineNumber":435,"author":{"gitId":"-"},"content":"                },"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                        formattedSubQns[1],"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                        \"0% (0) [0.01]\","},{"lineNumber":439,"author":{"gitId":"-"},"content":"                        \"0% (0) [0.02]\","},{"lineNumber":440,"author":{"gitId":"-"},"content":"                        \"33.33% (1) [0.03]\","},{"lineNumber":441,"author":{"gitId":"-"},"content":"                        \"0% (0) [0.04]\","},{"lineNumber":442,"author":{"gitId":"-"},"content":"                        \"66.67% (2) [0.05]\","},{"lineNumber":443,"author":{"gitId":"-"},"content":"                        \"0.04\","},{"lineNumber":444,"author":{"gitId":"-"},"content":"                },"},{"lineNumber":445,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"                        formattedSubQns[2],"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                        \"0% (0) [2]\","},{"lineNumber":448,"author":{"gitId":"-"},"content":"                        \"0% (0) [1]\","},{"lineNumber":449,"author":{"gitId":"-"},"content":"                        \"0% (0) [0]\","},{"lineNumber":450,"author":{"gitId":"-"},"content":"                        \"66.67% (2) [-1]\","},{"lineNumber":451,"author":{"gitId":"-"},"content":"                        \"33.33% (1) [-2]\","},{"lineNumber":452,"author":{"gitId":"-"},"content":"                        \"-1.33\","},{"lineNumber":453,"author":{"gitId":"-"},"content":"                },"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"        String[][] expectedRubricStatsExcludingSelf \u003d {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                        formattedSubQns[0],"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                        \"50% (1) [1]\","},{"lineNumber":460,"author":{"gitId":"-"},"content":"                        \"0% (0) [2]\","},{"lineNumber":461,"author":{"gitId":"-"},"content":"                        \"0% (0) [3]\","},{"lineNumber":462,"author":{"gitId":"-"},"content":"                        \"0% (0) [4]\","},{"lineNumber":463,"author":{"gitId":"-"},"content":"                        \"50% (1) [5]\","},{"lineNumber":464,"author":{"gitId":"-"},"content":"                        \"3\","},{"lineNumber":465,"author":{"gitId":"-"},"content":"                },"},{"lineNumber":466,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                        formattedSubQns[1],"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                        \"0% (0) [0.01]\","},{"lineNumber":469,"author":{"gitId":"-"},"content":"                        \"0% (0) [0.02]\","},{"lineNumber":470,"author":{"gitId":"-"},"content":"                        \"0% (0) [0.03]\","},{"lineNumber":471,"author":{"gitId":"-"},"content":"                        \"0% (0) [0.04]\","},{"lineNumber":472,"author":{"gitId":"-"},"content":"                        \"100% (2) [0.05]\","},{"lineNumber":473,"author":{"gitId":"-"},"content":"                        \"0.05\","},{"lineNumber":474,"author":{"gitId":"-"},"content":"                },"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                        formattedSubQns[2],"},{"lineNumber":477,"author":{"gitId":"-"},"content":"                        \"0% (0) [2]\","},{"lineNumber":478,"author":{"gitId":"-"},"content":"                        \"0% (0) [1]\","},{"lineNumber":479,"author":{"gitId":"-"},"content":"                        \"0% (0) [0]\","},{"lineNumber":480,"author":{"gitId":"-"},"content":"                        \"50% (1) [-1]\","},{"lineNumber":481,"author":{"gitId":"-"},"content":"                        \"50% (1) [-2]\","},{"lineNumber":482,"author":{"gitId":"-"},"content":"                        \"-1.5\","},{"lineNumber":483,"author":{"gitId":"-"},"content":"                },"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"        String[] studentNames \u003d { \"Anonymous student\", \"Benny Charles\", \"Charlie Davis\", \"You\" };"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        String[] studentTeams \u003d { \"\", \"Team 1\", \"Team 1\", \"Team 1\" };"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"        String[][] expectedRubricStatsPerRecipient \u003d new String[studentNames.length * formattedSubQns.length][3];"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        // The actual calculated stats are not verified for this table"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        // Checking the recipient presence in the table is sufficient for E2E purposes"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c studentNames.length; i++) {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c formattedSubQns.length; j++) {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"                int index \u003d i * formattedSubQns.length + j;"},{"lineNumber":495,"author":{"gitId":"-"},"content":"                expectedRubricStatsPerRecipient[index][0] \u003d studentTeams[i];"},{"lineNumber":496,"author":{"gitId":"-"},"content":"                expectedRubricStatsPerRecipient[index][1] \u003d studentNames[i];"},{"lineNumber":497,"author":{"gitId":"-"},"content":"                expectedRubricStatsPerRecipient[index][2] \u003d formattedSubQns[j];"},{"lineNumber":498,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"        resultsPage.verifyRubricStatistics(10, expectedRubricStats, expectedRubricStatsExcludingSelf,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"                expectedRubricStatsPerRecipient);"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":504,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":503,"samuelfangjw":1}},{"path":"src/e2e/java/teammates/e2e/cases/InstructorCourseJoinConfirmationPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.CourseJoinConfirmationPage;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorHomePage;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#JOIN_PAGE}."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class InstructorCourseJoinConfirmationPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    InstructorAttributes newInstructor;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorCourseJoinConfirmationPageE2ETest.json\");"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"        newInstructor \u003d testData.instructors.get(\"ICJoinConf.instr.CS1101\");"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        newInstructor.setGoogleId(\"tm.e2e.ICJoinConf.instr2\");"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ______TS(\"Click join link: invalid key\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String invalidKey \u003d \"invalidKey\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AppUrl joinLink \u003d createFrontendUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                .withRegistrationKey(invalidKey)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        CourseJoinConfirmationPage confirmationPage \u003d loginToPage("},{"lineNumber":35,"author":{"gitId":"-"},"content":"                joinLink, CourseJoinConfirmationPage.class, newInstructor.getGoogleId());"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        confirmationPage.verifyDisplayedMessage(\"The course join link is invalid. You may have \""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \"entered the URL incorrectly or the URL may correspond to a/an instructor that does not exist.\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ______TS(\"Click join link: valid key\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String courseId \u003d testData.courses.get(\"ICJoinConf.CS1101\").getId();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String instructorEmail \u003d newInstructor.getEmail();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        joinLink \u003d createFrontendUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .withRegistrationKey(getKeyForInstructor(courseId, instructorEmail))"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        confirmationPage \u003d getNewPageInstance(joinLink, CourseJoinConfirmationPage.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        confirmationPage.verifyJoiningUser(newInstructor.getGoogleId());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        confirmationPage.confirmJoinCourse(InstructorHomePage.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ______TS(\"Already joined, no confirmation page\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"        getNewPageInstance(joinLink, InstructorHomePage.class);"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        logout();"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Click join link: invalid key\");"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        joinLink \u003d createFrontendUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                .withIsCreatingAccount(\"true\")"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                .withRegistrationKey(invalidKey);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage \u003d loginToPage(joinLink, CourseJoinConfirmationPage.class, \"ICJoinConf.newinstr\");"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage.verifyDisplayedMessage(\"The course join link is invalid. You may have \""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"                + \"entered the URL incorrectly or the URL may correspond to a/an instructor that does not exist.\");"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Click join link: valid account request key\");"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        String regKey \u003d BACKDOOR"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                .getRegKeyForAccountRequest(\"ICJoinConf.newinstr@gmail.tmt\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        joinLink \u003d createFrontendUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                .withIsCreatingAccount(\"true\")"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                .withRegistrationKey(regKey);"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage \u003d getNewPageInstance(joinLink, CourseJoinConfirmationPage.class);"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage.verifyJoiningUser(\"ICJoinConf.newinstr\");"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage.confirmJoinCourse(InstructorHomePage.class);"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Regkey for account request used, no confirmation page\");"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        getNewPageInstance(joinLink, InstructorHomePage.class);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":55,"samuelfangjw":28}},{"path":"src/e2e/java/teammates/e2e/cases/InstructorFeedbackEditPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackContributionQuestionDetails;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.FeedbackSubmitPage;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorFeedbackEditPage;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SESSION_EDIT_PAGE}."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class InstructorFeedbackEditPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private InstructorAttributes instructor;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSession;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private CourseAttributes course;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private CourseAttributes copiedCourse;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorFeedbackEditPageE2ETest.json\");"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        instructor \u003d testData.instructors.get(\"instructor\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        feedbackSession \u003d testData.feedbackSessions.get(\"openSession\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        course \u003d testData.courses.get(\"course\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        copiedCourse \u003d testData.courses.get(\"course2\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_SESSION_EDIT_PAGE)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .withSessionName(feedbackSession.getFeedbackSessionName());"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        InstructorFeedbackEditPage feedbackEditPage \u003d"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                loginToPage(url, InstructorFeedbackEditPage.class, instructor.getGoogleId());"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ______TS(\"verify loaded data\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifySessionDetails(course, feedbackSession);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ______TS(\"edit session details\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        feedbackSession.setInstructions(\"\u003cp\u003e\u003cstrong\u003enew instructions\u003c/strong\u003e\u003c/p\u003e\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        feedbackSession.setStartTime(feedbackSession.getEndTime().minus(30, ChronoUnit.DAYS));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        feedbackSession.setEndTime(feedbackSession.getEndTime().plus(30, ChronoUnit.DAYS));"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        feedbackSession.setGracePeriodMinutes(30);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        feedbackSession.setSessionVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_OPENING);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        feedbackSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_VISIBLE);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        feedbackSession.setClosingEmailEnabled(false);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        feedbackEditPage.editSessionDetails(feedbackSession);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The feedback session has been updated.\");"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifySessionDetails(course, feedbackSession);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(feedbackSession);"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ______TS(\"add template question\");"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes templateQuestion \u003d getTemplateQuestion();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        feedbackEditPage.addTemplateQuestion(1);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The question has been added to this feedback session.\");"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyNumQuestions(1);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(1, templateQuestion);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(templateQuestion);"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        ______TS(\"copy question from other session\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionToCopy \u003d testData.feedbackQuestions.get(\"qn1\");"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        questionToCopy.setCourseId(course.getId());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        questionToCopy.setFeedbackSessionName(feedbackSession.getFeedbackSessionName());"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        questionToCopy.setQuestionNumber(2);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        feedbackEditPage.copyQuestion(copiedCourse.getId(), questionToCopy.getQuestionDetailsCopy().getQuestionText());"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"zhaojj2209"},"content":"        feedbackEditPage.verifyStatusMessage(\"The selected question(s) have been added to this feedback session.\");"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyNumQuestions(2);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(2, questionToCopy);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(questionToCopy);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ______TS(\"reorder questions\");"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        questionToCopy.setQuestionNumber(1);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        templateQuestion.setQuestionNumber(2);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        feedbackEditPage.editQuestionNumber(2, 1);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The changes to the question have been updated.\");"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        verifyReorder(questionToCopy);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        verifyReorder(templateQuestion);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(1, questionToCopy);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(2, templateQuestion);"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ______TS(\"edit question\");"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes editedQuestion \u003d getTemplateQuestion();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        editedQuestion.setQuestionNumber(1);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String questionBrief \u003d editedQuestion.getQuestionDetailsCopy().getQuestionText();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        editedQuestion.setQuestionDetails(new FeedbackTextQuestionDetails(questionBrief));"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        editedQuestion.setQuestionDescription(\"\u003cp\u003e\u003cem\u003eNew Description\u003c/em\u003e\u003c/p\u003e\");"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        feedbackEditPage.editQuestionDetails(1, editedQuestion);"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The changes to the question have been updated.\");"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(1, editedQuestion);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(editedQuestion);"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        ______TS(\"duplicate question\");"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        editedQuestion.setQuestionNumber(3);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        feedbackEditPage.duplicateQuestion(1);"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The question has been duplicated below.\");"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyNumQuestions(3);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(3, editedQuestion);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(editedQuestion);"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        ______TS(\"delete question\");"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        templateQuestion.setQuestionNumber(1);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        feedbackEditPage.deleteQuestion(1);"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The question has been deleted.\");"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyNumQuestions(2);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(1, templateQuestion);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // verify qn 1 has been replaced in database by qn 2"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        verifyReorder(templateQuestion);"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        ______TS(\"preview session as student\");"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        FeedbackSubmitPage previewPage \u003d feedbackEditPage.previewAsStudent("},{"lineNumber":132,"author":{"gitId":"-"},"content":"                testData.students.get(\"benny.tmms@IFEdit.CS2104\"));"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        previewPage.closeCurrentWindowAndSwitchToParentWindow();"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        ______TS(\"preview session as instructor\");"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        previewPage \u003d feedbackEditPage.previewAsInstructor(instructor);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        previewPage.closeCurrentWindowAndSwitchToParentWindow();"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"        ______TS(\"copy session to other course\");"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        feedbackSession.setCourseId(copiedCourse.getId());"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String copiedSessionName \u003d \"Copied Session\";"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        feedbackSession.setFeedbackSessionName(copiedSessionName);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        feedbackEditPage.copySessionToOtherCourse(copiedCourse, copiedSessionName);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + \"Please modify settings/questions as necessary.\");"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(feedbackSession);"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ______TS(\"delete session\");"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        feedbackEditPage.deleteSession();"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The feedback session has been deleted. \""},{"lineNumber":153,"author":{"gitId":"-"},"content":"                + \"You can restore it from the deleted sessions table below.\");"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertNotNull(getSoftDeletedSession(copiedSessionName,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void verifyReorder(FeedbackQuestionAttributes question) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes actual \u003d getFeedbackQuestion(question);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        while (!actual.equals(question) \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            actual \u003d getFeedbackQuestion(question);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(question, actual);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private FeedbackQuestionAttributes getTemplateQuestion() {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        FeedbackContributionQuestionDetails detail \u003d new FeedbackContributionQuestionDetails();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        detail.setQuestionText(\"How much work did each team member contribute?\""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + \" (response will be shown anonymously to each team member).\");"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        detail.setNotSureAllowed(false);"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return FeedbackQuestionAttributes.builder()"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(feedbackSession.getFeedbackSessionName())"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .withQuestionDetails(detail)"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .withQuestionDescription(\"\")"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .withQuestionNumber(1)"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .withGiverType(FeedbackParticipantType.STUDENTS)"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .withRecipientType(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF)"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .withNumberOfEntitiesToGiveFeedbackTo(Const.MAX_POSSIBLE_RECIPIENTS)"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .withShowResponsesTo(Arrays.asList(FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                        FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.RECEIVER))"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .withShowGiverNameTo(Arrays.asList(FeedbackParticipantType.INSTRUCTORS))"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .withShowRecipientNameTo(Arrays.asList(FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                        FeedbackParticipantType.RECEIVER))"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":1,"-":190}},{"path":"src/e2e/java/teammates/e2e/cases/InstructorFeedbackSessionsPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorFeedbackSessionsPage;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SESSIONS_PAGE}."},{"lineNumber":26,"author":{"gitId":"-"},"content":" */"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class InstructorFeedbackSessionsPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private InstructorAttributes instructor;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private CourseAttributes course;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private CourseAttributes copiedCourse;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private StudentAttributes studentToEmail;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes openSession;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes closedSession;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes newSession;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private String fileName;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorFeedbackSessionsPageE2ETest.json\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        studentToEmail \u003d testData.students.get(\"charlie.tmms@IFSess.CS1101\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        studentToEmail.setEmail(TestProperties.TEST_EMAIL);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        instructor \u003d testData.instructors.get(\"instructor\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        course \u003d testData.courses.get(\"course\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        copiedCourse \u003d testData.courses.get(\"course2\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        openSession \u003d testData.feedbackSessions.get(\"openSession\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        closedSession \u003d testData.feedbackSessions.get(\"closedSession\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        newSession \u003d FeedbackSessionAttributes"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .builder(\"New Session\", course.getId())"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .withCreatorEmail(instructor.getEmail())"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .withStartTime(TimeHelper.parseInstant(\"2035-04-01T22:00:00Z\"))"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .withEndTime(TimeHelper.parseInstant(\"2035-04-30T20:00:00Z\"))"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .withSessionVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_OPENING)"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER)"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withGracePeriod(Duration.ZERO)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withInstructions(\"\u003cp\u003ePlease fill in the new feedback session.\u003c/p\u003e\")"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTimeZone(course.getTimeZone())"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withIsClosingEmailEnabled(true)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withIsPublishedEmailEnabled(true)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        fileName \u003d \"/\" + openSession.getCourseId() + \"_\" + openSession.getFeedbackSessionName()"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + \"_result.csv\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void classSetup() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        deleteDownloadsFile(fileName);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_SESSIONS_PAGE);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        InstructorFeedbackSessionsPage feedbackSessionsPage \u003d"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                loginToPage(url, InstructorFeedbackSessionsPage.class, instructor.getGoogleId());"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ______TS(\"verify loaded data\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] loadedSessions \u003d { openSession, closedSession };"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortByCourseId();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(loadedSessions);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ______TS(\"verify response rate\");"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyResponseRate(closedSession, getExpectedResponseRate(closedSession));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyResponseRate(openSession, getExpectedResponseRate(openSession));"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ______TS(\"add new session\");"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForAdded \u003d { closedSession, newSession, openSession };"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.addFeedbackSession(newSession, true);"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been added.\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                + \"Click the \\\"Add New Question\\\" button below to begin adding questions for the feedback session.\");"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        feedbackSessionsPage \u003d getNewPageInstance(url,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                InstructorFeedbackSessionsPage.class);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForAdded);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(newSession);"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ______TS(\"add new copied session\");"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String newName \u003d \"Copied Name\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes copiedSession \u003d openSession.getCopy();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        copiedSession.setCourseId(course.getId());"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        copiedSession.setFeedbackSessionName(newName);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        copiedSession.setCreatedTime(Instant.now());"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.addCopyOfSession(openSession, course, newName);"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                        + \"Please modify settings/questions as necessary.\");"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        feedbackSessionsPage \u003d getNewPageInstance(url,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                InstructorFeedbackSessionsPage.class);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(copiedSession);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(copiedSession);"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        ______TS(\"copy session\");"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        newName \u003d \"Copied Name 2\";"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes copiedSession2 \u003d openSession.getCopy();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        copiedSession2.setCourseId(course.getId());"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        copiedSession2.setFeedbackSessionName(newName);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        copiedSession2.setCreatedTime(Instant.now());"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.copySession(openSession, course, newName);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \"Please modify settings/questions as necessary.\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        feedbackSessionsPage \u003d getNewPageInstance(url,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                InstructorFeedbackSessionsPage.class);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(copiedSession2);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(copiedSession2);"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        ______TS(\"publish results\");"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        openSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_NOW);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.publishSessionResults(openSession);"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been published. \""},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + \"Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(openSession);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(openSession, true);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to selected student\");"},{"lineNumber":146,"author":{"gitId":"Nicolascwy"},"content":"        feedbackSessionsPage.sendReminderEmailToSelectedStudent(openSession, studentToEmail);"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to all student non-submitters\");"},{"lineNumber":155,"author":{"gitId":"Nicolascwy"},"content":"        feedbackSessionsPage.sendReminderEmailToNonSubmitters(openSession);"},{"lineNumber":156,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":157,"author":{"gitId":"Nicolascwy"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":158,"author":{"gitId":"Nicolascwy"},"content":"                        + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":159,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":160,"author":{"gitId":"Nicolascwy"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":162,"author":{"gitId":"Nicolascwy"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":163,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        ______TS(\"resend results link\");"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.resendResultsLink(openSession, studentToEmail);"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"Session published notification emails have been resent\""},{"lineNumber":168,"author":{"gitId":"-"},"content":"                + \" to those students and instructors. Please allow up to 1 hour for all the notification emails to be\""},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + \" sent out.\");"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ______TS(\"unpublish results\");"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        openSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.unpublishSessionResults(openSession);"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been unpublished.\");"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(openSession);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(openSession, false);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results unpublished\""},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ______TS(\"download results\");"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.downloadResults(openSession);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedContent \u003d Arrays.asList(\"Course,tm.e2e.IFSess.CS1101\","},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \"Session Name,Second Session\", \"Question 1,Testing question text\");"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        verifyDownloadedFile(fileName, expectedContent);"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ______TS(\"soft delete session\");"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        closedSession.setDeletedTime(Instant.now());"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForSoftDelete \u003d { copiedSession, copiedSession2, newSession, openSession };"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] softDeletedSessions \u003d { closedSession };"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(closedSession);"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been deleted. \""},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + \"You can restore it from the deleted sessions table below.\");"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForSoftDelete);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySoftDeletedSessionsTable(softDeletedSessions);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertNotNull(getSoftDeletedSession(closedSession.getFeedbackSessionName(),"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ______TS(\"restore session\");"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForRestore \u003d { openSession, newSession, closedSession, copiedSession2,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                copiedSession };"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.restoreSession(closedSession);"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been restored.\");"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForRestore);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertNull(getSoftDeletedSession(closedSession.getFeedbackSessionName(),"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        ______TS(\"permanently delete session\");"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForDelete \u003d { copiedSession, copiedSession2, closedSession,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                openSession };"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(newSession);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.deleteSession(newSession);"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been permanently deleted.\");"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForDelete);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(newSession);"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        ______TS(\"restore all session\");"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForRestoreAll \u003d { openSession, closedSession, copiedSession2,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                copiedSession };"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession2);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.restoreAllSessions();"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"All sessions have been restored.\");"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForRestoreAll);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertNull(getSoftDeletedSession(copiedSession.getFeedbackSessionName(),"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertNull(getSoftDeletedSession(copiedSession2.getFeedbackSessionName(),"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        ______TS(\"delete all session\");"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession2);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForDeleteAll \u003d { closedSession, openSession };"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.deleteAllSessions();"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"All sessions have been permanently deleted.\");"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForDeleteAll);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(copiedSession);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(copiedSession2);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    private String getExpectedResponseRate(FeedbackSessionAttributes session) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        String sessionName \u003d session.getFeedbackSessionName();"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        boolean hasQuestion \u003d testData.feedbackQuestions.values()"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                .anyMatch(q -\u003e q.getFeedbackSessionName().equals(sessionName));"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!hasQuestion) {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return \"0 / 0\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"        long numStudents \u003d testData.students.values()"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                .filter(s -\u003e s.getCourse().equals(session.getCourseId()))"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                .count();"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e uniqueGivers \u003d new HashSet\u003c\u003e();"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        testData.feedbackResponses.values()"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.getFeedbackSessionName().equals(sessionName))"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                .forEach(r -\u003e uniqueGivers.add(r.getGiver()));"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        int numResponses \u003d uniqueGivers.size();"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        return numResponses + \" / \" + numStudents;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"    private void verifySessionPublishedState(FeedbackSessionAttributes feedbackSession, boolean state) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                feedbackSession.getFeedbackSessionName());"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        while (actual.isPublished() \u003d\u003d state \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    feedbackSession.getFeedbackSessionName());"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertEquals(actual.isPublished(), state);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":284,"Nicolascwy":12}},{"path":"src/e2e/java/teammates/e2e/cases/InstructorHomePageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorHomePage;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#INSTRUCTOR_HOME_PAGE}."},{"lineNumber":24,"author":{"gitId":"-"},"content":" */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class InstructorHomePageE2ETest extends BaseE2ETestCase {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private InstructorAttributes instructor;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private StudentAttributes studentToEmail;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private CourseAttributes course;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private CourseAttributes otherCourse;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionAwaiting;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionOpen;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionClosed;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionPublished;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes otherCourseSession;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private String fileName;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorHomePageE2ETest.json\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        studentToEmail \u003d testData.students.get(\"IHome.charlie.d.tmms@IHome.CS2104\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        studentToEmail.setEmail(TestProperties.TEST_EMAIL);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        putDocuments(testData);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        instructor \u003d testData.instructors.get(\"IHome.instr.CS2104\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        course \u003d testData.courses.get(\"IHome.CS2104\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        otherCourse \u003d testData.courses.get(\"IHome.CS1101\");"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        feedbackSessionAwaiting \u003d testData.feedbackSessions.get(\"Second Feedback Session\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        feedbackSessionOpen \u003d testData.feedbackSessions.get(\"First Feedback Session\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        feedbackSessionClosed \u003d testData.feedbackSessions.get(\"Third Feedback Session\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        feedbackSessionPublished \u003d testData.feedbackSessions.get(\"Fourth Feedback Session\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        otherCourseSession \u003d testData.feedbackSessions.get(\"CS1101 Session\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        fileName \u003d \"/\" + feedbackSessionOpen.getCourseId() + \"_\" + feedbackSessionOpen.getFeedbackSessionName()"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + \"_result.csv\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void classSetup() {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        deleteDownloadsFile(fileName);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        InstructorHomePage homePage \u003d loginToPage(url, InstructorHomePage.class, instructor.getGoogleId());"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ______TS(\"verify loaded data\");"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        homePage.sortCoursesById();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int courseIndex \u003d 1;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int otherCourseIndex \u003d 0;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // by default, sessions are sorted by end date in descending order"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] courseSessions \u003d { feedbackSessionOpen, feedbackSessionAwaiting,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                feedbackSessionClosed, feedbackSessionPublished };"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] otherCourseSessions \u003d { otherCourseSession };"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // use course index instead of searching for course in table to test sorted order of courses"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(otherCourseIndex, otherCourse, otherCourseSessions);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(courseIndex, course, courseSessions);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ______TS(\"verify response rate\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c courseSessions.length; i++) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            homePage.verifyResponseRate(courseIndex, i, getExpectedResponseRate(courseSessions[i]));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ______TS(\"copy session\");"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        int sessionIndex \u003d 1;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String newName \u003d \"Copied Name\";"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes copiedSession \u003d feedbackSessionAwaiting.getCopy();"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        copiedSession.setCourseId(otherCourse.getId());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        copiedSession.setFeedbackSessionName(newName);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        copiedSession.setCreatedTime(Instant.now());"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        copiedSession.setTimeZone(otherCourse.getTimeZone());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        homePage.copySession(courseIndex, sessionIndex, otherCourse, newName);"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + \"Please modify settings/questions as necessary.\");"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        homePage \u003d getNewPageInstance(url, InstructorHomePage.class);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        homePage.sortCoursesByName();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // flip index after sorting"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        courseIndex \u003d 0;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        otherCourseIndex \u003d 1;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] otherCourseSessionsWithCopy \u003d { copiedSession, otherCourseSession };"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(otherCourseIndex, otherCourse, otherCourseSessionsWithCopy);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(copiedSession);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ______TS(\"publish results\");"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        sessionIndex \u003d 0;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        feedbackSessionOpen.setResultsVisibleFromTime(Const.TIME_REPRESENTS_NOW);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        homePage.publishSessionResults(courseIndex, sessionIndex);"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been published. \""},{"lineNumber":116,"author":{"gitId":"-"},"content":"                + \"Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        homePage.verifySessionDetails(courseIndex, sessionIndex, feedbackSessionOpen);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(feedbackSessionOpen, true);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to selected student\");"},{"lineNumber":124,"author":{"gitId":"Nicolascwy"},"content":"        homePage.sendReminderEmailToSelectedStudent(courseIndex, sessionIndex, studentToEmail);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":130,"author":{"gitId":"Nicolascwy"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":131,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":132,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to all student non-submitters\");"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":"        homePage.sendReminderEmailToNonSubmitters(courseIndex, sessionIndex);"},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"        homePage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":136,"author":{"gitId":"Nicolascwy"},"content":"                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":137,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":138,"author":{"gitId":"Nicolascwy"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":139,"author":{"gitId":"Nicolascwy"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ______TS(\"resend results link\");"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        homePage.resendResultsLink(courseIndex, sessionIndex, studentToEmail);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"Session published notification emails have been resent\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + \" to those students and instructors. Please allow up to 1 hour for all the notification emails to be\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + \" sent out.\");"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ______TS(\"unpublish results\");"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        feedbackSessionOpen.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        homePage.unpublishSessionResults(courseIndex, sessionIndex);"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been unpublished.\");"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        homePage.verifySessionDetails(courseIndex, sessionIndex, feedbackSessionOpen);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(feedbackSessionOpen, false);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results unpublished\""},{"lineNumber":160,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"        ______TS(\"download results\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        homePage.downloadResults(courseIndex, sessionIndex);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedContent \u003d Arrays.asList(\"Course,tm.e2e.IHome.CS2104\","},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \"Session Name,First Feedback Session\", \"Question 1,Rate 5 other students\u0027 products\");"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        verifyDownloadedFile(fileName, expectedContent);"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ______TS(\"soft delete session\");"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        copiedSession.setDeletedTime(Instant.now());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        homePage.deleteSession(otherCourseIndex, sessionIndex);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been deleted. \""},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + \"You can restore it from the \u0027Sessions\u0027 tab.\");"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        homePage.sortCoursesByCreationDate();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        courseIndex \u003d 1;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        otherCourseIndex \u003d 0;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(otherCourseIndex, otherCourse, otherCourseSessions);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertNotNull(getSoftDeletedSession(copiedSession.getFeedbackSessionName(),"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ______TS(\"archive course\");"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        homePage.archiveCourse(courseIndex);"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The course \" + course.getId() + \" has been archived. \""},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + \"You can retrieve it from the Courses page.\");"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        homePage.verifyNumCourses(1);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        verifyCourseArchivedInDatabase(instructor.getGoogleId(), course);"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ______TS(\"delete course\");"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        otherCourseIndex \u003d 0;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        homePage.deleteCourse(otherCourseIndex);"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The course \" + otherCourse.getId() + \" has been deleted. \""},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + \"You can restore it from the Recycle Bin manually.\");"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        homePage.verifyNumCourses(0);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(BACKDOOR.isCourseInRecycleBin(otherCourse.getId()));"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private String getExpectedResponseRate(FeedbackSessionAttributes session) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String sessionName \u003d session.getFeedbackSessionName();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        boolean hasQuestion \u003d testData.feedbackQuestions.values()"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .anyMatch(q -\u003e q.getFeedbackSessionName().equals(sessionName));"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (!hasQuestion) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return \"0 / 0\";"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        long numStudents \u003d testData.students.values()"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .filter(s -\u003e s.getCourse().equals(session.getCourseId()))"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .count();"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e uniqueGivers \u003d new HashSet\u003c\u003e();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        testData.feedbackResponses.values()"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.getFeedbackSessionName().equals(sessionName))"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .forEach(r -\u003e uniqueGivers.add(r.getGiver()));"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        int numResponses \u003d uniqueGivers.size();"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return numResponses + \" / \" + numStudents;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private void verifySessionPublishedState(FeedbackSessionAttributes feedbackSession, boolean state) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                feedbackSession.getFeedbackSessionName());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        while (actual.isPublished() \u003d\u003d state \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    feedbackSession.getFeedbackSessionName());"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(actual.isPublished(), state);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private void verifyCourseArchivedInDatabase(String instructorId, CourseAttributes course) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        CourseAttributes actual \u003d getArchivedCourse(instructorId, course.getId());"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        while (actual \u003d\u003d null \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            actual \u003d getArchivedCourse(instructorId, course.getId());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertEquals(actual, course);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":236,"Nicolascwy":12}},{"path":"src/e2e/java/teammates/e2e/pageobjects/AdminHomePage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the admin home page of the website."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class AdminHomePage extends AppPage {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"instructor-details-single-line\")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private WebElement detailsSingleLineTextBox;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FindBy (id \u003d \"instructor-name\")"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private WebElement nameTextBox;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FindBy (id \u003d \"instructor-email\")"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private WebElement emailTextBox;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FindBy (id \u003d \"instructor-institution\")"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private WebElement institutionTextBox;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FindBy (id \u003d \"add-instructor\")"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private WebElement submitButton;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FindBy (id \u003d \"add-instructor-single-line\")"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private WebElement submitButtonDetailsSingleLineForm;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FindBy (id \u003d \"add-all-instructors\")"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private WebElement addAllInstructorsButton;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AdminHomePage(Browser browser) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return getPageSource().contains(\"Add New Instructor\u003c/h1\u003e\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void queueInstructorForAdding(String name, String email, String institute) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (name !\u003d null) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            fillTextBox(nameTextBox, name);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (email !\u003d null) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            fillTextBox(emailTextBox, email);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (institute !\u003d null) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            fillTextBox(institutionTextBox, institute);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        click(submitButton);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void queueInstructorForAdding(String instructorDetails) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (instructorDetails !\u003d null) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            fillTextBox(detailsSingleLineTextBox, instructorDetails);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        click(submitButtonDetailsSingleLineForm);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void addAllInstructors() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        click(addAllInstructorsButton);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        waitForElementToBeClickable(addAllInstructorsButton);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String getMessageForInstructor(int i) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        By by \u003d By.id(\"message-instructor-\" + i);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        waitForElementVisibility(by);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        WebElement element \u003d browser.driver.findElement(by);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (element \u003d\u003d null) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return element.getText();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    public void clickMoreInfoButtonForRegisteredInstructor(int i) {"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        By by \u003d By.id(\"instructor-\" + i + \"-registered-info-button\");"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        waitForElementVisibility(by);"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        WebElement element \u003d browser.driver.findElement(by);"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        element.click();"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        waitForElementVisibility(By.className(\"modal-backdrop\"));"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    public void clickResetAccountRequestLink() {"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        By by \u003d By.id(\"reset-account-request-link\");"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        WebElement element \u003d browser.driver.findElement(by);"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        element.click();"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        ThreadHelper.waitFor(1000); // Modals are stacked, wait briefly to ensure confirmation modal is shown"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cWebElement\u003e okButtons \u003d browser.driver.findElements(By.className(\"modal-btn-ok\"));"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        clickDismissModalButtonAndWaitForModalHidden(okButtons.get(1)); // Second modal is confirmation modal"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":78,"samuelfangjw":20}},{"path":"src/e2e/java/teammates/e2e/pageobjects/AdminSearchPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.openqa.selenium.NoSuchElementException;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the admin home page of the website."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AdminSearchPage extends AppPage {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final int STUDENT_COL_DETAILS \u003d 1;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final int STUDENT_COL_NAME \u003d 2;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final int STUDENT_COL_GOOGLE_ID \u003d 3;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final int STUDENT_COL_INSTITUTE \u003d 4;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final int STUDENT_COL_COMMENTS \u003d 5;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final int STUDENT_COL_OPTIONS \u003d 6;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final int INSTRUCTOR_COL_COURSE_ID \u003d 1;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final int INSTRUCTOR_COL_NAME \u003d 2;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final int INSTRUCTOR_COL_GOOGLE_ID \u003d 3;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final int INSTRUCTOR_COL_INSTITUTE \u003d 4;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final int INSTRUCTOR_COL_OPTIONS \u003d 5;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    private static final int ACCOUNT_REQUEST_COL_NAME \u003d 1;"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    private static final int ACCOUNT_REQUEST_COL_EMAIL \u003d 2;"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    private static final int ACCOUNT_REQUEST_COL_INSTITUTE \u003d 3;"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    private static final int ACCOUNT_REQUEST_COL_CREATED_AT \u003d 4;"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    private static final int ACCOUNT_REQUEST_COL_REGISTERED_AT \u003d 5;"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String EXPANDED_ROWS_HEADER_EMAIL \u003d \"Email\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String EXPANDED_ROWS_HEADER_COURSE_JOIN_LINK \u003d \"Course Join Link\";"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    private static final String EXPANDED_ROWS_HEADER_ACCOUNT_REGISTRATION_LINK \u003d \"Account Registration Link\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String LINK_TEXT_RESET_GOOGLE_ID \u003d \"Reset Google ID\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"search-box\")"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private WebElement inputBox;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"search-button\")"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private WebElement searchButton;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"show-student-links\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private WebElement expandStudentLinksButton;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"show-instructor-links\")"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private WebElement expandInstructorLinksButton;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    @FindBy(id \u003d \"show-account-request-links\")"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    private WebElement expandAccountRequestLinksButton;"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"hide-student-links\")"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private WebElement collapseStudentLinksButton;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"hide-instructor-links\")"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private WebElement collapseInstructorLinksButton;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    @FindBy(id \u003d \"hide-account-request-links\")"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    private WebElement collapseAccountRequestLinksButton;"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public AdminSearchPage(Browser browser) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return getPageSource().contains(\"Admin Search\u003c/h1\u003e\");"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void inputSearchContent(String content) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        inputBox.sendKeys(content);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void clearSearchBox() {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        inputBox.clear();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void clickSearchButton() {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        click(searchButton);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        waitForPageToLoad();"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void regenerateStudentKey(StudentAttributes student) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        WebElement studentRow \u003d getStudentRow(student);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        studentRow.findElement(By.xpath(\"//button[text()\u003d\u0027Regenerate key\u0027]\")).click();"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        waitForConfirmationModalAndClickOk();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        waitForPageToLoad(true);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void regenerateInstructorKey(InstructorAttributes instructor) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        WebElement instructorRow \u003d getInstructorRow(instructor);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        instructorRow.findElement(By.xpath(\"//button[text()\u003d\u0027Regenerate key\u0027]\")).click();"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        waitForConfirmationModalAndClickOk();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        waitForPageToLoad(true);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void clickExpandStudentLinks() {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        click(expandStudentLinksButton);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        waitForPageToLoad();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void clickExpandInstructorLinks() {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        click(expandInstructorLinksButton);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        waitForPageToLoad();"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    public void clickExpandAccountRequestLinks() {"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        click(expandAccountRequestLinksButton);"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        waitForPageToLoad();"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void clickCollapseStudentLinks() {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        click(collapseStudentLinksButton);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        waitForPageToLoad();"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void clickCollapseInstructorLinks() {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        click(collapseInstructorLinksButton);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        waitForPageToLoad();"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    public void clickCollapseAccountRequestLinks() {"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        click(collapseAccountRequestLinksButton);"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        waitForPageToLoad();"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public WebElement getStudentRow(StudentAttributes student) {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String details \u003d String.format(\"%s [%s] (%s)\", student.getCourse(),"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                student.getSection() \u003d\u003d null ? Const.DEFAULT_SECTION : student.getSection(), student.getTeam());"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d browser.driver.findElements(By.cssSelector(\"#search-table-student tbody tr\"));"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e columns \u003d row.findElements(By.tagName(\"td\"));"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            if (columns.get(STUDENT_COL_DETAILS - 1).getAttribute(\"innerHTML\").contains(details)"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                    \u0026\u0026 columns.get(STUDENT_COL_NAME - 1).getAttribute(\"innerHTML\").contains(student.getName())) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                return row;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public String getStudentDetails(WebElement studentRow) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return getColumnText(studentRow, STUDENT_COL_DETAILS);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public String getStudentName(WebElement studentRow) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return getColumnText(studentRow, STUDENT_COL_NAME);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public String getStudentGoogleId(WebElement studentRow) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return getColumnText(studentRow, STUDENT_COL_GOOGLE_ID);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public String getStudentHomeLink(WebElement studentRow) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return getColumnLink(studentRow, STUDENT_COL_GOOGLE_ID);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public String getStudentInstitute(WebElement studentRow) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return getColumnText(studentRow, STUDENT_COL_INSTITUTE);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public String getStudentComments(WebElement studentRow) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return getColumnText(studentRow, STUDENT_COL_COMMENTS);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public String getStudentManageAccountLink(WebElement studentRow) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return getColumnLink(studentRow, STUDENT_COL_OPTIONS);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public String getStudentEmail(WebElement studentRow) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return getExpandedRowInputValue(studentRow, EXPANDED_ROWS_HEADER_EMAIL);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public String getStudentJoinLink(WebElement studentRow) {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return getExpandedRowInputValue(studentRow, EXPANDED_ROWS_HEADER_COURSE_JOIN_LINK);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public String getStudentJoinLink(StudentAttributes student) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        WebElement studentRow \u003d getStudentRow(student);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return getStudentJoinLink(studentRow);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void resetStudentGoogleId(StudentAttributes student) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        WebElement studentRow \u003d getStudentRow(student);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        WebElement link \u003d studentRow.findElement(By.linkText(LINK_TEXT_RESET_GOOGLE_ID));"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        link.click();"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"        waitForConfirmationModalAndClickOk();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        waitForElementStaleness(link);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public WebElement getInstructorRow(InstructorAttributes instructor) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String xpath \u003d String.format("},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \"//table[@id\u003d\u0027search-table-instructor\u0027]/tbody/tr[td[%d][span[text()\u003d\u0027%s\u0027]] and td[%d]\u003d\u0027%s\u0027]\","},{"lineNumber":208,"author":{"gitId":"-"},"content":"                INSTRUCTOR_COL_COURSE_ID, instructor.getCourseId(), INSTRUCTOR_COL_NAME, instructor.getName());"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return browser.driver.findElement(By.xpath(xpath));"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public String getInstructorCourseId(WebElement instructorRow) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return getColumnText(instructorRow, INSTRUCTOR_COL_COURSE_ID);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public String getInstructorName(WebElement instructorRow) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return getColumnText(instructorRow, INSTRUCTOR_COL_NAME);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public String getInstructorGoogleId(WebElement instructorRow) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return getColumnText(instructorRow, INSTRUCTOR_COL_GOOGLE_ID);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public String getInstructorHomePageLink(WebElement instructorRow) {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        return getColumnLink(instructorRow, INSTRUCTOR_COL_GOOGLE_ID);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public String getInstructorInstitute(WebElement instructorRow) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return getColumnText(instructorRow, INSTRUCTOR_COL_INSTITUTE);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public String getInstructorManageAccountLink(WebElement instructorRow) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        return getColumnLink(instructorRow, INSTRUCTOR_COL_OPTIONS);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public String getInstructorEmail(WebElement instructorRow) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return getExpandedRowInputValue(instructorRow, EXPANDED_ROWS_HEADER_EMAIL);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public String getInstructorJoinLink(WebElement instructorRow) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        return getExpandedRowInputValue(instructorRow, EXPANDED_ROWS_HEADER_COURSE_JOIN_LINK);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public String getInstructorJoinLink(InstructorAttributes instructor) {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        WebElement instructorRow \u003d getInstructorRow(instructor);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return getInstructorJoinLink(instructorRow);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void resetInstructorGoogleId(InstructorAttributes instructor) {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        WebElement instructorRow \u003d getInstructorRow(instructor);"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        WebElement link \u003d instructorRow.findElement(By.linkText(LINK_TEXT_RESET_GOOGLE_ID));"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        link.click();"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        waitForConfirmationModalAndClickOk();"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        waitForElementStaleness(link);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"    public WebElement getAccountRequestRow(AccountRequestAttributes accountRequest) {"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d accountRequest.getEmail();"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d accountRequest.getInstitute();"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cWebElement\u003e rows \u003d browser.driver.findElements(By.cssSelector(\"#search-table-account-request tbody tr\"));"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"        for (WebElement row : rows) {"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"            List\u003cWebElement\u003e columns \u003d row.findElements(By.tagName(\"td\"));"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"            if (columns.get(ACCOUNT_REQUEST_COL_EMAIL - 1).getAttribute(\"innerHTML\").contains(email)"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"                    \u0026\u0026 columns.get(ACCOUNT_REQUEST_COL_INSTITUTE - 1).getAttribute(\"innerHTML\").contains(institute)) {"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"                return row;"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"        return null;"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"    public String getAccountRequestName(WebElement accountRequestRow) {"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"        return getColumnText(accountRequestRow, ACCOUNT_REQUEST_COL_NAME);"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":"    public String getAccountRequestEmail(WebElement accountRequestRow) {"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"        return getColumnText(accountRequestRow, ACCOUNT_REQUEST_COL_EMAIL);"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":"    public String getAccountRequestInstitute(WebElement accountRequestRow) {"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"        return getColumnText(accountRequestRow, ACCOUNT_REQUEST_COL_INSTITUTE);"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"    public String getAccountRequestCreatedAt(WebElement accountRequestRow) {"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"        return getColumnText(accountRequestRow, ACCOUNT_REQUEST_COL_CREATED_AT);"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"    public String getAccountRequestRegisteredAt(WebElement accountRequestRow) {"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"        return getColumnText(accountRequestRow, ACCOUNT_REQUEST_COL_REGISTERED_AT);"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"    public String getAccountRequestRegistrationLink(WebElement accountRequestRow) {"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"        return getExpandedRowInputValue(accountRequestRow, EXPANDED_ROWS_HEADER_ACCOUNT_REGISTRATION_LINK);"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"    public void clickDeleteAccountRequestButton(AccountRequestAttributes accountRequest) {"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":"        WebElement accountRequestRow \u003d getAccountRequestRow(accountRequest);"},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"        WebElement deleteButton \u003d accountRequestRow.findElement(By.cssSelector(\"[id^\u003d\u0027delete-account-request-\u0027]\"));"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"        deleteButton.click();"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"        waitForConfirmationModalAndClickOk();"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"        waitForPageToLoad();"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":"    public void clickResetAccountRequestButton(AccountRequestAttributes accountRequest) {"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"        WebElement accountRequestRow \u003d getAccountRequestRow(accountRequest);"},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"        WebElement deleteButton \u003d accountRequestRow.findElement(By.cssSelector(\"[id^\u003d\u0027reset-account-request-\u0027]\"));"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"        deleteButton.click();"},{"lineNumber":308,"author":{"gitId":"samuelfangjw"},"content":"        waitForConfirmationModalAndClickOk();"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"        waitForPageToLoad();"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"    public int getNumExpandedRows(WebElement row) {"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        String xpath \u003d \"following-sibling::tr[1]/td/ul/li\";"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        return row.findElements(By.xpath(xpath)).size();"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"    private String getColumnText(WebElement row, int columnNum) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        String xpath \u003d String.format(\"td[%d]\", columnNum);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        return row.findElement(By.xpath(xpath)).getText();"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"    private String getColumnLink(WebElement row, int columnNum) {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            String xpath \u003d String.format(\"td[%d]/a\", columnNum);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            return row.findElement(By.xpath(xpath)).getAttribute(\"href\");"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            return \"\";"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    private String getExpandedRowInputValue(WebElement row, String rowHeader) {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            String xpath \u003d String.format(\"following-sibling::tr[1]/td/ul/li[contains(., \u0027%s\u0027)]/input\", rowHeader);"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return row.findElement(By.xpath(xpath)).getAttribute(\"value\");"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            return \"\";"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public void verifyStudentRowContent(StudentAttributes student, AccountAttributes account,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                                        String expectedDetails, String expectedManageAccountLink,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                                        String expectedHomePageLink) {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        WebElement studentRow \u003d getStudentRow(student);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        String actualDetails \u003d getStudentDetails(studentRow);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        String actualName \u003d getStudentName(studentRow);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        String actualGoogleId \u003d getStudentGoogleId(studentRow);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        String actualHomepageLink \u003d getStudentHomeLink(studentRow);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        String actualInstitute \u003d getStudentInstitute(studentRow);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        String actualComment \u003d getStudentComments(studentRow);"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        String actualManageAccountLink \u003d getStudentManageAccountLink(studentRow);"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"        String expectedName \u003d student.getName();"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        String expectedGoogleId \u003d StringHelper.convertToEmptyStringIfNull(student.getGoogleId());"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        String expectedInstitute \u003d StringHelper.convertToEmptyStringIfNull(account.getInstitute());"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        String expectedComment \u003d StringHelper.convertToEmptyStringIfNull(student.getComments());"},{"lineNumber":356,"author":{"gitId":"-"},"content":""},{"lineNumber":357,"author":{"gitId":"-"},"content":"        assertEquals(expectedDetails, actualDetails);"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, actualName);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        assertEquals(expectedGoogleId, actualGoogleId);"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        assertEquals(expectedInstitute, actualInstitute);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        assertEquals(expectedComment, actualComment);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        assertEquals(expectedManageAccountLink, actualManageAccountLink);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        assertEquals(expectedHomePageLink, actualHomepageLink);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"    public void verifyStudentExpandedLinks(StudentAttributes student, int expectedNumExpandedRows) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        clickExpandStudentLinks();"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        WebElement studentRow \u003d getStudentRow(student);"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        String actualEmail \u003d getStudentEmail(studentRow);"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        String actualJoinLink \u003d getStudentJoinLink(studentRow);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        int actualNumExpandedRows \u003d getNumExpandedRows(studentRow);"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        String expectedEmail \u003d student.getEmail();"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, actualEmail);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        assertNotEquals(\"\", actualJoinLink);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        assertEquals(expectedNumExpandedRows, actualNumExpandedRows);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    public void verifyInstructorRowContent(InstructorAttributes instructor, AccountAttributes account,"},{"lineNumber":381,"author":{"gitId":"-"},"content":"                                           String expectedManageAccountLink, String expectedHomePageLink) {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        WebElement instructorRow \u003d getInstructorRow(instructor);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        String actualCourseId \u003d getInstructorCourseId(instructorRow);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        String actualName \u003d getInstructorName(instructorRow);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        String actualGoogleId \u003d getInstructorGoogleId(instructorRow);"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        String actualHomePageLink \u003d getInstructorHomePageLink(instructorRow);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        String actualInstitute \u003d getInstructorInstitute(instructorRow);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        String actualManageAccountLink \u003d getInstructorManageAccountLink(instructorRow);"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"        String expectedCourseId \u003d instructor.getCourseId();"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        String expectedName \u003d instructor.getName();"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        String expectedGoogleId \u003d StringHelper.convertToEmptyStringIfNull(instructor.getGoogleId());"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        String expectedInstitute \u003d StringHelper.convertToEmptyStringIfNull(account.getInstitute());"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        assertEquals(expectedCourseId, actualCourseId);"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, actualName);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        assertEquals(expectedGoogleId, actualGoogleId);"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        assertEquals(expectedHomePageLink, actualHomePageLink);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        assertEquals(expectedInstitute, actualInstitute);"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        assertEquals(expectedManageAccountLink, actualManageAccountLink);"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"    public void verifyInstructorExpandedLinks(InstructorAttributes instructor) {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        clickExpandInstructorLinks();"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        WebElement instructorRow \u003d getInstructorRow(instructor);"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        String actualEmail \u003d getInstructorEmail(instructorRow);"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        String actualJoinLink \u003d getInstructorJoinLink(instructorRow);"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"        String expectedEmail \u003d instructor.getEmail();"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, actualEmail);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        assertNotEquals(\"\", actualJoinLink);"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"samuelfangjw"},"content":"    public void verifyAccountRequestRowContent(AccountRequestAttributes accountRequest) {"},{"lineNumber":416,"author":{"gitId":"samuelfangjw"},"content":"        WebElement accountRequestRow \u003d getAccountRequestRow(accountRequest);"},{"lineNumber":417,"author":{"gitId":"samuelfangjw"},"content":"        String actualName \u003d getAccountRequestName(accountRequestRow);"},{"lineNumber":418,"author":{"gitId":"samuelfangjw"},"content":"        String actualEmail \u003d getAccountRequestEmail(accountRequestRow);"},{"lineNumber":419,"author":{"gitId":"samuelfangjw"},"content":"        String actualInstitute \u003d getAccountRequestInstitute(accountRequestRow);"},{"lineNumber":420,"author":{"gitId":"samuelfangjw"},"content":"        String actualCreatedAt \u003d getAccountRequestCreatedAt(accountRequestRow);"},{"lineNumber":421,"author":{"gitId":"samuelfangjw"},"content":"        String actualRegisteredAt \u003d getAccountRequestRegisteredAt(accountRequestRow);"},{"lineNumber":422,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":423,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getName(), actualName);"},{"lineNumber":424,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getEmail(), actualEmail);"},{"lineNumber":425,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getInstitute(), actualInstitute);"},{"lineNumber":426,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(actualCreatedAt.isBlank());"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        if (accountRequest.getRegisteredAt() \u003d\u003d null) {"},{"lineNumber":428,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(\"Not Registered Yet\", actualRegisteredAt);"},{"lineNumber":429,"author":{"gitId":"samuelfangjw"},"content":"        } else {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            assertFalse(actualRegisteredAt.isBlank());"},{"lineNumber":431,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":432,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":433,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":434,"author":{"gitId":"samuelfangjw"},"content":"    public void verifyAccountRequestExpandedLinks(AccountRequestAttributes accountRequest) {"},{"lineNumber":435,"author":{"gitId":"samuelfangjw"},"content":"        clickExpandAccountRequestLinks();"},{"lineNumber":436,"author":{"gitId":"samuelfangjw"},"content":"        WebElement accountRequestRow \u003d getAccountRequestRow(accountRequest);"},{"lineNumber":437,"author":{"gitId":"samuelfangjw"},"content":"        String actualRegistrationLink \u003d getAccountRequestRegistrationLink(accountRequestRow);"},{"lineNumber":438,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":439,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(actualRegistrationLink.isBlank());"},{"lineNumber":440,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":441,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":442,"author":{"gitId":"samuelfangjw"},"content":"    public void verifyLinkExpansionButtons(StudentAttributes student,"},{"lineNumber":443,"author":{"gitId":"samuelfangjw"},"content":"            InstructorAttributes instructor, AccountRequestAttributes accountRequest) {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        WebElement studentRow \u003d getStudentRow(student);"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        WebElement instructorRow \u003d getInstructorRow(instructor);"},{"lineNumber":446,"author":{"gitId":"samuelfangjw"},"content":"        WebElement accountRequestRow \u003d getAccountRequestRow(accountRequest);"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"        clickExpandStudentLinks();"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        clickExpandInstructorLinks();"},{"lineNumber":450,"author":{"gitId":"samuelfangjw"},"content":"        clickExpandAccountRequestLinks();"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        int numExpandedStudentRows \u003d getNumExpandedRows(studentRow);"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        int numExpandedInstructorRows \u003d getNumExpandedRows(instructorRow);"},{"lineNumber":453,"author":{"gitId":"samuelfangjw"},"content":"        int numExpandedAccountRequestRows \u003d getNumExpandedRows(accountRequestRow);"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        assertNotEquals(numExpandedStudentRows, 0);"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        assertNotEquals(numExpandedInstructorRows, 0);"},{"lineNumber":456,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(numExpandedAccountRequestRows, 0);"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"        clickCollapseInstructorLinks();"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        numExpandedStudentRows \u003d getNumExpandedRows(studentRow);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        numExpandedInstructorRows \u003d getNumExpandedRows(instructorRow);"},{"lineNumber":461,"author":{"gitId":"samuelfangjw"},"content":"        numExpandedAccountRequestRows \u003d getNumExpandedRows(accountRequestRow);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        assertNotEquals(numExpandedStudentRows, 0);"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        assertEquals(numExpandedInstructorRows, 0);"},{"lineNumber":464,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(numExpandedAccountRequestRows, 0);"},{"lineNumber":465,"author":{"gitId":"-"},"content":""},{"lineNumber":466,"author":{"gitId":"-"},"content":"        clickExpandInstructorLinks();"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        clickCollapseStudentLinks();"},{"lineNumber":468,"author":{"gitId":"samuelfangjw"},"content":"        clickCollapseAccountRequestLinks();"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":470,"author":{"gitId":"-"},"content":""},{"lineNumber":471,"author":{"gitId":"-"},"content":"        numExpandedStudentRows \u003d getNumExpandedRows(studentRow);"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        numExpandedInstructorRows \u003d getNumExpandedRows(instructorRow);"},{"lineNumber":473,"author":{"gitId":"samuelfangjw"},"content":"        numExpandedAccountRequestRows \u003d getNumExpandedRows(accountRequestRow);"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        assertEquals(numExpandedStudentRows, 0);"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        assertNotEquals(numExpandedInstructorRows, 0);"},{"lineNumber":476,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(numExpandedAccountRequestRows, 0);"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"    public void verifyRegenerateStudentKey(StudentAttributes student, String originalJoinLink) {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        verifyStatusMessage(\"Student\u0027s key for this course has been successfully regenerated,\""},{"lineNumber":481,"author":{"gitId":"-"},"content":"                + \" and the email has been sent.\");"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"        String regeneratedJoinLink \u003d getStudentJoinLink(student);"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        assertNotEquals(regeneratedJoinLink, originalJoinLink);"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"    public void verifyRegenerateInstructorKey(InstructorAttributes instructor, String originalJoinLink) {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        verifyStatusMessage(\"Instructor\u0027s key for this course has been successfully regenerated,\""},{"lineNumber":489,"author":{"gitId":"-"},"content":"                + \" and the email has been sent.\");"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"        String regeneratedJoinLink \u003d getInstructorJoinLink(instructor);"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        assertNotEquals(regeneratedJoinLink, originalJoinLink);"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":380,"samuelfangjw":115}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorFeedbackEditPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.openqa.selenium.Keys;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackConstantSumQuestionDetails;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackContributionQuestionDetails;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMcqQuestionDetails;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMsqQuestionDetails;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackNumericalScaleQuestionDetails;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionType;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRankOptionsQuestionDetails;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRankQuestionDetails;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRubricQuestionDetails;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Represents the instructor feedback edit page of the website."},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class InstructorFeedbackEditPage extends AppPage {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String CUSTOM_FEEDBACK_PATH_OPTION \u003d \"Custom feedback path\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_PATH_SEPARATOR \u003d \" will give feedback on \";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String CUSTOM_VISIBILITY_OPTION \u003d \"Custom visibility options\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-fs-edit\")"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private WebElement fsEditButton;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-fs-save\")"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private WebElement fsSaveButton;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-fs-copy\")"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private WebElement fsCopyButton;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"edit-course-id\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private WebElement courseIdTextBox;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"time-zone\")"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private WebElement timezoneDropDown;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"course-name\")"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private WebElement courseNameTextBox;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"edit-session-name\")"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private WebElement sessionNameTextBox;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"instructions\")"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private WebElement instructionsEditor;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-date\")"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private WebElement startDateBox;"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-time\")"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private WebElement startTimeDropdown;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-date\")"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private WebElement endDateBox;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-time\")"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private WebElement endTimeDropdown;"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"grace-period\")"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private WebElement gracePeriodDropdown;"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-status\")"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private WebElement submissionStatusTextBox;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"published-status\")"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private WebElement publishStatusTextBox;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-visibility\")"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private WebElement changeVisibilityButton;"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-custom\")"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private WebElement customSessionVisibleTimeButton;"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-date\")"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityDateBox;"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-time\")"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityTimeDropdown;"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-at-open\")"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private WebElement openSessionVisibleTimeButton;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-custom\")"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private WebElement customResponseVisibleTimeButton;"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-date\")"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityDateBox;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-time\")"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityTimeDropdown;"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-immediately\")"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private WebElement immediateResponseVisibleTimeButton;"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-manually\")"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private WebElement manualResponseVisibleTimeButton;"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-email\")"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private WebElement changeEmailButton;"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-opening\")"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private WebElement openingSessionEmailCheckbox;"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-closing\")"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private WebElement closingSessionEmailCheckbox;"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-published\")"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private WebElement publishedSessionEmailCheckbox;"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-new-question\")"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private WebElement addNewQuestionButton;"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-copy-question\")"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private WebElement copyQuestionButton;"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"preview-student\")"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private WebElement previewAsStudentDropdown;"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-preview-student\")"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private WebElement previewAsStudentButton;"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"preview-instructor\")"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private WebElement previewAsInstructorDropdown;"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-preview-instructor\")"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private WebElement previewAsInstructorButton;"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public InstructorFeedbackEditPage(Browser browser) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Edit Feedback Session\");"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(CourseAttributes course, FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"instructions\"));"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(getCourseId(), course.getId());"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(getCourseName(), course.getName());"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(getTimeZone(), feedbackSession.getTimeZone());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(getFeedbackSessionName(), feedbackSession.getFeedbackSessionName());"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(getInstructions(), feedbackSession.getInstructions());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(getStartDate(), getDateString(feedbackSession.getStartTime(), feedbackSession.getTimeZone()));"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(getStartTime(), getTimeString(feedbackSession.getStartTime(), feedbackSession.getTimeZone()));"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(getEndDate(), getDateString(feedbackSession.getEndTime(), feedbackSession.getTimeZone()));"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(getEndTime(), getTimeString(feedbackSession.getEndTime(), feedbackSession.getTimeZone()));"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(getGracePeriod(), feedbackSession.getGracePeriodMinutes() + \" min\");"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        verifySubmissionStatus(feedbackSession);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        verifyPublishedStatus(feedbackSession);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        verifyVisibilitySettings(feedbackSession);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        verifyEmailSettings(feedbackSession);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void verifySubmissionStatus(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String submissionStatus \u003d getSubmissionStatus();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (feedbackSession.isClosed()) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            assertEquals(submissionStatus, \"Closed\");"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } else if (feedbackSession.isVisible() \u0026\u0026 (feedbackSession.isOpened() || feedbackSession.isInGracePeriod())) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            assertEquals(submissionStatus, \"Open\");"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            assertEquals(submissionStatus, \"Awaiting\");"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private void verifyPublishedStatus(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String publishedStatus \u003d getPublishedStatus();"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (feedbackSession.isPublished()) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            assertEquals(publishedStatus, \"Published\");"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            assertEquals(publishedStatus, \"Not Published\");"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private void verifyVisibilitySettings(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Instant sessionVisibleTime \u003d feedbackSession.getSessionVisibleFromTime();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Instant responseVisibleTime \u003d feedbackSession.getResultsVisibleFromTime();"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // Default settings, assert setting section not expanded"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (sessionVisibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                \u0026\u0026 responseVisibleTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            assertTrue(isElementPresent(\"btn-change-visibility\"));"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        verifySessionVisibilitySettings(sessionVisibleTime, feedbackSession);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        verifyResponseVisibilitySettings(responseVisibleTime, feedbackSession);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"    private void verifySessionVisibilitySettings(Instant sessionVisibleTime,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                                                 FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (sessionVisibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            assertTrue(openSessionVisibleTimeButton.isSelected());"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            assertTrue(customSessionVisibleTimeButton.isSelected());"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            assertEquals(getSessionVisibilityDate(), getDateString(feedbackSession.getSessionVisibleFromTime(),"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            assertEquals(getSessionVisibilityTime(), getTimeString(feedbackSession.getSessionVisibleFromTime(),"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private void verifyResponseVisibilitySettings(Instant responseVisibleTime,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                                                  FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        if (responseVisibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            assertTrue(immediateResponseVisibleTimeButton.isSelected());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        } else if (responseVisibleTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            assertTrue(manualResponseVisibleTimeButton.isSelected());"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            assertTrue(customSessionVisibleTimeButton.isSelected());"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            assertEquals(getResponseVisibilityDate(), getDateString(feedbackSession.getResultsVisibleFromTime(),"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            assertEquals(getResponseVisibilityTime(), getTimeString(feedbackSession.getResultsVisibleFromTime(),"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private void verifyEmailSettings(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        boolean isOpeningEmailEnabled \u003d feedbackSession.isOpeningEmailEnabled();"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        boolean isClosingEmailEnabled \u003d feedbackSession.isClosingEmailEnabled();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        boolean isPublishedEmailEnabled \u003d feedbackSession.isPublishedEmailEnabled();"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // Default settings, assert setting section not expanded"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (isOpeningEmailEnabled \u0026\u0026 isClosingEmailEnabled \u0026\u0026 isPublishedEmailEnabled) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            assertTrue(isElementPresent(\"btn-change-email\"));"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        if (isOpeningEmailEnabled) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            assertTrue(openingSessionEmailCheckbox.isSelected());"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        if (isClosingEmailEnabled) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            assertTrue(closingSessionEmailCheckbox.isSelected());"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        if (isPublishedEmailEnabled) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            assertTrue(publishedSessionEmailCheckbox.isSelected());"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void editSessionDetails(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        click(fsEditButton);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        setInstructions(newFeedbackSessionDetails.getInstructions());"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        setSessionStartDateTime(newFeedbackSessionDetails.getStartTime(), newFeedbackSessionDetails.getTimeZone());"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        setSessionEndDateTime(newFeedbackSessionDetails.getEndTime(), newFeedbackSessionDetails.getTimeZone());"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        selectGracePeriod(newFeedbackSessionDetails.getGracePeriodMinutes());"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        setVisibilitySettings(newFeedbackSessionDetails);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        setEmailSettings(newFeedbackSessionDetails);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        click(fsSaveButton);"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void copySessionToOtherCourse(CourseAttributes otherCourse, String sessionName) {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        click(fsCopyButton);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), sessionName);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            if (courseId.equals(otherCourse.getId())) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"    public void deleteSession() {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-fs-delete\")));"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public FeedbackSubmitPage previewAsStudent(StudentAttributes student) {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(previewAsStudentDropdown, String.format(\"[%s] %s\", student.getTeam(), student.getName()));"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        click(previewAsStudentButton);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(2000);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        switchToNewWindow();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return changePageType(FeedbackSubmitPage.class);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public FeedbackSubmitPage previewAsInstructor(InstructorAttributes instructor) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(previewAsInstructorDropdown, instructor.getName());"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        click(previewAsInstructorButton);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(2000);"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        switchToNewWindow();"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        return changePageType(FeedbackSubmitPage.class);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"    public void verifyNumQuestions(int expected) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        assertEquals(getNumQuestions(), expected);"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"    public void verifyQuestionDetails(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        scrollElementToCenter(getQuestionForm(questionNum));"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        assertEquals(feedbackQuestion.getQuestionType(), getQuestionType(questionNum));"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        assertEquals(feedbackQuestion.getQuestionNumber(), getQuestionNumber(questionNum));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        assertEquals(feedbackQuestion.getQuestionDetailsCopy().getQuestionText(), getQuestionBrief(questionNum));"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        assertEquals(getQuestionDescription(questionNum), feedbackQuestion.getQuestionDescription());"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        verifyFeedbackPathSettings(questionNum, feedbackQuestion);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        verifyQuestionVisibilitySettings(questionNum, feedbackQuestion);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"    private void verifyFeedbackPathSettings(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assertEquals(getDisplayGiverName(feedbackQuestion.getGiverType()), getFeedbackGiver(questionNum));"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        String feedbackReceiver \u003d getFeedbackReceiver(questionNum);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        assertEquals(getDisplayRecipientName(feedbackQuestion.getRecipientType()), feedbackReceiver);"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"        if (feedbackReceiver.equals(getDisplayRecipientName(FeedbackParticipantType.INSTRUCTORS))"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                || feedbackReceiver.equals(getDisplayRecipientName(FeedbackParticipantType.STUDENTS_EXCLUDING_SELF))"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                || feedbackReceiver.equals(getDisplayRecipientName(FeedbackParticipantType.TEAMS_EXCLUDING_SELF))) {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            verifyNumberOfEntitiesToGiveFeedbackTo(questionNum, feedbackQuestion.getNumberOfEntitiesToGiveFeedbackTo());"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    private void verifyNumberOfEntitiesToGiveFeedbackTo(int questionNum, int numberOfEntitiesToGiveFeedbackTo) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        WebElement feedbackPathPanel \u003d questionForm.findElement(By.tagName(\"tm-feedback-path-panel\"));"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        if (numberOfEntitiesToGiveFeedbackTo \u003d\u003d Const.MAX_POSSIBLE_RECIPIENTS) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            assertTrue(feedbackPathPanel.findElement(By.id(\"unlimited-recipients\")).isSelected());"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            assertTrue(feedbackPathPanel.findElement(By.id(\"custom-recipients\")).isSelected());"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            assertEquals(feedbackPathPanel.findElement(By.id(\"custom-recipients-number\")).getAttribute(\"value\"),"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                    Integer.toString(numberOfEntitiesToGiveFeedbackTo));"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    private void verifyQuestionVisibilitySettings(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        WebElement visibilityPanel \u003d questionForm.findElement(By.tagName(\"tm-visibility-panel\"));"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        String visibility \u003d visibilityPanel.findElement(By.cssSelector(\"#btn-question-visibility span\")).getText();"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showResponsesTo \u003d feedbackQuestion.getShowResponsesTo();"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showGiverNameTo \u003d feedbackQuestion.getShowGiverNameTo();"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showRecipientNameTo \u003d feedbackQuestion.getShowRecipientNameTo();"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"        switch (visibility) {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient and giver\u0027s team members, visible to instructors\":"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.OWN_TEAM_MEMBERS));"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 3);"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"        case \"Visible to instructors only\":"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 1);"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 1);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient and instructors\":"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":383,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 2);"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 0);"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient, visible to instructors\":"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 2);"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient and giver/recipient\u0027s team members, visible to instructors\":"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.OWN_TEAM_MEMBERS));"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS));"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 4);"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"        case \"Visible to recipient and instructors\":"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":423,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 2);"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 2);"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            verifyCustomQuestionVisibility(questionNum, feedbackQuestion);"},{"lineNumber":436,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"    private void verifyCustomQuestionVisibility(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        WebElement visibilityPanel \u003d questionForm.findElement(By.tagName(\"tm-visibility-panel\"));"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        String visibility \u003d visibilityPanel.findElement(By.cssSelector(\"#btn-question-visibility span\")).getText();"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        assertEquals(visibility, CUSTOM_VISIBILITY_OPTION);"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"        FeedbackParticipantType giver \u003d feedbackQuestion.getGiverType();"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        FeedbackParticipantType receiver \u003d feedbackQuestion.getRecipientType();"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        WebElement customVisibilityTable \u003d visibilityPanel.findElement(By.id(\"custom-visibility-table\"));"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        assertVisibilityBoxesSelected(customVisibilityTable, giver, receiver, feedbackQuestion.getShowResponsesTo(), 1);"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        assertVisibilityBoxesSelected(customVisibilityTable, giver, receiver, feedbackQuestion.getShowGiverNameTo(), 2);"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        assertVisibilityBoxesSelected(customVisibilityTable, giver, receiver, feedbackQuestion.getShowRecipientNameTo(), 3);"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"    private void assertVisibilityBoxesSelected(WebElement table, FeedbackParticipantType giver,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                                               FeedbackParticipantType receiver, List\u003cFeedbackParticipantType\u003e participants,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"                                               int colNum) {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e possibleTypes \u003d new ArrayList\u003c\u003e(Arrays.asList(FeedbackParticipantType.RECEIVER,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.RECEIVER_TEAM_MEMBERS,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        if (!giver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        if (!receiver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        if (receiver.equals(FeedbackParticipantType.NONE)"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.SELF)"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.OWN_TEAM)) {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER);"},{"lineNumber":470,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        int index \u003d colNum - 1;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType participant : participants) {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"            assertTrue(rows.get(possibleTypes.indexOf(participant)).findElements(By.tagName(\"input\")).get(index)"},{"lineNumber":477,"author":{"gitId":"-"},"content":"                    .isSelected());"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"    public void addTemplateQuestion(int optionNum) {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        addNewQuestion(1);"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        WebElement templateQuestionModal \u003d waitForElementPresence(By.id(\"template-question-modal\"));"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"        click(templateQuestionModal.findElements(By.tagName(\"input\")).get(optionNum - 1));"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        clickAndWaitForNewQuestion(browser.driver.findElement(By.id(\"btn-confirm-template\")));"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"    public void copyQuestion(String courseId, String questionText) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        click(copyQuestionButton);"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        WebElement copyQuestionModal \u003d waitForElementPresence(By.id(\"copy-question-modal\"));"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"zhaojj2209"},"content":"        List\u003cWebElement\u003e cards \u003d copyQuestionModal.findElements(By.className(\"card\"));"},{"lineNumber":494,"author":{"gitId":"zhaojj2209"},"content":"        for (WebElement card : cards) {"},{"lineNumber":495,"author":{"gitId":"zhaojj2209"},"content":"            WebElement cardHeader \u003d card.findElement(By.className(\"card-header\"));"},{"lineNumber":496,"author":{"gitId":"zhaojj2209"},"content":"            if (cardHeader.getText().startsWith(\"[\" + courseId + \"]\")) {"},{"lineNumber":497,"author":{"gitId":"zhaojj2209"},"content":"                click(cardHeader);"},{"lineNumber":498,"author":{"gitId":"zhaojj2209"},"content":"                WebElement cardBody \u003d waitForElementPresence(By.className(\"card-body\"));"},{"lineNumber":499,"author":{"gitId":"zhaojj2209"},"content":"                // Reload questions"},{"lineNumber":500,"author":{"gitId":"zhaojj2209"},"content":"                WebElement reloadBtn \u003d cardBody.findElement(By.tagName(\"button\"));"},{"lineNumber":501,"author":{"gitId":"zhaojj2209"},"content":"                click(reloadBtn);"},{"lineNumber":502,"author":{"gitId":"zhaojj2209"},"content":"                WebElement table \u003d waitForElementPresence(By.id(\"copy-question-table\"));"},{"lineNumber":503,"author":{"gitId":"zhaojj2209"},"content":"                List\u003cWebElement\u003e rows \u003d table.findElements(By.cssSelector(\"tbody tr\"));"},{"lineNumber":504,"author":{"gitId":"-"},"content":"                for (WebElement row : rows) {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"                    List\u003cWebElement\u003e cells \u003d row.findElements(By.tagName(\"td\"));"},{"lineNumber":506,"author":{"gitId":"zhaojj2209"},"content":"                    if (cells.get(2).getText().equals(questionText)) {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"                        markOptionAsSelected(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":508,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":509,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        clickAndWaitForNewQuestion(browser.driver.findElement(By.id(\"btn-confirm-copy-question\")));"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    public void editQuestionNumber(int questionNum, int newQuestionNumber) {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(getQuestionForm(questionNum).findElement(By.id(\"question-number-dropdown\")),"},{"lineNumber":518,"author":{"gitId":"-"},"content":"                Integer.toString(newQuestionNumber));"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"    public void editQuestionDetails(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"    private void inputQuestionDetails(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        setQuestionBrief(questionNum, feedbackQuestion.getQuestionDetailsCopy().getQuestionText());"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        setQuestionDescription(questionNum, feedbackQuestion.getQuestionDescription());"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        FeedbackQuestionType questionType \u003d feedbackQuestion.getQuestionType();"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        if (!questionType.equals(FeedbackQuestionType.CONTRIB)) {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"            setFeedbackPath(questionNum, feedbackQuestion);"},{"lineNumber":534,"author":{"gitId":"-"},"content":"            setQuestionVisibility(questionNum, feedbackQuestion);"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"    public void duplicateQuestion(int questionNum) {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        clickAndWaitForNewQuestion(getQuestionForm(questionNum).findElement(By.id(\"btn-duplicate-question\")));"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"    public void deleteQuestion(int questionNum) {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        clickAndConfirm(getQuestionForm(questionNum).findElement(By.id(\"btn-delete-question\")));"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":545,"author":{"gitId":"-"},"content":""},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public void verifyTextQuestionDetails(int questionNum, FeedbackTextQuestionDetails questionDetails) {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        String recommendLength \u003d getRecommendedTextLengthField(questionNum).getAttribute(\"value\");"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        assertEquals(recommendLength, questionDetails.getRecommendedLength().toString());"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"    public void addTextQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        addNewQuestion(2);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        FeedbackTextQuestionDetails questionDetails \u003d"},{"lineNumber":556,"author":{"gitId":"-"},"content":"                (FeedbackTextQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        fillTextBox(getRecommendedTextLengthField(questionNum), questionDetails.getRecommendedLength().toString());"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"    public void editTextQuestion(int questionNum, FeedbackTextQuestionDetails textQuestionDetails) {"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        WebElement recommendedTextLengthField \u003d getRecommendedTextLengthField(questionNum);"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        waitForElementToBeClickable(recommendedTextLengthField);"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        fillTextBox(recommendedTextLengthField, textQuestionDetails.getRecommendedLength().toString());"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":568,"author":{"gitId":"-"},"content":""},{"lineNumber":569,"author":{"gitId":"-"},"content":"    public void verifyMcqQuestionDetails(int questionNum, FeedbackMcqQuestionDetails questionDetails) {"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        if (verifyGeneratedOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        verifyOptions(questionNum, questionDetails.getMcqChoices());"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        verifyOptionWeights(questionNum, questionDetails.isHasAssignedWeights(), questionDetails.getMcqWeights());"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        verifyOtherOption(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMcqOtherWeight());"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":577,"author":{"gitId":"-"},"content":""},{"lineNumber":578,"author":{"gitId":"-"},"content":"    public void addMcqQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        addNewQuestion(3);"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        FeedbackMcqQuestionDetails questionDetails \u003d (FeedbackMcqQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        inputMcqDetails(questionNum, questionDetails);"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"    public void editMcqQuestion(int questionNum, FeedbackMcqQuestionDetails questionDetails) {"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        inputMcqDetails(questionNum, questionDetails);"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":591,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"    public void verifyMsqQuestionDetails(int questionNum, FeedbackMsqQuestionDetails questionDetails) {"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        verifyMaxOptions(questionNum, questionDetails.getMaxSelectableChoices());"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        verifyMinOptions(questionNum, questionDetails.getMinSelectableChoices());"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        if (verifyGeneratedOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        verifyOptions(questionNum, questionDetails.getMsqChoices());"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        verifyOptionWeights(questionNum, questionDetails.isHasAssignedWeights(), questionDetails.getMsqWeights());"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        verifyOtherOption(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMsqOtherWeight());"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"    public void addMsqQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        addNewQuestion(4);"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails questionDetails \u003d (FeedbackMsqQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        inputMsqDetails(questionNum, questionDetails);"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":612,"author":{"gitId":"-"},"content":""},{"lineNumber":613,"author":{"gitId":"-"},"content":"    public void editMsqQuestion(int questionNum, FeedbackMsqQuestionDetails msqQuestionDetails) {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        inputMsqDetails(questionNum, msqQuestionDetails);"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"    public void verifyNumScaleQuestionDetails(int questionNum, FeedbackNumericalScaleQuestionDetails questionDetails) {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        assertEquals(getMinNumscaleInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                Integer.toString(questionDetails.getMinScale()));"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        assertEquals(getNumScaleIncrementInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                getDoubleString(questionDetails.getStep()));"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        assertEquals(getMaxNumscaleInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                Integer.toString(questionDetails.getMaxScale()));"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":627,"author":{"gitId":"-"},"content":""},{"lineNumber":628,"author":{"gitId":"-"},"content":"    public void addNumScaleQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":629,"author":{"gitId":"-"},"content":"        addNewQuestion(5);"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        FeedbackNumericalScaleQuestionDetails questionDetails \u003d"},{"lineNumber":633,"author":{"gitId":"-"},"content":"                (FeedbackNumericalScaleQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        inputNumScaleDetails(questionNum, questionDetails);"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":637,"author":{"gitId":"-"},"content":""},{"lineNumber":638,"author":{"gitId":"-"},"content":"    public void editNumScaleQuestion(int questionNum, FeedbackNumericalScaleQuestionDetails questionDetails) {"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        inputNumScaleDetails(questionNum, questionDetails);"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"    public void verifyConstSumQuestionDetails(int questionNum, FeedbackConstantSumQuestionDetails questionDetails) {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        if (!questionDetails.isDistributeToRecipients()) {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"            verifyOptions(questionNum, questionDetails.getConstSumOptions());"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"        if (questionDetails.isPointsPerOption()) {"},{"lineNumber":650,"author":{"gitId":"-"},"content":"            assertTrue(getConstSumPerOptionPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":651,"author":{"gitId":"-"},"content":"            assertEquals(getConstSumPerOptionPointsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":652,"author":{"gitId":"-"},"content":"                    Integer.toString(questionDetails.getPoints()));"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            assertFalse(getConstSumTotalPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":655,"author":{"gitId":"-"},"content":"            assertTrue(getConstSumTotalPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":656,"author":{"gitId":"-"},"content":"            assertEquals(getConstSumTotalPointsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":657,"author":{"gitId":"-"},"content":"                    Integer.toString(questionDetails.getPoints()));"},{"lineNumber":658,"author":{"gitId":"-"},"content":"            assertFalse(getConstSumPerOptionPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"-"},"content":"        if (questionDetails.isForceUnevenDistribution()) {"},{"lineNumber":662,"author":{"gitId":"-"},"content":"            String distributeFor \u003d questionDetails.getDistributePointsFor();"},{"lineNumber":663,"author":{"gitId":"-"},"content":"            assertTrue(getConstSumUnevenDistributionCheckbox(questionNum).isSelected());"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            assertEquals(getSelectedDropdownOptionText(getConstSumUnevenDistributionDropdown(questionNum)).trim(),"},{"lineNumber":665,"author":{"gitId":"-"},"content":"                    \"All options\".equals(distributeFor) ? \"Every option\" : distributeFor);"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            assertFalse(getConstSumUnevenDistributionCheckbox(questionNum).isSelected());"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"    public void addConstSumOptionQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        addNewQuestion(6);"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        addConstSumQuestion(feedbackQuestion);"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"-"},"content":"    public void addConstSumRecipientQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        addNewQuestion(7);"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        addConstSumQuestion(feedbackQuestion);"},{"lineNumber":679,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":680,"author":{"gitId":"-"},"content":""},{"lineNumber":681,"author":{"gitId":"-"},"content":"    public void addConstSumQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":683,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        FeedbackConstantSumQuestionDetails questionDetails \u003d"},{"lineNumber":685,"author":{"gitId":"-"},"content":"                (FeedbackConstantSumQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        inputConstSumDetails(questionNum, questionDetails);"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"    public void editConstSumQuestion(int questionNum, FeedbackConstantSumQuestionDetails csQuestionDetails) {"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        inputConstSumDetails(questionNum, csQuestionDetails);"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":694,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":695,"author":{"gitId":"-"},"content":""},{"lineNumber":696,"author":{"gitId":"-"},"content":"    public void verifyContributionQuestionDetails(int questionNum, FeedbackContributionQuestionDetails questionDetails) {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"        assertEquals(questionDetails.isNotSureAllowed(), getAllowNotSureContributionCheckbox(questionNum).isSelected());"},{"lineNumber":698,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"    public void addContributionQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":701,"author":{"gitId":"-"},"content":"        addNewQuestion(8);"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        FeedbackContributionQuestionDetails questionDetails \u003d"},{"lineNumber":705,"author":{"gitId":"-"},"content":"                (FeedbackContributionQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        inputContributionDetails(questionNum, questionDetails);"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":708,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"-"},"content":"    public void editContributionQuestion(int questionNum, FeedbackContributionQuestionDetails questionDetails) {"},{"lineNumber":711,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        inputContributionDetails(questionNum, questionDetails);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":714,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"    public void verifyRubricQuestionDetails(int questionNum, FeedbackRubricQuestionDetails questionDetails) {"},{"lineNumber":717,"author":{"gitId":"-"},"content":"        int numChoices \u003d questionDetails.getNumOfRubricChoices();"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        List\u003cString\u003e choices \u003d questionDetails.getRubricChoices();"},{"lineNumber":719,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numChoices; i++) {"},{"lineNumber":720,"author":{"gitId":"-"},"content":"            assertEquals(choices.get(i), getRubricChoiceInputs(questionNum).get(i).getAttribute(\"value\"));"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":722,"author":{"gitId":"-"},"content":""},{"lineNumber":723,"author":{"gitId":"-"},"content":"        int numSubQn \u003d questionDetails.getNumOfRubricSubQuestions();"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        List\u003cString\u003e subQuestions \u003d questionDetails.getRubricSubQuestions();"},{"lineNumber":725,"author":{"gitId":"-"},"content":"        List\u003cList\u003cString\u003e\u003e descriptions \u003d questionDetails.getRubricDescriptions();"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":727,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e textAreas \u003d getRubricTextareas(questionNum, i + 2);"},{"lineNumber":728,"author":{"gitId":"-"},"content":"            assertEquals(subQuestions.get(i), textAreas.get(0).getAttribute(\"value\"));"},{"lineNumber":729,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                assertEquals(descriptions.get(i).get(j), textAreas.get(j + 1).getAttribute(\"value\"));"},{"lineNumber":731,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"        if (questionDetails.isHasAssignedWeights()) {"},{"lineNumber":735,"author":{"gitId":"-"},"content":"            assertTrue(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":736,"author":{"gitId":"-"},"content":"            List\u003cList\u003cDouble\u003e\u003e weights \u003d questionDetails.getRubricWeights();"},{"lineNumber":737,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"                List\u003cWebElement\u003e rubricWeights \u003d getRubricWeights(questionNum, i + 2);"},{"lineNumber":739,"author":{"gitId":"-"},"content":"                for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":740,"author":{"gitId":"-"},"content":"                    assertEquals(rubricWeights.get(j).getAttribute(\"value\"),"},{"lineNumber":741,"author":{"gitId":"-"},"content":"                            getDoubleString(weights.get(i).get(j)));"},{"lineNumber":742,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":743,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"            assertFalse(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":746,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":747,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"    public void addRubricQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        addNewQuestion(9);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        FeedbackRubricQuestionDetails questionDetails \u003d"},{"lineNumber":754,"author":{"gitId":"-"},"content":"                (FeedbackRubricQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        inputRubricDetails(questionNum, questionDetails);"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":758,"author":{"gitId":"-"},"content":""},{"lineNumber":759,"author":{"gitId":"-"},"content":"    public void editRubricQuestion(int questionNum, FeedbackRubricQuestionDetails questionDetails) {"},{"lineNumber":760,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":761,"author":{"gitId":"-"},"content":"        inputRubricDetails(questionNum, questionDetails);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":763,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"    public void verifyRankQuestionDetails(int questionNum, FeedbackRankQuestionDetails questionDetails) {"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        if (questionDetails instanceof FeedbackRankOptionsQuestionDetails) {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"            FeedbackRankOptionsQuestionDetails optionDetails \u003d (FeedbackRankOptionsQuestionDetails) questionDetails;"},{"lineNumber":768,"author":{"gitId":"-"},"content":"            verifyOptions(questionNum, optionDetails.getOptions());"},{"lineNumber":769,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":770,"author":{"gitId":"-"},"content":"        assertEquals(getAllowDuplicateRankCheckbox(questionNum).isSelected(), questionDetails.isAreDuplicatesAllowed());"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        verifyMaxOptions(questionNum, questionDetails.getMaxOptionsToBeRanked());"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        verifyMinOptions(questionNum, questionDetails.getMinOptionsToBeRanked());"},{"lineNumber":773,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":774,"author":{"gitId":"-"},"content":""},{"lineNumber":775,"author":{"gitId":"-"},"content":"    public void addRankOptionsQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        addNewQuestion(10);"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":779,"author":{"gitId":"-"},"content":"        FeedbackRankOptionsQuestionDetails questionDetails \u003d"},{"lineNumber":780,"author":{"gitId":"-"},"content":"                (FeedbackRankOptionsQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":781,"author":{"gitId":"-"},"content":"        inputRankDetails(questionNum, questionDetails);"},{"lineNumber":782,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":783,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":784,"author":{"gitId":"-"},"content":""},{"lineNumber":785,"author":{"gitId":"-"},"content":"    public void addRankRecipientsQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        addNewQuestion(11);"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":788,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        FeedbackRankQuestionDetails questionDetails \u003d"},{"lineNumber":790,"author":{"gitId":"-"},"content":"                (FeedbackRankQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        inputRankDetails(questionNum, questionDetails);"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":794,"author":{"gitId":"-"},"content":""},{"lineNumber":795,"author":{"gitId":"-"},"content":"    public void editRankQuestion(int questionNum, FeedbackRankQuestionDetails questionDetails) {"},{"lineNumber":796,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":797,"author":{"gitId":"-"},"content":"        inputRankDetails(questionNum, questionDetails);"},{"lineNumber":798,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":800,"author":{"gitId":"-"},"content":""},{"lineNumber":801,"author":{"gitId":"-"},"content":"    private String getCourseId() {"},{"lineNumber":802,"author":{"gitId":"-"},"content":"        return courseIdTextBox.getText();"},{"lineNumber":803,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":804,"author":{"gitId":"-"},"content":""},{"lineNumber":805,"author":{"gitId":"-"},"content":"    private String getCourseName() {"},{"lineNumber":806,"author":{"gitId":"-"},"content":"        return courseNameTextBox.getText();"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":808,"author":{"gitId":"-"},"content":""},{"lineNumber":809,"author":{"gitId":"-"},"content":"    private String getTimeZone() {"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        return timezoneDropDown.getText();"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionName() {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        return sessionNameTextBox.getText();"},{"lineNumber":815,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":816,"author":{"gitId":"-"},"content":""},{"lineNumber":817,"author":{"gitId":"-"},"content":"    private String getInstructions() {"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        return getEditorRichText(instructionsEditor.findElement(By.tagName(\"editor\")));"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"    private String getStartDate() {"},{"lineNumber":822,"author":{"gitId":"-"},"content":"        return startDateBox.findElement(By.tagName(\"input\")).getAttribute(\"value\");"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":824,"author":{"gitId":"-"},"content":""},{"lineNumber":825,"author":{"gitId":"-"},"content":"    private String getStartTime() {"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(startTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":828,"author":{"gitId":"-"},"content":""},{"lineNumber":829,"author":{"gitId":"-"},"content":"    private String getEndDate() {"},{"lineNumber":830,"author":{"gitId":"-"},"content":"        return endDateBox.findElement(By.tagName(\"input\")).getAttribute(\"value\");"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"    private String getEndTime() {"},{"lineNumber":834,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(endTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":836,"author":{"gitId":"-"},"content":""},{"lineNumber":837,"author":{"gitId":"-"},"content":"    private String getSessionVisibilityDate() {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"        return sessionVisibilityDateBox.findElement(By.tagName(\"input\")).getAttribute(\"value\");"},{"lineNumber":839,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":840,"author":{"gitId":"-"},"content":""},{"lineNumber":841,"author":{"gitId":"-"},"content":"    private String getSessionVisibilityTime() {"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(sessionVisibilityTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":844,"author":{"gitId":"-"},"content":""},{"lineNumber":845,"author":{"gitId":"-"},"content":"    private String getResponseVisibilityDate() {"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        return responseVisibilityDateBox.findElement(By.tagName(\"input\"))"},{"lineNumber":847,"author":{"gitId":"-"},"content":"                .getAttribute(\"value\");"},{"lineNumber":848,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":849,"author":{"gitId":"-"},"content":""},{"lineNumber":850,"author":{"gitId":"-"},"content":"    private String getResponseVisibilityTime() {"},{"lineNumber":851,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(responseVisibilityTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":852,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":853,"author":{"gitId":"-"},"content":""},{"lineNumber":854,"author":{"gitId":"-"},"content":"    private String getGracePeriod() {"},{"lineNumber":855,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(gracePeriodDropdown);"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"-"},"content":"    private String getSubmissionStatus() {"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        return submissionStatusTextBox.getText();"},{"lineNumber":860,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":861,"author":{"gitId":"-"},"content":""},{"lineNumber":862,"author":{"gitId":"-"},"content":"    private String getPublishedStatus() {"},{"lineNumber":863,"author":{"gitId":"-"},"content":"        return publishStatusTextBox.getText();"},{"lineNumber":864,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":865,"author":{"gitId":"-"},"content":""},{"lineNumber":866,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, String timeZone) {"},{"lineNumber":867,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"EE, dd MMM, yyyy\");"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":869,"author":{"gitId":"-"},"content":""},{"lineNumber":870,"author":{"gitId":"-"},"content":"    private String getTimeString(Instant instant, String timeZone) {"},{"lineNumber":871,"author":{"gitId":"-"},"content":"        ZonedDateTime dateTime \u003d instant.atZone(ZoneId.of(timeZone));"},{"lineNumber":872,"author":{"gitId":"-"},"content":"        if (dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0) {"},{"lineNumber":873,"author":{"gitId":"-"},"content":"            return \"23:59H\";"},{"lineNumber":874,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":875,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"HH:00\") + \"H\";"},{"lineNumber":876,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":877,"author":{"gitId":"-"},"content":""},{"lineNumber":878,"author":{"gitId":"-"},"content":"    private void setInstructions(String newInstructions) {"},{"lineNumber":879,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(instructionsEditor.findElement(By.tagName(\"editor\")), newInstructions);"},{"lineNumber":880,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":881,"author":{"gitId":"-"},"content":""},{"lineNumber":882,"author":{"gitId":"-"},"content":"    private void setSessionStartDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":883,"author":{"gitId":"-"},"content":"        setDateTime(startDateBox.findElement(By.tagName(\"input\")), startTimeDropdown, startInstant, timeZone);"},{"lineNumber":884,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":885,"author":{"gitId":"-"},"content":""},{"lineNumber":886,"author":{"gitId":"-"},"content":"    private void setSessionEndDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":887,"author":{"gitId":"-"},"content":"        setDateTime(endDateBox.findElement(By.tagName(\"input\")), endTimeDropdown, endInstant, timeZone);"},{"lineNumber":888,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":889,"author":{"gitId":"-"},"content":""},{"lineNumber":890,"author":{"gitId":"-"},"content":"    private void setVisibilityDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":891,"author":{"gitId":"-"},"content":"        setDateTime(sessionVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":892,"author":{"gitId":"-"},"content":"                sessionVisibilityTimeDropdown, startInstant, timeZone);"},{"lineNumber":893,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":894,"author":{"gitId":"-"},"content":""},{"lineNumber":895,"author":{"gitId":"-"},"content":"    private void setResponseDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":896,"author":{"gitId":"-"},"content":"        setDateTime(responseVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":897,"author":{"gitId":"-"},"content":"                responseVisibilityTimeDropdown, endInstant, timeZone);"},{"lineNumber":898,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":899,"author":{"gitId":"-"},"content":""},{"lineNumber":900,"author":{"gitId":"-"},"content":"    private void setDateTime(WebElement dateBox, WebElement timeBox, Instant startInstant, String timeZone) {"},{"lineNumber":901,"author":{"gitId":"-"},"content":"        fillTextBox(dateBox, getDateString(startInstant, timeZone));"},{"lineNumber":902,"author":{"gitId":"-"},"content":""},{"lineNumber":903,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(timeBox.findElement(By.tagName(\"select\")), getTimeString(startInstant, timeZone));"},{"lineNumber":904,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":905,"author":{"gitId":"-"},"content":""},{"lineNumber":906,"author":{"gitId":"-"},"content":"    private void selectGracePeriod(long gracePeriodMinutes) {"},{"lineNumber":907,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(gracePeriodDropdown, gracePeriodMinutes + \" min\");"},{"lineNumber":908,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":909,"author":{"gitId":"-"},"content":""},{"lineNumber":910,"author":{"gitId":"-"},"content":"    private void setVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":911,"author":{"gitId":"-"},"content":"        showVisibilitySettings();"},{"lineNumber":912,"author":{"gitId":"-"},"content":""},{"lineNumber":913,"author":{"gitId":"-"},"content":"        setSessionVisibilitySettings(newFeedbackSession);"},{"lineNumber":914,"author":{"gitId":"-"},"content":"        setResponseVisibilitySettings(newFeedbackSession);"},{"lineNumber":915,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":916,"author":{"gitId":"-"},"content":""},{"lineNumber":917,"author":{"gitId":"-"},"content":"    private void setSessionVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":918,"author":{"gitId":"-"},"content":"        Instant sessionDateTime \u003d newFeedbackSession.getSessionVisibleFromTime();"},{"lineNumber":919,"author":{"gitId":"-"},"content":"        if (sessionDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":920,"author":{"gitId":"-"},"content":"            click(openSessionVisibleTimeButton);"},{"lineNumber":921,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":922,"author":{"gitId":"-"},"content":"            click(customSessionVisibleTimeButton);"},{"lineNumber":923,"author":{"gitId":"-"},"content":"            setVisibilityDateTime(sessionDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":924,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":925,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":926,"author":{"gitId":"-"},"content":""},{"lineNumber":927,"author":{"gitId":"-"},"content":"    private void setResponseVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":928,"author":{"gitId":"-"},"content":"        Instant responseDateTime \u003d newFeedbackSession.getResultsVisibleFromTime();"},{"lineNumber":929,"author":{"gitId":"-"},"content":"        if (responseDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":930,"author":{"gitId":"-"},"content":"            click(immediateResponseVisibleTimeButton);"},{"lineNumber":931,"author":{"gitId":"-"},"content":"        } else if (responseDateTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":932,"author":{"gitId":"-"},"content":"            click(manualResponseVisibleTimeButton);"},{"lineNumber":933,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":934,"author":{"gitId":"-"},"content":"            click(customResponseVisibleTimeButton);"},{"lineNumber":935,"author":{"gitId":"-"},"content":"            setResponseDateTime(responseDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":936,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":937,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":938,"author":{"gitId":"-"},"content":""},{"lineNumber":939,"author":{"gitId":"-"},"content":"    private void setEmailSettings(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":940,"author":{"gitId":"-"},"content":"        showEmailSettings();"},{"lineNumber":941,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isOpeningEmailEnabled() !\u003d openingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":942,"author":{"gitId":"-"},"content":"            click(openingSessionEmailCheckbox);"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":944,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isClosingEmailEnabled() !\u003d closingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":945,"author":{"gitId":"-"},"content":"            click(closingSessionEmailCheckbox);"},{"lineNumber":946,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":947,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isPublishedEmailEnabled() !\u003d publishedSessionEmailCheckbox.isSelected()) {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"            click(publishedSessionEmailCheckbox);"},{"lineNumber":949,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":950,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":951,"author":{"gitId":"-"},"content":""},{"lineNumber":952,"author":{"gitId":"-"},"content":"    private void showVisibilitySettings() {"},{"lineNumber":953,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-visibility\"))) {"},{"lineNumber":954,"author":{"gitId":"-"},"content":"            click(changeVisibilityButton);"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":956,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":957,"author":{"gitId":"-"},"content":""},{"lineNumber":958,"author":{"gitId":"-"},"content":"    private void showEmailSettings() {"},{"lineNumber":959,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-email\"))) {"},{"lineNumber":960,"author":{"gitId":"-"},"content":"            click(changeEmailButton);"},{"lineNumber":961,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":962,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":963,"author":{"gitId":"-"},"content":""},{"lineNumber":964,"author":{"gitId":"-"},"content":"    private int getNumQuestions() {"},{"lineNumber":965,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.tagName(\"tm-question-edit-form\")).size();"},{"lineNumber":966,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":967,"author":{"gitId":"-"},"content":""},{"lineNumber":968,"author":{"gitId":"-"},"content":"    private WebElement getQuestionForm(int questionNum) {"},{"lineNumber":969,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.tagName(\"tm-question-edit-form\")).get(questionNum - 1);"},{"lineNumber":970,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":971,"author":{"gitId":"-"},"content":""},{"lineNumber":972,"author":{"gitId":"-"},"content":"    private FeedbackQuestionType getQuestionType(int questionNum) {"},{"lineNumber":973,"author":{"gitId":"-"},"content":"        String questionDetails \u003d getQuestionForm(questionNum).findElement(By.id(\"question-header\")).getText();"},{"lineNumber":974,"author":{"gitId":"-"},"content":"        String questionType \u003d questionDetails.split(\" \\\\d+ \")[1].trim();"},{"lineNumber":975,"author":{"gitId":"-"},"content":""},{"lineNumber":976,"author":{"gitId":"-"},"content":"        switch (questionType) {"},{"lineNumber":977,"author":{"gitId":"-"},"content":"        case \"Essay question\":"},{"lineNumber":978,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.TEXT;"},{"lineNumber":979,"author":{"gitId":"-"},"content":"        case \"Multiple-Choice (single answer) question\":"},{"lineNumber":980,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.MCQ;"},{"lineNumber":981,"author":{"gitId":"-"},"content":"        case \"Multiple-choice (multiple answers) question\":"},{"lineNumber":982,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.MSQ;"},{"lineNumber":983,"author":{"gitId":"-"},"content":"        case \"Numerical Scale Question\":"},{"lineNumber":984,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.NUMSCALE;"},{"lineNumber":985,"author":{"gitId":"-"},"content":"        case \"Distribute points (among options) question\":"},{"lineNumber":986,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.CONSTSUM_OPTIONS;"},{"lineNumber":987,"author":{"gitId":"-"},"content":"        case \"Distribute points (among recipients) question\":"},{"lineNumber":988,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.CONSTSUM_RECIPIENTS;"},{"lineNumber":989,"author":{"gitId":"-"},"content":"        case \"Team contribution question\":"},{"lineNumber":990,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.CONTRIB;"},{"lineNumber":991,"author":{"gitId":"-"},"content":"        case \"Rubric question\":"},{"lineNumber":992,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.RUBRIC;"},{"lineNumber":993,"author":{"gitId":"-"},"content":"        case \"Rank (options) question\":"},{"lineNumber":994,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.RANK_OPTIONS;"},{"lineNumber":995,"author":{"gitId":"-"},"content":"        case \"Rank (recipients) question\":"},{"lineNumber":996,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.RANK_RECIPIENTS;"},{"lineNumber":997,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":998,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Unknown FeedbackQuestionType\");"},{"lineNumber":999,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1001,"author":{"gitId":"-"},"content":""},{"lineNumber":1002,"author":{"gitId":"-"},"content":"    private int getQuestionNumber(int questionNum) {"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        return Integer.parseInt(getQuestionForm(questionNum).findElement(By.id(\"question-number\")).getText());"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1005,"author":{"gitId":"-"},"content":""},{"lineNumber":1006,"author":{"gitId":"-"},"content":"    private String getQuestionBrief(int questionNum) {"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"question-brief\")).getAttribute(\"value\");"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1009,"author":{"gitId":"-"},"content":""},{"lineNumber":1010,"author":{"gitId":"-"},"content":"    private String getQuestionDescription(int questionNum) {"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"        WebElement editor \u003d waitForElementPresence(By.cssSelector(\"#question-form-\" + questionNum + \" editor\"));"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"        return getEditorRichText(editor);"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1014,"author":{"gitId":"-"},"content":""},{"lineNumber":1015,"author":{"gitId":"-"},"content":"    private String getFeedbackGiver(int questionNum) {"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"        String feedbackPath \u003d getFeedbackPath(questionNum);"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"        if (CUSTOM_FEEDBACK_PATH_OPTION.equals(feedbackPath)) {"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"            return getSelectedDropdownOptionText(getQuestionForm(questionNum)"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"                    .findElement(By.tagName(\"tm-feedback-path-panel\"))"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"                    .findElement(By.id(\"giver-type\")));"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"        return feedbackPath.split(FEEDBACK_PATH_SEPARATOR)[0];"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1024,"author":{"gitId":"-"},"content":""},{"lineNumber":1025,"author":{"gitId":"-"},"content":"    private String getFeedbackReceiver(int questionNum) {"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"        String feedbackPath \u003d getFeedbackPath(questionNum);"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"        if (CUSTOM_FEEDBACK_PATH_OPTION.equals(feedbackPath)) {"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"            return getSelectedDropdownOptionText(getQuestionForm(questionNum)"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"                    .findElement(By.tagName(\"tm-feedback-path-panel\"))"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"                    .findElement(By.id(\"receiver-type\")));"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"        return feedbackPath.split(FEEDBACK_PATH_SEPARATOR)[1];"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1034,"author":{"gitId":"-"},"content":""},{"lineNumber":1035,"author":{"gitId":"-"},"content":"    private String getFeedbackPath(int questionNum) {"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"        WebElement feedbackPathPanel \u003d getQuestionForm(questionNum).findElement(By.tagName(\"tm-feedback-path-panel\"));"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"        return feedbackPathPanel.findElement(By.cssSelector(\"#btn-feedback-path span\")).getText();"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1039,"author":{"gitId":"-"},"content":""},{"lineNumber":1040,"author":{"gitId":"-"},"content":"    private void setQuestionBrief(int questionNum, String newBrief) {"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"        fillTextBox(getQuestionForm(questionNum).findElement(By.id(\"question-brief\")), newBrief);"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1043,"author":{"gitId":"-"},"content":""},{"lineNumber":1044,"author":{"gitId":"-"},"content":"    private void setQuestionDescription(int questionNum, String newDescription) {"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"        WebElement editor \u003d waitForElementPresence(By.cssSelector(\"#question-form-\" + questionNum + \" editor\"));"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(editor, newDescription);"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1048,"author":{"gitId":"-"},"content":""},{"lineNumber":1049,"author":{"gitId":"-"},"content":"    private void setFeedbackPath(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"        FeedbackParticipantType newGiver \u003d feedbackQuestion.getGiverType();"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"        FeedbackParticipantType newRecipient \u003d feedbackQuestion.getRecipientType();"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"        String feedbackPath \u003d getFeedbackPath(questionNum);"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum).findElement(By.tagName(\"tm-feedback-path-panel\"));"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"        if (!CUSTOM_FEEDBACK_PATH_OPTION.equals(feedbackPath)) {"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"            selectFeedbackPathDropdownOption(questionNum, CUSTOM_FEEDBACK_PATH_OPTION + \"...\");"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"        // Set to type STUDENT first to adjust NumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"giver-type\")),"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"                getDisplayGiverName(FeedbackParticipantType.STUDENTS));"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"receiver-type\")),"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"                getDisplayRecipientName(FeedbackParticipantType.STUDENTS));"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        if (feedbackQuestion.getNumberOfEntitiesToGiveFeedbackTo() \u003d\u003d Const.MAX_POSSIBLE_RECIPIENTS) {"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"            click(questionForm.findElement(By.id(\"unlimited-recipients\")));"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"            click(questionForm.findElement(By.id(\"custom-recipients\")));"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"            fillTextBox(questionForm.findElement(By.id(\"custom-recipients-number\")),"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"                    Integer.toString(feedbackQuestion.getNumberOfEntitiesToGiveFeedbackTo()));"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1069,"author":{"gitId":"-"},"content":""},{"lineNumber":1070,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"giver-type\")), getDisplayGiverName(newGiver));"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"receiver-type\")),"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"                getDisplayRecipientName(newRecipient));"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1074,"author":{"gitId":"-"},"content":""},{"lineNumber":1075,"author":{"gitId":"-"},"content":"    private void selectFeedbackPathDropdownOption(int questionNum, String text) {"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"        WebElement feedbackPathPanel \u003d questionForm.findElement(By.tagName(\"tm-feedback-path-panel\"));"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"        click(feedbackPathPanel.findElement(By.id(\"btn-feedback-path\")));"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"        WebElement dropdown \u003d feedbackPathPanel.findElement(By.id(\"feedback-path-dropdown\"));"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d dropdown.findElements(By.className(\"dropdown-item\"));"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"            if (option.getText().equals(text)) {"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"                click(option);"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1088,"author":{"gitId":"-"},"content":""},{"lineNumber":1089,"author":{"gitId":"-"},"content":"    private void clickEditQuestionButton(int questionNum) {"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"        click(getQuestionForm(questionNum).findElement(By.id(\"btn-edit-question\")));"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1092,"author":{"gitId":"-"},"content":""},{"lineNumber":1093,"author":{"gitId":"-"},"content":"    private void clickSaveQuestionButton(int questionNum) {"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"        WebElement saveButton \u003d getQuestionForm(questionNum).findElement(By.id(\"btn-save-question\"));"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"        click(saveButton);"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(1000);"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1098,"author":{"gitId":"-"},"content":""},{"lineNumber":1099,"author":{"gitId":"-"},"content":"    private void setQuestionVisibility(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"        WebElement visibilityPanel \u003d questionForm.findElement(By.tagName(\"tm-visibility-panel\"));"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"        String visibility \u003d visibilityPanel.findElement(By.cssSelector(\"#btn-question-visibility span\")).getText();"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"        if (!CUSTOM_VISIBILITY_OPTION.equals(visibility)) {"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"            selectVisibilityDropdownOption(questionNum, CUSTOM_VISIBILITY_OPTION + \"...\");"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1106,"author":{"gitId":"-"},"content":""},{"lineNumber":1107,"author":{"gitId":"-"},"content":"        FeedbackParticipantType giver \u003d feedbackQuestion.getGiverType();"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"        FeedbackParticipantType receiver \u003d feedbackQuestion.getRecipientType();"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"        WebElement customVisibilityTable \u003d visibilityPanel.findElement(By.id(\"custom-visibility-table\"));"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"        selectVisibilityBoxes(customVisibilityTable, giver, receiver, feedbackQuestion.getShowResponsesTo(), 1);"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"        selectVisibilityBoxes(customVisibilityTable, giver, receiver, feedbackQuestion.getShowGiverNameTo(), 2);"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"        selectVisibilityBoxes(customVisibilityTable, giver, receiver, feedbackQuestion.getShowRecipientNameTo(), 3);"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1114,"author":{"gitId":"-"},"content":""},{"lineNumber":1115,"author":{"gitId":"-"},"content":"    private void selectVisibilityBoxes(WebElement table, FeedbackParticipantType giver,"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"                                       FeedbackParticipantType receiver, List\u003cFeedbackParticipantType\u003e participants,"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"                                       int colNum) {"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e possibleTypes \u003d new ArrayList\u003c\u003e(Arrays.asList(FeedbackParticipantType.RECEIVER,"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.RECEIVER_TEAM_MEMBERS,"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"        if (!giver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"        if (!receiver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"        if (receiver.equals(FeedbackParticipantType.NONE)"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.SELF)"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.OWN_TEAM)) {"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER);"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1133,"author":{"gitId":"-"},"content":""},{"lineNumber":1134,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"        int index \u003d colNum - 1;"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType participant : participants) {"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"            markOptionAsSelected(rows.get(possibleTypes.indexOf(participant)).findElements(By.tagName(\"input\")).get(index));"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1140,"author":{"gitId":"-"},"content":""},{"lineNumber":1141,"author":{"gitId":"-"},"content":"    private void selectVisibilityDropdownOption(int questionNum, String text) {"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"        WebElement visibilityPanel \u003d questionForm.findElement(By.tagName(\"tm-visibility-panel\"));"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"        click(visibilityPanel.findElement(By.id(\"btn-question-visibility\")));"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"        WebElement dropdown \u003d visibilityPanel.findElement(By.id(\"question-visibility-dropdown\"));"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d dropdown.findElements(By.className(\"dropdown-item\"));"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"            if (option.getText().equals(text)) {"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"                click(option);"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1154,"author":{"gitId":"-"},"content":""},{"lineNumber":1155,"author":{"gitId":"-"},"content":"    private void clickAndWaitForNewQuestion(WebElement button) {"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"        int newQuestionNum \u003d getNumQuestions() + 1;"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"        click(button);"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"question-form-\" + newQuestionNum));"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1160,"author":{"gitId":"-"},"content":""},{"lineNumber":1161,"author":{"gitId":"-"},"content":"    private void addNewQuestion(int optionNumber) {"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"        click(addNewQuestionButton);"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"        WebElement newQuestionDropdown \u003d waitForElementPresence(By.id(\"new-question-dropdown\"));"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"        WebElement optionButton \u003d newQuestionDropdown.findElements(By.tagName(\"button\")).get(optionNumber - 1);"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"        if (optionNumber \u003d\u003d 1) {"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"            click(optionButton);"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"            clickAndWaitForNewQuestion(optionButton);"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1171,"author":{"gitId":"-"},"content":""},{"lineNumber":1172,"author":{"gitId":"-"},"content":"    private void clickSaveNewQuestionButton() {"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"        WebElement saveButton \u003d browser.driver.findElement(By.id(\"btn-save-new\"));"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"        click(saveButton);"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"        waitForElementStaleness(saveButton);"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1177,"author":{"gitId":"-"},"content":""},{"lineNumber":1178,"author":{"gitId":"-"},"content":"    private WebElement getRecommendedTextLengthField(int questionNum) {"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum)"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"                .findElement(By.tagName(\"tm-text-question-edit-details-form\"))"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"                .findElement(By.id(\"recommended-length\"));"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1183,"author":{"gitId":"-"},"content":""},{"lineNumber":1184,"author":{"gitId":"-"},"content":"    private WebElement getGenerateOptionsCheckbox(int questionNum) {"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"generate-checkbox\"));"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1187,"author":{"gitId":"-"},"content":""},{"lineNumber":1188,"author":{"gitId":"-"},"content":"    private WebElement getGenerateOptionsDropdown(int questionNum) {"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"generate-dropdown\"));"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1191,"author":{"gitId":"-"},"content":""},{"lineNumber":1192,"author":{"gitId":"-"},"content":"    private WebElement getWeightCheckbox(int questionNum) {"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"weights-checkbox\"));"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1195,"author":{"gitId":"-"},"content":""},{"lineNumber":1196,"author":{"gitId":"-"},"content":"    private WebElement getOtherOptionCheckbox(int questionNum) {"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"other-checkbox\"));"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1199,"author":{"gitId":"-"},"content":""},{"lineNumber":1200,"author":{"gitId":"-"},"content":"    private String getGeneratedOptionString(FeedbackParticipantType type) {"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"        switch (type) {"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"        case STUDENTS:"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"        case STUDENTS_IN_SAME_SECTION:"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"            return \"students\";"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"        case STUDENTS_EXCLUDING_SELF:"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"            return \"students (excluding self)\";"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"        case TEAMS:"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"        case TEAMS_IN_SAME_SECTION:"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"            return \"teams\";"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"        case TEAMS_EXCLUDING_SELF:"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"            return \"teams (excluding own team)\";"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"        case INSTRUCTORS:"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"            return \"instructors\";"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"            return \"unknown\";"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1218,"author":{"gitId":"-"},"content":""},{"lineNumber":1219,"author":{"gitId":"-"},"content":"    private String getDoubleString(Double value) {"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"        return value % 1 \u003d\u003d 0 ? Integer.toString(value.intValue()) : Double.toString(value);"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1222,"author":{"gitId":"-"},"content":""},{"lineNumber":1223,"author":{"gitId":"-"},"content":"    private WebElement getOptionsSection(int questionNum) {"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"options-section\"));"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1226,"author":{"gitId":"-"},"content":""},{"lineNumber":1227,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getOptionInputs(int questionNum) {"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"        WebElement optionsSection \u003d getOptionsSection(questionNum);"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"        return optionsSection.findElements(By.cssSelector(\"input[type\u003d\u0027text\u0027]\"));"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1231,"author":{"gitId":"-"},"content":""},{"lineNumber":1232,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getOptionWeightInputs(int questionNum) {"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"        WebElement optionsSection \u003d getOptionsSection(questionNum);"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"        return optionsSection.findElements(By.cssSelector(\"tm-weight-field input\"));"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1236,"author":{"gitId":"-"},"content":""},{"lineNumber":1237,"author":{"gitId":"-"},"content":"    private WebElement getOtherWeightInput(int questionNum) {"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"other-weight\"));"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1240,"author":{"gitId":"-"},"content":""},{"lineNumber":1241,"author":{"gitId":"-"},"content":"    private boolean verifyGeneratedOptions(int questionNum, FeedbackParticipantType participantType) {"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"        if (!participantType.equals(FeedbackParticipantType.NONE)) {"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"            assertTrue(getGenerateOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"            assertEquals(getSelectedDropdownOptionText(getGenerateOptionsDropdown(questionNum)),"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"                    getGeneratedOptionString(participantType));"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"        assertFalse(getGenerateOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1251,"author":{"gitId":"-"},"content":""},{"lineNumber":1252,"author":{"gitId":"-"},"content":"    private void verifyOptions(int questionNum, List\u003cString\u003e options) {"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c options.size(); i++) {"},{"lineNumber":1255,"author":{"gitId":"-"},"content":"            assertEquals(options.get(i), inputs.get(i).getAttribute(\"value\"));"},{"lineNumber":1256,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1258,"author":{"gitId":"-"},"content":""},{"lineNumber":1259,"author":{"gitId":"-"},"content":"    private void verifyOptionWeights(int questionNum, boolean hasWeights, List\u003cDouble\u003e weights) {"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"        if (hasWeights) {"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"            assertTrue(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e weightInputs \u003d getOptionWeightInputs(questionNum);"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c weights.size(); i++) {"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"                assertEquals(getDoubleString(weights.get(i)), weightInputs.get(i).getAttribute(\"value\"));"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"            assertFalse(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1270,"author":{"gitId":"-"},"content":""},{"lineNumber":1271,"author":{"gitId":"-"},"content":"    private void verifyOtherOption(int questionNum, boolean hasOther, Double weight) {"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"        if (hasOther) {"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"            assertTrue(getOtherOptionCheckbox(questionNum).isSelected());"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"            if (weight \u003e 0) {"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"                String otherWeight \u003d getOtherWeightInput(questionNum).getAttribute(\"value\");"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"                assertEquals(getDoubleString(weight), otherWeight);"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"            assertFalse(getOtherOptionCheckbox(questionNum).isSelected());"},{"lineNumber":1280,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1282,"author":{"gitId":"-"},"content":""},{"lineNumber":1283,"author":{"gitId":"-"},"content":"    private void inputMcqDetails(int questionNum, FeedbackMcqQuestionDetails questionDetails) {"},{"lineNumber":1284,"author":{"gitId":"-"},"content":"        if (inputGenerateOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1287,"author":{"gitId":"-"},"content":""},{"lineNumber":1288,"author":{"gitId":"-"},"content":"        inputOptions(questionNum, questionDetails.getMcqChoices());"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"        inputOptionWeights(questionNum, questionDetails.isHasAssignedWeights(), questionDetails.getMcqWeights());"},{"lineNumber":1290,"author":{"gitId":"-"},"content":"        inputOtherChoice(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMcqOtherWeight());"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1292,"author":{"gitId":"-"},"content":""},{"lineNumber":1293,"author":{"gitId":"-"},"content":"    private boolean inputGenerateOptions(int questionNum, FeedbackParticipantType participantType) {"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"        if (!participantType.equals(FeedbackParticipantType.NONE)) {"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getGenerateOptionsCheckbox(questionNum));"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(getGenerateOptionsDropdown(questionNum),"},{"lineNumber":1297,"author":{"gitId":"-"},"content":"                    getGeneratedOptionString(participantType));"},{"lineNumber":1298,"author":{"gitId":"-"},"content":"            clickSaveQuestionButton(questionNum);"},{"lineNumber":1299,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"        markOptionAsUnselected(getGenerateOptionsCheckbox(questionNum));"},{"lineNumber":1302,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1304,"author":{"gitId":"-"},"content":""},{"lineNumber":1305,"author":{"gitId":"-"},"content":"    private void inputOptions(int questionNum, List\u003cString\u003e options) {"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1307,"author":{"gitId":"-"},"content":"        int numInputsNeeded \u003d options.size() - inputs.size();"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"        if (numInputsNeeded \u003e 0) {"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numInputsNeeded; i++) {"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"                click(getQuestionForm(questionNum).findElement(By.id(\"btn-add-option\")));"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1312,"author":{"gitId":"-"},"content":"            inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1314,"author":{"gitId":"-"},"content":"        if (numInputsNeeded \u003c 0) {"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c -numInputsNeeded; i++) {"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"                click(getOptionsSection(questionNum).findElement(By.tagName(\"button\")));"},{"lineNumber":1317,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"            inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1320,"author":{"gitId":"-"},"content":""},{"lineNumber":1321,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c options.size(); i++) {"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"            fillTextBox(inputs.get(i), options.get(i));"},{"lineNumber":1323,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1325,"author":{"gitId":"-"},"content":""},{"lineNumber":1326,"author":{"gitId":"-"},"content":"    private void inputOptionWeights(int questionNum, boolean hasWeights, List\u003cDouble\u003e weights) {"},{"lineNumber":1327,"author":{"gitId":"-"},"content":"        if (hasWeights) {"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getWeightCheckbox(questionNum));"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e weightInputs \u003d getOptionWeightInputs(questionNum);"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c weights.size(); i++) {"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"                fillTextBox(weightInputs.get(i), getDoubleString(weights.get(i)));"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getWeightCheckbox(questionNum));"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1336,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1337,"author":{"gitId":"-"},"content":""},{"lineNumber":1338,"author":{"gitId":"-"},"content":"    private void inputOtherChoice(int questionNum, boolean hasOther, Double otherWeight) {"},{"lineNumber":1339,"author":{"gitId":"-"},"content":"        if (hasOther) {"},{"lineNumber":1340,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getOtherOptionCheckbox(questionNum));"},{"lineNumber":1341,"author":{"gitId":"-"},"content":"            if (otherWeight \u003e 0) {"},{"lineNumber":1342,"author":{"gitId":"-"},"content":"                fillTextBox(getOtherWeightInput(questionNum), getDoubleString(otherWeight));"},{"lineNumber":1343,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1344,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getOtherOptionCheckbox(questionNum));"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1348,"author":{"gitId":"-"},"content":""},{"lineNumber":1349,"author":{"gitId":"-"},"content":"    private WebElement getMaxOptionsCheckbox(int questionNum) {"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"max-options-checkbox\"));"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1352,"author":{"gitId":"-"},"content":""},{"lineNumber":1353,"author":{"gitId":"-"},"content":"    private WebElement getMaxOptionsInput(int questionNum) {"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"max-options\"));"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1356,"author":{"gitId":"-"},"content":""},{"lineNumber":1357,"author":{"gitId":"-"},"content":"    private WebElement getMinOptionsCheckbox(int questionNum) {"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"min-options-checkbox\"));"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1360,"author":{"gitId":"-"},"content":""},{"lineNumber":1361,"author":{"gitId":"-"},"content":"    private WebElement getMinOptionsInput(int questionNum) {"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"min-options\"));"},{"lineNumber":1363,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1364,"author":{"gitId":"-"},"content":""},{"lineNumber":1365,"author":{"gitId":"-"},"content":"    private void verifyMaxOptions(int questionNum, int maxOptions) {"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"        if (maxOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1367,"author":{"gitId":"-"},"content":"            assertFalse(getMaxOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1368,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1369,"author":{"gitId":"-"},"content":"            assertTrue(getMaxOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"            assertEquals(getMaxOptionsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"                    Integer.toString(maxOptions));"},{"lineNumber":1372,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1374,"author":{"gitId":"-"},"content":""},{"lineNumber":1375,"author":{"gitId":"-"},"content":"    private void verifyMinOptions(int questionNum, int minOptions) {"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"        if (minOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"            assertFalse(getMinOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1378,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"            assertTrue(getMinOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1380,"author":{"gitId":"-"},"content":"            assertEquals(getMinOptionsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":1381,"author":{"gitId":"-"},"content":"                    Integer.toString(minOptions));"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1383,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1384,"author":{"gitId":"-"},"content":""},{"lineNumber":1385,"author":{"gitId":"-"},"content":"    private void inputMsqDetails(int questionNum, FeedbackMsqQuestionDetails questionDetails) {"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"        if (inputGenerateOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":1388,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1389,"author":{"gitId":"-"},"content":""},{"lineNumber":1390,"author":{"gitId":"-"},"content":"        inputOptions(questionNum, questionDetails.getMsqChoices());"},{"lineNumber":1391,"author":{"gitId":"-"},"content":"        inputOptionWeights(questionNum, questionDetails.isHasAssignedWeights(), questionDetails.getMsqWeights());"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"        inputOtherChoice(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMsqOtherWeight());"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"        inputMaxOptions(questionNum, questionDetails.getMaxSelectableChoices());"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"        inputMinOptions(questionNum, questionDetails.getMinSelectableChoices());"},{"lineNumber":1395,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1396,"author":{"gitId":"-"},"content":""},{"lineNumber":1397,"author":{"gitId":"-"},"content":"    private void inputMaxOptions(int questionNum, int maxOptions) {"},{"lineNumber":1398,"author":{"gitId":"-"},"content":"        if (maxOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getMaxOptionsCheckbox(questionNum));"},{"lineNumber":1400,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1401,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getMaxOptionsCheckbox(questionNum));"},{"lineNumber":1402,"author":{"gitId":"-"},"content":"            fillTextBox(getMaxOptionsInput(questionNum), Integer.toString(maxOptions));"},{"lineNumber":1403,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1404,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1405,"author":{"gitId":"-"},"content":""},{"lineNumber":1406,"author":{"gitId":"-"},"content":"    private void inputMinOptions(int questionNum, int minOptions) {"},{"lineNumber":1407,"author":{"gitId":"-"},"content":"        if (minOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1408,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getMinOptionsCheckbox(questionNum));"},{"lineNumber":1409,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1410,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getMinOptionsCheckbox(questionNum));"},{"lineNumber":1411,"author":{"gitId":"-"},"content":"            fillTextBox(getMinOptionsInput(questionNum), Integer.toString(minOptions));"},{"lineNumber":1412,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1413,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1414,"author":{"gitId":"-"},"content":""},{"lineNumber":1415,"author":{"gitId":"-"},"content":"    private WebElement getMinNumscaleInput(int questionNum) {"},{"lineNumber":1416,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"min-value\"));"},{"lineNumber":1417,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1418,"author":{"gitId":"-"},"content":""},{"lineNumber":1419,"author":{"gitId":"-"},"content":"    private WebElement getMaxNumscaleInput(int questionNum) {"},{"lineNumber":1420,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"max-value\"));"},{"lineNumber":1421,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1422,"author":{"gitId":"-"},"content":""},{"lineNumber":1423,"author":{"gitId":"-"},"content":"    private WebElement getNumScaleIncrementInput(int questionNum) {"},{"lineNumber":1424,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"increment-value\"));"},{"lineNumber":1425,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1426,"author":{"gitId":"-"},"content":""},{"lineNumber":1427,"author":{"gitId":"-"},"content":"    private void inputNumScaleDetails(int questionNum, FeedbackNumericalScaleQuestionDetails questionDetails) {"},{"lineNumber":1428,"author":{"gitId":"-"},"content":"        inputNumScaleValue(getMinNumscaleInput(questionNum), Integer.toString(questionDetails.getMinScale()));"},{"lineNumber":1429,"author":{"gitId":"-"},"content":"        inputNumScaleValue(getNumScaleIncrementInput(questionNum), getDoubleString(questionDetails.getStep()));"},{"lineNumber":1430,"author":{"gitId":"-"},"content":"        inputNumScaleValue(getMaxNumscaleInput(questionNum), Integer.toString(questionDetails.getMaxScale()));"},{"lineNumber":1431,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1432,"author":{"gitId":"-"},"content":""},{"lineNumber":1433,"author":{"gitId":"-"},"content":"    private void inputNumScaleValue(WebElement input, String value) {"},{"lineNumber":1434,"author":{"gitId":"-"},"content":"        input.clear();"},{"lineNumber":1435,"author":{"gitId":"-"},"content":"        input.sendKeys(value);"},{"lineNumber":1436,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1437,"author":{"gitId":"-"},"content":""},{"lineNumber":1438,"author":{"gitId":"-"},"content":"    private WebElement getConstSumTotalPointsRadioBtn(int questionNum) {"},{"lineNumber":1439,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"total-points-radio\"));"},{"lineNumber":1440,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1441,"author":{"gitId":"-"},"content":""},{"lineNumber":1442,"author":{"gitId":"-"},"content":"    private WebElement getConstSumTotalPointsInput(int questionNum) {"},{"lineNumber":1443,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"total-points\"));"},{"lineNumber":1444,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1445,"author":{"gitId":"-"},"content":""},{"lineNumber":1446,"author":{"gitId":"-"},"content":"    private WebElement getConstSumPerOptionPointsRadioBtn(int questionNum) {"},{"lineNumber":1447,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"per-option-points-radio\"));"},{"lineNumber":1448,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1449,"author":{"gitId":"-"},"content":""},{"lineNumber":1450,"author":{"gitId":"-"},"content":"    private WebElement getConstSumPerOptionPointsInput(int questionNum) {"},{"lineNumber":1451,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"per-option-points\"));"},{"lineNumber":1452,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1453,"author":{"gitId":"-"},"content":""},{"lineNumber":1454,"author":{"gitId":"-"},"content":"    private WebElement getConstSumUnevenDistributionCheckbox(int questionNum) {"},{"lineNumber":1455,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"uneven-distribution-checkbox\"));"},{"lineNumber":1456,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1457,"author":{"gitId":"-"},"content":""},{"lineNumber":1458,"author":{"gitId":"-"},"content":"    private WebElement getConstSumUnevenDistributionDropdown(int questionNum) {"},{"lineNumber":1459,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"uneven-distribution-dropdown\"));"},{"lineNumber":1460,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1461,"author":{"gitId":"-"},"content":""},{"lineNumber":1462,"author":{"gitId":"-"},"content":"    private void inputConstSumDetails(int questionNum, FeedbackConstantSumQuestionDetails questionDetails) {"},{"lineNumber":1463,"author":{"gitId":"-"},"content":"        if (!questionDetails.isDistributeToRecipients()) {"},{"lineNumber":1464,"author":{"gitId":"-"},"content":"            inputOptions(questionNum, questionDetails.getConstSumOptions());"},{"lineNumber":1465,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1466,"author":{"gitId":"-"},"content":"        if (questionDetails.isPointsPerOption()) {"},{"lineNumber":1467,"author":{"gitId":"-"},"content":"            click(getConstSumPerOptionPointsRadioBtn(questionNum));"},{"lineNumber":1468,"author":{"gitId":"-"},"content":"            fillTextBox(getConstSumPerOptionPointsInput(questionNum), Integer.toString(questionDetails.getPoints()));"},{"lineNumber":1469,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1470,"author":{"gitId":"-"},"content":"            click(getConstSumTotalPointsRadioBtn(questionNum));"},{"lineNumber":1471,"author":{"gitId":"-"},"content":"            fillTextBox(getConstSumTotalPointsInput(questionNum), Integer.toString(questionDetails.getPoints()));"},{"lineNumber":1472,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1473,"author":{"gitId":"-"},"content":"        String distributeFor \u003d questionDetails.getDistributePointsFor();"},{"lineNumber":1474,"author":{"gitId":"-"},"content":"        if (questionDetails.isForceUnevenDistribution()) {"},{"lineNumber":1475,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getConstSumUnevenDistributionCheckbox(questionNum));"},{"lineNumber":1476,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(getConstSumUnevenDistributionDropdown(questionNum),"},{"lineNumber":1477,"author":{"gitId":"-"},"content":"                    \"All options\".equals(distributeFor) ? \"Every option\" : distributeFor);"},{"lineNumber":1478,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1479,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getConstSumUnevenDistributionCheckbox(questionNum));"},{"lineNumber":1480,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1481,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1482,"author":{"gitId":"-"},"content":""},{"lineNumber":1483,"author":{"gitId":"-"},"content":"    private WebElement getAllowNotSureContributionCheckbox(int questionNum) {"},{"lineNumber":1484,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"not-sure-checkbox\"));"},{"lineNumber":1485,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1486,"author":{"gitId":"-"},"content":""},{"lineNumber":1487,"author":{"gitId":"-"},"content":"    private void inputContributionDetails(int questionNum, FeedbackContributionQuestionDetails questionDetails) {"},{"lineNumber":1488,"author":{"gitId":"-"},"content":"        if (questionDetails.isNotSureAllowed()) {"},{"lineNumber":1489,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getAllowNotSureContributionCheckbox(questionNum));"},{"lineNumber":1490,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1491,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getAllowNotSureContributionCheckbox(questionNum));"},{"lineNumber":1492,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1493,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1494,"author":{"gitId":"-"},"content":""},{"lineNumber":1495,"author":{"gitId":"-"},"content":"    private WebElement getRubricRow(int questionNum, int rowNumber) {"},{"lineNumber":1496,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElements(By.cssSelector(\"tm-rubric-question-edit-details-form tr\"))"},{"lineNumber":1497,"author":{"gitId":"-"},"content":"                .get(rowNumber - 1);"},{"lineNumber":1498,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1499,"author":{"gitId":"-"},"content":""},{"lineNumber":1500,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getRubricChoiceInputs(int questionNum) {"},{"lineNumber":1501,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, 1).findElements(By.tagName(\"input\"));"},{"lineNumber":1502,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1503,"author":{"gitId":"-"},"content":""},{"lineNumber":1504,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getRubricTextareas(int questionNum, int rowNum) {"},{"lineNumber":1505,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, rowNum).findElements(By.tagName(\"textarea\"));"},{"lineNumber":1506,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1507,"author":{"gitId":"-"},"content":""},{"lineNumber":1508,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getRubricWeights(int questionNum, int rowNum) {"},{"lineNumber":1509,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, rowNum).findElements(By.tagName(\"input\"));"},{"lineNumber":1510,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1511,"author":{"gitId":"-"},"content":""},{"lineNumber":1512,"author":{"gitId":"-"},"content":"    private WebElement getRubricDeleteSubQnBtn(int questionNum, int rowNum) {"},{"lineNumber":1513,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, rowNum).findElement(By.id(\"btn-delete-subquestion\"));"},{"lineNumber":1514,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1515,"author":{"gitId":"-"},"content":""},{"lineNumber":1516,"author":{"gitId":"-"},"content":"    private WebElement getRubricDeleteChoiceBtn(int questionNum, int colNum) {"},{"lineNumber":1517,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, getNumRubricRows(questionNum)).findElements(By.id(\"btn-delete-choice\")).get(colNum);"},{"lineNumber":1518,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1519,"author":{"gitId":"-"},"content":""},{"lineNumber":1520,"author":{"gitId":"-"},"content":"    private int getNumRubricRows(int questionNum) {"},{"lineNumber":1521,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElements(By.cssSelector(\"#rubric-table tr\")).size();"},{"lineNumber":1522,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1523,"author":{"gitId":"-"},"content":""},{"lineNumber":1524,"author":{"gitId":"-"},"content":"    private int getNumRubricCols(int questionNum) {"},{"lineNumber":1525,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, 1).findElements(By.tagName(\"td\")).size();"},{"lineNumber":1526,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1527,"author":{"gitId":"-"},"content":""},{"lineNumber":1528,"author":{"gitId":"-"},"content":"    private void inputRubricDetails(int questionNum, FeedbackRubricQuestionDetails questionDetails) {"},{"lineNumber":1529,"author":{"gitId":"-"},"content":"        int numSubQn \u003d questionDetails.getNumOfRubricSubQuestions();"},{"lineNumber":1530,"author":{"gitId":"-"},"content":"        int numChoices \u003d questionDetails.getNumOfRubricChoices();"},{"lineNumber":1531,"author":{"gitId":"-"},"content":"        adjustNumRubricFields(questionNum, numSubQn, numChoices);"},{"lineNumber":1532,"author":{"gitId":"-"},"content":""},{"lineNumber":1533,"author":{"gitId":"-"},"content":"        List\u003cString\u003e choices \u003d questionDetails.getRubricChoices();"},{"lineNumber":1534,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numChoices; i++) {"},{"lineNumber":1535,"author":{"gitId":"-"},"content":"            fillTextBox(getRubricChoiceInputs(questionNum).get(i), choices.get(i));"},{"lineNumber":1536,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1537,"author":{"gitId":"-"},"content":""},{"lineNumber":1538,"author":{"gitId":"-"},"content":"        List\u003cString\u003e subQuestions \u003d questionDetails.getRubricSubQuestions();"},{"lineNumber":1539,"author":{"gitId":"-"},"content":"        List\u003cList\u003cString\u003e\u003e descriptions \u003d questionDetails.getRubricDescriptions();"},{"lineNumber":1540,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":1541,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e textAreas \u003d getRubricTextareas(questionNum, i + 2);"},{"lineNumber":1542,"author":{"gitId":"-"},"content":"            fillTextBox(textAreas.get(0), subQuestions.get(i));"},{"lineNumber":1543,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":1544,"author":{"gitId":"-"},"content":"                fillTextBox(textAreas.get(j + 1), descriptions.get(i).get(j));"},{"lineNumber":1545,"author":{"gitId":"-"},"content":"                if (descriptions.get(i).get(j).isEmpty()) {"},{"lineNumber":1546,"author":{"gitId":"-"},"content":"                    // using clear does not send the required event"},{"lineNumber":1547,"author":{"gitId":"-"},"content":"                    // as a workaround, after clearing without event, enter a random character and delete it"},{"lineNumber":1548,"author":{"gitId":"-"},"content":"                    textAreas.get(j + 1).sendKeys(\"a\");"},{"lineNumber":1549,"author":{"gitId":"-"},"content":"                    textAreas.get(j + 1).sendKeys(Keys.BACK_SPACE);"},{"lineNumber":1550,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1551,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1552,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1553,"author":{"gitId":"-"},"content":""},{"lineNumber":1554,"author":{"gitId":"-"},"content":"        if (questionDetails.isHasAssignedWeights()) {"},{"lineNumber":1555,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getWeightCheckbox(questionNum));"},{"lineNumber":1556,"author":{"gitId":"-"},"content":"            List\u003cList\u003cDouble\u003e\u003e weights \u003d questionDetails.getRubricWeights();"},{"lineNumber":1557,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":1558,"author":{"gitId":"-"},"content":"                for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":1559,"author":{"gitId":"-"},"content":"                    fillTextBox(getRubricWeights(questionNum, i + 2).get(j), getDoubleString(weights.get(i).get(j)));"},{"lineNumber":1560,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1561,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1562,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1563,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getWeightCheckbox(questionNum));"},{"lineNumber":1564,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1565,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1566,"author":{"gitId":"-"},"content":""},{"lineNumber":1567,"author":{"gitId":"-"},"content":"    private void adjustNumRubricFields(int questionNum, int numSubQn, int numChoices) {"},{"lineNumber":1568,"author":{"gitId":"-"},"content":"        int numSubQnsNeeded \u003d numSubQn - (getNumRubricRows(questionNum) - 2);"},{"lineNumber":1569,"author":{"gitId":"-"},"content":"        int numChoicesNeeded \u003d numChoices - (getNumRubricCols(questionNum) - 1);"},{"lineNumber":1570,"author":{"gitId":"-"},"content":"        if (numSubQnsNeeded \u003e 0) {"},{"lineNumber":1571,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numSubQnsNeeded; i++) {"},{"lineNumber":1572,"author":{"gitId":"-"},"content":"                click(getQuestionForm(questionNum).findElement(By.id(\"btn-add-row\")));"},{"lineNumber":1573,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1574,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1575,"author":{"gitId":"-"},"content":"        if (numChoicesNeeded \u003e 0) {"},{"lineNumber":1576,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numChoicesNeeded; i++) {"},{"lineNumber":1577,"author":{"gitId":"-"},"content":"                click(getQuestionForm(questionNum).findElement(By.id(\"btn-add-col\")));"},{"lineNumber":1578,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1579,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1580,"author":{"gitId":"-"},"content":"        if (numSubQnsNeeded \u003c 0) {"},{"lineNumber":1581,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c -numSubQnsNeeded; i++) {"},{"lineNumber":1582,"author":{"gitId":"-"},"content":"                click(getRubricDeleteSubQnBtn(questionNum, 2));"},{"lineNumber":1583,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1584,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1585,"author":{"gitId":"-"},"content":"        if (numChoicesNeeded \u003c 0) {"},{"lineNumber":1586,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c -numChoicesNeeded; i++) {"},{"lineNumber":1587,"author":{"gitId":"-"},"content":"                clickAndConfirm(getRubricDeleteChoiceBtn(questionNum, 2));"},{"lineNumber":1588,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1589,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1590,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1591,"author":{"gitId":"-"},"content":""},{"lineNumber":1592,"author":{"gitId":"-"},"content":"    private WebElement getAllowDuplicateRankCheckbox(int questionNum) {"},{"lineNumber":1593,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"duplicate-rank-checkbox\"));"},{"lineNumber":1594,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1595,"author":{"gitId":"-"},"content":""},{"lineNumber":1596,"author":{"gitId":"-"},"content":"    private void inputRankDetails(int questionNum, FeedbackRankQuestionDetails questionDetails) {"},{"lineNumber":1597,"author":{"gitId":"-"},"content":"        if (questionDetails instanceof FeedbackRankOptionsQuestionDetails) {"},{"lineNumber":1598,"author":{"gitId":"-"},"content":"            FeedbackRankOptionsQuestionDetails optionDetails \u003d (FeedbackRankOptionsQuestionDetails) questionDetails;"},{"lineNumber":1599,"author":{"gitId":"-"},"content":"            inputOptions(questionNum, optionDetails.getOptions());"},{"lineNumber":1600,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1601,"author":{"gitId":"-"},"content":"        if (questionDetails.isAreDuplicatesAllowed()) {"},{"lineNumber":1602,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getAllowDuplicateRankCheckbox(questionNum));"},{"lineNumber":1603,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1604,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getAllowDuplicateRankCheckbox(questionNum));"},{"lineNumber":1605,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1606,"author":{"gitId":"-"},"content":"        inputMaxOptions(questionNum, questionDetails.getMaxOptionsToBeRanked());"},{"lineNumber":1607,"author":{"gitId":"-"},"content":"        inputMinOptions(questionNum, questionDetails.getMinOptionsToBeRanked());"},{"lineNumber":1608,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1609,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":12,"-":1597}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorFeedbackSessionsPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the \"Sessions\" page for Instructors."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class InstructorFeedbackSessionsPage extends AppPage {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-add-session\")"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private WebElement addSessionButton;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-type\")"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private WebElement sessionTypeDropdown;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"add-course-id\")"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private WebElement courseIdDropdown;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"add-session-name\")"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private WebElement sessionNameTextBox;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"instructions\")"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private WebElement instructionsEditor;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-date\")"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private WebElement startDateBox;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-time\")"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private WebElement startTimeDropdown;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-date\")"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private WebElement endDateBox;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-time\")"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private WebElement endTimeDropdown;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"grace-period\")"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private WebElement gracePeriodDropdown;"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-visibility\")"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private WebElement changeVisibilityButton;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-custom\")"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private WebElement customSessionVisibleTimeButton;"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-date\")"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityDateBox;"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-time\")"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityTimeDropdown;"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-at-open\")"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private WebElement openSessionVisibleTimeButton;"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-custom\")"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private WebElement customResponseVisibleTimeButton;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-date\")"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityDateBox;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-time\")"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityTimeDropdown;"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-immediately\")"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private WebElement immediateResponseVisibleTimeButton;"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-manually\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private WebElement manualResponseVisibleTimeButton;"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-email\")"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private WebElement changeEmailButton;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-opening\")"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private WebElement openingSessionEmailCheckbox;"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-closing\")"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private WebElement closingSessionEmailCheckbox;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-published\")"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private WebElement publishedSessionEmailCheckbox;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-create-session\")"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private WebElement createSessionButton;"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"sessions-table\")"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private WebElement sessionsTable;"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"deleted-sessions-heading\")"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private WebElement deleteTableHeading;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-restore-all\")"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private WebElement restoreAllButton;"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-delete-all\")"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private WebElement deleteAllButton;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"deleted-sessions-table\")"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private WebElement deletedSessionsTable;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public InstructorFeedbackSessionsPage(Browser browser) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Feedback Sessions\");"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void verifySessionsTable(FeedbackSessionAttributes[] sessions) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][4];"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getSessionDetails(sessions[i]);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(sessionsTable, expectedValues);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String[] expectedValues \u003d getSessionDetails(session);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        verifyTableRowValues(sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId), expectedValues);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void verifySoftDeletedSessionsTable(FeedbackSessionAttributes[] sessions) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][4];"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getSoftDeletedSessionDetails(sessions[i]);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(deletedSessionsTable, expectedValues);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void verifyNumSoftDeleted(int expected) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(getNumSoftDeletedFeedbackSessions(), expected);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void verifyResponseRate(FeedbackSessionAttributes session, String expectedResponseRate) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedResponseRate, getResponseRate(rowId));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void addFeedbackSession(FeedbackSessionAttributes newSession, boolean isUsingTemplate) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        clickAddSessionButton();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.cssSelector(\"#instructions iframe\"));"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (isUsingTemplate) {"},{"lineNumber":160,"author":{"gitId":"Nicolascwy"},"content":"            selectDropdownOptionByText(sessionTypeDropdown,"},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"                    \"session using template: team peer feedback (percentage-based)\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(sessionTypeDropdown, \"session with my own questions\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(courseIdDropdown, newSession.getCourseId());"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        fillTextBox(sessionNameTextBox, newSession.getFeedbackSessionName());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        setInstructions(newSession.getInstructions());"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        setSessionStartDateTime(newSession.getStartTime(), newSession.getTimeZone());"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        setSessionEndDateTime(newSession.getEndTime(), newSession.getTimeZone());"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        selectGracePeriod(newSession.getGracePeriodMinutes());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        setVisibilitySettings(newSession);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        setEmailSettings(newSession);"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        clickCreateSessionButton();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        waitForSessionEditPage();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void addCopyOfSession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                                 String newSessionName) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        clickAddSessionButton();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-copy-session\")));"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        selectCourseToCopy(copyToCourse.getId());"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        fillTextBox(browser.driver.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        selectSessionToCopy(sessionToCopy.getCourseId(), sessionToCopy.getFeedbackSessionName());"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        clickConfirmCopySessionButton();"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        waitForSessionEditPage();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void copySession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                            String newSessionName) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String copyFromCourse \u003d sessionToCopy.getCourseId();"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String sessionName \u003d sessionToCopy.getFeedbackSessionName();"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d clickCopyButtonInTable(copyFromCourse, sessionName);"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        selectCourseToCopyToInModal(copyFsModal, copyToCourse.getId());"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void moveToRecycleBin(FeedbackSessionAttributes sessionToDelete) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToDelete.getCourseId(), sessionToDelete.getFeedbackSessionName());"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        clickAndConfirm(browser.driver.findElement(By.id(\"btn-soft-delete-\" + rowId)));"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void restoreSession(FeedbackSessionAttributes sessionToRestore) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        int rowId \u003d getSoftDeletedFeedbackSessionRowId(sessionToRestore.getCourseId(),"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                sessionToRestore.getFeedbackSessionName());"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-restore-\" + rowId)));"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void deleteSession(FeedbackSessionAttributes sessionToRestore) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        int rowId \u003d getSoftDeletedFeedbackSessionRowId(sessionToRestore.getCourseId(),"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                sessionToRestore.getFeedbackSessionName());"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        clickAndConfirm(browser.driver.findElement(By.id(\"btn-delete-\" + rowId)));"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void restoreAllSessions() {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        click(restoreAllButton);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void deleteAllSessions() {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        clickAndConfirm(deleteAllButton);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void showDeleteTable() {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (!isElementVisible(By.id(\"sort-deleted-course-id\"))) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            click(deleteTableHeading);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            waitUntilAnimationFinish();"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToSelectedStudent(FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-remind-\" + rowId)));"},{"lineNumber":246,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-selected-\" + rowId)));"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":249,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":251,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToNonSubmitters(FeedbackSessionAttributes session) {"},{"lineNumber":252,"author":{"gitId":"Nicolascwy"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":253,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":254,"author":{"gitId":"Nicolascwy"},"content":"        click(browser.driver.findElement(By.id(\"btn-remind-\" + rowId)));"},{"lineNumber":255,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-all-\" + rowId)));"},{"lineNumber":256,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public void resendResultsLink(FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-resend-\" + rowId)));"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-resend-results\")));"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void publishSessionResults(FeedbackSessionAttributes sessionToPublish) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToPublish.getCourseId(), sessionToPublish.getFeedbackSessionName());"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-publish-\" + rowId)));"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void unpublishSessionResults(FeedbackSessionAttributes sessionToPublish) {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToPublish.getCourseId(), sessionToPublish.getFeedbackSessionName());"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-unpublish-\" + rowId)));"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"    public void downloadResults(FeedbackSessionAttributes session) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-download-\" + rowId)));"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void sortBySessionsName() {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"sort-session-name\")));"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public void sortByCourseId() {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"sort-course-id\")));"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    private String[] getSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[4];"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getCourseId();"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        details[1] \u003d session.getFeedbackSessionName();"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        if (session.isClosed()) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Closed\";"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        } else if (session.isVisible() \u0026\u0026 (session.isOpened() || session.isInGracePeriod())) {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Open\";"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Awaiting\";"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        details[3] \u003d session.isPublished() ? \"Published\" : \"Not Published\";"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    private String[] getSoftDeletedSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[4];"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getCourseId();"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        details[1] \u003d session.getFeedbackSessionName();"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        details[2] \u003d getSimpleDateString(session.getCreatedTime(), session.getTimeZone());"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        details[3] \u003d getSimpleDateString(session.getDeletedTime(), session.getTimeZone());"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, String timeZone) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"EE, dd MMM, yyyy\");"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    private String getSimpleDateString(Instant instant, String timeZone) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"dd MMM, yyyy\");"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    private String getTimeString(Instant instant, String timeZone) {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        ZonedDateTime dateTime \u003d instant.atZone(ZoneId.of(timeZone));"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        if (dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0) {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            return \"23:59H\";"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"HH:00\") + \"H\";"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    private String getResponseRate(int rowId) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        By showButtonId \u003d By.id(\"show-response-rate-\" + rowId);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        if (isElementPresent(showButtonId)) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            click(showButtonId);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"response-rate-\" + rowId)).getText();"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    private void clickAddSessionButton() {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        click(addSessionButton);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"    private void setInstructions(String newInstructions) {"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(instructionsEditor, newInstructions);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"    private void setSessionStartDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        setDateTime(startDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                startTimeDropdown, startInstant, timeZone);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"    private void setSessionEndDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        setDateTime(endDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                endTimeDropdown, endInstant, timeZone);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"    private void setVisibilityDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        setDateTime(sessionVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                sessionVisibilityTimeDropdown, startInstant, timeZone);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"    private void setResponseDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        setDateTime(responseVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                responseVisibilityTimeDropdown, endInstant, timeZone);"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"    private void setDateTime(WebElement dateBox, WebElement timeBox, Instant startInstant, String timeZone) {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        fillTextBox(dateBox, getDateString(startInstant, timeZone));"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(timeBox.findElement(By.tagName(\"select\")), getTimeString(startInstant, timeZone));"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"    private void selectGracePeriod(long gracePeriodMinutes) {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(gracePeriodDropdown, gracePeriodMinutes + \" min\");"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"    private void setVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        showVisibilitySettings();"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"        setSessionVisibilitySettings(newFeedbackSession);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        setResponseVisibilitySettings(newFeedbackSession);"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"    private void setSessionVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        Instant sessionDateTime \u003d newFeedbackSession.getSessionVisibleFromTime();"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        if (sessionDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            click(openSessionVisibleTimeButton);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            click(customSessionVisibleTimeButton);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            setVisibilityDateTime(sessionDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"    private void setResponseVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        Instant responseDateTime \u003d newFeedbackSession.getResultsVisibleFromTime();"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        if (responseDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            click(immediateResponseVisibleTimeButton);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        } else if (responseDateTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            click(manualResponseVisibleTimeButton);"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            click(customResponseVisibleTimeButton);"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            setResponseDateTime(responseDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"    private void setEmailSettings(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        showEmailSettings();"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isOpeningEmailEnabled() !\u003d openingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            click(openingSessionEmailCheckbox);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isClosingEmailEnabled() !\u003d closingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            click(closingSessionEmailCheckbox);"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isPublishedEmailEnabled() !\u003d publishedSessionEmailCheckbox.isSelected()) {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            click(publishedSessionEmailCheckbox);"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"    private void showVisibilitySettings() {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-visibility\"))) {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            click(changeVisibilityButton);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    private void showEmailSettings() {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-email\"))) {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            click(changeEmailButton);"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"    private void clickCreateSessionButton() {"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        click(createSessionButton);"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"    private void selectCourseToCopy(String courseToCopyId) {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        WebElement courseIdDropdown \u003d waitForElementPresence(By.id(\"copy-course-id\"));"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(courseIdDropdown, courseToCopyId);"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"    private void selectSessionToCopy(String copyFromCourse, String sessionNameToCopy) {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        WebElement table \u003d browser.driver.findElement(By.id(\"copy-selection-table\"));"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.tagName(\"td\"));"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":453,"author":{"gitId":"-"},"content":"            if (cells.get(1).getText().equals(copyFromCourse) \u0026\u0026 cells.get(2).getText().equals(sessionNameToCopy)) {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":456,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":459,"author":{"gitId":"-"},"content":""},{"lineNumber":460,"author":{"gitId":"-"},"content":"    private void clickConfirmCopySessionButton() {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy\")));"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"    private WebElement clickCopyButtonInTable(String courseId, String sessionName) {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(courseId, sessionName);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-copy-\" + rowId)));"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"    private void selectCourseToCopyToInModal(WebElement copyFsModal, String courseToCopyId) {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            if (courseId.equals(courseToCopyId)) {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":477,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"    private void selectStudentToEmail(String studentEmail) {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        WebElement studentList \u003d waitForElementPresence(By.id(\"student-list-table\"));"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d studentList.findElements(By.tagName(\"tr\"));"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.cssSelector(\"td\"));"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            if (cells.get(4).getText().equals(studentEmail)) {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":492,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"    private int getFeedbackSessionRowId(String courseId, String sessionName) {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        int i \u003d 0;"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        while (i \u003c getNumFeedbackSessions()) {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"            if (getFeedbackSessionCourseId(i).equals(courseId)"},{"lineNumber":501,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getFeedbackSessionName(i).equals(sessionName)) {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":503,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":504,"author":{"gitId":"-"},"content":"            i++;"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"    private int getSoftDeletedFeedbackSessionRowId(String courseId, String sessionName) {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        int i \u003d 0;"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"        while (i \u003c getNumSoftDeletedFeedbackSessions()) {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"            if (getSoftDeletedFeedbackSessionCourseId(i).equals(courseId)"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getSoftDeletedFeedbackSessionName(i).equals(sessionName)) {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":517,"author":{"gitId":"-"},"content":"            i++;"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"    private int getNumFeedbackSessions() {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        return sessionsTable.findElements(By.cssSelector(\"tbody tr\")).size();"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"    private int getNumSoftDeletedFeedbackSessions() {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        if (!isElementPresent(By.id(\"deleted-sessions-table\"))) {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        return deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).size();"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionCourseId(int rowId) {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        WebElement row \u003d sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(0).getText();"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"    private String getSoftDeletedFeedbackSessionCourseId(int rowId) {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        WebElement row \u003d deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(0).getText();"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionName(int rowId) {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        WebElement row \u003d sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(1).getText();"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"    private String getSoftDeletedFeedbackSessionName(int rowId) {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        WebElement row \u003d deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(1).getText();"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"    private void waitForSessionEditPage() {"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"btn-fs-edit\"));"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":556,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":544,"Nicolascwy":12}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorHomePage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.openqa.selenium.NoSuchElementException;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the instructor home page."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class InstructorHomePage extends AppPage {"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public InstructorHomePage(Browser browser) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Home\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void verifyCourseTabDetails(int courseTabIndex, CourseAttributes course, FeedbackSessionAttributes[] sessions) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String expectedDetails \u003d \"[\" + course.getId() + \"]: \" + course.getName();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(getCourseDetails(courseTabIndex), expectedDetails);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][5];"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getExpectedSessionDetails(sessions[i]);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(getSessionsTable(courseTabIndex), expectedValues);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(int courseTabIndex, int sessionIndex, FeedbackSessionAttributes session) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String[] expectedValues \u003d getExpectedSessionDetails(session);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        WebElement sessionRow \u003d getSessionsTable(courseTabIndex).findElements(By.cssSelector(\"tbody tr\")).get(sessionIndex);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        verifyTableRowValues(sessionRow, expectedValues);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void verifyNumCourses(int expectedNum) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(getNumCourses(), expectedNum);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void verifyResponseRate(int courseTabIndex, int sessionIndex, String expectedResponseRate) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(expectedResponseRate, getResponseRate(courseTabIndex, sessionIndex));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void copySession(int courseTabIndex, int sessionIndex, CourseAttributes copyToCourse, String newSessionName) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d clickCopyButtonInTable(courseTabIndex, sessionIndex);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        selectCourseToCopyToInModal(copyFsModal, copyToCourse.getId());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void publishSessionResults(int courseTabIndex, int sessionIndex) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e publishButtons \u003d browser.driver.findElements(By.id(\"btn-publish-\" + sessionIndex));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        clickAndConfirm(publishButtons.get(publishButtons.size() - 1));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void unpublishSessionResults(int courseTabIndex, int sessionIndex) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e unpublishButtons \u003d browser.driver.findElements(By.id(\"btn-unpublish-\" + sessionIndex));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        clickAndConfirm(unpublishButtons.get(unpublishButtons.size() - 1));"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToSelectedStudent(int courseTabIndex, int sessionIndex, StudentAttributes student) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-remind-\" + sessionIndex)));"},{"lineNumber":79,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-selected-\" + sessionIndex)));"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToNonSubmitters(int courseTabIndex, int sessionIndex) {"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"        click(courseTab.findElement(By.id(\"btn-remind-\" + sessionIndex)));"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-all-\" + sessionIndex)));"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void resendResultsLink(int courseTabIndex, int sessionIndex, StudentAttributes student) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-resend-\" + sessionIndex)));"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-resend-results\")));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void downloadResults(int courseTabIndex, int sessionIndex) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-download-\" + sessionIndex)));"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void deleteSession(int courseTabIndex, int sessionIndex) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        clickAndConfirm(courseTab.findElement(By.id(\"btn-soft-delete-\" + sessionIndex)));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void archiveCourse(int courseTabIndex) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-course\")));"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        clickAndConfirm(courseTab.findElement(By.id(\"btn-archive-course\")));"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void deleteCourse(int courseTabIndex) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-course\")));"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        clickAndConfirm(courseTab.findElement(By.id(\"btn-delete-course\")));"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void sortCoursesById() {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"sort-course-id\")));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void sortCoursesByName() {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"sort-course-name\")));"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void sortCoursesByCreationDate() {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"sort-course-date\")));"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private int getNumCourses() {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.id(\"course-tab\")).size();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private WebElement getCourseTab(int courseTabIndex) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.id(\"course-tab\")).get(courseTabIndex);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private String getCourseDetails(int courseTabIndex) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return courseTab.findElement(By.id(\"course-details\")).getText();"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private WebElement getSessionsTable(int courseTabIndex) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return getCourseTab(courseTabIndex).findElement(By.id(\"sessions-table\"));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, String timeZone) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"d MMM h:mm a\");"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private String[] getExpectedSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[5];"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getFeedbackSessionName();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        details[1] \u003d getDateString(session.getStartTime(), session.getTimeZone());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        details[2] \u003d getDateString(session.getEndTime(), session.getTimeZone());"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (session.isClosed()) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            details[3] \u003d \"Closed\";"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } else if (session.isVisible() \u0026\u0026 (session.isOpened() || session.isInGracePeriod())) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            details[3] \u003d \"Open\";"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            details[3] \u003d \"Awaiting\";"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        details[4] \u003d session.isPublished() ? \"Published\" : \"Not Published\";"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private String getResponseRate(int courseTabIndex, int sessionIndex) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        WebElement showButton \u003d null;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            showButton \u003d getCourseTab(courseTabIndex).findElement(By.id(\"show-response-rate-\" + sessionIndex));"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            // continue"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (showButton !\u003d null) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            click(showButton);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"response-rate-\" + sessionIndex)).getText();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private WebElement clickCopyButtonInTable(int courseTabIndex, int sessionIndex) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        click(getCourseTab(courseTabIndex).findElement(By.id(\"btn-copy-\" + sessionIndex)));"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private void selectCourseToCopyToInModal(WebElement copyFsModal, String courseToCopyId) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (courseId.equals(courseToCopyId)) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private void selectStudentToEmail(String studentEmail) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        WebElement studentList \u003d waitForElementPresence(By.id(\"student-list-table\"));"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d studentList.findElements(By.tagName(\"tr\"));"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.cssSelector(\"td\"));"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (cells.get(4).getText().equals(studentEmail)) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":213,"Nicolascwy":9}},{"path":"src/e2e/java/teammates/e2e/util/TestDataValidityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.test.FileHelper;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Checks for test data validity."},{"lineNumber":27,"author":{"gitId":"-"},"content":" *"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * \u003cp\u003eAs E2E tests can be run against actual production server, the test data needs to be carefully designed"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * such that they do not consist any form of data that may be resembling what users can be using."},{"lineNumber":30,"author":{"gitId":"-"},"content":" *"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * \u003cp\u003eFor the above reason, the following fields are checked:"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * \u003cul\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * \u003cli\u003eAccount Google ID\u003c/li\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * \u003cli\u003eCourse ID\u003c/li\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * \u003cli\u003eStudent email\u003c/li\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * \u003cli\u003eInstructor email\u003c/li\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * \u003c/ul\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":" *"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * \u003cp\u003eIn order to guarantee data safety as much as possible, we set some form of validation rule for the above fields"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * such that the likelihood of any user using the same identifier is very low or zero."},{"lineNumber":41,"author":{"gitId":"-"},"content":" */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class TestDataValidityTest extends BaseTestCase {"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @SuppressFBWarnings(\"RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE\")"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // SpotBugs false positive: https://github.com/spotbugs/spotbugs/issues/1694"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void checkTestDataValidity() throws IOException {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Map\u003cString, List\u003cString\u003e\u003e errors \u003d new HashMap\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try (Stream\u003cPath\u003e paths \u003d Files.walk(Paths.get(TestProperties.TEST_DATA_FOLDER))) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            paths.filter(Files::isRegularFile).forEach(path -\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                String pathString \u003d path.toString();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                String jsonString;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    jsonString \u003d FileHelper.readFile(pathString);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                } catch (IOException e) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    errors.put(pathString, Collections.singletonList(\"Error reading file: \" + e.getMessage()));"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                if (path.getFileName() \u003d\u003d null) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"                String testPage \u003d path.getFileName().toString().replace(\"E2ETest.json\", \"\");"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                DataBundle dataBundle \u003d JsonUtils.fromJson(jsonString, DataBundle.class);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"                dataBundle.accounts.forEach((id, account) -\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    if (!isValidTestGoogleId(account.getGoogleId(), testPage)) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                .add(\"Invalid account google ID: \" + account.getGoogleId());"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    if (!isValidTestEmail(account.getEmail())) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                .add(\"Invalid account email: \" + account.getEmail());"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                dataBundle.courses.forEach((id, course) -\u003e {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    if (!isValidTestCourseId(course.getId(), testPage)) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                .add(\"Invalid course ID: \" + course.getId());"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                dataBundle.students.forEach((id, student) -\u003e {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    if (!isValidTestGoogleId(student.getGoogleId(), testPage)) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                                .add(\"Invalid student google ID: \" + student.getGoogleId());"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    if (!isValidTestEmail(student.getEmail())) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                                .add(\"Invalid student email: \" + student.getEmail());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                dataBundle.instructors.forEach((id, instructor) -\u003e {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    if (!isValidTestGoogleId(instructor.getGoogleId(), testPage)) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                                .add(\"Invalid instructor google ID: \" + instructor.getGoogleId());"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    if (!isValidTestEmail(instructor.getEmail())) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                .add(\"Invalid instructor email: \" + instructor.getEmail());"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                dataBundle.feedbackSessions.forEach((id, session) -\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                    if (!isValidTestCourseId(session.getCourseId(), testPage)) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                .add(\"Invalid session course ID: \" + session.getCourseId());"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"                    if (!isValidTestEmail(session.getCreatorEmail())) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                .add(\"Invalid session creator email: \" + session.getCreatorEmail());"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"                dataBundle.feedbackResponses.forEach((id, response) -\u003e {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                    if (!isValidTestCourseId(response.getCourseId(), testPage)) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                                .add(\"Invalid response course ID: \" + response.getCourseId());"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    if (response.getGiver().contains(\"@\") \u0026\u0026 !isValidTestEmail(response.getGiver())) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                .add(\"Invalid response giver email: \" + response.getGiver());"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    if (response.getRecipient().contains(\"@\") \u0026\u0026 !isValidTestEmail(response.getRecipient())) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                .add(\"Invalid response recipient email: \" + response.getRecipient());"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"                dataBundle.accountRequests.forEach((id, accountRequest) -\u003e {"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"                    if (!isValidTestEmail(accountRequest.getEmail())) {"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"                        errors.computeIfAbsent(pathString, k -\u003e new ArrayList\u003c\u003e())"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"                                .add(\"Invalid account request email: \" + accountRequest.getEmail());"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"                    }"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"                });"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!errors.isEmpty()) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String errorItems \u003d errors.entrySet().stream()"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    .map(entry -\u003e {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                        return entry.getKey() + System.lineSeparator()"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                                + entry.getValue().stream().collect(Collectors.joining(System.lineSeparator()));"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    })"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    .collect(Collectors.joining(System.lineSeparator()));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            fail(\"Invalid test data exists.\" + System.lineSeparator() + errorItems);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private boolean isValidTestEmail(String email) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return email.endsWith(Const.TEST_EMAIL_DOMAIN);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private boolean isValidTestCourseId(String courseId, String testPage) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return courseId.matches(constructIdRegex(testPage)) \u0026\u0026 courseId.length() \u003c 32;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private boolean isValidTestGoogleId(String googleId, String testPage) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (googleId \u003d\u003d null || googleId.equals(\"\")) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            // Empty google ID is always acceptable"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return googleId.matches(constructIdRegex(testPage)) \u0026\u0026 googleId.length() \u003c 32;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private String constructIdRegex(String testPage) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // We set these rules for setting the prefix for IDs:"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // Rule 1: must start with predefined phrase"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // Rule 2: must be representative of the test but yet not too long"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String shortenedTestPage \u003d testPage;"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // Trim the Page word at the end if any"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        shortenedTestPage \u003d shortenedTestPage"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .replaceFirst(\"Page$\", \"\");"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // Shorten common words"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        shortenedTestPage \u003d shortenedTestPage"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .replaceFirst(\"^Admin\", \"A\")"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .replaceFirst(\"^Instructor\", \"I\")"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .replaceFirst(\"^Automated\", \"Aut\")"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .replace(\"Feedback\", \"F\")"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .replace(\"Student\", \"S\")"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .replace(\"Course\", \"C\")"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .replace(\"Question\", \"Qn\")"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .replaceFirst(\"Session(s?)\", \"Ses$1\")"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .replaceFirst(\"Reports?\", \"Rep\")"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .replaceFirst(\"Results?\", \"Res\")"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .replace(\"Details\", \"Det\")"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .replace(\"Confirmation\", \"Conf\")"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .replace(\"Profile\", \"Prof\")"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .replace(\"Reminders\", \"Rem\");"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // Shorten question types"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        shortenedTestPage \u003d shortenedTestPage"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .replace(\"Recipient\", \"Rcpt\")"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .replace(\"Option\", \"Opt\")"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .replace(\"Contribution\", \"Contr\")"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .replace(\"ConstSum\", \"CSum\");"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // Prefix with tm.e2e."},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // Add validation at the end to ensure that the ID is not equal to the prefix only"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return \"tm\\\\.e2e\\\\.\" + shortenedTestPage + \"\\\\.(?:[A-Za-z0-9]+.)*[A-Za-z0-9]+\";"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":207,"samuelfangjw":7}},{"path":"src/main/java/teammates/common/datatransfer/DataBundle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Holds a bundle of *Attributes data transfer objects."},{"lineNumber":19,"author":{"gitId":"-"},"content":" *"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis class is mainly used for serializing JSON strings."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// CHECKSTYLE.OFF:JavadocVariable each field represents different entity types"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DataBundle {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Map\u003cString, AccountAttributes\u003e accounts \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public Map\u003cString, AccountRequestAttributes\u003e accountRequests \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Map\u003cString, CourseAttributes\u003e courses \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Map\u003cString, InstructorAttributes\u003e instructors \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Map\u003cString, StudentAttributes\u003e students \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackSessionAttributes\u003e feedbackSessions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackQuestionAttributes\u003e feedbackQuestions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackResponseAttributes\u003e feedbackResponses \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackResponseCommentAttributes\u003e feedbackResponseComments \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Map\u003cString, StudentProfileAttributes\u003e profiles \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":32,"samuelfangjw":2}},{"path":"src/main/java/teammates/common/datatransfer/UserInfoCookie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents user credential info to be persisted within cookies."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserInfoCookie {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private String userId;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private String verificationCode;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"    private long expiryTime;"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserInfoCookie(String userId) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.userId \u003d userId;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.verificationCode \u003d StringHelper.generateSignature(userId);"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"        this.expiryTime \u003d Instant.now().plus(Const.COOKIE_VALIDITY_PERIOD).toEpochMilli();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Gets a {@link UserInfoCookie} object from cookie string."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static UserInfoCookie fromCookie(String cookie) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (cookie \u003d\u003d null) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            String decryptedCookie \u003d StringHelper.decrypt(cookie);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return JsonUtils.fromJson(decryptedCookie, UserInfoCookie.class);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (InvalidParametersException | JsonSyntaxException e) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getUserId() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userId;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserId(String userId) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userId \u003d userId;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getVerificationCode() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return verificationCode;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setVerificationCode(String verificationCode) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.verificationCode \u003d verificationCode;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"    public long getExpiryTime() {"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"        return expiryTime;"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"    public void setExpiryTime(long expiryTime) {"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"        this.expiryTime \u003d expiryTime;"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"     * Returns true if the object represents a valid user info and the object has not expired."},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isValid() {"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"        return StringHelper.isCorrectSignature(userId, verificationCode)"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"            \u0026\u0026 Instant.now().isBefore(Instant.ofEpochMilli(expiryTime));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":58,"Nicolascwy":17}},{"path":"src/main/java/teammates/common/datatransfer/attributes/AccountRequestAttributes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Config;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * The data transfer object for {@link AccountRequest} entities."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestAttributes extends EntityAttributes\u003cAccountRequest\u003e {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private String email;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private String name;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private String institute;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private Instant registeredAt;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private Instant createdAt;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private transient String registrationKey;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequestAttributes(String email, String institute, String name) {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        this.email \u003d email;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        this.institute \u003d institute;"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        this.name \u003d name;"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        this.registrationKey \u003d null;"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        this.registeredAt \u003d null;"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.createdAt \u003d null;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Gets the {@link AccountRequestAttributes} instance of the given {@link AccountRequest}."},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public static AccountRequestAttributes valueOf(AccountRequest accountRequest) {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d new AccountRequestAttributes(accountRequest.getEmail(),"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                accountRequest.getInstitute(), accountRequest.getName());"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestAttributes.registrationKey \u003d accountRequest.getRegistrationKey();"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestAttributes.registeredAt \u003d accountRequest.getRegisteredAt();"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestAttributes.createdAt \u003d accountRequest.getCreatedAt();"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestAttributes;"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a builder for {@link AccountRequestAttributes}."},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public static Builder builder(String email, String institute, String name) {"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        return new Builder(email, institute, name);"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegistrationKey() {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return registrationKey;"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public String getName() {"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return name;"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public String getEmail() {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        return email;"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public String getInstitute() {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return institute;"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    public Instant getRegisteredAt() {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        return registeredAt;"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    public Instant getCreatedAt() {"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        return createdAt;"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegistrationUrl() {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        return Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"                .withIsCreatingAccount(\"true\")"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"                .withRegistrationKey(this.getRegistrationKey())"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                .toAbsoluteString();"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cString\u003e getInvalidityInfo() {"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForEmail(getEmail()), errors);"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForPersonName(getName()), errors);"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForInstituteName(getInstitute()), errors);"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        return errors;"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequest toEntity() {"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(getEmail(), getName(), getInstitute());"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        if (this.getRegistrationKey() !\u003d null) {"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"            accountRequest.setRegistrationKey(this.getRegistrationKey());"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        if (this.getCreatedAt() !\u003d null) {"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"            accountRequest.setCreatedAt(this.getCreatedAt());"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegisteredAt(this.getRegisteredAt());"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequest;"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        return \"[\" + AccountRequestAttributes.class.getSimpleName() + \"] email: \""},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"                + getEmail() + \" name: \" + getName() + \" institute: \" + getInstitute();"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        return (this.email + this.name + this.institute).hashCode();"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d null) {"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"            return false;"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        } else if (this \u003d\u003d other) {"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"            return true;"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        } else if (this.getClass() \u003d\u003d other.getClass()) {"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes otherAccountRequest \u003d (AccountRequestAttributes) other;"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            return Objects.equals(this.email, otherAccountRequest.email)"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"                    \u0026\u0026 Objects.equals(this.institute, otherAccountRequest.institute)"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"                    \u0026\u0026 Objects.equals(this.name, otherAccountRequest.name);"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        } else {"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"            return false;"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    public void sanitizeForSaving() {"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        this.institute \u003d SanitizationHelper.sanitizeTitle(institute);"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        this.name \u003d SanitizationHelper.sanitizeName(name);"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        this.email \u003d SanitizationHelper.sanitizeEmail(email);"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"     * Updates with {@link UpdateOptions}."},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"    public void update(UpdateOptions updateOptions) {"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        updateOptions.registeredAtOption.ifPresent(s -\u003e registeredAt \u003d s);"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a {@link UpdateOptions.Builder} to build {@link UpdateOptions} for an account request."},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(String email, String institute) {"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        return new UpdateOptions.Builder(email, institute);"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"     * A builder for {@link AccountRequestAttributes}."},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"    public static class Builder extends BasicBuilder\u003cAccountRequestAttributes, Builder\u003e {"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"        private final AccountRequestAttributes accountRequestAttributes;"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"        private Builder(String email, String institute, String name) {"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"            super(new UpdateOptions(email, institute));"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"            thisBuilder \u003d this;"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestAttributes \u003d new AccountRequestAttributes(email, institute, name);"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        @Override"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"        public AccountRequestAttributes build() {"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestAttributes.update(updateOptions);"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"            return accountRequestAttributes;"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"     * Helper class to specify the fields to update in {@link AccountRequestAttributes}."},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"    public static class UpdateOptions {"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"        private String email;"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        private String institute;"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"        private UpdateOption\u003cInstant\u003e registeredAtOption \u003d UpdateOption.empty();"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"        private UpdateOptions(String email, String institute) {"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"            assert email !\u003d null;"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"            assert institute !\u003d null;"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"            this.email \u003d email;"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"            this.institute \u003d institute;"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"        public String getEmail() {"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"            return email;"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"        public String getInstitute() {"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"            return institute;"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"        @Override"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"        public String toString() {"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"            return \"AccountRequestAttributes.UpdateOptions [\""},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"                    + \", email \u003d \" + email"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"                    + \", institute \u003d \" + institute"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"                    + \", registeredAt \u003d \" + registeredAtOption"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"                    + \"]\";"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"        /**"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"         * Builder class to build {@link UpdateOptions}."},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"         */"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"        public static class Builder extends BasicBuilder\u003cUpdateOptions, Builder\u003e {"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"            private Builder(String email, String institute) {"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"                super(new UpdateOptions(email, institute));"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"                thisBuilder \u003d this;"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"            @Override"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"            public UpdateOptions build() {"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"                return updateOptions;"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"     * Basic builder to build {@link AccountRequestAttributes} related classes."},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"     * @param \u003cT\u003e type to be built"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"     * @param \u003cB\u003e type of the builder"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"    private abstract static class BasicBuilder\u003cT, B extends BasicBuilder\u003cT, B\u003e\u003e {"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"        UpdateOptions updateOptions;"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"        B thisBuilder;"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"        BasicBuilder(UpdateOptions updateOptions) {"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"            this.updateOptions \u003d updateOptions;"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"        public B withRegisteredAt(Instant registeredAt) {"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"            updateOptions.registeredAtOption \u003d UpdateOption.of(registeredAt);"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"            return thisBuilder;"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"        public abstract T build();"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":259}},{"path":"src/main/java/teammates/common/datatransfer/attributes/FeedbackSessionAttributes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackSession;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The data transfer object for {@link FeedbackSession} entities."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FeedbackSessionAttributes extends EntityAttributes\u003cFeedbackSession\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private String feedbackSessionName;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private String courseId;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private String creatorEmail;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private String instructions;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Instant createdTime;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Instant deletedTime;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Instant startTime;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Instant endTime;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Instant sessionVisibleFromTime;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Instant resultsVisibleFromTime;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private String timeZone;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Duration gracePeriod;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private boolean sentOpeningSoonEmail;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private boolean sentOpenEmail;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private boolean sentClosingEmail;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private boolean sentClosedEmail;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private boolean sentPublishedEmail;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private boolean isOpeningEmailEnabled;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private boolean isClosingEmailEnabled;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private boolean isPublishedEmailEnabled;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes(String feedbackSessionName, String courseId) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.courseId \u003d courseId;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.instructions \u003d \"\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.createdTime \u003d Instant.now();"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.isOpeningEmailEnabled \u003d true;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.isClosingEmailEnabled \u003d true;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.isPublishedEmailEnabled \u003d true;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.timeZone \u003d Const.DEFAULT_TIME_ZONE;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.gracePeriod \u003d Duration.ZERO;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Gets the {@link FeedbackSessionAttributes} instance of the given {@link FeedbackSession}."},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static FeedbackSessionAttributes valueOf(FeedbackSession fs) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes feedbackSessionAttributes \u003d"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                new FeedbackSessionAttributes(fs.getFeedbackSessionName(), fs.getCourseId());"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.creatorEmail \u003d fs.getCreatorEmail();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (fs.getInstructions() !\u003d null) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes.instructions \u003d fs.getInstructions();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.createdTime \u003d fs.getCreatedTime();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.deletedTime \u003d fs.getDeletedTime();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.startTime \u003d fs.getStartTime();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.endTime \u003d fs.getEndTime();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sessionVisibleFromTime \u003d fs.getSessionVisibleFromTime();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.resultsVisibleFromTime \u003d fs.getResultsVisibleFromTime();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.timeZone \u003d fs.getTimeZone();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.gracePeriod \u003d Duration.ofMinutes(fs.getGracePeriod());"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentOpeningSoonEmail \u003d fs.isSentOpeningSoonEmail();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentOpenEmail \u003d fs.isSentOpenEmail();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentClosingEmail \u003d fs.isSentClosingEmail();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentClosedEmail \u003d fs.isSentClosedEmail();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentPublishedEmail \u003d fs.isSentPublishedEmail();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.isOpeningEmailEnabled \u003d fs.isOpeningEmailEnabled();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.isClosingEmailEnabled \u003d fs.isClosingEmailEnabled();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.isPublishedEmailEnabled \u003d fs.isPublishedEmailEnabled();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return feedbackSessionAttributes;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns a builder for {@link FeedbackSessionAttributes}."},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Builder builder(String feedbackSessionName, String courseId) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new Builder(feedbackSessionName, courseId);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Gets a deep copy of this object."},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getCopy() {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return valueOf(toEntity());"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public String getCourseId() {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return courseId;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public String getFeedbackSessionName() {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return feedbackSessionName;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Gets the instructions of the feedback session."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String getInstructionsString() {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (instructions \u003d\u003d null) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return SanitizationHelper.sanitizeForRichText(instructions);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public FeedbackSession toEntity() {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new FeedbackSession(feedbackSessionName, courseId, creatorEmail, instructions,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                createdTime, deletedTime, startTime, endTime, sessionVisibleFromTime, resultsVisibleFromTime,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                timeZone, getGracePeriodMinutes(),"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                sentOpeningSoonEmail, sentOpenEmail, sentClosingEmail, sentClosedEmail, sentPublishedEmail,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                isOpeningEmailEnabled, isClosingEmailEnabled, isPublishedEmailEnabled);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getInvalidityInfo() {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // Check for null fields."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField("},{"lineNumber":137,"author":{"gitId":"-"},"content":"                FieldValidator.FEEDBACK_SESSION_NAME_FIELD_NAME, feedbackSessionName), errors);"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField("},{"lineNumber":140,"author":{"gitId":"-"},"content":"                FieldValidator.COURSE_ID_FIELD_NAME, courseId), errors);"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"instructions to students\", instructions), errors);"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField("},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \"time for the session to become visible\", sessionVisibleFromTime), errors);"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"session time zone\", timeZone), errors);"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"creator\u0027s email\", creatorEmail), errors);"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"session creation time\", createdTime), errors);"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Early return if any null fields"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!errors.isEmpty()) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return errors;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForFeedbackSessionName(feedbackSessionName), errors);"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForCourseId(courseId), errors);"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForEmail(creatorEmail), errors);"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForGracePeriod(gracePeriod), errors);"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"submission opening time\", startTime), errors);"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"submission closing time\", endTime), errors);"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField("},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \"time for the responses to become visible\", resultsVisibleFromTime), errors);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // Early return if any null fields"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!errors.isEmpty()) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return errors;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForSessionStartAndEnd(startTime, endTime), errors);"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForVisibilityStartAndSessionStart("},{"lineNumber":181,"author":{"gitId":"-"},"content":"                sessionVisibleFromTime, startTime), errors);"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Instant actualSessionVisibleFromTime \u003d sessionVisibleFromTime;"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (actualSessionVisibleFromTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            actualSessionVisibleFromTime \u003d startTime;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForVisibilityStartAndResultsPublish("},{"lineNumber":190,"author":{"gitId":"-"},"content":"                actualSessionVisibleFromTime, resultsVisibleFromTime), errors);"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Returns true if session\u0027s start time is opening from now to anytime before"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * now() + the specific number of {@param hours} supplied in the argument."},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean isOpeningInHours(long hours) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return startTime.isAfter(Instant.now())"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \u0026\u0026 Instant.now().plus(Duration.ofHours(hours)).isAfter(startTime);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Returns true if the feedback session is closed after the number of specified hours."},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public boolean isClosedAfter(long hours) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return Instant.now().plus(Duration.ofHours(hours)).isAfter(endTime);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Returns true if the feedback session is closing (almost closed) after the number of specified hours."},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public boolean isClosingWithinTimeLimit(long hours) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Duration difference \u003d Duration.between(now, endTime);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // If now and start are almost similar, it means the feedback session"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // is open for only 24 hours."},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // Hence we do not send a reminder e-mail for feedback session."},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return now.isAfter(startTime)"},{"lineNumber":221,"author":{"gitId":"-"},"content":"               \u0026\u0026 difference.compareTo(Duration.ofHours(hours - 1)) \u003e\u003d 0"},{"lineNumber":222,"author":{"gitId":"-"},"content":"               \u0026\u0026 difference.compareTo(Duration.ofHours(hours)) \u003c 0;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Returns true if the feedback session opens after the number of specified hours."},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public boolean isOpeningWithinTimeLimit(long hours) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Duration difference \u003d Duration.between(now, startTime);"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return now.isBefore(startTime)"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                \u0026\u0026 difference.compareTo(Duration.ofHours(hours - 1)) \u003e\u003d 0"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                \u0026\u0026 difference.compareTo(Duration.ofHours(hours)) \u003c 0;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Checks if the session closed some time in the last one hour from calling this function."},{"lineNumber":239,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * @return true if the session closed within the past hour; false otherwise."},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public boolean isClosedWithinPastHour() {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        Instant given \u003d endTime.plus(gracePeriod);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return given.isBefore(now) \u0026\u0026 Duration.between(given, now).compareTo(Duration.ofHours(1)) \u003c 0;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Returns {@code true} if it is after the closing time of this feedback session; {@code false} if not."},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public boolean isClosed() {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return Instant.now().isAfter(endTime.plus(gracePeriod));"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Returns true if the session is currently open and accepting responses."},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public boolean isOpened() {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        return !now.isBefore(startTime) \u0026\u0026 now.isBefore(endTime);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * Returns true if the session is currently close but is still accept responses."},{"lineNumber":265,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public boolean isInGracePeriod() {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Instant gracedEnd \u003d endTime.plus(gracePeriod);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        return (now.isAfter(endTime) || now.equals(endTime)) \u0026\u0026 (now.isBefore(gracedEnd) || now.equals(gracedEnd));"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * Returns {@code true} has not opened before and is waiting to open,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * {@code false} if session has opened before."},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public boolean isWaitingToOpen() {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        return Instant.now().isBefore(startTime);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * Returns {@code true} if the session is visible; {@code false} if not."},{"lineNumber":282,"author":{"gitId":"-"},"content":"     *         Does not care if the session has started or not."},{"lineNumber":283,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    public boolean isVisible() {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        Instant visibleTime \u003d this.sessionVisibleFromTime;"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"        if (visibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            visibleTime \u003d this.startTime;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        return now.isAfter(visibleTime) || now.equals(visibleTime);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * Returns {@code true} if the results of the feedback session is visible; {@code false} if not."},{"lineNumber":297,"author":{"gitId":"-"},"content":"     *         Does not care if the session has ended or not."},{"lineNumber":298,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public boolean isPublished() {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Instant publishTime \u003d this.resultsVisibleFromTime;"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"        if (publishTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            return isVisible();"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        if (publishTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        if (publishTime.equals(Const.TIME_REPRESENTS_NOW)) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        return now.isAfter(publishTime) || now.equals(publishTime);"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * Returns true if the given email is the same as the creator email of the feedback session."},{"lineNumber":318,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public boolean isCreator(String instructorEmail) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        return creatorEmail.equals(instructorEmail);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    public void sanitizeForSaving() {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        this.instructions \u003d SanitizationHelper.sanitizeForRichText(instructions);"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        return \"FeedbackSessionAttributes [feedbackSessionName\u003d\""},{"lineNumber":331,"author":{"gitId":"-"},"content":"               + feedbackSessionName + \", courseId\u003d\" + courseId"},{"lineNumber":332,"author":{"gitId":"-"},"content":"               + \", creatorEmail\u003d\" + creatorEmail + \", instructions\u003d\" + instructions"},{"lineNumber":333,"author":{"gitId":"-"},"content":"               + \", createdTime\u003d\" + createdTime + \", deletedTime\u003d\" + deletedTime"},{"lineNumber":334,"author":{"gitId":"-"},"content":"               + \", startTime\u003d\" + startTime"},{"lineNumber":335,"author":{"gitId":"-"},"content":"               + \", endTime\u003d\" + endTime + \", sessionVisibleFromTime\u003d\""},{"lineNumber":336,"author":{"gitId":"-"},"content":"               + sessionVisibleFromTime + \", resultsVisibleFromTime\u003d\""},{"lineNumber":337,"author":{"gitId":"-"},"content":"               + resultsVisibleFromTime + \", timeZone\u003d\" + timeZone"},{"lineNumber":338,"author":{"gitId":"-"},"content":"               + \", gracePeriod\u003d\" + getGracePeriodMinutes() + \"min\""},{"lineNumber":339,"author":{"gitId":"-"},"content":"               + \", sentOpeningSoonEmail\u003d\" + sentOpeningSoonEmail"},{"lineNumber":340,"author":{"gitId":"-"},"content":"               + \", sentOpenEmail\u003d\" + sentOpenEmail"},{"lineNumber":341,"author":{"gitId":"-"},"content":"               + \", sentClosingEmail\u003d\" + sentClosingEmail"},{"lineNumber":342,"author":{"gitId":"-"},"content":"               + \", sentClosedEmail\u003d\" + sentClosedEmail"},{"lineNumber":343,"author":{"gitId":"-"},"content":"               + \", sentPublishedEmail\u003d\" + sentPublishedEmail"},{"lineNumber":344,"author":{"gitId":"-"},"content":"               + \", isOpeningEmailEnabled\u003d\" + isOpeningEmailEnabled"},{"lineNumber":345,"author":{"gitId":"-"},"content":"               + \", isClosingEmailEnabled\u003d\" + isClosingEmailEnabled"},{"lineNumber":346,"author":{"gitId":"-"},"content":"               + \", isPublishedEmailEnabled\u003d\" + isPublishedEmailEnabled"},{"lineNumber":347,"author":{"gitId":"-"},"content":"               + \"]\";"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        stringBuilder.append(this.feedbackSessionName).append(this.courseId)"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                .append(this.instructions).append(this.creatorEmail);"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return stringBuilder.toString().hashCode();"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d null) {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        } else if (this \u003d\u003d other) {"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        } else if (this.getClass() \u003d\u003d other.getClass()) {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes otherFeedbackSession \u003d (FeedbackSessionAttributes) other;"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            return Objects.equals(this.feedbackSessionName, otherFeedbackSession.feedbackSessionName)"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.courseId, otherFeedbackSession.courseId)"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.instructions, otherFeedbackSession.instructions)"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.creatorEmail, otherFeedbackSession.creatorEmail);"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"    public void setFeedbackSessionName(String feedbackSessionName) {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        this.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public void setCourseId(String courseId) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        this.courseId \u003d courseId;"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":382,"author":{"gitId":"-"},"content":""},{"lineNumber":383,"author":{"gitId":"-"},"content":"    public String getCreatorEmail() {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        return creatorEmail;"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"    public void setCreatorEmail(String creatorEmail) {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        this.creatorEmail \u003d creatorEmail;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"    public String getInstructions() {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        return instructions;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"    public void setInstructions(String instructions) {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        this.instructions \u003d instructions;"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"    public Instant getCreatedTime() {"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        return createdTime;"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"    public void setCreatedTime(Instant createdTime) {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        this.createdTime \u003d createdTime;"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":406,"author":{"gitId":"-"},"content":""},{"lineNumber":407,"author":{"gitId":"-"},"content":"    public Instant getDeletedTime() {"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        return deletedTime;"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"    public void setDeletedTime(Instant deletedTime) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        this.deletedTime \u003d deletedTime;"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"    public boolean isSessionDeleted() {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        return this.deletedTime !\u003d null;"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"    public Instant getStartTime() {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        return startTime;"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"    public void setStartTime(Instant startTime) {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"    public Instant getEndTime() {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        return endTime;"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"    public void setEndTime(Instant endTime) {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"    public Instant getSessionVisibleFromTime() {"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        return sessionVisibleFromTime;"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"    public void setSessionVisibleFromTime(Instant sessionVisibleFromTime) {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        this.sessionVisibleFromTime \u003d sessionVisibleFromTime;"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"    public Instant getResultsVisibleFromTime() {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        return resultsVisibleFromTime;"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public void setResultsVisibleFromTime(Instant resultsVisibleFromTime) {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        this.resultsVisibleFromTime \u003d resultsVisibleFromTime;"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"    public String getTimeZone() {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        return timeZone;"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"    public void setTimeZone(String timeZone) {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        this.timeZone \u003d timeZone;"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"    public long getGracePeriodMinutes() {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        return gracePeriod.toMinutes();"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"    public void setGracePeriodMinutes(long gracePeriodMinutes) {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        this.gracePeriod \u003d Duration.ofMinutes(gracePeriodMinutes);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":466,"author":{"gitId":"-"},"content":""},{"lineNumber":467,"author":{"gitId":"-"},"content":"    public boolean isSentOpeningSoonEmail() {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        return sentOpeningSoonEmail;"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":470,"author":{"gitId":"-"},"content":""},{"lineNumber":471,"author":{"gitId":"-"},"content":"    public void setSentOpeningSoonEmail(boolean sentOpeningSoonEmail) {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        this.sentOpeningSoonEmail \u003d sentOpeningSoonEmail;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"    public boolean isSentOpenEmail() {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        return sentOpenEmail;"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"    public void setSentOpenEmail(boolean sentOpenEmail) {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        this.sentOpenEmail \u003d sentOpenEmail;"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"    public boolean isSentClosingEmail() {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        return sentClosingEmail;"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"    public void setSentClosingEmail(boolean sentClosingEmail) {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        this.sentClosingEmail \u003d sentClosingEmail;"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"    public boolean isSentClosedEmail() {"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        return sentClosedEmail;"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"-"},"content":"    public void setSentClosedEmail(boolean sentClosedEmail) {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        this.sentClosedEmail \u003d sentClosedEmail;"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"    public boolean isSentPublishedEmail() {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        return sentPublishedEmail;"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"    public void setSentPublishedEmail(boolean sentPublishedEmail) {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        this.sentPublishedEmail \u003d sentPublishedEmail;"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"    public boolean isOpeningEmailEnabled() {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        return isOpeningEmailEnabled;"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"    public void setOpeningEmailEnabled(boolean isOpeningEmailEnabled) {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        this.isOpeningEmailEnabled \u003d isOpeningEmailEnabled;"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    public boolean isClosingEmailEnabled() {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        return isClosingEmailEnabled;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"    public void setClosingEmailEnabled(boolean isClosingEmailEnabled) {"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        this.isClosingEmailEnabled \u003d isClosingEmailEnabled;"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"    public boolean isPublishedEmailEnabled() {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        return isPublishedEmailEnabled;"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"    public void setPublishedEmailEnabled(boolean isPublishedEmailEnabled) {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        this.isPublishedEmailEnabled \u003d isPublishedEmailEnabled;"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":532,"author":{"gitId":"-"},"content":"     * Updates with {@link UpdateOptions}."},{"lineNumber":533,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    public void update(UpdateOptions updateOptions) {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        updateOptions.instructionsOption.ifPresent(s -\u003e instructions \u003d s);"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        updateOptions.startTimeOption.ifPresent(s -\u003e startTime \u003d s);"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        updateOptions.endTimeOption.ifPresent(s -\u003e endTime \u003d s);"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        updateOptions.sessionVisibleFromTimeOption.ifPresent(s -\u003e sessionVisibleFromTime \u003d s);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        updateOptions.resultsVisibleFromTimeOption.ifPresent(s -\u003e resultsVisibleFromTime \u003d s);"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        updateOptions.timeZoneOption.ifPresent(s -\u003e timeZone \u003d s);"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        updateOptions.gracePeriodOption.ifPresent(s -\u003e gracePeriod \u003d s);"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        updateOptions.sentOpeningSoonEmailOption.ifPresent(s -\u003e sentOpeningSoonEmail \u003d s);"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        updateOptions.sentOpenEmailOption.ifPresent(s -\u003e sentOpenEmail \u003d s);"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        updateOptions.sentClosingEmailOption.ifPresent(s -\u003e sentClosingEmail \u003d s);"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        updateOptions.sentClosedEmailOption.ifPresent(s -\u003e sentClosedEmail \u003d s);"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        updateOptions.sentPublishedEmailOption.ifPresent(s -\u003e sentPublishedEmail \u003d s);"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        updateOptions.isClosingEmailEnabledOption.ifPresent(s -\u003e isClosingEmailEnabled \u003d s);"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        updateOptions.isPublishedEmailEnabledOption.ifPresent(s -\u003e isPublishedEmailEnabled \u003d s);"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":552,"author":{"gitId":"-"},"content":"     * Returns a {@link UpdateOptions.Builder} to build {@link UpdateOptions} for a session."},{"lineNumber":553,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(String feedbackSessionName, String courseId) {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        return new UpdateOptions.Builder(feedbackSessionName, courseId);"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":559,"author":{"gitId":"-"},"content":"     * Returns a {@link UpdateOptions.Builder} to build on top of {@code updateOptions}."},{"lineNumber":560,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(UpdateOptions updateOptions) {"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        return new UpdateOptions.Builder(updateOptions);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":566,"author":{"gitId":"-"},"content":"     * A builder for {@link FeedbackSessionAttributes}."},{"lineNumber":567,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    public static class Builder extends BasicBuilder\u003cFeedbackSessionAttributes, Builder\u003e {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        private final FeedbackSessionAttributes feedbackSessionAttributes;"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"        private Builder(String feedbackSessionName, String courseId) {"},{"lineNumber":572,"author":{"gitId":"-"},"content":"            super(new UpdateOptions(feedbackSessionName, courseId));"},{"lineNumber":573,"author":{"gitId":"-"},"content":"            thisBuilder \u003d this;"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes \u003d new FeedbackSessionAttributes(feedbackSessionName, courseId);"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":577,"author":{"gitId":"-"},"content":""},{"lineNumber":578,"author":{"gitId":"-"},"content":"        public Builder withCreatorEmail(String creatorEmail) {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"            assert creatorEmail !\u003d null;"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes.creatorEmail \u003d creatorEmail;"},{"lineNumber":582,"author":{"gitId":"-"},"content":""},{"lineNumber":583,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":585,"author":{"gitId":"-"},"content":""},{"lineNumber":586,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        public FeedbackSessionAttributes build() {"},{"lineNumber":588,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes.update(updateOptions);"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"            return feedbackSessionAttributes;"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":593,"author":{"gitId":"-"},"content":""},{"lineNumber":594,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":595,"author":{"gitId":"-"},"content":"     * Helper class to specific the fields to update in {@link FeedbackSessionAttributes}."},{"lineNumber":596,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    public static class UpdateOptions {"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        private String courseId;"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        private String feedbackSessionName;"},{"lineNumber":600,"author":{"gitId":"-"},"content":""},{"lineNumber":601,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e instructionsOption \u003d UpdateOption.empty();"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cInstant\u003e startTimeOption \u003d UpdateOption.empty();"},{"lineNumber":603,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cInstant\u003e endTimeOption \u003d UpdateOption.empty();"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cInstant\u003e sessionVisibleFromTimeOption \u003d UpdateOption.empty();"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cInstant\u003e resultsVisibleFromTimeOption \u003d UpdateOption.empty();"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e timeZoneOption \u003d UpdateOption.empty();"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cDuration\u003e gracePeriodOption \u003d UpdateOption.empty();"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentOpeningSoonEmailOption \u003d UpdateOption.empty();"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentOpenEmailOption \u003d UpdateOption.empty();"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentClosingEmailOption \u003d UpdateOption.empty();"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentClosedEmailOption \u003d UpdateOption.empty();"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentPublishedEmailOption \u003d UpdateOption.empty();"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e isClosingEmailEnabledOption \u003d UpdateOption.empty();"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e isPublishedEmailEnabledOption \u003d UpdateOption.empty();"},{"lineNumber":615,"author":{"gitId":"-"},"content":""},{"lineNumber":616,"author":{"gitId":"-"},"content":"        private UpdateOptions(String feedbackSessionName, String courseId) {"},{"lineNumber":617,"author":{"gitId":"-"},"content":"            assert feedbackSessionName !\u003d null;"},{"lineNumber":618,"author":{"gitId":"-"},"content":"            assert courseId !\u003d null;"},{"lineNumber":619,"author":{"gitId":"-"},"content":""},{"lineNumber":620,"author":{"gitId":"-"},"content":"            this.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":621,"author":{"gitId":"-"},"content":"            this.courseId \u003d courseId;"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":623,"author":{"gitId":"-"},"content":""},{"lineNumber":624,"author":{"gitId":"-"},"content":"        public String getCourseId() {"},{"lineNumber":625,"author":{"gitId":"-"},"content":"            return courseId;"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":627,"author":{"gitId":"-"},"content":""},{"lineNumber":628,"author":{"gitId":"-"},"content":"        public String getFeedbackSessionName() {"},{"lineNumber":629,"author":{"gitId":"-"},"content":"            return feedbackSessionName;"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":631,"author":{"gitId":"-"},"content":""},{"lineNumber":632,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        public String toString() {"},{"lineNumber":634,"author":{"gitId":"fsgmhoward"},"content":"            return \"FeedbackSessionAttributes.UpdateOptions [\""},{"lineNumber":635,"author":{"gitId":"-"},"content":"                    + \"feedbackSessionName \u003d \" + feedbackSessionName"},{"lineNumber":636,"author":{"gitId":"-"},"content":"                    + \", courseId \u003d \" + courseId"},{"lineNumber":637,"author":{"gitId":"-"},"content":"                    + \", instructions \u003d \" + instructionsOption"},{"lineNumber":638,"author":{"gitId":"-"},"content":"                    + \", startTime \u003d \" + startTimeOption"},{"lineNumber":639,"author":{"gitId":"-"},"content":"                    + \", endTime \u003d \" + endTimeOption"},{"lineNumber":640,"author":{"gitId":"-"},"content":"                    + \", sessionVisibleFromTime \u003d \" + sessionVisibleFromTimeOption"},{"lineNumber":641,"author":{"gitId":"-"},"content":"                    + \", resultsVisibleFromTime \u003d \" + resultsVisibleFromTimeOption"},{"lineNumber":642,"author":{"gitId":"-"},"content":"                    + \", timeZone \u003d \" + timeZoneOption"},{"lineNumber":643,"author":{"gitId":"-"},"content":"                    + \", gracePeriod \u003d \" + gracePeriodOption"},{"lineNumber":644,"author":{"gitId":"-"},"content":"                    + \", sentOpeningSoonEmail \u003d \" + sentOpeningSoonEmailOption"},{"lineNumber":645,"author":{"gitId":"-"},"content":"                    + \", sentOpenEmail \u003d \" + sentOpenEmailOption"},{"lineNumber":646,"author":{"gitId":"-"},"content":"                    + \", sentClosingEmail \u003d \" + sentClosingEmailOption"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                    + \", sentClosedEmail \u003d \" + sentClosedEmailOption"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                    + \", sentPublishedEmail \u003d \" + sentPublishedEmailOption"},{"lineNumber":649,"author":{"gitId":"-"},"content":"                    + \", isClosingEmailEnabled \u003d \" + isClosingEmailEnabledOption"},{"lineNumber":650,"author":{"gitId":"-"},"content":"                    + \", isPublishedEmailEnabled \u003d \" + isPublishedEmailEnabledOption"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                    + \"]\";"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":653,"author":{"gitId":"-"},"content":""},{"lineNumber":654,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":655,"author":{"gitId":"-"},"content":"         * Builder class to build {@link UpdateOptions}."},{"lineNumber":656,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        public static class Builder extends BasicBuilder\u003cUpdateOptions, Builder\u003e {"},{"lineNumber":658,"author":{"gitId":"-"},"content":""},{"lineNumber":659,"author":{"gitId":"-"},"content":"            private Builder(UpdateOptions updateOptions) {"},{"lineNumber":660,"author":{"gitId":"-"},"content":"                super(updateOptions);"},{"lineNumber":661,"author":{"gitId":"-"},"content":"                assert updateOptions !\u003d null;"},{"lineNumber":662,"author":{"gitId":"-"},"content":"                thisBuilder \u003d this;"},{"lineNumber":663,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":664,"author":{"gitId":"-"},"content":""},{"lineNumber":665,"author":{"gitId":"-"},"content":"            private Builder(String feedbackSessionName, String courseId) {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"                super(new UpdateOptions(feedbackSessionName, courseId));"},{"lineNumber":667,"author":{"gitId":"-"},"content":"                thisBuilder \u003d this;"},{"lineNumber":668,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":669,"author":{"gitId":"-"},"content":""},{"lineNumber":670,"author":{"gitId":"-"},"content":"            public Builder withSentOpeningSoonEmail(boolean sentOpeningSoonEmailOption) {"},{"lineNumber":671,"author":{"gitId":"-"},"content":"                updateOptions.sentOpeningSoonEmailOption \u003d UpdateOption.of(sentOpeningSoonEmailOption);"},{"lineNumber":672,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":673,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"            public Builder withSentOpenEmail(boolean sentOpenEmail) {"},{"lineNumber":676,"author":{"gitId":"-"},"content":"                updateOptions.sentOpenEmailOption \u003d UpdateOption.of(sentOpenEmail);"},{"lineNumber":677,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":678,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"            public Builder withSentClosingEmail(boolean sentClosingEmail) {"},{"lineNumber":681,"author":{"gitId":"-"},"content":"                updateOptions.sentClosingEmailOption \u003d UpdateOption.of(sentClosingEmail);"},{"lineNumber":682,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":683,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":684,"author":{"gitId":"-"},"content":""},{"lineNumber":685,"author":{"gitId":"-"},"content":"            public Builder withSentClosedEmail(boolean sentClosedEmail) {"},{"lineNumber":686,"author":{"gitId":"-"},"content":"                updateOptions.sentClosedEmailOption \u003d UpdateOption.of(sentClosedEmail);"},{"lineNumber":687,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":688,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"            public Builder withSentPublishedEmail(boolean sentPublishedEmail) {"},{"lineNumber":691,"author":{"gitId":"-"},"content":"                updateOptions.sentPublishedEmailOption \u003d UpdateOption.of(sentPublishedEmail);"},{"lineNumber":692,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":693,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":694,"author":{"gitId":"-"},"content":""},{"lineNumber":695,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":696,"author":{"gitId":"-"},"content":"            public UpdateOptions build() {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"                return updateOptions;"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":701,"author":{"gitId":"-"},"content":""},{"lineNumber":702,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":703,"author":{"gitId":"-"},"content":""},{"lineNumber":704,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":705,"author":{"gitId":"-"},"content":"     * Basic builder to build {@link FeedbackSessionAttributes} related classes."},{"lineNumber":706,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":707,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e type to be built"},{"lineNumber":708,"author":{"gitId":"-"},"content":"     * @param \u003cB\u003e type of the builder"},{"lineNumber":709,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":710,"author":{"gitId":"-"},"content":"    private abstract static class BasicBuilder\u003cT, B extends BasicBuilder\u003cT, B\u003e\u003e {"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"        UpdateOptions updateOptions;"},{"lineNumber":713,"author":{"gitId":"-"},"content":"        B thisBuilder;"},{"lineNumber":714,"author":{"gitId":"-"},"content":""},{"lineNumber":715,"author":{"gitId":"-"},"content":"        BasicBuilder(UpdateOptions updateOptions) {"},{"lineNumber":716,"author":{"gitId":"-"},"content":"            this.updateOptions \u003d updateOptions;"},{"lineNumber":717,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"        public B withInstructions(String instruction) {"},{"lineNumber":720,"author":{"gitId":"-"},"content":"            assert instruction !\u003d null;"},{"lineNumber":721,"author":{"gitId":"-"},"content":""},{"lineNumber":722,"author":{"gitId":"-"},"content":"            updateOptions.instructionsOption \u003d UpdateOption.of(instruction);"},{"lineNumber":723,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":725,"author":{"gitId":"-"},"content":""},{"lineNumber":726,"author":{"gitId":"-"},"content":"        public B withStartTime(Instant startTime) {"},{"lineNumber":727,"author":{"gitId":"-"},"content":"            assert startTime !\u003d null;"},{"lineNumber":728,"author":{"gitId":"-"},"content":""},{"lineNumber":729,"author":{"gitId":"-"},"content":"            updateOptions.startTimeOption \u003d UpdateOption.of(startTime);"},{"lineNumber":730,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":731,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":732,"author":{"gitId":"-"},"content":""},{"lineNumber":733,"author":{"gitId":"-"},"content":"        public B withEndTime(Instant endTime) {"},{"lineNumber":734,"author":{"gitId":"-"},"content":"            assert endTime !\u003d null;"},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"-"},"content":"            updateOptions.endTimeOption \u003d UpdateOption.of(endTime);"},{"lineNumber":737,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"        public B withSessionVisibleFromTime(Instant sessionVisibleFromTime) {"},{"lineNumber":741,"author":{"gitId":"-"},"content":"            assert sessionVisibleFromTime !\u003d null;"},{"lineNumber":742,"author":{"gitId":"-"},"content":""},{"lineNumber":743,"author":{"gitId":"-"},"content":"            updateOptions.sessionVisibleFromTimeOption \u003d UpdateOption.of(sessionVisibleFromTime);"},{"lineNumber":744,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":745,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":746,"author":{"gitId":"-"},"content":""},{"lineNumber":747,"author":{"gitId":"-"},"content":"        public B withResultsVisibleFromTime(Instant resultsVisibleFromTime) {"},{"lineNumber":748,"author":{"gitId":"-"},"content":"            assert resultsVisibleFromTime !\u003d null;"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"            updateOptions.resultsVisibleFromTimeOption \u003d UpdateOption.of(resultsVisibleFromTime);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":753,"author":{"gitId":"-"},"content":""},{"lineNumber":754,"author":{"gitId":"-"},"content":"        public B withTimeZone(String timeZone) {"},{"lineNumber":755,"author":{"gitId":"-"},"content":"            assert timeZone !\u003d null;"},{"lineNumber":756,"author":{"gitId":"-"},"content":""},{"lineNumber":757,"author":{"gitId":"-"},"content":"            updateOptions.timeZoneOption \u003d UpdateOption.of(timeZone);"},{"lineNumber":758,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":759,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":760,"author":{"gitId":"-"},"content":""},{"lineNumber":761,"author":{"gitId":"-"},"content":"        public B withGracePeriod(Duration gracePeriod) {"},{"lineNumber":762,"author":{"gitId":"-"},"content":"            assert gracePeriod !\u003d null;"},{"lineNumber":763,"author":{"gitId":"-"},"content":""},{"lineNumber":764,"author":{"gitId":"-"},"content":"            updateOptions.gracePeriodOption \u003d UpdateOption.of(gracePeriod);"},{"lineNumber":765,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"        public B withIsClosingEmailEnabled(boolean isClosingEmailEnabled) {"},{"lineNumber":769,"author":{"gitId":"-"},"content":"            updateOptions.isClosingEmailEnabledOption \u003d UpdateOption.of(isClosingEmailEnabled);"},{"lineNumber":770,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":772,"author":{"gitId":"-"},"content":""},{"lineNumber":773,"author":{"gitId":"-"},"content":"        public B withIsPublishedEmailEnabled(boolean isPublishedEmailEnabled) {"},{"lineNumber":774,"author":{"gitId":"-"},"content":"            updateOptions.isPublishedEmailEnabledOption \u003d UpdateOption.of(isPublishedEmailEnabled);"},{"lineNumber":775,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":777,"author":{"gitId":"-"},"content":""},{"lineNumber":778,"author":{"gitId":"-"},"content":"        public abstract T build();"},{"lineNumber":779,"author":{"gitId":"-"},"content":""},{"lineNumber":780,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":781,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":780}},{"path":"src/main/java/teammates/common/datatransfer/attributes/StudentProfileAttributes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.storage.entity.StudentProfile;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The data transfer object for {@link StudentProfile} entities."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StudentProfileAttributes extends EntityAttributes\u003cStudentProfile\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private String googleId;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private String shortName;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private String email;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private String institute;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private String nationality;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Gender gender;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private String moreInfo;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Instant modifiedDate;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private StudentProfileAttributes(String googleId) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.googleId \u003d googleId;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.shortName \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.email \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.institute \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.nationality \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.gender \u003d Gender.OTHER;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.moreInfo \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.modifiedDate \u003d Instant.now();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Gets the {@link StudentProfileAttributes} instance of the given {@link StudentProfile}."},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static StudentProfileAttributes valueOf(StudentProfile sp) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StudentProfileAttributes studentProfileAttributes \u003d new StudentProfileAttributes(sp.getGoogleId());"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (sp.getShortName() !\u003d null) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            studentProfileAttributes.shortName \u003d sp.getShortName();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (sp.getEmail() !\u003d null) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            studentProfileAttributes.email \u003d sp.getEmail();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (sp.getInstitute() !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            studentProfileAttributes.institute \u003d sp.getInstitute();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        studentProfileAttributes.gender \u003d Gender.getGenderEnumValue(sp.getGender());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (sp.getNationality() !\u003d null) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            studentProfileAttributes.nationality \u003d sp.getNationality();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (sp.getMoreInfo() !\u003d null) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            studentProfileAttributes.moreInfo \u003d sp.getMoreInfo();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (sp.getModifiedDate() !\u003d null) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            studentProfileAttributes.modifiedDate \u003d sp.getModifiedDate();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return studentProfileAttributes;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Return a builder for {@link StudentProfileAttributes}."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Builder builder(String googleId) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Builder(googleId);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Gets a deep copy of this object."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes getCopy() {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StudentProfileAttributes studentProfileAttributes \u003d new StudentProfileAttributes(googleId);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        studentProfileAttributes.shortName \u003d shortName;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        studentProfileAttributes.email \u003d email;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        studentProfileAttributes.institute \u003d institute;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        studentProfileAttributes.gender \u003d gender;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        studentProfileAttributes.nationality \u003d nationality;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        studentProfileAttributes.moreInfo \u003d moreInfo;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        studentProfileAttributes.modifiedDate \u003d modifiedDate;"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return studentProfileAttributes;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String getGoogleId() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return googleId;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String getShortName() {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return shortName;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setShortName(String shortName) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.shortName \u003d shortName;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String getEmail() {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setEmail(String email) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.email \u003d email;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String getInstitute() {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return institute;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setInstitute(String institute) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        this.institute \u003d institute;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String getNationality() {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return nationality;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setNationality(String nationality) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        this.nationality \u003d nationality;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public Gender getGender() {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return gender;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setGender(Gender gender) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        this.gender \u003d gender;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public String getMoreInfo() {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return moreInfo;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setMoreInfo(String moreInfo) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        this.moreInfo \u003d moreInfo;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public Instant getModifiedDate() {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return modifiedDate;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setModifiedDate(Instant modifiedDate) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        this.modifiedDate \u003d modifiedDate;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getInvalidityInfo() {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForGoogleId(googleId), errors);"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // accept empty string values as it means the user has not specified anything yet."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!StringHelper.isEmpty(shortName)) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            addNonEmptyError(FieldValidator.getInvalidityInfoForPersonName(shortName), errors);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!StringHelper.isEmpty(email)) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            addNonEmptyError(FieldValidator.getInvalidityInfoForEmail(email), errors);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!StringHelper.isEmpty(institute)) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            addNonEmptyError(FieldValidator.getInvalidityInfoForInstituteName(institute), errors);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!StringHelper.isEmpty(nationality)) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            addNonEmptyError(FieldValidator.getInvalidityInfoForNationality(nationality), errors);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assert gender !\u003d null;"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // No validation for modified date as it is determined by the system."},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // No validation for More Info. It will properly sanitized."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return JsonUtils.toJson(this, StudentProfileAttributes.class);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        stringBuilder.append(this.email).append(this.shortName).append(this.institute)"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .append(this.googleId).append(this.gender.toString());"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return stringBuilder.toString().hashCode();"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d null) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } else if (this \u003d\u003d other) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } else if (this.getClass() \u003d\u003d other.getClass()) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            StudentProfileAttributes otherProfile \u003d (StudentProfileAttributes) other;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Objects.equals(this.email, otherProfile.email)"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.shortName, otherProfile.shortName)"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.institute, otherProfile.institute)"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.googleId, otherProfile.googleId)"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.gender, otherProfile.gender);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public StudentProfile toEntity() {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return new StudentProfile(googleId, shortName, email, institute, nationality, gender.name().toLowerCase(),"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                                  moreInfo);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void sanitizeForSaving() {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        this.googleId \u003d SanitizationHelper.sanitizeGoogleId(this.googleId);"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * Updates with {@link UpdateOptions}."},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void update(UpdateOptions updateOptions) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        updateOptions.shortNameOption.ifPresent(s -\u003e shortName \u003d s);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        updateOptions.emailOption.ifPresent(s -\u003e email \u003d s);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        updateOptions.instituteOption.ifPresent(s -\u003e institute \u003d s);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        updateOptions.nationalityOption.ifPresent(s -\u003e nationality \u003d s);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        updateOptions.genderOption.ifPresent(s -\u003e gender \u003d s);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        updateOptions.moreInfoOption.ifPresent(s -\u003e moreInfo \u003d s);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * Returns a {@link UpdateOptions.Builder} to build {@link UpdateOptions} for a profile."},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(String googleId) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return new UpdateOptions.Builder(googleId);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * A builder class for {@link StudentProfileAttributes}."},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public static class Builder extends BasicBuilder\u003cStudentProfileAttributes, Builder\u003e {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        private final StudentProfileAttributes profileAttributes;"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"        private Builder(String googleId) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            super(new UpdateOptions(googleId));"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            thisBuilder \u003d this;"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"            profileAttributes \u003d new StudentProfileAttributes(googleId);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public StudentProfileAttributes build() {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            profileAttributes.update(updateOptions);"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return profileAttributes;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Represents the gender of a student."},{"lineNumber":268,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public enum Gender {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // CHECKSTYLE.OFF:JavadocVariable enum names are self-documenting"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        MALE,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        FEMALE,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        OTHER;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        // CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":277,"author":{"gitId":"-"},"content":"         * Returns the Gender enum value corresponding to {@code gender}, or OTHER by default."},{"lineNumber":278,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public static Gender getGenderEnumValue(String gender) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            if (gender \u003d\u003d null) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                return Gender.OTHER;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                return Gender.valueOf(gender.toUpperCase());"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            } catch (IllegalArgumentException e) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                return Gender.OTHER;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     * Helper class to specific the fields to update in {@link StudentProfileAttributes}."},{"lineNumber":293,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    public static class UpdateOptions {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        private String googleId;"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e shortNameOption \u003d UpdateOption.empty();"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e emailOption \u003d UpdateOption.empty();"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e instituteOption \u003d UpdateOption.empty();"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e nationalityOption \u003d UpdateOption.empty();"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cGender\u003e genderOption \u003d UpdateOption.empty();"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e moreInfoOption \u003d UpdateOption.empty();"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        private UpdateOptions(String googleId) {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            assert googleId !\u003d null;"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"            this.googleId \u003d googleId;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        public String getGoogleId() {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            return googleId;"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public String toString() {"},{"lineNumber":316,"author":{"gitId":"fsgmhoward"},"content":"            return \"StudentProfileAttributes.UpdateOptions [\""},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    + \"googleId \u003d \" + googleId"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    + \", shortName \u003d \" + shortNameOption"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                    + \", email \u003d \" + emailOption"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                    + \", institute \u003d \" + instituteOption"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    + \", nationality \u003d \" + nationalityOption"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    + \", gender \u003d \" + genderOption"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                    + \", moreInfo \u003d \" + moreInfoOption"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    + \"]\";"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":328,"author":{"gitId":"-"},"content":"         * Builder class to build {@link UpdateOptions}."},{"lineNumber":329,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public static class Builder extends BasicBuilder\u003cUpdateOptions, Builder\u003e {"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"            private Builder(String googleId) {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                super(new UpdateOptions(googleId));"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                thisBuilder \u003d this;"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            public UpdateOptions build() {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                return updateOptions;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * Basic builder to build {@link StudentProfileAttributes} related classes."},{"lineNumber":347,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e type to be built"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     * @param \u003cB\u003e type of the builder"},{"lineNumber":350,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    private abstract static class BasicBuilder\u003cT, B extends BasicBuilder\u003cT, B\u003e\u003e {"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"        UpdateOptions updateOptions;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        B thisBuilder;"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"        BasicBuilder(UpdateOptions updateOptions) {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            this.updateOptions \u003d updateOptions;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"        public B withShortName(String shortName) {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            assert shortName !\u003d null;"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"            updateOptions.shortNameOption \u003d UpdateOption.of(shortName);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"        public B withEmail(String email) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            assert email !\u003d null;"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"            updateOptions.emailOption \u003d UpdateOption.of(email);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        public B withInstitute(String institute) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            assert institute !\u003d null;"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"            updateOptions.instituteOption \u003d UpdateOption.of(institute);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"        public B withNationality(String nationality) {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            assert nationality !\u003d null;"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"            updateOptions.nationalityOption \u003d UpdateOption.of(nationality);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"        public B withGender(Gender gender) {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            assert gender !\u003d null;"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"            updateOptions.genderOption \u003d UpdateOption.of(gender);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        public B withMoreInfo(String moreInfo) {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            assert moreInfo !\u003d null;"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"            updateOptions.moreInfoOption \u003d UpdateOption.of(moreInfo);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"        public abstract T build();"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":404}},{"path":"src/main/java/teammates/common/datatransfer/questions/FeedbackConstantSumQuestionDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Contains specific structure and processing logic for constant sum feedback questions."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FeedbackConstantSumQuestionDetails extends FeedbackQuestionDetails {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    static final String QUESTION_TYPE_NAME_OPTION \u003d \"Distribute points (among options) question\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    static final String QUESTION_TYPE_NAME_RECIPIENT \u003d \"Distribute points (among recipients) question\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    static final int CONST_SUM_MIN_NUM_OF_OPTIONS \u003d 2;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    static final int CONST_SUM_MIN_NUM_OF_POINTS \u003d 1;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS \u003d"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \"Too little options for \" + QUESTION_TYPE_NAME_OPTION + \". Minimum number of options is: \";"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_DUPLICATE_OPTIONS \u003d \"Duplicate options are not allowed.\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_NOT_ENOUGH_POINTS \u003d"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \"Too little points for \" + QUESTION_TYPE_NAME_RECIPIENT + \". Minimum number of points is: \";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_MISMATCH \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"Please distribute all the points for distribution questions. \""},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    + \"To skip a distribution question, leave the boxes blank.\";"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"    static final String CONST_SUM_ERROR_NEGATIVE \u003d \"Points cannot be negative.\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_UNIQUE \u003d \"Every option must be given a different number of points.\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_SOME_UNIQUE \u003d"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"At least some options must be given a different number of points.\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ANSWER_OPTIONS_NOT_MATCH \u003d \"The answers are inconsistent with the options\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ANSWER_RECIPIENT_NOT_MATCH \u003d \"The answer is inconsistent with the recipient\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e constSumOptions;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private boolean distributeToRecipients;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private boolean pointsPerOption;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private boolean forceUnevenDistribution;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private String distributePointsFor;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private int points;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public FeedbackConstantSumQuestionDetails() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(null);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public FeedbackConstantSumQuestionDetails(String questionText) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FeedbackQuestionType.CONSTSUM, questionText);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.constSumOptions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.distributeToRecipients \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.pointsPerOption \u003d false;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.points \u003d 100;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.forceUnevenDistribution \u003d false;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.distributePointsFor \u003d FeedbackConstantSumDistributePointsType.NONE.getDisplayedOption();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean shouldChangesRequireResponseDeletion("},{"lineNumber":58,"author":{"gitId":"-"},"content":"            FeedbackQuestionDetails newDetails) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FeedbackConstantSumQuestionDetails newConstSumDetails \u003d (FeedbackConstantSumQuestionDetails) newDetails;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!this.constSumOptions.containsAll(newConstSumDetails.constSumOptions)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || !newConstSumDetails.constSumOptions.containsAll(this.constSumOptions)) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (this.distributeToRecipients !\u003d newConstSumDetails.distributeToRecipients) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (this.points !\u003d newConstSumDetails.points) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (this.pointsPerOption !\u003d newConstSumDetails.pointsPerOption) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (this.forceUnevenDistribution !\u003d newConstSumDetails.forceUnevenDistribution) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return !this.distributePointsFor.equals(newConstSumDetails.distributePointsFor);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateQuestionDetails() {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!distributeToRecipients \u0026\u0026 constSumOptions.size() \u003c CONST_SUM_MIN_NUM_OF_OPTIONS) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                       + CONST_SUM_MIN_NUM_OF_OPTIONS + \".\");"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (points \u003c CONST_SUM_MIN_NUM_OF_POINTS) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_NOT_ENOUGH_POINTS"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                       + CONST_SUM_MIN_NUM_OF_POINTS + \".\");"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!FieldValidator.areElementsUnique(constSumOptions)) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_DUPLICATE_OPTIONS);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateResponsesDetails(List\u003cFeedbackResponseDetails\u003e responses, int numRecipients) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors;"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        int numOptions \u003d distributeToRecipients ? numRecipients : constSumOptions.size();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        int totalPoints \u003d pointsPerOption ? points * numOptions : points;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (distributeToRecipients) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            errors \u003d getErrorsForConstSumRecipients(responses, totalPoints);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            errors \u003d getErrorsForConstSumOptions(responses, totalPoints);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrorsForConstSumOptions(List\u003cFeedbackResponseDetails\u003e responses, int totalPoints) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (FeedbackResponseDetails response : responses) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"            FeedbackConstantSumResponseDetails details \u003d (FeedbackConstantSumResponseDetails) response;"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (details.getAnswers().size() !\u003d constSumOptions.size()) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ANSWER_OPTIONS_NOT_MATCH);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"            List\u003cInteger\u003e givenPoints \u003d details.getAnswers();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            errors \u003d getErrors(givenPoints, totalPoints);"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"            // Return an error if any response is erroneous"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (!errors.isEmpty()) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrorsForConstSumRecipients(List\u003cFeedbackResponseDetails\u003e responses, int totalPoints) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cInteger\u003e givenPoints \u003d new ArrayList\u003c\u003e();"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (FeedbackResponseDetails response : responses) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            FeedbackConstantSumResponseDetails details \u003d (FeedbackConstantSumResponseDetails) response;"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"            List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (details.getAnswers().size() !\u003d 1) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                // Distribute to recipient must have array size one"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ANSWER_RECIPIENT_NOT_MATCH);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"            // Return an error if any response is erroneous"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (!errors.isEmpty()) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"            int givenPoint \u003d details.getAnswers().get(0);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            givenPoints.add(givenPoint);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return getErrors(givenPoints, totalPoints);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrors(List\u003cInteger\u003e givenPoints, int totalPoints) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Check that all points are \u003e\u003d 0"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        int sum \u003d 0;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        for (int i : givenPoints) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            if (i \u003c 0) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ERROR_NEGATIVE);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"            sum +\u003d i;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // Check that points sum up properly"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (sum !\u003d totalPoints) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_MISMATCH);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return errors;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // Check that points are given unevenly for all/at least some options as per the question settings"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Set\u003cInteger\u003e answerSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (distributePointsFor.equals("},{"lineNumber":191,"author":{"gitId":"-"},"content":"                FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY.getDisplayedOption())) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            boolean hasDifferentPoints \u003d false;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            for (int i : givenPoints) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                if (!answerSet.isEmpty() \u0026\u0026 !answerSet.contains(i)) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    hasDifferentPoints \u003d true;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                answerSet.add(i);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (!hasDifferentPoints) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ERROR_SOME_UNIQUE);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } else if (forceUnevenDistribution || distributePointsFor.equals("},{"lineNumber":206,"author":{"gitId":"-"},"content":"                FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY.getDisplayedOption())) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            for (int i : givenPoints) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                if (answerSet.contains(i)) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    errors.add(CONST_SUM_ERROR_UNIQUE);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                    return errors;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                answerSet.add(i);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public boolean isFeedbackParticipantCommentsOnResponsesAllowed() {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public String validateGiverRecipientVisibility(FeedbackQuestionAttributes feedbackQuestionAttributes) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public int getNumOfConstSumOptions() {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return constSumOptions.size();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getConstSumOptions() {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return constSumOptions;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void setConstSumOptions(List\u003cString\u003e constSumOptions) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        this.constSumOptions \u003d constSumOptions;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public boolean isDistributeToRecipients() {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return distributeToRecipients;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void setDistributeToRecipients(boolean distributeToRecipients) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        this.distributeToRecipients \u003d distributeToRecipients;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public boolean isPointsPerOption() {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return pointsPerOption;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void setPointsPerOption(boolean pointsPerOption) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        this.pointsPerOption \u003d pointsPerOption;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public boolean isForceUnevenDistribution() {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        return forceUnevenDistribution;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void setForceUnevenDistribution(boolean forceUnevenDistribution) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        this.forceUnevenDistribution \u003d forceUnevenDistribution;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public String getDistributePointsFor() {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return distributePointsFor;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void setDistributePointsFor(String distributePointsFor) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        this.distributePointsFor \u003d distributePointsFor;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public int getPoints() {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        return points;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void setPoints(int points) {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        this.points \u003d points;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":1,"-":279}},{"path":"src/main/java/teammates/common/datatransfer/questions/FeedbackMsqQuestionDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains specific structure and processing logic for MSQ feedback questions."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FeedbackMsqQuestionDetails extends FeedbackQuestionDetails {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    static final String QUESTION_TYPE_NAME \u003d \"Multiple-choice (multiple answers) question\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    static final int MSQ_MIN_NUM_OF_CHOICES \u003d 2;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_EMPTY_MSQ_OPTION \u003d \"The MSQ options cannot be empty\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_OTHER_CONTENT_NOT_PROVIDED \u003d \"No text provided for other option\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_NONE_OF_THE_ABOVE_ANSWER \u003d"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \"No other choices are allowed with \\\"None of the above\\\" option\";"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_NOT_ENOUGH_CHOICES \u003d"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \"Too little choices for \" + QUESTION_TYPE_NAME + \". Minimum number of options is: \";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_INVALID_OPTION \u003d"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \" is not a valid option for the \" + QUESTION_TYPE_NAME + \".\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_MAX_SELECTABLE_EXCEEDED_TOTAL \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"Maximum selectable choices exceeds the total number of options for \" + QUESTION_TYPE_NAME;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_NUM_SELECTED_MORE_THAN_MAXIMUM \u003d"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Number of choices selected is more than the maximum number \";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_MIN_SELECTABLE_MORE_THAN_NUM_CHOICES \u003d"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Minimum selectable choices exceeds number of options \";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_NUM_SELECTED_LESS_THAN_MINIMUM \u003d"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"Number of choices selected is less than the minimum number \";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_MIN_SELECTABLE_EXCEEDED_MAX_SELECTABLE \u003d"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"Minimum selectable choices exceeds maximum selectable choices for \" + QUESTION_TYPE_NAME;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_MIN_FOR_MAX_SELECTABLE_CHOICES \u003d"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"Maximum selectable choices for \" + QUESTION_TYPE_NAME + \" must be at least 2.\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_MIN_FOR_MIN_SELECTABLE_CHOICES \u003d"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"Minimum selectable choices for \" + QUESTION_TYPE_NAME + \" must be at least 1.\";"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_INVALID_WEIGHT \u003d"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \"The weights for the choices of a \" + QUESTION_TYPE_NAME"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    + \" must be valid numbers with precision up to 2 decimal places.\";"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static final String MSQ_ANSWER_NONE_OF_THE_ABOVE \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    static final String MSQ_ERROR_DUPLICATE_MSQ_OPTION \u003d \"The MSQ options cannot be duplicate\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e msqChoices;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private boolean otherEnabled;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private boolean hasAssignedWeights;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private List\u003cDouble\u003e msqWeights;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private double msqOtherWeight;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FeedbackParticipantType generateOptionsFor;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private int maxSelectableChoices;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private int minSelectableChoices;"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public FeedbackMsqQuestionDetails() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(null);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public FeedbackMsqQuestionDetails(String questionText) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FeedbackQuestionType.MSQ, questionText);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.msqChoices \u003d new ArrayList\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.otherEnabled \u003d false;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.generateOptionsFor \u003d FeedbackParticipantType.NONE;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.maxSelectableChoices \u003d Const.POINTS_NO_VALUE;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.minSelectableChoices \u003d Const.POINTS_NO_VALUE;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.hasAssignedWeights \u003d false;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.msqWeights \u003d new ArrayList\u003c\u003e();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.msqOtherWeight \u003d 0;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean shouldChangesRequireResponseDeletion(FeedbackQuestionDetails newDetails) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails newMsqDetails \u003d (FeedbackMsqQuestionDetails) newDetails;"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (this.msqChoices.size() !\u003d newMsqDetails.msqChoices.size()"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                || !this.msqChoices.containsAll(newMsqDetails.msqChoices)"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || !newMsqDetails.msqChoices.containsAll(this.msqChoices)) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (this.generateOptionsFor !\u003d newMsqDetails.generateOptionsFor) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (this.maxSelectableChoices \u003d\u003d Const.POINTS_NO_VALUE"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 newMsqDetails.maxSelectableChoices !\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            // Delete responses if max selectable restriction is newly added"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (this.minSelectableChoices \u003d\u003d Const.POINTS_NO_VALUE"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 newMsqDetails.minSelectableChoices !\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // Delete responses if min selectable restriction is newly added"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (this.minSelectableChoices !\u003d Const.POINTS_NO_VALUE"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 newMsqDetails.minSelectableChoices !\u003d Const.POINTS_NO_VALUE"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.minSelectableChoices \u003c newMsqDetails.minSelectableChoices) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            // A more strict min selectable choices restriction is placed"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (this.maxSelectableChoices !\u003d Const.POINTS_NO_VALUE"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 newMsqDetails.maxSelectableChoices !\u003d Const.POINTS_NO_VALUE"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.maxSelectableChoices \u003e newMsqDetails.maxSelectableChoices) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            // A more strict max selectable choices restriction is placed"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this.otherEnabled !\u003d newMsqDetails.otherEnabled;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateQuestionDetails() {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (generateOptionsFor \u003d\u003d FeedbackParticipantType.NONE) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"            if (msqChoices.size() \u003c MSQ_MIN_NUM_OF_CHOICES) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_NOT_ENOUGH_CHOICES"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                           + MSQ_MIN_NUM_OF_CHOICES + \".\");"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"            // If there are Empty Msq options entered trigger this error"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            boolean isEmptyMsqOptionEntered \u003d msqChoices.stream().anyMatch(msqText -\u003e \"\".equals(msqText.trim()));"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            if (isEmptyMsqOptionEntered) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_EMPTY_MSQ_OPTION);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // If weights are enabled, number of choices and weights should be same."},{"lineNumber":130,"author":{"gitId":"-"},"content":"            // If a user enters an invalid weight for a valid choice,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            // the msqChoices.size() will be greater than msqWeights.size(), in that case"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            // trigger this error."},{"lineNumber":133,"author":{"gitId":"-"},"content":"            if (hasAssignedWeights \u0026\u0026 msqChoices.size() !\u003d msqWeights.size()) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_INVALID_WEIGHT);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"            // If weights are not enabled, but weight list is not empty or otherWeight is not 0"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            // In that case, trigger this error."},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (!hasAssignedWeights \u0026\u0026 (!msqWeights.isEmpty() || msqOtherWeight !\u003d 0)) {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_INVALID_WEIGHT);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"            // If weight is enabled, but other option is disabled, and msqOtherWeight is not 0"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            // In that case, trigger this error."},{"lineNumber":145,"author":{"gitId":"-"},"content":"            if (hasAssignedWeights \u0026\u0026 !otherEnabled \u0026\u0026 msqOtherWeight !\u003d 0) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_INVALID_WEIGHT);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"            // If weights are negative, trigger this error."},{"lineNumber":150,"author":{"gitId":"-"},"content":"            if (hasAssignedWeights \u0026\u0026 !msqWeights.isEmpty()) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                msqWeights.stream()"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                        .filter(weight -\u003e weight \u003c 0)"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                        .forEach(weight -\u003e errors.add(MSQ_ERROR_INVALID_WEIGHT));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"            // If \u0027Other\u0027 option is enabled, and other weight has negative value,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            // trigger this error."},{"lineNumber":158,"author":{"gitId":"-"},"content":"            if (hasAssignedWeights \u0026\u0026 otherEnabled \u0026\u0026 msqOtherWeight \u003c 0) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_INVALID_WEIGHT);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"            //If there are duplicate mcq options trigger this error"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            boolean isDuplicateOptionsEntered \u003d msqChoices.stream().map(String::trim).distinct().count()"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                                                !\u003d msqChoices.size();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            if (isDuplicateOptionsEntered) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_DUPLICATE_MSQ_OPTION);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"        boolean isMaxSelectableChoicesEnabled \u003d maxSelectableChoices !\u003d Const.POINTS_NO_VALUE;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        boolean isMinSelectableChoicesEnabled \u003d minSelectableChoices !\u003d Const.POINTS_NO_VALUE;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        boolean isMsqChoiceValidatable \u003d generateOptionsFor \u003d\u003d FeedbackParticipantType.NONE;"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        int numOfMsqChoices \u003d msqChoices.size() + (otherEnabled ? 1 : 0);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (isMsqChoiceValidatable \u0026\u0026 isMaxSelectableChoicesEnabled) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            if (numOfMsqChoices \u003c maxSelectableChoices) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_MAX_SELECTABLE_EXCEEDED_TOTAL);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            } else if (maxSelectableChoices \u003c 2) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_MIN_FOR_MAX_SELECTABLE_CHOICES);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (isMsqChoiceValidatable \u0026\u0026 isMinSelectableChoicesEnabled) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            if (minSelectableChoices \u003c 1) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_MIN_FOR_MIN_SELECTABLE_CHOICES);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (minSelectableChoices \u003e numOfMsqChoices) {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_MIN_SELECTABLE_MORE_THAN_NUM_CHOICES);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (isMaxSelectableChoicesEnabled \u0026\u0026 isMinSelectableChoicesEnabled"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                \u0026\u0026 minSelectableChoices \u003e maxSelectableChoices) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            errors.add(MSQ_ERROR_MIN_SELECTABLE_EXCEEDED_MAX_SELECTABLE);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateResponsesDetails(List\u003cFeedbackResponseDetails\u003e responses, int numRecipients) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"        for (FeedbackResponseDetails response : responses) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            FeedbackMsqResponseDetails details \u003d (FeedbackMsqResponseDetails) response;"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // number of Msq options selected including other option"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            int totalChoicesSelected \u003d details.getAnswers().size();"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            boolean isMaxSelectableEnabled \u003d maxSelectableChoices !\u003d Const.POINTS_NO_VALUE;"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            boolean isMinSelectableEnabled \u003d minSelectableChoices !\u003d Const.POINTS_NO_VALUE;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            boolean isNoneOfTheAboveOptionEnabled \u003d"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                    details.getAnswers().contains(MSQ_ANSWER_NONE_OF_THE_ABOVE);"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"            // if other is not enabled and other is selected as an answer trigger this error"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (details.isOther() \u0026\u0026 !otherEnabled) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_INVALID_OPTION);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // if other is not chosen while other field is not empty trigger this error"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (otherEnabled \u0026\u0026 !details.isOther() \u0026\u0026 !details.getOtherFieldContent().isEmpty()) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_INVALID_OPTION);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"            List\u003cString\u003e validChoices \u003d new ArrayList\u003c\u003e(msqChoices);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (otherEnabled \u0026\u0026 details.isOther()) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                // other field content becomes a valid choice if other is enabled"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                validChoices.add(details.getOtherFieldContent());"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            // if selected answers are not a part of the Msq option list trigger this error"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            boolean isAnswersPartOfChoices \u003d validChoices.containsAll(details.getAnswers());"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (!isAnswersPartOfChoices \u0026\u0026 !isNoneOfTheAboveOptionEnabled) {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                errors.add(details.getAnswerString() + \" \" + MSQ_ERROR_INVALID_OPTION);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // if other option is selected but no text is provided trigger this error"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            if (details.isOther() \u0026\u0026 \"\".equals(details.getOtherFieldContent().trim())) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_OTHER_CONTENT_NOT_PROVIDED);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // if other option is selected but not in the answer list trigger this error"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            if (details.isOther() \u0026\u0026 !details.getAnswers().contains(details.getOtherFieldContent())) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_OTHER_CONTENT_NOT_PROVIDED);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"            // if total choices selected exceed maximum choices allowed trigger this error"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            if (isMaxSelectableEnabled \u0026\u0026 totalChoicesSelected \u003e maxSelectableChoices) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                errors.add(MSQ_ERROR_NUM_SELECTED_MORE_THAN_MAXIMUM + maxSelectableChoices);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"            if (isMinSelectableEnabled) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                // if total choices selected is less than the minimum required choices"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                if (totalChoicesSelected \u003c minSelectableChoices) {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    errors.add(MSQ_ERROR_NUM_SELECTED_LESS_THAN_MINIMUM + minSelectableChoices);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                // if minimumSelectableChoices is enabled and None of the Above is selected as an answer trigger this error"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                if (isNoneOfTheAboveOptionEnabled) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    errors.add(MSQ_ERROR_INVALID_OPTION);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                // if none of the above is selected AND other options are selected trigger this error"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                if ((details.getAnswers().size() \u003e 1 || details.isOther()) \u0026\u0026 isNoneOfTheAboveOptionEnabled) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    errors.add(MSQ_ERROR_NONE_OF_THE_ABOVE_ANSWER);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public boolean isFeedbackParticipantCommentsOnResponsesAllowed() {"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"        return true;"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public String validateGiverRecipientVisibility(FeedbackQuestionAttributes feedbackQuestionAttributes) {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getMsqChoices() {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return msqChoices;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public void setMsqChoices(List\u003cString\u003e msqChoices) {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        this.msqChoices \u003d msqChoices;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public boolean isOtherEnabled() {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        return otherEnabled;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public void setOtherEnabled(boolean otherEnabled) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        this.otherEnabled \u003d otherEnabled;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public boolean isHasAssignedWeights() {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return hasAssignedWeights;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void setHasAssignedWeights(boolean hasAssignedWeights) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        this.hasAssignedWeights \u003d hasAssignedWeights;"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public List\u003cDouble\u003e getMsqWeights() {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return msqWeights;"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"    public void setMsqWeights(List\u003cDouble\u003e msqWeights) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        this.msqWeights \u003d msqWeights;"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"    public double getMsqOtherWeight() {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        return msqOtherWeight;"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    public void setMsqOtherWeight(double msqOtherWeight) {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        this.msqOtherWeight \u003d msqOtherWeight;"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public FeedbackParticipantType getGenerateOptionsFor() {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        return generateOptionsFor;"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    public void setGenerateOptionsFor(FeedbackParticipantType generateOptionsFor) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        this.generateOptionsFor \u003d generateOptionsFor;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public int getMaxSelectableChoices() {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return maxSelectableChoices;"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public void setMaxSelectableChoices(int maxSelectableChoices) {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        this.maxSelectableChoices \u003d maxSelectableChoices;"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public int getMinSelectableChoices() {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        return minSelectableChoices;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public void setMinSelectableChoices(int minSelectableChoices) {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        this.minSelectableChoices \u003d minSelectableChoices;"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":342,"samuelfangjw":1}},{"path":"src/main/java/teammates/common/util/AppUrl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A specific implementation of {@link Url} used to encapsulate URLs of the application."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class AppUrl extends Url {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public AppUrl(String url) {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(url);"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assert url.startsWith(\"http\"); // must either be http or https"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public AppUrl withUserId(String userId) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.USER_ID, userId);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public AppUrl withRegistrationKey(String key) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.REGKEY, key);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public AppUrl withIsCreatingAccount(String isCreatingAccount) {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return withParam(Const.ParamsNames.IS_CREATING_ACCOUNT, isCreatingAccount);"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public AppUrl withCourseId(String courseId) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public AppUrl withSessionName(String feedbackSessionName) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AppUrl withStudentEmail(String email) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.STUDENT_EMAIL, email);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AppUrl withEntityType(String entityType) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.ENTITY_TYPE, entityType);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":37,"samuelfangjw":4}},{"path":"src/main/java/teammates/common/util/Const.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.charset.Charset;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Stores constants that are widely used across classes."},{"lineNumber":10,"author":{"gitId":"-"},"content":" * this class contains several nested classes, each containing a specific"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * category of constants."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public final class Const {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // This section holds constants that are defined as constants primarily because they are repeated in many places."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String USER_NOBODY_TEXT \u003d \"-\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String USER_TEAM_FOR_INSTRUCTOR \u003d \"Instructors\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_DISPLAY_NAME_FOR_INSTRUCTOR \u003d \"Instructor\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT \u003d \"Anonymous\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final int SECTION_SIZE_LIMIT \u003d 100;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_SECTION \u003d \"None\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String UNKNOWN_INSTITUTION \u003d \"Unknown Institution\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_TIME_ZONE \u003d \"UTC\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Charset ENCODING \u003d StandardCharsets.UTF_8;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Duration FEEDBACK_SESSIONS_SEARCH_WINDOW \u003d Duration.ofDays(30);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Duration LOGS_RETENTION_PERIOD \u003d Duration.ofDays(30);"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"    public static final Duration COOKIE_VALIDITY_PERIOD \u003d Duration.ofDays(7);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final int SEARCH_QUERY_SIZE_LIMIT \u003d 50;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // These constants are used as variable values to mean that the variable is in a \u0027special\u0027 state."},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final int INT_UNINITIALIZED \u003d -9999;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final int MAX_POSSIBLE_RECIPIENTS \u003d -100;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final int POINTS_EQUAL_SHARE \u003d 100;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SURE \u003d -101;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SUBMITTED \u003d -999;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final int POINTS_NO_VALUE \u003d Integer.MIN_VALUE;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String GENERAL_QUESTION \u003d \"%GENERAL%\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_OPENING;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_VISIBLE;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_LATER;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_NOW;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_DEFAULT_TIMESTAMP;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_OPENING \u003d TimeHelper.parseInstant(\"1970-12-31T00:00:00Z\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_VISIBLE \u003d TimeHelper.parseInstant(\"1970-06-22T00:00:00Z\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_LATER \u003d TimeHelper.parseInstant(\"1970-01-01T00:00:00Z\");"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_NOW \u003d TimeHelper.parseInstant(\"1970-02-14T00:00:00Z\");"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_DEFAULT_TIMESTAMP \u003d TimeHelper.parseInstant(\"2011-01-01T00:00:00Z\");"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TEST_EMAIL_DOMAIN \u003d \"@gmail.tmt\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Other Constants"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Const() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Utility class containing constants"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Represents role names for instructors based on their permission settings."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static class InstructorPermissionRoleNames {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_COOWNER \u003d \"Co-owner\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_MANAGER \u003d \"Manager\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_OBSERVER \u003d \"Observer\";"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_TUTOR \u003d \"Tutor\";"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_CUSTOM \u003d \"Custom\";"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Represents atomic permission for instructors."},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static class InstructorPermissions {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_COURSE \u003d \"canmodifycourse\";"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_INSTRUCTOR \u003d \"canmodifyinstructor\";"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION \u003d \"canmodifysession\";"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_STUDENT \u003d \"canmodifystudent\";"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_STUDENT_IN_SECTIONS \u003d \"canviewstudentinsection\";"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_SESSION_IN_SECTIONS \u003d \"canviewsessioninsection\";"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public static final String CAN_SUBMIT_SESSION_IN_SECTIONS \u003d \"cansubmitsessioninsection\";"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION_COMMENT_IN_SECTIONS \u003d \"canmodifysessioncommentinsection\";"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Represents keys for HTTP requests to the API layer."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static class ParamsNames {"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public static final String IS_IN_RECYCLE_BIN \u003d \"isinrecyclebin\";"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public static final String IS_STUDENT_REJOINING \u003d \"isstudentrejoining\";"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public static final String IS_INSTRUCTOR_REJOINING \u003d \"isinstructorrejoining\";"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public static final String COURSE_ID \u003d \"courseid\";"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public static final String COURSE_STATUS \u003d \"coursestatus\";"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_ID \u003d \"instructorid\";"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_EMAIL \u003d \"instructoremail\";"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        public static final String INSTRUCTOR_INSTITUTION \u003d \"instructorinstitution\";"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        public static final String IS_CREATING_ACCOUNT \u003d \"iscreatingaccount\";"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_NAME \u003d \"fsname\";"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_STARTTIME \u003d \"starttime\";"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_ENDTIME \u003d \"endtime\";"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_MODERATED_PERSON \u003d \"moderatedperson\";"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_TYPE \u003d \"fsltype\";"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_STARTTIME \u003d \"fslstarttime\";"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_ENDTIME \u003d \"fslendtime\";"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_QUESTION_ID \u003d \"questionid\";"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_ID \u003d \"responseid\";"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_COMMENT_ID \u003d \"responsecommentid\";"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESULTS_GROUPBYSECTION \u003d \"frgroupbysection\";"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public static final String PREVIEWAS \u003d \"previewas\";"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public static final String STUDENT_ID \u003d \"googleid\";"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public static final String INVITER_ID \u003d \"invitergoogleid\";"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public static final String REGKEY \u003d \"key\";"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public static final String STUDENT_EMAIL \u003d \"studentemail\";"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public static final String SECTION_NAME \u003d \"sectionname\";"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public static final String TEAM_NAME \u003d \"teamname\";"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public static final String ERROR \u003d \"error\";"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public static final String USER_ID \u003d \"user\";"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public static final String SEARCH_KEY \u003d \"searchkey\";"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public static final String USER_CAPTCHA_RESPONSE \u003d \"captcharesponse\";"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public static final String EMAIL_TYPE \u003d \"emailtype\";"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        public static final String USER_EMAIL \u003d \"useremail\";"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public static final String ENTITY_TYPE \u003d \"entitytype\";"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public static final String INTENT \u003d \"intent\";"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"        public static final String TIMEZONE \u003d \"timezone\";"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_STARTTIME \u003d \"starttime\";"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ENDTIME \u003d \"endtime\";"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SEVERITY \u003d \"severity\";"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_MIN_SEVERITY \u003d \"minseverity\";"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_TRACE \u003d \"traceid\";"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ACTION_CLASS \u003d \"actionclass\";"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EMAIL \u003d \"email\";"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EVENT \u003d \"logevent\";"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SOURCE_LOCATION_FILE \u003d \"sourcelocationfile\";"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SOURCE_LOCATION_FUNCTION \u003d \"sourcelocationfunction\";"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EXCEPTION_CLASS \u003d \"exceptionclass\";"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_LATENCY \u003d \"latency\";"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_STATUS \u003d \"status\";"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_VERSION \u003d \"version\";"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EXTRA_FILTERS \u003d \"extrafilters\";"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ORDER \u003d \"order\";"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public static final String LIMIT \u003d \"limit\";"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Represents custom header names used by the system."},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static class HeaderNames {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public static final String BACKDOOR_KEY \u003d \"Backdoor-Key\";"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public static final String CSRF_KEY \u003d \"CSRF-Key\";"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public static final String WEB_VERSION \u003d \"X-WEB-VERSION\";"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public static final String CSRF_TOKEN \u003d \"X-CSRF-TOKEN\";"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * The course status respect to the instructor\u0027s point of view."},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * This parameter is used to get a course list for instructor."},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public static class CourseStatus {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public static final String ACTIVE \u003d \"active\";"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public static final String ARCHIVED \u003d \"archived\";"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public static final String SOFT_DELETED \u003d \"softDeleted\";"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Represents user types."},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public static class EntityType {"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d \"student\";"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d \"instructor\";"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public static final String ADMIN \u003d \"admin\";"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public static final String MAINTAINER \u003d \"maintainer\";"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Represents security-related configuration."},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public static class SecurityConfig {"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public static final String CSRF_COOKIE_NAME \u003d \"CSRF-TOKEN\";"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public static final String AUTH_COOKIE_NAME \u003d \"AUTH-TOKEN\";"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Represents URIs of accessible pages in the front-end in past versions (V6 and before)."},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Deprecated"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public static class LegacyURIs {"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN \u003d \"/page/instructorCourseJoin\";"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN \u003d \"/page/studentCourseJoin\";"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_NEW \u003d \"/page/studentCourseJoinAuthentication\";"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d \"/page/instructorHomePage\";"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d \"/page/studentHomePage\";"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/studentFeedbackSubmissionEditPage\";"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_RESULTS_PAGE \u003d \"/page/studentFeedbackResultsPage\";"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/instructorFeedbackSubmissionEditPage\";"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Represents URIs of accessible pages in the front-end."},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public static class WebPageURIs {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public static final String LOGIN \u003d \"/login\";"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public static final String LOGOUT \u003d \"/logout\";"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/web\";"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"        private static final String STUDENT_PAGE \u003d URI_PREFIX + \"/\" + EntityType.STUDENT;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        private static final String INSTRUCTOR_PAGE \u003d URI_PREFIX + \"/\" + EntityType.INSTRUCTOR;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        private static final String ADMIN_PAGE \u003d URI_PREFIX + \"/\" + EntityType.ADMIN;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        private static final String MAINTAINER_PAGE \u003d URI_PREFIX + \"/\" + EntityType.MAINTAINER;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        private static final String FRONT_PAGE \u003d URI_PREFIX + \"/front\";"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public static final String JOIN_PAGE \u003d URI_PREFIX + \"/join\";"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public static final String ADMIN_HOME_PAGE \u003d ADMIN_PAGE + \"/home\";"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public static final String ADMIN_ACCOUNTS_PAGE \u003d ADMIN_PAGE + \"/accounts\";"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SEARCH_PAGE \u003d ADMIN_PAGE + \"/search\";"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SESSIONS_PAGE \u003d ADMIN_PAGE + \"/sessions\";"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public static final String ADMIN_TIMEZONE_PAGE \u003d ADMIN_PAGE + \"/timezone\";"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public static final String ADMIN_LOGS_PAGE \u003d ADMIN_PAGE + \"/logs\";"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public static final String MAINTAINER_HOME_PAGE \u003d MAINTAINER_PAGE + \"/home\";"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d INSTRUCTOR_PAGE + \"/home\";"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SEARCH_PAGE \u003d INSTRUCTOR_PAGE + \"/search\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSIONS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions\";"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_SUBMISSION_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/submission\";"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/edit\";"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_RESULTS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/result\";"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_REPORT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/report\";"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSES_PAGE \u003d INSTRUCTOR_PAGE + \"/courses\";"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/details\";"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/edit\";"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_ENROLL_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/enroll\";"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/details\";"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/edit\";"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_LIST_PAGE \u003d INSTRUCTOR_PAGE + \"/students\";"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_RECORDS_PAGE \u003d INSTRUCTOR_PAGE + \"/students/records\";"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_AUDIT_LOGS_PAGE \u003d INSTRUCTOR_PAGE + \"/logs\";"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d STUDENT_PAGE + \"/home\";"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_DETAILS_PAGE \u003d STUDENT_PAGE + \"/course\";"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PAGE \u003d STUDENT_PAGE + \"/profile\";"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_SUBMISSION_PAGE \u003d STUDENT_PAGE + \"/sessions/submission\";"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_RESULTS_PAGE \u003d STUDENT_PAGE + \"/sessions/result\";"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"        public static final String SESSION_RESULTS_PAGE \u003d URI_PREFIX + \"/sessions/result\";"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMISSION_PAGE \u003d URI_PREFIX + \"/sessions/submission\";"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_LINK_RECOVERY_PAGE \u003d FRONT_PAGE + \"/help/session-links-recovery\";"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * Represents URIs of resource endpoints."},{"lineNumber":295,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public static class ResourceURIs {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/webapi\";"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE \u003d URI_PREFIX + \"/databundle\";"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE_DOCUMENTS \u003d URI_PREFIX + \"/databundle/documents\";"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public static final String EXCEPTION \u003d URI_PREFIX + \"/exception\";"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public static final String ERROR_REPORT \u003d URI_PREFIX + \"/errorreport\";"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public static final String AUTH \u003d URI_PREFIX + \"/auth\";"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        public static final String AUTH_REGKEY \u003d URI_PREFIX + \"/auth/regkey\";"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT \u003d URI_PREFIX + \"/account\";"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_RESET \u003d URI_PREFIX + \"/account/reset\";"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_DOWNGRADE \u003d URI_PREFIX + \"/account/downgrade\";"},{"lineNumber":308,"author":{"gitId":"samuelfangjw"},"content":"        public static final String ACCOUNT_REQUEST \u003d URI_PREFIX + \"/account/request\";"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"        public static final String ACCOUNT_REQUEST_RESET \u003d ACCOUNT_REQUEST + \"/reset\";"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":"        public static final String ACCOUNTS \u003d URI_PREFIX + \"/accounts\";"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        public static final String RESPONSE_COMMENT \u003d URI_PREFIX + \"/responsecomment\";"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public static final String COURSE \u003d URI_PREFIX + \"/course\";"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        public static final String COURSE_ARCHIVE \u003d URI_PREFIX + \"/course/archive\";"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        public static final String BIN_COURSE \u003d URI_PREFIX + \"/bin/course\";"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public static final String COURSE_SECTIONS \u003d URI_PREFIX + \"/course/sections\";"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        public static final String COURSES \u003d URI_PREFIX + \"/courses\";"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTORS \u003d URI_PREFIX + \"/instructors\";"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d URI_PREFIX + \"/instructor\";"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PRIVILEGE \u003d URI_PREFIX + \"/instructor/privilege\";"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_KEY \u003d URI_PREFIX + \"/instructor/key\";"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        public static final String RESULT \u003d URI_PREFIX + \"/result\";"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        public static final String STUDENTS \u003d URI_PREFIX + \"/students\";"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d URI_PREFIX + \"/student\";"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        public static final String STUDENT_KEY \u003d URI_PREFIX + \"/student/key\";"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_ONGOING \u003d URI_PREFIX + \"/sessions/ongoing\";"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        public static final String SESSION \u003d URI_PREFIX + \"/session\";"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public static final String SESSION_PUBLISH \u003d URI_PREFIX + \"/session/publish\";"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_SUBMISSION \u003d URI_PREFIX + \"/session/remind/submission\";"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_RESULT \u003d URI_PREFIX + \"/session/remind/result\";"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public static final String SESSION_STATS \u003d URI_PREFIX + \"/session/stats\";"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMITTED_GIVER_SET \u003d URI_PREFIX + \"/session/submitted/giverset\";"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        public static final String SESSIONS \u003d URI_PREFIX + \"/sessions\";"},{"lineNumber":333,"author":{"gitId":"samuelfangjw"},"content":"        public static final String SEARCH_ACCOUNT_REQUESTS \u003d URI_PREFIX + \"/search/accountrequests\";"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        public static final String SEARCH_INSTRUCTORS \u003d URI_PREFIX + \"/search/instructors\";"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        public static final String SEARCH_STUDENTS \u003d URI_PREFIX + \"/search/students\";"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        public static final String BIN_SESSION \u003d URI_PREFIX + \"/bin/session\";"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        public static final String QUESTIONS \u003d URI_PREFIX + \"/questions\";"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        public static final String QUESTION \u003d URI_PREFIX + \"/question\";"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public static final String QUESTION_RECIPIENTS \u003d URI_PREFIX + \"/question/recipients\";"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        public static final String RESPONSES \u003d URI_PREFIX + \"/responses\";"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        public static final String USAGE_STATISTICS \u003d URI_PREFIX + \"/usagestats\";"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        public static final String HAS_RESPONSES \u003d URI_PREFIX + \"/hasResponses\";"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        public static final String JOIN \u003d URI_PREFIX + \"/join\";"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public static final String JOIN_REMIND \u003d URI_PREFIX + \"/join/remind\";"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        public static final String TIMEZONE \u003d URI_PREFIX + \"/timezone\";"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        public static final String SESSION_LINKS_RECOVERY \u003d URI_PREFIX + \"/sessionlinksrecovery\";"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        public static final String NATIONALITIES \u003d URI_PREFIX + \"/nationalities\";"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        public static final String EMAIL \u003d URI_PREFIX + \"/email\";"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        public static final String SESSION_LOGS \u003d URI_PREFIX + \"/logs/session\";"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        public static final String LOGS \u003d URI_PREFIX + \"/logs/query\";"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        public static final String ACTION_CLASS \u003d URI_PREFIX + \"/actionclass\";"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        public static final String USER_COOKIE \u003d URI_PREFIX + \"/cookie\";"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PICTURE \u003d URI_PREFIX + \"/student/profilePic\";"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE \u003d URI_PREFIX + \"/student/profile\";"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Represents URIs of endpoints used by cron jobs."},{"lineNumber":360,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    public static class CronJobURIs {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/auto\";"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_LOG_COMPILATION \u003d URI_PREFIX + \"/compileLogs\";"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_DATASTORE_BACKUP \u003d URI_PREFIX + \"/datastoreBackup\";"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_OPENING_SOON_REMINDERS \u003d"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionOpeningSoonReminders\";"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_OPENING_REMINDERS \u003d"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionOpeningReminders\";"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSED_REMINDERS \u003d"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosedReminders\";"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSING_REMINDERS \u003d"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosingReminders\";"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS \u003d"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedReminders\";"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_USAGE_STATISTICS_COLLECTION \u003d"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/calculateUsageStatistics\";"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":381,"author":{"gitId":"-"},"content":"     * Configurations for task queue."},{"lineNumber":382,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    public static class TaskQueue {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        public static final String URI_PREFIX \u003d \"/worker\";"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                \"feedback-session-published-email-queue\";"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedEmail\";"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                \"feedback-session-resend-published-email-queue\";"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionResendPublishedEmail\";"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME \u003d \"feedback-session-remind-email-queue\";"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/feedbackSessionRemindEmail\";"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                \"feedback-session-remind-particular-users-email-queue\";"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL \u003d"},{"lineNumber":402,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionRemindParticularUsersEmail\";"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                \"feedback-session-unpublished-email-queue\";"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionUnpublishedEmail\";"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"instructor-course-join-email-queue\";"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/instructorCourseJoinEmail\";"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_QUEUE_NAME \u003d \"send-email-queue\";"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/sendEmail\";"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"student-course-join-email-queue\";"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/studentCourseJoinEmail\";"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"        public static final String SEARCH_INDEXING_QUEUE_NAME \u003d \"search-indexing-queue\";"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SEARCH_INDEXING_WORKER_URL \u003d URI_PREFIX + \"/instructorSearchIndexing\";"},{"lineNumber":420,"author":{"gitId":"samuelfangjw"},"content":"        public static final String ACCOUNT_REQUEST_SEARCH_INDEXING_WORKER_URL \u003d"},{"lineNumber":421,"author":{"gitId":"samuelfangjw"},"content":"                URI_PREFIX + \"/accountRequestSearchIndexing\";"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SEARCH_INDEXING_WORKER_URL \u003d URI_PREFIX + \"/studentSearchIndexing\";"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":413,"Nicolascwy":1,"samuelfangjw":11}},{"path":"src/main/java/teammates/logic/api/EmailSender.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.EmailSentLogDetails;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.exception.EmailSendingException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.EmailSenderService;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.EmptyEmailService;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.MailgunService;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.MailjetService;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.SendgridService;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Handles operations related to sending emails."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EmailSender {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final EmailSender instance \u003d new EmailSender();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final EmailSenderService service;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    EmailSender() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            service \u003d new EmptyEmailService();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            if (Config.isUsingSendgrid()) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                service \u003d new SendgridService();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            } else if (Config.isUsingMailgun()) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                service \u003d new MailgunService();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            } else if (Config.isUsingMailjet()) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                service \u003d new MailjetService();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                service \u003d new EmptyEmailService();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static EmailSender inst() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sends the given {@code message} and generates a log report."},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return The HTTP status of the email request."},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper message) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (isTestingAccount(message.getRecipient())) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(HttpStatus.SC_OK, \"Not sending email to test account\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EmailSendingStatus status;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EmailSendingException caughtE \u003d null;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            status \u003d service.sendEmail(message);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (EmailSendingException e) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            caughtE \u003d e;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            status \u003d new EmailSendingStatus(e.getStatusCode(), e.getMessage());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!status.isSuccess()) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (caughtE \u003d\u003d null) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                log.severe(\"Email failed to send: \" + status.getMessage());"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                log.severe(\"Email failed to send: \" + status.getMessage(), caughtE);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EmailSentLogDetails details \u003d new EmailSentLogDetails();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        details.setEmailRecipient(message.getRecipient());"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        details.setEmailSubject(message.getSubject());"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        details.setEmailContent(message.getContent());"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        details.setEmailType(message.getType());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        details.setEmailStatus(status.getStatusCode());"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (status.getMessage() !\u003d null) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            details.setEmailStatusMessage(status.getMessage());"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        log.event(\"Email sent: \" + message.getType(), details);"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return status;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private boolean isTestingAccount(String email) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return email.endsWith(Const.TEST_EMAIL_DOMAIN);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sends the given {@code report}."},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void sendReport(EmailWrapper report) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            sendEmail(report);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            log.severe(\"Error in sending report: \" + (report \u003d\u003d null ? \"\" : report.getInfoForLogging())"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                       + \"\\nReport content: \" + (report \u003d\u003d null ? \"\" : report.getContent()), e);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":5,"-":100}},{"path":"src/main/java/teammates/logic/api/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.FileStorageService;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.GoogleCloudStorageService;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.LocalFileStorageService;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Handles operations related to binary files."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FileStorage {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final FileStorage instance \u003d new FileStorage();"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final FileStorageService service;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    FileStorage() {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            service \u003d new LocalFileStorageService();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            service \u003d new GoogleCloudStorageService();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static FileStorage inst() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a file with the specified {@code fileKey} exists in the storage."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean doesFileExist(String fileKey) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return service.doesFileExist(fileKey);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Gets the content of the file with the specified {@code fileKey} as bytes."},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public byte[] getContent(String fileKey) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return service.getContent(fileKey);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Deletes the file with the specified {@code fileKey}."},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void delete(String fileKey) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        service.delete(fileKey);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a file with the specified {@code contentBytes} as content and with type {@code contentType}."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void create(String fileKey, byte[] contentBytes, String contentType) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        service.create(fileKey, contentBytes, contentType);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":53}},{"path":"src/main/java/teammates/logic/api/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.annotation.Nullable;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.SessionResultsBundle;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.UsageStatisticsAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.exception.EnrollException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.exception.InstructorUpdateException;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"import teammates.logic.core.AccountRequestsLogic;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.logic.core.AccountsLogic;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.logic.core.CoursesLogic;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.logic.core.DataBundleLogic;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackQuestionsLogic;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackResponseCommentsLogic;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackResponsesLogic;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackSessionsLogic;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.logic.core.InstructorsLogic;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import teammates.logic.core.ProfilesLogic;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import teammates.logic.core.StudentsLogic;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import teammates.logic.core.UsageStatisticsLogic;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Provides the business logic for production usage of the system."},{"lineNumber":44,"author":{"gitId":"-"},"content":" *"},{"lineNumber":45,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis is a Facade class which simply forwards the method to internal classes."},{"lineNumber":46,"author":{"gitId":"-"},"content":" */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class Logic {"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final Logic instance \u003d new Logic();"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    final AccountRequestsLogic accountRequestsLogic \u003d AccountRequestsLogic.inst();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    final FeedbackSessionsLogic feedbackSessionsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    final FeedbackQuestionsLogic feedbackQuestionsLogic \u003d FeedbackQuestionsLogic.inst();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    final FeedbackResponsesLogic feedbackResponsesLogic \u003d FeedbackResponsesLogic.inst();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    final FeedbackResponseCommentsLogic feedbackResponseCommentsLogic \u003d FeedbackResponseCommentsLogic.inst();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    final UsageStatisticsLogic usageStatisticsLogic \u003d UsageStatisticsLogic.inst();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    final DataBundleLogic dataBundleLogic \u003d DataBundleLogic.inst();"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Logic() {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Logic inst() {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public AccountAttributes getAccount(String googleId) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return accountsLogic.getAccount(googleId);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a list of accounts with email matching {@code email}."},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cAccountAttributes\u003e getAccountsForEmail(String email) {"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        return accountsLogic.getAccountsForEmail(email);"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String getCourseInstitute(String courseId) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return coursesLogic.getCourseInstitute(courseId);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Updates/Creates the profile using {@link StudentProfileAttributes.UpdateOptions}."},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @return updated student profile"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes updateOrCreateStudentProfile(StudentProfileAttributes.UpdateOptions updateOptions)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return profilesLogic.updateOrCreateStudentProfile(updateOptions);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes both instructor and student privileges, as well as the account and associated student profile."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * \u003cul\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * \u003cli\u003eFails silently if no such account.\u003c/li\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void deleteAccountCascade(String googleId) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(googleId);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Creates an instructor."},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @return the created instructor"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the instructor is not valid"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the instructor already exists in the database"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public InstructorAttributes createInstructor(InstructorAttributes instructor)"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assert instructor !\u003d null;"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return instructorsLogic.createInstructor(instructor);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * This method should be used by admin only since the searching does not restrict the"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * search instructors in the whole system."},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e searchInstructorsInWholeSystem(String queryString)"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return instructorsLogic.searchInstructorsInWholeSystem(queryString);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given instructor."},{"lineNumber":164,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * @see InstructorsLogic#putDocument(InstructorAttributes)"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void putInstructorDocument(InstructorAttributes instructor) throws SearchServiceException {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        instructorsLogic.putDocument(instructor);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Update instructor being edited to ensure validity of instructors for the course."},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @see InstructorsLogic#updateToEnsureValidityOfInstructorsForTheCourse(String, InstructorAttributes)"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void updateToEnsureValidityOfInstructorsForTheCourse(String courseId, InstructorAttributes instructorToEdit) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assert instructorToEdit !\u003d null;"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        instructorsLogic.updateToEnsureValidityOfInstructorsForTheCourse(courseId, instructorToEdit);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForEmail(String courseId, String email) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForEmail(courseId, email);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorById(String courseId, String email) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorById(courseId, email);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForGoogleId(String courseId, String googleId) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForGoogleId(courseId, googleId);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForRegistrationKey(String registrationKey) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForRegistrationKey(registrationKey);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForGoogleId(googleId);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId, boolean omitArchived) {"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForCourse(String courseId) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForCourse(courseId);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getAllOngoingSessions(Instant rangeStart, Instant rangeEnd) {"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getAllOngoingSessions(rangeStart, rangeEnd);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithGoogleId}."},{"lineNumber":273,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade update the comments and responses given by the instructor."},{"lineNumber":275,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":278,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     * @return updated instructor"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor cannot be found"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public InstructorAttributes updateInstructorCascade(InstructorAttributes.UpdateOptionsWithGoogleId updateOptions)"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            throws InstructorUpdateException, InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"        return instructorsLogic.updateInstructorByGoogleIdCascade(updateOptions);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithEmail}."},{"lineNumber":292,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":295,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * @return updated instructor"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":298,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor cannot be found"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public InstructorAttributes updateInstructor(InstructorAttributes.UpdateOptionsWithEmail updateOptions)"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            throws InstructorUpdateException, InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return instructorsLogic.updateInstructorByEmail(updateOptions);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":308,"author":{"gitId":"-"},"content":"     * Make the instructor join the course, i.e. associate the Google ID to the instructor.\u003cbr\u003e"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an account for the instructor if no existing account is found."},{"lineNumber":310,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * * Parameters regkey and googleId are non-null."},{"lineNumber":312,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    public InstructorAttributes joinCourseForInstructor(String regkey, String googleId)"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        assert regkey !\u003d null;"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"        return accountsLogic.joinCourseForInstructor(regkey, googleId);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     * Downgrades an instructor account to student account."},{"lineNumber":324,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade deletes all instructors associated with the account."},{"lineNumber":326,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":328,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":329,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    public void downgradeInstructorToStudentCascade(String googleId) throws EntityDoesNotExistException {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"        accountsLogic.downgradeInstructorToStudentCascade(googleId);"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * Deletes an instructor cascade its associated feedback responses and comments."},{"lineNumber":338,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if the student does not exist."},{"lineNumber":340,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":342,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":343,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    public void deleteInstructorCascade(String courseId, String email) {"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        instructorsLogic.deleteInstructorCascade(courseId, email);"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":353,"author":{"gitId":"-"},"content":"     * Creates a course and an associated instructor for the course."},{"lineNumber":354,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * * All parameters are non-null. \u003cbr/\u003e"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * * {@code instructorGoogleId} already has an account and instructor privileges."},{"lineNumber":358,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    public void createCourseAndInstructor(String instructorGoogleId, CourseAttributes courseAttributes)"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        assert instructorGoogleId !\u003d null;"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        assert courseAttributes !\u003d null;"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"        coursesLogic.createCourseAndInstructor(instructorGoogleId, courseAttributes);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":368,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":369,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":370,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":371,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    public CourseAttributes getCourse(String courseId) {"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"        return coursesLogic.getCourse(courseId);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":380,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":381,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":382,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getCoursesForStudentAccount(String googleId) {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        return coursesLogic.getCoursesForStudentAccount(googleId);"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":389,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":390,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":391,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":392,"author":{"gitId":"-"},"content":"     * @return Courses the given instructors is in except for courses in Recycle Bin."},{"lineNumber":393,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getCoursesForInstructor(List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        return coursesLogic.getCoursesForInstructor(instructorList);"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":401,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":402,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":403,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":404,"author":{"gitId":"-"},"content":"     * @return Courses in Recycle Bin that the given instructors is in."},{"lineNumber":405,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getSoftDeletedCoursesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        return coursesLogic.getSoftDeletedCoursesForInstructors(instructorList);"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":413,"author":{"gitId":"-"},"content":"     * Updates a course by {@link CourseAttributes.UpdateOptions}."},{"lineNumber":414,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":415,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf the {@code timezone} of the course is changed, cascade the change to its corresponding feedback sessions."},{"lineNumber":416,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":417,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":418,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":419,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":420,"author":{"gitId":"-"},"content":"     * @return updated course"},{"lineNumber":421,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":422,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the course cannot be found"},{"lineNumber":423,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    public CourseAttributes updateCourseCascade(CourseAttributes.UpdateOptions updateOptions)"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"        return coursesLogic.updateCourseCascade(updateOptions);"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":432,"author":{"gitId":"-"},"content":"     * Changes the archive status of a course for an instructor."},{"lineNumber":433,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":434,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":435,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":436,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":437,"author":{"gitId":"-"},"content":"     * @param courseId The course of which the archive status is to be changed"},{"lineNumber":438,"author":{"gitId":"-"},"content":"     * @param archiveStatus The archive status to be set"},{"lineNumber":439,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    public void setArchiveStatusOfInstructor(String googleId, String courseId, boolean archiveStatus)"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"        instructorsLogic.setArchiveStatusOfInstructor(googleId, courseId, archiveStatus);"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":450,"author":{"gitId":"-"},"content":"     * Deletes a course cascade its students, instructors, sessions, responses and comments."},{"lineNumber":451,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":452,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if no such course."},{"lineNumber":453,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":454,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":455,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":456,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    public void deleteCourseCascade(String courseId) {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        coursesLogic.deleteCourseCascade(courseId);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":461,"author":{"gitId":"-"},"content":""},{"lineNumber":462,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":463,"author":{"gitId":"-"},"content":"     * Moves a course to Recycle Bin by its given corresponding ID."},{"lineNumber":464,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":465,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":466,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":467,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":468,"author":{"gitId":"-"},"content":"     * @return the deletion timestamp assigned to the course."},{"lineNumber":469,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    public Instant moveCourseToRecycleBin(String courseId) throws EntityDoesNotExistException {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        return coursesLogic.moveCourseToRecycleBin(courseId);"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":476,"author":{"gitId":"-"},"content":"     * Restores a course and all data related to the course from Recycle Bin by"},{"lineNumber":477,"author":{"gitId":"-"},"content":"     * its given corresponding ID."},{"lineNumber":478,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":479,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":480,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":481,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    public void restoreCourseFromRecycleBin(String courseId)"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"        coursesLogic.restoreCourseFromRecycleBin(courseId);"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":490,"author":{"gitId":"-"},"content":"     * Search for students. Preconditions: all parameters are non-null."},{"lineNumber":491,"author":{"gitId":"-"},"content":"     * @param instructors   a list of InstructorAttributes associated to a googleId,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"     *                      used for filtering of search result"},{"lineNumber":493,"author":{"gitId":"-"},"content":"     * @return Null if no match found"},{"lineNumber":494,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e searchStudents(String queryString, List\u003cInstructorAttributes\u003e instructors)"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        assert instructors !\u003d null;"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        return studentsLogic.searchStudents(queryString, instructors);"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":503,"author":{"gitId":"-"},"content":"     * This method should be used by admin only since the searching does not restrict the"},{"lineNumber":504,"author":{"gitId":"-"},"content":"     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"},{"lineNumber":505,"author":{"gitId":"-"},"content":"     * search students in the whole system."},{"lineNumber":506,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":507,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e searchStudentsInWholeSystem(String queryString)"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"        return studentsLogic.searchStudentsInWholeSystem(queryString);"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":516,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":517,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":518,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":519,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":520,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForRegistrationKey(String registrationKey) {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForRegistrationKey(registrationKey);"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":527,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":528,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":529,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":530,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":531,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForEmail(String courseId, String email) {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForEmail(courseId, email);"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":540,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":541,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":542,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":543,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":544,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForGoogleId(String courseId, String googleId) {"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForCourseIdAndGoogleId(courseId, googleId);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":551,"author":{"gitId":"-"},"content":""},{"lineNumber":552,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":553,"author":{"gitId":"-"},"content":"     * Gets student profile associated with the {@code googleId}."},{"lineNumber":554,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":555,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":556,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":557,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":558,"author":{"gitId":"-"},"content":"     * @return null if no match found."},{"lineNumber":559,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes getStudentProfile(String googleId) {"},{"lineNumber":561,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        return profilesLogic.getStudentProfile(googleId);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":566,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":567,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":568,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":569,"author":{"gitId":"-"},"content":"     * @return Empty list if no match found."},{"lineNumber":570,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":571,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForGoogleId(String googleId) {"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForGoogleId(googleId);"},{"lineNumber":574,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":575,"author":{"gitId":"-"},"content":""},{"lineNumber":576,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":577,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":578,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":579,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":580,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForCourse(String courseId) {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForCourse(courseId);"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":585,"author":{"gitId":"-"},"content":""},{"lineNumber":586,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":587,"author":{"gitId":"-"},"content":"     * Returns a list of section names for the course with ID courseId."},{"lineNumber":588,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":589,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":590,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":591,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":592,"author":{"gitId":"-"},"content":"     * @see CoursesLogic#getSectionsNameForCourse(String)"},{"lineNumber":593,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getSectionNamesForCourse(String courseId) throws EntityDoesNotExistException {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        return coursesLogic.getSectionsNameForCourse(courseId);"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":600,"author":{"gitId":"-"},"content":"     * Populates fields that need dynamic generation in a question."},{"lineNumber":601,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":602,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCurrently, only MCQ/MSQ needs to generate choices dynamically.\u003c/p\u003e"},{"lineNumber":603,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":604,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":605,"author":{"gitId":"-"},"content":"     * * All parameters except \u003ccode\u003eteamOfEntityDoingQuestion\u003c/code\u003e are non-null."},{"lineNumber":606,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":607,"author":{"gitId":"-"},"content":"     * @param feedbackQuestionAttributes the question to populate"},{"lineNumber":608,"author":{"gitId":"-"},"content":"     * @param emailOfEntityDoingQuestion the email of the entity doing the question"},{"lineNumber":609,"author":{"gitId":"-"},"content":"     * @param teamOfEntityDoingQuestion the team of the entity doing the question. If the entity is an instructor,"},{"lineNumber":610,"author":{"gitId":"-"},"content":"     *                                  it can be {@code null}."},{"lineNumber":611,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":612,"author":{"gitId":"-"},"content":"    public void populateFieldsToGenerateInQuestion(FeedbackQuestionAttributes feedbackQuestionAttributes,"},{"lineNumber":613,"author":{"gitId":"-"},"content":"            String emailOfEntityDoingQuestion, String teamOfEntityDoingQuestion) {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        assert feedbackQuestionAttributes !\u003d null;"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        assert emailOfEntityDoingQuestion !\u003d null;"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"        feedbackQuestionsLogic.populateFieldsToGenerateInQuestion("},{"lineNumber":618,"author":{"gitId":"-"},"content":"                feedbackQuestionAttributes, emailOfEntityDoingQuestion, teamOfEntityDoingQuestion);"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":620,"author":{"gitId":"-"},"content":""},{"lineNumber":621,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":622,"author":{"gitId":"-"},"content":"     * Resets the googleId associated with the student."},{"lineNumber":623,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":624,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":625,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":626,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    public void resetStudentGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"},{"lineNumber":628,"author":{"gitId":"-"},"content":"        assert originalEmail !\u003d null;"},{"lineNumber":629,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"        studentsLogic.resetStudentGoogleId(originalEmail, courseId);"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":635,"author":{"gitId":"-"},"content":"     * Regenerates the registration key for the instructor with email address {@code email} in course {@code courseId}."},{"lineNumber":636,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":637,"author":{"gitId":"-"},"content":"     * @return the instructor attributes with the new registration key."},{"lineNumber":638,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the newly generated instructor has the same registration key as the"},{"lineNumber":639,"author":{"gitId":"-"},"content":"     *          original one."},{"lineNumber":640,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor does not exist."},{"lineNumber":641,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    public InstructorAttributes regenerateInstructorRegistrationKey(String courseId, String email)"},{"lineNumber":643,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":644,"author":{"gitId":"-"},"content":""},{"lineNumber":645,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":647,"author":{"gitId":"-"},"content":""},{"lineNumber":648,"author":{"gitId":"-"},"content":"        return instructorsLogic.regenerateInstructorRegistrationKey(courseId, email);"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":652,"author":{"gitId":"-"},"content":"     * Regenerates the registration key for the student with email address {@code email} in course {@code courseId}."},{"lineNumber":653,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":654,"author":{"gitId":"-"},"content":"     * @return the student attributes with the new registration key."},{"lineNumber":655,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the newly generated course student has the same registration key as the"},{"lineNumber":656,"author":{"gitId":"-"},"content":"     *          original one."},{"lineNumber":657,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the student does not exist."},{"lineNumber":658,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    public StudentAttributes regenerateStudentRegistrationKey(String courseId, String email)"},{"lineNumber":660,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":661,"author":{"gitId":"-"},"content":""},{"lineNumber":662,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":664,"author":{"gitId":"-"},"content":""},{"lineNumber":665,"author":{"gitId":"-"},"content":"        return studentsLogic.regenerateStudentRegistrationKey(courseId, email);"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":667,"author":{"gitId":"-"},"content":""},{"lineNumber":668,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":669,"author":{"gitId":"-"},"content":"     * Resets the associated googleId of an instructor."},{"lineNumber":670,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    public void resetInstructorGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        assert originalEmail !\u003d null;"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"        instructorsLogic.resetInstructorGoogleId(originalEmail, courseId);"},{"lineNumber":676,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":677,"author":{"gitId":"-"},"content":""},{"lineNumber":678,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":679,"author":{"gitId":"-"},"content":"     * Creates a student."},{"lineNumber":680,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":681,"author":{"gitId":"-"},"content":"     * @return the created student."},{"lineNumber":682,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the student is not valid."},{"lineNumber":683,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the student already exists in the database."},{"lineNumber":684,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":685,"author":{"gitId":"-"},"content":"    public StudentAttributes createStudent(StudentAttributes student)"},{"lineNumber":686,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        assert student.getCourse() !\u003d null;"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        assert student.getEmail() !\u003d null;"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"        return studentsLogic.createStudent(student);"},{"lineNumber":691,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":692,"author":{"gitId":"-"},"content":""},{"lineNumber":693,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":694,"author":{"gitId":"-"},"content":"     * Updates a student by {@link StudentAttributes.UpdateOptions}."},{"lineNumber":695,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":696,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf email changed, update by recreating the student and cascade update all responses the student gives/receives."},{"lineNumber":697,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":698,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf team changed, cascade delete all responses the student gives/receives within that team."},{"lineNumber":699,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":700,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf section changed, cascade update all responses the student gives/receives."},{"lineNumber":701,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":702,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":703,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":704,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":705,"author":{"gitId":"-"},"content":"     * @return updated student"},{"lineNumber":706,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":707,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the student cannot be found"},{"lineNumber":708,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the student cannot be updated"},{"lineNumber":709,"author":{"gitId":"-"},"content":"     *         by recreation because of an existent student"},{"lineNumber":710,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":711,"author":{"gitId":"-"},"content":"    public StudentAttributes updateStudentCascade(StudentAttributes.UpdateOptions updateOptions)"},{"lineNumber":712,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":713,"author":{"gitId":"-"},"content":""},{"lineNumber":714,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"        return studentsLogic.updateStudentCascade(updateOptions);"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":720,"author":{"gitId":"-"},"content":"     * Make the student join the course, i.e. associate the Google ID to the student.\u003cbr\u003e"},{"lineNumber":721,"author":{"gitId":"samuelfangjw"},"content":"     * Create an account for the student if no existing account is found."},{"lineNumber":722,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":723,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":724,"author":{"gitId":"-"},"content":"     * @param key the registration key"},{"lineNumber":725,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":726,"author":{"gitId":"-"},"content":"    public StudentAttributes joinCourseForStudent(String key, String googleId)"},{"lineNumber":727,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":728,"author":{"gitId":"-"},"content":""},{"lineNumber":729,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":730,"author":{"gitId":"-"},"content":"        assert key !\u003d null;"},{"lineNumber":731,"author":{"gitId":"-"},"content":""},{"lineNumber":732,"author":{"gitId":"-"},"content":"        return accountsLogic.joinCourseForStudent(key, googleId);"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getUnregisteredStudentsForCourse(String courseId) {"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        return studentsLogic.getUnregisteredStudentsForCourse(courseId);"},{"lineNumber":739,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":740,"author":{"gitId":"-"},"content":""},{"lineNumber":741,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":742,"author":{"gitId":"-"},"content":"     * Checks whether an instructor has attempted a feedback session."},{"lineNumber":743,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":744,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf there is no question for instructors, the feedback session is considered as attempted.\u003c/p\u003e"},{"lineNumber":745,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":746,"author":{"gitId":"-"},"content":"    public boolean isFeedbackSessionAttemptedByInstructor(FeedbackSessionAttributes fsa, String userEmail) {"},{"lineNumber":747,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":749,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.isFeedbackSessionAttemptedByInstructor(fsa, userEmail);"},{"lineNumber":750,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":751,"author":{"gitId":"-"},"content":""},{"lineNumber":752,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":753,"author":{"gitId":"-"},"content":"     * Checks whether a student has attempted a feedback session."},{"lineNumber":754,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":755,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf there is no question for students, the feedback session is considered as attempted.\u003c/p\u003e"},{"lineNumber":756,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    public boolean isFeedbackSessionAttemptedByStudent(FeedbackSessionAttributes fsa, String userEmail, String userTeam) {"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":759,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":760,"author":{"gitId":"-"},"content":"        assert userTeam !\u003d null;"},{"lineNumber":761,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.isFeedbackSessionAttemptedByStudent(fsa, userEmail, userTeam);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":763,"author":{"gitId":"-"},"content":""},{"lineNumber":764,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":765,"author":{"gitId":"-"},"content":"     * Deletes a student cascade its associated feedback responses and comments."},{"lineNumber":766,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":767,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if the student does not exist."},{"lineNumber":768,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":769,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":770,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":771,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":772,"author":{"gitId":"-"},"content":"    public void deleteStudentCascade(String courseId, String studentEmail) {"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        assert studentEmail !\u003d null;"},{"lineNumber":775,"author":{"gitId":"-"},"content":""},{"lineNumber":776,"author":{"gitId":"-"},"content":"        studentsLogic.deleteStudentCascade(courseId, studentEmail);"},{"lineNumber":777,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":780,"author":{"gitId":"-"},"content":"     * Deletes all the students in the course cascade their associated responses and comments."},{"lineNumber":781,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":782,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":783,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":784,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":785,"author":{"gitId":"-"},"content":"    public void deleteStudentsInCourseCascade(String courseId, int batchSize) {"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":787,"author":{"gitId":"-"},"content":""},{"lineNumber":788,"author":{"gitId":"-"},"content":"        studentsLogic.deleteStudentsInCourseCascade(courseId, batchSize);"},{"lineNumber":789,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":790,"author":{"gitId":"-"},"content":""},{"lineNumber":791,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":792,"author":{"gitId":"-"},"content":"     * Validates sections for any limit violations and teams for any team name violations."},{"lineNumber":793,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":794,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":795,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":796,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":797,"author":{"gitId":"-"},"content":"     * @see StudentsLogic#validateSectionsAndTeams(List, String)"},{"lineNumber":798,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    public void validateSectionsAndTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"},{"lineNumber":800,"author":{"gitId":"-"},"content":""},{"lineNumber":801,"author":{"gitId":"-"},"content":"        assert studentList !\u003d null;"},{"lineNumber":802,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":803,"author":{"gitId":"-"},"content":""},{"lineNumber":804,"author":{"gitId":"-"},"content":"        studentsLogic.validateSectionsAndTeams(studentList, courseId);"},{"lineNumber":805,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":806,"author":{"gitId":"-"},"content":""},{"lineNumber":807,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":808,"author":{"gitId":"-"},"content":"     * Gets all students of a team."},{"lineNumber":809,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":810,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForTeam(String teamName, String courseId) {"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        assert teamName !\u003d null;"},{"lineNumber":812,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":813,"author":{"gitId":"-"},"content":""},{"lineNumber":814,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForTeam(teamName, courseId);"},{"lineNumber":815,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":816,"author":{"gitId":"-"},"content":""},{"lineNumber":817,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":818,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given student."},{"lineNumber":819,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":820,"author":{"gitId":"-"},"content":"     * @see StudentsLogic#putDocument(StudentAttributes)"},{"lineNumber":821,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    public void putStudentDocument(StudentAttributes student) throws SearchServiceException {"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        studentsLogic.putDocument(student);"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":825,"author":{"gitId":"-"},"content":""},{"lineNumber":826,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":827,"author":{"gitId":"-"},"content":"     * Creates a feedback session."},{"lineNumber":828,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":829,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":830,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":831,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":832,"author":{"gitId":"-"},"content":"     * @return created feedback session"},{"lineNumber":833,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the session is not valid"},{"lineNumber":834,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the session already exist"},{"lineNumber":835,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes createFeedbackSession(FeedbackSessionAttributes feedbackSession)"},{"lineNumber":837,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"        assert feedbackSession !\u003d null;"},{"lineNumber":839,"author":{"gitId":"-"},"content":""},{"lineNumber":840,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.createFeedbackSession(feedbackSession);"},{"lineNumber":841,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":842,"author":{"gitId":"-"},"content":""},{"lineNumber":843,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":844,"author":{"gitId":"-"},"content":"     * Gets a feedback session from the data storage."},{"lineNumber":845,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":846,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":847,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":848,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":849,"author":{"gitId":"-"},"content":"     * @return null if not found or in recycle bin."},{"lineNumber":850,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":851,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"},{"lineNumber":852,"author":{"gitId":"-"},"content":""},{"lineNumber":853,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":854,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":855,"author":{"gitId":"-"},"content":""},{"lineNumber":856,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":857,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":860,"author":{"gitId":"-"},"content":"     * Gets a feedback session from the recycle bin."},{"lineNumber":861,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":862,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":863,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":864,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":865,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":866,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":867,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId) {"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":869,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":870,"author":{"gitId":"-"},"content":""},{"lineNumber":871,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":872,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":873,"author":{"gitId":"-"},"content":""},{"lineNumber":874,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":875,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":876,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":877,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":878,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse(String courseId) {"},{"lineNumber":879,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":880,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsForCourse(courseId);"},{"lineNumber":881,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":882,"author":{"gitId":"-"},"content":""},{"lineNumber":883,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":884,"author":{"gitId":"-"},"content":"     * Gets the expected number of submissions for a feedback session."},{"lineNumber":885,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":886,"author":{"gitId":"-"},"content":"     * \u003cbr\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":887,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":888,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":889,"author":{"gitId":"-"},"content":"    public int getExpectedTotalSubmission(FeedbackSessionAttributes fsa) {"},{"lineNumber":890,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":891,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getExpectedTotalSubmission(fsa);"},{"lineNumber":892,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":893,"author":{"gitId":"-"},"content":""},{"lineNumber":894,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":895,"author":{"gitId":"-"},"content":"     * Gets the actual number of submissions for a feedback session."},{"lineNumber":896,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":897,"author":{"gitId":"-"},"content":"     * \u003cbr\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":898,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":899,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":900,"author":{"gitId":"-"},"content":"    public int getActualTotalSubmission(FeedbackSessionAttributes fsa) {"},{"lineNumber":901,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":902,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getActualTotalSubmission(fsa);"},{"lineNumber":903,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":904,"author":{"gitId":"-"},"content":""},{"lineNumber":905,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":906,"author":{"gitId":"-"},"content":"     * Gets a list of feedback sessions for instructors."},{"lineNumber":907,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":908,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("},{"lineNumber":909,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":910,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":911,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(instructorList);"},{"lineNumber":912,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":913,"author":{"gitId":"-"},"content":""},{"lineNumber":914,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":915,"author":{"gitId":"-"},"content":"     * Returns a {@code List} of feedback sessions in the Recycle Bin for the instructors."},{"lineNumber":916,"author":{"gitId":"-"},"content":"     * \u003cbr\u003e"},{"lineNumber":917,"author":{"gitId":"-"},"content":"     * Omits sessions if the corresponding courses are archived or in Recycle Bin"},{"lineNumber":918,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":919,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructors("},{"lineNumber":920,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":921,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":922,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructors(instructorList);"},{"lineNumber":923,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":924,"author":{"gitId":"-"},"content":""},{"lineNumber":925,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":926,"author":{"gitId":"-"},"content":"     * Gets the recipients of a feedback question for student."},{"lineNumber":927,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":928,"author":{"gitId":"-"},"content":"     * @see FeedbackQuestionsLogic#getRecipientsOfQuestion"},{"lineNumber":929,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":930,"author":{"gitId":"-"},"content":"    public Map\u003cString, String\u003e getRecipientsOfQuestion("},{"lineNumber":931,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question,"},{"lineNumber":932,"author":{"gitId":"-"},"content":"            @Nullable InstructorAttributes instructorGiver, @Nullable StudentAttributes studentGiver) {"},{"lineNumber":933,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":934,"author":{"gitId":"-"},"content":""},{"lineNumber":935,"author":{"gitId":"-"},"content":"        // we do not supply course roster here"},{"lineNumber":936,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getRecipientsOfQuestion(question, instructorGiver, studentGiver, null);"},{"lineNumber":937,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":938,"author":{"gitId":"-"},"content":""},{"lineNumber":939,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":940,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":941,"author":{"gitId":"-"},"content":"     * * All parameters are non-null. \u003cbr\u003e"},{"lineNumber":942,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":943,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":944,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackQuestionId) {"},{"lineNumber":945,"author":{"gitId":"-"},"content":"        assert feedbackQuestionId !\u003d null;"},{"lineNumber":946,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackQuestionId);"},{"lineNumber":947,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":948,"author":{"gitId":"-"},"content":""},{"lineNumber":949,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":950,"author":{"gitId":"-"},"content":"     * Gets a list of all questions for the given session that"},{"lineNumber":951,"author":{"gitId":"-"},"content":"     * students can view/submit."},{"lineNumber":952,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":953,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForStudents("},{"lineNumber":954,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId) {"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":956,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":957,"author":{"gitId":"-"},"content":""},{"lineNumber":958,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForStudents(feedbackSessionName, courseId);"},{"lineNumber":959,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":960,"author":{"gitId":"-"},"content":""},{"lineNumber":961,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":962,"author":{"gitId":"-"},"content":"     * Gets a {@code List} of all questions for the given session that"},{"lineNumber":963,"author":{"gitId":"-"},"content":"     * instructor can view/submit."},{"lineNumber":964,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":965,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForInstructors("},{"lineNumber":966,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String instructorEmail) {"},{"lineNumber":967,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":968,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":969,"author":{"gitId":"-"},"content":""},{"lineNumber":970,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForInstructors(feedbackSessionName, courseId, instructorEmail);"},{"lineNumber":971,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":972,"author":{"gitId":"-"},"content":""},{"lineNumber":973,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":974,"author":{"gitId":"-"},"content":"     * Updates the details of a feedback session by {@link FeedbackSessionAttributes.UpdateOptions}."},{"lineNumber":975,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":976,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAdjust email sending status if necessary."},{"lineNumber":977,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":978,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":979,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":980,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":981,"author":{"gitId":"-"},"content":"     * @return updated feedback session"},{"lineNumber":982,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":983,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":984,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":985,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes updateFeedbackSession(FeedbackSessionAttributes.UpdateOptions updateOptions)"},{"lineNumber":986,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":987,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":988,"author":{"gitId":"-"},"content":""},{"lineNumber":989,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.updateFeedbackSession(updateOptions);"},{"lineNumber":990,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":991,"author":{"gitId":"-"},"content":""},{"lineNumber":992,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":993,"author":{"gitId":"-"},"content":"     * Publishes a feedback session."},{"lineNumber":994,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":995,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":996,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":997,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":998,"author":{"gitId":"-"},"content":"     * @return the published feedback session"},{"lineNumber":999,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if session is already published"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes publishFeedbackSession(String feedbackSessionName, String courseId)"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1004,"author":{"gitId":"-"},"content":""},{"lineNumber":1005,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1007,"author":{"gitId":"-"},"content":""},{"lineNumber":1008,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.publishFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1010,"author":{"gitId":"-"},"content":""},{"lineNumber":1011,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"     * Unpublishes a feedback session."},{"lineNumber":1013,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1016,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"     * @return the unpublished feedback session"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"     *             if the feedback session is not ready to be unpublished."},{"lineNumber":1021,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes unpublishFeedbackSession(String feedbackSessionName, String courseId)"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1024,"author":{"gitId":"-"},"content":""},{"lineNumber":1025,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1027,"author":{"gitId":"-"},"content":""},{"lineNumber":1028,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.unpublishFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1030,"author":{"gitId":"-"},"content":""},{"lineNumber":1031,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"     * Deletes a feedback session cascade to its associated questions, responses and comments."},{"lineNumber":1033,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1036,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"    public void deleteFeedbackSessionCascade(String feedbackSessionName, String courseId) {"},{"lineNumber":1038,"author":{"gitId":"-"},"content":""},{"lineNumber":1039,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1041,"author":{"gitId":"-"},"content":""},{"lineNumber":1042,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.deleteFeedbackSessionCascade(feedbackSessionName, courseId);"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1044,"author":{"gitId":"-"},"content":""},{"lineNumber":1045,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"     * Soft-deletes a specific session to Recycle Bin."},{"lineNumber":1047,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"    public void moveFeedbackSessionToRecycleBin(String feedbackSessionName, String courseId)"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":""},{"lineNumber":1051,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1053,"author":{"gitId":"-"},"content":""},{"lineNumber":1054,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1056,"author":{"gitId":"-"},"content":""},{"lineNumber":1057,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"     * Restores a specific session from Recycle Bin to feedback sessions table."},{"lineNumber":1059,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"    public void restoreFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId)"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":1062,"author":{"gitId":"-"},"content":""},{"lineNumber":1063,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1065,"author":{"gitId":"-"},"content":""},{"lineNumber":1066,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.restoreFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1068,"author":{"gitId":"-"},"content":""},{"lineNumber":1069,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"     * Creates a new feedback question."},{"lineNumber":1071,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1074,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"     * @return the created question"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the question is invalid"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes createFeedbackQuestion(FeedbackQuestionAttributes feedbackQuestion)"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"        assert feedbackQuestion !\u003d null;"},{"lineNumber":1081,"author":{"gitId":"-"},"content":""},{"lineNumber":1082,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.createFeedbackQuestion(feedbackQuestion);"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1084,"author":{"gitId":"-"},"content":""},{"lineNumber":1085,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"     * Updates a feedback question by {@code FeedbackQuestionAttributes.UpdateOptions}."},{"lineNumber":1087,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the question number of questions in the same session."},{"lineNumber":1089,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the existing response of the question."},{"lineNumber":1091,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1094,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"     * @return updated feedback question"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback question cannot be found"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes updateFeedbackQuestionCascade(FeedbackQuestionAttributes.UpdateOptions updateOptions)"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1102,"author":{"gitId":"-"},"content":""},{"lineNumber":1103,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.updateFeedbackQuestionCascade(updateOptions);"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1105,"author":{"gitId":"-"},"content":""},{"lineNumber":1106,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"     * Deletes a feedback question cascade its responses and comments."},{"lineNumber":1108,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"     * \u003cp\u003eSilently fail if question does not exist."},{"lineNumber":1110,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1113,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"    public void deleteFeedbackQuestionCascade(String questionId) {"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"        assert questionId !\u003d null;"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"        feedbackQuestionsLogic.deleteFeedbackQuestionCascade(questionId);"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1118,"author":{"gitId":"-"},"content":""},{"lineNumber":1119,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"     * Checks whether there are responses for a question."},{"lineNumber":1121,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1124,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.areThereResponsesForQuestion(feedbackQuestionId);"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1128,"author":{"gitId":"-"},"content":""},{"lineNumber":1129,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"     * Gets all questions for a feedback session.\u003cbr\u003e"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"     * Returns an empty list if they are no questions"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"     * for the session."},{"lineNumber":1133,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1135,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForSession(String feedbackSessionName, String courseId) {"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1139,"author":{"gitId":"-"},"content":""},{"lineNumber":1140,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1142,"author":{"gitId":"-"},"content":""},{"lineNumber":1143,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"     * Gets a set of giver identifiers that has at least one response under a feedback session."},{"lineNumber":1145,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1149,"author":{"gitId":"-"},"content":""},{"lineNumber":1150,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName);"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1152,"author":{"gitId":"-"},"content":""},{"lineNumber":1153,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session."},{"lineNumber":1155,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"     * @see FeedbackResponsesLogic#getSessionResultsForCourse(String, String, String, String, String)"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForCourse("},{"lineNumber":1159,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail,"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"            @Nullable String questionId, @Nullable String section) {"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1164,"author":{"gitId":"-"},"content":""},{"lineNumber":1165,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getSessionResultsForCourse("},{"lineNumber":1166,"author":{"gitId":"-"},"content":"                feedbackSessionName, courseId, userEmail, questionId, section);"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1168,"author":{"gitId":"-"},"content":""},{"lineNumber":1169,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session for the given user."},{"lineNumber":1171,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"     * @see FeedbackResponsesLogic#getSessionResultsForUser(String, String, String, boolean, String)"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForUser("},{"lineNumber":1175,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail, boolean isInstructor,"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"            @Nullable String questionId) {"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1180,"author":{"gitId":"-"},"content":""},{"lineNumber":1181,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getSessionResultsForUser("},{"lineNumber":1182,"author":{"gitId":"-"},"content":"                feedbackSessionName, courseId, userEmail, isInstructor, questionId);"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1184,"author":{"gitId":"-"},"content":""},{"lineNumber":1185,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"     * Get existing feedback responses from student or his team for the given question."},{"lineNumber":1187,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromStudentOrTeamForQuestion("},{"lineNumber":1189,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, StudentAttributes student) {"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"        assert student !\u003d null;"},{"lineNumber":1192,"author":{"gitId":"-"},"content":""},{"lineNumber":1193,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponsesFromStudentOrTeamForQuestion(question, student);"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1195,"author":{"gitId":"-"},"content":""},{"lineNumber":1196,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"     * Get existing feedback responses from instructor for the given question."},{"lineNumber":1198,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromInstructorForQuestion("},{"lineNumber":1200,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, InstructorAttributes instructorAttributes) {"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"        assert instructorAttributes !\u003d null;"},{"lineNumber":1203,"author":{"gitId":"-"},"content":""},{"lineNumber":1204,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":1205,"author":{"gitId":"-"},"content":"                question.getFeedbackQuestionId(), instructorAttributes.getEmail());"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1207,"author":{"gitId":"-"},"content":""},{"lineNumber":1208,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes getFeedbackResponse(String feedbackResponseId) {"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"        assert feedbackResponseId !\u003d null;"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponse(feedbackResponseId);"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1212,"author":{"gitId":"-"},"content":""},{"lineNumber":1213,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"     * Creates a feedback response."},{"lineNumber":1215,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1218,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"     * @return created feedback response"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the response is not valid"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response already exist"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes createFeedbackResponse(FeedbackResponseAttributes feedbackResponse)"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"        assert feedbackResponse !\u003d null;"},{"lineNumber":1226,"author":{"gitId":"-"},"content":""},{"lineNumber":1227,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.createFeedbackResponse(feedbackResponse);"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1229,"author":{"gitId":"-"},"content":""},{"lineNumber":1230,"author":{"gitId":"-"},"content":"    public boolean hasResponsesForCourse(String courseId) {"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.hasResponsesForCourse(courseId);"},{"lineNumber":1232,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1233,"author":{"gitId":"-"},"content":""},{"lineNumber":1234,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"     * Updates a feedback response by {@link FeedbackResponseAttributes.UpdateOptions}."},{"lineNumber":1236,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1237,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade updates its associated feedback response comment"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"     * (e.g. associated response ID, giverSection and recipientSection)."},{"lineNumber":1239,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"     * as question-giver-recipient is the primary key."},{"lineNumber":1242,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1245,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"     * @return updated feedback response"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the comment cannot be found"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response cannot be updated"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"     *         by recreation because of an existent response"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes updateFeedbackResponseCascade(FeedbackResponseAttributes.UpdateOptions updateOptions)"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1255,"author":{"gitId":"-"},"content":""},{"lineNumber":1256,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.updateFeedbackResponseCascade(updateOptions);"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1258,"author":{"gitId":"-"},"content":""},{"lineNumber":1259,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"     * Deletes a feedback response cascade its associated comments."},{"lineNumber":1261,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1264,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponseCascade(String responseId) {"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"        assert responseId !\u003d null;"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"        feedbackResponsesLogic.deleteFeedbackResponseCascade(responseId);"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1269,"author":{"gitId":"-"},"content":""},{"lineNumber":1270,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1271,"author":{"gitId":"-"},"content":"     * Create a feedback response comment, and return the created comment."},{"lineNumber":1272,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1275,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes createFeedbackResponseComment("},{"lineNumber":1277,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes feedbackResponseComment)"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"        assert feedbackResponseComment !\u003d null;"},{"lineNumber":1280,"author":{"gitId":"-"},"content":""},{"lineNumber":1281,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.createFeedbackResponseComment(feedbackResponseComment);"},{"lineNumber":1282,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1283,"author":{"gitId":"-"},"content":""},{"lineNumber":1284,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseComment(Long feedbackResponseCommentId) {"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"        assert feedbackResponseCommentId !\u003d null;"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.getFeedbackResponseComment(feedbackResponseCommentId);"},{"lineNumber":1287,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1288,"author":{"gitId":"-"},"content":""},{"lineNumber":1289,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1290,"author":{"gitId":"-"},"content":"     * Gets comment associated with the response."},{"lineNumber":1291,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1292,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThe comment is given by a feedback participant to explain the response\u003c/p\u003e"},{"lineNumber":1293,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"     * @param feedbackResponseId the response id"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseCommentForResponseFromParticipant("},{"lineNumber":1297,"author":{"gitId":"-"},"content":"            String feedbackResponseId) {"},{"lineNumber":1298,"author":{"gitId":"-"},"content":"        assert feedbackResponseId !\u003d null;"},{"lineNumber":1299,"author":{"gitId":"-"},"content":""},{"lineNumber":1300,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.getFeedbackResponseCommentForResponseFromParticipant(feedbackResponseId);"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1302,"author":{"gitId":"-"},"content":""},{"lineNumber":1303,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1304,"author":{"gitId":"-"},"content":"     * Updates a feedback response comment by {@link FeedbackResponseCommentAttributes.UpdateOptions}."},{"lineNumber":1305,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1307,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1308,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"     * @return updated comment"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the comment cannot be found"},{"lineNumber":1312,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes updateFeedbackResponseComment("},{"lineNumber":1314,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes.UpdateOptions updateOptions)"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1317,"author":{"gitId":"-"},"content":""},{"lineNumber":1318,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.updateFeedbackResponseComment(updateOptions);"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1320,"author":{"gitId":"-"},"content":""},{"lineNumber":1321,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"     * Deletes a comment."},{"lineNumber":1323,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponseComment(long commentId) {"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"        feedbackResponseCommentsLogic.deleteFeedbackResponseComment(commentId);"},{"lineNumber":1326,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1327,"author":{"gitId":"-"},"content":""},{"lineNumber":1328,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"     * Returns returns a list of sessions that were closed within past hour."},{"lineNumber":1330,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"     * @see FeedbackSessionsLogic#getFeedbackSessionsClosedWithinThePastHour()"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsClosedWithinThePastHour();"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1336,"author":{"gitId":"-"},"content":""},{"lineNumber":1337,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"},{"lineNumber":1338,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsClosingWithinTimeLimit();"},{"lineNumber":1339,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1340,"author":{"gitId":"-"},"content":""},{"lineNumber":1341,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsOpeningWithinTimeLimit() {"},{"lineNumber":1342,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsOpeningWithinTimeLimit();"},{"lineNumber":1343,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1344,"author":{"gitId":"-"},"content":""},{"lineNumber":1345,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"     * Returns a list of sessions that require automated emails to be sent as they are published."},{"lineNumber":1347,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1348,"author":{"gitId":"-"},"content":"     * @see FeedbackSessionsLogic#getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent()"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"},{"lineNumber":1352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1353,"author":{"gitId":"-"},"content":""},{"lineNumber":1354,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"},{"lineNumber":1356,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1357,"author":{"gitId":"-"},"content":""},{"lineNumber":1358,"author":{"gitId":"-"},"content":"    public String getSectionForTeam(String courseId, String teamName) {"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1360,"author":{"gitId":"-"},"content":"        assert teamName !\u003d null;"},{"lineNumber":1361,"author":{"gitId":"-"},"content":"        return studentsLogic.getSectionForTeam(courseId, teamName);"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1363,"author":{"gitId":"-"},"content":""},{"lineNumber":1364,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1365,"author":{"gitId":"-"},"content":"     * Persists the given data bundle to the database."},{"lineNumber":1366,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1367,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#persistDataBundle(DataBundle)"},{"lineNumber":1368,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1369,"author":{"gitId":"-"},"content":"    public DataBundle persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"        return dataBundleLogic.persistDataBundle(dataBundle);"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1372,"author":{"gitId":"-"},"content":""},{"lineNumber":1373,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1374,"author":{"gitId":"-"},"content":"     * Removes the given data bundle from the database."},{"lineNumber":1375,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#removeDataBundle(DataBundle)"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1378,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"        dataBundleLogic.removeDataBundle(dataBundle);"},{"lineNumber":1380,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1381,"author":{"gitId":"-"},"content":""},{"lineNumber":1382,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1383,"author":{"gitId":"-"},"content":"     * Puts searchable documents from the data bundle to the database."},{"lineNumber":1384,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1385,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#putDocuments(DataBundle)"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"    public void putDocuments(DataBundle dataBundle) throws SearchServiceException {"},{"lineNumber":1388,"author":{"gitId":"-"},"content":"        dataBundleLogic.putDocuments(dataBundle);"},{"lineNumber":1389,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1390,"author":{"gitId":"-"},"content":""},{"lineNumber":1391,"author":{"gitId":"-"},"content":"    public boolean isStudentsInSameTeam(String courseId, String student1Email, String student2Email) {"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"        assert student1Email !\u003d null;"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"        assert student2Email !\u003d null;"},{"lineNumber":1395,"author":{"gitId":"-"},"content":"        return studentsLogic.isStudentsInSameTeam(courseId, student1Email, student2Email);"},{"lineNumber":1396,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1397,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1398,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1399,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an account request."},{"lineNumber":1400,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1401,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1402,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1403,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1404,"author":{"gitId":"samuelfangjw"},"content":"     * @return the created account request"},{"lineNumber":1405,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":1406,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityAlreadyExistsException if the account request already exists"},{"lineNumber":1407,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1408,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes createAccountRequest(AccountRequestAttributes accountRequest)"},{"lineNumber":1409,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":1410,"author":{"gitId":"samuelfangjw"},"content":"        assert accountRequest !\u003d null;"},{"lineNumber":1411,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1412,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsLogic.createAccountRequest(accountRequest);"},{"lineNumber":1413,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1414,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1415,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1416,"author":{"gitId":"samuelfangjw"},"content":"     * Updates an account request."},{"lineNumber":1417,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1418,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1419,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1420,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1421,"author":{"gitId":"samuelfangjw"},"content":"     * @return the updated account request"},{"lineNumber":1422,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":1423,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityDoesNotExistException if the account request to update does not exist"},{"lineNumber":1424,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1425,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes updateAccountRequest(AccountRequestAttributes.UpdateOptions updateOptions)"},{"lineNumber":1426,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1427,"author":{"gitId":"samuelfangjw"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1428,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1429,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsLogic.updateAccountRequest(updateOptions);"},{"lineNumber":1430,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1431,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1432,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1433,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes an account request."},{"lineNumber":1434,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1435,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1436,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1437,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1438,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":1439,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":1440,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1441,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(email, institute);"},{"lineNumber":1442,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1443,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1444,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1445,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by unique constraint {@code registrationKey}."},{"lineNumber":1446,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1447,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1448,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1449,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1450,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request"},{"lineNumber":1451,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1452,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequestForRegistrationKey(String registrationKey) {"},{"lineNumber":1453,"author":{"gitId":"samuelfangjw"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":1454,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1455,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsLogic.getAccountRequestForRegistrationKey(registrationKey);"},{"lineNumber":1456,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1457,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1458,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1459,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by email address and institute."},{"lineNumber":1460,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1461,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1462,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1463,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1464,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request"},{"lineNumber":1465,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1466,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":1467,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":1468,"author":{"gitId":"samuelfangjw"},"content":"        assert institute !\u003d null;"},{"lineNumber":1469,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1470,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsLogic.getAccountRequest(email, institute);"},{"lineNumber":1471,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1472,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1473,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1474,"author":{"gitId":"samuelfangjw"},"content":"     * This is used by admin to search account requests in the whole system."},{"lineNumber":1475,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1476,"author":{"gitId":"samuelfangjw"},"content":"     * @return A list of {@link AccountRequestAttributes} or {@code null} if no match found."},{"lineNumber":1477,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1478,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cAccountRequestAttributes\u003e searchAccountRequestsInWholeSystem(String queryString)"},{"lineNumber":1479,"author":{"gitId":"samuelfangjw"},"content":"            throws SearchServiceException {"},{"lineNumber":1480,"author":{"gitId":"samuelfangjw"},"content":"        assert queryString !\u003d null;"},{"lineNumber":1481,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1482,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsLogic.searchAccountRequestsInWholeSystem(queryString);"},{"lineNumber":1483,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1484,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1485,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1486,"author":{"gitId":"samuelfangjw"},"content":"     * Creates or updates search document for the given account request."},{"lineNumber":1487,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1488,"author":{"gitId":"samuelfangjw"},"content":"     * @see AccountRequestsLogic#putDocument(AccountRequestAttributes)"},{"lineNumber":1489,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1490,"author":{"gitId":"samuelfangjw"},"content":"    public void putAccountRequestDocument(AccountRequestAttributes accountRequest) throws SearchServiceException {"},{"lineNumber":1491,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.putDocument(accountRequest);"},{"lineNumber":1492,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1493,"author":{"gitId":"-"},"content":""},{"lineNumber":1494,"author":{"gitId":"-"},"content":"    public List\u003cUsageStatisticsAttributes\u003e getUsageStatisticsForTimeRange(Instant startTime, Instant endTime) {"},{"lineNumber":1495,"author":{"gitId":"-"},"content":"        assert startTime !\u003d null;"},{"lineNumber":1496,"author":{"gitId":"-"},"content":"        assert endTime !\u003d null;"},{"lineNumber":1497,"author":{"gitId":"-"},"content":"        assert startTime.toEpochMilli() \u003c endTime.toEpochMilli();"},{"lineNumber":1498,"author":{"gitId":"-"},"content":""},{"lineNumber":1499,"author":{"gitId":"-"},"content":"        return usageStatisticsLogic.getUsageStatisticsForTimeRange(startTime, endTime);"},{"lineNumber":1500,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1501,"author":{"gitId":"-"},"content":""},{"lineNumber":1502,"author":{"gitId":"-"},"content":"    public UsageStatisticsAttributes calculateEntitiesStatisticsForTimeRange(Instant startTime, Instant endTime) {"},{"lineNumber":1503,"author":{"gitId":"-"},"content":"        assert startTime !\u003d null;"},{"lineNumber":1504,"author":{"gitId":"-"},"content":"        assert endTime !\u003d null;"},{"lineNumber":1505,"author":{"gitId":"-"},"content":"        assert startTime.toEpochMilli() \u003c endTime.toEpochMilli();"},{"lineNumber":1506,"author":{"gitId":"-"},"content":"        return usageStatisticsLogic.calculateEntitiesStatisticsForTimeRange(startTime, endTime);"},{"lineNumber":1507,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1508,"author":{"gitId":"-"},"content":""},{"lineNumber":1509,"author":{"gitId":"-"},"content":"    public void createUsageStatistics(UsageStatisticsAttributes attributes)"},{"lineNumber":1510,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":1511,"author":{"gitId":"-"},"content":"        usageStatisticsLogic.createUsageStatistics(attributes);"},{"lineNumber":1512,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1513,"author":{"gitId":"-"},"content":""},{"lineNumber":1514,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":1400,"samuelfangjw":114}},{"path":"src/main/java/teammates/logic/api/LogsProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.QueryLogsResults;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.GeneralLogEntry;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogEvent;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.QueryLogsParams;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.GoogleCloudLoggingService;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.LocalLoggingService;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.LogService;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Handles operations related to logs reading/writing."},{"lineNumber":19,"author":{"gitId":"-"},"content":" *"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * \u003cp\u003eNote that while this interface should support writing logs, most of the application/system logs"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * should be written via the standard Logger class."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogsProcessor {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final LogsProcessor instance \u003d new LogsProcessor();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final LogService service;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    LogsProcessor() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            service \u003d new LocalLoggingService();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            service \u003d new GoogleCloudLoggingService();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static LogsProcessor inst() {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Gets the list of recent error- or higher level logs."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return service.getRecentErrorLogs();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Queries and retrieves logs with given parameters."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public QueryLogsResults queryLogs(QueryLogsParams queryLogsParams) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return service.queryLogs(queryLogsParams);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a feedback session log."},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        service.createFeedbackSessionLog(courseId, email, fsName, fslType);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Gets the feedback session logs as filtered by the given parameters."},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param email Can be null"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            long startTime, long endTime, String fsName) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return service.getFeedbackSessionLogs(courseId, email, startTime, endTime, fsName);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Gets the number of logs for the event type and extra filters."},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int getNumberOfLogsForEvent(Instant startTime, Instant endTime, LogEvent logEvent, String extraFilters) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int total \u003d 0;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        long logStartTime \u003d startTime.toEpochMilli();"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        while (true) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            QueryLogsParams logsParams \u003d QueryLogsParams.builder(logStartTime, endTime.toEpochMilli())"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    .withLogEvent(logEvent.name())"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    .withExtraFilters(extraFilters)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    .withOrder(\"asc\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    .withPageSize(300)"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    .build();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            QueryLogsResults logFetchResults \u003d queryLogs(logsParams);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            List\u003cGeneralLogEntry\u003e logs \u003d logFetchResults.getLogEntries();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            total +\u003d logs.size();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (logFetchResults.getHasNextPage()) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logStartTime \u003d logs.get(logs.size() - 1).getTimestamp();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return total;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":93}},{"path":"src/main/java/teammates/logic/api/RecaptchaVerifier.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.EmptyRecaptchaService;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.GoogleRecaptchaService;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.RecaptchaService;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Used to handle the verification of the user\u0027s reCAPTCHA response."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class RecaptchaVerifier {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final RecaptchaVerifier instance \u003d new RecaptchaVerifier();"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final RecaptchaService service;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    RecaptchaVerifier() {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            service \u003d new EmptyRecaptchaService();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            service \u003d new GoogleRecaptchaService(Config.CAPTCHA_SECRET_KEY);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static RecaptchaVerifier inst() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if the {@code captchaResponse} token is verified successfully."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean isVerificationSuccessful(String captchaResponse) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return service.isVerificationSuccessful(captchaResponse);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":32}},{"path":"src/main/java/teammates/logic/api/TaskQueuer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ParamsNames;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.TaskQueue;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.GoogleCloudTasksService;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.LocalTaskQueueService;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.TaskQueueService;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.ui.request.FeedbackSessionRemindRequest;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.ui.request.SendEmailRequest;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Allows for adding specific type of tasks to the task queue."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TaskQueuer {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final TaskQueuer instance \u003d new TaskQueuer();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final TaskQueueService service;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    TaskQueuer() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            service \u003d new LocalTaskQueueService();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            service \u003d new GoogleCloudTasksService();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static TaskQueuer inst() {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // The following methods are facades to the actual logic for adding tasks to the queue."},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Using this method, the actual logic can still be black-boxed"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // while at the same time allowing this API to be mocked during test."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private void addTask(String queueName, String workerUrl, Map\u003cString, String\u003e paramMap, Object requestBody) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addDeferredTask(queueName, workerUrl, paramMap, requestBody, 0);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void addDeferredTask(String queueName, String workerUrl, Map\u003cString, String\u003e paramMap, Object requestBody,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                         long countdownTime) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        TaskWrapper task \u003d new TaskWrapper(queueName, workerUrl, paramMap, requestBody);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        service.addDeferredTask(task, countdownTime);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // The following methods are the actual API methods to be used by the client classes"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Schedules for feedback session reminders (i.e. student has not submitted responses yet)"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * for the specified feedback session."},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionReminders(String courseId, String feedbackSessionName,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                                                 String googleIdOfRequestingInstructor) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_ID, googleIdOfRequestingInstructor);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Schedules for feedback session reminders (i.e. student/instructor has not submitted responses yet)"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * for the specified feedback session for the specified group of users."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param usersToRemind the group of users to send the reminders to"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param requestingInstructorId the ID of the instructor who sends the reminder"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionRemindersForParticularUsers(String courseId, String feedbackSessionName,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                                                                   String[] usersToRemind,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                                                   String requestingInstructorId) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        FeedbackSessionRemindRequest remindRequest \u003d"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new FeedbackSessionRemindRequest(courseId, feedbackSessionName, requestingInstructorId, usersToRemind);"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL, new HashMap\u003c\u003e(), remindRequest);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Schedules for feedback session published email to be sent."},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionPublishedEmail(String courseId, String feedbackSessionName) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Schedules for feedback session publication reminders"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * for the specified feedback session for the specified group of users."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @param usersToEmail the group of users to send the reminders to"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param requestingInstructorId the ID of the instructor who sends the reminder"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionResendPublishedEmail(String courseId, String feedbackSessionName,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            String[] usersToEmail, String requestingInstructorId) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        FeedbackSessionRemindRequest remindRequest \u003d"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new FeedbackSessionRemindRequest(courseId, feedbackSessionName, requestingInstructorId, usersToEmail);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL, new HashMap\u003c\u003e(), remindRequest);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Schedules for feedback session unpublished email to be sent."},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionUnpublishedEmail(String courseId, String feedbackSessionName) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Schedules for course registration to be sent to the specified instructor."},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param inviterGoogleId googleId of instructor or administrator who sends the invitation"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param courseId the target course ID"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param instructorEmail the email address of the invited instructor"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void scheduleCourseRegistrationInviteToInstructor(String inviterGoogleId,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String instructorEmail, String courseId, boolean isRejoining) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (inviterGoogleId !\u003d null) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            paramMap.put(ParamsNames.INVITER_ID, inviterGoogleId);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_EMAIL, instructorEmail);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.IS_INSTRUCTOR_REJOINING, String.valueOf(isRejoining));"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                TaskQueue.INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Schedules for course registration to be sent to the specified student."},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @param courseId the target course ID"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @param studentEmail the email address of the student"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void scheduleCourseRegistrationInviteToStudent(String courseId, String studentEmail, boolean isRejoining) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.STUDENT_EMAIL, studentEmail);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.IS_STUDENT_REJOINING, String.valueOf(isRejoining));"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                TaskQueue.STUDENT_COURSE_JOIN_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Schedules for the given list of emails to be sent."},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @param emails the list of emails to be sent"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void scheduleEmailsForSending(List\u003cEmailWrapper\u003e emails) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (emails.isEmpty()) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // Equally spread out the emails to be sent over 1 hour"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // Sets interval to a maximum of 5 seconds if the interval is too large"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        int oneHourInMillis \u003d 60 * 60 * 1000;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        int emailIntervalMillis \u003d Math.min(5000, oneHourInMillis / emails.size());"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        int numberOfEmailsSent \u003d 0;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        for (EmailWrapper email : emails) {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            long emailDelayTimer \u003d (long) numberOfEmailsSent * (long) emailIntervalMillis;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            scheduleEmailForSending(email, emailDelayTimer);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            numberOfEmailsSent++;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Schedules for the search indexing of the instructor identified by {@code courseId} and {@code email}."},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the instructor"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @param email the email of the instructor"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void scheduleInstructorForSearchIndexing(String courseId, String email) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.SEARCH_INDEXING_QUEUE_NAME, TaskQueue.INSTRUCTOR_SEARCH_INDEXING_WORKER_URL,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                paramMap, null);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"     * Schedules for the search indexing of the account request identified by {@code email} and {@code institute}."},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"     * @param email the email associated with the account request"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"     * @param institute the institute associated with the account request"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"    public void scheduleAccountRequestForSearchIndexing(String email, String institute) {"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"        addTask(TaskQueue.SEARCH_INDEXING_QUEUE_NAME, TaskQueue.ACCOUNT_REQUEST_SEARCH_INDEXING_WORKER_URL,"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"                paramMap, null);"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Schedules for the search indexing of the student identified by {@code courseId} and {@code email}."},{"lineNumber":234,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the student"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * @param email the email of the student"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void scheduleStudentForSearchIndexing(String courseId, String email) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.STUDENT_EMAIL, email);"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.SEARCH_INDEXING_QUEUE_NAME, TaskQueue.STUDENT_SEARCH_INDEXING_WORKER_URL,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                paramMap, null);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"    private void scheduleEmailForSending(EmailWrapper email, long emailDelayTimer) {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            SendEmailRequest request \u003d new SendEmailRequest(email);"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"            addDeferredTask(TaskQueue.SEND_EMAIL_QUEUE_NAME, TaskQueue.SEND_EMAIL_WORKER_URL,"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                            new HashMap\u003c\u003e(), request, emailDelayTimer);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            String emailSubject \u003d email.getSubject();"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            String emailSenderName \u003d email.getSenderName();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            String emailSender \u003d email.getSenderEmail();"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            String emailReceiver \u003d email.getRecipient();"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            String emailReplyToAddress \u003d email.getReplyTo();"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"            log.severe(\"Error when adding email to task queue: \" + e.getMessage() + \"\\n\""},{"lineNumber":261,"author":{"gitId":"-"},"content":"                       + \"Email sender: \" + emailSender + \"\\n\""},{"lineNumber":262,"author":{"gitId":"-"},"content":"                       + \"Email sender name: \" + emailSenderName + \"\\n\""},{"lineNumber":263,"author":{"gitId":"-"},"content":"                       + \"Email receiver: \" + emailReceiver + \"\\n\""},{"lineNumber":264,"author":{"gitId":"-"},"content":"                       + \"Email subject: \" + emailSubject + \"\\n\""},{"lineNumber":265,"author":{"gitId":"-"},"content":"                       + \"Email reply-to address: \" + emailReplyToAddress);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":251,"samuelfangjw":15}},{"path":"src/main/java/teammates/logic/core/AccountRequestsLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.api.AccountRequestsDb;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Handles the logic related to account requests."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public final class AccountRequestsLogic {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final AccountRequestsLogic instance \u003d new AccountRequestsLogic();"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsDb accountRequestsDb \u003d AccountRequestsDb.inst();"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequestsLogic() {"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        // prevent initialization"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public static AccountRequestsLogic inst() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        return instance;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    void initLogicDependencies() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        // No dependency to other logic class"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Updates an account request."},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * @return the updated account request"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityDoesNotExistException if the account request to update does not exist"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes updateAccountRequest(AccountRequestAttributes.UpdateOptions updateOptions)"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.updateAccountRequest(updateOptions);"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an account request."},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * @return the created account request"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityAlreadyExistsException if the account request to create already exists"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes createAccountRequest(AccountRequestAttributes accountRequest)"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.createEntity(accountRequest);"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes the account request associated with the email address and institute."},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003eFails silently if the account request doesn\u0027t exist.\u003c/p\u003e"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(email, institute);"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by email address and institute."},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.getAccountRequest(email, institute);"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by unique constraint {@code registrationKey}."},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequestForRegistrationKey(String registrationKey) {"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.getAccountRequestForRegistrationKey(registrationKey);"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"     * Creates or updates search document for the given account request."},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"     * @param accountRequest the account request to be put into documents"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    public void putDocument(AccountRequestAttributes accountRequest) throws SearchServiceException {"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.putDocument(accountRequest);"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"     * Searches for account requests in the whole system."},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"     * @return A list of {@link AccountRequestAttributes} or {@code null} if no match found."},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cAccountRequestAttributes\u003e searchAccountRequestsInWholeSystem(String queryString)"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"            throws SearchServiceException {"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.searchAccountRequestsInWholeSystem(queryString);"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Gets the number of account requests created within a specified time range."},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    int getNumAccountRequestsByTimeRange(Instant startTime, Instant endTime) {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return accountRequestsDb.getNumAccountRequestsByTimeRange(startTime, endTime);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"-":8,"samuelfangjw":103}},{"path":"src/main/java/teammates/logic/core/AccountsLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.exception.InstructorUpdateException;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.storage.api.AccountsDb;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Handles operations related to accounts."},{"lineNumber":16,"author":{"gitId":"-"},"content":" *"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * @see AccountAttributes"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * @see AccountsDb"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public final class AccountsLogic {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final AccountsLogic instance \u003d new AccountsLogic();"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AccountsDb accountsDb \u003d AccountsDb.inst();"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ProfilesLogic profilesLogic;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private CoursesLogic coursesLogic;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private InstructorsLogic instructorsLogic;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private StudentsLogic studentsLogic;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private AccountsLogic() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static AccountsLogic inst() {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void initLogicDependencies() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        profilesLogic \u003d ProfilesLogic.inst();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an account."},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the created account"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the account is not valid"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the account already exists in the database."},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    AccountAttributes createAccount(AccountAttributes accountData)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return accountsDb.createEntity(accountData);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Gets an account."},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public AccountAttributes getAccount(String googleId) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return accountsDb.getAccount(googleId);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a list of accounts with email matching {@code email}."},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cAccountAttributes\u003e getAccountsForEmail(String email) {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return accountsDb.getAccountsForEmail(email);"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the given account exists and is an instructor."},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isAccountAnInstructor(String googleId) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AccountAttributes a \u003d accountsDb.getAccount(googleId);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return a !\u003d null \u0026\u0026 a.isInstructor();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Joins the user as a student."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public StudentAttributes joinCourseForStudent(String registrationKey, String googleId)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d validateStudentJoinRequest(registrationKey, googleId);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Register the student"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        student.setGoogleId(googleId);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            studentsLogic.updateStudentCascade("},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    StudentAttributes.updateOptionsBuilder(student.getCourse(), student.getEmail())"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                            .withGoogleId(student.getGoogleId())"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                            .build());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (EntityDoesNotExistException e) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assert false : \"Student disappeared while trying to register\";"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (accountsDb.getAccount(googleId) \u003d\u003d null) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            createStudentAccount(student);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return student;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Joins the user as an instructor and sets the institute if it is not null."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * If the given institute is null, the instructor is given the institute of an existing instructor of the same course."},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public InstructorAttributes joinCourseForInstructor(String key, String googleId)"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d validateInstructorJoinRequest(key, googleId);"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Register the instructor"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        instructor.setGoogleId(googleId);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            instructorsLogic.updateInstructorByEmail("},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    InstructorAttributes.updateOptionsWithEmailBuilder(instructor.getCourseId(), instructor.getEmail())"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                            .withGoogleId(instructor.getGoogleId())"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                            .build());"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } catch (EntityDoesNotExistException e) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            assert false : \"Instructor disappeared while trying to register\";"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (InstructorUpdateException e) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            assert false;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AccountAttributes account \u003d accountsDb.getAccount(googleId);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String instituteToSave \u003d coursesLogic.getCourseInstitute(instructor.getCourseId());"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (account \u003d\u003d null) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                createAccount(AccountAttributes.builder(googleId)"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                        .withName(instructor.getName())"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                        .withEmail(instructor.getEmail())"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                        .withInstitute(instituteToSave)"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                        .withIsInstructor(true)"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            } catch (EntityAlreadyExistsException e) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                assert false : \"Account already exists.\";"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            makeAccountInstructor(googleId);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // Update the googleId of the student entity for the instructor which was created from sample data."},{"lineNumber":145,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d studentsLogic.getStudentForEmail(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (student !\u003d null) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            student.setGoogleId(googleId);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            studentsLogic.updateStudentCascade("},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    StudentAttributes.updateOptionsBuilder(student.getCourse(), student.getEmail())"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                            .withGoogleId(student.getGoogleId())"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                            .build());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return instructor;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private InstructorAttributes validateInstructorJoinRequest(String registrationKey, String googleId)"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        InstructorAttributes instructorForKey \u003d instructorsLogic.getInstructorForRegistrationKey(registrationKey);"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (instructorForKey \u003d\u003d null) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new EntityDoesNotExistException(\"No instructor with given registration key: \" + registrationKey);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (instructorForKey.isRegistered()) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            if (instructorForKey.getGoogleId().equals(googleId)) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                AccountAttributes existingAccount \u003d accountsDb.getAccount(googleId);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                if (existingAccount !\u003d null \u0026\u0026 existingAccount.isInstructor()) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    throw new EntityAlreadyExistsException(\"Instructor has already joined course\");"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                throw new EntityAlreadyExistsException(\"Instructor has already joined course\");"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            // Check if this Google ID has already joined this course"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            InstructorAttributes existingInstructor \u003d"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    instructorsLogic.getInstructorForGoogleId(instructorForKey.getCourseId(), googleId);"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"            if (existingInstructor !\u003d null) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                throw new EntityAlreadyExistsException(\"Instructor has already joined course\");"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return instructorForKey;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private StudentAttributes validateStudentJoinRequest(String registrationKey, String googleId)"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        StudentAttributes studentRole \u003d studentsLogic.getStudentForRegistrationKey(registrationKey);"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (studentRole \u003d\u003d null) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new EntityDoesNotExistException(\"No student with given registration key: \" + registrationKey);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (studentRole.isRegistered()) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new EntityAlreadyExistsException(\"Student has already joined course\");"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // Check if this Google ID has already joined this course"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        StudentAttributes existingStudent \u003d"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentForCourseIdAndGoogleId(studentRole.getCourse(), googleId);"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"        if (existingStudent !\u003d null) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw new EntityAlreadyExistsException(\"Student has already joined course\");"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return studentRole;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Downgrades an instructor account to student account."},{"lineNumber":213,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade deletes all instructors associated with the account."},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void downgradeInstructorToStudentCascade(String googleId) throws EntityDoesNotExistException {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        instructorsLogic.deleteInstructorsForGoogleIdCascade(googleId);"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            accountsDb.updateAccount("},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    AccountAttributes.updateOptionsBuilder(googleId)"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                            .withIsInstructor(false)"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                            .build()"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } catch (InvalidParametersException e) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            assert false : \"Invalid account data detected unexpectedly \""},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    + \"while removing instruction privileges from account \" + googleId + \": \" + e.getMessage();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Makes an account as an instructor account."},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    void makeAccountInstructor(String googleId) throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        accountsDb.updateAccount("},{"lineNumber":236,"author":{"gitId":"-"},"content":"                AccountAttributes.updateOptionsBuilder(googleId)"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                        .withIsInstructor(true)"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                        .build()"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes both instructor and student privileges, as well as the account and associated student profile."},{"lineNumber":244,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * \u003cul\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * \u003cli\u003eFails silently if no such account.\u003c/li\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void deleteAccountCascade(String googleId) {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        if (accountsDb.getAccount(googleId) \u003d\u003d null) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        profilesLogic.deleteStudentProfile(googleId);"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // to prevent orphan course"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructorsToDelete \u003d"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForGoogleId(googleId, false);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructorToDelete : instructorsToDelete) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            if (instructorsLogic.getInstructorsForCourse(instructorToDelete.getCourseId()).size() \u003c\u003d 1) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                // the instructor is the last instructor in the course"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                coursesLogic.deleteCourseCascade(instructorToDelete.getCourseId());"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        instructorsLogic.deleteInstructorsForGoogleIdCascade(googleId);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        studentsLogic.deleteStudentsForGoogleIdCascade(googleId);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        accountsDb.deleteAccount(googleId);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Creates a student account."},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    private void createStudentAccount(StudentAttributes student)"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"        AccountAttributes account \u003d AccountAttributes.builder(student.getGoogleId())"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                .withEmail(student.getEmail())"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                .withName(student.getName())"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                .withIsInstructor(false)"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                .withInstitute(coursesLogic.getCourseInstitute(student.getCourse()))"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        accountsDb.createEntity(account);"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":279,"samuelfangjw":8}},{"path":"src/main/java/teammates/logic/core/DataBundleLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collection;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.AttributesDeletionQuery;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.InstructorPrivileges;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.EntityAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.api.AccountRequestsDb;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.storage.api.AccountsDb;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.storage.api.CoursesDb;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackQuestionsDb;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackResponseCommentsDb;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackResponsesDb;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackSessionsDb;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.storage.api.InstructorsDb;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.storage.api.ProfilesDb;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.storage.api.StudentsDb;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Handles operations related to data bundles."},{"lineNumber":41,"author":{"gitId":"-"},"content":" *"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * @see DataBundle"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public final class DataBundleLogic {"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final DataBundleLogic instance \u003d new DataBundleLogic();"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final AccountsDb accountsDb \u003d AccountsDb.inst();"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsDb accountRequestsDb \u003d AccountRequestsDb.inst();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final ProfilesDb profilesDb \u003d ProfilesDb.inst();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final CoursesDb coursesDb \u003d CoursesDb.inst();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final StudentsDb studentsDb \u003d StudentsDb.inst();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final InstructorsDb instructorsDb \u003d InstructorsDb.inst();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final FeedbackSessionsDb fbDb \u003d FeedbackSessionsDb.inst();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final FeedbackQuestionsDb fqDb \u003d FeedbackQuestionsDb.inst();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final FeedbackResponsesDb frDb \u003d FeedbackResponsesDb.inst();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final FeedbackResponseCommentsDb fcDb \u003d FeedbackResponseCommentsDb.inst();"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private DataBundleLogic() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static DataBundleLogic inst() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Persists data in the given {@link DataBundle} to the database, including"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     * accounts, account requests, courses, instructors, students, sessions, questions, responses, and comments."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAccounts are generated for students and instructors with Google IDs"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if the corresponding accounts are not found in the data bundle."},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * For question ID injection in responses and comments to work properly, all questions"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * referenced by responses and comments must be included in the data bundle."},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if invalid data is encountered."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public DataBundle persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (dataBundle \u003d\u003d null) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new InvalidParametersException(\"Null data bundle\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cAccountAttributes\u003e accounts \u003d dataBundle.accounts.values();"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        Collection\u003cAccountRequestAttributes\u003e accountRequests \u003d dataBundle.accountRequests.values();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Collection\u003cStudentProfileAttributes\u003e profiles \u003d dataBundle.profiles.values();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cCourseAttributes\u003e courses \u003d dataBundle.courses.values();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Collection\u003cInstructorAttributes\u003e instructors \u003d dataBundle.instructors.values();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cStudentAttributes\u003e students \u003d dataBundle.students.values();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackSessionAttributes\u003e sessions \u003d dataBundle.feedbackSessions.values();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackQuestionAttributes\u003e questions \u003d dataBundle.feedbackQuestions.values();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackResponseAttributes\u003e responses \u003d dataBundle.feedbackResponses.values();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackResponseCommentAttributes\u003e responseComments \u003d dataBundle.feedbackResponseComments.values();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // For ensuring only one account per Google ID is created"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Map\u003cString, AccountAttributes\u003e googleIdAccountMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        for (AccountAttributes account : accounts) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            googleIdAccountMap.put(account.getGoogleId(), account);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        processInstructors(instructors, googleIdAccountMap);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        processStudents(students, googleIdAccountMap);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        processQuestions(questions);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cAccountAttributes\u003e newAccounts \u003d accountsDb.putEntities(googleIdAccountMap.values());"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountRequestAttributes\u003e newAccountRequests \u003d accountRequestsDb.putEntities(accountRequests);"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cStudentProfileAttributes\u003e newProfiles \u003d profilesDb.putEntities(profiles);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cCourseAttributes\u003e newCourses \u003d coursesDb.putEntities(courses);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e newInstructors \u003d instructorsDb.putEntities(instructors);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e newStudents \u003d studentsDb.putEntities(students);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e newFeedbackSessions \u003d fbDb.putEntities(sessions);"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e createdQuestions \u003d fqDb.putEntities(questions);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        injectRealIds(responses, responseComments, createdQuestions);"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e newFeedbackResponses \u003d frDb.putEntities(responses);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseCommentAttributes\u003e newFeedbackResponseComments \u003d fcDb.putEntities(responseComments);"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newAccounts, dataBundle.accounts);"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        updateDataBundleValue(newAccountRequests, dataBundle.accountRequests);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newProfiles, dataBundle.profiles);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newCourses, dataBundle.courses);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newInstructors, dataBundle.instructors);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newStudents, dataBundle.students);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newFeedbackSessions, dataBundle.feedbackSessions);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        updateDataBundleValue(createdQuestions, dataBundle.feedbackQuestions);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newFeedbackResponses, dataBundle.feedbackResponses);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newFeedbackResponseComments, dataBundle.feedbackResponseComments);"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return dataBundle;"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private \u003cT extends EntityAttributes\u003c?\u003e\u003e void updateDataBundleValue(List\u003cT\u003e newValues, Map\u003cString, T\u003e oldValues) {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Map\u003cT, Integer\u003e newValuesMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Map\u003cString, T\u003e values \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c newValues.size(); i++) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            newValuesMap.put(newValues.get(i), i);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, T\u003e entry : oldValues.entrySet()) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String key \u003d entry.getKey();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            T value \u003d entry.getValue();"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"            if (newValuesMap.containsKey(value)) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                int index \u003d newValuesMap.get(value);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                values.put(key, newValues.get(index));"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        oldValues.clear();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        oldValues.putAll(values);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Creates document for entities that have document, i.e. searchable."},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void putDocuments(DataBundle dataBundle) throws SearchServiceException {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // query the entity in db first to get the actual data and create document for actual entity"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Map\u003cString, StudentAttributes\u003e students \u003d dataBundle.students;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students.values()) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            StudentAttributes studentInDb \u003d studentsDb.getStudentForEmail(student.getCourse(), student.getEmail());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            studentsDb.putDocument(studentInDb);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Map\u003cString, InstructorAttributes\u003e instructors \u003d dataBundle.instructors;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors.values()) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            InstructorAttributes instructorInDb \u003d"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    instructorsDb.getInstructorForEmail(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            instructorsDb.putDocument(instructorInDb);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"        Map\u003cString, AccountRequestAttributes\u003e accountRequests \u003d dataBundle.accountRequests;"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        for (AccountRequestAttributes accountRequest : accountRequests.values()) {"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes accountRequestInDb \u003d"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"                    accountRequestsDb.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestsDb.putDocument(accountRequestInDb);"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void processInstructors("},{"lineNumber":184,"author":{"gitId":"-"},"content":"            Collection\u003cInstructorAttributes\u003e instructors, Map\u003cString, AccountAttributes\u003e googleIdAccountMap) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            validateInstructorPrivileges(instructor);"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"            // create adhoc account to maintain data integrity"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (!StringHelper.isEmpty(instructor.getGoogleId())) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                googleIdAccountMap.putIfAbsent(instructor.getGoogleId(), makeAccount(instructor));"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private void processStudents("},{"lineNumber":196,"author":{"gitId":"-"},"content":"            Collection\u003cStudentAttributes\u003e students, Map\u003cString, AccountAttributes\u003e googleIdAccountMap) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            populateNullSection(student);"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"            // create adhoc account to maintain data integrity"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (!StringHelper.isEmpty(student.getGoogleId())) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                googleIdAccountMap.putIfAbsent(student.getGoogleId(), makeAccount(student));"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private void processQuestions(Collection\u003cFeedbackQuestionAttributes\u003e questions) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes question : questions) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            question.removeIrrelevantVisibilityOptions();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private void injectRealIds("},{"lineNumber":214,"author":{"gitId":"-"},"content":"            Collection\u003cFeedbackResponseAttributes\u003e responses, Collection\u003cFeedbackResponseCommentAttributes\u003e responseComments,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            List\u003cFeedbackQuestionAttributes\u003e createdQuestions) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e questionIdMap \u003d makeQuestionIdMap(createdQuestions);"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"        injectRealIdsIntoResponses(responses, questionIdMap);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        injectRealIdsIntoResponseComments(responseComments, questionIdMap);"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private Map\u003cString, String\u003e makeQuestionIdMap(List\u003cFeedbackQuestionAttributes\u003e createdQuestions) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e questionIdMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes createdQuestion : createdQuestions) {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            String sessionKey \u003d makeSessionKey(createdQuestion.getFeedbackSessionName(), createdQuestion.getCourseId());"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            String questionKey \u003d makeQuestionKey(sessionKey, createdQuestion.getQuestionNumber());"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            questionIdMap.put(questionKey, createdQuestion.getId());"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return questionIdMap;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * This method is necessary to generate the feedbackQuestionId of the"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * question the response is for.\u003cbr\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Normally, the ID is already generated on creation,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * but the json file does not contain the actual response ID. \u003cbr\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Therefore the question number corresponding to the created response"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * should be inserted in the json file in place of the actual response ID.\u003cbr\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * This method will then generate the correct ID and replace the field."},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    private void injectRealIdsIntoResponses(Collection\u003cFeedbackResponseAttributes\u003e responses,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            Map\u003cString, String\u003e questionIdMap) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responses) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            int questionNumber;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                questionNumber \u003d Integer.parseInt(response.getFeedbackQuestionId());"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                // question ID already injected"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            String sessionKey \u003d makeSessionKey(response.getFeedbackSessionName(), response.getCourseId());"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            String questionKey \u003d makeQuestionKey(sessionKey, questionNumber);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            response.setFeedbackQuestionId(questionIdMap.get(questionKey));"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * This method is necessary to generate the feedbackQuestionId"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * and feedbackResponseId of the question and response the comment is for.\u003cbr\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * Normally, the ID is already generated on creation,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * but the json file does not contain the actual response ID. \u003cbr\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * Therefore the question number and questionNumber%giverEmail%recipient"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * corresponding to the created comment should be inserted in the json"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * file in place of the actual ID.\u003cbr\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * This method will then generate the correct ID and replace the field."},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    private void injectRealIdsIntoResponseComments(Collection\u003cFeedbackResponseCommentAttributes\u003e responseComments,"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            Map\u003cString, String\u003e questionIdMap) {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        for (FeedbackResponseCommentAttributes comment : responseComments) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            int questionNumber;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                questionNumber \u003d Integer.parseInt(comment.getFeedbackQuestionId());"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                // question ID already injected"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            String sessionKey \u003d makeSessionKey(comment.getFeedbackSessionName(), comment.getCourseId());"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            String questionKey \u003d makeQuestionKey(sessionKey, questionNumber);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            comment.setFeedbackQuestionId(questionIdMap.get(questionKey));"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"            // format of feedbackResponseId: questionNumber%giverEmail%recipient"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            String[] responseIdParam \u003d comment.getFeedbackResponseId().split(\"%\", 3);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            comment.setFeedbackResponseId(comment.getFeedbackQuestionId() + \"%\" + responseIdParam[1]"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    + \"%\" + responseIdParam[2]);"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * Checks if the role of {@code instructor} matches its privileges."},{"lineNumber":290,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * @param instructor"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     *            the {@link InstructorAttributes} of an instructor, cannot be"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     *            {@code null}"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    private void validateInstructorPrivileges(InstructorAttributes instructor) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"        if (instructor.getRole() \u003d\u003d null) {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"        InstructorPrivileges privileges \u003d instructor.getPrivileges();"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"        switch (instructor.getRole()) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER:"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            assert privileges.hasCoownerPrivileges();"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_MANAGER:"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            assert privileges.hasManagerPrivileges();"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_OBSERVER:"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            assert privileges.hasObserverPrivileges();"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_TUTOR:"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            assert privileges.hasTutorPrivileges();"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_CUSTOM:"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            assert false : \"Invalid instructor permission role name\";"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"    private void populateNullSection(StudentAttributes student) {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        student.setSection(student.getSection() \u003d\u003d null ? \"None\" : student.getSection());"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    private AccountAttributes makeAccount(InstructorAttributes instructor) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        return AccountAttributes.builder(instructor.getGoogleId())"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                .withName(instructor.getName())"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                .withEmail(instructor.getEmail())"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                .withInstitute(\"TEAMMATES Test Institute 1\")"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                .withIsInstructor(true)"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    private AccountAttributes makeAccount(StudentAttributes student) {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        return AccountAttributes.builder(student.getGoogleId())"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .withName(student.getName())"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                .withEmail(student.getEmail())"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                .withInstitute(\"TEAMMATES Test Institute 1\")"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                .withIsInstructor(false)"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"    private String makeSessionKey(String feedbackSessionName, String courseId) {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        return feedbackSessionName + \"%\" + courseId;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"    private String makeQuestionKey(String sessionKey, int questionNumber) {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        return makeQuestionKey(sessionKey, String.valueOf(questionNumber));"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String makeQuestionKey(String sessionKey, String questionNumber) {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        return sessionKey + \"%\" + questionNumber;"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":365,"author":{"gitId":"-"},"content":"     * Removes the items in the data bundle from the database."},{"lineNumber":366,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"        // Questions and responses will be deleted automatically."},{"lineNumber":370,"author":{"gitId":"-"},"content":"        // We don\u0027t attempt to delete them again, to save time."},{"lineNumber":371,"author":{"gitId":"-"},"content":"        deleteCourses(dataBundle.courses.values());"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        dataBundle.accounts.values().forEach(account -\u003e {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            accountsDb.deleteAccount(account.getGoogleId());"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        dataBundle.profiles.values().forEach(profile -\u003e {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            profilesDb.deleteStudentProfile(profile.getGoogleId());"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":379,"author":{"gitId":"samuelfangjw"},"content":"        dataBundle.accountRequests.values().forEach(accountRequest -\u003e {"},{"lineNumber":380,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestsDb.deleteAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":381,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"    private void deleteCourses(Collection\u003cCourseAttributes\u003e courses) {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        List\u003cString\u003e courseIds \u003d new ArrayList\u003c\u003e();"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        for (CourseAttributes course : courses) {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            courseIds.add(course.getId());"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        if (!courseIds.isEmpty()) {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            courseIds.forEach(courseId -\u003e {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                AttributesDeletionQuery query \u003d AttributesDeletionQuery.builder()"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                        .withCourseId(courseId)"},{"lineNumber":393,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                fcDb.deleteFeedbackResponseComments(query);"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                frDb.deleteFeedbackResponses(query);"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                fqDb.deleteFeedbackQuestions(query);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                fbDb.deleteFeedbackSessions(query);"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                studentsDb.deleteStudents(query);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                instructorsDb.deleteInstructors(query);"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"                coursesDb.deleteCourse(courseId);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":389,"samuelfangjw":17}},{"path":"src/main/java/teammates/logic/external/EmailSenderService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.exception.EmailSendingException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * An email sender interface used by services for sending emails."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface EmailSenderService {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses the {@code wrapper} email object to specific implementations of email object"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * used by the service."},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Object parseToEmail(EmailWrapper wrapper);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Sends the email packaged as a {@code wrapper}."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    EmailSendingStatus sendEmail(EmailWrapper wrapper) throws EmailSendingException;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":22}},{"path":"src/main/java/teammates/logic/external/EmptyEmailService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Email sender service which will not send any email."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmptyEmailService implements EmailSenderService {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public EmailWrapper parseToEmail(EmailWrapper wrapper) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return wrapper;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper wrapper) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new EmailSendingStatus(HttpStatus.SC_OK, null);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":22}},{"path":"src/main/java/teammates/logic/external/EmptyRecaptchaService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Service that bypasses reCAPTCHA verification, i.e. always returning successful verification."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class EmptyRecaptchaService implements RecaptchaService {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public boolean isVerificationSuccessful(String captchaResponse) {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":12}},{"path":"src/main/java/teammates/logic/external/FileStorageService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A binary file storage interface used for managing binary files such as profile pictures."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public interface FileStorageService {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Returns true if a file with the specified {@code fileKey} exists in the storage."},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    boolean doesFileExist(String fileKey);"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets the content of the file with the specified {@code fileKey} as bytes."},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    byte[] getContent(String fileKey);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Deletes the file with the specified {@code fileKey}."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void delete(String fileKey);"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a file with the specified {@code contentBytes} as content and with type {@code contentType}."},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void create(String fileKey, byte[] contentBytes, String contentType);"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":27}},{"path":"src/main/java/teammates/logic/external/GoogleCloudLoggingService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.api.gax.paging.Page;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.LogLine;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.RequestLog;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.SourceReference;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.LogEntry;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Logging;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Logging.EntryListOption;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Logging.SortingField;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Logging.SortingOrder;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.LoggingOptions;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Payload;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Severity;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.google.protobuf.Any;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import com.google.protobuf.InvalidProtocolBufferException;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import com.google.protobuf.util.JsonFormat;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.QueryLogsResults;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.FeedbackSessionAuditLogDetails;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.GeneralLogEntry;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogDetails;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogEvent;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogSeverity;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.QueryLogsParams;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.SourceLocation;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Holds functions for operations related to Google Cloud Logging."},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class GoogleCloudLoggingService implements LogService {"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String RESOURCE_TYPE_GAE_APP \u003d \"gae_app\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String REQUEST_LOG_NAME \u003d \"appengine.googleapis.com%2Frequest_log\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String STDOUT_LOG_NAME \u003d \"stdout\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String STDERR_LOG_NAME \u003d \"stderr\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String ASCENDING_ORDER \u003d \"asc\";"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TRACE_PREFIX \u003d String.format(\"projects/%s/traces/\", Config.APP_ID);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Instant endTime \u003d Instant.now();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Sets the range to 6 minutes to slightly overlap the 5 minute email timer"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        long queryRange \u003d 1000 * 60 * 6;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Instant startTime \u003d endTime.minusMillis(queryRange);"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        QueryLogsParams queryLogsParams \u003d QueryLogsParams.builder(startTime.toEpochMilli(), endTime.toEpochMilli())"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withMinSeverity(LogSeverity.ERROR)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        LogSearchParams logSearchParams \u003d LogSearchParams.from(queryLogsParams)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .addLogName(REQUEST_LOG_NAME)"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .setResourceType(RESOURCE_TYPE_GAE_APP);"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cLogEntry\u003e logEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cErrorLogEntry\u003e errorLogs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Page\u003cLogEntry\u003e entries \u003d getLogEntries(logSearchParams, 0);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (LogEntry entry : entries.iterateAll()) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logEntries.add(entry);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (LogEntry logEntry : logEntries) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Any entry \u003d (Any) logEntry.getPayload().getData();"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"            JsonFormat.TypeRegistry tr \u003d JsonFormat.TypeRegistry.newBuilder()"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    .add(RequestLog.getDescriptor())"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    .add(LogLine.getDescriptor())"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    .add(com.google.appengine.logging.v1.SourceLocation.getDescriptor())"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    .add(SourceReference.getDescriptor())"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    .build();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"            List\u003cLogLine\u003e logLines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                String logContentAsJson \u003d JsonFormat.printer().usingTypeRegistry(tr).print(entry);"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                RequestLog.Builder builder \u003d RequestLog.newBuilder();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                JsonFormat.parser().ignoringUnknownFields().usingTypeRegistry(tr).merge(logContentAsJson, builder);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                RequestLog reconvertedLog \u003d builder.build();"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                logLines \u003d reconvertedLog.getLineList();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            } catch (InvalidProtocolBufferException e) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                // TODO"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"            String trace \u003d logEntry.getTrace();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            if (trace !\u003d null) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                trace \u003d trace.replace(TRACE_PREFIX, \"\");"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"            for (LogLine line : logLines) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                if (line.getSeverity().getNumber() \u003e\u003d com.google.logging.type.LogSeverity.ERROR.getNumber()) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    errorLogs.add(new ErrorLogEntry("},{"lineNumber":106,"author":{"gitId":"-"},"content":"                            line.getLogMessage().replaceAll(\"\\n\", \"\\n\u003cbr\u003e\"),"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                            line.getSeverity().toString(), trace)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                    );"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return errorLogs;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public QueryLogsResults queryLogs(QueryLogsParams queryLogsParams) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        LogSearchParams logSearchParams \u003d LogSearchParams.from(queryLogsParams)"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .addLogName(STDOUT_LOG_NAME)"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .addLogName(STDERR_LOG_NAME)"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .setResourceType(RESOURCE_TYPE_GAE_APP);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Page\u003cLogEntry\u003e logEntriesInPage \u003d getLogEntries(logSearchParams, queryLogsParams.getPageSize());"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        List\u003cGeneralLogEntry\u003e logEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (LogEntry entry : logEntriesInPage.getValues()) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Severity severity \u003d entry.getSeverity();"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String trace \u003d entry.getTrace();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            if (trace !\u003d null) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                trace \u003d trace.replace(TRACE_PREFIX, \"\");"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String insertId \u003d entry.getInsertId();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            com.google.cloud.logging.SourceLocation sourceLocation \u003d entry.getSourceLocation();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Map\u003cString, String\u003e resourceIdentifier \u003d entry.getResource().getLabels();"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Payload\u003c?\u003e payload \u003d entry.getPayload();"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            long timestamp \u003d entry.getInstantTimestamp().toEpochMilli();"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String file \u003d \"\";"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            Long line \u003d 0L;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String function \u003d \"\";"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            if (sourceLocation !\u003d null) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                file \u003d sourceLocation.getFile();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                line \u003d sourceLocation.getLine();"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                function \u003d sourceLocation.getFunction();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"            GeneralLogEntry logEntry \u003d new GeneralLogEntry(convertSeverity(severity), trace, insertId,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    resourceIdentifier, new SourceLocation(file, line, function), timestamp);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            if (payload.getType() \u003d\u003d Payload.Type.JSON) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Map\u003cString, Object\u003e jsonPayloadMap \u003d ((Payload.JsonPayload) payload).getDataAsMap();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                logEntry.setDetails(JsonUtils.fromJson(JsonUtils.toCompactJson(jsonPayloadMap), LogDetails.class));"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                String textPayloadMessage \u003d ((Payload.StringPayload) payload).getData();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logEntry.setMessage(textPayloadMessage);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logEntries.add(logEntry);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        boolean hasNextPage \u003d logEntriesInPage.getNextPageToken() !\u003d null;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new QueryLogsResults(logEntries, hasNextPage);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private LogSeverity convertSeverity(Severity severity) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.ERROR) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return LogSeverity.ERROR;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.WARNING) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return LogSeverity.WARNING;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.INFO || severity \u003d\u003d Severity.NOTICE) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return LogSeverity.INFO;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.CRITICAL || severity \u003d\u003d Severity.ALERT || severity \u003d\u003d Severity.EMERGENCY) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return LogSeverity.CRITICAL;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.DEBUG) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return LogSeverity.DEBUG;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return LogSeverity.DEFAULT;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // This method is not necessary for production usage because a feedback session log"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // is already separately created through the standardized logging infrastructure."},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // However, this method is not removed as it is necessary to assist in local testing."},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            long startTime, long endTime, String fsName) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        List\u003cString\u003e filters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (courseId !\u003d null) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            filters.add(\"jsonPayload.courseId\u003d\\\"\" + courseId + \"\\\"\");"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (email !\u003d null) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            filters.add(\"jsonPayload.studentEmail\u003d\\\"\" + email + \"\\\"\");"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (fsName !\u003d null) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            filters.add(\"jsonPayload.feedbackSessionName\u003d\\\"\" + fsName + \"\\\"\");"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        QueryLogsParams queryLogsParams \u003d QueryLogsParams.builder(startTime, endTime)"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .withLogEvent(LogEvent.FEEDBACK_SESSION_AUDIT.name())"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .withSeverityLevel(LogSeverity.INFO)"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .withExtraFilters(String.join(\"\\n\", filters))"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        LogSearchParams logSearchParams \u003d LogSearchParams.from(queryLogsParams)"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .addLogName(STDOUT_LOG_NAME)"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .setResourceType(RESOURCE_TYPE_GAE_APP);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Page\u003cLogEntry\u003e entries \u003d getLogEntries(logSearchParams, 0);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        List\u003cLogEntry\u003e logEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        for (LogEntry entry : entries.iterateAll()) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logEntries.add(entry);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionLogEntry\u003e fsLogEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        for (LogEntry entry : logEntries) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            long timestamp \u003d entry.getInstantTimestamp().toEpochMilli();"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            Payload\u003c?\u003e payload \u003d entry.getPayload();"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            FeedbackSessionAuditLogDetails details;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (payload.getType() \u003d\u003d Payload.Type.JSON) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                Map\u003cString, Object\u003e jsonPayloadMap \u003d ((Payload.JsonPayload) payload).getDataAsMap();"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                LogDetails logDetails \u003d JsonUtils.fromJson(JsonUtils.toCompactJson(jsonPayloadMap), LogDetails.class);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                if (!(logDetails instanceof FeedbackSessionAuditLogDetails)) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                details \u003d (FeedbackSessionAuditLogDetails) logDetails;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"            FeedbackSessionLogEntry fslEntry \u003d new FeedbackSessionLogEntry(details.getStudentEmail(),"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    details.getFeedbackSessionName(), details.getAccessType(), timestamp);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            fsLogEntries.add(fslEntry);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return fsLogEntries;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private Page\u003cLogEntry\u003e getLogEntries(LogSearchParams s, int pageSize) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        LoggingOptions options \u003d LoggingOptions.getDefaultInstance();"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        QueryLogsParams q \u003d s.queryLogsParams;"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        List\u003cString\u003e logFilters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        logFilters.add(\"timestamp\u003e\\\"\" + Instant.ofEpochMilli(q.getStartTime()).toString() + \"\\\"\");"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        logFilters.add(\"timestamp\u003c\u003d\\\"\" + Instant.ofEpochMilli(q.getEndTime()).toString() + \"\\\"\");"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (!s.logName.isEmpty()) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            String logNameFilter \u003d s.logName.stream()"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    .map(str -\u003e \"\\\"projects/\" + options.getProjectId() + \"/logs/\" + str + \"\\\"\")"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    .collect(Collectors.joining(\" OR \"));"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            logFilters.add(\"logName\u003d(\" + logNameFilter + \")\");"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        if (s.resourceType !\u003d null) {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            logFilters.add(\"resource.type\u003d\\\"\" + s.resourceType + \"\\\"\");"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        if (q.getSeverity() !\u003d null) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            logFilters.add(\"severity\u003d\" + q.getSeverity());"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        } else if (q.getMinSeverity() !\u003d null \u0026\u0026 q.getSeverity() \u003d\u003d null) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            logFilters.add(\"severity\u003e\u003d\" + q.getMinSeverity());"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (q.getTraceId() !\u003d null) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            logFilters.add(\"trace\u003d\\\"\" + TRACE_PREFIX + q.getTraceId() + \"\\\"\");"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        if (q.getActionClass() !\u003d null) {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.actionClass\u003d\\\"\" + q.getActionClass() + \"\\\"\");"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        if (q.getUserInfoParams() !\u003d null) {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (q.getUserInfoParams().getGoogleId() !\u003d null) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                logFilters.add(\"jsonPayload.userInfo.googleId\u003d\\\"\" + q.getUserInfoParams().getGoogleId() + \"\\\"\");"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            if (q.getUserInfoParams().getRegkey() !\u003d null) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                logFilters.add(\"jsonPayload.userInfo.regkey\u003d\\\"\" + q.getUserInfoParams().getRegkey() + \"\\\"\");"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            if (q.getUserInfoParams().getEmail() !\u003d null) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                logFilters.add(\"jsonPayload.userInfo.email\u003d\\\"\" + q.getUserInfoParams().getEmail() + \"\\\"\");"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        if (q.getLogEvent() !\u003d null) {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.event\u003d\\\"\" + q.getLogEvent() + \"\\\"\");"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        if (q.getSourceLocation() !\u003d null \u0026\u0026 q.getSourceLocation().getFile() !\u003d null) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            if (q.getSourceLocation().getFunction() \u003d\u003d null) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                logFilters.add(\"sourceLocation.file\u003d\\\"\" + q.getSourceLocation().getFile() + \"\\\"\");"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                logFilters.add(\"sourceLocation.file\u003d\\\"\" + q.getSourceLocation().getFile()"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                        + \"\\\" AND sourceLocation.function\u003d\\\"\" + q.getSourceLocation().getFunction() + \"\\\"\");"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        if (q.getExceptionClass() !\u003d null) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.exceptionClass\u003d\\\"\" + q.getExceptionClass() + \"\\\"\");"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        if (q.getLatency() !\u003d null) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.responseTime\" + q.getLatency());"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        if (q.getStatus() !\u003d null) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.responseStatus\u003d\" + q.getStatus());"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        if (q.getVersion() !\u003d null) {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            logFilters.add(\"resource.labels.version_id\u003d\\\"\" + q.getVersion() + \"\\\"\");"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        if (q.getExtraFilters() !\u003d null) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            logFilters.add(q.getExtraFilters());"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        String logFilter \u003d String.join(\"\\n\", logFilters);"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"        List\u003cEntryListOption\u003e entryListOptions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"        entryListOptions.add(EntryListOption.filter(logFilter));"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"        if (pageSize \u003e 0) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            entryListOptions.add(EntryListOption.pageSize(pageSize));"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"        if (q.getOrder() !\u003d null) {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            if (ASCENDING_ORDER.equals(q.getOrder())) {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                entryListOptions.add(EntryListOption.sortOrder(SortingField.TIMESTAMP, SortingOrder.ASCENDING));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                entryListOptions.add(EntryListOption.sortOrder(SortingField.TIMESTAMP, SortingOrder.DESCENDING));"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        Logging logging \u003d options.getService();"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Page\u003cLogEntry\u003e entries \u003d logging.listLogEntries(entryListOptions.toArray(new EntryListOption[] {}));"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            logging.close();"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            // ignore exception when closing resource"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        return entries;"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * Contains params to be used for the searching of logs."},{"lineNumber":334,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    private static class LogSearchParams {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        private final List\u003cString\u003e logName \u003d new ArrayList\u003c\u003e();"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        private String resourceType;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        private QueryLogsParams queryLogsParams;"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"        static LogSearchParams from(QueryLogsParams queryLogsParams) {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            return new LogSearchParams().setQueryLogsParams(queryLogsParams);"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":343,"author":{"gitId":"-"},"content":""},{"lineNumber":344,"author":{"gitId":"-"},"content":"        LogSearchParams addLogName(String logName) {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            this.logName.add(logName);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        LogSearchParams setResourceType(String resourceType) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            this.resourceType \u003d resourceType;"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"        private LogSearchParams setQueryLogsParams(QueryLogsParams queryLogsParams) {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            this.queryLogsParams \u003d queryLogsParams;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":359}},{"path":"src/main/java/teammates/logic/external/GoogleCloudStorageService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.Blob;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.BlobId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.BlobInfo;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.StorageOptions;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Holds functions for operations related to Google Cloud Storage."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public final class GoogleCloudStorageService implements FileStorageService {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static Storage storage \u003d StorageOptions.getDefaultInstance().getService();"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void delete(String fileKey) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        storage.delete(BlobId.of(Config.PRODUCTION_GCS_BUCKETNAME, fileKey));"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void create(String fileKey, byte[] contentBytes, String contentType) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        BlobId blobId \u003d BlobId.of(Config.PRODUCTION_GCS_BUCKETNAME, fileKey);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        BlobInfo blobInfo \u003d BlobInfo.newBuilder(blobId).setContentType(contentType).build();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        storage.create(blobInfo, contentBytes);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean doesFileExist(String fileKey) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        BlobId blobId \u003d BlobId.of(Config.PRODUCTION_GCS_BUCKETNAME, fileKey);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Blob blob \u003d storage.get(blobId);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return blob !\u003d null \u0026\u0026 blob.exists();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public byte[] getContent(String fileKey) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        BlobId blobId \u003d BlobId.of(Config.PRODUCTION_GCS_BUCKETNAME, fileKey);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Blob blob \u003d storage.get(blobId);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (blob \u003d\u003d null) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return new byte[0];"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return blob.getContent();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":46}},{"path":"src/main/java/teammates/logic/external/GoogleCloudTasksService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.AppEngineHttpRequest;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.AppEngineRouting;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.CloudTasksClient;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.HttpMethod;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.QueueName;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.Task;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.protobuf.ByteString;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.protobuf.Timestamp;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Holds functions for operations related to Google Cloud Tasks."},{"lineNumber":24,"author":{"gitId":"-"},"content":" */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class GoogleCloudTasksService implements TaskQueueService {"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void addDeferredTask(TaskWrapper task, long countdownTime) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try (CloudTasksClient client \u003d CloudTasksClient.create()) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            String queuePath \u003d QueueName.of(Config.APP_ID, Config.APP_REGION, task.getQueueName()).toString();"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"            AppEngineHttpRequest.Builder requestBuilder \u003d"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    AppEngineHttpRequest.newBuilder()"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                            .setAppEngineRouting(AppEngineRouting.newBuilder()"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                                    .setVersion(Config.APP_VERSION)"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                    .build())"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                            .setHttpMethod(HttpMethod.POST);"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (task.getRequestBody() \u003d\u003d null) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                String relativeUrl \u003d \"http://place.holder\"; // the value is not important"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                AppUrl url \u003d new AppUrl(relativeUrl + task.getWorkerUrl());"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                task.getParamMap().forEach((key, value) -\u003e url.withParam(key, value));"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"                requestBuilder.setRelativeUri(url.toString());"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                String requestBody \u003d JsonUtils.toCompactJson(task.getRequestBody());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                requestBuilder.putHeaders(\"Content-Type\", \"application/json; charset\u003dUTF-8\")"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        .setRelativeUri(task.getWorkerUrl())"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        .setBody(ByteString.copyFrom(requestBody, Const.ENCODING));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Task.Builder taskBuilder \u003d Task.newBuilder().setAppEngineHttpRequest(requestBuilder.build());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (countdownTime \u003e 0) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                taskBuilder.setScheduleTime("},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        Timestamp.newBuilder()"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                                .setSeconds(Instant.now().plusMillis(countdownTime).getEpochSecond()));"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"            client.createTask(queuePath, taskBuilder.build());"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            log.severe(\"Cannot create Cloud Tasks client\", e);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":66}},{"path":"src/main/java/teammates/logic/external/GoogleRecaptchaService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.apache.http.client.utils.URIBuilder;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.google.gson.JsonArray;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.gson.JsonObject;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.HttpRequest;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Google-based reCAPTCHA verifier service."},{"lineNumber":17,"author":{"gitId":"-"},"content":" *"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * @see \u003ca href\u003d\"https://developers.google.com/recaptcha/docs/verify\"\u003ereCAPTCHA user response verification API\u003c/a\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class GoogleRecaptchaService implements RecaptchaService {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** The Google reCAPTCHA API URL to verify the response token. */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VERIFY_URL \u003d \"https://www.google.com/recaptcha/api/siteverify\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String secretKey;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public GoogleRecaptchaService(String secretKey) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.secretKey \u003d secretKey;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean isVerificationSuccessful(String captchaResponse) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (secretKey \u003d\u003d null || secretKey.isEmpty()) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (captchaResponse \u003d\u003d null || captchaResponse.isEmpty()) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String response \u003d getApiResponse(captchaResponse, secretKey);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            JsonObject responseInJson \u003d JsonUtils.parse(response).getAsJsonObject();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"            if (responseInJson.has(\"error-codes\")) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                JsonArray errorCodes \u003d responseInJson.get(\"error-codes\").getAsJsonArray();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                log.warning(\"Error codes during reCAPTCHA verification: \" + errorCodes.toString());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Boolean.parseBoolean(responseInJson.get(\"success\").toString());"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            log.severe(\"\", e);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    String getApiResponse(String captchaResponse, String secretKey) throws URISyntaxException, IOException {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        URIBuilder urlb \u003d new URIBuilder(VERIFY_URL);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        urlb.setParameter(\"secret\", secretKey);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        urlb.setParameter(\"response\", captchaResponse);"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return HttpRequest.executeGetRequest(urlb.build());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":66}},{"path":"src/main/java/teammates/logic/external/LocalFileStorageService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.InputStream;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.OutputStream;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.common.io.ByteStreams;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Holds functions for operations related to binary file storage in local dev environment."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public final class LocalFileStorageService implements FileStorageService {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String BASE_DIRECTORY \u003d System.getProperty(\"user.dir\") + \"/filestorage-dev\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static String constructFilePath(String fileKey) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return BASE_DIRECTORY + \"/\" + fileKey;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void delete(String fileKey) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        File file \u003d new File(constructFilePath(fileKey));"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        file.delete();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void create(String fileKey, byte[] contentBytes, String contentType) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try (OutputStream os \u003d Files.newOutputStream(Paths.get(constructFilePath(fileKey)))) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            os.write(contentBytes);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            log.warning(\"\", e);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean doesFileExist(String fileKey) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Files.exists(Paths.get(constructFilePath(fileKey)));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public byte[] getContent(String fileKey) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        byte[] buffer;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try (InputStream fis \u003d Files.newInputStream(Paths.get(constructFilePath(fileKey)))) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            buffer \u003d ByteStreams.toByteArray(fis);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            log.warning(\"\", e);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new byte[0];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return buffer;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":57}},{"path":"src/main/java/teammates/logic/external/LocalLoggingService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.lang.reflect.Type;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.concurrent.ConcurrentHashMap;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.apache.commons.math3.random.RandomDataGenerator;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.google.common.reflect.TypeToken;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.gson.JsonParseException;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.QueryLogsResults;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.ExceptionLogDetails;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.GeneralLogEntry;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogDetails;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogEvent;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.QueryLogsParams;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.RequestLogDetails;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.RequestLogUser;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.util.FileHelper;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Holds functions for operations related to logs reading/writing in local dev environment."},{"lineNumber":34,"author":{"gitId":"-"},"content":" *"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * \u003cp\u003eThe current implementation uses an in-memory storage of logs to simulate the logs"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * retention locally for feedback session logs only. It is not meant as a replacement but"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * merely for testing purposes."},{"lineNumber":38,"author":{"gitId":"-"},"content":" */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LocalLoggingService implements LogService {"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Map\u003cString, List\u003cFeedbackSessionLogEntry\u003e\u003e FEEDBACK_SESSION_LOG_ENTRIES \u003d new ConcurrentHashMap\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final List\u003cGeneralLogEntry\u003e LOCAL_LOG_ENTRIES \u003d loadLocalLogEntries();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String ASCENDING_ORDER \u003d \"asc\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static List\u003cGeneralLogEntry\u003e loadLocalLogEntries() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Timestamp of logs are randomly created to be within the last one hour"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        long currentTimestamp \u003d Instant.now().toEpochMilli();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        long earliestTimestamp \u003d currentTimestamp - 60 * 60 * 1000;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            String jsonString \u003d FileHelper.readResourceFile(\"logsForLocalDev.json\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Type type \u003d new TypeToken\u003cCollection\u003cGeneralLogEntry\u003e\u003e(){}.getType();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            Collection\u003cGeneralLogEntry\u003e logEntriesCollection \u003d JsonUtils.fromJson(jsonString, type);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return logEntriesCollection.stream()"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    .map(log -\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        long timestamp \u003d new RandomDataGenerator().nextLong(earliestTimestamp, currentTimestamp);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        GeneralLogEntry logEntryWithUpdatedTimestamp \u003d new GeneralLogEntry("},{"lineNumber":57,"author":{"gitId":"-"},"content":"                                log.getSeverity(), log.getTrace(), log.getInsertId(), log.getResourceIdentifier(),"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                                log.getSourceLocation(), timestamp);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        logEntryWithUpdatedTimestamp.setDetails(log.getDetails());"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        logEntryWithUpdatedTimestamp.setMessage(log.getMessage());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                        return logEntryWithUpdatedTimestamp;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    })"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toList());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (JsonParseException e) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Not supported in dev server"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public QueryLogsResults queryLogs(QueryLogsParams queryLogsParams) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Page size is set as a small value to test loading of more logs"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        int pageSize \u003d 10;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cGeneralLogEntry\u003e result \u003d LOCAL_LOG_ENTRIES.stream()"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .sorted((x, y) -\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    String order \u003d queryLogsParams.getOrder();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    if (ASCENDING_ORDER.equals(order)) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        return Long.compare(x.getTimestamp(), y.getTimestamp());"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    } else {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                        return Long.compare(y.getTimestamp(), x.getTimestamp());"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getSeverity() \u003d\u003d null"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        || log.getSeverity().equals(queryLogsParams.getSeverity()))"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getMinSeverity() \u003d\u003d null"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        || log.getSeverity().getSeverityLevel()"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                            \u003e\u003d queryLogsParams.getMinSeverity().getSeverityLevel())"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .filter(log -\u003e log.getTimestamp() \u003e queryLogsParams.getStartTime())"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .filter(log -\u003e log.getTimestamp() \u003c\u003d queryLogsParams.getEndTime())"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getTraceId() \u003d\u003d null"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        || queryLogsParams.getTraceId().equals(log.getTrace()))"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getVersion() \u003d\u003d null"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        || queryLogsParams.getVersion().equals(log.getResourceIdentifier().get(\"version_id\")))"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getSourceLocation().getFile() \u003d\u003d null"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                        || log.getSourceLocation().getFile().equals(queryLogsParams.getSourceLocation().getFile()))"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getSourceLocation().getFunction() \u003d\u003d null"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                        || log.getSourceLocation().getFunction().equals(queryLogsParams.getSourceLocation().getFunction()))"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .filter(log -\u003e isEventBasedFilterSatisfied(log, queryLogsParams))"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .limit(pageSize)"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cGeneralLogEntry\u003e copiedResults \u003d deepCopyLogEntries(result);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        boolean hasNextPage \u003d copiedResults.size() \u003d\u003d pageSize;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new QueryLogsResults(copiedResults, hasNextPage);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private boolean isEventBasedFilterSatisfied(GeneralLogEntry log, QueryLogsParams queryLogsParams) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String actionClassFilter \u003d queryLogsParams.getActionClass();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String exceptionClassFilter \u003d queryLogsParams.getExceptionClass();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String logEventFilter \u003d queryLogsParams.getLogEvent();"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String latencyFilter \u003d queryLogsParams.getLatency();"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String statusFilter \u003d queryLogsParams.getStatus();"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        RequestLogUser userInfoFilter \u003d queryLogsParams.getUserInfoParams();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String regkeyFilter \u003d userInfoFilter.getRegkey();"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String emailFilter \u003d userInfoFilter.getEmail();"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String googleIdFilter \u003d userInfoFilter.getGoogleId();"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (actionClassFilter \u003d\u003d null \u0026\u0026 exceptionClassFilter \u003d\u003d null \u0026\u0026 logEventFilter \u003d\u003d null"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 latencyFilter \u003d\u003d null \u0026\u0026 statusFilter \u003d\u003d null \u0026\u0026 regkeyFilter \u003d\u003d null"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 emailFilter \u003d\u003d null \u0026\u0026 googleIdFilter \u003d\u003d null) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        LogDetails details \u003d log.getDetails();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (details \u003d\u003d null) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (logEventFilter !\u003d null \u0026\u0026 !details.getEvent().name().equals(logEventFilter)) {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!isExceptionFilterSatisfied(details, exceptionClassFilter)) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return isRequestFilterSatisfied(details, actionClassFilter, latencyFilter, statusFilter,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                regkeyFilter, emailFilter, googleIdFilter);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private boolean isExceptionFilterSatisfied(LogDetails details, String exceptionClassFilter) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (exceptionClassFilter \u003d\u003d null) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (details.getEvent() !\u003d LogEvent.EXCEPTION_LOG) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ExceptionLogDetails exceptionDetails \u003d (ExceptionLogDetails) details;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return exceptionDetails.getExceptionClass().equals(exceptionClassFilter);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private boolean isRequestFilterSatisfied(LogDetails details, String actionClassFilter,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String latencyFilter, String statusFilter, String regkeyFilter, String emailFilter, String googleIdFilter) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (actionClassFilter \u003d\u003d null \u0026\u0026 latencyFilter \u003d\u003d null \u0026\u0026 statusFilter \u003d\u003d null"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 regkeyFilter \u003d\u003d null \u0026\u0026 emailFilter \u003d\u003d null \u0026\u0026 googleIdFilter \u003d\u003d null) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (details.getEvent() !\u003d LogEvent.REQUEST_LOG) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        RequestLogDetails requestDetails \u003d (RequestLogDetails) details;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (actionClassFilter !\u003d null \u0026\u0026 !actionClassFilter.equals(requestDetails.getActionClass())) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (statusFilter !\u003d null \u0026\u0026 !statusFilter.equals(String.valueOf(requestDetails.getResponseStatus()))) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (latencyFilter !\u003d null) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            Pattern p \u003d Pattern.compile(\"^(\u003e|\u003e\u003d|\u003c|\u003c\u003d) *(\\\\d+)$\");"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            Matcher m \u003d p.matcher(latencyFilter);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            long logLatency \u003d ((RequestLogDetails) details).getResponseTime();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            boolean isFilterSatisfied \u003d false;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (m.matches()) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                int time \u003d Integer.parseInt(m.group(2));"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                switch (m.group(1)) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                case \"\u003e\":"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    isFilterSatisfied \u003d logLatency \u003e time;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                case \"\u003e\u003d\":"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    isFilterSatisfied \u003d logLatency \u003e\u003d time;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                case \"\u003c\":"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                    isFilterSatisfied \u003d logLatency \u003c time;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                case \"\u003c\u003d\":"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    isFilterSatisfied \u003d logLatency \u003c\u003d time;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                default:"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    assert false : \"Unreachable case\";"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (!isFilterSatisfied) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        RequestLogUser userInfo \u003d requestDetails.getUserInfo();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (regkeyFilter !\u003d null \u0026\u0026 (userInfo \u003d\u003d null || !regkeyFilter.equals(userInfo.getRegkey()))) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (emailFilter !\u003d null \u0026\u0026 (userInfo \u003d\u003d null || !emailFilter.equals(userInfo.getEmail()))) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return googleIdFilter \u003d\u003d null || userInfo !\u003d null \u0026\u0026 googleIdFilter.equals(userInfo.getGoogleId());"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        FeedbackSessionLogEntry logEntry \u003d new FeedbackSessionLogEntry(email, fsName,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                fslType, Instant.now().toEpochMilli());"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        FEEDBACK_SESSION_LOG_ENTRIES.computeIfAbsent(courseId, k -\u003e new ArrayList\u003c\u003e()).add(logEntry);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            long startTime, long endTime, String fsName) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return FEEDBACK_SESSION_LOG_ENTRIES"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .getOrDefault(courseId, new ArrayList\u003c\u003e())"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                .filter(log -\u003e email \u003d\u003d null || log.getStudentEmail().equals(email))"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                .filter(log -\u003e fsName \u003d\u003d null || log.getFeedbackSessionName().equals(fsName))"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .filter(log -\u003e log.getTimestamp() \u003e\u003d startTime)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .filter(log -\u003e log.getTimestamp() \u003c\u003d endTime)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    private List\u003cGeneralLogEntry\u003e deepCopyLogEntries(List\u003cGeneralLogEntry\u003e logEntries) {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        List\u003cGeneralLogEntry\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        for (GeneralLogEntry logEntry : logEntries) {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            GeneralLogEntry copiedEntry \u003d new GeneralLogEntry(logEntry.getSeverity(),"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    logEntry.getTrace(), logEntry.getInsertId(), logEntry.getResourceIdentifier(),"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    logEntry.getSourceLocation(), logEntry.getTimestamp());"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            copiedEntry.setDetails(JsonUtils.fromJson(JsonUtils.toCompactJson(logEntry.getDetails()), LogDetails.class));"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            copiedEntry.setMessage(logEntry.getMessage());"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            result.add(copiedEntry);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":243}},{"path":"src/main/java/teammates/logic/external/LocalTaskQueueService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.URI;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.apache.http.NameValuePair;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.apache.http.client.utils.URIBuilder;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.apache.http.entity.StringEntity;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.CloseableHttpClient;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.HttpClients;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.apache.http.message.BasicNameValuePair;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Holds functions for operations related to task queue in local dev environment."},{"lineNumber":26,"author":{"gitId":"-"},"content":" */"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LocalTaskQueueService implements TaskQueueService {"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void addDeferredTask(TaskWrapper task, long countdownTime) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // In dev server, task queues are either not active (i.e. they will not be executed even if queued)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // or they will be executed immediately without going through any kind of \"queue\""},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!Config.TASKQUEUE_ACTIVE) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        HttpPost post \u003d new HttpPost(createBasicUri("},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \"http://localhost:\" + Config.getPort() + task.getWorkerUrl(), task.getParamMap()));"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (task.getRequestBody() !\u003d null) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            StringEntity entity \u003d new StringEntity("},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    JsonUtils.toCompactJson(task.getRequestBody()), Const.ENCODING);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            post.setEntity(entity);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        post.addHeader(\"X-AppEngine-QueueName\", task.getQueueName());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        post.addHeader(\"X-Google-DevAppserver-SkipAdminCheck\", \"true\");"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try (CloseableHttpClient httpClient \u003d HttpClients.createDefault()) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            httpClient.execute(post);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            log.severe(\"Error when executing HTTP request\", e);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static URI createBasicUri(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cNameValuePair\u003e postParameters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (params !\u003d null) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            params.forEach((key, value) -\u003e postParameters.add(new BasicNameValuePair(key, value)));"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            URIBuilder uriBuilder \u003d new URIBuilder(url);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            uriBuilder.addParameters(postParameters);"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return uriBuilder.build();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (URISyntaxException e) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":73}},{"path":"src/main/java/teammates/logic/external/LogService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.QueryLogsResults;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.QueryLogsParams;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * An interface used for logs operations such as reading/writing."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface LogService {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Gets the list of recent error- or higher level logs."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    List\u003cErrorLogEntry\u003e getRecentErrorLogs();"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Gets the list of logs satisfying the given criteria."},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    QueryLogsResults queryLogs(QueryLogsParams queryLogsParams);"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a feedback session log."},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Gets the feedback session logs as filtered by the given parameters."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            long startTime, long endTime, String fsName);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":34}},{"path":"src/main/java/teammates/logic/external/MailgunService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javax.ws.rs.core.MediaType;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.sun.jersey.api.client.Client;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.sun.jersey.api.client.ClientResponse;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.sun.jersey.api.client.WebResource;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.sun.jersey.api.client.filter.HTTPBasicAuthFilter;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.sun.jersey.multipart.FormDataMultiPart;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Email sender service provided by Mailgun."},{"lineNumber":22,"author":{"gitId":"-"},"content":" *"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see \u003ca href\u003d\"https://cloud.google.com/appengine/docs/standard/java11/sending-messages#mailgun\"\u003ehttps://cloud.google.com/appengine/docs/standard/java11/sending-messages#mailgun\u003c/a\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see FormDataMultiPart"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MailgunService implements EmailSenderService {"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * {@inheritDoc}"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public FormDataMultiPart parseToEmail(EmailWrapper wrapper) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FormDataMultiPart formData \u003d new FormDataMultiPart();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String sender \u003d wrapper.getSenderName() \u003d\u003d null || wrapper.getSenderName().isEmpty()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        ? wrapper.getSenderEmail()"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        : wrapper.getSenderName() + \" \u003c\" + wrapper.getSenderEmail() + \"\u003e\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        formData.field(\"from\", sender);"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        formData.field(\"to\", wrapper.getRecipient());"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (wrapper.getBcc() !\u003d null \u0026\u0026 !wrapper.getBcc().isEmpty()) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            formData.field(\"bcc\", wrapper.getBcc());"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        formData.field(\"h:Reply-To\", wrapper.getReplyTo());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        formData.field(\"subject\", wrapper.getSubject());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        formData.field(\"html\", wrapper.getContent());"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return formData;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper wrapper) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try (FormDataMultiPart email \u003d parseToEmail(wrapper)) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Client client \u003d Client.create();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            client.addFilter(new HTTPBasicAuthFilter(\"api\", Config.MAILGUN_APIKEY));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            WebResource webResource \u003d"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    client.resource(\"https://api.mailgun.net/v3/\" + Config.MAILGUN_DOMAINNAME + \"/messages\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"            ClientResponse response \u003d webResource.type(MediaType.MULTIPART_FORM_DATA_TYPE)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    .post(ClientResponse.class, email);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(response.getStatus(), response.getStatusInfo().getReasonPhrase());"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            log.warning(\"Could not clean up resources after sending email\", e);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(HttpStatus.SC_OK, e.getMessage());"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":72}},{"path":"src/main/java/teammates/logic/external/MailjetService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.json.JSONArray;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.json.JSONObject;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.jsoup.Jsoup;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.mailjet.client.ClientOptions;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.mailjet.client.MailjetClient;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.mailjet.client.MailjetRequest;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.mailjet.client.MailjetResponse;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.mailjet.client.errors.MailjetException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.mailjet.client.resource.Email;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.exception.EmailSendingException;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Email sender service provided by Mailjet."},{"lineNumber":22,"author":{"gitId":"-"},"content":" *"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see \u003ca href\u003d\"https://cloud.google.com/appengine/docs/standard/java11/sending-messages#mailjet\"\u003ehttps://cloud.google.com/appengine/docs/standard/java11/sending-messages#mailjet\u003c/a\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see MailjetClient"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see MailjetRequest"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see MailjetResponse"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MailjetService implements EmailSenderService {"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * {@inheritDoc}"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public MailjetRequest parseToEmail(EmailWrapper wrapper) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        MailjetRequest request \u003d new MailjetRequest(Email.resource);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        request.property(Email.FROMEMAIL, wrapper.getSenderEmail());"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (wrapper.getSenderName() !\u003d null \u0026\u0026 !wrapper.getSenderName().isEmpty()) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            request.property(Email.FROMNAME, wrapper.getSenderName());"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        request.property(Email.RECIPIENTS, new JSONArray().put(new JSONObject().put(\"Email\", wrapper.getRecipient())));"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (wrapper.getBcc() !\u003d null \u0026\u0026 !wrapper.getBcc().isEmpty()) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            request.append(Email.RECIPIENTS, new JSONObject().put(\"Email\", wrapper.getBcc()));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        request.property(Email.HEADERS, new JSONObject().put(\"Reply-To\", wrapper.getReplyTo()));"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        request.property(Email.SUBJECT, wrapper.getSubject());"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        request.property(Email.HTMLPART, wrapper.getContent());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        request.property(Email.TEXTPART, Jsoup.parse(wrapper.getContent()).text());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return request;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper wrapper) throws EmailSendingException {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        MailjetRequest email \u003d parseToEmail(wrapper);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        MailjetClient mailjet \u003d new MailjetClient("},{"lineNumber":57,"author":{"gitId":"-"},"content":"                ClientOptions.builder().apiKey(Config.MAILJET_APIKEY).apiSecretKey(Config.MAILJET_SECRETKEY).build());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            MailjetResponse response \u003d mailjet.post(email);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(response.getStatus(), response.getData().toString());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (MailjetException e) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new EmailSendingException(e, HttpStatus.SC_BAD_GATEWAY);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":65}},{"path":"src/main/java/teammates/logic/external/RecaptchaService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * An interface to verify the user\u0027s reCAPTCHA response."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public interface RecaptchaService {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Returns true if the {@code captchaResponse} token is verified successfully."},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    boolean isVerificationSuccessful(String captchaResponse);"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":12}},{"path":"src/main/java/teammates/logic/external/SendgridService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.jsoup.Jsoup;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.sendgrid.Method;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.sendgrid.Request;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.sendgrid.Response;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.sendgrid.SendGrid;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.Mail;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.objects.Content;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.objects.Email;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.objects.Personalization;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.exception.EmailSendingException;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Email sender service provided by SendGrid."},{"lineNumber":24,"author":{"gitId":"-"},"content":" *"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see \u003ca href\u003d\"https://cloud.google.com/appengine/docs/standard/java11/sending-messages#sendgrid\"\u003ehttps://cloud.google.com/appengine/docs/standard/java11/sending-messages#sendgrid\u003c/a\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see SendGrid"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SendgridService implements EmailSenderService {"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * {@inheritDoc}"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Mail parseToEmail(EmailWrapper wrapper) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Mail email \u003d new Mail();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Email sender;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (wrapper.getSenderName() \u003d\u003d null || wrapper.getSenderName().isEmpty()) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            sender \u003d new Email(wrapper.getSenderEmail());"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            sender \u003d new Email(wrapper.getSenderEmail(), wrapper.getSenderName());"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email.setFrom(sender);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email.setReplyTo(new Email(wrapper.getReplyTo()));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Personalization personalization \u003d new Personalization();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        personalization.addTo(new Email(wrapper.getRecipient()));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (wrapper.getBcc() !\u003d null \u0026\u0026 !wrapper.getBcc().isEmpty()) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            personalization.addBcc(new Email(wrapper.getBcc()));"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email.addPersonalization(personalization);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email.setSubject(wrapper.getSubject());"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email.addContent(new Content(\"text/plain\", Jsoup.parse(wrapper.getContent()).text()));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email.addContent(new Content(\"text/html\", wrapper.getContent()));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper wrapper) throws EmailSendingException {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Mail email \u003d parseToEmail(wrapper);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        SendGrid sendgrid \u003d new SendGrid(Config.SENDGRID_APIKEY);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Request request \u003d new Request();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        request.setMethod(Method.POST);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        request.setEndpoint(\"mail/send\");"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            request.setBody(email.build());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Response response \u003d sendgrid.api(request);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(response.getStatusCode(), response.getBody());"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new EmailSendingException(e, HttpStatus.SC_BAD_GATEWAY);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":71}},{"path":"src/main/java/teammates/logic/external/TaskQueueService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Handles operations related to task queues."},{"lineNumber":7,"author":{"gitId":"-"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface TaskQueueService {"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Adds the given task, to be run after the specified time, to the specified queue."},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param task the task object containing the details of task to be added"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param countdownTime the time delay for the task to be executed"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    void addDeferredTask(TaskWrapper task, long countdownTime);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":17}},{"path":"src/main/java/teammates/logic/external/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":" * Contains the logic of the external dependencies and services."},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"}],"authorContributionMap":{"fsgmhoward":4}},{"path":"src/main/java/teammates/storage/api/AccountRequestsDb.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static com.googlecode.objectify.ObjectifyService.ofy;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.Key;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.cmd.LoadType;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.search.AccountRequestSearchManager;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.search.SearchManagerFactory;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":" * Handles CRUD operations for account requests."},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" *"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":" * @see AccountRequest"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":" * @see AccountRequestAttributes"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"public final class AccountRequestsDb extends EntitiesDb\u003cAccountRequest, AccountRequestAttributes\u003e {"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private static final AccountRequestsDb instance \u003d new AccountRequestsDb();"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequestsDb() {"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        // prevent initialization"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public static AccountRequestsDb inst() {"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return instance;"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequestSearchManager getSearchManager() {"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        return SearchManagerFactory.getAccountRequestSearchManager();"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * Creates or updates search document for the given account request."},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public void putDocument(AccountRequestAttributes accountRequest) throws SearchServiceException {"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        getSearchManager().putDocument(accountRequest);"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * Searches all account requests in the system."},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003eThis is used by admin to search account requests in the whole system."},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cAccountRequestAttributes\u003e searchAccountRequestsInWholeSystem(String queryString)"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            throws SearchServiceException {"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        if (queryString.trim().isEmpty()) {"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"            return new ArrayList\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        return getSearchManager().searchAccountRequests(queryString);"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by email and institute."},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        assert institute !\u003d null;"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        return makeAttributesOrNull(getAccountRequestEntity(AccountRequest.generateId(email, institute)));"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     * Updates an account request."},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     * @return the updated account request"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityDoesNotExistException if the account request cannot be found"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes updateAccountRequest(AccountRequestAttributes.UpdateOptions updateOptions)"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d getAccountRequest(updateOptions.getEmail(), updateOptions.getInstitute());"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequest \u003d\u003d null) {"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"            throw new EntityDoesNotExistException(ERROR_UPDATE_NON_EXISTENT + updateOptions);"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.update(updateOptions);"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.sanitizeForSaving();"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        if (!accountRequest.isValid()) {"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidParametersException(accountRequest.getInvalidityInfo());"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        saveEntity(accountRequest.toEntity());"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequest;"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by unique constraint {@code registrationKey}."},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request or null if no match found"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequestForRegistrationKey(String registrationKey) {"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountRequest\u003e accountRequestList \u003d load().filter(\"registrationKey \u003d\", registrationKey).list();"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestList.size() \u003e 1) {"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"            log.severe(\"Duplicate registration keys detected for: \""},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"                    + accountRequestList.stream().map(i -\u003e i.getId()).collect(Collectors.joining(\", \")));"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestList.isEmpty()) {"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"            return null;"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        return makeAttributes(accountRequestList.get(0));"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequest getAccountRequestEntity(String id) {"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        return load().id(id).now();"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes an accountRequest."},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        assert institute !\u003d null;"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        deleteDocumentByAccountRequestId(AccountRequest.generateId(email, institute));"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        deleteEntity(Key.create(AccountRequest.class, AccountRequest.generateId(email, institute)));"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"     * Removes search document for the given account request by using {@code accountRequestUniqueId}."},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteDocumentByAccountRequestId(String accountRequestUniqueId) {"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        getSearchManager().deleteDocuments(Collections.singletonList(accountRequestUniqueId));"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"    LoadType\u003cAccountRequest\u003e load() {"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        return ofy().load().type(AccountRequest.class);"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    boolean hasExistingEntities(AccountRequestAttributes entityToCreate) {"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        Key\u003cAccountRequest\u003e keyToFind \u003d Key.create(AccountRequest.class,"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"                AccountRequest.generateId(entityToCreate.getEmail(), entityToCreate.getInstitute()));"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        return !load().filterKey(keyToFind).keys().list().isEmpty();"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"    AccountRequestAttributes makeAttributes(AccountRequest entity) {"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        assert entity !\u003d null;"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        return AccountRequestAttributes.valueOf(entity);"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Gets the number of account requests created within a specified time range."},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public int getNumAccountRequestsByTimeRange(Instant startTime, Instant endTime) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return load()"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .filter(\"createdAt \u003e\u003d\", startTime)"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .filter(\"createdAt \u003c\", endTime)"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .count();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"-":11,"samuelfangjw":166}},{"path":"src/main/java/teammates/storage/api/AccountsDb.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static com.googlecode.objectify.ObjectifyService.ofy;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.Key;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.cmd.LoadType;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Account;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Handles CRUD operations for accounts."},{"lineNumber":17,"author":{"gitId":"-"},"content":" *"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * @see Account"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * @see AccountAttributes"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public final class AccountsDb extends EntitiesDb\u003cAccount, AccountAttributes\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final AccountsDb instance \u003d new AccountsDb();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private AccountsDb() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static AccountsDb inst() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Gets an account."},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AccountAttributes getAccount(String googleId) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return googleId.isEmpty() ? null : makeAttributesOrNull(getAccountEntity(googleId));"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a list of accounts with email matching {@code email}."},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cAccountAttributes\u003e getAccountsForEmail(String email) {"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccount\u003e accounts \u003d load().filter(\"email \u003d\", email).list();"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        return makeAttributes(accounts);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Updates an account with {@link AccountAttributes.UpdateOptions}."},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return updated account"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if account cannot be found"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AccountAttributes updateAccount(AccountAttributes.UpdateOptions updateOptions)"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Account account \u003d getAccountEntity(updateOptions.getGoogleId());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (account \u003d\u003d null) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new EntityDoesNotExistException(ERROR_UPDATE_NON_EXISTENT + updateOptions);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AccountAttributes newAttributes \u003d makeAttributes(account);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        newAttributes.update(updateOptions);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        newAttributes.sanitizeForSaving();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!newAttributes.isValid()) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new InvalidParametersException(newAttributes.getInvalidityInfo());"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // update only if change"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        boolean hasSameAttributes \u003d this.\u003cBoolean\u003ehasSameValue(account.isInstructor(), newAttributes.isInstructor());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (hasSameAttributes) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            log.info(String.format(OPTIMIZED_SAVING_POLICY_APPLIED, Account.class.getSimpleName(), updateOptions));"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return newAttributes;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        account.setIsInstructor(newAttributes.isInstructor());"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        saveEntity(account);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return makeAttributes(account);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Deletes an account."},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if there is no such account."},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void deleteAccount(String googleId) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        deleteEntity(Key.create(Account.class, googleId));"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private Account getAccountEntity(String googleId) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Account account \u003d load().id(googleId).now();"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (account \u003d\u003d null) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return account;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    LoadType\u003cAccount\u003e load() {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return ofy().load().type(Account.class);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    boolean hasExistingEntities(AccountAttributes entityToCreate) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Key\u003cAccount\u003e keyToFind \u003d Key.create(Account.class, entityToCreate.getGoogleId());"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return !load().filterKey(keyToFind).keys().list().isEmpty();"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    AccountAttributes makeAttributes(Account entity) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assert entity !\u003d null;"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return AccountAttributes.valueOf(entity);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":115,"samuelfangjw":13}},{"path":"src/main/java/teammates/storage/api/OfyHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextEvent;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextListener;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.DatastoreOptions;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyFactory;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyService;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Account;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.storage.entity.BaseEntity;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Course;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.storage.entity.CourseStudent;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackQuestion;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackResponse;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackResponseComment;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackSession;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Instructor;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.storage.entity.StudentProfile;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.storage.entity.UsageStatistics;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Setup in web.xml to register Objectify at application startup."},{"lineNumber":26,"author":{"gitId":"-"},"content":" **/"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class OfyHelper implements ServletContextListener {"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static void initializeDatastore() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        DatastoreOptions.Builder builder \u003d DatastoreOptions.newBuilder().setProjectId(Config.APP_ID);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            builder.setHost(\"http://localhost:\" + Config.APP_LOCALDATASTORE_PORT);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ObjectifyService.init(new ObjectifyFactory(builder.build().getService()));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Register entity classes in Objectify service."},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void registerEntityClasses() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Account.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Course.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ObjectifyService.register(CourseStudent.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackQuestion.class);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackResponse.class);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackResponseComment.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackSession.class);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Instructor.class);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ObjectifyService.register(StudentProfile.class);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        ObjectifyService.register(AccountRequest.class);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ObjectifyService.register(UsageStatistics.class);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // enable the ability to use java.time.Instant to issue query"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ObjectifyService.factory().getTranslators().add(new BaseEntity.InstantTranslatorFactory());"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void contextInitialized(ServletContextEvent event) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Invoked by Jetty at application startup."},{"lineNumber":59,"author":{"gitId":"-"},"content":"        initializeDatastore();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        registerEntityClasses();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void contextDestroyed(ServletContextEvent event) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Nothing to do"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":65,"samuelfangjw":2}},{"path":"src/main/java/teammates/storage/entity/AccountRequest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.storage.entity;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.security.SecureRandom;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.annotation.Entity;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.annotation.Index;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.annotation.Translate;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Represents an AccountRequest entity."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"@Entity"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"@Index"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequest extends BaseEntity {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Id"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private String id;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private String registrationKey;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private String email;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private String name;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private String institute;"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private Instant registeredAt;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    private Instant createdAt;"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    @SuppressWarnings(\"unused\")"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequest() {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        // required by Objectify"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequest(String email, String name, String institute) {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        this.setEmail(email);"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        this.setName(name);"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        this.setInstitute(institute);"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        this.setId(generateId(email, institute));"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        this.setRegistrationKey(generateRegistrationKey());"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        this.setCreatedAt(Instant.now());"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        this.setRegisteredAt(null);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        return id;"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public void setId(String id) {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        this.id \u003d id.trim();"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegistrationKey() {"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return registrationKey;"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public void setRegistrationKey(String registrationKey) {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        this.registrationKey \u003d registrationKey.trim();"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public String getName() {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return name;"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    public void setName(String name) {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        this.name \u003d name.trim();"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    public String getEmail() {"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        return email;"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public void setEmail(String email) {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        this.email \u003d email.trim();"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    public String getInstitute() {"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        return institute;"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    public void setInstitute(String institute) {"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        this.institute \u003d institute.trim();"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    public Instant getRegisteredAt() {"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        return registeredAt;"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    public void setRegisteredAt(Instant registeredAt) {"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        this.registeredAt \u003d registeredAt;"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    public Instant getCreatedAt() {"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        return createdAt;"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    public void setCreatedAt(Instant createdAt) {"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        this.createdAt \u003d createdAt;"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"     * Generates an unique ID for the account request."},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    public static String generateId(String email, String institute) {"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        // Format: email%institute e.g., adam@gmail.com%TEAMMATES_TEST_INSTITUTE"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        return email + \u0027%\u0027 + institute;"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"     * Generate unique registration key for the account request."},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"     * The key contains random elements to avoid being guessed."},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    private String generateRegistrationKey() {"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        String uniqueId \u003d getId();"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        SecureRandom prng \u003d new SecureRandom();"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        return StringHelper.encrypt(uniqueId + prng.nextInt());"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":126}},{"path":"src/main/java/teammates/storage/search/AccountRequestSearchDocument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.storage.search;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * The {@link SearchDocument} object that defines how we store document for account requests."},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"class AccountRequestSearchDocument extends SearchDocument\u003cAccountRequestAttributes\u003e {"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    AccountRequestSearchDocument(AccountRequestAttributes accountRequest) {"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        super(accountRequest);"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    Map\u003cString, Object\u003e getSearchableFields() {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        Map\u003cString, Object\u003e fields \u003d new HashMap\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d attribute;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d accountRequest.getEmail();"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d accountRequest.getInstitute();"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        String[] searchableTexts \u003d {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"                accountRequest.getName(), email, institute,"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        fields.put(\"id\", email + \u0027%\u0027 + institute);"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        fields.put(\"_text_\", String.join(\" \", searchableTexts));"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        fields.put(\"email\", email);"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        fields.put(\"institute\", institute);"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        return fields;"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":36}},{"path":"src/main/java/teammates/storage/search/AccountRequestSearchManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.storage.search;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Comparator;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.apache.solr.client.solrj.SolrQuery;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.apache.solr.client.solrj.response.QueryResponse;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.apache.solr.common.SolrDocument;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.api.AccountRequestsDb;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * Acts as a proxy to search service for account request related search features."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestSearchManager extends SearchManager\u003cAccountRequestAttributes\u003e {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsDb accountRequestsDb \u003d AccountRequestsDb.inst();"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestSearchManager(String searchServiceHost, boolean isResetAllowed) {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        super(searchServiceHost, isResetAllowed);"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    String getCollectionName() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        return \"accountrequests\";"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    AccountRequestSearchDocument createDocument(AccountRequestAttributes accountRequest) {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        return new AccountRequestSearchDocument(accountRequest);"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    AccountRequestAttributes getAttributeFromDocument(SolrDocument document) {"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d (String) document.getFirstValue(\"email\");"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d (String) document.getFirstValue(\"institute\");"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.getAccountRequest(email, institute);"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    void sortResult(List\u003cAccountRequestAttributes\u003e result) {"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        result.sort(Comparator.comparing((AccountRequestAttributes accountRequest) -\u003e accountRequest.getCreatedAt())"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                .reversed());"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * Searches for account requests."},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cAccountRequestAttributes\u003e searchAccountRequests(String queryString) throws SearchServiceException {"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        SolrQuery query \u003d getBasicQuery(queryString);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        QueryResponse response \u003d performQuery(query);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        return convertDocumentToAttributes(response.getResults());"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":58}},{"path":"src/main/java/teammates/storage/search/SearchManagerFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.storage.search;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Factory that returns search manager implementation."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public final class SearchManagerFactory {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static InstructorSearchManager instructorInstance;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static StudentSearchManager studentInstance;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    private static AccountRequestSearchManager accountRequestInstance;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private SearchManagerFactory() {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // prevents initialization"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static InstructorSearchManager getInstructorSearchManager() {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return instructorInstance;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Registers the instructor search service into the factory."},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @SuppressWarnings(\"PMD.NonThreadSafeSingleton\") // ok to ignore as method is only invoked at application startup"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void registerInstructorSearchManager(InstructorSearchManager instructorSearchManager) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (instructorInstance \u003d\u003d null) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            instructorInstance \u003d instructorSearchManager;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static StudentSearchManager getStudentSearchManager() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return studentInstance;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Registers the student search service into the factory."},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @SuppressWarnings(\"PMD.NonThreadSafeSingleton\") // ok to ignore as method is only invoked at application startup"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void registerStudentSearchManager(StudentSearchManager studentSearchManager) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (studentInstance \u003d\u003d null) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            studentInstance \u003d studentSearchManager;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public static AccountRequestSearchManager getAccountRequestSearchManager() {"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestInstance;"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * Registers the account request search service into the factory."},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    @SuppressWarnings(\"PMD.NonThreadSafeSingleton\") // ok to ignore as method is only invoked at application startup"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public static void registerAccountRequestSearchManager(AccountRequestSearchManager accountRequestSearchManager) {"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestInstance \u003d\u003d null) {"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestInstance \u003d accountRequestSearchManager;"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":42,"samuelfangjw":15}},{"path":"src/main/java/teammates/storage/search/SearchManagerStarter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.storage.search;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextEvent;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextListener;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Setup in web.xml to register search manager at application startup."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SearchManagerStarter implements ServletContextListener {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void contextInitialized(ServletContextEvent event) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // Invoked by Jetty at application startup."},{"lineNumber":16,"author":{"gitId":"-"},"content":"        SearchManagerFactory.registerInstructorSearchManager(new InstructorSearchManager(Config.SEARCH_SERVICE_HOST, false));"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        SearchManagerFactory.registerStudentSearchManager(new StudentSearchManager(Config.SEARCH_SERVICE_HOST, false));"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        SearchManagerFactory.registerAccountRequestSearchManager("},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"                new AccountRequestSearchManager(Config.SEARCH_SERVICE_HOST, false));"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void contextDestroyed(ServletContextEvent event) {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // Nothing to do"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":25,"samuelfangjw":2}},{"path":"src/main/java/teammates/ui/constants/ResourceEndpoints.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.constants;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * API endpoints for resources."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public enum ResourceEndpoints {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.OFF:JavadocVariable"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    ERROR_REPORT(ResourceURIs.ERROR_REPORT),"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    AUTH(ResourceURIs.AUTH),"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    AUTH_REGKEY(ResourceURIs.AUTH_REGKEY),"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ACCOUNT(ResourceURIs.ACCOUNT),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ACCOUNT_RESET(ResourceURIs.ACCOUNT_RESET),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ACCOUNT_DOWNGRADE(ResourceURIs.ACCOUNT_DOWNGRADE),"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    ACCOUNT_REQUEST(ResourceURIs.ACCOUNT_REQUEST),"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    ACCOUNT_REQUEST_RESET(ResourceURIs.ACCOUNT_REQUEST_RESET),"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    ACCOUNTS(ResourceURIs.ACCOUNTS),"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    RESPONSE_COMMENT(ResourceURIs.RESPONSE_COMMENT),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    COURSE(ResourceURIs.COURSE),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    COURSE_ARCHIVE(ResourceURIs.COURSE_ARCHIVE),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    BIN_COURSE(ResourceURIs.BIN_COURSE),"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    COURSE_SECTIONS(ResourceURIs.COURSE_SECTIONS),"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    COURSES(ResourceURIs.COURSES),"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    INSTRUCTORS(ResourceURIs.INSTRUCTORS),"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    INSTRUCTOR(ResourceURIs.INSTRUCTOR),"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    INSTRUCTOR_PRIVILEGE(ResourceURIs.INSTRUCTOR_PRIVILEGE),"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    INSTRUCTOR_KEY(ResourceURIs.INSTRUCTOR_KEY),"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    RESULT(ResourceURIs.RESULT),"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    STUDENTS(ResourceURIs.STUDENTS),"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    STUDENT(ResourceURIs.STUDENT),"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    STUDENT_KEY(ResourceURIs.STUDENT_KEY),"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    SESSIONS_ONGOING(ResourceURIs.SESSIONS_ONGOING),"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    SESSION(ResourceURIs.SESSION),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    SESSION_LOGS(ResourceURIs.SESSION_LOGS),"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    SESSION_PUBLISH(ResourceURIs.SESSION_PUBLISH),"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    SESSION_REMIND_SUBMISSION(ResourceURIs.SESSION_REMIND_SUBMISSION),"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    SESSION_REMIND_RESULT(ResourceURIs.SESSION_REMIND_RESULT),"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    SESSION_STATS(ResourceURIs.SESSION_STATS),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    SESSION_SUBMITTED_GIVER_SET(ResourceURIs.SESSION_SUBMITTED_GIVER_SET),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    SESSIONS(ResourceURIs.SESSIONS),"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    BIN_SESSION(ResourceURIs.BIN_SESSION),"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    QUESTIONS(ResourceURIs.QUESTIONS),"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    QUESTION(ResourceURIs.QUESTION),"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    QUESTION_RECIPIENTS(ResourceURIs.QUESTION_RECIPIENTS),"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    RESPONSES(ResourceURIs.RESPONSES),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    HAS_RESPONSES(ResourceURIs.HAS_RESPONSES),"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    JOIN(ResourceURIs.JOIN),"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    JOIN_REMIND(ResourceURIs.JOIN_REMIND),"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    TIMEZONE(ResourceURIs.TIMEZONE),"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    SESSION_LINKS_RECOVERY(ResourceURIs.SESSION_LINKS_RECOVERY),"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    NATIONALITIES(ResourceURIs.NATIONALITIES),"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    EMAIL(ResourceURIs.EMAIL),"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE_PICTURE(ResourceURIs.STUDENT_PROFILE_PICTURE),"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE(ResourceURIs.STUDENT_PROFILE),"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    SEARCH_ACCOUNT_REQUESTS(ResourceURIs.SEARCH_ACCOUNT_REQUESTS),"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    SEARCH_INSTRUCTORS(ResourceURIs.SEARCH_INSTRUCTORS),"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    SEARCH_STUDENTS(ResourceURIs.SEARCH_STUDENTS),"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    LOGS(ResourceURIs.LOGS),"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    USAGE_STATISTICS(ResourceURIs.USAGE_STATISTICS),"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    ACTION_CLASS(ResourceURIs.ACTION_CLASS);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final String url;"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    ResourceEndpoints(String s) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.url \u003d s;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @JsonValue"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String getUrl() {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return url;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":72,"samuelfangjw":4}},{"path":"src/main/java/teammates/ui/output/AccountRequestData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javax.annotation.Nullable;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Output format of account request data."},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestData extends ApiOutput {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private final String email;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private final String name;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private final String institute;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private final String registrationKey;"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Nullable"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private final Long registeredAt;"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final long createdAt;"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestData(AccountRequestAttributes accountRequestInfo) {"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        this.name \u003d accountRequestInfo.getName();"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        this.email \u003d accountRequestInfo.getEmail();"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        this.institute \u003d accountRequestInfo.getInstitute();"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        this.registrationKey \u003d accountRequestInfo.getRegistrationKey();"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        this.createdAt \u003d accountRequestInfo.getCreatedAt().toEpochMilli();"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestInfo.getRegisteredAt() \u003d\u003d null) {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            this.registeredAt \u003d null;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            this.registeredAt \u003d accountRequestInfo.getRegisteredAt().toEpochMilli();"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public String getInstitute() {"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        return institute;"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public String getEmail() {"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        return email;"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public String getName() {"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        return name;"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegistrationKey() {"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return registrationKey;"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public Long getRegisteredAt() {"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        return registeredAt;"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public long getCreatedAt() {"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return createdAt;"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":57}},{"path":"src/main/java/teammates/ui/output/AccountRequestsData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * The API output format of a list of account requests."},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestsData extends ApiOutput {"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    private List\u003cAccountRequestData\u003e accountRequests;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestsData() {"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        this.accountRequests \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cAccountRequestData\u003e getAccountRequests() {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequests;"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public void setAccountRequests(List\u003cAccountRequestData\u003e accountRequests) {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        this.accountRequests \u003d accountRequests;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":24}},{"path":"src/main/java/teammates/ui/output/AccountsData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * The API output format of a list of accounts."},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class AccountsData extends ApiOutput {"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private List\u003cAccountData\u003e accounts;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public AccountsData(List\u003cAccountAttributes\u003e accountAttributes) {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        this.accounts \u003d accountAttributes.stream().map(AccountData::new).collect(Collectors.toList());"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cAccountData\u003e getAccounts() {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        return accounts;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":23}},{"path":"src/main/java/teammates/ui/servlets/AuthServlet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.servlets;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javax.servlet.http.Cookie;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServlet;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletRequest;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.api.client.auth.oauth2.AuthorizationCodeFlow;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.api.client.http.GenericUrl;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.api.client.http.HttpTransport;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.google.api.client.http.javanet.NetHttpTransport;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.google.api.client.json.JsonFactory;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.api.client.json.gson.GsonFactory;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.google.api.client.util.store.MemoryDataStoreFactory;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.UserInfoCookie;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Common servlet class that serves user authentication-related functions."},{"lineNumber":28,"author":{"gitId":"-"},"content":" */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"abstract class AuthServlet extends HttpServlet {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final MemoryDataStoreFactory DATA_STORE_FACTORY \u003d MemoryDataStoreFactory.getDefaultInstance();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final HttpTransport HTTP_TRANSPORT \u003d new NetHttpTransport();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final JsonFactory JSON_FACTORY \u003d GsonFactory.getDefaultInstance();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SCOPES \u003d Arrays.asList(\"https://www.googleapis.com/auth/userinfo.email\");"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Gets the authorization code flow to be used across all HTTP servlet requests."},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    AuthorizationCodeFlow getAuthorizationFlow() throws IOException {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new GoogleAuthorizationCodeFlow.Builder("},{"lineNumber":41,"author":{"gitId":"-"},"content":"                HTTP_TRANSPORT, JSON_FACTORY, Config.OAUTH2_CLIENT_ID, Config.OAUTH2_CLIENT_SECRET, SCOPES)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .setDataStoreFactory(DATA_STORE_FACTORY)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .setAccessType(\"offline\")"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the redirect URI for the given HTTP servlet request."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String getRedirectUri(HttpServletRequest req) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        GenericUrl url \u003d new GenericUrl(req.getRequestURL().toString().replaceFirst(\"^http://\", \"https://\"));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        url.setRawPath(\"/oauth2callback\");"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        url.set(\"ngsw-bypass\", \"true\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return url.build();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    Cookie getLoginInvalidationCookie() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Cookie cookie \u003d new Cookie(Const.SecurityConfig.AUTH_COOKIE_NAME, \"\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        cookie.setPath(\"/\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        cookie.setSecure(!Config.isDevServer());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        cookie.setHttpOnly(true);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        cookie.setMaxAge(0);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return cookie;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    Cookie getLoginCookie(UserInfoCookie uic) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Cookie cookie \u003d new Cookie(Const.SecurityConfig.AUTH_COOKIE_NAME,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                StringHelper.encrypt(JsonUtils.toCompactJson(uic)));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        cookie.setPath(\"/\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        cookie.setSecure(!Config.isDevServer());"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        cookie.setHttpOnly(true);"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"        cookie.setMaxAge((int) Const.COOKIE_VALIDITY_PERIOD.toSeconds()); // one week"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return cookie;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Represents the state object to be persisted during the callback."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static class AuthState {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        private final String nextUrl;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        private final String sessionId;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AuthState(String nextUrl, String sessionId) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            this.nextUrl \u003d nextUrl;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            this.sessionId \u003d sessionId;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String getNextUrl() {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return nextUrl;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public String getSessionId() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return sessionId;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":1,"-":95,"Nicolascwy":1}},{"path":"src/main/java/teammates/ui/webapi/AccountRequestSearchIndexingWorkerAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const.ParamsNames;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * Task queue worker action: performs account request search indexing."},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestSearchIndexingWorkerAction extends AdminOnlyAction {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public ActionResult execute() {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d getNonNullRequestParamValue(ParamsNames.INSTRUCTOR_EMAIL);"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d getNonNullRequestParamValue(ParamsNames.INSTRUCTOR_INSTITUTION);"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d logic.getAccountRequest(email, institute);"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            logic.putAccountRequestDocument(accountRequest);"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        } catch (SearchServiceException e) {"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            // Set an arbitrary retry code outside of the range 200-299 to trigger automatic retry"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            return new JsonResult(\"Failure\", HttpStatus.SC_BAD_GATEWAY);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(\"Successful\");"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":30}},{"path":"src/main/java/teammates/ui/webapi/ActionFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletRequest;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpDelete;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPut;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.CronJobURIs;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.TaskQueue;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Generates the matching {@link Action} for a given URI and request method."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public final class ActionFactory {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    static final Map\u003cString, Map\u003cString, Class\u003c? extends Action\u003e\u003e\u003e ACTION_MAPPINGS \u003d new HashMap\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String GET \u003d HttpGet.METHOD_NAME;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String POST \u003d HttpPost.METHOD_NAME;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String PUT \u003d HttpPut.METHOD_NAME;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DELETE \u003d HttpDelete.METHOD_NAME;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, POST, PutDataBundleAction.class);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Even though this is a DELETE action, PUT is used as DELETE does not allow usage of response body"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, PUT, DeleteDataBundleAction.class);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE_DOCUMENTS, PUT, PutDataBundleDocumentsAction.class);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EXCEPTION, GET, AdminExceptionTestAction.class);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Even though this is a GET action, POST is used in order to get extra protection from CSRF"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        map(ResourceURIs.USER_COOKIE, POST, GetUserCookieAction.class);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ERROR_REPORT, POST, SendErrorReportAction.class);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        map(ResourceURIs.TIMEZONE, GET, GetTimeZonesAction.class);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        map(ResourceURIs.NATIONALITIES, GET, GetNationalitiesAction.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH, GET, GetAuthInfoAction.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH_REGKEY, GET, GetRegkeyValidityAction.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, GET, GetAccountAction.class);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, POST, CreateAccountAction.class);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, DELETE, DeleteAccountAction.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_DOWNGRADE, PUT, DowngradeAccountAction.class);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_RESET, PUT, ResetAccountAction.class);"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, GET, GetAccountRequestAction.class);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, POST, CreateAccountRequestAction.class);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, DELETE, DeleteAccountRequestAction.class);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST_RESET, PUT, ResetAccountRequestAction.class);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        map(ResourceURIs.ACCOUNTS, GET, GetAccountsAction.class);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, GET, GetCourseAction.class);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, DELETE, DeleteCourseAction.class);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, POST, CreateCourseAction.class);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, PUT, UpdateCourseAction.class);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_ARCHIVE, PUT, ArchiveCourseAction.class);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, PUT, BinCourseAction.class);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, DELETE, RestoreCourseAction.class);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSES, GET, GetCoursesAction.class);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_SECTIONS, GET, GetCourseSectionNamesAction.class);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTORS, GET, GetInstructorsAction.class);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, GET, GetInstructorAction.class);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, DELETE, DeleteInstructorAction.class);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, GET, GetInstructorPrivilegeAction.class);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, PUT, UpdateInstructorPrivilegeAction.class);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, POST, CreateFeedbackResponseCommentAction.class);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, GET, GetFeedbackResponseCommentAction.class);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, PUT, UpdateFeedbackResponseCommentAction.class);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, DELETE, DeleteFeedbackResponseCommentAction.class);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESULT, GET, GetSessionResultsAction.class);"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        //STUDENTS APIs"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, GET, GetStudentsAction.class);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, PUT, EnrollStudentsAction.class);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, DELETE, DeleteStudentsAction.class);"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        //STUDENT APIs"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, DELETE, DeleteStudentAction.class);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, GET, GetStudentAction.class);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, PUT, UpdateStudentAction.class);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        //SEARCH APIs"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_INSTRUCTORS, GET, SearchInstructorsAction.class);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_STUDENTS, GET, SearchStudentsAction.class);"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        map(ResourceURIs.SEARCH_ACCOUNT_REQUESTS, GET, SearchAccountRequestsAction.class);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EMAIL, GET, GenerateEmailAction.class);"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS_ONGOING, GET, GetOngoingSessionsAction.class);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_STATS, GET, GetSessionResponseStatsAction.class);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, GET, GetFeedbackSessionAction.class);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, PUT, UpdateFeedbackSessionAction.class);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, POST, CreateFeedbackSessionAction.class);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, DELETE, DeleteFeedbackSessionAction.class);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, POST, PublishFeedbackSessionAction.class);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, DELETE, UnpublishFeedbackSessionAction.class);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_SUBMITTED_GIVER_SET, GET, GetFeedbackSessionSubmittedGiverSetAction.class);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_SUBMISSION, POST, RemindFeedbackSessionSubmissionAction.class);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_RESULT, POST, RemindFeedbackSessionResultAction.class);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS, GET, GetFeedbackSessionsAction.class);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, PUT, BinFeedbackSessionAction.class);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, DELETE, RestoreFeedbackSessionAction.class);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_KEY, POST, RegenerateInstructorKeyAction.class);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_KEY, POST, RegenerateStudentKeyAction.class);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTIONS, GET, GetFeedbackQuestionsAction.class);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, POST, CreateFeedbackQuestionAction.class);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, PUT, UpdateFeedbackQuestionAction.class);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, DELETE, DeleteFeedbackQuestionAction.class);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION_RECIPIENTS, GET, GetFeedbackQuestionRecipientsAction.class);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, GET, GetFeedbackResponsesAction.class);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, PUT, SubmitFeedbackResponsesAction.class);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        map(ResourceURIs.HAS_RESPONSES, GET, GetHasResponsesAction.class);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LINKS_RECOVERY, POST, SessionLinksRecoveryAction.class);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, GET, GetCourseJoinStatusAction.class);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, PUT, JoinCourseAction.class);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN_REMIND, POST, SendJoinReminderEmailAction.class);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, GET, GetStudentProfileAction.class);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, PUT, UpdateStudentProfileAction.class);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, GET, GetStudentProfilePictureAction.class);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, POST, PostStudentProfilePictureAction.class);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, DELETE, DeleteStudentProfilePictureAction.class);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, PUT, UpdateInstructorAction.class);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, POST, CreateInstructorAction.class);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // Logging and tracking"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LOGS, POST, CreateFeedbackSessionLogAction.class);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LOGS, GET, GetFeedbackSessionLogsAction.class);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        map(ResourceURIs.LOGS, GET, QueryLogsAction.class);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        map(ResourceURIs.USAGE_STATISTICS, GET, GetUsageStatisticsAction.class);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACTION_CLASS, GET, GetActionClassesAction.class);"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // Cron jobs; use GET request"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/appengine/docs/standard/java11/scheduling-jobs-with-cron-yaml"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_LOG_COMPILATION, GET, CompileLogsAction.class);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_DATASTORE_BACKUP, GET, DatastoreBackupAction.class);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_OPENING_REMINDERS, GET, FeedbackSessionOpeningRemindersAction.class);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSED_REMINDERS, GET, FeedbackSessionClosedRemindersAction.class);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSING_REMINDERS, GET, FeedbackSessionClosingRemindersAction.class);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS, GET, FeedbackSessionPublishedRemindersAction.class);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_OPENING_SOON_REMINDERS, GET,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningSoonRemindersAction.class);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_USAGE_STATISTICS_COLLECTION, GET, CalculateUsageStatisticsAction.class);"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // Task queue workers; use POST request"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/tasks/docs/creating-appengine-tasks"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL, POST, FeedbackSessionPublishedEmailWorkerAction.class);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                FeedbackSessionResendPublishedEmailWorkerAction.class);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL, POST, FeedbackSessionRemindEmailWorkerAction.class);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL, POST,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindParticularUsersEmailWorkerAction.class);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                FeedbackSessionUnpublishedEmailWorkerAction.class);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        map(TaskQueue.INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL, POST, InstructorCourseJoinEmailWorkerAction.class);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        map(TaskQueue.SEND_EMAIL_WORKER_URL, POST, SendEmailWorkerAction.class);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        map(TaskQueue.STUDENT_COURSE_JOIN_EMAIL_WORKER_URL, POST, StudentCourseJoinEmailWorkerAction.class);"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        map(TaskQueue.ACCOUNT_REQUEST_SEARCH_INDEXING_WORKER_URL, POST, AccountRequestSearchIndexingWorkerAction.class);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        map(TaskQueue.INSTRUCTOR_SEARCH_INDEXING_WORKER_URL, POST, InstructorSearchIndexingWorkerAction.class);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        map(TaskQueue.STUDENT_SEARCH_INDEXING_WORKER_URL, POST, StudentSearchIndexingWorkerAction.class);"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private ActionFactory() {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private static void map(String uri, String method, Class\u003c? extends Action\u003e actionClass) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ACTION_MAPPINGS.computeIfAbsent(uri, k -\u003e new HashMap\u003c\u003e()).put(method, actionClass);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns the matching {@link Action} object for the URI and method in {@code req}."},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public static Action getAction(HttpServletRequest req, String method) throws ActionMappingException {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String uri \u003d req.getRequestURI();"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (uri.contains(\";\")) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            uri \u003d uri.split(\";\")[0];"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return getAction(uri, method);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private static Action getAction(String uri, String method) throws ActionMappingException {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (!ACTION_MAPPINGS.containsKey(uri)) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Resource with URI \" + uri + \" is not found.\", HttpStatus.SC_NOT_FOUND);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Class\u003c? extends Action\u003e controllerClass \u003d"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                ACTION_MAPPINGS.getOrDefault(uri, new HashMap\u003c\u003e()).get(method);"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (controllerClass \u003d\u003d null) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Method [\" + method + \"] is not allowed for URI \" + uri + \".\","},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    HttpStatus.SC_METHOD_NOT_ALLOWED);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return controllerClass.getDeclaredConstructor().newInstance();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            assert false : \"Could not create the action for \" + uri;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":199,"samuelfangjw":7}},{"path":"src/main/java/teammates/ui/webapi/BasicCommentSubmissionAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Basic action class for feedback response comment related operation."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abstract class BasicCommentSubmissionAction extends BasicFeedbackSubmissionAction {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    static final String FEEDBACK_RESPONSE_COMMENT_EMPTY \u003d \"Comment cannot be empty\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Validates the questionType of the corresponding question."},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void validQuestionForCommentInSubmission(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (!feedbackQuestion.getQuestionDetailsCopy().isFeedbackParticipantCommentsOnResponsesAllowed()) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new InvalidHttpParameterException(\"Invalid question type for comment in submission\");"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Validates comment doesn\u0027t exist of corresponding response."},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void verifyCommentNotExist(String feedbackResponseId) throws InvalidOperationException {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        FeedbackResponseCommentAttributes comment \u003d"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                logic.getFeedbackResponseCommentForResponseFromParticipant(feedbackResponseId);"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (comment !\u003d null) {"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidOperationException(\"Comment has already been created for the response in submission\");"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Verify response ownership for student."},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void verifyResponseOwnerShipForStudent(StudentAttributes student, FeedbackResponseAttributes response,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                                           FeedbackQuestionAttributes question)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throws UnauthorizedAccessException {"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (question.getGiverType() \u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 !response.getGiver().equals(student.getTeam())) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new UnauthorizedAccessException(\"Response [\" + response.getId() + \"] is not accessible to \""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    + student.getTeam());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } else if (question.getGiverType() \u003d\u003d FeedbackParticipantType.STUDENTS"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 !response.getGiver().equals(student.getEmail())) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new UnauthorizedAccessException(\"Response [\" + response.getId() + \"] is not accessible to \""},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    + student.getName());"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Verify response ownership for instructor."},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void verifyResponseOwnerShipForInstructor(InstructorAttributes instructor,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                                              FeedbackResponseAttributes response)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throws UnauthorizedAccessException {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!response.getGiver().equals(instructor.getEmail())) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new UnauthorizedAccessException(\"Response [\" + response.getId() + \"] is not accessible to \""},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    + instructor.getName());"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":67,"samuelfangjw":1}},{"path":"src/main/java/teammates/ui/webapi/BinFeedbackSessionAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackSessionData;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Move the feedback session to the recycle bin."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"class BinFeedbackSessionAction extends Action {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return AuthType.LOGGED_IN;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    void checkSpecificAccessControl() throws UnauthorizedAccessException {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes feedbackSession \u003d getNonNullFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        gateKeeper.verifyAccessible("},{"lineNumber":25,"author":{"gitId":"-"},"content":"                logic.getInstructorForGoogleId(courseId, userInfo.getId()),"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                feedbackSession,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                Const.InstructorPermissions.CAN_MODIFY_SESSION);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public JsonResult execute() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            logic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (EntityDoesNotExistException e) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new EntityNotFoundException(e);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes recycleBinFs \u003d logic.getFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new JsonResult(new FeedbackSessionData(recycleBinFs));"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"samuelfangjw":1}},{"path":"src/main/java/teammates/ui/webapi/CreateAccountAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.Templates;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Creates a new instructor account with sample courses."},{"lineNumber":30,"author":{"gitId":"-"},"content":" */"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"class CreateAccountAction extends Action {"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return AuthType.LOGGED_IN;"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    void checkSpecificAccessControl() {"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        // Any user can create instructor account as long as the registration key is valid."},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() throws InvalidHttpRequestBodyException, InvalidOperationException {"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        String registrationKey \u003d getNonNullRequestParamValue(Const.ParamsNames.REGKEY);"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        String timezone \u003d getRequestParamValue(Const.ParamsNames.TIMEZONE);"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        if (timezone \u003d\u003d null || !FieldValidator.getInvalidityInfoForTimeZone(timezone).isEmpty()) {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            // Use default timezone instead"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            timezone \u003d Const.DEFAULT_TIME_ZONE;"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d logic.getAccountRequestForRegistrationKey(registrationKey);"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestAttributes \u003d\u003d null) {"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"            throw new EntityNotFoundException(\"Account request with registration key \""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                    + registrationKey + \" could not be found\");"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestAttributes.getRegisteredAt() !\u003d null) {"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidOperationException(\"The registration key \" + registrationKey + \" has already been used.\");"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        String instructorEmail \u003d accountRequestAttributes.getEmail();"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        String instructorName \u003d accountRequestAttributes.getName();"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        String instructorInstitution \u003d accountRequestAttributes.getInstitute();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String courseId;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"            courseId \u003d importDemoData(instructorEmail, instructorName, instructorInstitution, timezone);"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        } catch (InvalidParametersException ipe) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            // There should not be any invalid parameter here"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"            log.severe(\"Unexpected error\", ipe);"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            return new JsonResult(ipe.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cInstructorAttributes\u003e instructorList \u003d logic.getInstructorsForCourse(courseId);"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        assert !instructorList.isEmpty();"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"            logic.joinCourseForInstructor(instructorList.get(0).getKey(), userInfo.id);"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        } catch (EntityDoesNotExistException | EntityAlreadyExistsException | InvalidParametersException e) {"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"            // EntityDoesNotExistException should not be thrown as all entities should exist in demo course."},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            // EntityAlreadyExistsException should not be thrown as updated entities should not have"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"            // conflict with generated entities in new demo course."},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"            // InvalidParametersException should not be thrown as as there should not be any invalid parameters."},{"lineNumber":91,"author":{"gitId":"-"},"content":"            log.severe(\"Unexpected error\", e);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"            logic.updateAccountRequest(AccountRequestAttributes"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"                    .updateOptionsBuilder(instructorEmail, instructorInstitution)"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"                    .withRegisteredAt(Instant.now())"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"                    .build());"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        } catch (EntityDoesNotExistException | InvalidParametersException e) {"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"            // EntityDoesNotExistException should not be thrown as existence of account request has been validated before."},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"            // InvalidParametersException should not be thrown as there should not be any invalid parameters."},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"            log.severe(\"Unexpected error\", e);"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(\"Account successfully created\", HttpStatus.SC_OK);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private static String getDateString(Instant instant) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return TimeHelper.formatInstant(instant, Const.DEFAULT_TIME_ZONE, \"yyyy-MM-dd\");"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Imports demo course for the new instructor."},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @return the ID of demo course"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    private String importDemoData(String instructorEmail, String instructorName, String instructorInstitute, String timezone)"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String courseId \u003d generateDemoCourseId(instructorEmail);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Used for start time + visible time for all sessions"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String dateString1 \u003d getDateString(now.minus(7, ChronoUnit.DAYS));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Used for end time for sessions already past"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String dateString2 \u003d getDateString(now.minus(3, ChronoUnit.DAYS));"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // Used for result visible time for sessions already past"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String dateString3 \u003d getDateString(now.minus(2, ChronoUnit.DAYS));"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // Used for end time for session still ongoing"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String dateString4 \u003d getDateString(now.plus(3, ChronoUnit.DAYS));"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // Used for timestamp of comments"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String dateString5 \u003d getDateString(now);"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String dataBundleString \u003d Templates.populateTemplate(Templates.INSTRUCTOR_SAMPLE_DATA,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                // replace email"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \"teammates.demo.instructor@demo.course\", instructorEmail,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                // replace name"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \"Demo_Instructor\", instructorName,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                // replace course"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \"demo.course\", courseId,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                // replace institute"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \"demo.institute\", instructorInstitute,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                // replace timezone"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \"demo.timezone\", timezone,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                // replace dates"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \"demo.date1\", dateString1,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \"demo.date2\", dateString2,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \"demo.date3\", dateString3,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \"demo.date4\", dateString4,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \"demo.date5\", dateString5);"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!Const.DEFAULT_TIME_ZONE.equals(timezone)) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            dataBundleString \u003d replaceAdjustedTimeAndTimezone(dataBundleString, timezone);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        DataBundle data \u003d JsonUtils.fromJson(dataBundleString, DataBundle.class);"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        logic.persistDataBundle(data);"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d logic.getStudentsForCourse(courseId);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d logic.getInstructorsForCourse(courseId);"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            taskQueuer.scheduleStudentForSearchIndexing(student.getCourse(), student.getEmail());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            taskQueuer.scheduleInstructorForSearchIndexing(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return courseId;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    // Strategy to Generate New Demo Course Id:"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    // a. keep the part of email before \"@\""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    //    replace \"@\" with \".\""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    //    replace email host with their first 3 chars. eg, gmail.com -\u003e gma"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    //    append \"-demo\""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    //    to sum up: lebron@gmail.com -\u003e lebron.gma-demo"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    //"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    // b. if the generated courseId already exists, create another one by appending a integer to the previous courseId."},{"lineNumber":184,"author":{"gitId":"-"},"content":"    //    if the newly generate id still exists, increment the id, until we find a feasible one"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    //    eg."},{"lineNumber":186,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo  // already exists!"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo0 // already exists!"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo1 // already exists!"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    //    ..."},{"lineNumber":190,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo99 // already exists!"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo100 // found! a feasible id"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    //"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    // c. in any cases(a or b), if generated Id is longer than FieldValidator.COURSE_ID_MAX_LENGTH, shorten the part"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    //    before \"@\" of the initial input email, by continuously removing its last character"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Generate a course ID for demo course, and if the generated id already exists, try another one."},{"lineNumber":198,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * @param instructorEmail is the instructor email."},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * @return generated course id"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private String generateDemoCourseId(String instructorEmail) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String proposedCourseId \u003d generateNextDemoCourseId(instructorEmail, FieldValidator.COURSE_ID_MAX_LENGTH);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        while (logic.getCourse(proposedCourseId) !\u003d null) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            proposedCourseId \u003d generateNextDemoCourseId(proposedCourseId, FieldValidator.COURSE_ID_MAX_LENGTH);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return proposedCourseId;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Generate a course ID for demo course from a given email."},{"lineNumber":212,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * @param instructorEmail is the instructor email."},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * @return the first proposed course id. eg.lebron@gmail.com -\u003e lebron.gma-demo"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private String getDemoCourseIdRoot(String instructorEmail) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        String[] emailSplit \u003d instructorEmail.split(\"@\");"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        String username \u003d emailSplit[0];"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        String host \u003d emailSplit[1];"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"        String head \u003d StringHelper.replaceIllegalChars(username, FieldValidator.REGEX_COURSE_ID, \u0027_\u0027);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        String hostAbbreviation \u003d host.substring(0, Math.min(host.length(), 3));"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        return head + \".\" + hostAbbreviation + \"-demo\";"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Generate a course ID for demo course from a given email or a generated course Id."},{"lineNumber":230,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * \u003cp\u003eHere we check the input string is an email or course Id and handle them accordingly;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * check the resulting course id, and if bigger than maximumIdLength, cut it so that it equals maximumIdLength."},{"lineNumber":233,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * @param instructorEmailOrProposedCourseId is the instructor email or a proposed course id that already exists."},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * @param maximumIdLength is the maximum resulting id length allowed, above which we will cut the part before \"@\""},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * @return the proposed course id, e.g.:"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     *         \u003cul\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *         \u003cli\u003elebron@gmail.com -\u003e lebron.gma-demo\u003c/li\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     *         \u003cli\u003elebron.gma-demo -\u003e lebron.gma-demo0\u003c/li\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     *         \u003cli\u003elebron.gma-demo0 -\u003e lebron.gma-demo1\u003c/li\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e012345678901234567890123456789.gma-demo9 -\u003e 01234567890123456789012345678.gma-demo10 (being cut)\u003c/li\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     *         \u003c/ul\u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    String generateNextDemoCourseId(String instructorEmailOrProposedCourseId, int maximumIdLength) {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        boolean isFirstCourseId \u003d instructorEmailOrProposedCourseId.contains(\"@\");"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (isFirstCourseId) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return StringHelper.truncateHead(getDemoCourseIdRoot(instructorEmailOrProposedCourseId), maximumIdLength);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"        boolean isFirstTimeDuplicate \u003d instructorEmailOrProposedCourseId.endsWith(\"-demo\");"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        if (isFirstTimeDuplicate) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return StringHelper.truncateHead(instructorEmailOrProposedCourseId + \"0\", maximumIdLength);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        int lastIndexOfDemo \u003d instructorEmailOrProposedCourseId.lastIndexOf(\"-demo\");"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        String root \u003d instructorEmailOrProposedCourseId.substring(0, lastIndexOfDemo);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        int previousDedupSuffix \u003d Integer.parseInt(instructorEmailOrProposedCourseId.substring(lastIndexOfDemo + 5));"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"        return StringHelper.truncateHead(root + \"-demo\" + (previousDedupSuffix + 1), maximumIdLength);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"     * Replace time and timezone based on users timezone."},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"     * Strings representing instant are adjusted so that they represent the same date and time but in the users timezone."},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"     * Timezone is changed to users timezone."},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"    private String replaceAdjustedTimeAndTimezone(String template, String timezoneString) {"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"        // timezoneString should have been validated in #execute() method already"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"        assert ZoneId.getAvailableZoneIds().contains(timezoneString);"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"        String pattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z\"; // regex for instant"},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"        ZoneId timezone \u003d ZoneId.of(timezoneString);"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"        // replace instant with instant adjusted for user\u0027s timezone"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        return Pattern.compile(pattern).matcher(template).replaceAll(timestampMatch -\u003e {"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":"            String timestamp \u003d timestampMatch.group();"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"            Instant instant \u003d Instant.parse(timestamp);"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":"            if (TimeHelper.isSpecialTime(instant)) {"},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":"                return timestamp;"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"            return ZonedDateTime.ofInstant(instant, ZoneId.of(Const.DEFAULT_TIME_ZONE))"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"                    .withZoneSameLocal(timezone).toInstant().toString();"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":189,"samuelfangjw":98}},{"path":"src/main/java/teammates/ui/webapi/CreateAccountRequestAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.JoinLinkData;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.request.AccountCreateRequest;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Creates a new account request."},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"class CreateAccountRequestAction extends AdminOnlyAction {"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() throws InvalidHttpRequestBodyException, InvalidOperationException {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        AccountCreateRequest createRequest \u003d getAndValidateRequestBody(AccountCreateRequest.class);"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        String instructorName \u003d createRequest.getInstructorName().trim();"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        String instructorEmail \u003d createRequest.getInstructorEmail().trim();"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        String instructorInstitution \u003d createRequest.getInstructorInstitution().trim();"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestToCreate \u003d AccountRequestAttributes"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"                .builder(instructorEmail, instructorInstitution, instructorName)"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestAttributes \u003d logic.createAccountRequest(accountRequestToCreate);"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            // only schedule for search indexing if account request created successfully"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            taskQueuer.scheduleAccountRequestForSearchIndexing(instructorEmail, instructorInstitution);"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        } catch (InvalidParametersException ipe) {"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidHttpRequestBodyException(ipe);"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        } catch (EntityAlreadyExistsException eaee) {"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            // Use existing account request"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestAttributes \u003d logic.getAccountRequest(instructorEmail, instructorInstitution);"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assert accountRequestAttributes !\u003d null;"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestAttributes.getRegisteredAt() !\u003d null) {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidOperationException(\"Cannot create account request as instructor has already registered.\");"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        String joinLink \u003d accountRequestAttributes.getRegistrationUrl();"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        EmailWrapper email \u003d emailGenerator.generateNewInstructorAccountJoinEmail("},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                instructorEmail, instructorName, joinLink);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        emailSender.sendEmail(email);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        JoinLinkData output \u003d new JoinLinkData(joinLink);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(output);"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":56}},{"path":"src/main/java/teammates/ui/webapi/DeleteAccountRequestAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Deletes an existing account request."},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"class DeleteAccountRequestAction extends AdminOnlyAction {"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() throws InvalidOperationException {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_EMAIL);"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_INSTITUTION);"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d logic.getAccountRequest(email, institute);"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequest !\u003d null \u0026\u0026 accountRequest.getRegisteredAt() !\u003d null) {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"            // instructor is registered"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidOperationException(\"Account request of a registered instructor cannot be deleted.\");"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        logic.deleteAccountRequest(email, institute);"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(\"Account request successfully deleted.\");"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":26}},{"path":"src/main/java/teammates/ui/webapi/GetAccountRequestAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountRequestData;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Gets account request information."},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"class GetAccountRequestAction extends AdminOnlyAction {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() {"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_EMAIL);"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_INSTITUTION);"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestInfo \u003d logic.getAccountRequest(email, institute);"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestInfo \u003d\u003d null) {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            throw new EntityNotFoundException(\"Account request for email: \""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"                    + email + \" and institute: \" + institute + \" not found.\");"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestData output \u003d new AccountRequestData(accountRequestInfo);"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(output);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":28}},{"path":"src/main/java/teammates/ui/webapi/GetAccountsAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountsData;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * Gets all accounts with the given email."},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"class GetAccountsAction extends AdminOnlyAction {"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d getNonNullRequestParamValue(Const.ParamsNames.USER_EMAIL);"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        email \u003d SanitizationHelper.sanitizeEmail(email);"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountAttributes\u003e accounts \u003d logic.getAccountsForEmail(email);"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(new AccountsData(accounts));"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":25}},{"path":"src/main/java/teammates/ui/webapi/GetCourseJoinStatusAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.ui.output.JoinStatus;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Get the join status of a course."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class GetCourseJoinStatusAction extends Action {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return AuthType.LOGGED_IN;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void checkSpecificAccessControl() {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // Any user can use a join link as long as its parameters are valid"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public JsonResult execute() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String regkey \u003d getNonNullRequestParamValue(Const.ParamsNames.REGKEY);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String entityType \u003d getNonNullRequestParamValue(Const.ParamsNames.ENTITY_TYPE);"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        String isCreatingAccount \u003d getRequestParamValue(Const.ParamsNames.IS_CREATING_ACCOUNT);"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        switch (entityType) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        case Const.EntityType.STUDENT:"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return getStudentJoinStatus(regkey);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        case Const.EntityType.INSTRUCTOR:"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            return getInstructorJoinStatus(regkey, \"true\".equals(isCreatingAccount));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new InvalidHttpParameterException(\"Error: invalid entity type\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private JsonResult getStudentJoinStatus(String regkey) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d logic.getStudentForRegistrationKey(regkey);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (student \u003d\u003d null) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new EntityNotFoundException(\"No student with given registration key: \" + regkey);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return getJoinStatusResult(student.isRegistered());"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    private JsonResult getInstructorJoinStatus(String regkey, boolean isCreatingAccount) {"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        if (isCreatingAccount) {"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes accountRequest \u003d logic.getAccountRequestForRegistrationKey(regkey);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            if (accountRequest \u003d\u003d null) {"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                throw new EntityNotFoundException(\"No account request with given registration key: \" + regkey);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            return getJoinStatusResult(accountRequest.getRegisteredAt() !\u003d null);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d logic.getInstructorForRegistrationKey(regkey);"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (instructor \u003d\u003d null) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new EntityNotFoundException(\"No instructor with given registration key: \" + regkey);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return getJoinStatusResult(instructor.isRegistered());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private JsonResult getJoinStatusResult(boolean hasJoined) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JoinStatus result \u003d new JoinStatus(hasJoined);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new JsonResult(result);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":55,"samuelfangjw":15}},{"path":"src/main/java/teammates/ui/webapi/GetFeedbackResponsesAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionType;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponseCommentData;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponseData;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponsesData;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.ui.request.Intent;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Get all responses given by the user for a question."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class GetFeedbackResponsesAction extends BasicFeedbackSubmissionAction {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AuthType.PUBLIC;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void checkSpecificAccessControl() throws UnauthorizedAccessException {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String feedbackQuestionId \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_QUESTION_ID);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes feedbackQuestion \u003d logic.getFeedbackQuestion(feedbackQuestionId);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (feedbackQuestion \u003d\u003d null) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new EntityNotFoundException(\"The feedback question does not exist.\");"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes feedbackSession \u003d"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getNonNullFeedbackSession(feedbackQuestion.getFeedbackSessionName(), feedbackQuestion.getCourseId());"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        verifyInstructorCanSeeQuestionIfInModeration(feedbackQuestion);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        verifyNotPreview();"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Intent intent \u003d Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        switch (intent) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        case STUDENT_SUBMISSION:"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            gateKeeper.verifyAnswerableForStudent(feedbackQuestion);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            StudentAttributes studentAttributes \u003d getStudentOfCourseFromRequest(feedbackSession.getCourseId());"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case INSTRUCTOR_SUBMISSION:"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            gateKeeper.verifyAnswerableForInstructor(feedbackQuestion);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            InstructorAttributes instructorAttributes \u003d getInstructorOfCourseFromRequest(feedbackSession.getCourseId());"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            checkAccessControlForInstructorFeedbackSubmission(instructorAttributes, feedbackSession);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new InvalidHttpParameterException(\"Unknown intent \" + intent);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public JsonResult execute() {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String feedbackQuestionId \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_QUESTION_ID);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Intent intent \u003d Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionAttributes \u003d logic.getFeedbackQuestion(feedbackQuestionId);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responses;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        switch (intent) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case STUDENT_SUBMISSION:"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            StudentAttributes studentAttributes \u003d getStudentOfCourseFromRequest(questionAttributes.getCourseId());"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            responses \u003d logic.getFeedbackResponsesFromStudentOrTeamForQuestion(questionAttributes, studentAttributes);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case INSTRUCTOR_SUBMISSION:"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            InstructorAttributes instructorAttributes \u003d getInstructorOfCourseFromRequest(questionAttributes.getCourseId());"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            responses \u003d logic.getFeedbackResponsesFromInstructorForQuestion(questionAttributes, instructorAttributes);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new InvalidHttpParameterException(\"Unknown intent \" + intent);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseData\u003e responsesData \u003d new LinkedList\u003c\u003e();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        responses.forEach(response -\u003e {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            FeedbackResponseData data \u003d new FeedbackResponseData(response);"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"            if (questionAttributes.getQuestionType() \u003d\u003d FeedbackQuestionType.MCQ"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"                    || questionAttributes.getQuestionType() \u003d\u003d FeedbackQuestionType.MSQ) {"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                // Only MCQ and MSQ questions can have participant comment"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                FeedbackResponseCommentAttributes comment \u003d"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                        logic.getFeedbackResponseCommentForResponseFromParticipant(response.getId());"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                if (comment !\u003d null) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    data.setGiverComment(new FeedbackResponseCommentData(comment));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            responsesData.add(data);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        FeedbackResponsesData result \u003d new FeedbackResponsesData();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!responsesData.isEmpty()) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            result.setResponses(responsesData);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new JsonResult(result);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":98,"samuelfangjw":3}},{"path":"src/main/java/teammates/ui/webapi/ResetAccountRequestAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Logger;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.JoinLinkData;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Action: resets an account request."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"class ResetAccountRequestAction extends AdminOnlyAction {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() throws InvalidOperationException {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        String instructorEmail \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_EMAIL);"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_INSTITUTION);"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d logic.getAccountRequest(instructorEmail, institute);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequest \u003d\u003d null) {"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            throw new EntityNotFoundException(\"Account request for instructor with email: \" + instructorEmail"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"                    + \" and institute: \" + institute + \" does not exist.\");"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequest.getRegisteredAt() \u003d\u003d null) {"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidOperationException(\"Unable to reset account request as instructor is still unregistered.\");"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            accountRequest \u003d logic.updateAccountRequest(AccountRequestAttributes"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                .updateOptionsBuilder(instructorEmail, institute)"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(null)"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                .build());"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        } catch (InvalidParametersException | EntityDoesNotExistException e) {"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            // InvalidParametersException should not be thrown as validity of params verified when fetching entity."},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            // EntityDoesNoExistException shuold not be thrown as existence of entity has just been validated."},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            log.severe(\"Unexpected error\", e);"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        String joinLink \u003d accountRequest.getRegistrationUrl();"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        EmailWrapper email \u003d emailGenerator.generateNewInstructorAccountJoinEmail("},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                accountRequest.getEmail(), accountRequest.getName(), joinLink);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        emailSender.sendEmail(email);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        JoinLinkData output \u003d new JoinLinkData(joinLink);"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(output);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":57}},{"path":"src/main/java/teammates/ui/webapi/SearchAccountRequestsAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountRequestData;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountRequestsData;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Searches for account requests."},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"class SearchAccountRequestsAction extends AdminOnlyAction {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        String searchKey \u003d getNonNullRequestParamValue(Const.ParamsNames.SEARCH_KEY);"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountRequestAttributes\u003e accountRequests;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            accountRequests \u003d logic.searchAccountRequestsInWholeSystem(searchKey);"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        } catch (SearchServiceException e) {"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            return new JsonResult(e.getMessage(), e.getStatusCode());"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountRequestData\u003e accountRequestDataList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        for (AccountRequestAttributes accountRequest : accountRequests) {"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestData accountRequestData \u003d new AccountRequestData(accountRequest);"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestDataList.add(accountRequestData);"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestsData accountRequestsData \u003d new AccountRequestsData();"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsData.setAccountRequests(accountRequestDataList);"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(accountRequestsData);"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":38}},{"path":"src/test/java/teammates/architecture/ArchitectureTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.architecture;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static com.tngtech.archunit.lang.syntax.ArchRuleDefinition.noClasses;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.tngtech.archunit.base.DescribedPredicate;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.tngtech.archunit.core.domain.JavaClass;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.tngtech.archunit.core.domain.JavaClasses;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.tngtech.archunit.core.importer.ClassFileImporter;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Checks for the system\u0027s architectural integrity."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ArchitectureTest {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final JavaClasses ALL_CLASSES \u003d forClasses(\"teammates\");"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String COMMON_PACKAGE \u003d \"teammates.common\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String STORAGE_PACKAGE \u003d \"teammates.storage\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String STORAGE_API_PACKAGE \u003d STORAGE_PACKAGE + \".api\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String STORAGE_ENTITY_PACKAGE \u003d STORAGE_PACKAGE + \".entity\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String STORAGE_SEARCH_PACKAGE \u003d STORAGE_PACKAGE + \".search\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOGIC_PACKAGE \u003d \"teammates.logic\";"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOGIC_CORE_PACKAGE \u003d LOGIC_PACKAGE + \".core\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String LOGIC_API_PACKAGE \u003d LOGIC_PACKAGE + \".api\";"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"    private static final String LOGIC_EXTERNAL_PACKAGE \u003d LOGIC_PACKAGE + \".external\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String UI_PACKAGE \u003d \"teammates.ui\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String UI_WEBAPI_PACKAGE \u003d UI_PACKAGE + \".webapi\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String UI_SERVLETS_PACKAGE \u003d UI_PACKAGE + \".servlets\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String UI_OUTPUT_PACKAGE \u003d UI_PACKAGE + \".output\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String UI_REQUEST_PACKAGE \u003d UI_PACKAGE + \".request\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MAIN_PACKAGE \u003d \"teammates.main\";"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String TEST_DRIVER_PACKAGE \u003d \"teammates.test\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String E2E_PACKAGE \u003d \"teammates.e2e\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String E2E_CASES_PACKAGE \u003d E2E_PACKAGE + \".cases\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String E2E_PAGEOBJECTS_PACKAGE \u003d E2E_PACKAGE + \".pageobjects\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String E2E_UTIL_PACKAGE \u003d E2E_PACKAGE + \".util\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String LNP_PACKAGE \u003d \"teammates.lnp\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String LNP_CASES_PACKAGE \u003d LNP_PACKAGE + \".cases\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String LNP_UTIL_PACKAGE \u003d LNP_PACKAGE + \".util\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String CLIENT_PACKAGE \u003d \"teammates.client\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String CLIENT_CONNECTOR_PACKAGE \u003d CLIENT_PACKAGE + \".connector\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String CLIENT_SCRIPTS_PACKAGE \u003d CLIENT_PACKAGE + \".scripts\";"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String CLIENT_UTIL_PACKAGE \u003d CLIENT_PACKAGE + \".util\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String TEST_FILE_SUFFIX \u003d \"Test\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static String includeSubpackages(String pack) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return pack + \"..\";"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static JavaClasses forClasses(String... packageNames) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ClassFileImporter().importPackages(packageNames);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void testArchitecture_uiShouldNotTouchStorage() {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void testArchitecture_mainShouldNotTouchProductionCodeExceptCommon() {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(MAIN_PACKAGE)"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(UI_PACKAGE)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !input.getSimpleName().endsWith(\"Servlet\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                }).check(forClasses(MAIN_PACKAGE));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void testArchitecture_logicShouldNotTouchUi() {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"TaskQueuer\")"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE, UI_PACKAGE));"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .and().haveSimpleName(\"TaskQueuer\")"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(UI_OUTPUT_PACKAGE))"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE, UI_PACKAGE));"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void testArchitecture_storageShouldNotTouchLogic() {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .check(forClasses(STORAGE_PACKAGE, LOGIC_PACKAGE));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void testArchitecture_storageShouldNotTouchUi() {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .check(forClasses(STORAGE_PACKAGE, UI_PACKAGE));"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void testArchitecture_commonShouldNotTouchLogic() {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(COMMON_PACKAGE))"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .check(forClasses(COMMON_PACKAGE, LOGIC_PACKAGE));"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void testArchitecture_commonShouldNotTouchStorage() {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(COMMON_PACKAGE))"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_API_PACKAGE))"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_SEARCH_PACKAGE))"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .check(forClasses(COMMON_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(COMMON_PACKAGE))"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(COMMON_PACKAGE + \".datatransfer.attributes\"))"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .check(forClasses(COMMON_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void testArchitecture_commonShouldNotTouchUi() {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(COMMON_PACKAGE))"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .check(forClasses(COMMON_PACKAGE, UI_PACKAGE));"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void testArchitecture_uiShouldNotTouchLogicExceptForApi() {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_API_PACKAGE))"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE, LOGIC_PACKAGE));"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE, LOGIC_PACKAGE));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_onlyWebApiCanTouchOutput() {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_OUTPUT_PACKAGE))"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_OUTPUT_PACKAGE))"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_onlyWebApiCanTouchRequest() {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_apiRequestCanOnlyTouchRequestAndOutput() {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_apiOutputCanOnlyTouchOutput() {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_OUTPUT_PACKAGE))"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_controllerShouldBeSelfContained() {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_SERVLETS_PACKAGE))"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_SERVLETS_PACKAGE))"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_SERVLETS_PACKAGE))"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void testArchitecture_logic_logicCanOnlyAccessStorageApi() {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_SEARCH_PACKAGE))"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void testArchitecture_logic_coreLogicCanOnlyAccessItsCorrespondingDb() {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        for (JavaClass coreLogicClass : forClasses(LOGIC_CORE_PACKAGE)) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            String logicClassName \u003d coreLogicClass.getSimpleName();"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (\"DataBundleLogic\".equals(logicClassName)) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            if (logicClassName.endsWith(TEST_FILE_SUFFIX)) {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            String dbClassName \u003d logicClassName.replace(\"Logic\", \"Db\");"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"            noClasses()"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    .that().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    .and().doNotHaveSimpleName(logicClassName)"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    .and().doNotHaveSimpleName(logicClassName + TEST_FILE_SUFFIX)"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    .and().doNotHaveSimpleName(\"DataBundleLogic\")"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .should()"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                        @Override"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                        public boolean apply(JavaClass input) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                            return input.getPackageName().startsWith(STORAGE_API_PACKAGE)"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                                    \u0026\u0026 input.getSimpleName().equals(dbClassName);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    })"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    .check(forClasses(LOGIC_CORE_PACKAGE, STORAGE_API_PACKAGE));"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public void testArchitecture_logic_coreLogicShouldNotTouchApiLogic() {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_API_PACKAGE))"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE));"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":254,"author":{"gitId":"fsgmhoward"},"content":"    public void testArchitecture_logic_coreLogicShouldNotTouchExternalLogic() {"},{"lineNumber":255,"author":{"gitId":"fsgmhoward"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":256,"author":{"gitId":"fsgmhoward"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_EXTERNAL_PACKAGE))"},{"lineNumber":257,"author":{"gitId":"fsgmhoward"},"content":"                .check(forClasses(LOGIC_PACKAGE));"},{"lineNumber":258,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":260,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":261,"author":{"gitId":"fsgmhoward"},"content":"    public void testArchitecture_logic_externalLogicShouldNotTouchCoreLogic() {"},{"lineNumber":262,"author":{"gitId":"fsgmhoward"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_EXTERNAL_PACKAGE))"},{"lineNumber":263,"author":{"gitId":"fsgmhoward"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":264,"author":{"gitId":"fsgmhoward"},"content":"                .check(forClasses(LOGIC_PACKAGE));"},{"lineNumber":265,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void testArchitecture_storage_storageSearchShouldNotTouchStorageEntity() {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(STORAGE_SEARCH_PACKAGE))"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                .check(forClasses(STORAGE_PACKAGE));"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void testArchitecture_storage_storageEntityShouldNotTouchOtherStoragePackages() {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(STORAGE_PACKAGE)"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !STORAGE_ENTITY_PACKAGE.equals(input.getPackageName());"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                }).check(forClasses(STORAGE_PACKAGE));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void testArchitecture_testClasses_testCasesShouldBeIndependent() {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        noClasses().that().haveSimpleNameEndingWith(TEST_FILE_SUFFIX)"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                        return input.getSimpleName().endsWith(TEST_FILE_SUFFIX)"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !input.getSimpleName().startsWith(\"Base\");"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                }).check(ALL_CLASSES);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void testArchitecture_testClasses_driverShouldNotHaveAnyDependency() {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(TEST_DRIVER_PACKAGE))"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveSimpleNameEndingWith(TEST_FILE_SUFFIX)"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                .check(forClasses(TEST_DRIVER_PACKAGE));"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(TEST_DRIVER_PACKAGE))"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(STORAGE_PACKAGE)"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"OfyHelper\".equals(input.getSimpleName())"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":"                                \u0026\u0026 !\"AccountRequestSearchManager\".equals(input.getSimpleName())"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"InstructorSearchManager\".equals(input.getSimpleName())"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"StudentSearchManager\".equals(input.getSimpleName())"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"SearchManagerFactory\".equals(input.getSimpleName());"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(LOGIC_CORE_PACKAGE)"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"LogicStarter\".equals(input.getSimpleName());"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(UI_WEBAPI_PACKAGE)"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"Action\".equals(input.getSimpleName())"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"ActionFactory\".equals(input.getSimpleName());"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                .check(forClasses(TEST_DRIVER_PACKAGE));"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_e2eShouldBeSelfContained() {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_e2eShouldNotTouchProductionCodeExceptCommon() {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                .check(forClasses(E2E_PACKAGE));"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveSimpleName(\"Config\")"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                .check(forClasses(E2E_PACKAGE));"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_e2eTestCasesShouldBeIndependentOfEachOther() {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        noClasses().that(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            public boolean apply(JavaClass input) {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                return input.getPackageName().startsWith(E2E_CASES_PACKAGE) \u0026\u0026 !input.isInnerClass();"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }).should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            public boolean apply(JavaClass input) {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                return input.getPackageName().startsWith(E2E_CASES_PACKAGE)"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !input.getSimpleName().startsWith(\"Base\")"},{"lineNumber":366,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !input.isInnerClass();"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        }).check(forClasses(E2E_CASES_PACKAGE));"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_onlyE2ETestsCanAccessPageObjects() {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":374,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(E2E_PAGEOBJECTS_PACKAGE))"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(E2E_CASES_PACKAGE))"},{"lineNumber":376,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(E2E_PAGEOBJECTS_PACKAGE))"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                .check(forClasses(E2E_PACKAGE));"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_utilShouldNotHaveAnyDependency() {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(E2E_UTIL_PACKAGE))"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(E2E_PACKAGE)"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !E2E_UTIL_PACKAGE.equals(input.getPackageName());"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                }).check(forClasses(E2E_PACKAGE));"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    public void testArchitecture_lnp_lnpShouldBeSelfContained() {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(LNP_PACKAGE))"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LNP_PACKAGE))"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    public void testArchitecture_lnp_lnpShouldNotTouchProductionCodeExceptCommonAndRequests() {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LNP_PACKAGE))"},{"lineNumber":402,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(UI_PACKAGE)"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !UI_OUTPUT_PACKAGE.equals(input.getPackageName())"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !UI_REQUEST_PACKAGE.equals(input.getPackageName());"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                }).check(ALL_CLASSES);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    public void testArchitecture_lnp_lnpTestCasesShouldBeIndependentOfEachOther() {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        noClasses().that(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            public boolean apply(JavaClass input) {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                return input.getPackageName().startsWith(LNP_CASES_PACKAGE) \u0026\u0026 !input.isInnerClass();"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        }).should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":423,"author":{"gitId":"-"},"content":"            public boolean apply(JavaClass input) {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                return input.getPackageName().startsWith(LNP_CASES_PACKAGE)"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !input.getSimpleName().startsWith(\"Base\")"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !input.isInnerClass();"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        }).check(forClasses(LNP_CASES_PACKAGE));"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    public void testArchitecture_lnp_lnpShouldNotHaveAnyDependency() {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LNP_UTIL_PACKAGE))"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(LNP_PACKAGE)"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !LNP_UTIL_PACKAGE.equals(input.getPackageName());"},{"lineNumber":439,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":440,"author":{"gitId":"-"},"content":"                }).check(forClasses(LNP_PACKAGE));"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    public void testArchitecture_client_clientShouldBeSelfContained() {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(CLIENT_PACKAGE))"},{"lineNumber":446,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(CLIENT_PACKAGE))"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    public void testArchitecture_client_clientShouldNotTouchUiComponent() {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(CLIENT_PACKAGE))"},{"lineNumber":453,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":454,"author":{"gitId":"-"},"content":"                .check(forClasses(CLIENT_PACKAGE, UI_PACKAGE));"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":456,"author":{"gitId":"-"},"content":""},{"lineNumber":457,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    public void testArchitecture_client_connectorShouldNotTouchScripts() {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(CLIENT_CONNECTOR_PACKAGE))"},{"lineNumber":460,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(CLIENT_SCRIPTS_PACKAGE))"},{"lineNumber":461,"author":{"gitId":"-"},"content":"                .check(forClasses(CLIENT_PACKAGE));"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    public void testArchitecture_client_utilShouldNotHaveAnyDependency() {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(CLIENT_UTIL_PACKAGE))"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":469,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(CLIENT_PACKAGE)"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !CLIENT_UTIL_PACKAGE.equals(input.getPackageName());"},{"lineNumber":472,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":473,"author":{"gitId":"-"},"content":"                }).check(forClasses(CLIENT_PACKAGE));"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_loggingApiCanOnlyBeAccessedByLogger() {"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"Logger\")"},{"lineNumber":479,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"StdOutConsoleHandler\")"},{"lineNumber":480,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"java.util.logging..\")"},{"lineNumber":481,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_solrApiCanOnlyBeAccessedBySearchManagerClasses() {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"SearchManager\")"},{"lineNumber":487,"author":{"gitId":"samuelfangjw"},"content":"                .and().doNotHaveSimpleName(\"AccountRequestSearchManager\")"},{"lineNumber":488,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"InstructorSearchManager\")"},{"lineNumber":489,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"StudentSearchManager\")"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"org.apache.solr..\")"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_cloudStorageApiCanOnlyBeAccessedByGcsService() {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"GoogleCloudStorageService\")"},{"lineNumber":497,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(CLIENT_SCRIPTS_PACKAGE))"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"com.google.cloud.storage..\")"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_cloudTasksApiCanOnlyBeAccessedByCloudTasksService() {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"GoogleCloudTasksService\")"},{"lineNumber":505,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"com.google.cloud.tasks.v2..\")"},{"lineNumber":506,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_cloudLoggingApiCanOnlyBeAccessedByCloudLoggingService() {"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"GoogleCloudLoggingService\")"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"com.google.appengine.logging.v1..\")"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(\"com.google.cloud.logging..\")"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_objectifyApiCanOnlyBeAccessedBySomePackages() {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(STORAGE_API_PACKAGE))"},{"lineNumber":520,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":521,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(CLIENT_CONNECTOR_PACKAGE))"},{"lineNumber":522,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(CLIENT_SCRIPTS_PACKAGE))"},{"lineNumber":523,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"BaseTestCaseWithLocalDatabaseAccess\")"},{"lineNumber":524,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"com.googlecode.objectify..\")"},{"lineNumber":525,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_servletApiCanOnlyBeAccessedBySomePackages() {"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"HttpRequestHelper\")"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"OfyHelper\")"},{"lineNumber":532,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"MockFilterChain\")"},{"lineNumber":533,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"MockHttpServletRequest\")"},{"lineNumber":534,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"MockHttpServletResponse\")"},{"lineNumber":535,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"MockPart\")"},{"lineNumber":536,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":537,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveFullyQualifiedName(\"javax.servlet..\")"},{"lineNumber":538,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_jettyApiCanOnlyBeAccessedBySomePackages() {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(MAIN_PACKAGE)"},{"lineNumber":544,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveFullyQualifiedName(\"org.eclipse.jetty..\")"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_assertionApiCanOnlyBeAccessedBySomePackages() {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(E2E_PAGEOBJECTS_PACKAGE))"},{"lineNumber":551,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"BaseTestCase\")"},{"lineNumber":552,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"AssertHelper\")"},{"lineNumber":553,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"EmailChecker\")"},{"lineNumber":554,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveFullyQualifiedName(\"org.junit.Assert\")"},{"lineNumber":555,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_seleniumApiCanOnlyBeAccessedByPageObjects() {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(E2E_PAGEOBJECTS_PACKAGE)"},{"lineNumber":561,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"org.openqa.selenium..\")"},{"lineNumber":562,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":15,"-":548,"samuelfangjw":2}},{"path":"src/test/java/teammates/common/datatransfer/UserInfoCookieTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":" * SUT: {@link UserInfoCookie}."},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"public class UserInfoCookieTest extends BaseTestCase {"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"    private UserInfoCookie uc \u003d new UserInfoCookie(\"MockId\");"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"    public void testIsValid() {"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Cookie not expired\");"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"        uc.setExpiryTime(Instant.now().plus(1, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(uc.isValid());"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Cookie expired\");"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"        uc.setExpiryTime(Instant.now().minus(1, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"        assertFalse(uc.isValid());"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Invalid Signature\");"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"        uc.setExpiryTime(Instant.now().plus(1, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"        uc.setVerificationCode(\"WrongCode\");"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"        assertFalse(uc.isValid());"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":31}},{"path":"src/test/java/teammates/common/datatransfer/attributes/AccountRequestAttributesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link AccountRequestAttributes}."},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestAttributesTest extends BaseTestCase {"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void testValueOf_withTypicalData_shouldGenerateAttributesCorrectly() {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"                new AccountRequest(\"valid@test.com\", \"Valid Name\", \"Valid Institute\");"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d AccountRequestAttributes.valueOf(accountRequest);"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(accountRequestAttributes.getRegistrationKey());"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Valid Name\", accountRequestAttributes.getName());"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"valid@test.com\", accountRequestAttributes.getEmail());"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Valid Institute\", accountRequestAttributes.getInstitute());"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestAttributes.getRegisteredAt());"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public void testValueOf_registeredWithTypicalData_shouldGenerateAttributesCorrectly() {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"                new AccountRequest(\"valid@test.com\", \"Valid Name\", \"Valid Institute\");"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegisteredAt(Const.TIME_REPRESENTS_NOW);"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d AccountRequestAttributes.valueOf(accountRequest);"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Const.TIME_REPRESENTS_NOW, accountRequestAttributes.getRegisteredAt());"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public void testBuilder_withTypicalData_shouldBuildCorrectAttributes() {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        String validEmail \u003d \"valid@test.com\";"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        String validInstitute \u003d \"validInstitute\";"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        String validName \u003d \"valid name\";"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d AccountRequestAttributes"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"                .builder(validEmail, validInstitute, validName)"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Const.TIME_REPRESENTS_NOW, accountRequestAttributes.getRegisteredAt());"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(validEmail, accountRequestAttributes.getEmail());"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(validInstitute, accountRequestAttributes.getInstitute());"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(validName, accountRequestAttributes.getName());"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public void testBuilder_buildNothing_shouldUseDefaultValues() {"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"                AccountRequestAttributes.builder(\"valid@test.com\", \"valid institute\", \"valid name\").build();"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"valid@test.com\", accountRequestAttributes.getEmail());"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"valid institute\", accountRequestAttributes.getInstitute());"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"valid name\", accountRequestAttributes.getName());"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestAttributes.getRegistrationKey());"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestAttributes.getRegisteredAt());"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    public void testBuilder_withNullArguments_shouldThrowException() {"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"                    .builder(null, null, null)"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                    .build();"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public void testValidate() throws Exception {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes validAccountRequest \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(\"valid value\", validAccountRequest.isValid());"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        String invalidEmail \u003d \"invalid-email\";"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        String emptyName \u003d \"\";"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes invalidAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"                .builder(invalidEmail, \"institute\", emptyName)"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(\"invalid value\", invalidAccountRequest.isValid());"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        String errorMessage \u003d"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"                getPopulatedErrorMessage("},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"                    FieldValidator.EMAIL_ERROR_MESSAGE, invalidAccountRequest.getEmail(),"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                    FieldValidator.EMAIL_FIELD_NAME, FieldValidator.REASON_INCORRECT_FORMAT,"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"                    FieldValidator.EMAIL_MAX_LENGTH) + System.lineSeparator()"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"                + getPopulatedEmptyStringErrorMessage("},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"                      FieldValidator.SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING,"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"                      FieldValidator.PERSON_NAME_FIELD_NAME, FieldValidator.PERSON_NAME_MAX_LENGTH);"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"invalid value\", errorMessage, StringHelper.toString(invalidAccountRequest.getInvalidityInfo()));"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetValidityInfo() {"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        // already tested in testValidate() above"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    public void testIsValid() {"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        // already tested in testValidate() above"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    public void testToString() {"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes a \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"[AccountRequestAttributes] email: valid@test.com \""},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"                + \"name: valid-name institute: valid-institute\", a.toString());"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    public void testEquals() {"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        // When the two account requests have same values"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes similarAccountRequest \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(accountRequest.equals(similarAccountRequest));"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        // When the two account requests are different"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes differentAccountRequest \u003d"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"                AccountRequestAttributes.builder(\"test@test.com\", \"test-institute\", \"Another Name\").build();"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(accountRequest.equals(differentAccountRequest));"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        // When the other object is of different class"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(accountRequest.equals(3));"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    public void testHashCode() {"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        // When the two account requests have same values, they should have the same hash code"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestSimilar \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(accountRequest.hashCode() \u003d\u003d accountRequestSimilar.hashCode());"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        // When the two account requests are different, they should have different hash code"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestDifferent \u003d"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"                AccountRequestAttributes.builder(\"test@test.com\", \"test-institute\", \"Another Name\").build();"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(accountRequest.hashCode() \u003d\u003d accountRequestDifferent.hashCode());"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"    private static AccountRequestAttributes getValidAccountRequestAttributesObject() {"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(\"valid@test.com\", \"valid-name\", \"valid-institute\");"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegistrationKey(\"valid123\");"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        return AccountRequestAttributes.valueOf(accountRequest);"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":161}},{"path":"src/test/java/teammates/common/datatransfer/questions/FeedbackMsqQuestionDetailsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * SUT: {@link FeedbackMsqQuestionDetails}."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FeedbackMsqQuestionDetailsTest extends BaseTestCase {"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void testConstructor_defaultConstructor_fieldsShouldHaveCorrectDefaultValues() {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackQuestionType.MSQ, msqDetails.getQuestionType());"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(msqDetails.isHasAssignedWeights());"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(msqDetails.getMsqWeights().isEmpty());"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(0.0, msqDetails.getMsqOtherWeight());"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void testValidateQuestionDetails_choicesLessThanMinRequirement_errorReturned() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        msqDetails.setMsqChoices(Collections.singletonList(\"Choice 1\"));"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqDetails.validateQuestionDetails();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, errors.size());"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackMsqQuestionDetails.MSQ_ERROR_NOT_ENOUGH_CHOICES"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + FeedbackMsqQuestionDetails.MSQ_MIN_NUM_OF_CHOICES + \".\", errors.get(0));"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void testValidateQuestionDetails_numberOfChoicesGreaterThanWeights_errorReturned() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        msqDetails.setMsqChoices(Arrays.asList(\"Choice 1\", \"Choice 2\"));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        msqDetails.setMsqWeights(Collections.singletonList(1.22));"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        msqDetails.setHasAssignedWeights(true);"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqDetails.validateQuestionDetails();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(1, errors.size());"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackMsqQuestionDetails.MSQ_ERROR_INVALID_WEIGHT, errors.get(0));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void testValidateQuestionDetails_noValidationError_errorListShouldBeEmpty() {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        msqDetails.setMsqChoices(Arrays.asList(\"Choice 1\", \"Choice 2\"));"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        msqDetails.setMsqWeights(Arrays.asList(1.22, 1.55));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        msqDetails.setHasAssignedWeights(true);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqDetails.validateQuestionDetails();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(0, errors.size());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void testValidateQuestionDetails_negativeWeights_errorsReturned() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        msqDetails.setMsqChoices(Arrays.asList(\"Choice 1\", \"Choice 2\"));"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        msqDetails.setHasAssignedWeights(true);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        msqDetails.setMsqWeights(Arrays.asList(1.22, -1.55));"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqDetails.validateQuestionDetails();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(1, errors.size());"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackMsqQuestionDetails.MSQ_ERROR_INVALID_WEIGHT, errors.get(0));"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void testValidateQuestionDetails_negativeOtherWeight_errorsReturned() {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        msqDetails.setMsqChoices(Arrays.asList(\"Choice 1\", \"Choice 2\"));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        msqDetails.setMsqWeights(Arrays.asList(1.22, 1.55));"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        msqDetails.setOtherEnabled(true);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        msqDetails.setHasAssignedWeights(true);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        msqDetails.setMsqOtherWeight(-2);"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqDetails.validateQuestionDetails();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(1, errors.size());"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackMsqQuestionDetails.MSQ_ERROR_INVALID_WEIGHT, errors.get(0));"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void testValidateQuestionDetails_duplicateMsqOptions_errorReturned() {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        msqDetails.setMsqChoices(Arrays.asList(\"choice 1\", \"choice 1\"));"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqDetails.validateQuestionDetails();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(1, errors.size());"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackMsqQuestionDetails.MSQ_ERROR_DUPLICATE_MSQ_OPTION, errors.get(0));"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        //duplicate cases that has trailing and leading spaces"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        msqDetails.setMsqChoices(Arrays.asList(\"choice 1\", \" choice 1 \"));"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        errors \u003d msqDetails.validateQuestionDetails();"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(1, errors.size());"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackMsqQuestionDetails.MSQ_ERROR_DUPLICATE_MSQ_OPTION, errors.get(0));"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void testValidateQuestionDetails_maxSelectableChoicesMoreThanTotalNumberOfChoice_shouldReturnError() {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        msqDetails.setMsqChoices(Arrays.asList(\"a\", \"b\"));"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // \u0027other\u0027 is NOT one of the choices"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        msqDetails.setOtherEnabled(false);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        msqDetails.setGenerateOptionsFor(FeedbackParticipantType.NONE);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        msqDetails.setHasAssignedWeights(false);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        msqDetails.setMsqOtherWeight(0);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        msqDetails.setMsqWeights(new ArrayList\u003c\u003e());"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        msqDetails.setMaxSelectableChoices(3);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        msqDetails.setMinSelectableChoices(Const.POINTS_NO_VALUE);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqDetails.validateQuestionDetails();"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(1, errors.size());"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        AssertHelper.assertContains(FeedbackMsqQuestionDetails.MSQ_ERROR_MAX_SELECTABLE_EXCEEDED_TOTAL, errors.get(0));"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void testValidateQuestionDetails_maxSelectableChoicesEqualTotalNumberOfChoice_shouldNotReturnError() {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        msqDetails.setMsqChoices(Arrays.asList(\"a\", \"b\"));"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // \u0027other\u0027 is one of the choices"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        msqDetails.setOtherEnabled(true);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        msqDetails.setGenerateOptionsFor(FeedbackParticipantType.NONE);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        msqDetails.setHasAssignedWeights(false);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        msqDetails.setMsqOtherWeight(0);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        msqDetails.setMsqWeights(new ArrayList\u003c\u003e());"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        msqDetails.setMaxSelectableChoices(3);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        msqDetails.setMinSelectableChoices(Const.POINTS_NO_VALUE);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqDetails.validateQuestionDetails();"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(0, errors.size());"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void testValidateResponseDetails_otherAnswerNotChosenButOtherFieldIsNotEmpty_shouldTriggerError() {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqQuestionDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        msqQuestionDetails.setMsqChoices(Arrays.asList(\"choiceA\", \"choiceB\"));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        msqQuestionDetails.setOtherEnabled(true);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        msqQuestionDetails.setHasAssignedWeights(false);"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        FeedbackMsqResponseDetails feedbackMsqResponseDetails \u003d new FeedbackMsqResponseDetails();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setOther(false);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setOtherFieldContent(\"NonEmpty\");"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setAnswers(Arrays.asList(\"choiceA\"));"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqQuestionDetails.validateResponsesDetails("},{"lineNumber":162,"author":{"gitId":"-"},"content":"                Collections.singletonList(feedbackMsqResponseDetails), 0);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(1, errors.size());"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackMsqQuestionDetails.MSQ_ERROR_INVALID_OPTION, errors.get(0));"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // now set other field to empty"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setOtherFieldContent(\"\");"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        errors \u003d msqQuestionDetails.validateResponsesDetails(Collections.singletonList(feedbackMsqResponseDetails), 0);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(0, errors.size());"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void testValidateResponseDetails_choiceNotInValidChoices_shouldTriggerError() {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails msqQuestionDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        msqQuestionDetails.setMsqChoices(Arrays.asList(\"choiceA\", \"choiceB\"));"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        msqQuestionDetails.setOtherEnabled(true);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        msqQuestionDetails.setHasAssignedWeights(false);"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // typical case: answers not in valid choices"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        FeedbackMsqResponseDetails feedbackMsqResponseDetails \u003d new FeedbackMsqResponseDetails();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setOther(false);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setOtherFieldContent(\"\");"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setAnswers(Arrays.asList(\"choiceC\"));"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d msqQuestionDetails.validateResponsesDetails("},{"lineNumber":185,"author":{"gitId":"-"},"content":"                Collections.singletonList(feedbackMsqResponseDetails), 0);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(1, errors.size());"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(feedbackMsqResponseDetails.getAnswerString()"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + \" \" + FeedbackMsqQuestionDetails.MSQ_ERROR_INVALID_OPTION, errors.get(0));"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // now set choice to be within the valid choices"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setAnswers(Arrays.asList(\"choiceA\"));"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        errors \u003d msqQuestionDetails.validateResponsesDetails(Collections.singletonList(feedbackMsqResponseDetails), 0);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertEquals(0, errors.size());"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // when other field is enabled, the other field content will become a valid choice"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setOther(true);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setOtherFieldContent(\"Other\");"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setAnswers(Arrays.asList(\"Other1\"));"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        errors \u003d msqQuestionDetails.validateResponsesDetails(Collections.singletonList(feedbackMsqResponseDetails), 0);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(2, errors.size());"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(feedbackMsqResponseDetails.getAnswerString()"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                + \" \" + FeedbackMsqQuestionDetails.MSQ_ERROR_INVALID_OPTION, errors.get(0));"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackMsqQuestionDetails.MSQ_ERROR_OTHER_CONTENT_NOT_PROVIDED, errors.get(1));"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // make answer list and other field content consistent"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setOther(true);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setOtherFieldContent(\"Other\");"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        feedbackMsqResponseDetails.setAnswers(Arrays.asList(\"Other\"));"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        errors \u003d msqQuestionDetails.validateResponsesDetails(Collections.singletonList(feedbackMsqResponseDetails), 0);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertEquals(0, errors.size());"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void testIsInstructorCommentsOnResponsesAllowed_shouldReturnTrue() {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        FeedbackQuestionDetails feedbackQuestionDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertTrue(feedbackQuestionDetails.isInstructorCommentsOnResponsesAllowed());"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"    public void testIsFeedbackParticipantCommentsOnResponsesAllowed_shouldReturnTrue() {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        FeedbackQuestionDetails feedbackQuestionDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(feedbackQuestionDetails.isFeedbackParticipantCommentsOnResponsesAllowed());"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":222,"samuelfangjw":2}},{"path":"src/test/java/teammates/common/util/StringHelperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javax.crypto.Cipher;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javax.crypto.Mac;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.crypto.spec.SecretKeySpec;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * SUT: {@link StringHelper}."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StringHelperTest extends BaseTestCase {"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void testIsEmpty() {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isEmpty(null));"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isEmpty(\"\"));"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isEmpty(\"test\"));"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isEmpty(\"     \"));"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void testGenerateStringOfLength() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(\"sssss\", StringHelper.generateStringOfLength(5, \u0027s\u0027));"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(\"\", StringHelper.generateStringOfLength(0, \u0027s\u0027));"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void testIsMatching() {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(\"\\u00E0\", \"à\"));"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(\"\\u0061\\u0300\", \"à\"));"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(\"Héllo\", \"Hello\"));"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void testToString() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"\", StringHelper.toString(strings, \"\"));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"\", StringHelper.toString(strings, \"\u003cbr\u003e\"));"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        strings.add(\"aaa\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(\"aaa\", StringHelper.toString(strings, \"\"));"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(\"aaa\", StringHelper.toString(strings, \"\\n\"));"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(\"aaa\", StringHelper.toString(strings, \"\u003cbr\u003e\"));"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"        strings.add(\"bbb\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(\"aaabbb\", StringHelper.toString(strings, \"\"));"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(\"aaa\\nbbb\", StringHelper.toString(strings, \"\\n\"));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(\"aaa\u003cbr\u003ebbb\", StringHelper.toString(strings, \"\u003cbr\u003e\"));"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cInteger\u003e ints \u003d new ArrayList\u003c\u003e();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ints.add(1);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ints.add(44);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(\"1\\n44\", StringHelper.toString(ints, \"\\n\"));"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void testKeyEncryption() throws Exception {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String msg \u003d \"Test decryption\";"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String decrptedMsg;"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        decrptedMsg \u003d StringHelper.decrypt(StringHelper.encrypt(msg));"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(msg, decrptedMsg);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void testDefaultAesCipherParams() throws Exception {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        //plaintext is less than 1 block long"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String plaintextLength124 \u003d StringHelper.generateStringOfLength(31, \u0027A\u0027);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEncryptionUsesExpectedDefaultParams(plaintextLength124);"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        //plaintext is equal to 1 block"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String plaintextLength128 \u003d StringHelper.generateStringOfLength(32, \u0027A\u0027);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEncryptionUsesExpectedDefaultParams(plaintextLength128);"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        //plaintext is more than 1 block long"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String plaintextLength132 \u003d StringHelper.generateStringOfLength(33, \u0027A\u0027);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEncryptionUsesExpectedDefaultParams(plaintextLength132);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    * Verifies that encrypting with and without specifying algorithm parameters produce the same ciphertext."},{"lineNumber":90,"author":{"gitId":"-"},"content":"    * This ensures parameters being specified for encryption are the same as the defaults."},{"lineNumber":91,"author":{"gitId":"-"},"content":"    *"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    * @param plaintext the plaintext to encrypt, as a hexadecimal string."},{"lineNumber":93,"author":{"gitId":"-"},"content":"    */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static void assertEncryptionUsesExpectedDefaultParams(String plaintext) throws Exception {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String actualCiphertext \u003d encryptWithoutSpecifyingAlgorithmParams(plaintext);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedCiphertext \u003d StringHelper.encrypt(plaintext);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedCiphertext, actualCiphertext);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Encrypts plaintext without specifying mode and padding scheme during  {@link Cipher} initialization."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param plaintext the plaintext to encrypt as a hexadecimal string"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @return ciphertext the ciphertext as a hexadecimal string."},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private static String encryptWithoutSpecifyingAlgorithmParams(String plaintext) throws Exception {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        SecretKeySpec sks \u003d new SecretKeySpec(StringHelper.hexStringToByteArray(Config.ENCRYPTION_KEY), \"AES\");"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Cipher cipher \u003d Cipher.getInstance(\"AES\");"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        cipher.init(Cipher.ENCRYPT_MODE, sks, cipher.getParameters());"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        byte[] encrypted \u003d cipher.doFinal(plaintext.getBytes(Const.ENCODING));"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return StringHelper.byteArrayToHexString(encrypted);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private static String generateSignature(String data) throws Exception {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        SecretKeySpec signingKey \u003d"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                new SecretKeySpec(StringHelper.hexStringToByteArray(Config.ENCRYPTION_KEY), \"HmacSHA1\");"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Mac mac \u003d Mac.getInstance(\"HmacSHA1\");"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        mac.init(signingKey);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        byte[] value \u003d mac.doFinal(data.getBytes(Const.ENCODING));"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return StringHelper.byteArrayToHexString(value);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void testDecryptingInvalidCiphertextThrowsException() {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // The decrypt function converts a hex string into an array of bytes before decryption."},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // E.g AF is the byte 10101111"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Hence, non-hex strings should fail to decrypt."},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String invalidHexString \u003d \"GHI\";"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // AES requires the length of data to be multiples of 128 bits."},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        // Hence, decryption should fail  for inputs of 120 and 136 bits."},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String ciphertextLength120 \u003d \"AAAAAAAAAABBBBBBBBBBCCCCCCCCCC\";"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String ciphertextLength136 \u003d ciphertextLength120 + \"1234\";"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String[] invalidCiphertexts \u003d {invalidHexString, ciphertextLength120, ciphertextLength136};"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (String invalidCiphertext : invalidCiphertexts) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            assertThrows(InvalidParametersException.class, () -\u003e StringHelper.decrypt(invalidCiphertext));"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void testRemoveExtraSpace() {"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertNull(StringHelper.removeExtraSpace((String) null));"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String str \u003d \"\";"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(\"\", StringHelper.removeExtraSpace(str));"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        str \u003d \"a    a\";"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(\"a a\", StringHelper.removeExtraSpace(str));"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        str \u003d \" \\u00A0 a    a   \";"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(\"a a\", StringHelper.removeExtraSpace(str));"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        str \u003d \"    \";"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(\"\", StringHelper.removeExtraSpace(str));"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        str \u003d \" a      b       c       d      \";"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(\"a b c d\", StringHelper.removeExtraSpace(str));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void testReplaceIllegalChars() {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String regex \u003d \"[a-zA-Z0-9_.$-]+\";"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertNull(StringHelper.replaceIllegalChars(null, regex, \u0027_\u0027));"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String str \u003d \"\";"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(\"\", StringHelper.replaceIllegalChars(str, regex, \u0027_\u0027));"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        str \u003d \"abc\";"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(\"abc\", StringHelper.replaceIllegalChars(str, regex, \u0027_\u0027));"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        str \u003d \"illegal!?Chars+1\";"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(\"illegal__Chars_1\", StringHelper.replaceIllegalChars(str, regex, \u0027_\u0027));"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(\"illegal..Chars.1\", StringHelper.replaceIllegalChars(str, regex, \u0027.\u0027));"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void testConvertToEmptyStringIfNull() {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String empty \u003d \"\";"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String whitespace \u003d \" \";"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String nonEmpty \u003d \"non-empty\";"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(\"\", StringHelper.convertToEmptyStringIfNull(null));"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(\"non-empty\", StringHelper.convertToEmptyStringIfNull(nonEmpty));"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(\"\", StringHelper.convertToEmptyStringIfNull(empty));"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(\" \", StringHelper.convertToEmptyStringIfNull(whitespace));"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void testTruncateHead() {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(\"1234567890\", StringHelper.truncateHead(\"xxxx1234567890\", 10));"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertEquals(\"1234567890\", StringHelper.truncateHead(\"1234567890\", 10));"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(\"123456789\", StringHelper.truncateHead(\"123456789\", 10));"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(\"567890\", StringHelper.truncateHead(\"1234567890\", 6));"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void testSignatureGeneration() throws Exception {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String data1 \u003d \"National University of Singapore\";"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String data2 \u003d \"Nanyang Technological University\";"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertEquals(generateSignature(data1), StringHelper.generateSignature(data1));"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertNotEquals(StringHelper.generateSignature(data1), StringHelper.generateSignature(data2));"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void testSignatureVerification() {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String valid \u003d \"National University of Singapore\";"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        String invalid \u003d \"Nanyang Technological University\";"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String signature \u003d StringHelper.generateSignature(valid);"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isCorrectSignature(valid, signature));"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isCorrectSignature(valid, invalid));"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isCorrectSignature(valid, null));"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isCorrectSignature(null, signature));"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isCorrectSignature(invalid, signature));"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":220,"samuelfangjw":1}},{"path":"src/test/java/teammates/logic/api/EmailSenderTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.json.JSONArray;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.json.JSONObject;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.jsoup.Jsoup;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.mailjet.client.MailjetRequest;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.mailjet.client.resource.Email;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.Mail;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.sun.jersey.multipart.FormDataMultiPart;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.MailgunService;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.MailjetService;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.SendgridService;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * SUT: {@link SendgridService},"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *      {@link MailgunService},"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *      {@link MailjetService}."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EmailSenderTest extends BaseLogicTest {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no test data used in this test"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private EmailWrapper getTypicalEmailWrapper() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String senderName \u003d \"Sender Name\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String senderEmail \u003d \"sender@email.com\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String replyTo \u003d \"replyto@email.com\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String recipient \u003d \"recipient@email.com\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String bcc \u003d \"bcc@email.com\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String subject \u003d \"Test subject\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String content \u003d \"\u003cp\u003eThis is a test content\u003c/p\u003e\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EmailWrapper wrapper \u003d new EmailWrapper();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        wrapper.setSenderName(senderName);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        wrapper.setSenderEmail(senderEmail);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        wrapper.setReplyTo(replyTo);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        wrapper.setRecipient(recipient);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        wrapper.setBcc(bcc);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        wrapper.setSubject(subject);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        wrapper.setContent(content);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return wrapper;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void testConvertToSendgrid() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EmailWrapper wrapper \u003d getTypicalEmailWrapper();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Mail email \u003d new SendgridService().parseToEmail(wrapper);"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSenderEmail(), email.getFrom().getEmail());"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSenderName(), email.getFrom().getName());"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getRecipient(), email.personalization.get(0).getTos().get(0).getEmail());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getBcc(), email.personalization.get(0).getBccs().get(0).getEmail());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getReplyTo(), email.getReplyto().getEmail());"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSubject(), email.getSubject());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(\"text/plain\", email.getContent().get(0).getType());"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(Jsoup.parse(wrapper.getContent()).text(), email.getContent().get(0).getValue());"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(\"text/html\", email.getContent().get(1).getType());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getContent(), email.getContent().get(1).getValue());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void testConvertToMailgun() throws Exception {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EmailWrapper wrapper \u003d getTypicalEmailWrapper();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try (FormDataMultiPart formData \u003d new MailgunService().parseToEmail(wrapper)) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getSenderName() + \" \u003c\" + wrapper.getSenderEmail() + \"\u003e\","},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    formData.getField(\"from\").getValue());"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getRecipient(), formData.getField(\"to\").getValue());"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getBcc(), formData.getField(\"bcc\").getValue());"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getReplyTo(), formData.getField(\"h:Reply-To\").getValue());"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getSubject(), formData.getField(\"subject\").getValue());"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getContent(), formData.getField(\"html\").getValue());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void testConvertToMailjet() {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        EmailWrapper wrapper \u003d getTypicalEmailWrapper();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        MailjetRequest request \u003d new MailjetService().parseToEmail(wrapper);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JSONObject email \u003d new JSONObject(request.getBody());"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSenderEmail(), email.get(Email.FROMEMAIL));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSenderName(), email.get(Email.FROMNAME));"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getRecipient(),"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                     ((JSONArray) email.get(Email.RECIPIENTS)).getJSONObject(0).get(\"Email\"));"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getBcc(),"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                     ((JSONArray) email.get(Email.RECIPIENTS)).getJSONObject(1).get(\"Email\"));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getReplyTo(),"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                     ((JSONObject) email.get(Email.HEADERS)).getString(\"Reply-To\"));"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSubject(), email.get(Email.SUBJECT));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getContent(), email.get(Email.HTMLPART));"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":97}},{"path":"src/test/java/teammates/logic/core/AccountRequestsLogicTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.BeforeMethod;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link AccountRequestsLogic}."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestsLogicTest extends BaseLogicTest {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsLogic accountRequestsLogic \u003d AccountRequestsLogic.inst();"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    protected void prepareTestData() {"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        // test data is refreshed before each test case"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeMethod"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public void refreshTestData() {"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        removeAndRestoreTypicalDataBundle();"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void testCreateAccountRequest() throws Exception {"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d AccountRequestAttributes"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes createdAccountRequest \u003d"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsLogic.createAccountRequest(accountRequest);"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        verifyPresentInDatabase(createdAccountRequest);"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getEmail(), createdAccountRequest.getEmail());"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getName(), createdAccountRequest.getName());"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getInstitute(), createdAccountRequest.getInstitute());"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(createdAccountRequest.getRegistrationKey());"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(createdAccountRequest.getCreatedAt());"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: duplicate account request\");"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes duplicateAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(EntityAlreadyExistsException.class, () -\u003e {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestsLogic.createAccountRequest(duplicateAccountRequest);"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(\"valid@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure case: invalid parameter\");"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes invalidAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"invalid email\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.createAccountRequest(invalidAccountRequest));"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        AssertHelper.assertContains("},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                getPopulatedErrorMessage("},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_ERROR_MESSAGE, \"invalid email\","},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_FIELD_NAME, FieldValidator.REASON_INCORRECT_FORMAT,"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_MAX_LENGTH),"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                ipe.getMessage());"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class, () -\u003e accountRequestsLogic.createAccountRequest(null));"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    public void testUpdateAccountRequest() throws Exception {"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.createAccountRequest(AccountRequestAttributes"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                .build());"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes.UpdateOptions updateOptions \u003d AccountRequestAttributes"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                .updateOptionsBuilder(\"valid@test.com\", \"TEAMMATES Test Institute 1\")"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.updateAccountRequest(updateOptions);"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d accountRequestsLogic"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                .getAccountRequest(\"valid@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Const.TIME_REPRESENTS_NOW, accountRequest.getRegisteredAt());"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: account request not found\");"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes.UpdateOptions updateOptionsNotFound \u003d AccountRequestAttributes"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"                .updateOptionsBuilder(\"not_found@test.com\", \"Unknown Test Institute 1\")"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.updateAccountRequest(updateOptionsNotFound));"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    public void testDeleteAccountRequest() throws Exception {"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes a \u003d dataBundle.accountRequests.get(\"unregisteredInstructor1\");"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"silent deletion of non-existent account request\");"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(\"not_exist\", \"not_exist\");"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        verifyPresentInDatabase(a);"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(a.getEmail(), a.getInstitute());"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        verifyAbsentInDatabase(a);"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"silent deletion of same account request\");"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(a.getEmail(), a.getInstitute());"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.deleteAccountRequest(null, null));"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountRequestForRegistrationKey() throws Exception {"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes a \u003d"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsLogic.getAccountRequest(\"unregisteredinstructor1@gmail.tmt\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsLogic.getAccountRequestForRegistrationKey(a.getRegistrationKey());"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(a, accountRequestAttributes);"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request not found\");"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestsLogic.getAccountRequestForRegistrationKey(\"not-found\"));"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.getAccountRequestForRegistrationKey(null));"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountRequest() {"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes a \u003d dataBundle.accountRequests.get(\"unregisteredInstructor1\");"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsLogic.getAccountRequest(a.getEmail(), a.getInstitute());"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(a, accountRequestAttributes);"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request not found\");"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestsLogic.getAccountRequest(\"not-found@test.com\", \"not-found\"));"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.getAccountRequest(null, null));"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":176}},{"path":"src/test/java/teammates/logic/core/AccountsLogicTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeMethod;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.storage.api.AccountsDb;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * SUT: {@link AccountsLogic}."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AccountsLogicTest extends BaseLogicTest {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AccountsDb accountsDb \u003d AccountsDb.inst();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // test data is refreshed before each test case"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @BeforeMethod"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void refreshTestData() {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        removeAndRestoreTypicalDataBundle();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private String getKeyForInstructor(String courseId, String email) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForEmail(courseId, email).getKey();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void testCreateAccount() throws Exception {"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AccountAttributes accountToCreate \u003d AccountAttributes.builder(\"id\")"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .withName(\"name\")"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .withEmail(\"test@email.com\")"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .withInstitute(\"dev\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .withIsInstructor(true)"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        accountsLogic.createAccount(accountToCreate);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(accountToCreate);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(\"id\");"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ______TS(\"invalid parameters exception case\");"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        accountToCreate \u003d AccountAttributes.builder(\"\")"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withName(\"name\")"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withEmail(\"test@email.com\")"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withInstitute(\"dev\")"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withIsInstructor(true)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AccountAttributes[] finalAccount \u003d new AccountAttributes[] { accountToCreate };"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(InvalidParametersException.class, () -\u003e accountsLogic.createAccount(finalAccount[0]));"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountsForEmail() throws Exception {"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case: no accounts with email\");"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountAttributes\u003e accounts \u003d accountsDb.getAccountsForEmail(\"test@email.com\");"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(accounts.isEmpty());"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case: one account with email\");"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes firstAccount \u003d AccountAttributes.builder(\"first.googleId\")"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                .withName(\"name\")"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"test@email.com\")"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"                .withInstitute(\"dev\")"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                .withIsInstructor(true)"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        accountsDb.createEntity(firstAccount);"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        accounts \u003d accountsDb.getAccountsForEmail(\"test@email.com\");"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(List.of(firstAccount), accounts);"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case: multiple accounts with email\");"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes secondAccount \u003d AccountAttributes.builder(\"second.googleId\")"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"                .withName(\"name\")"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"test@email.com\")"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"                .withInstitute(\"dev\")"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"                .withIsInstructor(true)"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        accountsDb.createEntity(secondAccount);"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes thirdAccount \u003d AccountAttributes.builder(\"third.googleId\")"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"                .withName(\"name\")"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"test@email.com\")"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"                .withInstitute(\"dev\")"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"                .withIsInstructor(false)"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        accountsDb.createEntity(thirdAccount);"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        accounts \u003d accountsDb.getAccountsForEmail(\"test@email.com\");"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(3, accounts.size());"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(List.of(firstAccount, secondAccount, thirdAccount).containsAll(accounts));"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        // delete created accounts"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        accountsDb.deleteAccount(firstAccount.getGoogleId());"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        accountsDb.deleteAccount(secondAccount.getGoogleId());"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        accountsDb.deleteAccount(thirdAccount.getGoogleId());"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void testAccountFunctions() throws Exception {"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        ______TS(\"test isAccountAnInstructor\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(accountsLogic.isAccountAnInstructor(\"idOfInstructor1OfCourse1\"));"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(accountsLogic.isAccountAnInstructor(\"student1InCourse1\"));"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(accountsLogic.isAccountAnInstructor(\"id-does-not-exist\"));"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        ______TS(\"test downgradeInstructorToStudentCascade\");"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        accountsLogic.downgradeInstructorToStudentCascade(\"idOfInstructor2OfCourse1\");"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(accountsLogic.isAccountAnInstructor(\"idOfInstructor2OfCourse1\"));"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"        accountsLogic.downgradeInstructorToStudentCascade(\"student1InCourse1\");"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(accountsLogic.isAccountAnInstructor(\"student1InCourse1\"));"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(EntityDoesNotExistException.class, () -\u003e {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            accountsLogic.downgradeInstructorToStudentCascade(\"id-does-not-exist\");"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        ______TS(\"test makeAccountInstructor\");"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        accountsLogic.makeAccountInstructor(\"student2InCourse1\");"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(accountsLogic.isAccountAnInstructor(\"student2InCourse1\"));"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        accountsLogic.downgradeInstructorToStudentCascade(\"student2InCourse1\");"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(EntityDoesNotExistException.class, () -\u003e {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            accountsLogic.makeAccountInstructor(\"id-does-not-exist\");"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void testJoinCourseForStudent() throws Exception {"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String correctStudentId \u003d \"correctStudentId\";"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String courseId \u003d \"idOfTypicalCourse1\";"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String originalEmail \u003d \"original@email.com\";"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // Create correct student with original@email.com"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StudentAttributes studentData \u003d StudentAttributes"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .builder(courseId, originalEmail)"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .withName(\"name\")"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .withSectionName(\"sectionName\")"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .withTeamName(\"teamName\")"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .withComment(\"\")"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        studentsLogic.createStudent(studentData);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        studentData \u003d studentsLogic.getStudentForEmail(courseId,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                originalEmail);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        StudentAttributes finalStudent \u003d studentData;"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(studentData);"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ______TS(\"failure: wrong key\");"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String wrongKey \u003d StringHelper.encrypt(\"wrongkey\");"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                () -\u003e accountsLogic.joinCourseForStudent(wrongKey, correctStudentId));"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(\"No student with given registration key: \" + wrongKey, ednee.getMessage());"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ______TS(\"failure: invalid parameters\");"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                () -\u003e accountsLogic.joinCourseForStudent(finalStudent.getKey(), \"wrong student\"));"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        AssertHelper.assertContains(FieldValidator.REASON_INCORRECT_FORMAT, ipe.getMessage());"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ______TS(\"failure: googleID belongs to an existing student in the course\");"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String existingId \u003d \"AccLogicT.existing.studentId\";"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        StudentAttributes existingStudent \u003d StudentAttributes"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .builder(courseId, \"differentEmail@email.com\")"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .withName(\"name\")"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .withSectionName(\"sectionName\")"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .withTeamName(\"teamName\")"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .withComment(\"\")"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .withGoogleId(existingId)"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        studentsLogic.createStudent(existingStudent);"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EntityAlreadyExistsException eaee \u003d assertThrows(EntityAlreadyExistsException.class,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                () -\u003e accountsLogic.joinCourseForStudent(finalStudent.getKey(), existingId));"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertEquals(\"Student has already joined course\", eaee.getMessage());"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        ______TS(\"success: without encryption and account already exists\");"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        AccountAttributes accountData \u003d AccountAttributes.builder(correctStudentId)"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .withName(\"nameABC\")"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .withEmail(\"real@gmail.com\")"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                .withInstitute(\"TEAMMATES Test Institute 1\")"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                .withIsInstructor(true)"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"        accountsLogic.createAccount(accountData);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        accountsLogic.joinCourseForStudent(studentData.getKey(), correctStudentId);"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"        studentData.setGoogleId(accountData.getGoogleId());"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(studentData);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertEquals("},{"lineNumber":224,"author":{"gitId":"-"},"content":"                correctStudentId,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentForEmail(studentData.getCourse(), studentData.getEmail()).getGoogleId());"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"        ______TS(\"failure: already joined\");"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        eaee \u003d assertThrows(EntityAlreadyExistsException.class,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                () -\u003e accountsLogic.joinCourseForStudent(finalStudent.getKey(), correctStudentId));"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertEquals(\"Student has already joined course\", eaee.getMessage());"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"        ______TS(\"failure: valid key belongs to a different user\");"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"        eaee \u003d assertThrows(EntityAlreadyExistsException.class,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                () -\u003e accountsLogic.joinCourseForStudent(finalStudent.getKey(), \"wrongstudent\"));"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertEquals(\"Student has already joined course\", eaee.getMessage());"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        ______TS(\"success: with encryption and new account to be created\");"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(correctStudentId);"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"        originalEmail \u003d \"email2@gmail.com\";"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        studentData \u003d StudentAttributes"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                .builder(courseId, originalEmail)"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                .withName(\"name\")"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                .withSectionName(\"sectionName\")"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                .withTeamName(\"teamName\")"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                .withComment(\"\")"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        studentsLogic.createStudent(studentData);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        studentData \u003d studentsLogic.getStudentForEmail(courseId,"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                originalEmail);"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        String key \u003d studentData.getKey();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        accountsLogic.joinCourseForStudent(key, correctStudentId);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        studentData.setGoogleId(correctStudentId);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(studentData);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertEquals(correctStudentId,"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentForEmail(studentData.getCourse(), studentData.getEmail()).getGoogleId());"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // check that we have the corresponding new account created."},{"lineNumber":263,"author":{"gitId":"-"},"content":"        accountData.setGoogleId(correctStudentId);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        accountData.setEmail(originalEmail);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        accountData.setName(\"name\");"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        accountData.setInstructor(false);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(accountData);"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"        ______TS(\"success: join course as student does not revoke instructor status\");"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // promote account to instructor"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        accountsLogic.makeAccountInstructor(correctStudentId);"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        // make the student \u0027unregistered\u0027 again"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        studentData.setGoogleId(\"\");"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        studentsLogic.updateStudentCascade("},{"lineNumber":277,"author":{"gitId":"-"},"content":"                StudentAttributes.updateOptionsBuilder(studentData.getCourse(), studentData.getEmail())"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                        .withGoogleId(studentData.getGoogleId())"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                        .build()"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        assertEquals(\"\","},{"lineNumber":282,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentForEmail(studentData.getCourse(), studentData.getEmail()).getGoogleId());"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        // rejoin"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        accountsLogic.joinCourseForStudent(key, correctStudentId);"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        assertEquals(correctStudentId,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentForEmail(studentData.getCourse(), studentData.getEmail()).getGoogleId());"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // check if still instructor"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        assertTrue(accountsLogic.isAccountAnInstructor(correctStudentId));"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(correctStudentId);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(existingId);"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public void testJoinCourseForInstructor() throws Exception {"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructorNotYetJoinCourse\");"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        String loggedInGoogleId \u003d \"AccLogicT.instr.id\";"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        String[] key \u003d new String[] {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                getKeyForInstructor(instructor.getCourseId(), instructor.getEmail()),"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"        ______TS(\"failure: googleID belongs to an existing instructor in the course\");"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"        EntityAlreadyExistsException eaee \u003d assertThrows(EntityAlreadyExistsException.class,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                () -\u003e accountsLogic.joinCourseForInstructor("},{"lineNumber":309,"author":{"gitId":"-"},"content":"                        key[0], \"idOfInstructorWithOnlyOneSampleCourse\"));"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        assertEquals(\"Instructor has already joined course\", eaee.getMessage());"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        ______TS(\"success: instructor joined and new account be created\");"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"        accountsLogic.joinCourseForInstructor(key[0], loggedInGoogleId);"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"        InstructorAttributes joinedInstructor \u003d"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorForEmail(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertEquals(loggedInGoogleId, joinedInstructor.getGoogleId());"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"        AccountAttributes accountCreated \u003d accountsLogic.getAccount(loggedInGoogleId);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        assertNotNull(accountCreated);"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"        ______TS(\"success: instructor joined but Account object creation goes wrong\");"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"        //Delete account to simulate Account object creation goes wrong"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        accountsDb.deleteAccount(loggedInGoogleId);"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        //Try to join course again, Account object should be recreated"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        accountsLogic.joinCourseForInstructor(key[0], loggedInGoogleId);"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        joinedInstructor \u003d instructorsLogic.getInstructorForEmail(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        assertEquals(loggedInGoogleId, joinedInstructor.getGoogleId());"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"        accountCreated \u003d accountsLogic.getAccount(loggedInGoogleId);"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        assertNotNull(accountCreated);"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(loggedInGoogleId);"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"        ______TS(\"success: instructor joined but account already exists\");"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"        AccountAttributes nonInstrAccount \u003d dataBundle.accounts.get(\"student1InCourse1\");"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        InstructorAttributes newIns \u003d InstructorAttributes"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                .builder(instructor.getCourseId(), nonInstrAccount.getEmail())"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                .withName(nonInstrAccount.getName())"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"        instructorsLogic.createInstructor(newIns);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        key[0] \u003d getKeyForInstructor(instructor.getCourseId(), nonInstrAccount.getEmail());"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        assertFalse(accountsLogic.getAccount(nonInstrAccount.getGoogleId()).isInstructor());"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"        accountsLogic.joinCourseForInstructor(key[0], nonInstrAccount.getGoogleId());"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"        joinedInstructor \u003d instructorsLogic.getInstructorForEmail(instructor.getCourseId(), nonInstrAccount.getEmail());"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        assertEquals(nonInstrAccount.getGoogleId(), joinedInstructor.getGoogleId());"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        assertTrue(accountsLogic.getAccount(nonInstrAccount.getGoogleId()).isInstructor());"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        assertTrue(accountsLogic.isAccountAnInstructor(nonInstrAccount.getGoogleId()));"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"        ______TS(\"success: instructor join and assigned institute when some instructors have not joined course\");"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"        instructor \u003d dataBundle.instructors.get(\"instructor4\");"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        newIns \u003d InstructorAttributes"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                .builder(instructor.getCourseId(), \"anInstructorWithoutGoogleId@gmail.com\")"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                .withName(\"anInstructorWithoutGoogleId\")"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"        instructorsLogic.createInstructor(newIns);"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"        nonInstrAccount \u003d dataBundle.accounts.get(\"student2InCourse1\");"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        nonInstrAccount.setEmail(\"newInstructor@gmail.com\");"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        nonInstrAccount.setName(\" newInstructor\");"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        nonInstrAccount.setGoogleId(\"newInstructorGoogleId\");"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        newIns \u003d InstructorAttributes.builder(instructor.getCourseId(), nonInstrAccount.getEmail())"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                .withName(nonInstrAccount.getName())"},{"lineNumber":374,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"        instructorsLogic.createInstructor(newIns);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        key[0] \u003d getKeyForInstructor(instructor.getCourseId(), nonInstrAccount.getEmail());"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"        accountsLogic.joinCourseForInstructor(key[0], nonInstrAccount.getGoogleId());"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"        joinedInstructor \u003d instructorsLogic.getInstructorForEmail(instructor.getCourseId(), nonInstrAccount.getEmail());"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        assertEquals(nonInstrAccount.getGoogleId(), joinedInstructor.getGoogleId());"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        assertTrue(accountsLogic.isAccountAnInstructor(nonInstrAccount.getGoogleId()));"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"        AccountAttributes instructorAccount \u003d accountsLogic.getAccount(nonInstrAccount.getGoogleId());"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        assertEquals(\"TEAMMATES Test Institute 1\", instructorAccount.getInstitute());"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(nonInstrAccount.getGoogleId());"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"        ______TS(\"failure: instructor already joined\");"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"        nonInstrAccount \u003d dataBundle.accounts.get(\"student1InCourse1\");"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        instructor \u003d dataBundle.instructors.get(\"instructorNotYetJoinCourse\");"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        key[0] \u003d getKeyForInstructor(instructor.getCourseId(), nonInstrAccount.getEmail());"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        joinedInstructor \u003d instructorsLogic.getInstructorForEmail(instructor.getCourseId(), nonInstrAccount.getEmail());"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        InstructorAttributes[] finalInstructor \u003d new InstructorAttributes[] { joinedInstructor };"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        eaee \u003d assertThrows(EntityAlreadyExistsException.class,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                () -\u003e accountsLogic.joinCourseForInstructor(key[0], finalInstructor[0].getGoogleId()));"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        assertEquals(\"Instructor has already joined course\", eaee.getMessage());"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"        ______TS(\"failure: key belongs to a different user\");"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"        eaee \u003d assertThrows(EntityAlreadyExistsException.class,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                () -\u003e accountsLogic.joinCourseForInstructor(key[0], \"otherUserId\"));"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        assertEquals(\"Instructor has already joined course\", eaee.getMessage());"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"        ______TS(\"failure: invalid key\");"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        String invalidKey \u003d StringHelper.encrypt(\"invalidKey\");"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                () -\u003e accountsLogic.joinCourseForInstructor(invalidKey, loggedInGoogleId));"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        assertEquals(\"No instructor with given registration key: \" + invalidKey,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"                ednee.getMessage());"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    public void testDeleteAccountCascade_lastInstructorInCourse_shouldDeleteOrphanCourse() throws Exception {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructor5\");"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        AccountAttributes account \u003d dataBundle.accounts.get(\"instructor5\");"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        // create a profile for the account"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        StudentProfileAttributes studentProfile \u003d StudentProfileAttributes.builder(account.getGoogleId())"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                .withShortName(\"Test\")"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        profilesLogic.updateOrCreateStudentProfile("},{"lineNumber":426,"author":{"gitId":"-"},"content":"                StudentProfileAttributes.updateOptionsBuilder(account.getGoogleId())"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                        .withShortName(studentProfile.getShortName())"},{"lineNumber":428,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"        // verify the instructor is the last instructor of a course"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        assertEquals(1, instructorsLogic.getInstructorsForCourse(instructor.getCourseId()).size());"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"        // Make instructor account id a student too."},{"lineNumber":434,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d StudentAttributes"},{"lineNumber":435,"author":{"gitId":"-"},"content":"                .builder(instructor.getCourseId(), \"email@test.com\")"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                .withName(instructor.getName())"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                .withSectionName(\"section\")"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                .withTeamName(\"team\")"},{"lineNumber":439,"author":{"gitId":"-"},"content":"                .withComment(\"\")"},{"lineNumber":440,"author":{"gitId":"-"},"content":"                .withGoogleId(instructor.getGoogleId())"},{"lineNumber":441,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        studentsLogic.createStudent(student);"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(account);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(studentProfile);"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(instructor);"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(student);"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(instructor.getGoogleId());"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(account);"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(studentProfile);"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(instructor);"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(student);"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        // course is deleted because it is the last instructor of the course"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        assertNull(coursesLogic.getCourse(instructor.getCourseId()));"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    public void testDeleteAccountCascade_notLastInstructorInCourse_shouldNotDeleteCourse() {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1OfCourse1 \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":461,"author":{"gitId":"-"},"content":""},{"lineNumber":462,"author":{"gitId":"-"},"content":"        // verify the instructor is not the last instructor of a course"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        assertTrue(instructorsLogic.getInstructorsForCourse(instructor1OfCourse1.getCourseId()).size() \u003e 1);"},{"lineNumber":464,"author":{"gitId":"-"},"content":""},{"lineNumber":465,"author":{"gitId":"-"},"content":"        assertNotNull(instructor1OfCourse1.getGoogleId());"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(instructor1OfCourse1.getGoogleId());"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"        // course is not deleted"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        assertNotNull(coursesLogic.getCourse(instructor1OfCourse1.getCourseId()));"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    public void testDeleteAccountCascade_instructorArchivedAsLastInstructor_shouldDeleteCourseAlso() throws Exception {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor5 \u003d dataBundle.instructors.get(\"instructor5\");"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"        assertNotNull(instructor5.getGoogleId());"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        instructorsLogic.setArchiveStatusOfInstructor(instructor5.getGoogleId(), instructor5.getCourseId(), true);"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"        // verify the instructor is the last instructor of a course"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        assertEquals(1, instructorsLogic.getInstructorsForCourse(instructor5.getCourseId()).size());"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"-"},"content":"        assertTrue("},{"lineNumber":483,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorForEmail(instructor5.getCourseId(), instructor5.getEmail()).isArchived());"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(instructor5.getGoogleId());"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"        // the archived instructor is also deleted"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        assertNull(instructorsLogic.getInstructorForEmail(instructor5.getCourseId(), instructor5.getEmail()));"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        // the course is also deleted"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        assertNull(coursesLogic.getCourse(instructor5.getCourseId()));"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public void testDeleteAccountCascade_nonExistentAccount_shouldPass() {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1OfCourse1 \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(\"not_exist\");"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"        // other irrelevant instructors remain"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        assertNotNull(instructorsLogic.getInstructorForEmail("},{"lineNumber":501,"author":{"gitId":"-"},"content":"                instructor1OfCourse1.getCourseId(), instructor1OfCourse1.getEmail()));"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":503,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":454,"samuelfangjw":49}},{"path":"src/test/java/teammates/logic/external/GoogleRecaptchaServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.apache.http.client.ClientProtocolException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.apache.http.client.HttpResponseException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.http.conn.ConnectTimeoutException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * SUT: {@link GoogleRecaptchaService}."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GoogleRecaptchaServiceTest extends BaseTestCase {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tests the overloaded {@link GoogleRecaptchaService#isVerificationSuccessful(String)} method."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void testIsVerificationSuccessful() {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ______TS(\"null or empty CAPTCHA response\");"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(null));"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"\"));"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ______TS(\"empty CAPTCHA secret key\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(null).isVerificationSuccessful(\"empty secret key\"));"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"\").isVerificationSuccessful(\"empty secret key\"));"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ______TS(\"Successful verification\");"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Use RecaptchaVerifierStub to mimic success response"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"success\"));"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ______TS(\"reCAPTCHA error codes that can occur during the API request execution\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Use RecaptchaVerifierStub to mimic error codes"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"missing recaptcha params\"));"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"invalid recaptcha secret key\"));"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"invalid recaptcha response\"));"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"invalid recaptcha request\"));"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ______TS(\"Exceptions that can occur during the API request execution\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Use RecaptchaVerifierStub to mimic runtime exceptions"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"null response\"));"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"invalid uri\"));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"http protocol error\"));"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"i/o exception\"));"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"timeout exception\"));"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"non 2xx http response\"));"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * A subclass to mock responses and exceptions that could result in"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@link GoogleRecaptchaService#getApiResponse(String, String)}."},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Success response is also mocked to decouple from the Google server for testing purposes. This way, tests are not"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * affected by potential issues in the Google server (e.g. server down)."},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://developers.google.com/recaptcha/docs/verify#error-code-reference\"\u003ereCAPTCHA API error codes\u003c/a\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static class GoogleRecaptchaServiceStub extends GoogleRecaptchaService {"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        private GoogleRecaptchaServiceStub(String secretKey) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            super(secretKey);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        @SuppressWarnings(\"PMD.AvoidThrowingNullPointerException\") // deliberately done for testing"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        protected String getApiResponse(String captchaResponse, String secretKey) throws URISyntaxException, IOException {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            switch (captchaResponse) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            case \"success\":"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                return \"{ success: true }\";"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"            case \"missing recaptcha params\":"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                return \"{ success: false, error-codes: [ \u0027missing-input-response\u0027, \u0027missing-input-secret\u0027 ] }\";"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"            case \"invalid recaptcha secret key\":"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                return \"{ success: false, error-codes: [ \u0027invalid-input-secret\u0027 ] }\";"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"            case \"invalid recaptcha response\":"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                return \"{ success: false, error-codes: [ \u0027invalid-input-response\u0027 ] }\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"            case \"invalid recaptcha request\":"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                return \"{ success: false, error-codes: [ \u0027bad-request\u0027 ] }\";"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"            case \"null response\":"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                throw new NullPointerException();"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"            case \"invalid uri\":"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                throw new URISyntaxException(\"Invalid URI\", \"testing with invalid uri exception\");"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"            case \"http protocol error\":"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                throw new ClientProtocolException();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"            case \"i/o exception\":"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                throw new IOException();"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"            case \"timeout exception\":"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                throw new ConnectTimeoutException();"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"            case \"non 2xx http response\":"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                throw new HttpResponseException(500, \"testing with http failure status code\");"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                return \"{ success: false }\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":107}},{"path":"src/test/java/teammates/logic/external/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":" * Contains test cases for {@link teammates.logic.external} package."},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"}],"authorContributionMap":{"fsgmhoward":4}},{"path":"src/test/java/teammates/storage/api/AccountRequestsDbTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.BaseTestCaseWithLocalDatabaseAccess;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link AccountRequestsDb}."},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestsDbTest extends BaseTestCaseWithLocalDatabaseAccess {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsDb accountRequestsDb \u003d AccountRequestsDb.inst();"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void testCreateAccountRequest() throws Exception {"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d AccountRequestAttributes"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest \u003d accountRequestsDb.createEntity(accountRequest);"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        verifyPresentInDatabase(accountRequest);"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: duplicate account request\");"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes duplicateAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(EntityAlreadyExistsException.class, () -\u003e {"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestsDb.createEntity(duplicateAccountRequest);"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(\"valid@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure case: invalid parameter\");"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes invalidAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"invalid email\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.createEntity(invalidAccountRequest));"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        AssertHelper.assertContains("},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"                getPopulatedErrorMessage("},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_ERROR_MESSAGE, \"invalid email\","},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_FIELD_NAME, FieldValidator.REASON_INCORRECT_FORMAT,"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_MAX_LENGTH),"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                ipe.getMessage());"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class, () -\u003e accountRequestsDb.createEntity(null));"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    public void testUpdateAccountRequest() throws Exception {"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.createEntity(AccountRequestAttributes"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                .build());"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes.UpdateOptions updateOptions \u003d AccountRequestAttributes"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                .updateOptionsBuilder(\"valid@test.com\", \"TEAMMATES Test Institute 1\")"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.updateAccountRequest(updateOptions);"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d accountRequestsDb"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"                .getAccountRequest(\"valid@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Const.TIME_REPRESENTS_NOW, accountRequest.getRegisteredAt());"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: account request not found\");"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes.UpdateOptions updateOptionsNotFound \u003d AccountRequestAttributes"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                .updateOptionsBuilder(\"not_found@test.com\", \"Unknown Test Institute 1\")"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.updateAccountRequest(updateOptionsNotFound));"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    public void testDeleteAccountRequest() {"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(\"valid2@test.com\","},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                        \"Test account Name\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegistrationKey(\"2-123456\");"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.saveEntity(accountRequest);"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"silent deletion of non-existent account request\");"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(\"not_exist\", \"not_exist\");"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        verifyPresentInDatabase(AccountRequestAttributes.valueOf(accountRequest));"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(\"valid2@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        verifyAbsentInDatabase(AccountRequestAttributes.valueOf(accountRequest));"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"silent deletion of same account request\");"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(\"valid2@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.deleteAccountRequest(null, null));"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountRequestForRegistrationKey() {"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(\"valid3@test.com\","},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"                        \"Test account Name\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegistrationKey(\"3-123456\");"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.saveEntity(accountRequest);"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsDb.getAccountRequestForRegistrationKey(\"3-123456\");"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(AccountRequestAttributes.valueOf(accountRequest), accountRequestAttributes);"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request not found\");"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes notFoundRequestAttributes \u003d"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsDb.getAccountRequestForRegistrationKey(\"not-found\");"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(notFoundRequestAttributes);"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.getAccountRequestForRegistrationKey(null));"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountRequest() {"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(\"valid4@test.com\","},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"                        \"Test account Name\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegistrationKey(\"4-123456\");"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.saveEntity(accountRequest);"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsDb.getAccountRequest(\"valid4@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(AccountRequestAttributes.valueOf(accountRequest), accountRequestAttributes);"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request not found\");"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes notFoundRequestAttributes \u003d"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsDb.getAccountRequest(\"not-found@test.com\", \"not found\");"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(notFoundRequestAttributes);"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.getAccountRequest(null, null));"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":172}},{"path":"src/test/java/teammates/storage/api/AccountsDbTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCaseWithLocalDatabaseAccess;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * SUT: {@link AccountsDb}."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AccountsDbTest extends BaseTestCaseWithLocalDatabaseAccess {"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final AccountsDb accountsDb \u003d AccountsDb.inst();"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void testGetAccount() throws Exception {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes a \u003d createNewAccount(\"valid.googleId\", false);"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ______TS(\"typical success case without\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AccountAttributes retrieved \u003d accountsDb.getAccount(a.getGoogleId());"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNotNull(retrieved);"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ______TS(\"typical success with student profile\");"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        retrieved \u003d accountsDb.getAccount(a.getGoogleId());"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNotNull(retrieved);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ______TS(\"expect null for non-existent account\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        retrieved \u003d accountsDb.getAccount(\"non.existent\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNull(retrieved);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e accountsDb.getAccount(null));"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // delete created account"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        accountsDb.deleteAccount(a.getGoogleId());"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountsForEmail() throws Exception {"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case: no accounts with email\");"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountAttributes\u003e accounts \u003d accountsDb.getAccountsForEmail(\"valid@email.com\");"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(accounts.isEmpty());"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case: one account with email\");"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes firstAccount \u003d createNewAccount(\"first.googleId\", true);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        accounts \u003d accountsDb.getAccountsForEmail(\"valid@email.com\");"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(List.of(firstAccount), accounts);"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case: multiple accounts with email\");"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes secondAccount \u003d createNewAccount(\"second.googleId\", true);"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes thirdAccount \u003d createNewAccount(\"third.googleId\", false);"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        accounts \u003d accountsDb.getAccountsForEmail(\"valid@email.com\");"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(3, accounts.size());"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(List.of(firstAccount, secondAccount, thirdAccount).containsAll(accounts));"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        // delete created accounts"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        accountsDb.deleteAccount(firstAccount.getGoogleId());"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        accountsDb.deleteAccount(secondAccount.getGoogleId());"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        accountsDb.deleteAccount(thirdAccount.getGoogleId());"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void testCreateAccount() throws Exception {"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AccountAttributes a \u003d AccountAttributes.builder(\"test.account\")"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withName(\"Test account Name\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withIsInstructor(false)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withEmail(\"fresh-account@email.com\")"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withInstitute(\"TEAMMATES Test Institute 1\")"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        accountsDb.createEntity(a);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ______TS(\"duplicate account, creation fail\");"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AccountAttributes duplicatedAccount \u003d AccountAttributes.builder(\"test.account\")"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withName(\"name2\")"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withEmail(\"test2@email.com\")"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withInstitute(\"de2v\")"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withIsInstructor(false)"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(EntityAlreadyExistsException.class, () -\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            accountsDb.createEntity(duplicatedAccount);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        accountsDb.deleteAccount(a.getGoogleId());"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Should we not allow empty fields?"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ______TS(\"failure case: invalid parameter\");"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        a.setEmail(\"invalid email\");"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                () -\u003e accountsDb.createEntity(a));"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AssertHelper.assertContains("},{"lineNumber":108,"author":{"gitId":"-"},"content":"                getPopulatedErrorMessage("},{"lineNumber":109,"author":{"gitId":"-"},"content":"                        FieldValidator.EMAIL_ERROR_MESSAGE, \"invalid email\","},{"lineNumber":110,"author":{"gitId":"-"},"content":"                        FieldValidator.EMAIL_FIELD_NAME, FieldValidator.REASON_INCORRECT_FORMAT,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                        FieldValidator.EMAIL_MAX_LENGTH),"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                ipe.getMessage());"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e accountsDb.createEntity(null));"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void testUpdateAccount_noChangeToAccount_shouldNotIssueSaveRequest() throws Exception {"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes a \u003d createNewAccount(\"valid.googleId\", true);"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AccountAttributes updatedAccount \u003d"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                accountsDb.updateAccount("},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        AccountAttributes.updateOptionsBuilder(a.getGoogleId())"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                                .build());"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // please verify the log message manually to ensure that saving request is not issued"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(JsonUtils.toJson(a), JsonUtils.toJson(updatedAccount));"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        updatedAccount \u003d"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                accountsDb.updateAccount("},{"lineNumber":132,"author":{"gitId":"-"},"content":"                        AccountAttributes.updateOptionsBuilder(a.getGoogleId())"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                                .withIsInstructor(a.isInstructor())"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                .build());"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // please verify the log message manually to ensure that saving request is not issued"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(JsonUtils.toJson(a), JsonUtils.toJson(updatedAccount));"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void testUpdateAccount() throws Exception {"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes a \u003d createNewAccount(\"valid.googleId\", false);"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        ______TS(\"typical edit success case\");"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(a.isInstructor());"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        AccountAttributes updatedAccount \u003d accountsDb.updateAccount("},{"lineNumber":147,"author":{"gitId":"-"},"content":"                AccountAttributes.updateOptionsBuilder(a.getGoogleId())"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                        .withIsInstructor(true)"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                        .build()"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        AccountAttributes actualAccount \u003d accountsDb.getAccount(a.getGoogleId());"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(actualAccount.isInstructor());"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(updatedAccount.isInstructor());"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ______TS(\"non-existent account\");"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                () -\u003e accountsDb.updateAccount("},{"lineNumber":161,"author":{"gitId":"-"},"content":"                        AccountAttributes.updateOptionsBuilder(\"non.existent\")"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                                .withIsInstructor(true)"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                                .build()"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                ));"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        AssertHelper.assertContains(AccountsDb.ERROR_UPDATE_NON_EXISTENT, ednee.getMessage());"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                () -\u003e accountsDb.updateAccount(null));"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        accountsDb.deleteAccount(a.getGoogleId());"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    // the test is to ensure that optimized saving policy is implemented without false negative"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void testUpdateAccount_singleFieldUpdate_shouldUpdateCorrectly() throws Exception {"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes typicalAccount \u003d createNewAccount(\"valid.googleId\", false);"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertFalse(typicalAccount.isInstructor());"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        AccountAttributes updatedAccount \u003d accountsDb.updateAccount("},{"lineNumber":182,"author":{"gitId":"-"},"content":"                AccountAttributes.updateOptionsBuilder(typicalAccount.getGoogleId())"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                        .withIsInstructor(true)"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        AccountAttributes actualAccount \u003d accountsDb.getAccount(typicalAccount.getGoogleId());"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(actualAccount.isInstructor());"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(updatedAccount.isInstructor());"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void testDeleteAccount() throws Exception {"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes a \u003d createNewAccount(\"valid.googleId\", true);"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ______TS(\"silent deletion of non-existent account\");"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        accountsDb.deleteAccount(\"not_exist\");"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertNotNull(accountsDb.getAccount(a.getGoogleId()));"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        AccountAttributes newAccount \u003d accountsDb.getAccount(a.getGoogleId());"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertNotNull(newAccount);"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        accountsDb.deleteAccount(a.getGoogleId());"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        AccountAttributes newAccountDeleted \u003d accountsDb.getAccount(a.getGoogleId());"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertNull(newAccountDeleted);"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        ______TS(\"silent deletion of same account\");"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        accountsDb.deleteAccount(a.getGoogleId());"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                () -\u003e accountsDb.deleteAccount(null));"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"    private AccountAttributes createNewAccount(String googleId, boolean isInstructor) throws Exception {"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes a \u003d getNewAccountAttributes(googleId, isInstructor);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return accountsDb.putEntity(a);"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"    private AccountAttributes getNewAccountAttributes(String googleId, boolean isInstructor) {"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"        return AccountAttributes.builder(googleId)"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                .withName(\"Valid Fresh Account\")"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"                .withIsInstructor(isInstructor)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .withEmail(\"valid@email.com\")"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .withInstitute(\"TEAMMATES Test Institute 1\")"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":189,"samuelfangjw":41}},{"path":"src/test/java/teammates/storage/search/AccountRequestSearchTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.storage.search;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.api.AccountRequestsDb;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.TestProperties;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link AccountRequestsDb},"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" *      {@link teammates.storage.search.AccountRequestSearchDocument}."},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestSearchTest extends BaseSearchTest {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsDb accountRequestsDb \u003d AccountRequestsDb.inst();"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void allTests() throws Exception {"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        if (!TestProperties.isSearchServiceActive()) {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            return;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes ins1InCourse1 \u003d dataBundle.accountRequests.get(\"instructor1OfCourse1\");"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes ins2InCourse1 \u003d dataBundle.accountRequests.get(\"instructor2OfCourse1\");"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes ins1InCourse2 \u003d dataBundle.accountRequests.get(\"instructor1OfCourse2\");"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes ins2InCourse2 \u003d dataBundle.accountRequests.get(\"instructor2OfCourse2\");"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes ins1InCourse3 \u003d dataBundle.accountRequests.get(\"instructor1OfCourse3\");"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes ins2InCourse3 \u003d dataBundle.accountRequests.get(\"instructor2OfCourse3\");"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes insInUnregCourse \u003d dataBundle.accountRequests.get(\"instructor5\");"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes insOfArchivedCourse \u003d dataBundle.accountRequests.get(\"instructorOfArchivedCourse\");"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes unregisteredInstructor1 \u003d"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                dataBundle.accountRequests.get(\"unregisteredInstructor1\");"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes unregisteredInstructor2 \u003d"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"                dataBundle.accountRequests.get(\"unregisteredInstructor2\");"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; query string does not match anyone\");"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountRequestAttributes\u003e results \u003d"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsDb.searchAccountRequestsInWholeSystem(\"non-existent\");"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results);"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; empty query string does not match anyone\");"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\");"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; query string matches some account requests\");"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"Instructor 1\\\"\");"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, ins1InCourse1, ins1InCourse2, ins1InCourse3, unregisteredInstructor1);"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; query string should be case-insensitive\");"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"InStRuCtOr 2\\\"\");"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, ins2InCourse1, ins2InCourse2, ins2InCourse3, unregisteredInstructor2);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; account requests should be searchable by their name\");"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"Instructor 5 of CourseNoRegister\\\"\");"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, insInUnregCourse);"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; account requests should be searchable by their email\");"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"instr2@course2.tmt\");"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, ins2InCourse2);"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; account requests should be searchable by their institute\");"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"TEAMMATES Test Institute 5\\\"\");"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, insOfArchivedCourse);"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; unregistered account requests should be searchable\");"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"unregisteredinstructor1@gmail.tmt\");"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, unregisteredInstructor1);"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; deleted account requests no longer searchable\");"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(ins1InCourse1.getEmail(), ins1InCourse1.getInstitute());"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"instructor 1\\\"\");"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, ins1InCourse2, ins1InCourse3, unregisteredInstructor1);"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; account requests created without searchability unsearchable\");"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.putEntity(ins1InCourse1);"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"instructor 1\\\"\");"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, ins1InCourse2, ins1InCourse3, unregisteredInstructor1);"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"success: search for account requests; deleting account request without deleting document:\""},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                + \"document deleted during search, account request unsearchable\");"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(ins2InCourse1.getEmail(), ins2InCourse1.getInstitute());"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"instructor 2\\\"\");"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, ins2InCourse2, ins2InCourse3, unregisteredInstructor2);"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    public void testSearchAccountRequest_deleteAfterSearch_shouldNotBeSearchable() throws Exception {"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        if (!TestProperties.isSearchServiceActive()) {"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"            return;"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes ins1InCourse2 \u003d dataBundle.accountRequests.get(\"instructor1OfCourse2\");"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes ins2InCourse2 \u003d dataBundle.accountRequests.get(\"instructor2OfCourse2\");"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        // there is search result before deletion"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountRequestAttributes\u003e results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"of Course 2\\\"\");"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, ins1InCourse2, ins2InCourse2);"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        // delete an account request"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(ins1InCourse2.getEmail(), ins1InCourse2.getInstitute());"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        // the search result will change"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"of Course 2\\\"\");"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results, ins2InCourse2);"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        // delete all account requests"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(ins2InCourse2.getEmail(), ins2InCourse2.getInstitute());"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        // there should be no search result"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        results \u003d accountRequestsDb.searchAccountRequestsInWholeSystem(\"\\\"of Course 2\\\"\");"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        verifySearchResults(results);"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"    public void testSearchAccountRequest_noSearchService_shouldThrowException() {"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        if (TestProperties.isSearchServiceActive()) {"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"            return;"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(SearchServiceException.class,"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.searchAccountRequestsInWholeSystem(\"anything\"));"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"     * Verifies that search results match with expected output."},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"     * @param actual the results from the search query."},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"     * @param expected the expected results for the search query."},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"    private static void verifySearchResults(List\u003cAccountRequestAttributes\u003e actual,"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes... expected) {"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expected.length, actual.size());"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        AssertHelper.assertSameContentIgnoreOrder(Arrays.asList(expected), actual);"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":152}},{"path":"src/test/java/teammates/test/AbstractBackDoor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.InputStreamReader;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URI;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.apache.http.HttpEntity;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.apache.http.NameValuePair;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.CloseableHttpResponse;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpDelete;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPut;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpRequestBase;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.apache.http.client.utils.URIBuilder;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.apache.http.entity.StringEntity;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.CloseableHttpClient;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.HttpClients;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.apache.http.message.BasicNameValuePair;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import teammates.common.exception.HttpRequestFailedException;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import teammates.ui.output.AccountData;"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountRequestData;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import teammates.ui.output.CourseData;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import teammates.ui.output.CoursesData;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackQuestionData;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackQuestionsData;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponseCommentData;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponseData;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponsesData;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackSessionData;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackSessionsData;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackVisibilityType;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import teammates.ui.output.InstructorData;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import teammates.ui.output.InstructorsData;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import teammates.ui.output.MessageOutput;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import teammates.ui.output.NumberOfEntitiesToGiveFeedbackToSetting;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import teammates.ui.output.ResponseVisibleSetting;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import teammates.ui.output.SessionVisibleSetting;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import teammates.ui.output.StudentData;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"import teammates.ui.request.Intent;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":68,"author":{"gitId":"-"},"content":" * Used to create API calls to the back-end without going through the UI."},{"lineNumber":69,"author":{"gitId":"-"},"content":" */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"public abstract class AbstractBackDoor {"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Gets the URL of the back-end."},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    protected abstract String getAppUrl();"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Gets the backdoor key used to authenticate with the back-end."},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    protected abstract String getBackdoorKey();"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Gets the CSRF key used to authenticate with the back-end."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    protected abstract String getCsrfKey();"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Executes GET request with the given {@code relativeUrl}."},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executeGetRequest(String relativeUrl, Map\u003cString, String\u003e params) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return executeRequest(HttpGet.METHOD_NAME, relativeUrl, params, null);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes POST request with the given {@code relativeUrl}."},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executePostRequest(String relativeUrl, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return executeRequest(HttpPost.METHOD_NAME, relativeUrl, params, body);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes PUT request with the given {@code relativeUrl}."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executePutRequest(String relativeUrl, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return executeRequest(HttpPut.METHOD_NAME, relativeUrl, params, body);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes DELETE request with the given {@code relativeUrl}."},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executeDeleteRequest(String relativeUrl, Map\u003cString, String\u003e params) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return executeRequest(HttpDelete.METHOD_NAME, relativeUrl, params, null);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes HTTP request with the given {@code method} and {@code relativeUrl}."},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @return The content of the HTTP response"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private ResponseBodyAndCode executeRequest("},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String method, String relativeUrl, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String url \u003d getAppUrl() + relativeUrl;"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        HttpRequestBase request;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        switch (method) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        case HttpGet.METHOD_NAME:"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            request \u003d createGetRequest(url, params);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        case HttpPost.METHOD_NAME:"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            request \u003d createPostRequest(url, params, body);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        case HttpPut.METHOD_NAME:"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            request \u003d createPutRequest(url, params, body);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        case HttpDelete.METHOD_NAME:"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            request \u003d createDeleteRequest(url, params);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Unaccepted HTTP method: \" + method);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        addAuthKeys(request);"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try (CloseableHttpClient httpClient \u003d HttpClients.createDefault();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                CloseableHttpResponse response \u003d httpClient.execute(request)) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String responseBody \u003d null;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            HttpEntity entity \u003d response.getEntity();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (entity !\u003d null) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                try (BufferedReader br \u003d new BufferedReader("},{"lineNumber":159,"author":{"gitId":"-"},"content":"                        new InputStreamReader(entity.getContent(), Const.ENCODING))) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    responseBody \u003d br.lines().collect(Collectors.joining(System.lineSeparator()));"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return new ResponseBodyAndCode(responseBody, response.getStatusLine().getStatusCode());"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes GET request with the given {@code relativeUrl}."},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @return The content of the HTTP response"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private static HttpGet createGetRequest(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return new HttpGet(createBasicUri(url, params));"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private static HttpPost createPostRequest(String url, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        HttpPost post \u003d new HttpPost(createBasicUri(url, params));"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (body !\u003d null) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            StringEntity entity \u003d new StringEntity(body, Const.ENCODING);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            post.setEntity(entity);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return post;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private static HttpPut createPutRequest(String url, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        HttpPut put \u003d new HttpPut(createBasicUri(url, params));"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (body !\u003d null) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            StringEntity entity \u003d new StringEntity(body, Const.ENCODING);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            put.setEntity(entity);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return put;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private static HttpDelete createDeleteRequest(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return new HttpDelete(createBasicUri(url, params));"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private static URI createBasicUri(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        List\u003cNameValuePair\u003e postParameters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (params !\u003d null) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            params.forEach((key, value) -\u003e postParameters.add(new BasicNameValuePair(key, value)));"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            URIBuilder uriBuilder \u003d new URIBuilder(url);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            uriBuilder.addParameters(postParameters);"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return uriBuilder.build();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (URISyntaxException e) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private void addAuthKeys(HttpRequestBase request) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        request.addHeader(Const.HeaderNames.BACKDOOR_KEY, getBackdoorKey());"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        request.addHeader(Const.HeaderNames.CSRF_KEY, getCsrfKey());"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * Removes and restores given data in the database. This method is to be called on test startup."},{"lineNumber":228,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * \u003cp\u003eNote:  The data associated with the test accounts have to be \u003cstrong\u003emanually\u003c/strong\u003e removed by removing the data"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * bundle when a test ends because the test accounts are shared across tests."},{"lineNumber":231,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * \u003cp\u003eTest data should never be cleared after test in order to prevent incurring additional database costs because the"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * test\u0027s data may not be accessed in another test. Also although unlikely in normal conditions, when a test fail to"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * remove data bundle on teardown, another test should have no reason to fail."},{"lineNumber":235,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAnother reason not to remove associated data after a test is that in case of test failures, it helps to have the"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * associated data in the database to debug the failure."},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThis means that removing the data bundle on startup is not always sufficient because a test only knows how"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * to remove its associated data."},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * This is why some tests would fail when they use the same account and use different data."},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Extending this method to remove data outside its associated data would introduce"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * unnecessary complications such as extra costs and knowing exactly how much data to remove. Removing too much data"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * would not just incur higher database costs but we can make tests unexpectedly pass(fail) when the data is expected to"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * be not present(present) in another test."},{"lineNumber":246,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * \u003cp\u003eTODO: Hence, we need to explicitly remove the data bundle in tests on teardown to avoid instability of tests."},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * However, removing the data bundle on teardown manually is not a perfect solution because two tests can concurrently"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * access the same account and their data may get mixed up in the process. This is a major problem we need to address."},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public String removeAndRestoreDataBundle(DataBundle dataBundle) throws HttpRequestFailedException {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        removeDataBundle(dataBundle);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode putRequestOutput \u003d"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                executePostRequest(Const.ResourceURIs.DATABUNDLE, null, JsonUtils.toJson(dataBundle));"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        if (putRequestOutput.responseCode !\u003d HttpStatus.SC_OK) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            throw new HttpRequestFailedException(\"Request failed: [\" + putRequestOutput.responseCode + \"] \""},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    + putRequestOutput.responseBody);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        return putRequestOutput.responseBody;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * Removes given data from the database."},{"lineNumber":264,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf given entities have already been deleted, it fails silently."},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        executePutRequest(Const.ResourceURIs.DATABUNDLE, null, JsonUtils.toJson(dataBundle));"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Gets the cookie format for the given user ID."},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public String getUserCookie(String userId) {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.USER_ID, userId);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executePostRequest(Const.ResourceURIs.USER_COOKIE, params, null);"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"        MessageOutput output \u003d JsonUtils.fromJson(response.responseBody, MessageOutput.class);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return output.getMessage();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * Puts searchable documents in data bundle into the database."},{"lineNumber":285,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public String putDocuments(DataBundle dataBundle) throws HttpRequestFailedException {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode putRequestOutput \u003d"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                executePutRequest(Const.ResourceURIs.DATABUNDLE_DOCUMENTS, null, JsonUtils.toJson(dataBundle));"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        if (putRequestOutput.responseCode !\u003d HttpStatus.SC_OK) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            throw new HttpRequestFailedException(\"Request failed: [\" + putRequestOutput.responseCode + \"] \""},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    + putRequestOutput.responseBody);"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        return putRequestOutput.responseBody;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * Gets an account from the database."},{"lineNumber":298,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public AccountAttributes getAccount(String googleId) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_ID, googleId);"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.ACCOUNT, params);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"        AccountData accountData \u003d JsonUtils.fromJson(response.responseBody, AccountData.class);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        return AccountAttributes.builder(accountData.getGoogleId())"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                .withName(accountData.getName())"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                .withEmail(accountData.getEmail())"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                .withInstitute(accountData.getInstitute())"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                .withIsInstructor(accountData.isInstructor())"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * Gets course data from the database."},{"lineNumber":318,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public CourseData getCourseData(String courseId) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT);"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.COURSE, params);"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, CourseData.class);"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     * Gets a course from the database."},{"lineNumber":333,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public CourseAttributes getCourse(String courseId) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d getCourseData(courseId);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        return CourseAttributes.builder(courseData.getCourseId())"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                .withName(courseData.getCourseName())"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                .withTimezone(courseData.getTimeZone())"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                .withInstitute(courseData.getInstitute())"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * Gets archived course data from the database."},{"lineNumber":348,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public CourseData getArchivedCourseData(String instructorId, String courseId) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.USER_ID, instructorId);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_STATUS, Const.CourseStatus.ARCHIVED);"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.COURSES, params);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"        CoursesData coursesData \u003d JsonUtils.fromJson(response.responseBody, CoursesData.class);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d coursesData.getCourses()"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                .filter(cd -\u003e cd.getCourseId().equals(courseId))"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":366,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"        return courseData;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":376,"author":{"gitId":"-"},"content":"     * Gets a archived course from the database."},{"lineNumber":377,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    public CourseAttributes getArchivedCourse(String instructorId, String courseId) {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d getArchivedCourseData(instructorId, courseId);"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        return CourseAttributes.builder(courseData.getCourseId())"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                .withName(courseData.getCourseName())"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                .withTimezone(courseData.getTimeZone())"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                .withInstitute(courseData.getInstitute())"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":391,"author":{"gitId":"-"},"content":"     * Returns true if the course exists and is in recycle bin."},{"lineNumber":392,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    public boolean isCourseInRecycleBin(String courseId) {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d getCourseData(courseId);"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        return courseData.getDeletionTimestamp() !\u003d 0;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":402,"author":{"gitId":"-"},"content":"     * Gets instructor data from the database."},{"lineNumber":403,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    public InstructorData getInstructorData(String courseId, String email) {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString());"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.INSTRUCTORS, params);"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"        InstructorsData instructorsData \u003d JsonUtils.fromJson(response.responseBody, InstructorsData.class);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        InstructorData instructorData \u003d instructorsData.getInstructors()"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":416,"author":{"gitId":"-"},"content":"                .filter(instructor -\u003e instructor.getEmail().equals(email))"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"        if (instructorData \u003d\u003d null) {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"        return instructorData;"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":428,"author":{"gitId":"-"},"content":"     * Get instructor from database. Does not include certain fields like InstructorPrivileges."},{"lineNumber":429,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructor(String courseId, String instructorEmail) {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        InstructorData instructorData \u003d getInstructorData(courseId, instructorEmail);"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        if (instructorData \u003d\u003d null) {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        InstructorAttributes.Builder instructor \u003d InstructorAttributes.builder(instructorData.getCourseId(),"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                instructorData.getEmail());"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        if (instructorData.getGoogleId() !\u003d null) {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            instructor.withGoogleId(instructorData.getGoogleId());"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        if (instructorData.getName() !\u003d null) {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            instructor.withName(instructorData.getName());"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        if (instructorData.getRole() !\u003d null) {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"            instructor.withRole(instructorData.getRole().getRoleName());"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        if (instructorData.getIsDisplayedToStudents() !\u003d null) {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"            instructor.withIsDisplayedToStudents(instructorData.getIsDisplayedToStudents());"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        if (instructorData.getDisplayedToStudentsAs() !\u003d null) {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            instructor.withDisplayedName(instructorData.getDisplayedToStudentsAs());"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        InstructorAttributes instructorAttributes \u003d instructor.build();"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        if (instructorData.getKey() !\u003d null) {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"            instructorAttributes.setKey(instructorData.getKey());"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        return instructorAttributes;"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":460,"author":{"gitId":"-"},"content":"     * Gets student data from the database."},{"lineNumber":461,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    public StudentData getStudentData(String courseId, String studentEmail) {"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.STUDENT_EMAIL, studentEmail);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.STUDENT, params);"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, StudentData.class);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":474,"author":{"gitId":"-"},"content":"     * Get student from database."},{"lineNumber":475,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudent(String courseId, String studentEmail) {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        StudentData studentData \u003d getStudentData(courseId, studentEmail);"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        if (studentData \u003d\u003d null) {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        StudentAttributes.Builder builder \u003d StudentAttributes.builder(studentData.getCourseId(),"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                studentData.getEmail());"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        if (studentData.getGoogleId() !\u003d null) {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            builder.withGoogleId(studentData.getGoogleId());"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        if (studentData.getName() !\u003d null) {"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            builder.withName(studentData.getName());"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        if (studentData.getSectionName() !\u003d null) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            builder.withSectionName(studentData.getSectionName());"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        if (studentData.getTeamName() !\u003d null) {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            builder.withTeamName(studentData.getTeamName());"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        if (studentData.getComments() !\u003d null) {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            builder.withComment(studentData.getComments());"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d builder.build();"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        if (studentData.getKey() !\u003d null) {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"            student.setKey(studentData.getKey());"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        return student;"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":506,"author":{"gitId":"-"},"content":"     * Get feedback session data from database."},{"lineNumber":507,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    public FeedbackSessionData getFeedbackSessionData(String courseId, String feedbackSessionName) {"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString());"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.SESSION, params);"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, FeedbackSessionData.class);"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":521,"author":{"gitId":"-"},"content":"     * Get feedback session from database."},{"lineNumber":522,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        FeedbackSessionData sessionData \u003d getFeedbackSessionData(courseId, feedbackSessionName);"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        if (sessionData \u003d\u003d null) {"},{"lineNumber":526,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes sessionAttributes \u003d FeedbackSessionAttributes"},{"lineNumber":530,"author":{"gitId":"-"},"content":"                .builder(sessionData.getFeedbackSessionName(), sessionData.getCourseId())"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                .withInstructions(sessionData.getInstructions())"},{"lineNumber":532,"author":{"gitId":"-"},"content":"                .withStartTime(Instant.ofEpochMilli(sessionData.getSubmissionStartTimestamp()))"},{"lineNumber":533,"author":{"gitId":"-"},"content":"                .withEndTime(Instant.ofEpochMilli(sessionData.getSubmissionEndTimestamp()))"},{"lineNumber":534,"author":{"gitId":"-"},"content":"                .withTimeZone(sessionData.getTimeZone())"},{"lineNumber":535,"author":{"gitId":"-"},"content":"                .withGracePeriod(Duration.ofMinutes(sessionData.getGracePeriod()))"},{"lineNumber":536,"author":{"gitId":"-"},"content":"                .withIsClosingEmailEnabled(sessionData.getIsClosingEmailEnabled())"},{"lineNumber":537,"author":{"gitId":"-"},"content":"                .withIsPublishedEmailEnabled(sessionData.getIsPublishedEmailEnabled())"},{"lineNumber":538,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":539,"author":{"gitId":"-"},"content":""},{"lineNumber":540,"author":{"gitId":"-"},"content":"        sessionAttributes.setCreatedTime(Instant.ofEpochMilli(sessionData.getCreatedAtTimestamp()));"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"        if (sessionData.getSessionVisibleSetting().equals(SessionVisibleSetting.AT_OPEN)) {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"            sessionAttributes.setSessionVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_OPENING);"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"            sessionAttributes.setSessionVisibleFromTime(Instant.ofEpochMilli("},{"lineNumber":546,"author":{"gitId":"-"},"content":"                    sessionData.getCustomSessionVisibleTimestamp()));"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":"        if (sessionData.getResponseVisibleSetting().equals(ResponseVisibleSetting.AT_VISIBLE)) {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            sessionAttributes.setResultsVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_VISIBLE);"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        } else if (sessionData.getResponseVisibleSetting().equals(ResponseVisibleSetting.LATER)) {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"            sessionAttributes.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            sessionAttributes.setResultsVisibleFromTime(Instant.ofEpochMilli("},{"lineNumber":555,"author":{"gitId":"-"},"content":"                    sessionData.getCustomResponseVisibleTimestamp()));"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"        return sessionAttributes;"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":562,"author":{"gitId":"-"},"content":"     * Get soft deleted feedback session from database."},{"lineNumber":563,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getSoftDeletedSession(String feedbackSessionName, String instructorId) {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.IS_IN_RECYCLE_BIN, \"true\");"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.USER_ID, instructorId);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.SESSIONS, params);"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"        FeedbackSessionsData sessionsData \u003d JsonUtils.fromJson(response.responseBody, FeedbackSessionsData.class);"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        FeedbackSessionData feedbackSession \u003d sessionsData.getFeedbackSessions()"},{"lineNumber":576,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":577,"author":{"gitId":"-"},"content":"                .filter(fs -\u003e fs.getFeedbackSessionName().equals(feedbackSessionName))"},{"lineNumber":578,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":579,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"        if (feedbackSession \u003d\u003d null) {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"        return FeedbackSessionAttributes"},{"lineNumber":586,"author":{"gitId":"-"},"content":"                .builder(feedbackSession.getCourseId(), feedbackSession.getFeedbackSessionName())"},{"lineNumber":587,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":591,"author":{"gitId":"-"},"content":"     * Get feedback question from database."},{"lineNumber":592,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes getFeedbackQuestion(String courseId, String feedbackSessionName,"},{"lineNumber":594,"author":{"gitId":"-"},"content":"                                                                 int qnNumber) {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString());"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.QUESTIONS, params);"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":601,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"        FeedbackQuestionsData questionsData \u003d JsonUtils.fromJson(response.responseBody, FeedbackQuestionsData.class);"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        FeedbackQuestionData question \u003d questionsData.getQuestions()"},{"lineNumber":606,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":607,"author":{"gitId":"-"},"content":"                .filter(fq -\u003e fq.getQuestionNumber() \u003d\u003d qnNumber)"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":609,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"        if (question \u003d\u003d null) {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionAttr \u003d FeedbackQuestionAttributes.builder()"},{"lineNumber":616,"author":{"gitId":"-"},"content":"                .withCourseId(courseId)"},{"lineNumber":617,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(feedbackSessionName)"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                .withQuestionDetails(question.getQuestionDetails())"},{"lineNumber":619,"author":{"gitId":"-"},"content":"                .withQuestionDescription(question.getQuestionDescription())"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                .withQuestionNumber(question.getQuestionNumber())"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                .withGiverType(question.getGiverType())"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                .withRecipientType(question.getRecipientType())"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                .withNumberOfEntitiesToGiveFeedbackTo(question.getNumberOfEntitiesToGiveFeedbackToSetting()"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                        .equals(NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED)"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                        ? Const.MAX_POSSIBLE_RECIPIENTS"},{"lineNumber":626,"author":{"gitId":"-"},"content":"                        : question.getCustomNumberOfEntitiesToGiveFeedbackTo())"},{"lineNumber":627,"author":{"gitId":"-"},"content":"                .withShowResponsesTo(convertToFeedbackParticipantType(question.getShowResponsesTo()))"},{"lineNumber":628,"author":{"gitId":"-"},"content":"                .withShowGiverNameTo(convertToFeedbackParticipantType(question.getShowGiverNameTo()))"},{"lineNumber":629,"author":{"gitId":"-"},"content":"                .withShowRecipientNameTo(convertToFeedbackParticipantType(question.getShowRecipientNameTo()))"},{"lineNumber":630,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        if (question.getFeedbackQuestionId() !\u003d null) {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"            questionAttr.setId(question.getFeedbackQuestionId());"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        return questionAttr;"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":638,"author":{"gitId":"-"},"content":"     * Converts List of FeedbackParticipantType to sorted List of FeedbackVisibilityType."},{"lineNumber":639,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    private static List\u003cFeedbackParticipantType\u003e convertToFeedbackParticipantType("},{"lineNumber":641,"author":{"gitId":"-"},"content":"            List\u003cFeedbackVisibilityType\u003e feedbackVisibilityTypeList) {"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e feedbackParticipantTypeList \u003d feedbackVisibilityTypeList.stream()"},{"lineNumber":643,"author":{"gitId":"-"},"content":"                .map(feedbackParticipantType -\u003e {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"                    switch (feedbackParticipantType) {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"                    case STUDENTS:"},{"lineNumber":646,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.STUDENTS;"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                    case INSTRUCTORS:"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.INSTRUCTORS;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"                    case RECIPIENT:"},{"lineNumber":650,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.RECEIVER;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                    case GIVER_TEAM_MEMBERS:"},{"lineNumber":652,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.OWN_TEAM_MEMBERS;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"                    case RECIPIENT_TEAM_MEMBERS:"},{"lineNumber":654,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.RECEIVER_TEAM_MEMBERS;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"                    default:"},{"lineNumber":656,"author":{"gitId":"-"},"content":"                        throw new RuntimeException(\"Unknown FeedbackVisibilityType \" + feedbackParticipantType);"},{"lineNumber":657,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":658,"author":{"gitId":"-"},"content":"                }).collect(Collectors.toList());"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        Collections.sort(feedbackParticipantTypeList);"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        return feedbackParticipantTypeList;"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":664,"author":{"gitId":"-"},"content":"     * Get feedback response from database."},{"lineNumber":665,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId, String giver,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"                                                                 String recipient) {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_QUESTION_ID, feedbackQuestionId);"},{"lineNumber":670,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString());"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, giver);"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.RESPONSES, params);"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":674,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"-"},"content":"        FeedbackResponsesData responsesData \u003d JsonUtils.fromJson(response.responseBody, FeedbackResponsesData.class);"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        FeedbackResponseData fr \u003d responsesData.getResponses()"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":680,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.getGiverIdentifier().equals(giver) \u0026\u0026 r.getRecipientIdentifier().equals(recipient))"},{"lineNumber":681,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":682,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":683,"author":{"gitId":"-"},"content":""},{"lineNumber":684,"author":{"gitId":"-"},"content":"        if (fr \u003d\u003d null) {"},{"lineNumber":685,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":687,"author":{"gitId":"-"},"content":""},{"lineNumber":688,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes responseAttr \u003d FeedbackResponseAttributes"},{"lineNumber":689,"author":{"gitId":"-"},"content":"                .builder(feedbackQuestionId, fr.getGiverIdentifier(), fr.getRecipientIdentifier())"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                .withResponseDetails(fr.getResponseDetails())"},{"lineNumber":691,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        if (fr.getFeedbackResponseId() !\u003d null) {"},{"lineNumber":693,"author":{"gitId":"-"},"content":"            responseAttr.setId(fr.getFeedbackResponseId());"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        return responseAttr;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":699,"author":{"gitId":"-"},"content":"     * Get feedback response comment from database."},{"lineNumber":700,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":701,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseComment(String feedbackResponseId) {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_RESPONSE_ID, feedbackResponseId);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString());"},{"lineNumber":705,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.RESPONSE_COMMENT, params);"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":707,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"-"},"content":"        FeedbackResponseCommentData frc \u003d JsonUtils.fromJson(response.responseBody, FeedbackResponseCommentData.class);"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"        if (frc \u003d\u003d null) {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":714,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"        return FeedbackResponseCommentAttributes.builder()"},{"lineNumber":717,"author":{"gitId":"-"},"content":"                .withCommentGiver(frc.getCommentGiver())"},{"lineNumber":718,"author":{"gitId":"-"},"content":"                .withCommentText(frc.getCommentText())"},{"lineNumber":719,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":721,"author":{"gitId":"-"},"content":""},{"lineNumber":722,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":723,"author":{"gitId":"-"},"content":"     * Deletes a course from the database."},{"lineNumber":724,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":725,"author":{"gitId":"-"},"content":"    public void deleteCourse(String courseId) {"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        executeDeleteRequest(Const.ResourceURIs.COURSE, params);"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":732,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request from the database."},{"lineNumber":733,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":734,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":735,"author":{"gitId":"samuelfangjw"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":736,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":737,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":738,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":739,"author":{"gitId":"samuelfangjw"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.ACCOUNT_REQUEST, params);"},{"lineNumber":740,"author":{"gitId":"samuelfangjw"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":741,"author":{"gitId":"samuelfangjw"},"content":"            return null;"},{"lineNumber":742,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":743,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":744,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestData accountRequestData \u003d JsonUtils.fromJson(response.responseBody, AccountRequestData.class);"},{"lineNumber":745,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":746,"author":{"gitId":"samuelfangjw"},"content":"        return AccountRequestAttributes"},{"lineNumber":747,"author":{"gitId":"samuelfangjw"},"content":"                .builder(accountRequestData.getEmail(), accountRequestData.getInstitute(), accountRequestData.getName())"},{"lineNumber":748,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":749,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":750,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":751,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":752,"author":{"gitId":"samuelfangjw"},"content":"     * Gets registration key of an account request from the database."},{"lineNumber":753,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":754,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegKeyForAccountRequest(String email, String institute) {"},{"lineNumber":755,"author":{"gitId":"samuelfangjw"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":756,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":757,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":758,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":759,"author":{"gitId":"samuelfangjw"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.ACCOUNT_REQUEST, params);"},{"lineNumber":760,"author":{"gitId":"samuelfangjw"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":761,"author":{"gitId":"samuelfangjw"},"content":"            return null;"},{"lineNumber":762,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":763,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":764,"author":{"gitId":"samuelfangjw"},"content":"        return JsonUtils.fromJson(response.responseBody, AccountRequestData.class).getRegistrationKey();"},{"lineNumber":765,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":766,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":767,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":768,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes an account request from the database."},{"lineNumber":769,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":770,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":771,"author":{"gitId":"samuelfangjw"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":772,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":773,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":774,"author":{"gitId":"samuelfangjw"},"content":"        executeDeleteRequest(Const.ResourceURIs.ACCOUNT_REQUEST, params);"},{"lineNumber":775,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":776,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"    private static final class ResponseBodyAndCode {"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"        String responseBody;"},{"lineNumber":780,"author":{"gitId":"-"},"content":"        int responseCode;"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode(String responseBody, int responseCode) {"},{"lineNumber":783,"author":{"gitId":"-"},"content":"            this.responseBody \u003d responseBody;"},{"lineNumber":784,"author":{"gitId":"-"},"content":"            this.responseCode \u003d responseCode;"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":786,"author":{"gitId":"-"},"content":""},{"lineNumber":787,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":788,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":740,"samuelfangjw":48}},{"path":"src/test/java/teammates/test/BaseTestCaseWithDatabaseAccess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.EntityAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Base class for all test cases which are allowed to access the database."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public abstract class BaseTestCaseWithDatabaseAccess extends BaseTestCase {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int VERIFICATION_RETRY_COUNT \u003d 5;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final int VERIFICATION_RETRY_DELAY_IN_MS \u003d 1000;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final int OPERATION_RETRY_COUNT \u003d 5;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final int OPERATION_RETRY_DELAY_IN_MS \u003d 1000;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    protected void verifyPresentInDatabase(DataBundle data) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        data.accounts.values().forEach(this::verifyPresentInDatabase);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        data.instructors.values().forEach(this::verifyPresentInDatabase);"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        data.courses.values().stream()"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                .filter(course -\u003e !course.isCourseDeleted())"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                .forEach(this::verifyPresentInDatabase);"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        data.students.values().forEach(this::verifyPresentInDatabase);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected void verifyPresentInDatabase(EntityAttributes\u003c?\u003e expected) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        int retryLimit \u003d VERIFICATION_RETRY_COUNT;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EntityAttributes\u003c?\u003e actual \u003d getEntity(expected);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        while (actual \u003d\u003d null \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(VERIFICATION_RETRY_DELAY_IN_MS);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            actual \u003d getEntity(expected);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        verifyEquals(expected, actual);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private EntityAttributes\u003c?\u003e getEntity(EntityAttributes\u003c?\u003e expected) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (expected instanceof AccountAttributes) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return getAccount((AccountAttributes) expected);"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentProfileAttributes) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return getStudentProfile((StudentProfileAttributes) expected);"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } else if (expected instanceof CourseAttributes) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return getCourse((CourseAttributes) expected);"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackQuestionAttributes) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return getFeedbackQuestion((FeedbackQuestionAttributes) expected);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseCommentAttributes) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return getFeedbackResponseComment((FeedbackResponseCommentAttributes) expected);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseAttributes) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return getFeedbackResponse((FeedbackResponseAttributes) expected);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackSessionAttributes) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return getFeedbackSession((FeedbackSessionAttributes) expected);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } else if (expected instanceof InstructorAttributes) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return getInstructor((InstructorAttributes) expected);"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentAttributes) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return getStudent((StudentAttributes) expected);"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        } else if (expected instanceof AccountRequestAttributes) {"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            return getAccountRequest((AccountRequestAttributes) expected);"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Unknown entity type!\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    protected void verifyAbsentInDatabase(EntityAttributes\u003c?\u003e entity) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        int retryLimit \u003d VERIFICATION_RETRY_COUNT;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EntityAttributes\u003c?\u003e actual \u003d getEntity(entity);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        while (actual !\u003d null \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(VERIFICATION_RETRY_DELAY_IN_MS);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            actual \u003d getEntity(entity);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertNull(actual);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void verifyEquals(EntityAttributes\u003c?\u003e expected, EntityAttributes\u003c?\u003e actual) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (expected instanceof AccountAttributes) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            AccountAttributes expectedAccount \u003d ((AccountAttributes) expected).getCopy();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            AccountAttributes actualAccount \u003d (AccountAttributes) actual;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedAccount, actualAccount);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedAccount), JsonUtils.toJson(actualAccount));"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentProfileAttributes) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            StudentProfileAttributes expectedProfile \u003d ((StudentProfileAttributes) expected).getCopy();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            StudentProfileAttributes actualProfile \u003d (StudentProfileAttributes) actual;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedProfile, actualProfile);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedProfile), JsonUtils.toJson(actualProfile));"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } else if (expected instanceof CourseAttributes) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            CourseAttributes expectedCourse \u003d (CourseAttributes) expected;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            CourseAttributes actualCourse \u003d (CourseAttributes) actual;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedCourse, actualCourse);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedCourse), JsonUtils.toJson(actualCourse));"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackQuestionAttributes) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes expectedFq \u003d (FeedbackQuestionAttributes) expected;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes actualFq \u003d (FeedbackQuestionAttributes) actual;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedFq, actualFq);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedFq), JsonUtils.toJson(actualFq));"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseCommentAttributes) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes expectedFrc \u003d (FeedbackResponseCommentAttributes) expected;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes actualFrc \u003d (FeedbackResponseCommentAttributes) actual;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getCourseId(), actualFrc.getCourseId());"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getCommentGiver(), actualFrc.getCommentGiver());"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getFeedbackSessionName(), actualFrc.getFeedbackSessionName());"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getCommentText(), actualFrc.getCommentText());"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseAttributes) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            FeedbackResponseAttributes expectedFr \u003d (FeedbackResponseAttributes) expected;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            FeedbackResponseAttributes actualFr \u003d (FeedbackResponseAttributes) actual;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedFr, actualFr);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedFr), JsonUtils.toJson(actualFr));"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackSessionAttributes) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes expectedFs \u003d ((FeedbackSessionAttributes) expected).getCopy();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes actualFs \u003d (FeedbackSessionAttributes) actual;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedFs, actualFs);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedFs), JsonUtils.toJson(actualFs));"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } else if (expected instanceof InstructorAttributes) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            InstructorAttributes expectedInstructor \u003d ((InstructorAttributes) expected).getCopy();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            InstructorAttributes actualInstructor \u003d (InstructorAttributes) actual;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedInstructor, actualInstructor);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedInstructor), JsonUtils.toJson(actualInstructor));"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentAttributes) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            StudentAttributes expectedStudent \u003d ((StudentAttributes) expected).getCopy();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            StudentAttributes actualStudent \u003d (StudentAttributes) actual;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedStudent, actualStudent);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedStudent), JsonUtils.toJson(actualStudent));"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        } else if (expected instanceof AccountRequestAttributes) {"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes expectedAccountRequest \u003d (AccountRequestAttributes) expected;"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes actualAccountRequest \u003d (AccountRequestAttributes) actual;"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(JsonUtils.toJson(expectedAccountRequest), JsonUtils.toJson(actualAccountRequest));"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Unknown entity type!\");"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    protected abstract AccountAttributes getAccount(AccountAttributes account);"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(AccountAttributes expected, AccountAttributes actual) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Ignore time field as it is stamped at the time of creation in testing"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expected.setCreatedAt(actual.getCreatedAt());"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(StudentProfileAttributes expected, StudentProfileAttributes actual) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expected.setModifiedDate(actual.getModifiedDate());"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(CourseAttributes expected, CourseAttributes actual) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // Ignore time field as it is stamped at the time of creation in testing"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expected.setCreatedAt(actual.getCreatedAt());"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(FeedbackQuestionAttributes expected, FeedbackQuestionAttributes actual) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expected.setId(actual.getId());"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(FeedbackResponseAttributes expected, FeedbackResponseAttributes actual) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expected.setId(actual.getId());"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(FeedbackSessionAttributes expected, FeedbackSessionAttributes actual) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        expected.setCreatedTime(actual.getCreatedTime());"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // Not available in FeedbackSessionData and thus ignored"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        expected.setCreatorEmail(actual.getCreatorEmail());"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(InstructorAttributes expected, InstructorAttributes actual) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // pretend keys match because the key is generated only before storing into database"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (actual.getKey() !\u003d null) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            expected.setKey(actual.getKey());"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(StudentAttributes expected, StudentAttributes actual) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // For these fields, we consider null and \"\" equivalent."},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (expected.getGoogleId() \u003d\u003d null \u0026\u0026 actual.getGoogleId().isEmpty()) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            expected.setGoogleId(\"\");"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (expected.getTeam() \u003d\u003d null \u0026\u0026 actual.getTeam().isEmpty()) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            expected.setTeam(\"\");"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (expected.getComments() \u003d\u003d null \u0026\u0026 actual.getComments().isEmpty()) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            expected.setComments(\"\");"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // pretend keys match because the key is generated only before storing into database"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (actual.getKey() !\u003d null) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            expected.setKey(actual.getKey());"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    protected abstract StudentProfileAttributes getStudentProfile(StudentProfileAttributes studentProfileAttributes);"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    protected abstract CourseAttributes getCourse(CourseAttributes course);"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    protected abstract FeedbackQuestionAttributes getFeedbackQuestion(FeedbackQuestionAttributes fq);"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    protected abstract FeedbackResponseCommentAttributes getFeedbackResponseComment(FeedbackResponseCommentAttributes frc);"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    protected abstract FeedbackResponseAttributes getFeedbackResponse(FeedbackResponseAttributes fr);"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    protected abstract FeedbackSessionAttributes getFeedbackSession(FeedbackSessionAttributes fs);"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    protected abstract InstructorAttributes getInstructor(InstructorAttributes instructor);"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    protected abstract StudentAttributes getStudent(StudentAttributes student);"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"    protected abstract AccountRequestAttributes getAccountRequest(AccountRequestAttributes accountRequest);"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    protected void removeAndRestoreDataBundle(DataBundle testData) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        int retryLimit \u003d OPERATION_RETRY_COUNT;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        boolean isOperationSuccess \u003d doRemoveAndRestoreDataBundle(testData);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        while (!isOperationSuccess \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            print(\"Re-trying removeAndRestoreDataBundle\");"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(OPERATION_RETRY_DELAY_IN_MS);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            isOperationSuccess \u003d doRemoveAndRestoreDataBundle(testData);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertTrue(isOperationSuccess);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    protected abstract boolean doRemoveAndRestoreDataBundle(DataBundle testData);"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    protected void putDocuments(DataBundle testData) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        int retryLimit \u003d OPERATION_RETRY_COUNT;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        boolean isOperationSuccess \u003d doPutDocuments(testData);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        while (!isOperationSuccess \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            print(\"Re-trying putDocuments\");"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(OPERATION_RETRY_DELAY_IN_MS);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            isOperationSuccess \u003d doPutDocuments(testData);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertTrue(isOperationSuccess);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"    protected abstract boolean doPutDocuments(DataBundle testData);"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":254,"samuelfangjw":11}},{"path":"src/test/java/teammates/test/BaseTestCaseWithLocalDatabaseAccess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterClass;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterSuite;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeSuite;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.DatastoreOptions;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.testing.LocalDatastoreHelper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyFactory;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyService;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.util.Closeable;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.logic.api.LogicExtension;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.logic.core.LogicStarter;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.storage.api.OfyHelper;"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.search.AccountRequestSearchManager;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.storage.search.InstructorSearchManager;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.storage.search.SearchManagerFactory;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.storage.search.StudentSearchManager;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Base class for all tests which require access to a locally run database."},{"lineNumber":36,"author":{"gitId":"-"},"content":" *"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * \u003cp\u003eAs all tests are run against a single DB instance and we use shared test data for most tests,"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * the tests need to be run in a single thread to prevent test data contamination across different tests."},{"lineNumber":39,"author":{"gitId":"-"},"content":" */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@Test(singleThreaded \u003d true)"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public abstract class BaseTestCaseWithLocalDatabaseAccess extends BaseTestCaseWithDatabaseAccess {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final LocalDatastoreHelper LOCAL_DATASTORE_HELPER \u003d LocalDatastoreHelper.newBuilder()"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .setConsistency(1.0)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .setPort(TestProperties.TEST_LOCALDATASTORE_PORT)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .setStoreOnDisk(false)"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .build();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final LogicExtension logic \u003d new LogicExtension();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Closeable closeable;"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeSuite"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setupDbLayer() throws Exception {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        LOCAL_DATASTORE_HELPER.start();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DatastoreOptions options \u003d LOCAL_DATASTORE_HELPER.getOptions();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ObjectifyService.init(new ObjectifyFactory("},{"lineNumber":55,"author":{"gitId":"-"},"content":"                options.getService()"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ));"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        OfyHelper.registerEntityClasses();"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        SearchManagerFactory.registerAccountRequestSearchManager("},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                new AccountRequestSearchManager(TestProperties.SEARCH_SERVICE_HOST, true));"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        SearchManagerFactory.registerInstructorSearchManager("},{"lineNumber":62,"author":{"gitId":"-"},"content":"                new InstructorSearchManager(TestProperties.SEARCH_SERVICE_HOST, true));"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        SearchManagerFactory.registerStudentSearchManager("},{"lineNumber":64,"author":{"gitId":"-"},"content":"                new StudentSearchManager(TestProperties.SEARCH_SERVICE_HOST, true));"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        LogicStarter.initializeDependencies();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setupObjectify() {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        closeable \u003d ObjectifyService.begin();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void tearDownObjectify() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        closeable.close();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void resetDbLayer() throws Exception {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        SearchManagerFactory.getAccountRequestSearchManager().resetCollections();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        SearchManagerFactory.getInstructorSearchManager().resetCollections();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        SearchManagerFactory.getStudentSearchManager().resetCollections();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        LOCAL_DATASTORE_HELPER.reset();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @AfterSuite"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void tearDownLocalDatastoreHelper() throws Exception {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        LOCAL_DATASTORE_HELPER.stop();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    protected AccountAttributes getAccount(AccountAttributes account) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return logic.getAccount(account.getGoogleId());"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    protected StudentProfileAttributes getStudentProfile(StudentProfileAttributes studentProfileAttributes) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return logic.getStudentProfile(studentProfileAttributes.getGoogleId());"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    protected CourseAttributes getCourse(CourseAttributes course) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return logic.getCourse(course.getId());"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected FeedbackQuestionAttributes getFeedbackQuestion(FeedbackQuestionAttributes fq) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return logic.getFeedbackQuestion(fq.getFeedbackSessionName(), fq.getCourseId(), fq.getQuestionNumber());"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    protected FeedbackResponseCommentAttributes getFeedbackResponseComment(FeedbackResponseCommentAttributes frc) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return logic.getFeedbackResponseComment(frc.getFeedbackResponseId(), frc.getCommentGiver(), frc.getCreatedAt());"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    protected FeedbackResponseAttributes getFeedbackResponse(FeedbackResponseAttributes fr) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return logic.getFeedbackResponse(fr.getFeedbackQuestionId(), fr.getGiver(), fr.getRecipient());"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    protected FeedbackSessionAttributes getFeedbackSession(FeedbackSessionAttributes fs) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return logic.getFeedbackSession(fs.getFeedbackSessionName(), fs.getCourseId());"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected InstructorAttributes getInstructor(InstructorAttributes instructor) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return instructor.getGoogleId() \u003d\u003d null"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                ? logic.getInstructorForEmail(instructor.getCourseId(), instructor.getEmail())"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                : logic.getInstructorForGoogleId(instructor.getCourseId(), instructor.getGoogleId());"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    protected StudentAttributes getStudent(StudentAttributes student) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return logic.getStudentForEmail(student.getCourse(), student.getEmail());"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"    protected AccountRequestAttributes getAccountRequest(AccountRequestAttributes accountRequest) {"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        return logic.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected void removeAndRestoreTypicalDataBundle() {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        DataBundle dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(dataBundle);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    protected boolean doRemoveAndRestoreDataBundle(DataBundle dataBundle) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logic.removeDataBundle(dataBundle);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logic.persistDataBundle(dataBundle);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected boolean doPutDocuments(DataBundle dataBundle) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logic.putDocuments(dataBundle);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":163,"samuelfangjw":10}},{"path":"src/test/java/teammates/ui/webapi/AccountRequestSearchIndexingWorkerActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const.ParamsNames;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const.TaskQueue;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.TestProperties;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link AccountRequestSearchIndexingWorkerAction}."},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestSearchIndexingWorkerActionTest"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        extends BaseActionTest\u003cAccountRequestSearchIndexingWorkerAction\u003e {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        return TaskQueue.ACCOUNT_REQUEST_SEARCH_INDEXING_WORKER_URL;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        return POST;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public void testExecute() throws Exception {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        if (!TestProperties.isSearchServiceActive()) {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            return;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d typicalBundle.accountRequests.get(\"instructor1OfCourse1\");"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request not yet indexed should not be searchable\");"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountRequestAttributes\u003e accountRequestsList \u003d"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                logic.searchAccountRequestsInWholeSystem(accountRequest.getEmail());"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(0, accountRequestsList.size());"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request indexed should be searchable\");"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        String[] submissionParams \u003d new String[] {"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                ParamsNames.INSTRUCTOR_EMAIL, accountRequest.getEmail(),"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"                ParamsNames.INSTRUCTOR_INSTITUTION, accountRequest.getInstitute(),"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestSearchIndexingWorkerAction action \u003d getAction(submissionParams);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        getJsonResult(action);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsList \u003d logic.searchAccountRequestsInWholeSystem(accountRequest.getEmail());"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, accountRequestsList.size());"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getName(), accountRequestsList.get(0).getName());"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":62}},{"path":"src/test/java/teammates/ui/webapi/CreateAccountActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelperExtension;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * SUT: {@link CreateAccountAction}."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class CreateAccountActionTest extends BaseActionTest\u003cCreateAccountAction\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.ACCOUNT;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return POST;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    protected void testExecute() {"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        String name \u003d \"Unregistered Instructor 1\";"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d \"unregisteredinstructor1@gmail.tmt\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String institute \u003d \"TEAMMATES Test Institute 1\";"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Null parameters\");"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        String[] nullParams \u003d new String[] { Const.ParamsNames.REGKEY, null, };"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        InvalidHttpParameterException ex \u003d verifyHttpParameterFailure(nullParams);"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"The [key] HTTP parameter is null.\", ex.getMessage());"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        verifyNoTasksAdded();"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Normal case with valid timezone\");"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        String timezone \u003d \"Asia/Singapore\";"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d logic.getAccountRequest(email, institute);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        String[] params \u003d new String[] {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.REGKEY, accountRequest.getRegistrationKey(),"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.TIMEZONE, timezone,"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        CreateAccountAction a \u003d getAction(params);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        getJsonResult(a);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String courseId \u003d generateNextDemoCourseId(email, FieldValidator.COURSE_ID_MAX_LENGTH);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d logic.getCourse(courseId);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(course);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(\"Sample Course 101\", course.getName());"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(institute, course.getInstitute());"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(timezone, course.getTimeZone());"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        ZoneId zoneId \u003d ZoneId.of(timezone);"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cFeedbackSessionAttributes\u003e feedbackSessionsList \u003d logic.getFeedbackSessionsForCourse(courseId);"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        for (FeedbackSessionAttributes feedbackSession : feedbackSessionsList) {"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            LocalTime actualStartTime \u003d LocalTime.ofInstant(feedbackSession.getStartTime(), zoneId);"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"            LocalTime actualEndTime \u003d LocalTime.ofInstant(feedbackSession.getEndTime(), zoneId);"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(timezone, feedbackSession.getTimeZone());"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(LocalTime.MIDNIGHT, actualStartTime);"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(LocalTime.MIDNIGHT, actualEndTime);"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d logic.getInstructorForEmail(courseId, email);"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(email, instructor.getEmail());"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(name, instructor.getName());"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e studentList \u003d logic.getStudentsForCourse(courseId);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructorList \u003d logic.getInstructorsForCourse(courseId);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        verifySpecifiedTasksAdded(Const.TaskQueue.SEARCH_INDEXING_QUEUE_NAME,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                studentList.size() + instructorList.size());"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Normal case with invalid timezone, timezone should default to UTC\");"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        email \u003d \"unregisteredinstructor2@gmail.tmt\";"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        institute \u003d \"TEAMMATES Test Institute 2\";"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        timezone \u003d \"InvalidTimezone\";"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest \u003d logic.getAccountRequest(email, institute);"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.REGKEY, accountRequest.getRegistrationKey(),"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.TIMEZONE, timezone,"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        a \u003d getAction(params);"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        getJsonResult(a);"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        courseId \u003d generateNextDemoCourseId(email, FieldValidator.COURSE_ID_MAX_LENGTH);"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        course \u003d logic.getCourse(courseId);"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Const.DEFAULT_TIME_ZONE, course.getTimeZone());"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        feedbackSessionsList \u003d logic.getFeedbackSessionsForCourse(courseId);"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        zoneId \u003d ZoneId.of(Const.DEFAULT_TIME_ZONE);"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        for (FeedbackSessionAttributes feedbackSession : feedbackSessionsList) {"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"            LocalTime actualStartTime \u003d LocalTime.ofInstant(feedbackSession.getStartTime(), zoneId);"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"            LocalTime actualEndTime \u003d LocalTime.ofInstant(feedbackSession.getEndTime(), zoneId);"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(Const.DEFAULT_TIME_ZONE, feedbackSession.getTimeZone());"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(LocalTime.MIDNIGHT, actualStartTime);"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(LocalTime.MIDNIGHT, actualEndTime);"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        verifySpecifiedTasksAdded(Const.TaskQueue.SEARCH_INDEXING_QUEUE_NAME,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                studentList.size() + instructorList.size());"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Error: registration key already used\");"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        verifyInvalidOperation(params);"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        verifyNoTasksAdded();"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Error: account request not found\");"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] { Const.ParamsNames.REGKEY, \"unknownregkey\", };"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        verifyEntityNotFound(params);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        verifyNoTasksAdded();"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    protected void testAccessControl() {"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        verifyAnyLoggedInUserCanAccess();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void testGenerateNextDemoCourseId() {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        testGenerateNextDemoCourseIdForLengthLimit(40);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        testGenerateNextDemoCourseIdForLengthLimit(20);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void testGenerateNextDemoCourseIdForLengthLimit(int maximumIdLength) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String normalIdSuffix \u003d \".gma-demo\";"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String atEmail \u003d \"@gmail.tmt\";"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        int normalIdSuffixLength \u003d normalIdSuffix.length(); // 9"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String strShortWithWordDemo \u003d"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                StringHelperExtension.generateStringOfLength((maximumIdLength - normalIdSuffixLength) / 2) + \"-demo\";"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String strWayShorterThanMaximum \u003d"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                StringHelperExtension.generateStringOfLength((maximumIdLength - normalIdSuffixLength) / 2);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String strOneCharShorterThanMaximum \u003d"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                StringHelperExtension.generateStringOfLength(maximumIdLength - normalIdSuffixLength);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String strOneCharLongerThanMaximum \u003d"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                StringHelperExtension.generateStringOfLength(maximumIdLength - normalIdSuffixLength + 1);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(strShortWithWordDemo + normalIdSuffix,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strShortWithWordDemo + atEmail, maximumIdLength));"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(strShortWithWordDemo + normalIdSuffix + \"0\","},{"lineNumber":164,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strShortWithWordDemo + normalIdSuffix, maximumIdLength));"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(strShortWithWordDemo + normalIdSuffix + \"1\","},{"lineNumber":166,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strShortWithWordDemo + normalIdSuffix + \"0\", maximumIdLength));"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(strWayShorterThanMaximum + normalIdSuffix,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strWayShorterThanMaximum + atEmail, maximumIdLength));"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(strOneCharShorterThanMaximum + normalIdSuffix,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strOneCharShorterThanMaximum + atEmail, maximumIdLength));"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(strOneCharLongerThanMaximum.substring(1) + normalIdSuffix,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strOneCharLongerThanMaximum + atEmail, maximumIdLength));"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(strWayShorterThanMaximum + normalIdSuffix + \"0\","},{"lineNumber":174,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strWayShorterThanMaximum + normalIdSuffix, maximumIdLength));"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(strWayShorterThanMaximum + normalIdSuffix + \"1\","},{"lineNumber":176,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strWayShorterThanMaximum + normalIdSuffix + \"0\", maximumIdLength));"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(strWayShorterThanMaximum + normalIdSuffix + \"10\","},{"lineNumber":178,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strWayShorterThanMaximum + normalIdSuffix + \"9\", maximumIdLength));"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(strOneCharShorterThanMaximum.substring(2) + normalIdSuffix + \"10\","},{"lineNumber":180,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strOneCharShorterThanMaximum.substring(1) + normalIdSuffix + \"9\","},{"lineNumber":181,"author":{"gitId":"-"},"content":"                        maximumIdLength));"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private String generateNextDemoCourseId(String instructorEmailOrProposedCourseId, int maximumIdLength) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        CreateAccountAction a \u003d new CreateAccountAction();"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return a.generateNextDemoCourseId(instructorEmailOrProposedCourseId, maximumIdLength);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":122,"samuelfangjw":67}},{"path":"src/test/java/teammates/ui/webapi/CreateAccountRequestActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.JoinLinkData;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.request.AccountCreateRequest;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link CreateAccountRequestAction}."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class CreateAccountRequestActionTest extends BaseActionTest\u003cCreateAccountRequestAction\u003e {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        return Const.ResourceURIs.ACCOUNT_REQUEST;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        return POST;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        String name \u003d \"JamesBond\";"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d \"jamesbond89@gmail.tmt\";"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d \"TEAMMATES Test Institute 1\";"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Null parameters\");"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        InvalidHttpRequestBodyException ex \u003d verifyHttpRequestBodyFailure(buildCreateRequest(null, institute, email));"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"name cannot be null\", ex.getMessage());"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ex \u003d verifyHttpRequestBodyFailure(buildCreateRequest(name, null, email));"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"institute cannot be null\", ex.getMessage());"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        ex \u003d verifyHttpRequestBodyFailure(buildCreateRequest(name, institute, null));"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"email cannot be null\", ex.getMessage());"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        verifyNoTasksAdded();"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Normal case\");"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        String nameWithSpaces \u003d \"   \" + name + \"   \";"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        String emailWithSpaces \u003d \"   \" + email + \"   \";"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        String instituteWithSpaces \u003d \"   \" + institute + \"   \";"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        AccountCreateRequest req \u003d buildCreateRequest(nameWithSpaces, instituteWithSpaces, emailWithSpaces);"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        CreateAccountRequestAction a \u003d getAction(req);"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult r \u003d getJsonResult(a);"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d logic.getAccountRequest(email, institute);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(name, accountRequestAttributes.getName());"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(email, accountRequestAttributes.getEmail());"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(institute, accountRequestAttributes.getInstitute());"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(accountRequestAttributes.getRegistrationKey());"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        String joinLink \u003d accountRequestAttributes.getRegistrationUrl();"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        JoinLinkData output \u003d (JoinLinkData) r.getOutput();"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(joinLink, output.getJoinLink());"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        verifyNumberOfEmailsSent(1);"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        verifySpecifiedTasksAdded(Const.TaskQueue.SEARCH_INDEXING_QUEUE_NAME, 1);"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        EmailWrapper emailSent \u003d mockEmailSender.getEmailsSent().get(0);"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(), name),"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                emailSent.getSubject());"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(email, emailSent.getRecipient());"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emailSent.getContent().contains(joinLink));"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Account request already exists: instructor unregistered, email sent again\");"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        a \u003d getAction(req);"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        r \u003d getJsonResult(a);"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        output \u003d (JoinLinkData) r.getOutput();"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(joinLink, output.getJoinLink());"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        verifyNumberOfEmailsSent(1);"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        verifyNoTasksAdded(); // Account request not added to search indexing queue"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        emailSent \u003d mockEmailSender.getEmailsSent().get(0);"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(), name),"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"                emailSent.getSubject());"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(email, emailSent.getRecipient());"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emailSent.getContent().contains(joinLink));"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Account request already exists: instructor registered, InvalidOperationException thrown\");"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestAttributes \u003d typicalBundle.accountRequests.get(\"instructor1OfCourse1\");"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        req \u003d buildCreateRequest(accountRequestAttributes.getName(),"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestAttributes.getInstitute(), accountRequestAttributes.getEmail());"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        InvalidOperationException ioe \u003d verifyInvalidOperation(req);"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Cannot create account request as instructor has already registered.\", ioe.getMessage());"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Error: invalid parameter\");"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        String invalidName \u003d \"James%20Bond99\";"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        req \u003d buildCreateRequest(invalidName, institute, emailWithSpaces);"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req);"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"\\\"\" + invalidName + \"\\\" is not acceptable to TEAMMATES as a/an person name because \""},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"                + \"it contains invalid characters. A/An person name must start with an \""},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"                + \"alphanumeric character, and cannot contain any vertical bar (|) or percent sign (%).\","},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"                ex.getMessage());"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        verifyNoEmailsSent();"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        verifyNoTasksAdded();"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    private AccountCreateRequest buildCreateRequest(String name, String institution, String email) {"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        AccountCreateRequest req \u003d new AccountCreateRequest();"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        req.setInstructorName(name);"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        req.setInstructorInstitution(institution);"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        req.setInstructorEmail(email);"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        return req;"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":138}},{"path":"src/test/java/teammates/ui/webapi/DeleteAccountRequestActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.MessageOutput;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link DeleteAccountRequestAction}."},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class DeleteAccountRequestActionTest extends BaseActionTest\u003cDeleteAccountRequestAction\u003e {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        return Const.ResourceURIs.ACCOUNT_REQUEST;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        return DELETE;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes registeredAccountRequest \u003d typicalBundle.accountRequests.get(\"instructor1OfCourse1\");"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes unregisteredAccountRequest \u003d typicalBundle.accountRequests.get(\"unregisteredInstructor1\");"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Deleting an account request of a registered instructor should fail\");"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        String[] submissionParams \u003d new String[] {"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, registeredAccountRequest.getEmail(),"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, registeredAccountRequest.getInstitute(),"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        InvalidOperationException ex \u003d verifyInvalidOperation(submissionParams);"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Account request of a registered instructor cannot be deleted.\", ex.getMessage());"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(logic.getAccountRequest(registeredAccountRequest.getEmail(), registeredAccountRequest.getInstitute()));"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Typical case, delete an existing account request\");"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        submissionParams \u003d new String[] {"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, unregisteredAccountRequest.getEmail(),"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, unregisteredAccountRequest.getInstitute(),"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        DeleteAccountRequestAction action \u003d getAction(submissionParams);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        MessageOutput msg \u003d (MessageOutput) result.getOutput();"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Account request successfully deleted.\", msg.getMessage());"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(logic.getAccountRequest(unregisteredAccountRequest.getEmail(),"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                unregisteredAccountRequest.getInstitute()));"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Typical case, delete non-existing account request\");"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        action \u003d getAction(submissionParams);"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        result \u003d getJsonResult(action);"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        msg \u003d (MessageOutput) result.getOutput();"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        // should fail silently."},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Account request successfully deleted.\", msg.getMessage());"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":78}},{"path":"src/test/java/teammates/ui/webapi/GetAccountRequestActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountRequestData;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link GetAccountRequestAction}."},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class GetAccountRequestActionTest extends BaseActionTest\u003cGetAccountRequestAction\u003e {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        return Const.ResourceURIs.ACCOUNT_REQUEST;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        return GET;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                logic.getAccountRequest(\"unregisteredinstructor1@gmail.tmt\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request does not exist\");"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        String[] nonExistParams \u003d {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, \"non-existent@email\","},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, \"non existent institute\","},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        EntityNotFoundException enfe \u003d verifyEntityNotFound(nonExistParams);"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Account request for email: non-existent@email and institute: non existent institute not found.\","},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                enfe.getMessage());"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        String[] params \u003d new String[] {"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, accountRequest.getEmail(),"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, accountRequest.getInstitute(),"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        GetAccountRequestAction a \u003d getAction(params);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult r \u003d getJsonResult(a);"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestData response \u003d (AccountRequestData) r.getOutput();"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(response.getName(), accountRequest.getName());"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(response.getEmail(), accountRequest.getEmail());"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(response.getRegistrationKey(), accountRequest.getRegistrationKey());"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(response.getInstitute(), accountRequest.getInstitute());"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequest.getRegisteredAt());"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":72}},{"path":"src/test/java/teammates/ui/webapi/GetAccountsActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Comparator;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountData;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountsData;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link GetAccountsAction}."},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class GetAccountsActionTest extends BaseActionTest\u003cGetAccountsAction\u003e {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final String EMAIL \u003d \"valid@gmail.tmt\";"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private DataBundle testData;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        return Const.ResourceURIs.ACCOUNTS;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        return GET;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public void prepareTestData() {"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        testData \u003d getTypicalDataBundle();"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        testData.accounts.get(\"instructor1OfCourse2\").setEmail(EMAIL);"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        testData.accounts.get(\"instructor2OfCourse1\").setEmail(EMAIL);"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        testData.accounts.get(\"student1InCourse1\").setEmail(EMAIL);"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute() {"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case: no accounts with email\");"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        String[] params \u003d {"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.USER_EMAIL, \"non-exist@gmail.tmt\","},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        GetAccountsAction a \u003d getAction(params);"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult r \u003d getJsonResult(a);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        AccountsData response \u003d (AccountsData) r.getOutput();"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Collections.emptyList(), response.getAccounts());"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case: one account with email\");"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes account \u003d testData.accounts.get(\"instructor1OfCourse1\");"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.USER_EMAIL, account.getEmail(),"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        a \u003d getAction(params);"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        r \u003d getJsonResult(a);"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        response \u003d (AccountsData) r.getOutput();"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        assertEqualAccounts(Arrays.asList(account), response.getAccounts());"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case: multiple accounts with email\");"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes firstAccount \u003d testData.accounts.get(\"instructor1OfCourse2\");"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes secondAccount \u003d testData.accounts.get(\"instructor2OfCourse1\");"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        AccountAttributes thirdAccount \u003d testData.accounts.get(\"student1InCourse1\");"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.USER_EMAIL, EMAIL,"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        a \u003d getAction(params);"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        r \u003d getJsonResult(a);"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        response \u003d (AccountsData) r.getOutput();"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        assertEqualAccounts(Arrays.asList(firstAccount, secondAccount, thirdAccount), response.getAccounts());"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    private void assertEqualAccounts(List\u003cAccountAttributes\u003e accounts, List\u003cAccountData\u003e accountDataList) {"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        accounts.sort(Comparator.comparing(AccountAttributes::getGoogleId));"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        accountDataList.sort(Comparator.comparing(AccountData::getGoogleId));"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        for (int i \u003d 0; i \u003c accounts.size(); i++) {"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"            AccountAttributes accountAttributes \u003d accounts.get(i);"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"            AccountData accountData \u003d accountDataList.get(i);"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(accountAttributes.getGoogleId(), accountData.getGoogleId());"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(accountAttributes.getName(), accountData.getName());"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(accountAttributes.getEmail(), accountData.getEmail());"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(accountAttributes.getInstitute(), accountData.getInstitute());"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(accountAttributes.isInstructor(), accountData.isInstructor());"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":114}},{"path":"src/test/java/teammates/ui/webapi/GetActionClassesActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.ui.output.ActionClasses;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * SUT: {@link GetActionClassesAction}."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GetActionClassesActionTest extends BaseActionTest\u003cGetActionClassesAction\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.ACTION_CLASS;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return GET;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    protected void testExecute() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cClass\u003c? extends Action\u003e\u003e expectedActionClasses \u003d Arrays.asList("},{"lineNumber":32,"author":{"gitId":"-"},"content":"                DeleteFeedbackResponseCommentAction.class,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                CreateFeedbackResponseCommentAction.class,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                GetFeedbackResponseCommentAction.class,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                UpdateFeedbackResponseCommentAction.class,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                RestoreFeedbackSessionAction.class,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                BinFeedbackSessionAction.class,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                GetCoursesAction.class,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                GetRegkeyValidityAction.class,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                PutDataBundleAction.class,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                DeleteDataBundleAction.class,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                CreateFeedbackSessionLogAction.class,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                GetFeedbackSessionLogsAction.class,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                GetInstructorPrivilegeAction.class,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                UpdateInstructorPrivilegeAction.class,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                GetFeedbackSessionsAction.class,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                GenerateEmailAction.class,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                GetFeedbackQuestionsAction.class,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                GetOngoingSessionsAction.class,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                GetStudentProfileAction.class,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                UpdateStudentProfileAction.class,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                GetNationalitiesAction.class,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                AdminExceptionTestAction.class,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                GetUserCookieAction.class,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                RemindFeedbackSessionResultAction.class,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteInstructorAction.class,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                CreateInstructorAction.class,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                GetInstructorAction.class,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                UpdateInstructorAction.class,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                ArchiveCourseAction.class,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                InstructorCourseJoinEmailWorkerAction.class,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteStudentAction.class,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                GetStudentAction.class,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                UpdateStudentAction.class,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                SearchStudentsAction.class,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindEmailWorkerAction.class,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                DeleteStudentProfilePictureAction.class,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                PostStudentProfilePictureAction.class,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                GetStudentProfilePictureAction.class,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                DeleteFeedbackSessionAction.class,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                CreateFeedbackSessionAction.class,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                GetFeedbackSessionAction.class,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                UpdateFeedbackSessionAction.class,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                FeedbackSessionClosingRemindersAction.class,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                GetTimeZonesAction.class,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindParticularUsersEmailWorkerAction.class,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                GetFeedbackResponsesAction.class,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                SubmitFeedbackResponsesAction.class,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FeedbackSessionPublishedEmailWorkerAction.class,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                FeedbackSessionClosedRemindersAction.class,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                SendErrorReportAction.class,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                GetActionClassesAction.class,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                UnpublishFeedbackSessionAction.class,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                PublishFeedbackSessionAction.class,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                GetSessionResultsAction.class,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                GetHasResponsesAction.class,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                DatastoreBackupAction.class,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                RestoreCourseAction.class,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                BinCourseAction.class,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                DeleteAccountAction.class,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                CreateAccountAction.class,"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"                CreateAccountRequestAction.class,"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"                GetAccountRequestAction.class,"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"                DeleteAccountRequestAction.class,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                GetAccountAction.class,"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"                GetAccountsAction.class,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                FeedbackSessionPublishedRemindersAction.class,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                QueryLogsAction.class,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                SessionLinksRecoveryAction.class,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                SendJoinReminderEmailAction.class,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                RegenerateInstructorKeyAction.class,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                RegenerateStudentKeyAction.class,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                CompileLogsAction.class,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                GetAuthInfoAction.class,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                GetFeedbackSessionSubmittedGiverSetAction.class,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                GetCourseJoinStatusAction.class,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                JoinCourseAction.class,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                GetSessionResponseStatsAction.class,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                DeleteCourseAction.class,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                CreateCourseAction.class,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                GetCourseAction.class,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                UpdateCourseAction.class,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                GetFeedbackQuestionRecipientsAction.class,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                DowngradeAccountAction.class,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                RemindFeedbackSessionSubmissionAction.class,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                FeedbackSessionUnpublishedEmailWorkerAction.class,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                SendEmailWorkerAction.class,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                GetInstructorsAction.class,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                PutDataBundleDocumentsAction.class,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                FeedbackSessionResendPublishedEmailWorkerAction.class,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                StudentCourseJoinEmailWorkerAction.class,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                SearchInstructorsAction.class,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                GetCourseSectionNamesAction.class,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                ResetAccountAction.class,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningRemindersAction.class,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningSoonRemindersAction.class,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                DeleteStudentsAction.class,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                GetStudentsAction.class,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                EnrollStudentsAction.class,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                DeleteFeedbackQuestionAction.class,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                CreateFeedbackQuestionAction.class,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                UpdateFeedbackQuestionAction.class,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                InstructorSearchIndexingWorkerAction.class,"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"                StudentSearchIndexingWorkerAction.class,"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"                AccountRequestSearchIndexingWorkerAction.class,"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"                SearchAccountRequestsAction.class,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                ResetAccountRequestAction.class,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                CalculateUsageStatisticsAction.class,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                GetUsageStatisticsAction.class"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedActionClassesNames \u003d expectedActionClasses.stream()"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .map(Class::getSimpleName)"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .sorted()"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        GetActionClassesAction action \u003d getAction();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ActionClasses data \u003d (ActionClasses) result.getOutput();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cString\u003e actualActionClasses \u003d data.getActionClasses();"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Collections.sort(actualActionClasses);"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedActionClassesNames, actualActionClasses);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    protected void testAccessControl() {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        verifyAccessibleForAdmin();"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        verifyAccessibleForMaintainers();"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        verifyInaccessibleForStudents();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        verifyInaccessibleForInstructors();"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        verifyInaccessibleWithoutLogin();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        verifyInaccessibleForUnregisteredUsers();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":160,"samuelfangjw":7}},{"path":"src/test/java/teammates/ui/webapi/GetCourseJoinStatusActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.ui.output.JoinStatus;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * SUT: {@link GetCourseJoinStatusAction}."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GetCourseJoinStatusActionTest extends BaseActionTest\u003cGetCourseJoinStatusAction\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.JOIN;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return GET;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    protected void testExecute() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loginAsUnregistered(\"unreg.user\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        verifyHttpParameterFailure("},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, \"regkey\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        verifyHttpParameterFailure("},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ______TS(\"Normal case: student is already registered\");"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String registeredStudentKey \u003d"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                logic.getStudentForEmail(\"idOfTypicalCourse1\", \"student1InCourse1@gmail.tmt\").getKey();"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String[] params \u003d new String[] {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, registeredStudentKey,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        GetCourseJoinStatusAction getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonResult result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JoinStatus output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(output.getHasJoined());"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ______TS(\"Normal case: student is not registered\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String unregisteredStudentKey \u003d"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                logic.getStudentForEmail(\"idOfUnregisteredCourse\", \"student1InUnregisteredCourse@gmail.tmt\").getKey();"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, unregisteredStudentKey,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(output.getHasJoined());"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ______TS(\"Failure case: regkey is not valid for student\");"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, \"ANXKJZNZXNJCZXKJDNKSDA\","},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        verifyEntityNotFound(params);"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ______TS(\"Normal case: instructor is already registered\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String registeredInstructorKey \u003d"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logic.getInstructorForEmail(\"idOfTypicalCourse1\", \"instructor1@course1.tmt\").getKey();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, registeredInstructorKey,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(output.getHasJoined());"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ______TS(\"Normal case: instructor is not registered\");"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String unregisteredInstructorKey \u003d"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                logic.getInstructorForEmail(\"idOfTypicalCourse1\", \"instructorNotYetJoinedCourse1@email.tmt\").getKey();"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, unregisteredInstructorKey,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(output.getHasJoined());"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ______TS(\"Failure case: regkey is not valid for instructor\");"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, \"ANXKJZNZXNJCZXKJDNKSDA\","},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        verifyEntityNotFound(params);"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Normal case: account request not used, instructor has not joined course\");"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        String accountRequestNotUsedKey \u003d logic.getAccountRequest(\"unregisteredinstructor1@gmail.tmt\","},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"                \"TEAMMATES Test Institute 1\").getRegistrationKey();"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.REGKEY, accountRequestNotUsedKey,"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.IS_CREATING_ACCOUNT, \"true\","},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(output.getHasJoined());"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Normal case: account request already used, instructor has joined course\");"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        String accountRequestUsedKey \u003d"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"                logic.getAccountRequest(\"instr1@course1.tmt\", \"TEAMMATES Test Institute 1\").getRegistrationKey();"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.REGKEY, accountRequestUsedKey,"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.IS_CREATING_ACCOUNT, \"true\","},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(output.getHasJoined());"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Failure case: account request regkey is not valid\");"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.REGKEY, \"invalid-registration-key\","},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.IS_CREATING_ACCOUNT, \"true\","},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        verifyEntityNotFound(params);"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        ______TS(\"Failure case: invalid entity type\");"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, unregisteredStudentKey,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, \"unknown\","},{"lineNumber":170,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        verifyHttpParameterFailure(params);"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    protected void testAccessControl() {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        verifyAnyLoggedInUserCanAccess();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":138,"samuelfangjw":44}},{"path":"src/test/java/teammates/ui/webapi/ResetAccountRequestActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.JoinLinkData;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link ResetAccountRequestAction}."},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class ResetAccountRequestActionTest extends BaseActionTest\u003cResetAccountRequestAction\u003e {"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        return Const.ResourceURIs.ACCOUNT_REQUEST_RESET;"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        return PUT;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute() {"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d typicalBundle.accountRequests.get(\"instructor1OfCourse1\");"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes unregisteredAccountRequest \u003d typicalBundle.accountRequests.get(\"unregisteredInstructor1\");"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Failure case: not enough parameters\");"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        String[] params \u003d {"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                // Const.ParamsNames.INSTRUCTOR_EMAIL,"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, accountRequest.getInstitute(),"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure(params);"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, accountRequest.getEmail(),"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                // Const.ParamNames.INSTRUCTOR_INSTITUTION,"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure(params);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Failure case: account request not found\");"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, \"not-found@gmail.tmt\","},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, \"not-found-institute\","},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        EntityNotFoundException enfe \u003d verifyEntityNotFound(params);"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Account request for instructor with email: not-found@gmail.tmt and institute: \""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                + \"not-found-institute does not exist.\", enfe.getMessage());"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Failure case: instructor is unregistered\");"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, unregisteredAccountRequest.getEmail(),"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, unregisteredAccountRequest.getInstitute(),"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        InvalidOperationException ioe \u003d verifyInvalidOperation(params);"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Unable to reset account request as instructor is still unregistered.\", ioe.getMessage());"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, accountRequest.getEmail(),"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, accountRequest.getInstitute(),"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        ResetAccountRequestAction a \u003d getAction(params);"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult r \u003d getJsonResult(a);"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest \u003d logic.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        JoinLinkData response \u003d (JoinLinkData) r.getOutput();"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getRegistrationUrl(), response.getJoinLink());"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes updatedAccountRequest \u003d"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"                logic.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(updatedAccountRequest.getRegisteredAt());"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        verifyNumberOfEmailsSent(1);"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        EmailWrapper emailSent \u003d mockEmailSender.getEmailsSent().get(0);"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(), accountRequest.getName()),"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"                emailSent.getSubject());"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getEmail(), emailSent.getRecipient());"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emailSent.getContent().contains(accountRequest.getRegistrationUrl()));"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":105}},{"path":"src/test/java/teammates/ui/webapi/SearchAccountRequestsActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.TestProperties;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountRequestsData;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.MessageOutput;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link SearchAccountRequestsAction}."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class SearchAccountRequestsActionTest extends BaseActionTest\u003cSearchAccountRequestsAction\u003e {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestAttributes accountRequest \u003d"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"            typicalBundle.accountRequests.get(\"instructor1OfCourse1\");"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    protected void prepareTestData() {"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        DataBundle dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        removeAndRestoreDataBundle(dataBundle);"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        putDocuments(dataBundle);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        return Const.ResourceURIs.SEARCH_ACCOUNT_REQUESTS;"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        return GET;"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute() {"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        // See test cases below."},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute_notEnoughParameters_shouldFail() {"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute_searchEmail_shouldSucceed() {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        if (!TestProperties.isSearchServiceActive()) {"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            return;"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        String[] submissionParams \u003d new String[] { Const.ParamsNames.SEARCH_KEY, accountRequest.getEmail() };"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        SearchAccountRequestsAction action \u003d getAction(submissionParams);"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestsData response \u003d (AccountRequestsData) result.getOutput();"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(response.getAccountRequests().stream()"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"                .filter(i -\u003e i.getName().equals(accountRequest.getName()))"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"                .findAny()"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"                .isPresent());"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(response.getAccountRequests().get(0).getRegistrationKey() !\u003d null);"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute_searchInstitute_shouldSucceed() {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        if (!TestProperties.isSearchServiceActive()) {"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"            return;"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        String[] submissionParams \u003d new String[] { Const.ParamsNames.SEARCH_KEY, accountRequest.getInstitute() };"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        SearchAccountRequestsAction action \u003d getAction(submissionParams);"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestsData response \u003d (AccountRequestsData) result.getOutput();"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(response.getAccountRequests().stream()"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"                .filter(i -\u003e i.getName().equals(accountRequest.getName()))"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"                .findAny()"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"                .isPresent());"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(response.getAccountRequests().get(0).getRegistrationKey() !\u003d null);"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute_searchName_shouldSucceed() {"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        if (!TestProperties.isSearchServiceActive()) {"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            return;"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        String[] submissionParams \u003d new String[] { Const.ParamsNames.SEARCH_KEY, accountRequest.getName() };"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        SearchAccountRequestsAction action \u003d getAction(submissionParams);"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestsData response \u003d (AccountRequestsData) result.getOutput();"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(response.getAccountRequests().stream()"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"                .filter(i -\u003e i.getName().equals(accountRequest.getName()))"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"                .findAny()"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"                .isPresent());"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(response.getAccountRequests().get(0).getRegistrationKey() !\u003d null);"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute_searchNoMatch_shouldBeEmpty() {"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        if (!TestProperties.isSearchServiceActive()) {"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"            return;"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        String[] submissionParams \u003d new String[] { Const.ParamsNames.SEARCH_KEY, \"noMatch\" };"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        SearchAccountRequestsAction action \u003d getAction(submissionParams);"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestsData response \u003d (AccountRequestsData) result.getOutput();"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(0, response.getAccountRequests().size());"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    public void testExecute_noSearchService_shouldReturn501() {"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        if (TestProperties.isSearchServiceActive()) {"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"            return;"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        String[] params \u003d new String[] {"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.SEARCH_KEY, \"anything\","},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        SearchAccountRequestsAction a \u003d getAction(params);"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult result \u003d getJsonResult(a, HttpStatus.SC_NOT_IMPLEMENTED);"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        MessageOutput output \u003d (MessageOutput) result.getOutput();"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Full-text search is not available.\", output.getMessage());"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":140}},{"path":"src/web/app/components/comment-box/comment-row/comment-row.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnChanges, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CommentVisibilityStateMachine } from \u0027../../../../services/comment-visibility-state-machine\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../../services/simple-modal.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  CommentVisibilityType,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  ResponseOutput,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { CommentVisibilityControl } from \u0027../../../../types/comment-visibility-control\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../simple-modal/simple-modal-type\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { CommentEditFormModel } from \u0027../comment-edit-form/comment-edit-form.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { CommentRowMode } from \u0027./comment-row.mode\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Model for a comment row."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export interface CommentRowModel {"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"  // original comment and recipient identifier can be null under ADD mode"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  originalComment?: FeedbackResponseComment;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"  originalRecipientIdentifier?: string;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   * Timezone of the original comment."},{"lineNumber":26,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  timezone?: string;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  // timezone and originalComment are optional under ADD mode."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  // optional fields that make the display name more readable"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  commentGiverName?: string;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  lastEditorName?: string;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  commentEditFormModel: CommentEditFormModel;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  isEditing: boolean;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Comment row component to be used in a comment table"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  selector: \u0027tm-comment-row\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./comment-row.component.html\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./comment-row.component.scss\u0027],"},{"lineNumber":45,"author":{"gitId":"-"},"content":"})"},{"lineNumber":46,"author":{"gitId":"-"},"content":"export class CommentRowComponent implements OnChanges {"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  CommentRowMode: typeof CommentRowMode \u003d CommentRowMode;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  CommentVisibilityControl: typeof CommentVisibilityControl \u003d CommentVisibilityControl;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  mode: CommentRowMode \u003d CommentRowMode.ADD;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  isVisibilityOptionEnabled: boolean \u003d true;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  isDisabled: boolean \u003d false;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  shouldHideSavingButton: boolean \u003d false;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  shouldHideClosingButton: boolean \u003d false;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  shouldHideEditButton: boolean \u003d false;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  shouldHideDeleteButton: boolean \u003d false;"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  isFeedbackParticipantComment: boolean \u003d false;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  response?: ResponseOutput;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  questionShowResponsesTo: FeedbackVisibilityType[] \u003d [];"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  model: CommentRowModel \u003d {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    commentEditFormModel: {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      commentText: \u0027\u0027,"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"      isUsingCustomVisibilities: false,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    isEditing: false,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  modelChange: EventEmitter\u003cCommentRowModel\u003e \u003d new EventEmitter();"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  saveCommentEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  deleteCommentEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  closeEditingEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  visibilityStateMachine: CommentVisibilityStateMachine;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  constructor(private simpleModalService: SimpleModalService,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"              private commentService: FeedbackResponseCommentService) {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d this.commentService.getNewVisibilityStateMachine(this.questionShowResponsesTo);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  ngOnChanges(): void {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    if (this.model.originalComment) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      this.visibilityStateMachine \u003d this.commentService.getNewVisibilityStateMachine(this.questionShowResponsesTo);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      if (this.model.originalComment.isVisibilityFollowingFeedbackQuestion) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // follow the question\u0027s visibilities settings"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        this.visibilityStateMachine.allowAllApplicableTypesToSee();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        const visibilitySetting: { [TKey in CommentVisibilityControl]: CommentVisibilityType[] } \u003d {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          SHOW_COMMENT: this.model.originalComment.showCommentTo,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          SHOW_GIVER_NAME: this.model.originalComment.showCommentTo,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":128,"author":{"gitId":"-"},"content":"   * Closes editing of current comment and restore back the original comment."},{"lineNumber":129,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  triggerCloseEditing(): void {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    this.closeEditingEvent.emit();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":135,"author":{"gitId":"-"},"content":"   * Triggers update comment event."},{"lineNumber":136,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  triggerSaveCommentEvent(): void {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    this.saveCommentEvent.emit();"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   * Triggers the delete comment event"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  triggerDeleteCommentEvent(): void {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        .openConfirmationModal(\u0027Delete the comment permanently?\u0027, SimpleModalType.DANGER,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u0027Are you sure you want to continue?\u0027);"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      this.deleteCommentEvent.emit();"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":156,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  triggerModelChange(field: string, data: any): void {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    this.modelChange.emit({ ...this.model, [field]: data });"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":158,"samuelfangjw":2}},{"path":"src/web/app/components/logs-table/logs-table.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"logs.length\u003e0; else noLogMessage\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003ctable id\u003d\"logs-table\" class\u003d\"table table-bordered table-hover margin-bottom-20px logs-table\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cthead\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        \u003ctr\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"          \u003cth id\u003d\"timestamp\" class\u003d\"width-20\"\u003eTimestamp\u003c/th\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          \u003cth id\u003d\"severity\" class\u003d\"width-10\"\u003eSeverity\u003c/th\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"          \u003cth id\u003d\"trace-id\" class\u003d\"width-10\"\u003eTrace ID\u003c/th\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"          \u003cth id\u003d\"summary\" class\u003d\"width-60\"\u003eSummary\u003c/th\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003c/tr\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003c/thead\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003ctbody\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cng-container *ngFor\u003d\"let log of logs\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003ctr (click)\u003d\"expandDetails(log)\" [ngClass]\u003d\"getClassForSeverity(log.logEntry.severity)\"\u003e"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd class\u003d\"width-20\" style\u003d\"font-family: monospace;\"\u003e{{ log.timestampForDisplay }}\u003c/td\u003e"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd class\u003d\"width-10\"\u003e{{ log.logEntry.severity }}\u003c/td\u003e"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd class\u003d\"width-10\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"clickable\" ngbTooltip\u003d\"Click to add to filter\" (click)\u003d\"addTraceToFilter(log.logEntry.trace)\"\u003e{{ log.traceIdForDisplay }}\u003c/span\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd class\u003d\"width-60\"\u003e"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"              \u003cdiv class\u003d\"ellipsis\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003ctm-request-log-line *ngIf\u003d\"log.logEntry.details \u0026\u0026 log.logEntry.details.event \u003d\u003d\u003d LogEvent.REQUEST_LOG\" [log]\u003d\"log.logEntry\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                  (addActionClassEvent)\u003d\"addActionClassToFilter($event)\"\u003e\u003c/tm-request-log-line\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003ctm-exception-log-line *ngIf\u003d\"log.logEntry.details \u0026\u0026 log.logEntry.details.event \u003d\u003d\u003d LogEvent.EXCEPTION_LOG\" [log]\u003d\"log.logEntry\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                  (addExceptionClassEvent)\u003d\"addExceptionClassToFilter($event)\"\u003e\u003c/tm-exception-log-line\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003ctm-generic-log-line *ngIf\u003d\"!log.logEntry.details || log.logEntry.details.event !\u003d\u003d LogEvent.REQUEST_LOG \u0026\u0026 log.logEntry.details.event !\u003d\u003d LogEvent.EXCEPTION_LOG\" [log]\u003d\"log.logEntry\"\u003e\u003c/tm-generic-log-line\u003e"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003ctr *ngIf\u003d\"log.isDetailsExpanded\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003ctd colspan\u003d\"4\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cdetails\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003csummary class\u003d\"title\"\u003esource location:\u003c/summary\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003cpre class\u003d\"clickable margin-left-3em wrap\" ngbTooltip\u003d\"Click to add to filter\" (click)\u003d\"addSourceLocationToFilter(log.logEntry.sourceLocation)\"\u003e{{ log.logEntry.sourceLocation | json }}\u003c/pre\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              \u003c/details\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cdetails\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003csummary class\u003d\"title\"\u003eresource:\u003c/summary\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cpre class\u003d\"margin-left-3em wrap\"\u003e{{ log.logEntry.resourceIdentifier | json }}\u003c/pre\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003c/details\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cdetails *ngIf\u003d\"log.logEntry.message\" open\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003csummary class\u003d\"title\"\u003emessage:\u003c/summary\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003cpre class\u003d\"margin-left-3em wrap\"\u003e{{ log.logEntry.message }}\u003c/pre\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"              \u003c/details\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              \u003ctm-request-log-details *ngIf\u003d\"log.logEntry.details \u0026\u0026 log.logEntry.details.event \u003d\u003d\u003d LogEvent.REQUEST_LOG\" [log]\u003d\"log.logEntry\" (addUserInfoEvent)\u003d\"addUserInfoToFilter($event)\"\u003e\u003c/tm-request-log-details\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003ctm-email-log-details *ngIf\u003d\"log.logEntry.details \u0026\u0026 log.logEntry.details.event \u003d\u003d\u003d LogEvent.EMAIL_SENT\" [log]\u003d\"log.logEntry\"\u003e\u003c/tm-email-log-details\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003ctm-exception-log-details *ngIf\u003d\"log.logEntry.details \u0026\u0026 log.logEntry.details.event \u003d\u003d\u003d LogEvent.EXCEPTION_LOG\" [log]\u003d\"log.logEntry\"\u003e\u003c/tm-exception-log-details\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              \u003ctm-generic-log-details *ngIf\u003d\"!log.logEntry.details || log.logEntry.details.event \u003d\u003d\u003d LogEvent.FEEDBACK_SESSION_AUDIT\" [log]\u003d\"log.logEntry\"\u003e\u003c/tm-generic-log-details\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003cdiv *ngIf\u003d\"log.logEntry.trace\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003cspan class\u003d\"title\"\u003etrace: \u003c/span\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u003cspan class\u003d\"clickable\" ngbTooltip\u003d\"Click to add to filter\" (click)\u003d\"addTraceToFilter(log.logEntry.trace)\"\u003e{{ log.logEntry.trace }}\u003c/span\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/tbody\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/table\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cng-template #noLogMessage\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"no-log-message\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    There are no logs in this time period."},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/ng-template\u003e"}],"authorContributionMap":{"-":58,"samuelfangjw":6}},{"path":"src/web/app/components/logs-table/logs-table.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".no-log-message {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  padding: 10px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":".margin-bottom-20px {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  margin-bottom: 20px;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":".right-padding {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  padding-right: 1.25em;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".margin-left-3em {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  margin-left: 3em;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":".logs-table {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"  display: flex;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"  flex-flow: column;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  word-break: break-all;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"  max-height: 90vh;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"  thead {"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    flex: 0 0 auto;"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    display: table;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    table-layout: fixed;"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"  tbody {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    flex: 1 1 auto;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    display: block;"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    overflow-y: scroll;"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    tr {"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"      width: 100%;"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"      display: table;"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"      table-layout: fixed;"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"      \u0026:first-child td {"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        border-top: 0;"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      }"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":".wrap {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  white-space: pre-wrap;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  word-break: keep-all;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":".width-10 {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  width: 10%;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":".width-20 {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  width: 20%;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":".width-60 {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  width: 60%;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":".title {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  color: steelblue;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":".info-row {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  background-color: lightcyan;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":".warning-row {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  background-color: lightyellow;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":".error-row {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  background-color: lightpink;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":".clickable:hover,"},{"lineNumber":82,"author":{"gitId":"-"},"content":".clickable:active {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  background-color: lightblue;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":".border {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  border-radius: 20px;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  background: white;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  padding: 5px;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  height: 100%;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  margin-right: 1.25em;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":".ellipsis {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  text-overflow: ellipsis;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  overflow: hidden;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  white-space: nowrap;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":75,"samuelfangjw":25}},{"path":"src/web/app/components/question-edit-form/question-edit-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CommonVisibilitySetting, FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../simple-modal/simple-modal-type\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../teammates-common/collapse-anim\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { QuestionEditFormMode, QuestionEditFormModel } from \u0027./question-edit-form-model\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"const FEEDBACK_PATH_PROPERTIES: Set\u003cstring\u003e \u003d new Set\u003cstring\u003e(["},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u0027giverType\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u0027recipientType\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u0027isUsingOtherFeedbackPath\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u0027numberOfEntitiesToGiveFeedbackToSetting\u0027,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u0027customNumberOfEntitiesToGiveFeedbackTo\u0027,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"]);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"const VISIBILITY_PROPERTIES: Set\u003cstring\u003e \u003d new Set\u003cstring\u003e(["},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0027isUsingOtherVisibilitySetting\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  \u0027showResponsesTo\u0027,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u0027showGiverNameTo\u0027,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u0027showRecipientNameTo\u0027,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u0027commonVisibilitySettingName\u0027,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"]);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"const QUESTION_DETAIL_PROPERTIES: Set\u003cstring\u003e \u003d new Set\u003cstring\u003e(["},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u0027questionBrief\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u0027questionDescription\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u0027questionDetails\u0027,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u0027questionNumber\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"]);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * The question edit form component."},{"lineNumber":41,"author":{"gitId":"-"},"content":" */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  selector: \u0027tm-question-edit-form\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./question-edit-form.component.html\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./question-edit-form.component.scss\u0027],"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":47,"author":{"gitId":"-"},"content":"})"},{"lineNumber":48,"author":{"gitId":"-"},"content":"export class QuestionEditFormComponent {"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  FeedbackParticipantType: typeof FeedbackParticipantType \u003d FeedbackParticipantType;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting: typeof NumberOfEntitiesToGiveFeedbackToSetting \u003d"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      NumberOfEntitiesToGiveFeedbackToSetting;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  VisibilityControl: typeof VisibilityControl \u003d VisibilityControl;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType: typeof FeedbackVisibilityType \u003d FeedbackVisibilityType;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  set formModel(model: QuestionEditFormModel) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.model \u003d model;"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.commonFeedbackPaths \u003d this.feedbackQuestionsService.getCommonFeedbackPaths(model.questionType);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.allowedFeedbackPaths \u003d this.feedbackQuestionsService.getAllowedFeedbackPaths(model.questionType);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine(model.giverType, model.recipientType);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.commonFeedbackVisibilitySettings \u003d"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getCommonFeedbackVisibilitySettings("},{"lineNumber":69,"author":{"gitId":"-"},"content":"            this.visibilityStateMachine, model.questionType);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    const visibilitySetting: { [TKey in VisibilityControl]: FeedbackVisibilityType[] } \u003d {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      SHOW_RESPONSE: model.showResponsesTo,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      SHOW_GIVER_NAME: model.showGiverNameTo,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      SHOW_RECIPIENT_NAME: model.showRecipientNameTo,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    if (!model.isUsingOtherFeedbackPath) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      // find if the feedback path is in the common feedback paths"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      this.model.isUsingOtherFeedbackPath \u003d true;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      if (this.commonFeedbackPaths.has(model.giverType)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u0026\u0026 this.commonFeedbackPaths.get(model.giverType)!.includes(model.recipientType)) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.model.isUsingOtherFeedbackPath \u003d false;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    if (!model.commonVisibilitySettingName \u0026\u0026 !model.isUsingOtherVisibilitySetting) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      // find if the visibility settings is in the common visibility settings"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      this.model.isUsingOtherVisibilitySetting \u003d true;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      for (const commonVisibilityOption of this.commonFeedbackVisibilitySettings) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (this.isSameSet(visibilitySetting.SHOW_RESPONSE, commonVisibilityOption.visibilitySettings.SHOW_RESPONSE)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.isSameSet(visibilitySetting.SHOW_GIVER_NAME,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                commonVisibilityOption.visibilitySettings.SHOW_GIVER_NAME)"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.isSameSet(visibilitySetting.SHOW_RECIPIENT_NAME,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                commonVisibilityOption.visibilitySettings.SHOW_RECIPIENT_NAME)) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"          this.model.commonVisibilitySettingName \u003d commonVisibilityOption.name;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"          this.model.isUsingOtherVisibilitySetting \u003d false;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"   * Returns whether setting the custom feedback visibility is allowed."},{"lineNumber":106,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  get isCustomFeedbackVisibilitySettingAllowed(): boolean {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    return this.feedbackQuestionsService.isCustomFeedbackVisibilitySettingAllowed(this.model.questionType);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  numOfQuestions: number \u003d 0;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  formMode: QuestionEditFormMode \u003d QuestionEditFormMode.EDIT;"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  // if true, the question edit form is used for displaying of the question edit form only"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  // no editing function will be available; the edit button will be hidden"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  isDisplayOnly: boolean \u003d false;"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  model: QuestionEditFormModel \u003d {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    isQuestionHasResponses: false,"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 1,"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    commonVisibilitySettingName: \u0027\u0027,"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    isUsingOtherFeedbackPath: false,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    isUsingOtherVisibilitySetting: false,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    isDuplicating: false,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    isEditable: false,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    isCollapsed: false,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    isVisibilityChanged: false,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    isFeedbackPathChanged: false,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    isQuestionDetailsChanged: false,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  formModelChange: EventEmitter\u003cQuestionEditFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  saveExistingQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  deleteCurrentQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  duplicateCurrentQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  discardExistingQuestionChangesEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  discardNewQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  createNewQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"  commonFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  allowedFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"  commonFeedbackVisibilitySettings: CommonVisibilitySetting[] \u003d [];"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"  visibilityStateMachine: VisibilityStateMachine;"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  constructor(private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.model.giverType, this.model.recipientType);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"  private isSameSet(setA: FeedbackVisibilityType[], setB: FeedbackVisibilityType[]): boolean {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    return setA.length \u003d\u003d\u003d setB.length \u0026\u0026 setA.every((ele: FeedbackVisibilityType) \u003d\u003e setB.includes(ele));"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":202,"author":{"gitId":"-"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":203,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  triggerModelChange(field: keyof QuestionEditFormModel,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                     data: QuestionEditFormModel[keyof QuestionEditFormModel]): void {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      [field]: data,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      ...(!this.model.isVisibilityChanged \u0026\u0026 VISIBILITY_PROPERTIES.has(field)"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        \u0026\u0026 { isVisibilityChanged: true }),"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      ...(!this.model.isFeedbackPathChanged \u0026\u0026 FEEDBACK_PATH_PROPERTIES.has(field)"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        \u0026\u0026 { isFeedbackPathChanged: true }),"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      ...(!this.model.isQuestionDetailsChanged \u0026\u0026 QUESTION_DETAIL_PROPERTIES.has(field)"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        \u0026\u0026 { isQuestionDetailsChanged: true }),"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":220,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  triggerModelChangeBatch(obj: Partial\u003cQuestionEditFormModel\u003e): void {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      ...obj,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      ...(!this.model.isVisibilityChanged"},{"lineNumber":226,"author":{"gitId":"-"},"content":"          \u0026\u0026 Object.keys(obj).some((key: string) \u003d\u003e VISIBILITY_PROPERTIES.has(key))"},{"lineNumber":227,"author":{"gitId":"-"},"content":"          \u0026\u0026 { isVisibilityChanged: true }),"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      ...(!this.model.isFeedbackPathChanged"},{"lineNumber":229,"author":{"gitId":"-"},"content":"          \u0026\u0026 Object.keys(obj).some((key: string) \u003d\u003e FEEDBACK_PATH_PROPERTIES.has(key))"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          \u0026\u0026 { isFeedbackPathChanged: true }),"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      ...(!this.model.isQuestionDetailsChanged"},{"lineNumber":232,"author":{"gitId":"-"},"content":"          \u0026\u0026 Object.keys(obj).some((key: string) \u003d\u003e QUESTION_DETAIL_PROPERTIES.has(key))"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          \u0026\u0026 { isQuestionDetailsChanged: true }),"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":238,"author":{"gitId":"-"},"content":"   * Helper methods to create a range."},{"lineNumber":239,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  range(num: number): number[] {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    const ranges: number[] \u003d [];"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 0; i \u003c num; i +\u003d 1) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      ranges.push(i);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    return ranges;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":249,"author":{"gitId":"-"},"content":"   * Handle event to discard changes users made."},{"lineNumber":250,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  discardChangesHandler(isNewQuestion: boolean): void {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    if (!this.model.isVisibilityChanged"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      \u0026\u0026 !this.model.isFeedbackPathChanged"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      \u0026\u0026 !this.model.isQuestionDetailsChanged) {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      this.discardChanges();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":259,"author":{"gitId":"-"},"content":"        `Discard unsaved ${isNewQuestion ? \u0027question\u0027 : \u0027edits\u0027}?`, SimpleModalType.WARNING,"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        \u0027Warning: Any unsaved changes will be lost\u0027);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      this.discardChanges();"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"  private discardChanges(): void {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      this.discardExistingQuestionChangesEvent.emit();"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.ADD) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      this.discardNewQuestionEvent.emit();"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":276,"author":{"gitId":"-"},"content":"   * Saves the question."},{"lineNumber":277,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  saveQuestionHandler(): void {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      const doChangesNeedWarning: boolean \u003d this.model.isQuestionDetailsChanged"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        || this.model.isVisibilityChanged"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        || this.model.isFeedbackPathChanged;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      if (!this.model.isQuestionHasResponses || !doChangesNeedWarning) {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        this.saveExistingQuestionEvent.emit();"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      } else if (this.model.isFeedbackPathChanged) {"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"        // warn user that editing feedback path will delete all messages"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        const modalContent: string \u003d `"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            \u003cp\u003eYou seem to have changed the feedback path settings of this question. Please note that changing the"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            feedback path will cause \u003cb\u003eall existing responses to be deleted.\u003c/b\u003e Proceed?\u003c/p\u003e"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        `;"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":292,"author":{"gitId":"-"},"content":"            \u0027Save the question?\u0027, SimpleModalType.DANGER, modalContent);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        modalRef.result.then(() \u003d\u003e {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"          this.saveExistingQuestionEvent.emit();"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      } else if (this.model.isQuestionDetailsChanged) {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        // alert user that editing question may result in deletion of responses"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        const modalContent: string \u003d `"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            \u003cp\u003eEditing question settings in a way that potentially affects the validity of existing responses \u003cb\u003e may"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            cause all the existing responses for this question to be deleted.\u003c/b\u003e Proceed?\u003c/p\u003e"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        `;"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":303,"author":{"gitId":"-"},"content":"            \u0027Save the question?\u0027, SimpleModalType.DANGER, modalContent);"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        modalRef.result.then(() \u003d\u003e {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"          this.saveExistingQuestionEvent.emit();"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      } else if (this.model.isVisibilityChanged) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        // alert user that editing visibility options will not delete responses"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        const modalContent: string \u003d `"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            \u003cp\u003eYou seem to have changed the visibility settings of this question. Please note that \u003cb\u003ethe existing"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            responses will remain but their visibility will be changed as per the new visibility settings.\u003c/b\u003e"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            Proceed?\u003c/p\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        `;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":315,"author":{"gitId":"-"},"content":"            \u0027Save the question?\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        modalRef.result.then(() \u003d\u003e {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"          this.saveExistingQuestionEvent.emit();"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.ADD) {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      this.createNewQuestionEvent.emit();"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":327,"author":{"gitId":"-"},"content":"   * Handles event for duplicating the current question."},{"lineNumber":328,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  duplicateCurrentQuestionHandler(): void {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    this.duplicateCurrentQuestionEvent.emit();"},{"lineNumber":331,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":334,"author":{"gitId":"-"},"content":"   * Handles event for deleting the current question."},{"lineNumber":335,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  deleteCurrentQuestionHandler(): void {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    this.deleteCurrentQuestionEvent.emit();"},{"lineNumber":338,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":338,"samuelfangjw":1}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"question-submission-form\" class\u003d\"card\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-header bg-primary text-white question-header\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cspan id\u003d\"question-details\"\u003e\u003cb\u003eQuestion {{ model.questionNumber }}: \u003c/b\u003e{{ model.questionBrief }}\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\" *tmIsLoading\u003d\"model.isLoading\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card mb-3\" *ngIf\u003d\"model.questionDescription\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-header\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003cb\u003eMore details\u003c/b\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"question-description\" class\u003d\"card-body\" [innerHTML]\u003d\"model.questionDescription | safeHtml\"\u003e\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body visibility-card\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cp class\u003d\"text-secondary\"\u003eOnly the following persons can see your responses: \u003c/p\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cul id\u003d\"visibility-list\" class\u003d\"text-secondary\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.SELF\"\u003eYou can see your own feedback in the results page later on.\u003c/li\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cng-container *ngFor\u003d\"let visibilityType of FeedbackVisibilityType | enumToArray\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cli *ngIf\u003d\"visibilityStateMachine.isVisibilityTypeApplicable(visibilityType) \u0026\u0026 visibilityStateMachine.hasAnyVisibilityControl(visibilityType)\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            {{ visibilityType | visibilityEntityName:model.recipientType:model.numberOfEntitiesToGiveFeedbackToSetting:model.customNumberOfEntitiesToGiveFeedbackTo }} {{ visibilityStateMachine.getVisibilityControlUnderVisibilityType(visibilityType) | visibilityCapability }}"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"!visibilityStateMachine.hasAnyVisibilityControlForAll()\"\u003eNo-one can see your responses\u003c/li\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003ctm-contribution-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\"\u003e\u003c/tm-contribution-question-instruction\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-instruction\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-instruction\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003ctm-contribution-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\"\u003e\u003c/tm-contribution-question-constraint\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-constraint\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-constraint\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003ctm-rank-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-options-question-instruction\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003ctm-msq-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-msq-question-constraint\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003ctm-rank-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-recipients-question-instruction\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-constsum-options-question-instruction\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                                 [questionDetails]\u003d\"model.questionDetails\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-constsum-recipients-question-instruction\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.NONE \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.SELF\" class\u003d\"margin-top-30px margin-bottom-0px\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"ngb-tooltip-class font-bold\" ngbTooltip\u003d\"The party being evaluated or given feedback to\"\u003eEvaluee/Recipient\u003c/span\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\" *ngIf\u003d\"model.giverType \u003d\u003d\u003d FeedbackParticipantType.TEAMS\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      Please note that you are submitting this response on behalf of your team."},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"evaluee-col col-12\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row\" *ngFor\u003d\"let recipientSubmissionFormModel of model.recipientSubmissionForms; let i \u003d index; trackBy: trackRecipientSubmissionFormByFn\"\u003e"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"col-md-5 col-xs-12 margin-top-20px\" *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.SELF \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.NONE\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"recipient-name-{{ i }}\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cb\u003e{{ getRecipientName(recipientSubmissionFormModel.recipientIdentifier) }} \u003c/b\u003e \u003cspan\u003e({{ model.recipientType | recipientTypeName:model.giverType }})\u003c/span\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row evaluee-select align-items-center\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003cselect id\u003d\"recipient-dropdown\" class\u003d\"form-control font-weight-bold col\" [ngModel]\u003d\"recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                      (ngModelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027recipientIdentifier\u0027, $event)\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"isFormsDisabled\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003coption value\u003d\"\"\u003e\u003c/option\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003cng-container *ngFor\u003d\"let recipient of model.recipientList\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                  \u003coption *ngIf\u003d\"!isRecipientSelected(recipient) || recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier\" [ngValue]\u003d\"recipient.recipientIdentifier\"\u003e{{ recipient.recipientName }}\u003c/option\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"              \u003cdiv class\u003d\"col-auto text-left\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                ({{ model.recipientType | recipientTypeName: model.giverType }})"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"col margin-top-20px\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003ctm-contribution-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                                      [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                                                      [shouldShowHelpLink]\u003d\"i \u003d\u003d\u003d 0\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                                                      (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                                      [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-contribution-question-edit-answer-form\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003ctm-text-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-text-question-edit-answer-form\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003ctm-rank-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                                       [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                                       (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                                       [isDisabled]\u003d\"isFormsDisabled\"\u003e\u003c/tm-rank-options-question-edit-answer-form\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003ctm-rank-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                                          [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                                                          (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                                                          [isDisabled]\u003d\"isFormsDisabled\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-rank-recipients-question-edit-answer-form\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003ctm-num-scale-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-num-scale-question-edit-answer-form\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003ctm-mcq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MCQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                                    [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-mcq-question-edit-answer-form\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003ctm-msq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-msq-question-edit-answer-form\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003ctm-rubric-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RUBRIC\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                                 [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                                 (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                                 [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                                 [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\"\u003e\u003c/tm-rubric-question-edit-answer-form\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isFormsDisabled\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003c/tm-constsum-options-question-edit-answer-form\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isFormsDisabled\"\u003e\u003c/tm-constsum-recipients-question-edit-answer-form\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"comment-section\" *ngIf\u003d\"allowedToHaveParticipantComment\" class\u003d\"col-12 margin-bottom-20px margin-top-10px indent\"\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver \u0026\u0026 recipientSubmissionFormModel.commentByGiver.originalComment else newComment\"\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              \u003ctm-comment-row [mode]\u003d\"CommentRowMode.EDIT\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"                              [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":125,"author":{"gitId":"-"},"content":"                              (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":126,"author":{"gitId":"-"},"content":"                              [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                              [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"                              [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                              (deleteCommentEvent)\u003d\"triggerDeleteCommentEvent(i)\""},{"lineNumber":130,"author":{"gitId":"-"},"content":"                              (closeEditingEvent)\u003d\"discardEditedParticipantComment(i)\""},{"lineNumber":131,"author":{"gitId":"-"},"content":"                              [isDisabled]\u003d\"isFormsDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u003cng-template #newComment\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"              \u003cdiv style\u003d\"display: inline-block;\" [ngbTooltip]\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails) ? \u0027Give a valid response in order to comment\u0027 : \u0027\u0027\"\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-add-comment\" *ngIf\u003d\"!recipientSubmissionFormModel.commentByGiver\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        (click)\u003d\"addNewParticipantCommentToResponse(i)\""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"isFormsDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-comment\"\u003e\u003c/i\u003e [Optional] Comment on your response"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver\"\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u003ctm-comment-row [mode]\u003d\"CommentRowMode.ADD\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                                [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                                [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                                (closeEditingEvent)\u003d\"cancelAddingNewParticipantComment(i)\""},{"lineNumber":152,"author":{"gitId":"-"},"content":"                                [isDisabled]\u003d\"isFormsDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                  You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 constraint-margins\"\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003ctm-rank-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\""},{"lineNumber":165,"author":{"gitId":"-"},"content":"                                              [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":166,"author":{"gitId":"-"},"content":"                                              [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":167,"author":{"gitId":"-"},"content":"                                              (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-rank-recipients-question-constraint\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      \u003ctm-constsum-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":170,"author":{"gitId":"-"},"content":"                                                  [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                                                  [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                                                  (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":173,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-constsum-recipients-question-constraint\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"!model.recipientList.length \u0026\u0026 model.isLoaded\"\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS\"\u003eThis question is for team members and you don\u0027t have any team members. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS\"\u003eThis question is for other teams in this course and this course doesn\u0027t have any other team. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS\"\u003eThis question is for other students in this course and this course doesn\u0027t have any other student. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"model.recipientList.length \u003e 0\"\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center\"\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-submit-qn-{{ model.questionNumber }}\" type\u003d\"submit\" class\u003d\"btn btn-success\""},{"lineNumber":185,"author":{"gitId":"-"},"content":"                ngbTooltip\u003d\"You can save your responses for this question at any time and come back later to continue.\""},{"lineNumber":186,"author":{"gitId":"-"},"content":"                (click)\u003d\"saveFeedbackResponses()\" [disabled]\u003d\"isSavingResponses || isSubmissionDisabled\""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        \u003e\u003ctm-ajax-loading *ngIf\u003d\"isSavingResponses\"\u003e\u003c/tm-ajax-loading\u003eSubmit Responses\u003c/button\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":3,"-":188}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackNumericalScaleResponseDetails,"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackParticipantType,"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackQuestionType,"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackVisibilityType,"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { CommentBoxModule } from \u0027../comment-box/comment-box.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { QuestionConstraintModule } from \u0027../question-types/question-constraint/question-constraint.module\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  QuestionEditAnswerFormModule,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"} from \u0027../question-types/question-edit-answer-form/question-edit-answer-form.module\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { QuestionInstructionModule } from \u0027../question-types/question-instruction/question-instruction.module\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { VisibilityMessagesModule } from \u0027../visibility-messages/visibility-messages.module\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"} from \u0027./question-submission-form-model\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { QuestionSubmissionFormComponent } from \u0027./question-submission-form.component\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { RecipientTypeNamePipe } from \u0027./recipient-type-name.pipe\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"const formResponse1: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-1\u0027,"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027hans-charlie-id\u0027,"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"    answer: 5,"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"const formResponse2: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-2\u0027,"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027harris-barry-id\u0027,"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"    answer: 4,"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":49,"author":{"gitId":"Nicolascwy"},"content":"const formResponse3: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-3\u0027,"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027rogers-alan-id\u0027,"},{"lineNumber":52,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":"    answer: 3,"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"const formResponse4: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-4\u0027,"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027buck-arthur-id\u0027,"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":"    answer: 2,"},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":67,"author":{"gitId":"Nicolascwy"},"content":"const testNumscaleQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"  feedbackQuestionId: \u0027feedback-question-id-numscale\u0027,"},{"lineNumber":69,"author":{"gitId":"Nicolascwy"},"content":"  questionNumber: 1,"},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":"  questionBrief: \u0027numerical scale question\u0027,"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"  questionDescription: \u0027question description\u0027,"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"  questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":73,"author":{"gitId":"Nicolascwy"},"content":"  questionDetails: {"},{"lineNumber":74,"author":{"gitId":"Nicolascwy"},"content":"    minScale: 1,"},{"lineNumber":75,"author":{"gitId":"Nicolascwy"},"content":"    maxScale: 10,"},{"lineNumber":76,"author":{"gitId":"Nicolascwy"},"content":"    step: 1,"},{"lineNumber":77,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":78,"author":{"gitId":"Nicolascwy"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":79,"author":{"gitId":"Nicolascwy"},"content":"  recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":80,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":81,"author":{"gitId":"Nicolascwy"},"content":"  recipientList: [{ recipientName: \u0027Alan Rogers\u0027, recipientIdentifier: \u0027rogers-alan-id\u0027 },"},{"lineNumber":82,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Arthur Buck\u0027, recipientIdentifier: \u0027buck-arthur-id\u0027 },"},{"lineNumber":83,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027harris-barry-id\u0027 },"},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Charlie Hans\u0027, recipientIdentifier: \u0027hans-charlie-id\u0027 }],"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"  recipientSubmissionForms: [formResponse1, formResponse2, formResponse3, formResponse4],"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM,"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 4,"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"  showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":"  showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":91,"author":{"gitId":"Nicolascwy"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  isLoading: false,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  isLoaded: true,"},{"lineNumber":94,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":95,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"describe(\u0027QuestionSubmissionFormComponent\u0027, () \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  let component: QuestionSubmissionFormComponent;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cQuestionSubmissionFormComponent\u003e;"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      declarations: ["},{"lineNumber":103,"author":{"gitId":"-"},"content":"        QuestionSubmissionFormComponent,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        RecipientTypeNamePipe,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":107,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        VisibilityMessagesModule,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        QuestionInstructionModule,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        QuestionConstraintModule,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        QuestionEditAnswerFormModule,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        RichTextEditorModule,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommentBoxModule,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        NgbModule,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(QuestionSubmissionFormComponent);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should set model\u0027, () \u003d\u003e {"},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"    const model: QuestionSubmissionFormModel \u003d testNumscaleQuestionSubmissionForm;"},{"lineNumber":136,"author":{"gitId":"Nicolascwy"},"content":"    component.formModel \u003d model;"},{"lineNumber":137,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":138,"author":{"gitId":"Nicolascwy"},"content":"    expect(component.model).toBe(model);"},{"lineNumber":139,"author":{"gitId":"Nicolascwy"},"content":"  });"},{"lineNumber":140,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":141,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should arrange recipients according to alphabetical order of name after ngOnInit (Sorted recipient list)\u0027, () \u003d\u003e {"},{"lineNumber":142,"author":{"gitId":"Nicolascwy"},"content":"    const model: QuestionSubmissionFormModel \u003d JSON.parse(JSON.stringify(testNumscaleQuestionSubmissionForm));"},{"lineNumber":143,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":144,"author":{"gitId":"Nicolascwy"},"content":"    component.formModel \u003d model;"},{"lineNumber":145,"author":{"gitId":"Nicolascwy"},"content":"    component.ngOnInit();"},{"lineNumber":146,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":147,"author":{"gitId":"Nicolascwy"},"content":"    expect(model.recipientSubmissionForms).toEqual([formResponse3, formResponse4, formResponse2, formResponse1]);"},{"lineNumber":148,"author":{"gitId":"Nicolascwy"},"content":"  });"},{"lineNumber":149,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":150,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should arrange recipients according to alphabetical order of name after ngOnInit (Unsorted recipient list)\u0027,"},{"lineNumber":151,"author":{"gitId":"Nicolascwy"},"content":"    () \u003d\u003e {"},{"lineNumber":152,"author":{"gitId":"Nicolascwy"},"content":"      const model: QuestionSubmissionFormModel \u003d JSON.parse(JSON.stringify(testNumscaleQuestionSubmissionForm));"},{"lineNumber":153,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":154,"author":{"gitId":"Nicolascwy"},"content":"      // Change recipient list to unsorted"},{"lineNumber":155,"author":{"gitId":"Nicolascwy"},"content":"      model.recipientList \u003d [{ recipientName: \u0027Charlie Hans\u0027, recipientIdentifier: \u0027hans-charlie-id\u0027 },"},{"lineNumber":156,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Alan Rogers\u0027, recipientIdentifier: \u0027rogers-alan-id\u0027 },"},{"lineNumber":157,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027harris-barry-id\u0027 },"},{"lineNumber":158,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Arthur Buck\u0027, recipientIdentifier: \u0027buck-arthur-id\u0027 },"},{"lineNumber":159,"author":{"gitId":"Nicolascwy"},"content":"      ];"},{"lineNumber":160,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"      component.formModel \u003d model;"},{"lineNumber":162,"author":{"gitId":"Nicolascwy"},"content":"      component.ngOnInit();"},{"lineNumber":163,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":164,"author":{"gitId":"Nicolascwy"},"content":"      expect(model.recipientSubmissionForms).toEqual([formResponse3, formResponse4, formResponse2, formResponse1]);"},{"lineNumber":165,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":166,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":62,"Nicolascwy":104}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackQuestionType, FeedbackResponseDetails, FeedbackTextQuestionDetails,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { CommentRowMode } from \u0027../comment-box/comment-row/comment-row.mode\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"} from \u0027./question-submission-form-model\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The question submission form for a question."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  selector: \u0027tm-question-submission-form\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./question-submission-form.component.html\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./question-submission-form.component.scss\u0027],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"})"},{"lineNumber":29,"author":{"gitId":"-"},"content":"export class QuestionSubmissionFormComponent implements OnInit {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode: typeof QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackParticipantType: typeof FeedbackParticipantType \u003d FeedbackParticipantType;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType: typeof FeedbackVisibilityType \u003d FeedbackVisibilityType;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  CommentRowMode: typeof CommentRowMode \u003d CommentRowMode;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  formMode: QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  isFormsDisabled: boolean \u003d false;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  isSubmissionDisabled: boolean \u003d false;"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  isSavingResponses: boolean \u003d false;"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  set formModel(model: QuestionSubmissionFormModel) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.model \u003d model;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine(model.giverType, model.recipientType);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    const visibilitySetting: { [TKey in VisibilityControl]: FeedbackVisibilityType[] } \u003d {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      SHOW_RESPONSE: model.showResponsesTo,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      SHOW_GIVER_NAME: model.showGiverNameTo,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      SHOW_RECIPIENT_NAME: model.showRecipientNameTo,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.allowedToHaveParticipantComment \u003d"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.isAllowedToHaveParticipantComment(this.model.questionType);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  formModelChange: EventEmitter\u003cQuestionSubmissionFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  responsesSave: EventEmitter\u003cQuestionSubmissionFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [],"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  deleteCommentEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  visibilityStateMachine: VisibilityStateMachine;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  allowedToHaveParticipantComment: boolean \u003d false;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  constructor(private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"              private feedbackResponseService: FeedbackResponsesService) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":109,"author":{"gitId":"-"},"content":"            this.model.giverType, this.model.recipientType);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":113,"author":{"gitId":"Nicolascwy"},"content":"    this.sortRecipientsByName();"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"  }"},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":"  /**"},{"lineNumber":117,"author":{"gitId":"Nicolascwy"},"content":"   * Sorts recipients of feedback by their name."},{"lineNumber":118,"author":{"gitId":"Nicolascwy"},"content":"   */"},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":"  private sortRecipientsByName(): void {"},{"lineNumber":120,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientList.sort((firstRecipient: FeedbackResponseRecipient,"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"      secondRecipient: FeedbackResponseRecipient) \u003d\u003e"},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":"      firstRecipient.recipientName.localeCompare(secondRecipient.recipientName));"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":124,"author":{"gitId":"Nicolascwy"},"content":"    const indexes: Map\u003cString, number\u003e \u003d new Map();"},{"lineNumber":125,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientList.forEach((recipient: FeedbackResponseRecipient, index: number) \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"Nicolascwy"},"content":"      indexes.set(recipient.recipientIdentifier, index);"},{"lineNumber":127,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":128,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":129,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientSubmissionForms.sort((firstRecipient: FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":130,"author":{"gitId":"Nicolascwy"},"content":"      secondRecipient: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"Nicolascwy"},"content":"      const firstRecipientIndex: number \u003d indexes.get(firstRecipient.recipientIdentifier) || 0;"},{"lineNumber":132,"author":{"gitId":"Nicolascwy"},"content":"      const secondRecipientIndex: number \u003d indexes.get(secondRecipient.recipientIdentifier) || 0;"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":"      return firstRecipientIndex - secondRecipientIndex;"},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":139,"author":{"gitId":"-"},"content":"   * Tracks submission form for each recipient by the index in the array."},{"lineNumber":140,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  trackRecipientSubmissionFormByFn(index: number): any {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    return index;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":148,"author":{"gitId":"-"},"content":"   * Gets recipient name in {@code FIXED_RECIPIENT} mode."},{"lineNumber":149,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  getRecipientName(recipientIdentifier: string): string {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    const recipient: FeedbackResponseRecipient | undefined \u003d"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        this.model.recipientList.find("},{"lineNumber":153,"author":{"gitId":"-"},"content":"            (r: FeedbackResponseRecipient) \u003d\u003e r.recipientIdentifier \u003d\u003d\u003d recipientIdentifier);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    return recipient ? recipient.recipientName : \u0027Unknown\u0027;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":158,"author":{"gitId":"-"},"content":"   * Checks whether the recipient is already selected in {@code FLEXIBLE_RECIPIENT} mode."},{"lineNumber":159,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  isRecipientSelected(recipient: FeedbackResponseRecipient): boolean {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    return this.model.recipientSubmissionForms.some("},{"lineNumber":162,"author":{"gitId":"-"},"content":"        (recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   * Triggers the change of the recipient submission form."},{"lineNumber":168,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  triggerRecipientSubmissionFormChange(index: number, field: string, data: any): void {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice();"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    recipientSubmissionForms[index] \u003d {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      ...recipientSubmissionForms[index],"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      [field]: data,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   * Triggers deletion of a participant comment associated with the response."},{"lineNumber":185,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  triggerDeleteCommentEvent(index: number): void {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    this.deleteCommentEvent.emit(index);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":191,"author":{"gitId":"-"},"content":"   * Add new participant comment to response with index."},{"lineNumber":192,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  addNewParticipantCommentToResponse(index: number): void {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"      isEditing: true,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * Cancel adding new participant comment."},{"lineNumber":205,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  cancelAddingNewParticipantComment(index: number): void {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, null);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * Discards the current editing and restore the original comment."},{"lineNumber":212,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  discardEditedParticipantComment(index: number): void {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    const commentModel: CommentRowModel | undefined \u003d this.model.recipientSubmissionForms[index].commentByGiver;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    if (!commentModel || !commentModel.originalComment) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"          ...commentModel,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"          commentEditFormModel: {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            commentText: commentModel.originalComment.commentText,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":224,"author":{"gitId":"-"},"content":"          isEditing: false,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   * Checks whether the response is empty or not."},{"lineNumber":230,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  isFeedbackResponseDetailsEmpty(responseDetails: FeedbackResponseDetails): boolean {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    return this.feedbackResponseService.isFeedbackResponseDetailsEmpty("},{"lineNumber":233,"author":{"gitId":"-"},"content":"        this.model.questionType, responseDetails);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":237,"author":{"gitId":"-"},"content":"   * Updates validity of all responses in a question."},{"lineNumber":238,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  updateValidity(isValid: boolean): void {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    if (this.model.recipientSubmissionForms.length \u003d\u003d\u003d 0) { return; }"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice().map("},{"lineNumber":243,"author":{"gitId":"-"},"content":"            (model: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e ({ ...model, isValid }));"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"   * Triggers saving of responses for the specific question."},{"lineNumber":252,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  saveFeedbackResponses(): void {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    this.responsesSave.emit(this.model);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":234,"Nicolascwy":23}},{"path":"src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"!isAllFormsNotAnswered\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isInsufficientPointsDistributed\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Distribute the remaining {{ totalRequiredPoints - totalAnsweredPoints }} points.\u003c/p\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isPointsOverAllocated\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Remove the extra  {{ totalAnsweredPoints - totalRequiredPoints }} points allocated.\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isAllPointsDistributed\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      All points distributed!\u003c/p\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"    \u003cp *ngIf\u003d\"isAnyPointsNegative\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"      Points cannot be negative!\u003c/p\u003e"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isWronglyAllUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      Multiple recipients are given same points!\u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isCorrectlyAllUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      All allocated points are different!\u003c/p\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isWronglySomeUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      All recipients are given {{ allAnswers[0] }} points. Please allocate different points to at least one recipient.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isCorrectlySomeUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      At least one recipient has been allocated different number of points.\u003c/p\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":3,"-":24}},{"path":"src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { QuestionConstraintComponent } from \u0027./question-constraint.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Constraint of constsum recipients question."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  selector: \u0027tm-constsum-recipients-question-constraint\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./constsum-recipients-question-constraint.component.html\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./constsum-recipients-question-constraint.component.scss\u0027],"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class ConstsumRecipientsQuestionConstraintComponent"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    extends QuestionConstraintComponent\u003cFeedbackConstantSumQuestionDetails\u003e {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType: typeof FeedbackConstantSumDistributePointsType \u003d"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      FeedbackConstantSumDistributePointsType;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    super(DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS());"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * Checks if all forms are not answered."},{"lineNumber":36,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  get isAllFormsNotAnswered(): boolean {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    return this.recipientSubmissionForms.every((form: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      const details: FeedbackConstantSumResponseDetails \u003d form.responseDetails as FeedbackConstantSumResponseDetails;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      return details.answers.length \u003d\u003d\u003d 0;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   * Gets total required points."},{"lineNumber":46,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  get totalRequiredPoints(): number {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (this.questionDetails.pointsPerOption) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return this.questionDetails.points * this.recipientSubmissionForms.length;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    return this.questionDetails.points;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * Get answers for the recipients."},{"lineNumber":56,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  get allAnswers(): number[] {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    return this.recipientSubmissionForms.map("},{"lineNumber":59,"author":{"gitId":"-"},"content":"        (form: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          const details: FeedbackConstantSumResponseDetails \u003d"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              form.responseDetails as FeedbackConstantSumResponseDetails;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          if (details.answers.length \u003d\u003d\u003d 0) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          return details.answers[0];"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * Gets total answer points."},{"lineNumber":71,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  get totalAnsweredPoints(): number {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    return this.allAnswers.reduce((total: number, curr: number) \u003d\u003e total + curr, 0);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * Checks if all points are distributed unevenly."},{"lineNumber":78,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  get isAllPointsUneven(): boolean {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    this.allAnswers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    return set.size \u003d\u003d\u003d this.allAnswers.length;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * Checks if some points are distributed unevenly."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  get isSomePointsUneven(): boolean {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    if (this.allAnswers.length \u003d\u003d\u003d 1) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.allAnswers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    return set.size !\u003d\u003d 1;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * Checks if all points have been distributed."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  get isAllPointsDistributed(): boolean {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003d\u003d\u003d this.totalRequiredPoints;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * Checks if the points have been insufficiently distributed."},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  get isInsufficientPointsDistributed(): boolean {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003c this.totalRequiredPoints;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Checks if the points have been over allocated."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  get isPointsOverAllocated(): boolean {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003e this.totalRequiredPoints;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":"   * Checks if any of the points are negative."},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":124,"author":{"gitId":"zhaojj2209"},"content":"  get isAnyPointsNegative(): boolean {"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":"    return this.allAnswers.reduce((isNegative: boolean, curr: number) \u003d\u003e isNegative || (curr \u003c 0), false);"},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * Returns true if the question requires uneven distribution but the points are not unevenly distributed."},{"lineNumber":130,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  get isWronglyAllUneven(): boolean {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        \u0026\u0026 !this.isAllPointsUneven;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Returns true if the question requires uneven distribution and the points are unevenly distributed."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  get isCorrectlyAllUneven(): boolean {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u0026\u0026 this.isAllPointsUneven;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   * Returns true if the question requires some uneven distribution but points are not unevenly distributed for some."},{"lineNumber":146,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  get isWronglySomeUneven(): boolean {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u0026\u0026 !this.isSomePointsUneven;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * Returns true if the question requires some uneven distribution and points are unevenly distributed for some."},{"lineNumber":154,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  get isCorrectlySomeUneven(): boolean {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        \u0026\u0026 this.isSomePointsUneven;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  get isValid(): boolean {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    return this.isAllPointsDistributed \u0026\u0026 !this.isAnyPointsNegative"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        \u0026\u0026 (this.isCorrectlyAllUneven || this.isCorrectlySomeUneven"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        || this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.NONE);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":7,"-":158}},{"path":"src/web/app/components/question-types/question-constraint/rank-recipients-question-constraint.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"!questionDetails.areDuplicatesAllowed \u0026\u0026 isSameRanksAssigned\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"    The same rank should not be given multiple times.\u003c/p\u003e"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isNoRecipientRanked\" class\u003d\"text-info\"\u003e\u003cspan class\u003d\"fa fa-info-circle\"\u003e\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"    Please rank the above recipients.\u003c/p\u003e"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMinRecipientsEnabled \u0026\u0026 isRecipientsRankedLessThanMin\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"    Rank at least {{ questionDetails.minOptionsToBeRanked }} recipients.\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMaxRecipientsEnabled \u0026\u0026 isRecipientsRankedMoreThanMax\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"    Rank no more than {{questionDetails.maxOptionsToBeRanked}} recipients.\u003c/p\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":8,"-":2}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-options-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row text-left\" *ngFor\u003d\"let option of questionDetails.constSumOptions; let i \u003d index;\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-5 col-xs-12 text-md-right col-form-label\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cstrong\u003e{{ option }}\u003c/strong\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-7 col-xs-12 text-md-left\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cinput type\u003d\"number\" class\u003d\"form-control\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"           [ngModel]\u003d\"i \u003c responseDetails.answers.length ? responseDetails.answers[i] : \u0027\u0027\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"           (ngModelChange)\u003d\"triggerResponse(i, $event)\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"           [disabled]\u003d\"isDisabled\""},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"           min\u003d\"0\" step\u003d\"1\""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"           tmDisableWheel\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row\" *ngIf\u003d\"responseDetails.answers.length !\u003d\u003d 0\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12 col-sm-5 offset-sm-2\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" (click)\u003d\"triggerResponseDetailsChange(\u0027answers\u0027, [])\" [disabled]\u003d\"isDisabled\"\u003eClear Points\u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"responseDetails.answers.length !\u003d\u003d 0\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003c totalRequiredPoints\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Distribute the remaining {{ totalRequiredPoints - totalAnsweredPoints }} points.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003e totalRequiredPoints\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Remove the extra  {{ totalAnsweredPoints - totalRequiredPoints }} points allocated.\u003c/p\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003d\u003d\u003d totalRequiredPoints\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      All points distributed!\u003c/p\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"    \u003cp *ngIf\u003d\"isAnyPointsNegative\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":"      Points cannot be negative!\u003c/p\u003e"},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY \u0026\u0026 !isAllPointsUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      Multiple options are given same points!\u003c/p\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY \u0026\u0026 isAllPointsUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      All allocated points are different!\u003c/p\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY \u0026\u0026 !isSomePointsUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      All options are given {{ responseDetails.answers[0] }} points. Please allocate different points to at least one option.\u003c/p\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY \u0026\u0026 isSomePointsUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      At least one option has been allocated different number of points.\u003c/p\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":3,"fsgmhoward":4,"-":38}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-options-question-edit-answer-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_RESPONSE_DETAILS,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { QuestionEditAnswerFormComponent } from \u0027./question-edit-answer-form\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The constsum question options submission form for a recipient."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027tm-constsum-options-question-edit-answer-form\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./constsum-options-question-edit-answer-form.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./constsum-options-question-edit-answer-form.component.scss\u0027],"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class ConstsumOptionsQuestionEditAnswerFormComponent"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    extends QuestionEditAnswerFormComponent\u003cFeedbackConstantSumQuestionDetails, FeedbackConstantSumResponseDetails\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType: typeof FeedbackConstantSumDistributePointsType \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      FeedbackConstantSumDistributePointsType;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    super(DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS(), DEFAULT_CONSTSUM_RESPONSE_DETAILS());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * Assigns a point to the option specified by index."},{"lineNumber":34,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  triggerResponse(index: number, event: number): void {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    let newAnswers: number[] \u003d this.responseDetails.answers.slice();"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    if (newAnswers.length !\u003d\u003d this.questionDetails.constSumOptions.length) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      // initialize answers array on the fly"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      newAnswers \u003d Array(this.questionDetails.constSumOptions.length).fill(0);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    newAnswers[index] \u003d event ? Math.ceil(event) : 0;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.triggerResponseDetailsChange(\u0027answers\u0027, newAnswers);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * Gets total required points."},{"lineNumber":49,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  get totalRequiredPoints(): number {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    if (this.questionDetails.pointsPerOption) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      return this.questionDetails.points * this.questionDetails.constSumOptions.length;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    return this.questionDetails.points;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Gets total answer points."},{"lineNumber":59,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  get totalAnsweredPoints(): number {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    return this.responseDetails.answers.reduce((total: number, curr: number) \u003d\u003e total + curr, 0);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * Checks if all points are distributed unevenly."},{"lineNumber":66,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  get isAllPointsUneven(): boolean {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.responseDetails.answers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    return set.size \u003d\u003d\u003d this.responseDetails.answers.length;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * Checks if some points are distributed unevenly."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  get isSomePointsUneven(): boolean {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    if (this.responseDetails.answers.length \u003d\u003d\u003d 1) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    this.responseDetails.answers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    return set.size !\u003d\u003d 1;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":"   * Checks if any of the points are negative."},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":"  get isAnyPointsNegative(): boolean {"},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"    return this.responseDetails.answers.reduce((isNegative: boolean, curr: number) \u003d\u003e isNegative || (curr \u003c 0), false);"},{"lineNumber":93,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":7,"-":88}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-recipients-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"      \u003cinput type\u003d\"number\" class\u003d\"form-control\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"             [ngModel]\u003d\"responseDetails.answers.length \u003d\u003d\u003d 1 ? responseDetails.answers[0] : \u0027\u0027\""},{"lineNumber":5,"author":{"gitId":"-"},"content":"             (ngModelChange)\u003d\"triggerResponse($event)\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"             [disabled]\u003d\"isDisabled\""},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"             min\u003d\"0\" step\u003d\"1\""},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"             tmDisableWheel\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":4,"-":6}},{"path":"src/web/app/components/question-types/question-edit-answer-form/num-scale-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-row text-left\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-md-2 col-xs-5\"\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"    \u003cinput type\u003d\"number\" class\u003d\"form-control\" min\u003d\"{{ questionDetails.minScale }}\" max\u003d\"{{ questionDetails.maxScale }}\" step\u003d\"{{ questionDetails.step }}\" tmDisableWheel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"           [ngModel]\u003d\"responseDetails.answer \u003d\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED ? \u0027\u0027 : responseDetails.answer\" (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"possible-values\" class\u003d\"col-md-9 col-xs-6 text-secondary\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Possible values: {{ possibleValues }}"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row mt-1\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"!isValidPossibleValue(responseDetails.answer) \u0026\u0026 responseDetails.answer !\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED\" class\u003d\"text-danger\"\u003eThe scale entered is not a possible value.\u003c/p\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"responseDetails.answer \u003d\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED\" class\u003d\"text-info\"\u003ePlease enter a scale number.\u003c/p\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":15}},{"path":"src/web/app/components/question-types/question-edit-answer-form/question-edit-answer-form.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../teammates-common/teammates-common.module\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import { WheelDisablerModule } from \u0027../../wheel-disabler/wheel-disabler.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ConstsumOptionsQuestionEditAnswerFormComponent } from \u0027./constsum-options-question-edit-answer-form.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  ConstsumRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027./constsum-recipients-question-edit-answer-form.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ContributionPointDescriptionPipe } from \u0027./contribution-point-description.pipe\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { ContributionQuestionEditAnswerFormComponent } from \u0027./contribution-question-edit-answer-form.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { McqQuestionEditAnswerFormComponent } from \u0027./mcq-question-edit-answer-form.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { MsqQuestionEditAnswerFormComponent } from \u0027./msq-question-edit-answer-form.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { NumScaleQuestionEditAnswerFormComponent } from \u0027./num-scale-question-edit-answer-form.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { RankOptionsQuestionEditAnswerFormComponent } from \u0027./rank-options-question-edit-answer-form.component\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { RankRecipientsQuestionEditAnswerFormComponent } from \u0027./rank-recipients-question-edit-answer-form.component\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { RubricQuestionEditAnswerFormComponent } from \u0027./rubric-question-edit-answer-form.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { TextQuestionEditAnswerFormComponent } from \u0027./text-question-edit-answer-form.component\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Module for all different types of question edit answer forms."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ContributionQuestionEditAnswerFormComponent,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    TextQuestionEditAnswerFormComponent,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    McqQuestionEditAnswerFormComponent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    NumScaleQuestionEditAnswerFormComponent,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ContributionPointDescriptionPipe,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    MsqQuestionEditAnswerFormComponent,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    RankOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    RankRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    RubricQuestionEditAnswerFormComponent,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ConstsumOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ConstsumRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ContributionQuestionEditAnswerFormComponent,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    TextQuestionEditAnswerFormComponent,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    McqQuestionEditAnswerFormComponent,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    NumScaleQuestionEditAnswerFormComponent,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ContributionPointDescriptionPipe,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    MsqQuestionEditAnswerFormComponent,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    RankOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    RankRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    RubricQuestionEditAnswerFormComponent,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    ConstsumOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    ConstsumRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":52,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    FormsModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    RichTextEditorModule,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    TeammatesCommonModule,"},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"    WheelDisablerModule,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":58,"author":{"gitId":"-"},"content":"})"},{"lineNumber":59,"author":{"gitId":"-"},"content":"export class QuestionEditAnswerFormModule { }"}],"authorContributionMap":{"fsgmhoward":2,"-":57}},{"path":"src/web/app/components/question-types/question-edit-answer-form/rank-options-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row text-left\" *ngFor\u003d\"let num of questionDetails.options; let i \u003d index;\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-5 col-xs-12 text-md-right col-form-label\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cstrong\u003e{{ questionDetails.options[i] }}\u003c/strong\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-7 col-xs-12 text-md-left\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"responseDetails.answers[i]\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"            (ngModelChange)\u003d\"triggerResponse(i, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003coption [ngValue]\u003d\"RANK_OPTIONS_ANSWER_NOT_SUBMITTED\"\u003e\u003c/option\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003coption *ngFor\u003d\"let rank of ranksToBeAssigned\" [ngValue]\u003d\"rank\"\u003e{{ rank }}\u003c/option\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/select\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv\u003e"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"!questionDetails.areDuplicatesAllowed \u0026\u0026 isSameRanksAssigned\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"    The same rank should not be given multiple times.\u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isNoOptionRanked\" class\u003d\"text-info\"\u003e\u003cspan class\u003d\"fa fa-info-circle\"\u003e\u003c/span\u003e"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"    Please rank the above options.\u003c/p\u003e"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMinOptionsEnabled \u0026\u0026 isOptionsRankedLessThanMin\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"    You need to rank at least {{ questionDetails.minOptionsToBeRanked }} options.\u003c/p\u003e"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMaxOptionsEnabled \u0026\u0026 isOptionsRankedMoreThanMax\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    Rank no more than {{questionDetails.maxOptionsToBeRanked}} options.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":11,"-":12}},{"path":"src/web/app/components/question-types/question-edit-answer-form/rank-recipients-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv class\u003d\"margin-bottom-15px\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"responseDetails.answer\""},{"lineNumber":3,"author":{"gitId":"-"},"content":"          (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003coption [ngValue]\u003d\"RANK_RECIPIENTS_ANSWER_NOT_SUBMITTED\"\u003e\u003c/option\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003coption *ngFor\u003d\"let rank of ranksToBeAssigned\" [ngValue]\u003d\"rank\"\u003e{{ rank }}\u003c/option\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/select\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":6}},{"path":"src/web/app/components/session-edit-form/session-edit-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card card-plain\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"close-header\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"closeEditFormHandler()\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"      \u003cdiv class\u003d\"col-md-7\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row align-items-center\"\u003e"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"col-md-3\"\u003e"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"            \u003ch5 class\u003d\"text-right\"\u003eCreate new\u003c/h5\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"col-9 col-md-8\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cselect id\u003d\"session-type\" class\u003d\"form-control\" [ngModel]\u003d\"model.templateSessionName\" (ngModelChange)\u003d\"triggerModelChange(\u0027templateSessionName\u0027, $event)\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"              \u003coption *ngFor\u003d\"let templateSession of templateSessions\" [ngValue]\u003d\"templateSession.name\"\u003e{{ templateSession.name }}\u003c/option\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003c/select\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-1 col-md-1\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003ca type\u003d\"button\" class\u003d\"btn btn-link\" tmRouterLink\u003d\"/web/instructor/help\" [queryParams]\u003d\"{ questionId: \u0027sessions\u0027, section: \u0027sessions\u0027 }\" target\u003d\"_blank\"\u003e\u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e\u003c/a\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"      \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center align-items-center mt-1\"\u003e"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"col-md-2\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003ch5 class\u003d\"text-md-right\"\u003eOr: \u003c/h5\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-copy-session\" type\u003d\"button\" class\u003d\"btn btn-info align-row\" (click)\u003d\"copyOthersHandler()\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cspan\u003eCopy from previous feedback sessions\u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"padding-left-7px\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003ctm-ajax-loading *ngIf\u003d\"isCopyOtherSessionLoading\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center text-md-right session-form-buttons\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-edit\" type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"triggerModelChange(\u0027isEditable\u0027, true)\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT \u0026\u0026 !model.isEditable \u0026\u0026 !model.isSaving\"\u003e\u003ci class\u003d\"fas fa-pencil-alt\"\u003e\u003c/i\u003e Edit\u003c/button\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-save\" type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"submitFormHandler()\" [disabled]\u003d\"model.isSaving\" *ngIf\u003d\"model.isEditable || model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003e \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Save\u003c/button\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" ngbTooltip\u003d\"Discard changes to the feedback session\" (click)\u003d\"cancelHandler()\" *ngIf\u003d\"model.isEditable\" [disabled]\u003d\"model.isSaving\"\u003e\u003ci class\u003d\"fas fa-ban\"\u003e\u003c/i\u003e Cancel\u003c/button\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-delete\" type\u003d\"button\" class\u003d\"btn btn-primary\" ngbTooltip\u003d\"Delete the feedback session\" (click)\u003d\"deleteHandler()\" [disabled]\u003d\"model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isDeleting\"\u003e\u003c/tm-ajax-loading\u003e\u003ci class\u003d\"fas fa-trash\"\u003e\u003c/i\u003e Delete\u003c/button\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-copy\" type\u003d\"button\" class\u003d\"btn btn-primary\" ngbTooltip\u003d\"Copy this feedback session to other courses\" (click)\u003d\"copyHandler()\" [disabled]\u003d\"model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isCopying\"\u003e\u003c/tm-ajax-loading\u003e\u003ci class\u003d\"far fa-copy\"\u003e\u003c/i\u003e Copy\u003c/button\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\" [ngClass]\u003d\"{\u0027col-form-label\u0027: formMode \u003d\u003d\u003d SessionEditFormMode.ADD}\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Course for which the feedback session is for.\"\u003eCourse ID\u003c/span\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-auto text-md-left\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cselect id\u003d\"add-course-id\" class\u003d\"form-control\" [ngClass]\u003d\"{\u0027is-invalid\u0027: courseCandidates.length \u003d\u003d\u003d 0}\" [ngModel]\u003d\"model.courseId\" (ngModelChange)\u003d\"courseIdChangeHandler($event)\" [disabled]\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003coption *ngFor\u003d\"let course of courseCandidates\" [ngValue]\u003d\"course.courseId\"\u003e{{ course.courseId }}\u003c/option\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"invalid-feedback\" *ngIf\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                There is no un-archived course."},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"edit-course-id\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e {{ model.courseId }} \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\" [ngClass]\u003d\"{\u0027col-form-label\u0027: formMode \u003d\u003d\u003d SessionEditFormMode.ADD}\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Time Zone"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"time-zone\" class\u003d\"col-md-3 text-md-left\" [ngClass]\u003d\"{\u0027col-form-label\u0027: formMode \u003d\u003d\u003d SessionEditFormMode.ADD}\"\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"To change this, edit the course settings. TEAMMATES automatically adjusts to match the current time offset in your area, including clock changes due to daylight saving time.\"\u003e{{ model.timeZone }}\u003c/span\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Course Name"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"course-name\" class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            {{ model.courseName }}"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\" class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Enter the name of the feedback session e.g. Feedback Session 1.\"\u003eSession Name\u003c/span\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"formMode !\u003d\u003d SessionEditFormMode.ADD\"\u003eSession Name\u003c/span\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"              \u003cinput id\u003d\"add-session-name\" type\u003d\"text\" class\u003d\"form-control\" [ngModel]\u003d\"model.feedbackSessionName\" (ngModelChange)\u003d\"triggerModelChange(\u0027feedbackSessionName\u0027, $event)\" placeholder\u003d\"e.g. Feedback for Project Presentation 1\" maxlength\u003d\"64\" /\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"              \u003cdiv\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                {{FEEDBACK_SESSION_NAME_MAX_LENGTH - model.feedbackSessionName.length}} characters left"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"edit-session-name\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e {{ model.feedbackSessionName }} \u003c/div\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Will be displayed at the top of the page when users respond to the session.\"\u003eInstructions\u003c/span\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003ctm-rich-text-editor id\u003d\"instructions\" [richText]\u003d\"model.instructions\" (richTextChange)\u003d\"triggerModelChange(\u0027instructions\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\"\u003e\u003c/tm-rich-text-editor\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Submission Status"},{"lineNumber":115,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"submission-status\" class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            {{ model.submissionStatus | submissionStatusName }}"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold mt-3 mt-md-0\"\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Published Status"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"published-status\" class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            {{ model.publishStatus | publishStatusName }}"},{"lineNumber":124,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\"\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"col-12 text-md-left\"\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              \u003cdiv\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"Users can start submitting responses.\"\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                  Submission opening time"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center align-items-center\"\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"              \u003cdiv id\u003d\"submission-start-date\" class\u003d\"col-md-7 col-xs-center\"\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u003ctm-datepicker [disabled]\u003d\"!model.isEditable\" (dateChangeCallback)\u003d\"triggerModelChange(\u0027submissionStartDate\u0027, $event)\""},{"lineNumber":143,"author":{"gitId":"-"},"content":"                                     [date]\u003d\"model.submissionStartDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u003ctm-timepicker id\u003d\"submission-start-time\" [time]\u003d\"model.submissionStartTime\" (timeChange)\u003d\"triggerModelChange(\u0027submissionStartTime\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-5 border-left-gray\"\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12 text-md-left ml-md-2\"\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"No more submissions from users.\"\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                  Submission closing time"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row align-items-center\"\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              \u003cdiv id\u003d\"submission-end-date\" class\u003d\"col-md-7 col-xs-center\"\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u003ctm-datepicker [disabled]\u003d\"!model.isEditable\" (dateChangeCallback)\u003d\"triggerModelChange(\u0027submissionEndDate\u0027, $event)\""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                                     [minDate]\u003d\"model.submissionStartDate\" [date]\u003d\"model.submissionEndDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u003ctm-timepicker id\u003d\"submission-end-time\" [time]\u003d\"model.submissionEndTime\" (timeChange)\u003d\"triggerModelChange(\u0027submissionEndTime\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 border-left-gray\"\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"ngb-tooltip-class col-12 text-md-left ml-md-2\" ngbTooltip\u003d\"Amount of time the system will continue accepting submissions after the specified deadline.\"\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"control-label font-bold\"\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                  Grace period"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u003cselect id\u003d\"grace-period\" class\u003d\"form-control\" [ngModel]\u003d\"model.gracePeriod\" (ngModelChange)\u003d\"triggerModelChange(\u0027gracePeriod\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                  \u003coption *ngFor\u003d\"let graceMinute of [0, 5, 10, 15, 20, 25, 30]\" [ngValue]\u003d\"graceMinute\"\u003e{{ graceMinute + \u0027 min\u0027}}\u003c/option\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                \u003c/select\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!model.hasVisibleSettingsPanelExpanded\" class\u003d\"margin-top-20px\"\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"text-muted\"\u003eSession is visible at submission opening time, responses are only visible when you publish the results.\u003c/span\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"btn-change-visibility\" type\u003d\"button\" class\u003d\"btn btn-link\" (click)\u003d\"triggerModelChange(\u0027hasVisibleSettingsPanelExpanded\u0027, true)\" [disabled]\u003d\"!model.isEditable\"\u003e[Change]\u003c/button\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\" *ngIf\u003d\"model.hasVisibleSettingsPanelExpanded\" @collapseAnim\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row align-items-start\"\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-6 text-center text-md-left\"\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row ml-md-1\"\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"Session can be visible before it is open for submissions so that users can preview the questions.\"\u003eMake session visible \u003c/label\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-2 mt-md-1\"\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                  \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    \u003cinput id\u003d\"session-visibility-custom\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"sessionVisibleRadio\" [value]\u003d\"SessionVisibleSetting.CUSTOM\" [ngModel]\u003d\"model.sessionVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027sessionVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    At"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                  \u003c/label\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":209,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"              \u003cdiv id\u003d\"session-visibility-date\" class\u003d\"col-md-6\"\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                \u003ctm-datepicker [disabled]\u003d\"model.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.CUSTOM || !model.isEditable\""},{"lineNumber":212,"author":{"gitId":"-"},"content":"                                     (dateChangeCallback)\u003d\"triggerModelChange(\u0027customSessionVisibleDate\u0027, $event)\""},{"lineNumber":213,"author":{"gitId":"-"},"content":"                                     [maxDate]\u003d\"maxDateForSessionVisible\" [date]\u003d\"model.customSessionVisibleDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                \u003ctm-timepicker id\u003d\"session-visibility-time\" [time]\u003d\"model.customSessionVisibleTime\" (timeChange)\u003d\"triggerModelChange(\u0027customSessionVisibleTime\u0027, $event)\" [isDisabled]\u003d\"model.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.CUSTOM || !model.isEditable\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-1 ml-md-3\"\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12 form-check\"\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                  \u003cinput id\u003d\"session-visibility-at-open\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"sessionVisibleRadio\" [value]\u003d\"SessionVisibleSetting.AT_OPEN\" [ngModel]\u003d\"model.sessionVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027sessionVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                  Submission opening time"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-6 sessionVisibleRadio border-left-gray text-center text-md-left\"\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row ml-md-1\"\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"Make responses for the feedback session visible to designated recipients.\"\u003eMake response visible \u003c/label\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"col-md-2 mt-md-1\"\u003e"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                      \u003cinput id\u003d\"response-visibility-custom\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"responseVisibleRadio\" [value]\u003d\"ResponseVisibleSetting.CUSTOM\" [ngModel]\u003d\"model.responseVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027responseVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"/\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                      At"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u003c/label\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                  \u003c/div\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                \u003cdiv id\u003d\"response-visibility-date\" class\u003d\"col-md-6\"\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                  \u003ctm-datepicker [disabled]\u003d\"model.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.CUSTOM || !model.isEditable\""},{"lineNumber":245,"author":{"gitId":"-"},"content":"                                       (dateChangeCallback)\u003d\"triggerModelChange(\u0027customResponseVisibleDate\u0027, $event)\""},{"lineNumber":246,"author":{"gitId":"-"},"content":"                                       [minDate]\u003d\"minDateForResponseVisible\" [date]\u003d\"model.customResponseVisibleDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                  \u003ctm-timepicker id\u003d\"response-visibility-time\" [time]\u003d\"model.customResponseVisibleTime\" (timeChange)\u003d\"triggerModelChange(\u0027customResponseVisibleTime\u0027, $event)\" [isDisabled]\u003d\"model.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.CUSTOM || !model.isEditable\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                  \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Same time as when the session becomes visible to users.\"\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    \u003cinput id\u003d\"response-visibility-immediately\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"responseVisibleRadio\" [value]\u003d\"ResponseVisibleSetting.AT_VISIBLE\" [ngModel]\u003d\"model.responseVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027responseVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    Immediately"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                  \u003c/label\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":263,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                  \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Remember to manually publish the responses for this session later on.\"\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    \u003cinput id\u003d\"response-visibility-manually\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"responseVisibleRadio\" [value]\u003d\"ResponseVisibleSetting.LATER\" [ngModel]\u003d\"model.responseVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027responseVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    Not now (publish manually)"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                  \u003c/label\u003e"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":270,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!model.hasEmailSettingsPanelExpanded\"\u003e"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"text-muted\"\u003eEmails are sent when session opens (within 15 minutes), 24 hrs before session closes and when results are published.\u003c/span\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"btn-change-email\" type\u003d\"button\" class\u003d\"btn btn-link\" (click)\u003d\"triggerModelChange(\u0027hasEmailSettingsPanelExpanded\u0027, true)\" [disabled]\u003d\"!model.isEditable\"\u003e[Change]\u003c/button\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\" *ngIf\u003d\"model.hasEmailSettingsPanelExpanded\" @collapseAnim\u003e"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"col-12 font-bold\"\u003e"},{"lineNumber":283,"author":{"gitId":"-"},"content":"          Send emails for"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row ml-md-1 mt-md-3\"\u003e"},{"lineNumber":286,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"},{"lineNumber":288,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Notify students when the session is open for submission.\"\u003e"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                \u003cinput id\u003d\"email-opening\" class\u003d\"form-check-input\" type\u003d\"checkbox\" checked disabled\u003eSession opening reminder"},{"lineNumber":290,"author":{"gitId":"-"},"content":"              \u003c/label\u003e"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":293,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"},{"lineNumber":295,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Remind students to submit 24 hours before the end of the session.\"\u003e"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                \u003cinput id\u003d\"email-closing\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"model.isClosingEmailEnabled\" (ngModelChange)\u003d\"triggerModelChange(\u0027isClosingEmailEnabled\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e Session closing reminder"},{"lineNumber":297,"author":{"gitId":"-"},"content":"              \u003c/label\u003e"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":299,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":300,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"},{"lineNumber":302,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Notify students when the session results is published.\"\u003e"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                \u003cinput id\u003d\"email-published\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"model.isPublishedEmailEnabled\" (ngModelChange)\u003d\"triggerModelChange(\u0027isPublishedEmailEnabled\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e Results published announcement"},{"lineNumber":304,"author":{"gitId":"-"},"content":"              \u003c/label\u003e"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":306,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row margin-top-20px\"\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center\"\u003e"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        \u003cspan class\u003d\"loader\"\u003e\u003c/span\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":314,"author":{"gitId":"-"},"content":"          \u003cbutton id\u003d\"btn-create-session\" type\u003d\"button\" class\u003d\"btn btn-primary\" [disabled]\u003d\"courseCandidates.length \u003d\u003d\u003d 0 || model.isSaving\" (click)\u003d\"submitFormHandler()\"\u003e"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003eCreate Feedback Session"},{"lineNumber":316,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":"          \u003cp class\u003d\"text-danger margin-top-20px\" *ngIf\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e\u003cb\u003eYou need to have an active(unarchived) course to create a session!\u003c/b\u003e\u003c/p\u003e"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e"},{"lineNumber":320,"author":{"gitId":"-"},"content":"          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-success\" [disabled]\u003d\"model.isSaving || !model.isEditable\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\" (click)\u003d\"submitFormHandler()\"\u003e"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003eSave Changes"},{"lineNumber":322,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"-":320,"Nicolascwy":7}},{"path":"src/web/app/components/sessions-table/send-reminders-to-respondents-modal/send-reminders-to-respondents-modal.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  InstructorListInfoTableRowModel,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  StudentListInfoTableRowModel,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Send reminders to respondents modal."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  selector: \u0027tm-send-reminders-to-respondents-modal\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./send-reminders-to-respondents-modal.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./send-reminders-to-respondents-modal.component.scss\u0027],"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class SendRemindersToRespondentsModalComponent {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  // values below will be injected by other component"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  studentListInfoTableRowModels: StudentListInfoTableRowModel[] \u003d [];"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  instructorListInfoTableRowModels: InstructorListInfoTableRowModel[] \u003d [];"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  constructor(public activeModal: NgbActiveModal) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * Changes selection state for all students."},{"lineNumber":29,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllStudentsHandler(shouldSelect: boolean): void {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.studentListInfoTableRowModels.forEach((model: StudentListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      model.isSelected \u003d shouldSelect;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * Changes selection state for all yet to submit students."},{"lineNumber":38,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllYetSubmittedStudentsHandler(shouldSelect: boolean): void {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    this.studentListInfoTableRowModels.forEach((model: StudentListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      if (!model.hasSubmittedSession) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        model.isSelected \u003d shouldSelect;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * Changes selection state for all instructors."},{"lineNumber":49,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllInstructorsHandler(shouldSelect: boolean): void {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.instructorListInfoTableRowModels.forEach((model: InstructorListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      model.isSelected \u003d shouldSelect;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * Changes selection state for all yet to submit instructors."},{"lineNumber":58,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllYetSubmittedInstructorsHandler(shouldSelect: boolean): void {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.instructorListInfoTableRowModels.forEach((model: InstructorListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      if (!model.hasSubmittedSession) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.isSelected \u003d shouldSelect;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * Collates a list of selected students with selected status."},{"lineNumber":69,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  collateRespondentsToSendHandler(): (StudentListInfoTableRowModel | InstructorListInfoTableRowModel)[] {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    const studentsToSend: (StudentListInfoTableRowModel | InstructorListInfoTableRowModel)[] \u003d"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.studentListInfoTableRowModels.map("},{"lineNumber":73,"author":{"gitId":"-"},"content":"            (model: StudentListInfoTableRowModel) \u003d\u003e ({ ...model }))"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            .filter((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    const instructorsToSend: (StudentListInfoTableRowModel | InstructorListInfoTableRowModel)[] \u003d"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.instructorListInfoTableRowModels.map("},{"lineNumber":77,"author":{"gitId":"-"},"content":"            (model: InstructorListInfoTableRowModel) \u003d\u003e ({ ...model }))"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            .filter((model: InstructorListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    return studentsToSend.concat(instructorsToSend);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * Checks whether all students are selected."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  get isAllStudentsSelected(): boolean {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return this.studentListInfoTableRowModels.every((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * Checks whether all yet to submit students are selected."},{"lineNumber":91,"author":{"gitId":"Nicolascwy"},"content":"   *"},{"lineNumber":92,"author":{"gitId":"Nicolascwy"},"content":"   * If all students have submitted it will return false."},{"lineNumber":93,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  get isAllYetToSubmitStudentsSelected(): boolean {"},{"lineNumber":95,"author":{"gitId":"Nicolascwy"},"content":"    const nonSubmitters: StudentListInfoTableRowModel[] \u003d this.studentListInfoTableRowModels"},{"lineNumber":96,"author":{"gitId":"Nicolascwy"},"content":"      .filter((model: StudentListInfoTableRowModel) \u003d\u003e !model.hasSubmittedSession);"},{"lineNumber":97,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":98,"author":{"gitId":"Nicolascwy"},"content":"    return nonSubmitters.length \u003e 0 \u0026\u0026 nonSubmitters.every((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":102,"author":{"gitId":"-"},"content":"   * Checks whether all instructors are selected."},{"lineNumber":103,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  get isAllInstructorsSelected(): boolean {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    return this.instructorListInfoTableRowModels.every((model: InstructorListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   * Checks whether all yet to submit instructors are selected."},{"lineNumber":110,"author":{"gitId":"Nicolascwy"},"content":"   *"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":"   * If all instructors have submitted it will return false."},{"lineNumber":112,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  get isAllYetToSubmitInstructorsSelected(): boolean {"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"    const nonSubmitters: InstructorListInfoTableRowModel[] \u003d this.instructorListInfoTableRowModels"},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":"      .filter((model: InstructorListInfoTableRowModel) \u003d\u003e !model.hasSubmittedSession);"},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    return nonSubmitters.length \u003e 0"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u0026\u0026 nonSubmitters.every((model: InstructorListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":109,"Nicolascwy":11}},{"path":"src/web/app/components/sessions-table/sessions-table.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"sessionsTableRowModels.length \u003e 0; else noSessionMessage\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003ctable id\u003d\"sessions-table\" class\u003d\"table table-responsive-lg table-striped table-bordered margin-bottom-0\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cthead\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003ctr [ngClass]\u003d\"{ \u0027bg-primary text-white\u0027: headerColorScheme \u003d\u003d\u003d SessionsTableHeaderColorScheme.BLUE }\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003cth id\u003d\"sort-course-id\" class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.COURSE_ID)\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.COURSE_ID)\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          Course ID"},{"lineNumber":8,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cth id\u003d\"sort-session-name\" class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.SESSION_NAME)\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          Session Name"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_NAME \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_NAME \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.SESSION_START_DATE)\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.START_DATE)\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          Start Date"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_START_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_START_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.SESSION_END_DATE)\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.END_DATE)\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          End Date"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_END_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_END_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cth\u003eSubmissions\u003c/th\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cth\u003eResponses\u003c/th\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Number of students submitted / Class size\" container\u003d\"body\"\u003e\u003cspan \u003eResponse Rate\u003c/span\u003e\u003c/th\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/thead\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003ctbody\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003ctr *ngFor\u003d\"let sessionsTableRowModel of sessionsTableRowModels; let idx \u003d index\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003ctd class\u003d\"text-break\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.COURSE_ID)\"\u003e{{ sessionsTableRowModel.feedbackSession.courseId }}\u003c/td\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003ctd class\u003d\"text-break\"\u003e{{ sessionsTableRowModel.feedbackSession.feedbackSessionName }}\u003c/td\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003ctd *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.START_DATE)\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.submissionStartTimestamp | formatDateDetail: sessionsTableRowModel.feedbackSession.timeZone\" \u003e{{ sessionsTableRowModel.feedbackSession.submissionStartTimestamp | formatDateBrief: sessionsTableRowModel.feedbackSession.timeZone }}\u003c/span\u003e\u003c/td\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003ctd *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.END_DATE)\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.submissionEndTimestamp | formatDateDetail: sessionsTableRowModel.feedbackSession.timeZone\"\u003e{{ sessionsTableRowModel.feedbackSession.submissionEndTimestamp | formatDateBrief: sessionsTableRowModel.feedbackSession.timeZone }}\u003c/span\u003e\u003c/td\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003ctd\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus | submissionStatusTooltip\"\u003e{{ sessionsTableRowModel.feedbackSession.submissionStatus | submissionStatusName }}\u003c/span\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003ctd\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.publishStatus | publishStatusTooltip\"\u003e{{ sessionsTableRowModel.feedbackSession.publishStatus | publishStatusName }}\u003c/span\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003ctd\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003ca id\u003d\"show-response-rate-{{ idx }}\" href\u003d\"#\" *ngIf\u003d\"sessionsTableRowModel.responseRate.length \u003d\u003d\u003d 0 \u0026\u0026 !sessionsTableRowModel.isLoadingResponseRate\" (click)\u003d\"loadResponseRateEvent.emit(idx); $event.preventDefault()\"\u003eShow\u003c/a\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"response-rate-{{ idx }}\" *ngIf\u003d\"sessionsTableRowModel.responseRate.length !\u003d\u003d 0\"\u003e{{ sessionsTableRowModel.responseRate }}\u003c/div\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003ctm-ajax-loading *ngIf\u003d\"sessionsTableRowModel.isLoadingResponseRate\" [useBlueSpinner]\u003d\"true\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003ctd class\u003d\"actions-cell\"\u003e"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"d-flex\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003ca *ngIf\u003d\"sessionsTableRowModel.instructorPrivilege.canModifySession; else editSessionBtn\" tmRouterLink\u003d\"/web/instructor/sessions/edit\" [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName, editingMode: true }\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003cng-container *ngTemplateOutlet\u003d\"editSessionBtn\"\u003e\u003c/ng-container\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cng-template #editSessionBtn\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canModifySession\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                Edit"},{"lineNumber":72,"author":{"gitId":"-"},"content":"              \u003c/button\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-soft-delete-{{ idx }}\" type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" (click)\u003d\"moveSessionToRecycleBin(idx)\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canModifySession\"\u003eDelete\u003c/button\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-copy-{{ idx }}\" type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" ngbTooltip\u003d\"Copy feedback session details\" (click)\u003d\"copySession(idx)\"\u003eCopy\u003c/button\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003ca *ngIf\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN \u0026\u0026 sessionsTableRowModel.instructorPrivilege.canSubmitSessionInSections; else submitBtn\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"              tmRouterLink\u003d\"/web/instructor/sessions/submission\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"              [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName }\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003cng-container *ngTemplateOutlet\u003d\"submitBtn\"\u003e\u003c/ng-container\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \u003cng-template #submitBtn\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" ngbTooltip\u003d\"Start submitting feedback\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus !\u003d\u003d FeedbackSessionSubmissionStatus.OPEN"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        || !sessionsTableRowModel.instructorPrivilege.canSubmitSessionInSections\" (click)\u003d\"submitSessionAsInstructorEvent.emit(idx)\"\u003eSubmit\u003c/button\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cdiv ngbDropdown class\u003d\"d-inline-block\" container\u003d\"body\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"btn-results-{{ idx }}\" class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003eResults\u003c/button\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn dropdown-item clickable\" [ngClass]\u003d\"{disabled: !sessionsTableRowModel.instructorPrivilege.canViewSessionInSections}\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        tmRouterLink\u003d\"/web/instructor/sessions/result\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName }\"\u003eView Results (from/to me)\u003c/a\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn dropdown-item clickable\" [ngClass]\u003d\"{disabled: !sessionsTableRowModel.instructorPrivilege.canViewSessionInSections}\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                        tmRouterLink\u003d\"/web/instructor/sessions/report\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                        [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName }\"\u003eView Results (course-wide)\u003c/a\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-unpublish-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" ngbTooltip\u003d\"Make responses no longer visible\" placement\u003d\"left\" container\u003d\"body\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        *ngIf\u003d\"![FeedbackSessionSubmissionStatus.NOT_VISIBLE, FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN].includes(sessionsTableRowModel.feedbackSession.submissionStatus)"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                          \u0026\u0026 sessionsTableRowModel.feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED; else publishButton\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canModifySession\" (click)\u003d\"unpublishSession(idx)\"\u003eUnpublish Results\u003c/button\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u003cng-template #publishButton\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"btn-publish-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" [disabled]\u003d\"[FeedbackSessionSubmissionStatus.NOT_VISIBLE, FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN].includes(sessionsTableRowModel.feedbackSession.submissionStatus)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    || sessionsTableRowModel.feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED || !sessionsTableRowModel.instructorPrivilege.canModifySession\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                          ngbTooltip\u003d\"Make session responses available for viewing\" placement\u003d\"left\" container\u003d\"body\" (click)\u003d\"publishSession(idx)\"\u003ePublish Results\u003c/button\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u003c/ng-template\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-resend-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" *ngIf\u003d\"sessionsTableRowModel.feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED\" (click)\u003d\"remindResultsLinkToStudent(idx)\"\u003eResend link to view results\u003c/button\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-download-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" (click)\u003d\"downloadSessionResults(idx)\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canViewSessionInSections\"\u003eDownload Results\u003c/button\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003cdiv ngbDropdown class\u003d\"d-inline-block\" ngbTooltip\u003d\"Send e-mails to remind students and instructors who have not submitted their feedbacks to do so\"\u003e"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":"              \u003cbutton ngbDropdownToggle id\u003d\"btn-remind-{{ idx }}\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus !\u003d\u003d FeedbackSessionSubmissionStatus.OPEN ||"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                            !sessionsTableRowModel.instructorPrivilege.canModifySession\"\u003e"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"                \u003cdiv class\u003d\"d-inline-flex\"\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                  \u003cspan\u003eRemind\u003c/span\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                  \u003cdiv class\u003d\"padding-left-7px\"\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    \u003ctm-ajax-loading [color]\u003d\"\u0027#000000\u0027\" *ngIf\u003d\"isSendReminderLoading \u0026\u0026 rowClicked \u003d\u003d\u003d idx\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                  \u003c/div\u003e"},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":"                \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              \u003c/button\u003e"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"              \u003cdiv ngbDropdownMenu\u003e"},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":"                \u003cbutton id\u003d\"btn-remind-all-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" (click)\u003d\"sendRemindersToAllNonSubmitters(idx); setRowClicked(idx)\"\u003eRemind all non-submitters\u003c/button\u003e"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"                \u003cbutton id\u003d\"btn-remind-selected-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" (click)\u003d\"sendRemindersToSelectedNonSubmitters(idx); setRowClicked(idx)\" \u003eSelect non-submitters to remind\u003c/button\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":125,"author":{"gitId":"Nicolascwy"},"content":"            \u003c/div\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003c/tbody\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    \u003c/table\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cng-template #noSessionMessage\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"no-session-message\"\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    There are no feedback sessions in this course."},{"lineNumber":137,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/ng-template\u003e"}],"authorContributionMap":{"-":130,"Nicolascwy":8}},{"path":"src/web/app/components/sessions-table/sessions-table.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Course, FeedbackSessionPublishStatus, FeedbackSessionSubmissionStatus } from \u0027../../../types/api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { CopySessionModalResult } from \u0027../copy-session-modal/copy-session-modal-model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CopySessionModalComponent } from \u0027../copy-session-modal/copy-session-modal.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../simple-modal/simple-modal-type\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  CopySessionResult,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  SessionsTableColumn,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  SessionsTableRowModel,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"} from \u0027./sessions-table-model\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A table to display a list of feedback sessions."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  selector: \u0027tm-sessions-table\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./sessions-table.component.html\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./sessions-table.component.scss\u0027],"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class SessionsTableComponent {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  SortOrder: typeof SortOrder \u003d SortOrder;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus: typeof FeedbackSessionPublishStatus \u003d FeedbackSessionPublishStatus;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  // variable"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  rowClicked: number \u003d -1;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  sessionsTableRowModels: SessionsTableRowModel[] \u003d [];"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  courseCandidates: Course[] \u003d [];"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  columnsToShow: SessionsTableColumn[] \u003d [SessionsTableColumn.COURSE_ID];"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortBy: SortBy \u003d SortBy.NONE;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  headerColorScheme: SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme.BLUE;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  isSendReminderLoading: boolean \u003d false;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  sortSessionsTableRowModelsEvent: EventEmitter\u003cSortBy\u003e \u003d new EventEmitter();"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  loadResponseRateEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  moveSessionToRecycleBinEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  copySessionEvent: EventEmitter\u003cCopySessionResult\u003e \u003d new EventEmitter();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  submitSessionAsInstructorEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  publishSessionEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  unpublishSessionEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  resendResultsLinkToStudentsEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  downloadSessionResultsEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":"  @Output()"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToAllNonSubmittersEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"  @Output()"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToSelectedNonSubmittersEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  constructor(private ngbModal: NgbModal, private simpleModalService: SimpleModalService) { }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * Sorts the list of feedback session row."},{"lineNumber":95,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  sortSessionsTableRowModels(by: SortBy): void {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.sortSessionsTableRowModelsEvent.emit(by);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * Moves the feedback session to the recycle bin."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  moveSessionToRecycleBin(rowIndex: number): void {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d \u0027Session will be moved to the recycle bin. \u0027"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        + \u0027This action can be reverted by going to the \"Sessions\" tab and restoring the desired session(s).\u0027;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":107,"author":{"gitId":"-"},"content":"        `Delete session \u003cstrong\u003e${this.sessionsTableRowModels[rowIndex].feedbackSession.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, modalContent);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      this.moveSessionToRecycleBinEvent.emit(rowIndex);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Copies the feedback session."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  copySession(rowIndex: number): void {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(CopySessionModalComponent);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.newFeedbackSessionName \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.courseCandidates \u003d this.courseCandidates;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.sessionToCopyCourseId \u003d model.feedbackSession.courseId;"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      this.copySessionEvent.emit({"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ...result,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        sessionToCopyRowIndex: rowIndex,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   * Publishes a feedback session."},{"lineNumber":134,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  publishSession(rowIndex: number): void {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":139,"author":{"gitId":"-"},"content":"        `Publish session \u003cstrong\u003e${model.feedbackSession.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u0027An email will be sent to students to inform them that the responses are ready for viewing.\u0027);"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      this.publishSessionEvent.emit(rowIndex);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   * Unpublishes a feedback session."},{"lineNumber":150,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  unpublishSession(rowIndex: number): void {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `An email will be sent to students to inform them that the session has been unpublished"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        and the session responses will no longer be viewable by students.`;"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":157,"author":{"gitId":"-"},"content":"        `Unpublish session \u003cstrong\u003e${model.feedbackSession.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, modalContent);"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      this.unpublishSessionEvent.emit(rowIndex);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   * Resend links to students to view results."},{"lineNumber":167,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  remindResultsLinkToStudent(rowIndex: number): void {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    this.resendResultsLinkToStudentsEvent.emit(rowIndex);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":173,"author":{"gitId":"Nicolascwy"},"content":"   * Sends e-mails to remind all students and instructors who have not submitted their feedback."},{"lineNumber":174,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":175,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToAllNonSubmitters(rowIndex: number): void {"},{"lineNumber":176,"author":{"gitId":"Nicolascwy"},"content":"    this.sendRemindersToAllNonSubmittersEvent.emit(rowIndex);"},{"lineNumber":177,"author":{"gitId":"Nicolascwy"},"content":"  }"},{"lineNumber":178,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":179,"author":{"gitId":"Nicolascwy"},"content":"  /**"},{"lineNumber":180,"author":{"gitId":"Nicolascwy"},"content":"   * Sends e-mails to remind selected students and instructors who have not submitted their feedback."},{"lineNumber":181,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":182,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToSelectedNonSubmitters(rowIndex: number): void {"},{"lineNumber":183,"author":{"gitId":"Nicolascwy"},"content":"    this.sendRemindersToSelectedNonSubmittersEvent.emit(rowIndex);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   * Triggers the download of session results as a CSV file."},{"lineNumber":188,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  downloadSessionResults(rowIndex: number): void {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    this.downloadSessionResultsEvent.emit(rowIndex);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   * Set row number of button clicked."},{"lineNumber":195,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  setRowClicked(rowIndex: number): void {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    this.rowClicked \u003d rowIndex;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":185,"Nicolascwy":15}},{"path":"src/web/app/components/sortable-table/sortable-table.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnChanges, OnInit, Type } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Column data for sortable table"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export interface ColumnData {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  header: string;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  headerToolTip?: string;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  sortBy?: SortBy; // optional if the column is not sortable"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Data provided for each table cell"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Priority of display"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * 1. customComponent"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * 2. displayValue"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * 3. value"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export interface SortableTableCellData {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  value?: any; // Optional value used for sorting with sortBy provided in ColumnData"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  displayValue?: string; // Raw string to be display in the cell"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  style?: string; // Optional value used to set style of data"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  customComponent?: {"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    component: Type\u003cany\u003e,"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    componentData: Record\u003cstring, any\u003e, // @Input values for component"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Displays a sortable table, sorting by clicking on the header"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Optional sortBy option provided for each column"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Columns and rows provided must be aligned"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Remember to register new dynamic components using the withComponents method under sortable-table-module"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  selector: \u0027tm-sortable-table\u0027,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./sortable-table.component.html\u0027,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./sortable-table.component.scss\u0027],"},{"lineNumber":41,"author":{"gitId":"-"},"content":"})"},{"lineNumber":42,"author":{"gitId":"-"},"content":"export class SortableTableComponent implements OnInit, OnChanges {"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  SortOrder: typeof SortOrder \u003d SortOrder;"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  columns: ColumnData[] \u003d [];"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  rows: SortableTableCellData[][] \u003d [];"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  initialSortBy: SortBy \u003d SortBy.NONE;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  columnToSortBy: string \u003d \u0027\u0027;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  sortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  tableRows: SortableTableCellData[][] \u003d [];"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  constructor(private tableComparatorService: TableComparatorService) { }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.tableRows \u003d this.rows.slice(); // Shallow clone to avoid reordering original array"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.initialSort(); // Performs an initial sort on the table"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  ngOnChanges(): void {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.tableRows \u003d this.rows.slice(); // Shallow clone to avoid reordering original array"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.sortRows();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  onClickHeader(columnHeader: string): void {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    this.sortOrder \u003d this.columnToSortBy \u003d\u003d\u003d columnHeader \u0026\u0026 this.sortOrder \u003d\u003d\u003d SortOrder.ASC"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ? SortOrder.DESC : SortOrder.ASC;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    this.columnToSortBy \u003d columnHeader;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    this.sortRows();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  sortRows(): void {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    if (!this.columnToSortBy) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    const columnIndex: number \u003d this.columns.findIndex("},{"lineNumber":84,"author":{"gitId":"-"},"content":"        (column: ColumnData) \u003d\u003e column.header \u003d\u003d\u003d this.columnToSortBy);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    if (columnIndex \u003c 0) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const sortBy: SortBy | undefined \u003d this.columns[columnIndex].sortBy;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    if (!sortBy) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    this.tableRows.sort((row1: any[], row2: any[]) \u003d\u003e {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare("},{"lineNumber":95,"author":{"gitId":"-"},"content":"          sortBy, this.sortOrder, String(row1[columnIndex].value), String(row2[columnIndex].value));"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   * Sorts the table with an initial SortBy"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  initialSort(): void {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    const indexOfColumnToSort: number \u003d"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.columns.findIndex((column: ColumnData) \u003d\u003e column.sortBy \u003d\u003d\u003d this.initialSortBy);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    if (indexOfColumnToSort \u003c 0) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    this.columnToSortBy \u003d this.columns[indexOfColumnToSort].header;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    this.sortRows();"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  getStyle(cellData: SortableTableCellData): string | undefined {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    return cellData.style;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":114,"samuelfangjw":2}},{"path":"src/web/app/components/teammates-common/enum-to-array.pipe.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Pipe, PipeTransform } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Pipe to handle the transformation of an enum to an array of all types it has."},{"lineNumber":5,"author":{"gitId":"-"},"content":" *"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" * \u003cp\u003eAssumes the enum is string in runtime."},{"lineNumber":7,"author":{"gitId":"-"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Pipe({"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  name: \u0027enumToArray\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"})"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export class EnumToArrayPipe implements PipeTransform {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   * Transforms enum to an array of all types it has."},{"lineNumber":15,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  transform(enumObj: any): any[] {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    return Object.keys(enumObj).map((s: string) \u003d\u003e enumObj[s]);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":19,"samuelfangjw":1}},{"path":"src/web/app/components/timepicker/timepicker.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Time picker with fixed time to pick."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  selector: \u0027tm-timepicker\u0027,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./timepicker.component.html\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./timepicker.component.scss\u0027],"},{"lineNumber":10,"author":{"gitId":"-"},"content":"})"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export class TimepickerComponent {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  isDisabled: boolean \u003d false;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  time: TimeFormat \u003d { hour: 0, minute: 0 };"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  timeChange: EventEmitter\u003cTimeFormat\u003e \u003d new EventEmitter();"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * Triggers time change event."},{"lineNumber":24,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  triggerTimeChange(newTime: TimeFormat): void {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    this.timeChange.emit(newTime);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * Helper function to create a range."},{"lineNumber":31,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  range(start: number, end: number): number[] {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    const arr: number[] \u003d [];"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    for (let i: number \u003d start; i \u003c end; i +\u003d 1) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      arr.push(i);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    return arr;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * Compares two TIMEs."},{"lineNumber":42,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * \u003cp\u003eChecks whether they are equal or not."},{"lineNumber":44,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  timeCompareFn(t1: TimeFormat, t2: TimeFormat): boolean {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    return t1 \u0026\u0026 t2 \u0026\u0026 t1.hour \u003d\u003d\u003d t2.hour \u0026\u0026 t1.minute \u003d\u003d\u003d t2.minute;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * Checks whether the time is in the fixed list to select."},{"lineNumber":51,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  isInFixedList(time: TimeFormat): boolean {"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    return (time.hour \u003e\u003d 1 \u0026\u0026 time.hour \u003c\u003d 23 \u0026\u0026 time.minute \u003d\u003d\u003d 0)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        || (time.hour \u003d\u003d\u003d 23 \u0026\u0026 time.minute \u003d\u003d\u003d 59);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Formats number {@code i} and pads leading zeros if its digits are less than {@code n}."},{"lineNumber":59,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * \u003cp\u003ee.g. n \u003d 2, i \u003d 1 \u003d\u003e \"01\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  addLeadingZeros(n: number, i: number): string {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    return (\u00270\u0027.repeat(n) + i).slice(-n);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":68,"author":{"gitId":"-"},"content":" * The output format of the time picker."},{"lineNumber":69,"author":{"gitId":"-"},"content":" */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"export interface TimeFormat {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  hour: number;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  minute: number;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":72,"samuelfangjw":1}},{"path":"src/web/app/components/wheel-disabler/wheel-disabler.directive.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Directive, HostListener } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":" * Directive for loading spinner component"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"@Directive({"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"  selector: \u0027[tmDisableWheel]\u0027,"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"export class WheelDisablerDirective {"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"  @HostListener(\u0027wheel\u0027, [\u0027$event\u0027])"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  onWheel(e: Event): void {"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"    e.preventDefault();"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":15,"-":1}},{"path":"src/web/app/components/wheel-disabler/wheel-disabler.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { WheelDisablerDirective } from \u0027./wheel-disabler.directive\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" * Module for progress bar used to show download progress."},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"@NgModule({"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  declarations: [WheelDisablerDirective],"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  imports: [],"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"  exports: ["},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"    WheelDisablerDirective,"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  ],"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"export class WheelDisablerModule { }"}],"authorContributionMap":{"fsgmhoward":14}},{"path":"src/web/app/pages-admin/admin-home-page/admin-home-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light top-padded\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cdiv\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cstrong\u003eAdding Multiple Instructors\u003c/strong\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cp class\u003d\"text-muted\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Add Instructor Details in the format: Name | Email | Institution"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003ctextarea class\u003d\"form-control\" id\u003d\"instructor-details-single-line\" [(ngModel)]\u003d\"instructorDetails\"\u003e\u003c/textarea\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"top-padded\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary\" id\u003d\"add-instructor-single-line\" (click)\u003d\"validateAndAddInstructorDetails()\"\u003eAdd Instructors\u003c/button\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light top-padded\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cdiv\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstrong\u003eAdding a Single Instructor\u003c/strong\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"top-padded\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstrong\u003eName:\u003c/strong\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cinput class\u003d\"form-control\" type\u003d\"text\" id\u003d\"instructor-name\" [(ngModel)]\u003d\"instructorName\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"top-padded\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cstrong\u003eEmail: \u003c/strong\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cinput class\u003d\"form-control\" type\u003d\"text\" id\u003d\"instructor-email\" [(ngModel)]\u003d\"instructorEmail\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"top-padded\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cstrong\u003eInstitution: \u003c/strong\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cinput class\u003d\"form-control\" type\u003d\"text\" id\u003d\"instructor-institution\" [(ngModel)]\u003d\"instructorInstitution\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"top-padded\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary\" id\u003d\"add-instructor\" (click)\u003d\"validateAndAddInstructorDetail()\"\u003eAdd Instructor\u003c/button\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light top-padded\" *ngIf\u003d\"instructorsConsolidated.length\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-header bg-primary text-white\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003cstrong\u003eResult\u003c/strong\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"table-responsive\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003ctable class\u003d\"table table-striped table-hover\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003cthead\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003ctr\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cth\u003eName\u003c/th\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cth\u003eEmail\u003c/th\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cth\u003eInstitution\u003c/th\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cth\u003eAction\u003c/th\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cth\u003eStatus\u003c/th\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003cth\u003eMessage\u003c/th\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003c/thead\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003ctbody\u003e"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"          \u003ctr tm-new-instructor-data-row"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"              *ngFor\u003d\"let instructor of instructorsConsolidated; let i \u003d index\""},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"              [instructor]\u003d\"instructor\""},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"              [index]\u003d\"i\""},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"              [isAddDisabled]\u003d\"activeRequests \u003e 0\""},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"              (addInstructorEvent)\u003d\"addInstructor(i)\""},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"              (removeInstructorEvent)\u003d\"removeInstructor(i)\""},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"              (toggleEditModeEvent)\u003d\"setInstructorRowEditModeEnabled(i, $event)\""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"              (showRegisteredInstructorModalEvent)\u003d\"showRegisteredInstructorModal(i)\""},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"          \u003e\u003c/tr\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/tbody\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/table\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary top-padded\" (click)\u003d\"addAllInstructors()\" id\u003d\"add-all-instructors\" [disabled]\u003d\"activeRequests \u003e 0 || isAddingInstructors\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003ctm-ajax-loading *ngIf\u003d\"isAddingInstructors\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Add All Instructors"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"\u003cng-template #registeredInstructorModal\u003e"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"  \u003cdiv *tmIsLoading\u003d\"isRegisteredInstructorModalLoading\"\u003e"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    \u003cp\u003e"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"      You may \u003ca id\u003d\"reset-account-request-link\" href\u003d\"javascript:;\" (click)\u003d\"resetAccountRequest(registeredInstructorIndex)\"\u003ereset\u003c/a\u003e"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"      this account request. Alternatively, reset the Google account or use the Google ID migration script."},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/p\u003e"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    \u003cp *ngIf\u003d\"!registeredInstructorAccountData.length\"\u003e"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"      No accounts found for instructor associated with email"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"      \u003cb\u003e{{ instructorsConsolidated[registeredInstructorIndex].email }}\u003c/b\u003e."},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/p\u003e"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    \u003cp *ngIf\u003d\"registeredInstructorAccountData.length\"\u003e"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"      The following {{ registeredInstructorAccountData.length }} account(s) are associated with the email"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"      \u003cb\u003e{{ instructorsConsolidated[registeredInstructorIndex].email }}\u003c/b\u003e:"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/p\u003e"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    \u003cdiv class\u003d\"card\" *ngFor\u003d\"let account of registeredInstructorAccountData\"\u003e"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"      \u003ca href\u003d\"{{ account.manageAccountLink }}\" target\u003d\"_blank\"\u003e\u003ch5 class\u003d\"card-header\"\u003e{{ account.googleId }}\u003c/h5\u003e\u003c/a\u003e"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        \u003ch6 *ngIf\u003d\"!account.instructorCourses.length\"\u003eNo instructor courses found for this account.\u003c/h6\u003e"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        \u003cdiv *ngIf\u003d\"account.instructorCourses.length\"\u003e"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"          \u003ch6 class\u003d\"card-title\"\u003eInstructor for the following \u003cb\u003e{{ account.instructorCourses.length }}\u003c/b\u003e courses:\u003c/h6\u003e"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"          \u003ctable class\u003d\"table table-striped\"\u003e"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"            \u003cthead\u003e"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"              \u003ctr\u003e"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"                \u003cth\u003eCourse ID\u003c/th\u003e"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"                \u003cth\u003eCourse Name\u003c/th\u003e"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"                \u003cth\u003eInstitute\u003c/th\u003e"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/tr\u003e"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/thead\u003e"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctbody\u003e"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"              \u003ctr *ngFor\u003d\"let course of account.instructorCourses\"\u003e"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"                \u003ctd class\u003d\"text-break\"\u003e{{ course.courseId }}\u003c/td\u003e"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"                \u003ctd class\u003d\"text-break\"\u003e{{ course.courseName }}\u003c/td\u003e"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"                \u003ctd class\u003d\"text-break\"\u003e{{ course.institute }}\u003c/td\u003e"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/tr\u003e"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/tbody\u003e"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/table\u003e"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/div\u003e"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        \u003ch6 class\u003d\"mt-3\" *ngIf\u003d\"!account.studentCourses.length\"\u003eNo student courses found for this account.\u003c/h6\u003e"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        \u003cdiv *ngIf\u003d\"account.studentCourses.length\"\u003e"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"          \u003ch6 class\u003d\"card-title mt-3\"\u003eStudent for the following \u003cb\u003e{{ account.studentCourses.length }}\u003c/b\u003e courses:\u003c/h6\u003e"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"          \u003ctable class\u003d\"table table-striped\"\u003e"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"            \u003cthead\u003e"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"              \u003ctr\u003e"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"                \u003cth\u003eCourse ID\u003c/th\u003e"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"                \u003cth\u003eCourse Name\u003c/th\u003e"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"                \u003cth\u003eInstitute\u003c/th\u003e"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/tr\u003e"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/thead\u003e"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctbody\u003e"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"              \u003ctr *ngFor\u003d\"let course of account.studentCourses\"\u003e"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"                \u003ctd class\u003d\"text-break\"\u003e{{ course.courseId }}\u003c/td\u003e"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"                \u003ctd class\u003d\"text-break\"\u003e{{ course.courseName }}\u003c/td\u003e"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"                \u003ctd class\u003d\"text-break\"\u003e{{ course.institute }}\u003c/td\u003e"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/tr\u003e"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/tbody\u003e"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/table\u003e"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/div\u003e"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/div\u003e"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/div\u003e"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/div\u003e"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"\u003c/ng-template\u003e"}],"authorContributionMap":{"jayasting98":9,"-":70,"samuelfangjw":62}},{"path":"src/web/app/pages-admin/admin-home-page/admin-home-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AccountService } from \u0027../../../services/account.service\u0027;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import { LinkService } from \u0027../../../services/link.service\u0027;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import { createMockNgbModalRef } from \u0027../../../test-helpers/mock-ngb-modal-ref\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { AdminHomePageComponent } from \u0027./admin-home-page.component\u0027;"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"import { InstructorData } from \u0027./instructor-data\u0027;"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"import { NewInstructorDataRowComponent } from \u0027./new-instructor-data-row/new-instructor-data-row.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"describe(\u0027AdminHomePageComponent\u0027, () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  let component: AdminHomePageComponent;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cAdminHomePageComponent\u003e;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"  let accountService: AccountService;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"  let courseService: CourseService;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"  let linkService: LinkService;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"  let simpleModalService: SimpleModalService;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"      declarations: ["},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"        AdminHomePageComponent,"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"        NewInstructorDataRowComponent,"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"      ],"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"      providers: ["},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        AccountService,"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        CourseService,"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        SimpleModalService,"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        StatusMessageService,"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        LinkService,"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      ],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(AdminHomePageComponent);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    accountService \u003d TestBed.inject(AccountService);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    simpleModalService \u003d TestBed.inject(SimpleModalService);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    linkService \u003d TestBed.inject(LinkService);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  it(\u0027should add one instructor to list if all fields are filled\u0027, () \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    component.instructorName \u003d \u0027Instructor Name\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    component.instructorEmail \u003d \u0027instructor@example.com\u0027;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    component.instructorInstitution \u003d \u0027Instructor Institution\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor\u0027);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    expect(component.instructorName).toEqual(\u0027\u0027);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    expect(component.instructorEmail).toEqual(\u0027\u0027);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    expect(component.instructorInstitution).toEqual(\u0027\u0027);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(1);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0]).toEqual({"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      email: \u0027instructor@example.com\u0027,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      institution: \u0027Instructor Institution\u0027,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      name: \u0027Instructor Name\u0027,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"      isCurrentlyBeingEdited: false,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  it(\u0027should not add one instructor to list if some fields are empty\u0027, () \u003d\u003e {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    component.instructorName \u003d \u0027Instructor Name\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    component.instructorEmail \u003d \u0027\u0027;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    component.instructorInstitution \u003d \u0027Instructor Institution\u0027;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor\u0027);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    expect(component.instructorName).toEqual(\u0027Instructor Name\u0027);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    expect(component.instructorEmail).toEqual(\u0027\u0027);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    expect(component.instructorInstitution).toEqual(\u0027Instructor Institution\u0027);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(0);"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    component.instructorName \u003d \u0027\u0027;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    component.instructorEmail \u003d \u0027instructor@example.com\u0027;"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    expect(component.instructorName).toEqual(\u0027\u0027);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    expect(component.instructorEmail).toEqual(\u0027instructor@example.com\u0027);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    expect(component.instructorInstitution).toEqual(\u0027Instructor Institution\u0027);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(0);"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    component.instructorName \u003d \u0027Instructor Name\u0027;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    component.instructorInstitution \u003d \u0027\u0027;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    expect(component.instructorName).toEqual(\u0027Instructor Name\u0027);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    expect(component.instructorEmail).toEqual(\u0027instructor@example.com\u0027);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    expect(component.instructorInstitution).toEqual(\u0027\u0027);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(0);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  it(\u0027should only add valid instructor details in the single line field\u0027, () \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    component.instructorDetails \u003d ["},{"lineNumber":121,"author":{"gitId":"-"},"content":"        \u0027Instructor A | instructora@example.com | Institution A\u0027,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u0027Instructor B | instructorb@example.com\u0027,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        \u0027Instructor C | | instructorc@example.com\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        \u0027Instructor D | instructord@example.com | Institution D\u0027,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u0027| instructore@example.com | Institution E\u0027,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ].join(\u0027\\n\u0027);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor-single-line\u0027);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    expect(component.instructorDetails).toEqual(["},{"lineNumber":133,"author":{"gitId":"-"},"content":"      \u0027Instructor B | instructorb@example.com\u0027,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u0027Instructor C | | instructorc@example.com\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u0027| instructore@example.com | Institution E\u0027,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    ].join(\u0027\\r\\n\u0027));"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(2);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0]).toEqual({"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      email: \u0027instructora@example.com\u0027,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      institution: \u0027Institution A\u0027,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      name: \u0027Instructor A\u0027,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":143,"author":{"gitId":"jayasting98"},"content":"      isCurrentlyBeingEdited: false,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[1]).toEqual({"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      email: \u0027instructord@example.com\u0027,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      institution: \u0027Institution D\u0027,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      name: \u0027Instructor D\u0027,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":150,"author":{"gitId":"jayasting98"},"content":"      isCurrentlyBeingEdited: false,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should remove instructor out of queue if REMOVE is requested\u0027, () \u003d\u003e {"},{"lineNumber":155,"author":{"gitId":"jayasting98"},"content":"    const instructorData: InstructorData \u003d {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      name: \u0027Instructor A\u0027,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      email: \u0027instructora@example.com\u0027,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      institution: \u0027Sample Institution A\u0027,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":160,"author":{"gitId":"jayasting98"},"content":"      isCurrentlyBeingEdited: false,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      message: \u0027This should not be displayed\u0027,"},{"lineNumber":163,"author":{"gitId":"jayasting98"},"content":"    };"},{"lineNumber":164,"author":{"gitId":"jayasting98"},"content":"    component.instructorsConsolidated \u003d [instructorData];"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"jayasting98"},"content":"    const index: number \u003d 0;"},{"lineNumber":168,"author":{"gitId":"jayasting98"},"content":"    component.removeInstructor(index);"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructorsConsolidated.includes(instructorData)).toBeFalsy();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(0);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"  it(\u0027should add instructor and update field when successful\u0027, () \u003d\u003e {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":176,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":181,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(accountService, \u0027createAccountRequest\u0027).mockReturnValue(of({"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      joinLink: \u0027http://localhost:4200/web/join\u0027,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"jayasting98"},"content":"    const index: number \u003d 0;"},{"lineNumber":192,"author":{"gitId":"jayasting98"},"content":"    component.addInstructor(index);"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructorsConsolidated[index].status).toEqual(\u0027SUCCESS\u0027);"},{"lineNumber":195,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructorsConsolidated[index].joinLink).toEqual(\u0027http://localhost:4200/web/join\u0027);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    expect(component.activeRequests).toEqual(0);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should not add instructor and update field during failure\u0027, () \u003d\u003e {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":201,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":206,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(accountService, \u0027createAccountRequest\u0027).mockReturnValue(throwError({"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      error: {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        message: \u0027This is the error message\u0027,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"jayasting98"},"content":"    const index: number \u003d 0;"},{"lineNumber":219,"author":{"gitId":"jayasting98"},"content":"    component.addInstructor(index);"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructorsConsolidated[index].status).toEqual(\u0027FAIL\u0027);"},{"lineNumber":222,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructorsConsolidated[index].message).toEqual(\u0027This is the error message\u0027);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    expect(component.activeRequests).toEqual(0);"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should enter edit mode for only the specified instructor\u0027, () \u003d\u003e {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":228,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":233,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":237,"author":{"gitId":"jayasting98"},"content":"      {"},{"lineNumber":238,"author":{"gitId":"jayasting98"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":239,"author":{"gitId":"jayasting98"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":240,"author":{"gitId":"jayasting98"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":241,"author":{"gitId":"jayasting98"},"content":"        status: \u0027SUCCESS\u0027,"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 200,"},{"lineNumber":243,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":244,"author":{"gitId":"jayasting98"},"content":"        joinLink: \u0027http://localhost:4200/web/join\u0027,"},{"lineNumber":245,"author":{"gitId":"jayasting98"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":246,"author":{"gitId":"jayasting98"},"content":"      },"},{"lineNumber":247,"author":{"gitId":"jayasting98"},"content":"      {"},{"lineNumber":248,"author":{"gitId":"jayasting98"},"content":"        name: \u0027Instructor C\u0027,"},{"lineNumber":249,"author":{"gitId":"jayasting98"},"content":"        email: \u0027instructorc@example.com\u0027,"},{"lineNumber":250,"author":{"gitId":"jayasting98"},"content":"        institution: \u0027Sample Institution C\u0027,"},{"lineNumber":251,"author":{"gitId":"jayasting98"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 400,"},{"lineNumber":253,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":254,"author":{"gitId":"jayasting98"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":255,"author":{"gitId":"jayasting98"},"content":"        message: \u0027The instructor cannot be added for some reason\u0027,"},{"lineNumber":256,"author":{"gitId":"jayasting98"},"content":"      },"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":258,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":259,"author":{"gitId":"jayasting98"},"content":"    const index: number \u003d 2;"},{"lineNumber":260,"author":{"gitId":"jayasting98"},"content":"    component.setInstructorRowEditModeEnabled(index, true);"},{"lineNumber":261,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":262,"author":{"gitId":"jayasting98"},"content":"    for (let i: number \u003d 0; i \u003c component.instructorsConsolidated.length; i +\u003d 1) {"},{"lineNumber":263,"author":{"gitId":"jayasting98"},"content":"      expect(component.instructorsConsolidated[i].isCurrentlyBeingEdited).toEqual(i \u003d\u003d\u003d index);"},{"lineNumber":264,"author":{"gitId":"jayasting98"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":266,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":267,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should exit edit mode for only the specified instructor\u0027, () \u003d\u003e {"},{"lineNumber":268,"author":{"gitId":"jayasting98"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":269,"author":{"gitId":"jayasting98"},"content":"      {"},{"lineNumber":270,"author":{"gitId":"jayasting98"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":271,"author":{"gitId":"jayasting98"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":272,"author":{"gitId":"jayasting98"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":273,"author":{"gitId":"jayasting98"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":274,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":275,"author":{"gitId":"jayasting98"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":276,"author":{"gitId":"jayasting98"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":278,"author":{"gitId":"jayasting98"},"content":"      {"},{"lineNumber":279,"author":{"gitId":"jayasting98"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":280,"author":{"gitId":"jayasting98"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":281,"author":{"gitId":"jayasting98"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":282,"author":{"gitId":"jayasting98"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":283,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":284,"author":{"gitId":"jayasting98"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":285,"author":{"gitId":"jayasting98"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":286,"author":{"gitId":"jayasting98"},"content":"      },"},{"lineNumber":287,"author":{"gitId":"jayasting98"},"content":"      {"},{"lineNumber":288,"author":{"gitId":"jayasting98"},"content":"        name: \u0027Instructor C\u0027,"},{"lineNumber":289,"author":{"gitId":"jayasting98"},"content":"        email: \u0027instructorc@example.com\u0027,"},{"lineNumber":290,"author":{"gitId":"jayasting98"},"content":"        institution: \u0027Sample Institution C\u0027,"},{"lineNumber":291,"author":{"gitId":"jayasting98"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 400,"},{"lineNumber":293,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":294,"author":{"gitId":"jayasting98"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":295,"author":{"gitId":"jayasting98"},"content":"        message: \u0027The instructor cannot be added for some reason\u0027,"},{"lineNumber":296,"author":{"gitId":"jayasting98"},"content":"      },"},{"lineNumber":297,"author":{"gitId":"jayasting98"},"content":"    ];"},{"lineNumber":298,"author":{"gitId":"jayasting98"},"content":"    for (let i: number \u003d 0; i \u003c component.instructorsConsolidated.length; i +\u003d 1) {"},{"lineNumber":299,"author":{"gitId":"jayasting98"},"content":"      component.setInstructorRowEditModeEnabled(i, true);"},{"lineNumber":300,"author":{"gitId":"jayasting98"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"jayasting98"},"content":"    const index: number \u003d 1;"},{"lineNumber":304,"author":{"gitId":"jayasting98"},"content":"    component.setInstructorRowEditModeEnabled(index, false);"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"jayasting98"},"content":"    for (let i: number \u003d 0; i \u003c component.instructorsConsolidated.length; i +\u003d 1) {"},{"lineNumber":307,"author":{"gitId":"jayasting98"},"content":"      expect(component.instructorsConsolidated[i].isCurrentlyBeingEdited).toEqual(i !\u003d\u003d index);"},{"lineNumber":308,"author":{"gitId":"jayasting98"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"  it(\u0027should add all instructors when prompted\u0027, () \u003d\u003e {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":313,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":318,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        status: \u0027SUCCESS\u0027,"},{"lineNumber":327,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 200,"},{"lineNumber":328,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        joinLink: \u0027http://localhost:4200/web/join\u0027,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        name: \u0027Instructor C\u0027,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        email: \u0027instructorc@example.com\u0027,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution C\u0027,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":337,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 400,"},{"lineNumber":338,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        message: \u0027The instructor cannot be added for some reason\u0027,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    // No need to spy here as this test only tests the number of active requests added"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    // Testing of adding individual instructors have been done before"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-all-instructors\u0027);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0].status).toEqual(\u0027ADDING\u0027);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[1].status).toEqual(\u0027SUCCESS\u0027);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[2].status).toEqual(\u0027ADDING\u0027);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    expect(component.activeRequests).toEqual(2);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should add only instructors that are not currently in edit mode when trying to add all\u0027, () \u003d\u003e {"},{"lineNumber":357,"author":{"gitId":"jayasting98"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":358,"author":{"gitId":"jayasting98"},"content":"      {"},{"lineNumber":359,"author":{"gitId":"jayasting98"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":360,"author":{"gitId":"jayasting98"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":361,"author":{"gitId":"jayasting98"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":362,"author":{"gitId":"jayasting98"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":363,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":364,"author":{"gitId":"jayasting98"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":365,"author":{"gitId":"jayasting98"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":366,"author":{"gitId":"jayasting98"},"content":"      },"},{"lineNumber":367,"author":{"gitId":"jayasting98"},"content":"      {"},{"lineNumber":368,"author":{"gitId":"jayasting98"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":369,"author":{"gitId":"jayasting98"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":370,"author":{"gitId":"jayasting98"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":371,"author":{"gitId":"jayasting98"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":372,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: true,"},{"lineNumber":373,"author":{"gitId":"jayasting98"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":374,"author":{"gitId":"jayasting98"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":375,"author":{"gitId":"jayasting98"},"content":"      },"},{"lineNumber":376,"author":{"gitId":"jayasting98"},"content":"      {"},{"lineNumber":377,"author":{"gitId":"jayasting98"},"content":"        name: \u0027Instructor C\u0027,"},{"lineNumber":378,"author":{"gitId":"jayasting98"},"content":"        email: \u0027instructorc@example.com\u0027,"},{"lineNumber":379,"author":{"gitId":"jayasting98"},"content":"        institution: \u0027Sample Institution C\u0027,"},{"lineNumber":380,"author":{"gitId":"jayasting98"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":381,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 400,"},{"lineNumber":382,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":383,"author":{"gitId":"jayasting98"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":384,"author":{"gitId":"jayasting98"},"content":"        message: \u0027The instructor cannot be added for some reason\u0027,"},{"lineNumber":385,"author":{"gitId":"jayasting98"},"content":"      },"},{"lineNumber":386,"author":{"gitId":"jayasting98"},"content":"    ];"},{"lineNumber":387,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":388,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":389,"author":{"gitId":"jayasting98"},"content":"    const addAllButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-all-instructors\u0027);"},{"lineNumber":390,"author":{"gitId":"jayasting98"},"content":"    addAllButton.click();"},{"lineNumber":391,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":392,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructorsConsolidated[0].status).toEqual(\u0027ADDING\u0027);"},{"lineNumber":393,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructorsConsolidated[1].status).toEqual(\u0027PENDING\u0027);"},{"lineNumber":394,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructorsConsolidated[2].status).toEqual(\u0027ADDING\u0027);"},{"lineNumber":395,"author":{"gitId":"jayasting98"},"content":"    expect(component.activeRequests).toEqual(2);"},{"lineNumber":396,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":397,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default view\u0027, () \u003d\u003e {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":400,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"  it(\u0027should snap with some instructors details\u0027, () \u003d\u003e {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":404,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":409,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        status: \u0027SUCCESS\u0027,"},{"lineNumber":418,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 200,"},{"lineNumber":419,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        joinLink: \u0027http://localhost:4200/web/join\u0027,"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        name: \u0027Instructor C\u0027,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        email: \u0027instructorc@example.com\u0027,"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution C\u0027,"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":428,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 400,"},{"lineNumber":429,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        message: \u0027The instructor cannot be added for some reason\u0027,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":433,"author":{"gitId":"samuelfangjw"},"content":"      {"},{"lineNumber":434,"author":{"gitId":"samuelfangjw"},"content":"        name: \u0027Instructor D\u0027,"},{"lineNumber":435,"author":{"gitId":"samuelfangjw"},"content":"        email: \u0027instructord@example.com\u0027,"},{"lineNumber":436,"author":{"gitId":"samuelfangjw"},"content":"        institution: \u0027Sample Institution C\u0027,"},{"lineNumber":437,"author":{"gitId":"samuelfangjw"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":438,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 409,"},{"lineNumber":439,"author":{"gitId":"samuelfangjw"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":440,"author":{"gitId":"samuelfangjw"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":441,"author":{"gitId":"samuelfangjw"},"content":"        message: \u0027Cannot create account request as instructor has already registered.\u0027,"},{"lineNumber":442,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":446,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"  it(\u0027should snap with disabled adding instructor button if there are active requests\u0027, () \u003d\u003e {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":450,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        status: \u0027ADDING\u0027,"},{"lineNumber":455,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":464,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    component.activeRequests \u003d 1;"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    component.isAddingInstructors \u003d true;"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":474,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"  it(\u0027should add multiple instructors split by tabs\u0027, () \u003d\u003e {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    component.instructorDetails \u003d `Instructor A   \\t  instructora@example.com \\t  Sample Institution A\\n"},{"lineNumber":478,"author":{"gitId":"-"},"content":"     Instructor B \\t instructorb@example.com \\t Sample Institution B`;"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor-single-line\u0027);"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(2);"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0]).toEqual("},{"lineNumber":487,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":492,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[1]).toEqual("},{"lineNumber":496,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":501,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":504,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"  it(\u0027should add multiple instructors split by vertical bars\u0027, () \u003d\u003e {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    component.instructorDetails \u003d `Instructor A | instructora@example.com | Sample Institution A\\n"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        Instructor B | instructorb@example.com | Sample Institution B`;"},{"lineNumber":509,"author":{"gitId":"-"},"content":""},{"lineNumber":510,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor-single-line\u0027);"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(2);"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0]).toEqual("},{"lineNumber":517,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":522,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[1]).toEqual("},{"lineNumber":526,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":531,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":534,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":535,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":536,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should call showRegisteredInstructorModal when info button for registered instructors clicked\u0027, () \u003d\u003e {"},{"lineNumber":537,"author":{"gitId":"samuelfangjw"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":538,"author":{"gitId":"samuelfangjw"},"content":"      {"},{"lineNumber":539,"author":{"gitId":"samuelfangjw"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":540,"author":{"gitId":"samuelfangjw"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":541,"author":{"gitId":"samuelfangjw"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":542,"author":{"gitId":"samuelfangjw"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":543,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 409,"},{"lineNumber":544,"author":{"gitId":"samuelfangjw"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":545,"author":{"gitId":"samuelfangjw"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":546,"author":{"gitId":"samuelfangjw"},"content":"        message: \u0027message\u0027,"},{"lineNumber":547,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":548,"author":{"gitId":"samuelfangjw"},"content":"    ];"},{"lineNumber":549,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":550,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":551,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":552,"author":{"gitId":"samuelfangjw"},"content":"    const spy \u003d jest.spyOn(component, \u0027showRegisteredInstructorModal\u0027).mockImplementation(() \u003d\u003e {});"},{"lineNumber":553,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":554,"author":{"gitId":"samuelfangjw"},"content":"    const infoButton \u003d fixture.debugElement.nativeElement.querySelector(\u0027#instructor-0-registered-info-button\u0027);"},{"lineNumber":555,"author":{"gitId":"samuelfangjw"},"content":"    infoButton.click();"},{"lineNumber":556,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":557,"author":{"gitId":"samuelfangjw"},"content":"    expect(spy).toHaveBeenCalledTimes(1);"},{"lineNumber":558,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":559,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":560,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should fetch account and course information when showRegisteredInstructorModal is called\u0027, () \u003d\u003e {"},{"lineNumber":561,"author":{"gitId":"samuelfangjw"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":562,"author":{"gitId":"samuelfangjw"},"content":"      {"},{"lineNumber":563,"author":{"gitId":"samuelfangjw"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":564,"author":{"gitId":"samuelfangjw"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":565,"author":{"gitId":"samuelfangjw"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":566,"author":{"gitId":"samuelfangjw"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":567,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 409,"},{"lineNumber":568,"author":{"gitId":"samuelfangjw"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":569,"author":{"gitId":"samuelfangjw"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":570,"author":{"gitId":"samuelfangjw"},"content":"        message: \u0027message\u0027,"},{"lineNumber":571,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":572,"author":{"gitId":"samuelfangjw"},"content":"    ];"},{"lineNumber":573,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":574,"author":{"gitId":"samuelfangjw"},"content":"    const modalSpy \u003d jest"},{"lineNumber":575,"author":{"gitId":"samuelfangjw"},"content":"      .spyOn(simpleModalService, \u0027openInformationModal\u0027)"},{"lineNumber":576,"author":{"gitId":"samuelfangjw"},"content":"      .mockReturnValue(createMockNgbModalRef());"},{"lineNumber":577,"author":{"gitId":"samuelfangjw"},"content":"    const getAccountsSpy \u003d jest"},{"lineNumber":578,"author":{"gitId":"samuelfangjw"},"content":"      .spyOn(accountService, \u0027getAccounts\u0027)"},{"lineNumber":579,"author":{"gitId":"samuelfangjw"},"content":"      .mockReturnValue(of({"},{"lineNumber":580,"author":{"gitId":"samuelfangjw"},"content":"        accounts: ["},{"lineNumber":581,"author":{"gitId":"samuelfangjw"},"content":"          {"},{"lineNumber":582,"author":{"gitId":"samuelfangjw"},"content":"            googleId: \u0027googleId\u0027,"},{"lineNumber":583,"author":{"gitId":"samuelfangjw"},"content":"            name: \u0027name\u0027,"},{"lineNumber":584,"author":{"gitId":"samuelfangjw"},"content":"            institute: \u0027instutute\u0027,"},{"lineNumber":585,"author":{"gitId":"samuelfangjw"},"content":"            isInstructor: true,"},{"lineNumber":586,"author":{"gitId":"samuelfangjw"},"content":"            email: \u0027email\u0027,"},{"lineNumber":587,"author":{"gitId":"samuelfangjw"},"content":"            createdAtTimeStamp: 0,"},{"lineNumber":588,"author":{"gitId":"samuelfangjw"},"content":"          },"},{"lineNumber":589,"author":{"gitId":"samuelfangjw"},"content":"        ],"},{"lineNumber":590,"author":{"gitId":"samuelfangjw"},"content":"      }));"},{"lineNumber":591,"author":{"gitId":"samuelfangjw"},"content":"    const getStudentCoursesSpy \u003d jest"},{"lineNumber":592,"author":{"gitId":"samuelfangjw"},"content":"      .spyOn(courseService, \u0027getStudentCoursesInMasqueradeMode\u0027)"},{"lineNumber":593,"author":{"gitId":"samuelfangjw"},"content":"      .mockReturnValue(of({"},{"lineNumber":594,"author":{"gitId":"samuelfangjw"},"content":"        courses: ["},{"lineNumber":595,"author":{"gitId":"samuelfangjw"},"content":"          {"},{"lineNumber":596,"author":{"gitId":"samuelfangjw"},"content":"            courseId: \u0027courseId\u0027,"},{"lineNumber":597,"author":{"gitId":"samuelfangjw"},"content":"            courseName: \u0027courseName\u0027,"},{"lineNumber":598,"author":{"gitId":"samuelfangjw"},"content":"            timeZone: \u0027not used\u0027,"},{"lineNumber":599,"author":{"gitId":"samuelfangjw"},"content":"            institute: \u0027institute\u0027,"},{"lineNumber":600,"author":{"gitId":"samuelfangjw"},"content":"            creationTimestamp: 0,"},{"lineNumber":601,"author":{"gitId":"samuelfangjw"},"content":"            deletionTimestamp: 0,"},{"lineNumber":602,"author":{"gitId":"samuelfangjw"},"content":"          },"},{"lineNumber":603,"author":{"gitId":"samuelfangjw"},"content":"        ],"},{"lineNumber":604,"author":{"gitId":"samuelfangjw"},"content":"      }));"},{"lineNumber":605,"author":{"gitId":"samuelfangjw"},"content":"    const getInstructorCoursesSpy \u003d jest"},{"lineNumber":606,"author":{"gitId":"samuelfangjw"},"content":"      .spyOn(courseService, \u0027getInstructorCoursesInMasqueradeMode\u0027)"},{"lineNumber":607,"author":{"gitId":"samuelfangjw"},"content":"      .mockReturnValue(of({"},{"lineNumber":608,"author":{"gitId":"samuelfangjw"},"content":"        courses: ["},{"lineNumber":609,"author":{"gitId":"samuelfangjw"},"content":"          {"},{"lineNumber":610,"author":{"gitId":"samuelfangjw"},"content":"            courseId: \u0027courseId\u0027,"},{"lineNumber":611,"author":{"gitId":"samuelfangjw"},"content":"            courseName: \u0027courseName\u0027,"},{"lineNumber":612,"author":{"gitId":"samuelfangjw"},"content":"            timeZone: \u0027not used\u0027,"},{"lineNumber":613,"author":{"gitId":"samuelfangjw"},"content":"            institute: \u0027institute\u0027,"},{"lineNumber":614,"author":{"gitId":"samuelfangjw"},"content":"            creationTimestamp: 0,"},{"lineNumber":615,"author":{"gitId":"samuelfangjw"},"content":"            deletionTimestamp: 0,"},{"lineNumber":616,"author":{"gitId":"samuelfangjw"},"content":"          },"},{"lineNumber":617,"author":{"gitId":"samuelfangjw"},"content":"        ],"},{"lineNumber":618,"author":{"gitId":"samuelfangjw"},"content":"      }));"},{"lineNumber":619,"author":{"gitId":"samuelfangjw"},"content":"    const generateAccountLinkSpy \u003d jest"},{"lineNumber":620,"author":{"gitId":"samuelfangjw"},"content":"      .spyOn(linkService, \u0027generateManageAccountLink\u0027)"},{"lineNumber":621,"author":{"gitId":"samuelfangjw"},"content":"      .mockReturnValue(\u0027manageAccountLink\u0027);"},{"lineNumber":622,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":623,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":624,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":625,"author":{"gitId":"samuelfangjw"},"content":"    component.showRegisteredInstructorModal(0);"},{"lineNumber":626,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":627,"author":{"gitId":"samuelfangjw"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":628,"author":{"gitId":"samuelfangjw"},"content":"    expect(getAccountsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":629,"author":{"gitId":"samuelfangjw"},"content":"    expect(getAccountsSpy).toHaveBeenCalledWith(\u0027instructora@example.com\u0027);"},{"lineNumber":630,"author":{"gitId":"samuelfangjw"},"content":"    expect(getStudentCoursesSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":631,"author":{"gitId":"samuelfangjw"},"content":"    expect(getStudentCoursesSpy).toHaveBeenCalledWith(\u0027googleId\u0027);"},{"lineNumber":632,"author":{"gitId":"samuelfangjw"},"content":"    expect(getInstructorCoursesSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":633,"author":{"gitId":"samuelfangjw"},"content":"    expect(getInstructorCoursesSpy).toHaveBeenCalledWith(\u0027googleId\u0027);"},{"lineNumber":634,"author":{"gitId":"samuelfangjw"},"content":"    expect(generateAccountLinkSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":635,"author":{"gitId":"samuelfangjw"},"content":"    expect(generateAccountLinkSpy).toHaveBeenCalledWith(\u0027googleId\u0027, \u0027/admin/accounts\u0027);"},{"lineNumber":636,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.isRegisteredInstructorModalLoading).toBeFalsy();"},{"lineNumber":637,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":638,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":639,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should call reset account endpoint when resetAccountRequest called\u0027, async () \u003d\u003e {"},{"lineNumber":640,"author":{"gitId":"samuelfangjw"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":641,"author":{"gitId":"samuelfangjw"},"content":"      {"},{"lineNumber":642,"author":{"gitId":"samuelfangjw"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":643,"author":{"gitId":"samuelfangjw"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":644,"author":{"gitId":"samuelfangjw"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":645,"author":{"gitId":"samuelfangjw"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":646,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 409,"},{"lineNumber":647,"author":{"gitId":"samuelfangjw"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":648,"author":{"gitId":"samuelfangjw"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":649,"author":{"gitId":"samuelfangjw"},"content":"        message: \u0027message\u0027,"},{"lineNumber":650,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":651,"author":{"gitId":"samuelfangjw"},"content":"    ];"},{"lineNumber":652,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":653,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":654,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":655,"author":{"gitId":"samuelfangjw"},"content":"    const resetAccountSpy \u003d jest.spyOn(accountService, \u0027resetAccountRequest\u0027).mockReturnValue(of({"},{"lineNumber":656,"author":{"gitId":"samuelfangjw"},"content":"      joinLink: \u0027link\u0027,"},{"lineNumber":657,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":658,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":659,"author":{"gitId":"samuelfangjw"},"content":"    const modalSpy \u003d jest"},{"lineNumber":660,"author":{"gitId":"samuelfangjw"},"content":"      .spyOn(simpleModalService, \u0027openConfirmationModal\u0027)"},{"lineNumber":661,"author":{"gitId":"samuelfangjw"},"content":"      .mockImplementation(() \u003d\u003e {"},{"lineNumber":662,"author":{"gitId":"samuelfangjw"},"content":"        return createMockNgbModalRef();"},{"lineNumber":663,"author":{"gitId":"samuelfangjw"},"content":"      });"},{"lineNumber":664,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":665,"author":{"gitId":"samuelfangjw"},"content":"    component.resetAccountRequest(0);"},{"lineNumber":666,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":667,"author":{"gitId":"samuelfangjw"},"content":"    await fixture.whenStable().then(() \u003d\u003e {"},{"lineNumber":668,"author":{"gitId":"samuelfangjw"},"content":"      expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":669,"author":{"gitId":"samuelfangjw"},"content":"      expect(resetAccountSpy).toBeCalledTimes(1);"},{"lineNumber":670,"author":{"gitId":"samuelfangjw"},"content":"      expect(resetAccountSpy).toBeCalledWith(\u0027instructora@example.com\u0027, \u0027Sample Institution A\u0027);"},{"lineNumber":671,"author":{"gitId":"samuelfangjw"},"content":"      expect(component.instructorsConsolidated[0]).toEqual({"},{"lineNumber":672,"author":{"gitId":"samuelfangjw"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":673,"author":{"gitId":"samuelfangjw"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":674,"author":{"gitId":"samuelfangjw"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":675,"author":{"gitId":"samuelfangjw"},"content":"        status: \u0027SUCCESS\u0027,"},{"lineNumber":676,"author":{"gitId":"samuelfangjw"},"content":"        statusCode: 200,"},{"lineNumber":677,"author":{"gitId":"samuelfangjw"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":678,"author":{"gitId":"samuelfangjw"},"content":"        joinLink: \u0027link\u0027,"},{"lineNumber":679,"author":{"gitId":"samuelfangjw"},"content":"        message: \u0027message\u0027,"},{"lineNumber":680,"author":{"gitId":"samuelfangjw"},"content":"      });"},{"lineNumber":681,"author":{"gitId":"samuelfangjw"},"content":"    });"},{"lineNumber":682,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":683,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"jayasting98":147,"-":348,"samuelfangjw":188}},{"path":"src/web/app/pages-admin/admin-home-page/admin-home-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"import { Component, TemplateRef, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import { forkJoin, Observable, of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import { catchError, finalize, map, mergeMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AccountService } from \u0027../../../services/account.service\u0027;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import { LinkService } from \u0027../../../services/link.service\u0027;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import { Account, Accounts, Courses, JoinLink } from \u0027../../../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import { InstructorData, RegisteredInstructorAccountData } from \u0027./instructor-data\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Admin home page."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  selector: \u0027tm-admin-home-page\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./admin-home-page.component.html\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./admin-home-page.component.scss\u0027],"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class AdminHomePageComponent {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  instructorDetails: string \u003d \u0027\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  instructorName: string \u003d \u0027\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  instructorEmail: string \u003d \u0027\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  instructorInstitution: string \u003d \u0027\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  instructorsConsolidated: InstructorData[] \u003d [];"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  activeRequests: number \u003d 0;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  isAddingInstructors: boolean \u003d false;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"  isRegisteredInstructorModalLoading \u003d false;"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"  registeredInstructorIndex: number \u003d 0;"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"  registeredInstructorAccountData: RegisteredInstructorAccountData[] \u003d [];"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"  @ViewChild(\u0027registeredInstructorModal\u0027) registeredInstructorModal!: TemplateRef\u003cany\u003e;"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"  constructor("},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    private accountService: AccountService,"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    private courseService: CourseService,"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    private simpleModalService: SimpleModalService,"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    private statusMessageService: StatusMessageService,"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    private linkService: LinkService,"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    private ngbModal: NgbModal,"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"  ) {}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * Validates and adds the instructor details filled with first form."},{"lineNumber":52,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  validateAndAddInstructorDetails(): void {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    const invalidLines: string[] \u003d [];"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    for (const instructorDetail of this.instructorDetails.split(/\\r?\\n/)) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      const instructorDetailSplit: string[] \u003d instructorDetail.split(/[|\\t]/).map((item: string) \u003d\u003e item.trim());"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      if (instructorDetailSplit.length \u003c 3) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // TODO handle error"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        invalidLines.push(instructorDetail);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        continue;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      if (!instructorDetailSplit[0] || !instructorDetailSplit[1] || !instructorDetailSplit[2]) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // TODO handle error"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        invalidLines.push(instructorDetail);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        continue;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      this.instructorsConsolidated.push({"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name: instructorDetailSplit[0],"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email: instructorDetailSplit[1],"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        institution: instructorDetailSplit[2],"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"        isCurrentlyBeingEdited: false,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    this.instructorDetails \u003d invalidLines.join(\u0027\\r\\n\u0027);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * Validates and adds the instructor detail filled with second form."},{"lineNumber":80,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  validateAndAddInstructorDetail(): void {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    if (!this.instructorName || !this.instructorEmail || !this.instructorInstitution) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      // TODO handle error"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    this.instructorsConsolidated.push({"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      name: this.instructorName,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      email: this.instructorEmail,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      institution: this.instructorInstitution,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"      isCurrentlyBeingEdited: false,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    this.instructorName \u003d \u0027\u0027;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    this.instructorEmail \u003d \u0027\u0027;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.instructorInstitution \u003d \u0027\u0027;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":99,"author":{"gitId":"-"},"content":"   * Adds the instructor at the i-th index."},{"lineNumber":100,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  addInstructor(i: number): void {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    const instructor: InstructorData \u003d this.instructorsConsolidated[i];"},{"lineNumber":103,"author":{"gitId":"jayasting98"},"content":"    if (this.instructorsConsolidated[i].isCurrentlyBeingEdited"},{"lineNumber":104,"author":{"gitId":"jayasting98"},"content":"      || (instructor.status !\u003d\u003d \u0027PENDING\u0027 \u0026\u0026 instructor.status !\u003d\u003d \u0027FAIL\u0027)) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.activeRequests +\u003d 1;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    instructor.status \u003d \u0027ADDING\u0027;"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    this.isAddingInstructors \u003d true;"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    this.accountService.createAccountRequest({"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      instructorEmail: instructor.email,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      instructorName: instructor.name,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      instructorInstitution: instructor.institution,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          this.isAddingInstructors \u003d false;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        .subscribe((resp: JoinLink) \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          instructor.status \u003d \u0027SUCCESS\u0027;"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"          instructor.statusCode \u003d 200;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          instructor.joinLink \u003d resp.joinLink;"},{"lineNumber":123,"author":{"gitId":"-"},"content":"          this.activeRequests -\u003d 1;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"          instructor.status \u003d \u0027FAIL\u0027;"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"          instructor.statusCode \u003d resp.status;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          instructor.message \u003d resp.error.message;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"          this.activeRequests -\u003d 1;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"jayasting98"},"content":"   * Removes the instructor at the i-th index."},{"lineNumber":134,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"jayasting98"},"content":"  removeInstructor(i: number): void {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    this.instructorsConsolidated.splice(i, 1);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"jayasting98"},"content":"  /**"},{"lineNumber":140,"author":{"gitId":"jayasting98"},"content":"   * Sets the i-th instructor data row\u0027s edit mode status."},{"lineNumber":141,"author":{"gitId":"jayasting98"},"content":"   *"},{"lineNumber":142,"author":{"gitId":"jayasting98"},"content":"   * @param i The index."},{"lineNumber":143,"author":{"gitId":"jayasting98"},"content":"   * @param isEnabled Whether the edit mode status is enabled."},{"lineNumber":144,"author":{"gitId":"jayasting98"},"content":"   */"},{"lineNumber":145,"author":{"gitId":"jayasting98"},"content":"  setInstructorRowEditModeEnabled(i: number, isEnabled: boolean): void {"},{"lineNumber":146,"author":{"gitId":"jayasting98"},"content":"    this.instructorsConsolidated[i].isCurrentlyBeingEdited \u003d isEnabled;"},{"lineNumber":147,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":148,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   * Adds all the pending and failed-to-add instructors."},{"lineNumber":151,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  addAllInstructors(): void {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 0; i \u003c this.instructorsConsolidated.length; i +\u003d 1) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      this.addInstructor(i);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"   * Opens a modal containing more information about a registered instructor."},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"  showRegisteredInstructorModal(i: number): void {"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"    this.registeredInstructorIndex \u003d i;"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"    this.registeredInstructorAccountData \u003d [];"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"    this.isRegisteredInstructorModalLoading \u003d true;"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"    const email \u003d this.instructorsConsolidated[i].email;"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openInformationModal("},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"      \u0027An instructor has already registered using this account request\u0027,"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"      SimpleModalType.INFO,"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"      this.registeredInstructorModal,"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"      undefined,"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"      { scrollable: true },"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    );"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"    this.accountService.getAccounts(email).pipe("},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"      map((accounts: Accounts) \u003d\u003e accounts.accounts),"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"      mergeMap((accounts: Account[]) \u003d\u003e"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"        forkJoin(accounts.map("},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"          (account: Account) \u003d\u003e this.getRegisteredAccountData(account.googleId)),"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        ),"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"      ),"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"      finalize(() \u003d\u003e { this.isRegisteredInstructorModalLoading \u003d false; }),"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    ).subscribe((resp: RegisteredInstructorAccountData[]) \u003d\u003e {"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"      this.registeredInstructorAccountData \u003d resp;"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"      modalRef.dismiss();"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"    });"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"  private getRegisteredAccountData(googleId: string): Observable\u003cRegisteredInstructorAccountData\u003e {"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"    const getStudentCourses: Observable\u003cCourses\u003e \u003d this.courseService"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"      .getStudentCoursesInMasqueradeMode(googleId)"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"      .pipe("},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"        catchError((err: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"          if (err.status \u003d\u003d\u003d 403) {"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"            // User is not a student"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"            return of({ courses: [] });"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"          }"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"          return throwError(err);"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"        }),"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"      );"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"    const getInstructorCourses: Observable\u003cCourses\u003e \u003d this.courseService"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"      .getInstructorCoursesInMasqueradeMode(googleId)"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"      .pipe("},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        catchError((err: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"          if (err.status \u003d\u003d\u003d 403) {"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"            // User is not an instructor"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"            return of({ courses: [] });"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"          }"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"          return throwError(err);"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"        }),"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"      );"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"    return forkJoin(["},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"      getStudentCourses,"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"      getInstructorCourses,"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"    ]).pipe("},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"      map((value: [Courses, Courses]) \u003d\u003e {"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"        const manageAccountLink \u003d this.linkService"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"          .generateManageAccountLink(googleId, this.linkService.ADMIN_ACCOUNTS_PAGE);"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"        return {"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"          googleId,"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"          manageAccountLink,"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"          studentCourses: value[0].courses,"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"          instructorCourses: value[1].courses,"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"      }),"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"    );"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"  resetAccountRequest(i: number): void {"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"    const modalContent \u003d `Are you sure you want to reset the account request for"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"        \u003cstrong\u003e${this.instructorsConsolidated[i].name}\u003c/strong\u003e with email"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"        \u003cstrong\u003e${this.instructorsConsolidated[i].email}\u003c/strong\u003e from"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"        \u003cstrong\u003e${this.instructorsConsolidated[i].institution}\u003c/strong\u003e?"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"        An email with the account registration link will also be sent to the instructor.`;"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"        `Reset account request for \u003cstrong\u003e${this.instructorsConsolidated[i].name}\u003c/strong\u003e?`,"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"        SimpleModalType.WARNING,"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"        modalContent);"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"      this.accountService"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"        .resetAccountRequest("},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"          this.instructorsConsolidated[i].email,"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"          this.instructorsConsolidated[i].institution,"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"        )"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"        .subscribe("},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"          (resp: JoinLink) \u003d\u003e {"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"            this.instructorsConsolidated[i].status \u003d \u0027SUCCESS\u0027;"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"            this.instructorsConsolidated[i].statusCode \u003d 200;"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"            this.instructorsConsolidated[i].joinLink \u003d resp.joinLink;"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"            this.ngbModal.dismissAll();"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"          },"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":"          (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"          },"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"        );"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jayasting98":16,"-":114,"samuelfangjw":134}},{"path":"src/web/app/pages-admin/admin-home-page/admin-home-page.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { AdminHomePageComponent } from \u0027./admin-home-page.component\u0027;"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import { NewInstructorDataRowComponent } from \u0027./new-instructor-data-row/new-instructor-data-row.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":11,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    component: AdminHomePageComponent,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":15,"author":{"gitId":"-"},"content":"];"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Module for admin home page."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":22,"author":{"gitId":"-"},"content":"    AdminHomePageComponent,"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    NewInstructorDataRowComponent,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":26,"author":{"gitId":"-"},"content":"    AdminHomePageComponent,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":29,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    FormsModule,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    AjaxLoadingModule,"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    LoadingSpinnerModule,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":35,"author":{"gitId":"-"},"content":"})"},{"lineNumber":36,"author":{"gitId":"-"},"content":"export class AdminHomePageModule { }"}],"authorContributionMap":{"jayasting98":2,"-":32,"samuelfangjw":2}},{"path":"src/web/app/pages-admin/admin-home-page/instructor-data.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"import { Course } from \u0027../../../types/api-output\u0027;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * Represents the data of a new instructor."},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"export interface InstructorData {"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"  name: string;"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"  email: string;"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"  institution: string;"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"  status: string;"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"  isCurrentlyBeingEdited: boolean;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  statusCode?: number;"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"  joinLink?: string;"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"  message?: string;"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"}"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * Represents the account data associated with a registered instructor."},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * See registered instructor modal of {@link AdminHomePageComponent}."},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"export interface RegisteredInstructorAccountData {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"  googleId: string;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"  studentCourses: Course[];"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"  instructorCourses: Course[];"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"  manageAccountLink: string;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"jayasting98":12,"samuelfangjw":14}},{"path":"src/web/app/pages-admin/admin-home-page/new-instructor-data-row/new-instructor-data-row.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"\u003ctd\u003e"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"  \u003cspan *ngIf\u003d\"!isBeingEdited\" id\u003d\"instructor-{{ index }}-name\"\u003e{{ instructor.name }}\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"  \u003cinput *ngIf\u003d\"isBeingEdited\" class\u003d\"form-control\" type\u003d\"text\" id\u003d\"instructor-{{ index }}-name-input\" [(ngModel)]\u003d\"editedInstructorName\"\u003e"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"\u003c/td\u003e"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"\u003ctd\u003e"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"  \u003cspan *ngIf\u003d\"!isBeingEdited\" id\u003d\"instructor-{{ index }}-email\"\u003e{{ instructor.email }}\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"  \u003cinput *ngIf\u003d\"isBeingEdited\" class\u003d\"form-control\" type\u003d\"text\" id\u003d\"instructor-{{ index }}-email-input\" [(ngModel)]\u003d\"editedInstructorEmail\"\u003e"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"\u003c/td\u003e"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"\u003ctd\u003e"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"  \u003cspan *ngIf\u003d\"!isBeingEdited\" id\u003d\"instructor-{{ index }}-institution\"\u003e{{ instructor.institution }}\u003c/span\u003e"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"  \u003cinput *ngIf\u003d\"isBeingEdited\" class\u003d\"form-control\" type\u003d\"text\" id\u003d\"instructor-{{ index }}-institution-input\" [(ngModel)]\u003d\"editedInstructorInstitution\"\u003e"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"\u003c/td\u003e"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"\u003ctd style\u003d\"width: 17%;\"\u003e"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"  \u003cdiv class\u003d\"button-group\" *ngIf\u003d\"isBeingEdited \u0026\u0026 (instructor.status \u003d\u003d\u003d \u0027PENDING\u0027 || instructor.status \u003d\u003d\u003d \u0027FAIL\u0027)\"\u003e"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    \u003cbutton class\u003d\"action-btn btn btn-sm btn-primary text-nowrap\" id\u003d\"confirm-edit-instructor-{{ index }}\" style\u003d\"margin-right: 10px;\" (click)\u003d\"confirmEditInstructor()\"\u003eConfirm\u003c/button\u003e"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    \u003cbutton class\u003d\"action-btn btn btn-sm btn-danger text-nowrap\" id\u003d\"cancel-edit-instructor-{{ index }}\" style\u003d\"margin-right: 10px;\" (click)\u003d\"cancelEditInstructor()\"\u003eCancel\u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"  \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"  \u003cdiv class\u003d\"button-group\" *ngIf\u003d\"!isBeingEdited \u0026\u0026 (instructor.status \u003d\u003d\u003d \u0027PENDING\u0027 || instructor.status \u003d\u003d\u003d \u0027FAIL\u0027)\"\u003e"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"    \u003cbutton class\u003d\"action-btn btn btn-sm btn-primary text-nowrap\" id\u003d\"add-instructor-{{ index }}\" style\u003d\"margin-right: 10px;\" (click)\u003d\"addInstructor()\" [disabled]\u003d\"isAddDisabled\"\u003eAdd\u003c/button\u003e"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"    \u003cbutton class\u003d\"action-btn btn btn-sm btn-info text-nowrap\" id\u003d\"edit-instructor-{{ index }}\" style\u003d\"margin-right: 10px;\" (click)\u003d\"editInstructor()\"\u003eEdit\u003c/button\u003e"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"    \u003cbutton class\u003d\"action-btn btn btn-sm btn-danger\" id\u003d\"remove-instructor-{{ index }}\" (click)\u003d\"removeInstructor()\"\u003eRemove\u003c/button\u003e"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"  \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"\u003c/td\u003e"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"\u003ctd style\u003d\"width: 8%;\"\u003e{{ instructor.status }}\u003c/td\u003e"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"\u003ctd style\u003d\"width: 40%;\"\u003e"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"  \u003cspan *ngIf\u003d\"instructor.status \u003d\u003d\u003d \u0027SUCCESS\u0027\" id\u003d\"message-instructor-{{ index }}\"\u003e"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"    Instructor \"{{ instructor.name }}\" has been successfully created. [\u003ca href\u003d\"{{ instructor.joinLink }}\"\u003ejoin link\u003c/a\u003e]"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"  \u003c/span\u003e"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"  \u003cspan class\u003d\"message\" *ngIf\u003d\"instructor.status \u003d\u003d\u003d \u0027FAIL\u0027\" id\u003d\"message-instructor-{{ index }}\"\u003e{{ instructor.message }}\u003c/span\u003e"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"  \u003cspan *ngIf\u003d\"instructor.statusCode \u003d\u003d\u003d 409\"\u003e"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    \u003ca id\u003d\"instructor-{{ index }}-registered-info-button\" type\u003d\"button\" (click)\u003d\"showRegisteredInstructorModal();\" class\u003d\"btn btn-link\"\u003e"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/a\u003e"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/span\u003e"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"\u003c/td\u003e"}],"authorContributionMap":{"jayasting98":30,"samuelfangjw":5}},{"path":"src/web/app/pages-admin/admin-home-page/new-instructor-data-row/new-instructor-data-row.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import { By } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import { first } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import { InstructorData } from \u0027../instructor-data\u0027;"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"import { NewInstructorDataRowComponent } from \u0027./new-instructor-data-row.component\u0027;"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"describe(\u0027NewInstructorDataRowComponent\u0027, () \u003d\u003e {"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"  let component: NewInstructorDataRowComponent;"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"  let fixture: ComponentFixture\u003cNewInstructorDataRowComponent\u003e;"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"  let expectedInstructorData: InstructorData;"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"  let expectedIndex: number;"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"  let expectedIsAddDisabled: boolean;"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"  let addButtonDe: any;"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"  let addButtonEl: any;"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"  let editButtonDe: any;"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"  let editButtonEl: any;"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"      imports: [FormsModule],"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"      declarations: [NewInstructorDataRowComponent],"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"    })"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    .compileComponents();"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"  }));"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"    fixture \u003d TestBed.createComponent(NewInstructorDataRowComponent);"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    expectedInstructorData \u003d {"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"      name: \u0027Instructor\u0027,"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"      email: \u0027instructor@instruct.or\u0027,"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"      institution: \u0027Institutional Institution of Institute\u0027,"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"      isCurrentlyBeingEdited: false,"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"    };"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"    expectedIndex \u003d 0;"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"    expectedIsAddDisabled \u003d false;"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"    component.instructor \u003d expectedInstructorData;"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"    component.index \u003d expectedIndex;"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"    component.isAddDisabled \u003d expectedIsAddDisabled;"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"    addButtonDe \u003d fixture.debugElement"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#add-instructor-${expectedIndex}`));"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"    addButtonEl \u003d addButtonDe.nativeElement;"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"    editButtonDe \u003d fixture.debugElement"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#edit-instructor-${expectedIndex}`));"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"    editButtonEl \u003d editButtonDe.nativeElement;"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"    expect(component.isBeingEdited).toBeFalsy();"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorName).toEqual(expectedInstructorData.name);"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorEmail).toEqual(expectedInstructorData.email);"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorInstitution).toEqual(expectedInstructorData.institution);"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should display the instructor name received as input\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"    const displayedInstructorName: string \u003d fixture.debugElement"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#instructor-${expectedIndex}-name`))"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"      .nativeElement.textContent;"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"    expect(displayedInstructorName).toEqual(expectedInstructorData.name);"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should display the instructor email received as input\u0027, () \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"    const displayedInstructorEmail: string \u003d fixture.debugElement"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#instructor-${expectedIndex}-email`))"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"      .nativeElement.textContent;"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"    expect(displayedInstructorEmail).toEqual(expectedInstructorData.email);"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should display the instructor institution received as input\u0027, () \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"    const displayedInstructorInstitution: string \u003d fixture.debugElement"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#instructor-${expectedIndex}-institution`))"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"      .nativeElement.textContent;"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"    expect(displayedInstructorInstitution).toEqual(expectedInstructorData.institution);"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should have an add button that is not disabled when isAddDisabled is false\u0027, () \u003d\u003e {"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"    expect(addButtonEl.disabled).toBeFalsy();"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should have an add button that is disabled when isAddDisabled is true\u0027, () \u003d\u003e {"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":"    component.isAddDisabled \u003d true;"},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"    expect(addButtonEl.disabled).toBeTruthy();"},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should emit addInstructorEvent when adding\u0027, () \u003d\u003e {"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"    let hasEmitted: boolean \u003d false;"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":"    component.addInstructorEvent"},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"      .pipe(first())"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      .subscribe(() \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        hasEmitted \u003d true;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":101,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":102,"author":{"gitId":"jayasting98"},"content":"    addButtonDe.triggerEventHandler(\u0027click\u0027, null);"},{"lineNumber":103,"author":{"gitId":"jayasting98"},"content":"    expect(hasEmitted).toBeTruthy();"},{"lineNumber":104,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":105,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":106,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should emit removeInstructorEvent when removing\u0027, () \u003d\u003e {"},{"lineNumber":107,"author":{"gitId":"jayasting98"},"content":"    let hasEmitted: boolean \u003d false;"},{"lineNumber":108,"author":{"gitId":"jayasting98"},"content":"    component.removeInstructorEvent"},{"lineNumber":109,"author":{"gitId":"jayasting98"},"content":"      .pipe(first())"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      .subscribe(() \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        hasEmitted \u003d true;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":113,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":114,"author":{"gitId":"jayasting98"},"content":"    fixture.debugElement"},{"lineNumber":115,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#remove-instructor-${expectedIndex}`))"},{"lineNumber":116,"author":{"gitId":"jayasting98"},"content":"      .triggerEventHandler(\u0027click\u0027, null);"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"    expect(hasEmitted).toBeTruthy();"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":120,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should emit true via toggleEditModeEvent when entering edit mode\u0027, () \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"jayasting98"},"content":"    let isInEditMode: boolean | undefined;"},{"lineNumber":122,"author":{"gitId":"jayasting98"},"content":"    component.toggleEditModeEvent"},{"lineNumber":123,"author":{"gitId":"jayasting98"},"content":"      .pipe(first())"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      .subscribe((isBeingEdited: boolean) \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        isInEditMode \u003d isBeingEdited;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":127,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":128,"author":{"gitId":"jayasting98"},"content":"    editButtonDe.triggerEventHandler(\u0027click\u0027, null);"},{"lineNumber":129,"author":{"gitId":"jayasting98"},"content":"    expect(isInEditMode).toBeTruthy();"},{"lineNumber":130,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":131,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":132,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should emit false via toggleEditModeEvent when confirming the edit\u0027, () \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"jayasting98"},"content":"    let isInEditMode: boolean | undefined;"},{"lineNumber":134,"author":{"gitId":"jayasting98"},"content":"    component.toggleEditModeEvent"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      .subscribe((isBeingEdited: boolean) \u003d\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        isInEditMode \u003d isBeingEdited;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":138,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":139,"author":{"gitId":"jayasting98"},"content":"    editButtonDe.triggerEventHandler(\u0027click\u0027, null);"},{"lineNumber":140,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":141,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":142,"author":{"gitId":"jayasting98"},"content":"    fixture.debugElement"},{"lineNumber":143,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#confirm-edit-instructor-${expectedIndex}`))"},{"lineNumber":144,"author":{"gitId":"jayasting98"},"content":"      .triggerEventHandler(\u0027click\u0027, null);"},{"lineNumber":145,"author":{"gitId":"jayasting98"},"content":"    expect(isInEditMode).toBeFalsy();"},{"lineNumber":146,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":147,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":148,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should emit false via toggleEditModeEvent when cancelling the edit\u0027, () \u003d\u003e {"},{"lineNumber":149,"author":{"gitId":"jayasting98"},"content":"    let isInEditMode: boolean | undefined;"},{"lineNumber":150,"author":{"gitId":"jayasting98"},"content":"    component.toggleEditModeEvent"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      .subscribe((isBeingEdited: boolean) \u003d\u003e {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        isInEditMode \u003d isBeingEdited;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":154,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":155,"author":{"gitId":"jayasting98"},"content":"    editButtonDe.triggerEventHandler(\u0027click\u0027, null);"},{"lineNumber":156,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":157,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":158,"author":{"gitId":"jayasting98"},"content":"    fixture.debugElement"},{"lineNumber":159,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#cancel-edit-instructor-${expectedIndex}`))"},{"lineNumber":160,"author":{"gitId":"jayasting98"},"content":"      .triggerEventHandler(\u0027click\u0027, null);"},{"lineNumber":161,"author":{"gitId":"jayasting98"},"content":"    expect(isInEditMode).toBeFalsy();"},{"lineNumber":162,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":163,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should emit showRegisteredInstructorModalEvent when info button clicked\u0027, () \u003d\u003e {"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"    component.instructor \u003d {"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"      name: \u0027Instructor\u0027,"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"      email: \u0027instructor@instruct.or\u0027,"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"      institution: \u0027Institutional Institution of Institute\u0027,"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"      status: \u0027FAIL\u0027,"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"      statusCode: 409,"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"      isCurrentlyBeingEdited: false,"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"    let hasEmitted \u003d false;"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"    component.showRegisteredInstructorModalEvent"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"      .pipe(first())"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"      .subscribe(() \u003d\u003e {"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"        hasEmitted \u003d true;"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"      });"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"    fixture.debugElement"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"      .query(By.css(`#instructor-${expectedIndex}-registered-info-button`))"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"      .triggerEventHandler(\u0027click\u0027, null);"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"    expect(hasEmitted).toBeTruthy();"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should not display more info button if statusCode is not 409\u0027, () \u003d\u003e {"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"    component.instructor \u003d {"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"      name: \u0027Instructor\u0027,"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"      email: \u0027instructor@instruct.or\u0027,"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"      institution: \u0027Institutional Institution of Institute\u0027,"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"      status: \u0027FAIL\u0027,"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"      statusCode: 500,"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"      isCurrentlyBeingEdited: false,"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"    const debugElement \u003d fixture.debugElement"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"      .query(By.css(`#instructor-${expectedIndex}-registered-info-button`));"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"    expect(debugElement).toBeNull();"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should display more info button if statusCode is 409\u0027, () \u003d\u003e {"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"    component.instructor \u003d {"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"      name: \u0027Instructor\u0027,"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"      email: \u0027instructor@instruct.or\u0027,"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"      institution: \u0027Institutional Institution of Institute\u0027,"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"      status: \u0027FAIL\u0027,"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"      statusCode: 409,"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"      isCurrentlyBeingEdited: false,"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"    const debugElement \u003d fixture.debugElement"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"      .query(By.css(`#instructor-${expectedIndex}-registered-info-button`));"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"    expect(debugElement).toBeTruthy();"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":220,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should set isBeingEdited to true when editing starts\u0027, () \u003d\u003e {"},{"lineNumber":221,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":222,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":223,"author":{"gitId":"jayasting98"},"content":"    expect(component.isBeingEdited).toBeTruthy();"},{"lineNumber":224,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":225,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":226,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should set isBeingEdited to false when the edit is confirmed\u0027, () \u003d\u003e {"},{"lineNumber":227,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":228,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":229,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":230,"author":{"gitId":"jayasting98"},"content":"    const confirmButtonEl: any \u003d fixture.debugElement"},{"lineNumber":231,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#confirm-edit-instructor-${expectedIndex}`))"},{"lineNumber":232,"author":{"gitId":"jayasting98"},"content":"      .nativeElement;"},{"lineNumber":233,"author":{"gitId":"jayasting98"},"content":"    confirmButtonEl.click();"},{"lineNumber":234,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":235,"author":{"gitId":"jayasting98"},"content":"    expect(component.isBeingEdited).toBeFalsy();"},{"lineNumber":236,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":237,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":238,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should set isBeingEdited to false when the edit is cancelled\u0027, () \u003d\u003e {"},{"lineNumber":239,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":240,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":241,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":242,"author":{"gitId":"jayasting98"},"content":"    const cancelButtonEl: any \u003d fixture.debugElement"},{"lineNumber":243,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#cancel-edit-instructor-${expectedIndex}`))"},{"lineNumber":244,"author":{"gitId":"jayasting98"},"content":"      .nativeElement;"},{"lineNumber":245,"author":{"gitId":"jayasting98"},"content":"    cancelButtonEl.click();"},{"lineNumber":246,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":247,"author":{"gitId":"jayasting98"},"content":"    expect(component.isBeingEdited).toBeFalsy();"},{"lineNumber":248,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":249,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":250,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should initially have the unedited instructor details when editing starts\u0027, () \u003d\u003e {"},{"lineNumber":251,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":252,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":253,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorName).toEqual(expectedInstructorData.name);"},{"lineNumber":254,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorEmail).toEqual(expectedInstructorData.email);"},{"lineNumber":255,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorInstitution).toEqual(expectedInstructorData.institution);"},{"lineNumber":256,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":257,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":258,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should update the instructor details when the edit is confirmed\u0027, () \u003d\u003e {"},{"lineNumber":259,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":260,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":261,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":262,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorName \u003d \u0027Edited Name\u0027;"},{"lineNumber":263,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorEmail \u003d \u0027Edited@ema.il\u0027;"},{"lineNumber":264,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorInstitution \u003d \u0027Edited Institution\u0027;"},{"lineNumber":265,"author":{"gitId":"jayasting98"},"content":"    const confirmButtonEl: any \u003d fixture.debugElement"},{"lineNumber":266,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#confirm-edit-instructor-${expectedIndex}`))"},{"lineNumber":267,"author":{"gitId":"jayasting98"},"content":"      .nativeElement;"},{"lineNumber":268,"author":{"gitId":"jayasting98"},"content":"    confirmButtonEl.click();"},{"lineNumber":269,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":270,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructor.name).toEqual(\u0027Edited Name\u0027);"},{"lineNumber":271,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructor.email).toEqual(\u0027Edited@ema.il\u0027);"},{"lineNumber":272,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructor.institution).toEqual(\u0027Edited Institution\u0027);"},{"lineNumber":273,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":274,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":275,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should not update the instructor details when the edit is cancelled\u0027, () \u003d\u003e {"},{"lineNumber":276,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":277,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":278,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":279,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorName \u003d \u0027Edited Name\u0027;"},{"lineNumber":280,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorEmail \u003d \u0027Edited@ema.il\u0027;"},{"lineNumber":281,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorInstitution \u003d \u0027Edited Institution\u0027;"},{"lineNumber":282,"author":{"gitId":"jayasting98"},"content":"    const cancelButtonEl: any \u003d fixture.debugElement"},{"lineNumber":283,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#cancel-edit-instructor-${expectedIndex}`))"},{"lineNumber":284,"author":{"gitId":"jayasting98"},"content":"      .nativeElement;"},{"lineNumber":285,"author":{"gitId":"jayasting98"},"content":"    cancelButtonEl.click();"},{"lineNumber":286,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":287,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructor.name).toEqual(expectedInstructorData.name);"},{"lineNumber":288,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructor.email).toEqual(expectedInstructorData.email);"},{"lineNumber":289,"author":{"gitId":"jayasting98"},"content":"    expect(component.instructor.institution).toEqual(expectedInstructorData.institution);"},{"lineNumber":290,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":291,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":292,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should reset the edited instructor details when the edit is cancelled\u0027, () \u003d\u003e {"},{"lineNumber":293,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":294,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":295,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":296,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorName \u003d \u0027Edited Name\u0027;"},{"lineNumber":297,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorEmail \u003d \u0027Edited@ema.il\u0027;"},{"lineNumber":298,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorInstitution \u003d \u0027Edited Institution\u0027;"},{"lineNumber":299,"author":{"gitId":"jayasting98"},"content":"    const cancelButtonEl: any \u003d fixture.debugElement"},{"lineNumber":300,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#cancel-edit-instructor-${expectedIndex}`))"},{"lineNumber":301,"author":{"gitId":"jayasting98"},"content":"      .nativeElement;"},{"lineNumber":302,"author":{"gitId":"jayasting98"},"content":"    cancelButtonEl.click();"},{"lineNumber":303,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":304,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorName).toEqual(expectedInstructorData.name);"},{"lineNumber":305,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorEmail).toEqual(expectedInstructorData.email);"},{"lineNumber":306,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorInstitution).toEqual(expectedInstructorData.institution);"},{"lineNumber":307,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":308,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":309,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should initially have the original instructor details when editing starts after a cancellation\u0027, () \u003d\u003e {"},{"lineNumber":310,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":311,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":312,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":313,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorName \u003d \u0027Edited Name\u0027;"},{"lineNumber":314,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorEmail \u003d \u0027Edited@ema.il\u0027;"},{"lineNumber":315,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorInstitution \u003d \u0027Edited Institution\u0027;"},{"lineNumber":316,"author":{"gitId":"jayasting98"},"content":"    const cancelButtonEl: any \u003d fixture.debugElement"},{"lineNumber":317,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#cancel-edit-instructor-${expectedIndex}`))"},{"lineNumber":318,"author":{"gitId":"jayasting98"},"content":"      .nativeElement;"},{"lineNumber":319,"author":{"gitId":"jayasting98"},"content":"    cancelButtonEl.click();"},{"lineNumber":320,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":321,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":322,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":323,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":324,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorName).toEqual(expectedInstructorData.name);"},{"lineNumber":325,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorEmail).toEqual(expectedInstructorData.email);"},{"lineNumber":326,"author":{"gitId":"jayasting98"},"content":"    expect(component.editedInstructorInstitution).toEqual(expectedInstructorData.institution);"},{"lineNumber":327,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":328,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":329,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should snap with default view\u0027, () \u003d\u003e {"},{"lineNumber":330,"author":{"gitId":"jayasting98"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":331,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":332,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":333,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should snap with start of edit\u0027, () \u003d\u003e {"},{"lineNumber":334,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":335,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":336,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":337,"author":{"gitId":"jayasting98"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":338,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":339,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":340,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should snap with instructor details edited\u0027, () \u003d\u003e {"},{"lineNumber":341,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":342,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":343,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":344,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorName \u003d \u0027Edited Name\u0027;"},{"lineNumber":345,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorEmail \u003d \u0027Edited@ema.il\u0027;"},{"lineNumber":346,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorInstitution \u003d \u0027Edited Institution\u0027;"},{"lineNumber":347,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":348,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":349,"author":{"gitId":"jayasting98"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":350,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":351,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":352,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should snap with edit confirmed\u0027, () \u003d\u003e {"},{"lineNumber":353,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":354,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":355,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":356,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorName \u003d \u0027Edited Name\u0027;"},{"lineNumber":357,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorEmail \u003d \u0027Edited@ema.il\u0027;"},{"lineNumber":358,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorInstitution \u003d \u0027Edited Institution\u0027;"},{"lineNumber":359,"author":{"gitId":"jayasting98"},"content":"    const confirmButtonEl: any \u003d fixture.debugElement"},{"lineNumber":360,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#confirm-edit-instructor-${expectedIndex}`))"},{"lineNumber":361,"author":{"gitId":"jayasting98"},"content":"      .nativeElement;"},{"lineNumber":362,"author":{"gitId":"jayasting98"},"content":"    confirmButtonEl.click();"},{"lineNumber":363,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":364,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":365,"author":{"gitId":"jayasting98"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":366,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":367,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":368,"author":{"gitId":"jayasting98"},"content":"  it(\u0027should snap with edit cancelled\u0027, () \u003d\u003e {"},{"lineNumber":369,"author":{"gitId":"jayasting98"},"content":"    editButtonEl.click();"},{"lineNumber":370,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":371,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":372,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorName \u003d \u0027Edited Name\u0027;"},{"lineNumber":373,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorEmail \u003d \u0027Edited@ema.il\u0027;"},{"lineNumber":374,"author":{"gitId":"jayasting98"},"content":"    component.editedInstructorInstitution \u003d \u0027Edited Institution\u0027;"},{"lineNumber":375,"author":{"gitId":"jayasting98"},"content":"    const cancelButtonEl: any \u003d fixture.debugElement"},{"lineNumber":376,"author":{"gitId":"jayasting98"},"content":"      .query(By.css(`#cancel-edit-instructor-${expectedIndex}`))"},{"lineNumber":377,"author":{"gitId":"jayasting98"},"content":"      .nativeElement;"},{"lineNumber":378,"author":{"gitId":"jayasting98"},"content":"    cancelButtonEl.click();"},{"lineNumber":379,"author":{"gitId":"jayasting98"},"content":"    fixture.detectChanges();"},{"lineNumber":380,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":381,"author":{"gitId":"jayasting98"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":382,"author":{"gitId":"jayasting98"},"content":"  });"},{"lineNumber":383,"author":{"gitId":"jayasting98"},"content":"});"}],"authorContributionMap":{"jayasting98":310,"-":17,"samuelfangjw":56}},{"path":"src/web/app/pages-admin/admin-home-page/new-instructor-data-row/new-instructor-data-row.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"import { InstructorData } from \u0027../instructor-data\u0027;"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" * A single row of data of a new instructor."},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"@Component({"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"  // The following selector code style violation of https://angular.io/guide/styleguide#style-05-02 and"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"  // https://angular.io/guide/styleguide#style-05-03 seems necessary according to"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"  // https://stackoverflow.com/questions/55446740/how-to-add-row-component-in-table-in-angular-7"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  // eslint-disable-next-line @angular-eslint/component-selector"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"  selector: \u0027tr[tm-new-instructor-data-row]\u0027,"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"  templateUrl: \u0027./new-instructor-data-row.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"  styleUrls: [\u0027./new-instructor-data-row.component.scss\u0027],"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"})"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"export class NewInstructorDataRowComponent implements OnInit {"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"  @Input() instructor!: InstructorData;"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"  @Input() index!: number;"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"  @Input() isAddDisabled!: boolean;"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"  @Output() addInstructorEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"  @Output() removeInstructorEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"  @Output() toggleEditModeEvent: EventEmitter\u003cboolean\u003e \u003d new EventEmitter();"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"  @Output() showRegisteredInstructorModalEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"  isBeingEdited: boolean \u003d false;"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"  editedInstructorName!: string;"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"  editedInstructorEmail!: string;"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"  editedInstructorInstitution!: string;"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"  ngOnInit(): void {"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    this.resetEditedInstructorDetails();"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"  addInstructor(): void {"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"    this.addInstructorEvent.emit();"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"  removeInstructor(): void {"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"    this.removeInstructorEvent.emit();"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"  showRegisteredInstructorModal(): void {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    this.showRegisteredInstructorModalEvent.emit();"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"  /**"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"   * Starts editing the instructor."},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"   */"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"  editInstructor(): void {"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"    this.setEditModeAndAlertParent(true);"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"  /**"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"   * Confirms the edit of the instructor\u0027s details."},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"   */"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"  confirmEditInstructor(): void {"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"    this.instructor.name \u003d this.editedInstructorName;"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"    this.instructor.email \u003d this.editedInstructorEmail;"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"    this.instructor.institution \u003d this.editedInstructorInstitution;"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"    this.setEditModeAndAlertParent(false);"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"  /**"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"   * Cancels the edit of the instructor\u0027s details."},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"   */"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"  cancelEditInstructor(): void {"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"    this.setEditModeAndAlertParent(false);"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"    this.resetEditedInstructorDetails();"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"  /**"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"   * Resets the edited instructor details to the original details."},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"   */"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"  private resetEditedInstructorDetails(): void {"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"    this.editedInstructorName \u003d this.instructor.name;"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"    this.editedInstructorEmail \u003d this.instructor.email;"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"    this.editedInstructorInstitution \u003d this.instructor.institution;"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"  /**"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"   * Sets whether edit mode is enabled and then alerts the parent of the new status."},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"   *"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"   * @param isEnabled Whether edit mode is enabled."},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"  private setEditModeAndAlertParent(isEnabled: boolean): void {"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"    this.isBeingEdited \u003d isEnabled;"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":"    this.alertParentEditModeToggled();"},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"  /**"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"   * Alerts the parent that the edit mode was toggled and passes whether this is in edit mode or not."},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"   */"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":"  private alertParentEditModeToggled(): void {"},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"    this.toggleEditModeEvent.emit(this.isBeingEdited);"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":""},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"}"}],"authorContributionMap":{"jayasting98":91,"-":1,"samuelfangjw":5}},{"path":"src/web/app/pages-admin/admin-search-page/admin-search-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light top-padded\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cp class\u003d\"text-muted\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      Tips: Surround key word to search a whole string or string contains punctuation like \"-\" \".\""},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"input-group\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cinput id\u003d\"search-box\" type\u003d\"text\" class\u003d\"form-control\" [(ngModel)]\u003d\"searchQuery\" (keyup.enter)\u003d\"search()\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"input-group-append\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"          \u003cbutton id\u003d\"search-button\" class\u003d\"btn btn-primary\" (click)\u003d\"search()\"\u003eSearch\u003c/button\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light top-padded\" *ngIf\u003d\"instructors.length\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-header bg-info text-white\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cstrong\u003eInstructors Found\u003c/strong\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"show-instructor-links\" class\u003d\"btn btn-light btn-sm\" style\u003d\"margin-right: 10px;\" type\u003d\"button\" (click)\u003d\"showAllInstructorsLinks()\"\u003eExpand All\u003c/button\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"hide-instructor-links\" class\u003d\"btn btn-light btn-sm\" type\u003d\"button\" (click)\u003d\"hideAllInstructorsLinks()\"\u003eCollapse All\u003c/button\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"table-responsive\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003ctable id\u003d\"search-table-instructor\" class\u003d\"table table-striped data-table\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cthead\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003ctr\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cth\u003eCourse\u003c/th\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cth\u003eName\u003c/th\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cth\u003eGoogle ID\u003c/th\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cth\u003eInstitute\u003c/th\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cth\u003eOptions\u003c/th\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/tr\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/thead\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003ctbody\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cng-container *ngFor\u003d\"let instructor of instructors; let i \u003d index\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003ctr (click)\u003d\"instructor.showLinks \u003d !instructor.showLinks\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003ctd class\u003d\"text-break\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cspan [ngbTooltip]\u003d\"instructor.courseName\"\u003e{{ instructor.courseId }}\u003c/span\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"              \u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-sm-1\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003cbutton *ngIf\u003d\"!instructor.showLinks\" class\u003d\"btn\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-chevron-circle-down\" style\u003d\"color: blue;\"\u003e\u003c/i\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003cbutton *ngIf\u003d\"instructor.showLinks\" class\u003d\"btn\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-chevron-circle-up\" style\u003d\"color: blue;\"\u003e\u003c/i\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ instructor.name }}\u003c/td\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003ca href\u003d\"{{ instructor.homePageLink }}\" (click)\u003d\"$event.stopPropagation()\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              {{ instructor.googleId }}\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ instructor.institute }}\u003c/td\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003ctd\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003ca href\u003d\"{{ instructor.manageAccountLink }}\" *ngIf\u003d\"instructor.manageAccountLink\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                 (click)\u003d\"$event.stopPropagation()\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e Manage this account"},{"lineNumber":59,"author":{"gitId":"-"},"content":"              \u003c/a\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"              \u003cbr\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              \u003ca id\u003d\"reset-instructor-id-{{i}}\" href\u003d\"javascript:;\" (click)\u003d\"resetInstructorGoogleId(instructor, $event)\" *ngIf\u003d\"instructor.googleId\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sync\"\u003e\u003c/i\u003e Reset Google ID"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003c/a\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"              \u003cbr\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"regenerate-instructor-key-{{i}}\" class\u003d\"btn btn-danger\" (click)\u003d\"instructor.showLinks \u003d !instructor.showLinks; regenerateInstructorKey(instructor);\"\u003eRegenerate key\u003c/button\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003ctr *ngIf\u003d\"instructor.showLinks\"\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003ctd colspan\u003d\"5\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"              \u003cul class\u003d\"list-group\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-success has-success\"\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003eEmail\u003c/strong\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"instructor.email\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-info\"\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003eCourse Join Link\u003c/strong\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"instructor.courseJoinLink\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-light\" *ngFor\u003d\"let awaitingFs of instructor.awaitingSessions | keyvalue\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003e{{ awaitingFs.key + \u0027 \u0027 + awaitingFs.value.startTime + \u0027 - \u0027 + awaitingFs.value.endTime }}\u003c/strong\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"awaitingFs.value.feedbackSessionUrl\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-warning\" *ngFor\u003d\"let openFs of instructor.openSessions | keyvalue\"\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003e{{ openFs.key + \u0027 \u0027 + openFs.value.startTime + \u0027 - \u0027 + openFs.value.endTime }}\u003c/strong\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"openFs.value.feedbackSessionUrl\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-danger\" *ngFor\u003d\"let notOpenFs of instructor.notOpenSessions | keyvalue\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003e{{ notOpenFs.key + \u0027 \u0027 + notOpenFs.value.startTime + \u0027 - \u0027 + notOpenFs.value.endTime }}\u003c/strong\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"notOpenFs.value.feedbackSessionUrl\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-success\" *ngFor\u003d\"let publishedFs of instructor.publishedSessions | keyvalue\"\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003e{{ publishedFs.key + \u0027 \u0027 + publishedFs.value.startTime + \u0027 - \u0027 + publishedFs.value.endTime }}\u003c/strong\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"publishedFs.value.feedbackSessionUrl\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"              \u003c/ul\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c/tbody\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    \u003c/table\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light top-padded\" *ngIf\u003d\"students.length\"\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-header bg-primary text-white\"\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u003cstrong\u003eStudents Found\u003c/strong\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"show-student-links\" class\u003d\"btn btn-light btn-sm\" style\u003d\"margin-right: 10px;\" type\u003d\"button\" (click)\u003d\"showAllStudentsLinks()\"\u003eExpand All\u003c/button\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"hide-student-links\" class\u003d\"btn btn-light btn-sm\" type\u003d\"button\" (click)\u003d\"hideAllStudentsLinks()\"\u003eCollapse All\u003c/button\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"table-responsive\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    \u003ctable class\u003d\"table table-striped data-table\" id\u003d\"search-table-student\"\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cthead\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        \u003ctr\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          \u003cth\u003eCourse [Section] (Team)\u003c/th\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          \u003cth\u003eName\u003c/th\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003cth\u003eGoogle ID\u003c/th\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          \u003cth\u003eInstitute\u003c/th\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003cth\u003eComments\u003c/th\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          \u003cth\u003eOptions\u003c/th\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        \u003c/tr\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003c/thead\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      \u003ctbody\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003cng-container *ngFor\u003d\"let student of students; let i \u003d index\"\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          \u003ctr (click)\u003d\"student.showLinks \u003d !student.showLinks\"\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            \u003ctd\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"text-break\" [ngbTooltip]\u003d\"student.courseName\"\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                {{ student.courseId }} [{{ student.section }}] ({{ student.team }})"},{"lineNumber":131,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"              \u003cbr\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-sm-1\"\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u003cbutton *ngIf\u003d\"!student.showLinks\" class\u003d\"btn\"\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-chevron-circle-down\" style\u003d\"color: blue;\"\u003e\u003c/i\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u003cbutton *ngIf\u003d\"student.showLinks\" class\u003d\"btn\"\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-chevron-circle-up\" style\u003d\"color: blue;\"\u003e\u003c/i\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.name }}\u003c/td\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003ca href\u003d\"{{ student.homePageLink }}\" *ngIf\u003d\"student.googleId\""},{"lineNumber":144,"author":{"gitId":"-"},"content":"                   (click)\u003d\"$event.stopPropagation()\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"              {{ student.googleId }}\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.institute }}\u003c/td\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.comments }}\u003c/td\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            \u003ctd\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"              \u003ca href\u003d\"{{ student.manageAccountLink }}\" *ngIf\u003d\"student.googleId \u0026\u0026 student.manageAccountLink\""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                 (click)\u003d\"$event.stopPropagation()\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e Manage this account"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              \u003c/a\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"              \u003cbr\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"              \u003ca id\u003d\"reset-student-id-{{i}}\" href\u003d\"javascript:;\" (click)\u003d\"resetStudentGoogleId(student, $event)\" *ngIf\u003d\"student.googleId\"\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sync\"\u003e\u003c/i\u003e Reset Google ID"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              \u003c/a\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"              \u003cbr\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"regenerate-student-key-{{i}}\" class\u003d\"btn btn-danger\" (click)\u003d\"student.showLinks \u003d !student.showLinks; regenerateStudentKey(student);\"\u003eRegenerate key\u003c/button\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"          \u003ctr\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            \u003ctd colspan\u003d\"6\"\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"              \u003cul class\u003d\"list-group\" *ngIf\u003d\"student.showLinks\" @collapseAnim\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-success has-success\"\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003eEmail\u003c/strong\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"student.email\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-info\"\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003eCourse Join Link\u003c/strong\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"send-course-join-button\" type\u003d\"button\" class\u003d\"btn btn-primary margin-left-5px btn-sm\" (click)\u003d\"openCourseJoinEmail(student.courseId, student.email)\"\u003eSend mail\u003c/button\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"student.courseJoinLink\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-light\" *ngFor\u003d\"let awaitingFs of student.awaitingSessions | keyvalue\"\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003e{{ awaitingFs.key + \u0027 \u0027 + awaitingFs.value.startTime + \u0027 - \u0027 + awaitingFs.value.endTime }}\u003c/strong\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"send-awaiting-session-reminder-button\" type\u003d\"button\" class\u003d\"btn btn-primary margin-left-5px btn-sm\" (click)\u003d\"openFeedbackSessionReminderEmail(student.courseId, student.email, awaitingFs.key)\"\u003eSend mail\u003c/button\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"awaitingFs.value.feedbackSessionUrl\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-warning\" *ngFor\u003d\"let openFs of student.openSessions | keyvalue\"\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003e{{ openFs.key + \u0027 \u0027 + openFs.value.startTime + \u0027 - \u0027 + openFs.value.endTime }}\u003c/strong\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"send-open-session-reminder-button\" type\u003d\"button\" class\u003d\"btn btn-primary margin-left-5px btn-sm\" (click)\u003d\"openFeedbackSessionReminderEmail(student.courseId, student.email, openFs.key)\"\u003eSend mail\u003c/button\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"openFs.value.feedbackSessionUrl\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-danger\" *ngFor\u003d\"let notOpenFs of student.notOpenSessions | keyvalue\"\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003e{{ notOpenFs.key + \u0027 \u0027 + notOpenFs.value.startTime + \u0027 - \u0027 + notOpenFs.value.endTime }}\u003c/strong\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"send-not-open-session-reminder-button\" type\u003d\"button\" class\u003d\"btn btn-primary margin-left-5px btn-sm\" (click)\u003d\"openFeedbackSessionReminderEmail(student.courseId, student.email, notOpenFs.key)\"\u003eSend mail\u003c/button\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"notOpenFs.value.feedbackSessionUrl\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-success\" *ngFor\u003d\"let publishedFs of student.publishedSessions | keyvalue\"\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                  \u003cstrong\u003e{{ publishedFs.key + \u0027 \u0027 + publishedFs.value.startTime + \u0027 - \u0027 + publishedFs.value.endTime }}\u003c/strong\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"send-published-session-reminder-button\" type\u003d\"button\" class\u003d\"btn btn-primary margin-left-5px btn-sm\" (click)\u003d\"openFeedbackSessionReminderEmail(student.courseId, student.email, publishedFs.key)\"\u003eSend mail\u003c/button\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                  \u003cinput [value]\u003d\"publishedFs.value.feedbackSessionUrl\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"              \u003c/ul\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      \u003c/tbody\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    \u003c/table\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv class\u003d\"card bg-light top-padded\" *ngIf\u003d\"accountRequests.length\"\u003e"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"  \u003cdiv class\u003d\"card-header bg-primary text-white\"\u003e"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"    \u003cstrong\u003eAccount Requests Found\u003c/strong\u003e"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"    \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"      \u003cbutton id\u003d\"show-account-request-links\" class\u003d\"btn btn-light btn-sm\" style\u003d\"margin-right: 10px;\" type\u003d\"button\" (click)\u003d\"showAllAccountRequestsLinks()\"\u003eExpand All\u003c/button\u003e"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"      \u003cbutton id\u003d\"hide-account-request-links\" class\u003d\"btn btn-light btn-sm\" type\u003d\"button\" (click)\u003d\"hideAllAccountRequestsLinks()\"\u003eCollapse All\u003c/button\u003e"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/div\u003e"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/div\u003e"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"  \u003cdiv class\u003d\"table-responsive\"\u003e"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"    \u003ctable class\u003d\"table table-striped data-table\" id\u003d\"search-table-account-request\"\u003e"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"      \u003cthead\u003e"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"        \u003ctr\u003e"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"          \u003cth\u003eName\u003c/th\u003e"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"          \u003cth\u003eEmail\u003c/th\u003e"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"          \u003cth\u003eInstitute\u003c/th\u003e"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"          \u003cth\u003eCreated At\u003c/th\u003e"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"          \u003cth\u003eRegistered At\u003c/th\u003e"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"          \u003cth\u003eOptions\u003c/th\u003e"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/tr\u003e"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/thead\u003e"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"      \u003ctbody\u003e"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"        \u003cng-container *ngFor\u003d\"let accountRequest of accountRequests; let i \u003d index\"\u003e"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"          \u003ctr (click)\u003d\"accountRequest.showLinks \u003d !accountRequest.showLinks\"\u003e"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd\u003e"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"              {{ accountRequest.name }}"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"              \u003cbr\u003e"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"              \u003cdiv class\u003d\"col-sm-1\"\u003e"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"                \u003cbutton *ngIf\u003d\"!accountRequest.showLinks\" class\u003d\"btn\"\u003e"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"                  \u003ci class\u003d\"fas fa-chevron-circle-down\" style\u003d\"color: blue;\"\u003e\u003c/i\u003e"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"                \u003c/button\u003e"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"                \u003cbutton *ngIf\u003d\"accountRequest.showLinks\" class\u003d\"btn\"\u003e"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"                  \u003ci class\u003d\"fas fa-chevron-circle-up\" style\u003d\"color: blue;\"\u003e\u003c/i\u003e"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"                \u003c/button\u003e"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/div\u003e"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/td\u003e"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd\u003e{{ accountRequest.email }}\u003c/td\u003e"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd\u003e{{ accountRequest.institute }}\u003c/td\u003e"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd\u003e{{ accountRequest.createdAtText }}\u003c/td\u003e"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd\u003e{{ accountRequest.registeredAtText || \u0027Not Registered Yet\u0027 }}\u003c/td\u003e"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd\u003e"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"              \u003ca id\u003d\"reset-account-request-{{i}}\" href\u003d\"javascript:;\" (click)\u003d\"$event.stopPropagation(); resetAccountRequest(accountRequest);\" *ngIf\u003d\"accountRequest.registeredAtText\"\u003e"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"                \u003ci class\u003d\"fas fa-sync\"\u003e\u003c/i\u003e Reset Account Request"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/a\u003e"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"              \u003cdiv class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"accountRequest.registeredAtText \u0026\u0026 \u0027Account requests of registered instructors cannot be deleted\u0027\"\u003e"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"                \u003cbutton id\u003d\"delete-account-request-{{i}}\" class\u003d\"btn btn-danger\" [disabled]\u003d\"accountRequest.registeredAtText\" (click)\u003d\"$event.stopPropagation(); deleteAccountRequest(accountRequest);\"\u003eDelete\u003c/button\u003e"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/div\u003e"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/td\u003e"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/tr\u003e"},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"          \u003ctr *ngIf\u003d\"accountRequest.showLinks\"\u003e"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"            \u003ctd colspan\u003d\"6\"\u003e"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"              \u003cul class\u003d\"list-group\" *ngIf\u003d\"accountRequest.showLinks\" @collapseAnim\u003e"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"                \u003cli class\u003d\"list-group-item list-group-item-info\"\u003e"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"                  \u003cstrong\u003eAccount Registration Link\u003c/strong\u003e"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"                  \u003cinput [value]\u003d\"accountRequest.registrationLink\" readonly class\u003d\"form-control\"\u003e"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":"                \u003c/li\u003e"},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/ul\u003e"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/td\u003e"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/tr\u003e"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/tbody\u003e"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/table\u003e"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/div\u003e"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"-":200,"samuelfangjw":65}},{"path":"src/web/app/pages-admin/admin-search-page/admin-search-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgbModal, NgbTooltipModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import SpyInstance \u003d jest.SpyInstance;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AccountService } from \u0027../../../services/account.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { EmailGenerationService } from \u0027../../../services/email-generation.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  AccountRequestSearchResult,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  FeedbackSessionsGroup, InstructorAccountSearchResult,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  SearchService, StudentAccountSearchResult,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027../../../services/search.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { createMockNgbModalRef } from \u0027../../../test-helpers/mock-ngb-modal-ref\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { AdminSearchPageComponent } from \u0027./admin-search-page.component\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"const DEFAULT_FEEDBACK_SESSION_GROUP: FeedbackSessionsGroup \u003d {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  sessionName: {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    feedbackSessionUrl: \u0027sessionUrl\u0027,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    startTime: \u0027startTime\u0027,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    endTime: \u0027endTime\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":27,"author":{"gitId":"-"},"content":"};"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"const DEFAULT_STUDENT_SEARCH_RESULT: StudentAccountSearchResult \u003d {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  name: \u0027name\u0027,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  email: \u0027email\u0027,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  googleId: \u0027googleId\u0027,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  courseId: \u0027courseId\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  courseName: \u0027courseName\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  institute: \u0027institute\u0027,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  courseJoinLink: \u0027courseJoinLink\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  homePageLink: \u0027homePageLink\u0027,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  manageAccountLink: \u0027manageAccountLink\u0027,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  showLinks: false,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  section: \u0027section\u0027,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  team: \u0027team\u0027,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  comments: \u0027comments\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  recordsPageLink: \u0027recordsPageLink\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"};"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"const DEFAULT_INSTRUCTOR_SEARCH_RESULT: InstructorAccountSearchResult \u003d {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  name: \u0027name\u0027,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  email: \u0027email\u0027,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  googleId: \u0027googleId\u0027,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  courseId: \u0027courseId\u0027,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  courseName: \u0027courseName\u0027,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  institute: \u0027institute\u0027,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  courseJoinLink: \u0027courseJoinLink\u0027,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  homePageLink: \u0027homePageLink\u0027,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  manageAccountLink: \u0027manageAccountLink\u0027,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  showLinks: false,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"};"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"const DEFAULT_ACCOUNT_REQUEST_SEARCH_RESULT: AccountRequestSearchResult \u003d {"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"  name: \u0027name\u0027,"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"  email: \u0027email\u0027,"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"  institute: \u0027institute\u0027,"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"  registrationLink: \u0027registrationLink\u0027,"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"  createdAtText: \u0027Tue, 08 Feb 2022, 08:23 AM +00:00\u0027,"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"  registeredAtText: null,"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"  showLinks: false,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"};"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"describe(\u0027AdminSearchPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  let component: AdminSearchPageComponent;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cAdminSearchPageComponent\u003e;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  let accountService: AccountService;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  let searchService: SearchService;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  let instructorService: InstructorService;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  let studentService: StudentService;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  let statusMessageService: StatusMessageService;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  let emailGenerationService: EmailGenerationService;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  let ngbModal: NgbModal;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      declarations: [AdminSearchPageComponent],"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        NgbTooltipModule,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        BrowserAnimationsModule,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      providers: [AccountService, SearchService, StatusMessageService, NgbModal],"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(AdminSearchPageComponent);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    accountService \u003d TestBed.inject(AccountService);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    searchService \u003d TestBed.inject(SearchService);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    instructorService \u003d TestBed.inject(InstructorService);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    statusMessageService \u003d TestBed.inject(StatusMessageService);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    emailGenerationService \u003d TestBed.inject(EmailGenerationService);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ngbModal \u003d TestBed.inject(NgbModal);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, (() \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"  it(\u0027should snap with a search key\u0027, () \u003d\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    component.searchQuery \u003d \u0027TEST\u0027;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"  it(\u0027should snap with an expanded instructor table\u0027, () \u003d\u003e {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    component.instructors \u003d ["},{"lineNumber":131,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        name: \u0027tester\u0027,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        email: \u0027tester@tester.com\u0027,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        googleId: \u0027instructor-google-id\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        courseId: \u0027test-exa.demo\u0027,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        courseName: \u0027demo\u0027,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        institute: \u0027institute\u0027,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        courseJoinLink: \u0027course-join-link\u0027,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        homePageLink: \u0027home-page-link\u0027,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        manageAccountLink: \u0027manage-account-link\u0027,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showLinks: true,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  it(\u0027should snap with an expanded student table\u0027, () \u003d\u003e {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    component.students \u003d ["},{"lineNumber":155,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        name: \u0027Alice Betsy\u0027,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        email: \u0027alice.b.tmms@gmail.tmt\u0027,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        googleId: \u0027student-google-id\u0027,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        courseId: \u0027test-exa.demo\u0027,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        courseName: \u0027demo\u0027,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        institute: \u0027institute\u0027,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        courseJoinLink: \u0027course-join-link\u0027,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        homePageLink: \u0027home-page-link\u0027,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        manageAccountLink: \u0027manage-account-link\u0027,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        showLinks: true,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        section: \u0027section\u0027,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        team: \u0027team\u0027,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        comments: \u0027comments\u0027,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        recordsPageLink: \u0027records-page-link\u0027,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should snap with an expanded account requests table\u0027, () \u003d\u003e {"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"    component.accountRequests \u003d ["},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"      {"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"        name: \u0027name\u0027,"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"        email: \u0027email\u0027,"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"        institute: \u0027institute\u0027,"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"        registrationLink: \u0027registrationLink\u0027,"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"        createdAtText: \u0027Tue, 08 Feb 2022, 08:23 AM +00:00\u0027,"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        registeredAtText: null,"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"        showLinks: true,"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"    ];"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  it(\u0027should display error message for invalid input\u0027, () \u003d\u003e {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    jest.spyOn(searchService, \u0027searchAdmin\u0027).mockReturnValue(throwError({"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      error: {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        message: \u0027This is the error message\u0027,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showErrorToast\u0027)"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027This is the error message\u0027);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#search-button\u0027);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"  it(\u0027should display warning message for no results\u0027, () \u003d\u003e {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    jest.spyOn(searchService, \u0027searchAdmin\u0027).mockReturnValue(of({"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      students: [],"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      instructors: [],"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"      accountRequests: [],"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showWarningToast\u0027)"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027No results found.\u0027);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#search-button\u0027);"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"  it(\u0027should display instructor results\u0027, () \u003d\u003e {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    const instructorResults: InstructorAccountSearchResult[] \u003d ["},{"lineNumber":236,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        name: \u0027name1\u0027,"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        email: \u0027email1\u0027,"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        googleId: \u0027googleId1\u0027,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        courseId: \u0027courseId1\u0027,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        courseName: \u0027courseName1\u0027,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        institute: \u0027institute1\u0027,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        courseJoinLink: \u0027courseJoinLink1\u0027,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        homePageLink: \u0027homePageLink1\u0027,"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        manageAccountLink: \u0027manageAccountLink1\u0027,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        showLinks: true,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        name: \u0027name2\u0027,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        email: \u0027email2\u0027,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        googleId: \u0027googleId2\u0027,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        courseId: \u0027courseId2\u0027,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        courseName: \u0027courseName2\u0027,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        institute: \u0027institute2\u0027,"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        courseJoinLink: \u0027courseJoinLink2\u0027,"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        homePageLink: \u0027homePageLink2\u0027,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        manageAccountLink: \u0027manageAccountLink2\u0027,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        showLinks: true,"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      }];"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    jest.spyOn(searchService, \u0027searchAdmin\u0027).mockReturnValue(of({"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      students: [],"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      instructors: instructorResults,"},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"      accountRequests: [],"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    component.searchQuery \u003d \u0027name\u0027;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#search-button\u0027);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"    expect(component.students.length).toEqual(0);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    expect(component.instructors.length).toEqual(2);"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.accountRequests.length).toEqual(0);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    expect(component.instructors).toEqual(instructorResults);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    expect(component.instructors[0].showLinks).toEqual(false);"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    expect(component.instructors[1].showLinks).toEqual(false);"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"  it(\u0027should display student results\u0027, () \u003d\u003e {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    const studentResults: StudentAccountSearchResult[] \u003d ["},{"lineNumber":289,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        name: \u0027name1\u0027,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        email: \u0027email1\u0027,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        googleId: \u0027googleId1\u0027,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        courseId: \u0027courseId1\u0027,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        courseName: \u0027courseName1\u0027,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        institute: \u0027institute1\u0027,"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        courseJoinLink: \u0027courseJoinLink1\u0027,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        homePageLink: \u0027homePageLink1\u0027,"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        manageAccountLink: \u0027manageAccountLink1\u0027,"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        showLinks: true,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        section: \u0027section1\u0027,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        team: \u0027team1\u0027,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        comments: \u0027comments1\u0027,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        recordsPageLink: \u0027recordsPageLink1\u0027,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      }, {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        name: \u0027name2\u0027,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        email: \u0027email2\u0027,"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        googleId: \u0027googleId2\u0027,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        courseId: \u0027courseId2\u0027,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        courseName: \u0027courseName2\u0027,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        institute: \u0027institute2\u0027,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        courseJoinLink: \u0027courseJoinLink2\u0027,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        homePageLink: \u0027homePageLink2\u0027,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        manageAccountLink: \u0027manageAccountLink2\u0027,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        showLinks: true,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        section: \u0027section2\u0027,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        team: \u0027team2\u0027,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        comments: \u0027comments2\u0027,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        recordsPageLink: \u0027recordsPageLink2\u0027,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      }];"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"    jest.spyOn(searchService, \u0027searchAdmin\u0027).mockReturnValue(of({"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      students: studentResults,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      instructors: [],"},{"lineNumber":332,"author":{"gitId":"samuelfangjw"},"content":"      accountRequests: [],"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    component.searchQuery \u003d \u0027name\u0027;"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#search-button\u0027);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"    expect(component.students.length).toEqual(2);"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    expect(component.instructors.length).toEqual(0);"},{"lineNumber":341,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.accountRequests.length).toEqual(0);"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    expect(component.students).toEqual(studentResults);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    expect(component.students[0].showLinks).toEqual(false);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    expect(component.students[1].showLinks).toEqual(false);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should display account request results\u0027, () \u003d\u003e {"},{"lineNumber":348,"author":{"gitId":"samuelfangjw"},"content":"    const accountRequestResults: AccountRequestSearchResult[] \u003d ["},{"lineNumber":349,"author":{"gitId":"samuelfangjw"},"content":"      {"},{"lineNumber":350,"author":{"gitId":"samuelfangjw"},"content":"        name: \u0027name1\u0027,"},{"lineNumber":351,"author":{"gitId":"samuelfangjw"},"content":"        email: \u0027email1\u0027,"},{"lineNumber":352,"author":{"gitId":"samuelfangjw"},"content":"        institute: \u0027institute1\u0027,"},{"lineNumber":353,"author":{"gitId":"samuelfangjw"},"content":"        registrationLink: \u0027registrationLink1\u0027,"},{"lineNumber":354,"author":{"gitId":"samuelfangjw"},"content":"        createdAtText: \u0027Tue, 08 Feb 2022, 08:23 AM +00:00\u0027,"},{"lineNumber":355,"author":{"gitId":"samuelfangjw"},"content":"        registeredAtText: null,"},{"lineNumber":356,"author":{"gitId":"samuelfangjw"},"content":"        showLinks: true,"},{"lineNumber":357,"author":{"gitId":"samuelfangjw"},"content":"      }, {"},{"lineNumber":358,"author":{"gitId":"samuelfangjw"},"content":"        name: \u0027name2\u0027,"},{"lineNumber":359,"author":{"gitId":"samuelfangjw"},"content":"        email: \u0027email2\u0027,"},{"lineNumber":360,"author":{"gitId":"samuelfangjw"},"content":"        institute: \u0027institute2\u0027,"},{"lineNumber":361,"author":{"gitId":"samuelfangjw"},"content":"        registrationLink: \u0027registrationLink2\u0027,"},{"lineNumber":362,"author":{"gitId":"samuelfangjw"},"content":"        createdAtText: \u0027Tue, 08 Feb 2022, 08:23 AM +00:00\u0027,"},{"lineNumber":363,"author":{"gitId":"samuelfangjw"},"content":"        registeredAtText: \u0027Wed, 09 Feb 2022, 10:23 AM +00:00\u0027,"},{"lineNumber":364,"author":{"gitId":"samuelfangjw"},"content":"        showLinks: true,"},{"lineNumber":365,"author":{"gitId":"samuelfangjw"},"content":"      }];"},{"lineNumber":366,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"    jest.spyOn(searchService, \u0027searchAdmin\u0027).mockReturnValue(of({"},{"lineNumber":368,"author":{"gitId":"samuelfangjw"},"content":"      students: [],"},{"lineNumber":369,"author":{"gitId":"samuelfangjw"},"content":"      instructors: [],"},{"lineNumber":370,"author":{"gitId":"samuelfangjw"},"content":"      accountRequests: accountRequestResults,"},{"lineNumber":371,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":372,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":373,"author":{"gitId":"samuelfangjw"},"content":"    component.searchQuery \u003d \u0027name\u0027;"},{"lineNumber":374,"author":{"gitId":"samuelfangjw"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#search-button\u0027);"},{"lineNumber":375,"author":{"gitId":"samuelfangjw"},"content":"    button.click();"},{"lineNumber":376,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":377,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.students.length).toEqual(0);"},{"lineNumber":378,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.instructors.length).toEqual(0);"},{"lineNumber":379,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.accountRequests.length).toEqual(2);"},{"lineNumber":380,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.accountRequests).toEqual(accountRequestResults);"},{"lineNumber":381,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.accountRequests[0].showLinks).toEqual(false);"},{"lineNumber":382,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.accountRequests[1].showLinks).toEqual(false);"},{"lineNumber":383,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":384,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"  it(\u0027should show instructor links when expand all button clicked\u0027, () \u003d\u003e {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    const instructorResult: InstructorAccountSearchResult \u003d {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      name: \u0027name\u0027,"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      email: \u0027email\u0027,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      googleId: \u0027googleId\u0027,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      courseId: \u0027courseId\u0027,"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      courseName: \u0027courseName\u0027,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      institute: \u0027institute\u0027,"},{"lineNumber":393,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027courseJoinLink\u0027,"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      homePageLink: \u0027homePageLink\u0027,"},{"lineNumber":395,"author":{"gitId":"-"},"content":"      manageAccountLink: \u0027manageAccountLink\u0027,"},{"lineNumber":396,"author":{"gitId":"-"},"content":"      showLinks: false,"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    component.instructors \u003d [instructorResult];"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#show-instructor-links\u0027);"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    expect(component.instructors[0].showLinks).toEqual(true);"},{"lineNumber":408,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"  it(\u0027should show student links when expand all button clicked\u0027, () \u003d\u003e {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    const studentResult: StudentAccountSearchResult \u003d DEFAULT_STUDENT_SEARCH_RESULT;"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    component.students \u003d [studentResult];"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#show-student-links\u0027);"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    expect(component.students[0].showLinks).toEqual(true);"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should show account request links when expand all button clicked\u0027, () \u003d\u003e {"},{"lineNumber":421,"author":{"gitId":"samuelfangjw"},"content":"    const accountRequestResult: AccountRequestSearchResult \u003d DEFAULT_ACCOUNT_REQUEST_SEARCH_RESULT;"},{"lineNumber":422,"author":{"gitId":"samuelfangjw"},"content":"    component.accountRequests \u003d [accountRequestResult];"},{"lineNumber":423,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":424,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":425,"author":{"gitId":"samuelfangjw"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#show-account-request-links\u0027);"},{"lineNumber":426,"author":{"gitId":"samuelfangjw"},"content":"    button.click();"},{"lineNumber":427,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.accountRequests[0].showLinks).toEqual(true);"},{"lineNumber":428,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":429,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"  it(\u0027should show success message if successfully reset instructor google id\u0027, () \u003d\u003e {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    const instructorResult: InstructorAccountSearchResult \u003d {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      name: \u0027name\u0027,"},{"lineNumber":433,"author":{"gitId":"-"},"content":"      email: \u0027email\u0027,"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      googleId: \u0027googleId\u0027,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      courseId: \u0027courseId\u0027,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"      courseName: \u0027courseName\u0027,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      institute: \u0027institute\u0027,"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027courseJoinLink\u0027,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      homePageLink: \u0027homePageLink\u0027,"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      manageAccountLink: \u0027manageAccountLink\u0027,"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      showLinks: false,"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":444,"author":{"gitId":"-"},"content":"      notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"      publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    component.instructors \u003d [instructorResult];"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      return createMockNgbModalRef({"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        name: \u0027dummy\u0027, course: \u0027dummy\u0027,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"    jest.spyOn(accountService, \u0027resetInstructorAccount\u0027).mockReturnValue(of({"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      message: \u0027Success\u0027,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showSuccessToast\u0027)"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027The instructor\\\u0027s Google ID has been reset.\u0027);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"    const link: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#reset-instructor-id-0\u0027);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    link.click();"},{"lineNumber":466,"author":{"gitId":"-"},"content":""},{"lineNumber":467,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":468,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"  it(\u0027should show error message if fail to reset instructor google id\u0027, () \u003d\u003e {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    const instructorResult: InstructorAccountSearchResult \u003d {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      name: \u0027name\u0027,"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      email: \u0027email\u0027,"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      googleId: \u0027googleId\u0027,"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      courseId: \u0027courseId\u0027,"},{"lineNumber":476,"author":{"gitId":"-"},"content":"      courseName: \u0027courseName\u0027,"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      institute: \u0027institute\u0027,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027courseJoinLink\u0027,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"      homePageLink: \u0027homePageLink\u0027,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"      manageAccountLink: \u0027manageAccountLink\u0027,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      showLinks: false,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"      awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    component.instructors \u003d [instructorResult];"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":489,"author":{"gitId":"-"},"content":""},{"lineNumber":490,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"      return createMockNgbModalRef({"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        name: \u0027dummy\u0027, course: \u0027dummy\u0027,"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"    jest.spyOn(accountService, \u0027resetInstructorAccount\u0027).mockReturnValue(throwError({"},{"lineNumber":497,"author":{"gitId":"-"},"content":"      error: {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        message: \u0027This is the error message\u0027,"},{"lineNumber":499,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showErrorToast\u0027)"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027This is the error message\u0027);"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"    const link: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#reset-instructor-id-0\u0027);"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    link.click();"},{"lineNumber":509,"author":{"gitId":"-"},"content":""},{"lineNumber":510,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":511,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"  it(\u0027should show success message if successfully reset student google id\u0027, () \u003d\u003e {"},{"lineNumber":514,"author":{"gitId":"-"},"content":"    const studentResult: StudentAccountSearchResult \u003d DEFAULT_STUDENT_SEARCH_RESULT;"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    component.students \u003d [studentResult];"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      return createMockNgbModalRef({"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        name: \u0027dummy\u0027, course: \u0027dummy\u0027,"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"    jest.spyOn(accountService, \u0027resetStudentAccount\u0027).mockReturnValue(of({"},{"lineNumber":525,"author":{"gitId":"-"},"content":"      message: \u0027success\u0027,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showSuccessToast\u0027)"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":530,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027The student\\\u0027s Google ID has been reset.\u0027);"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"    const link: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#reset-student-id-0\u0027);"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    link.click();"},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":537,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"  it(\u0027should show error message if fail to reset student google id\u0027, () \u003d\u003e {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    const studentResult: StudentAccountSearchResult \u003d {"},{"lineNumber":541,"author":{"gitId":"-"},"content":"      name: \u0027name\u0027,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      email: \u0027email\u0027,"},{"lineNumber":543,"author":{"gitId":"-"},"content":"      googleId: \u0027googleId\u0027,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"      courseId: \u0027courseId\u0027,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      courseName: \u0027courseName\u0027,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"      institute: \u0027institute\u0027,"},{"lineNumber":547,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027courseJoinLink\u0027,"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      homePageLink: \u0027homePageLink\u0027,"},{"lineNumber":549,"author":{"gitId":"-"},"content":"      manageAccountLink: \u0027manageAccountLink\u0027,"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      showLinks: false,"},{"lineNumber":551,"author":{"gitId":"-"},"content":""},{"lineNumber":552,"author":{"gitId":"-"},"content":"      section: \u0027section\u0027,"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      team: \u0027team\u0027,"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      comments: \u0027comments\u0027,"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      recordsPageLink: \u0027recordsPageLink\u0027,"},{"lineNumber":556,"author":{"gitId":"-"},"content":"      awaitingSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":557,"author":{"gitId":"-"},"content":"      openSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      notOpenSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":559,"author":{"gitId":"-"},"content":"      publishedSessions: DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    component.students \u003d [studentResult];"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":563,"author":{"gitId":"-"},"content":""},{"lineNumber":564,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      return createMockNgbModalRef({"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        name: \u0027dummy\u0027, course: \u0027dummy\u0027,"},{"lineNumber":567,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"    jest.spyOn(accountService, \u0027resetStudentAccount\u0027).mockReturnValue(throwError({"},{"lineNumber":571,"author":{"gitId":"-"},"content":"      error: {"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        message: \u0027This is the error message.\u0027,"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":574,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":575,"author":{"gitId":"-"},"content":""},{"lineNumber":576,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showErrorToast\u0027)"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":578,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027This is the error message.\u0027);"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"    const link: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#reset-student-id-0\u0027);"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    link.click();"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":585,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"  it(\u0027should show success message and update all keys if successfully regenerated student registration key\u0027, () \u003d\u003e {"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    const studentResult: StudentAccountSearchResult \u003d {"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      ...DEFAULT_STUDENT_SEARCH_RESULT,"},{"lineNumber":590,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027courseJoinLink?key\u003doldKey\u0027,"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      awaitingSessions: {"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        ...DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        sessionName: {"},{"lineNumber":594,"author":{"gitId":"-"},"content":"          ...DEFAULT_FEEDBACK_SESSION_GROUP.sessionName,"},{"lineNumber":595,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: \u0027awaitingSession?key\u003doldKey\u0027,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":597,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      openSessions: {"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        ...DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        sessionName: {"},{"lineNumber":601,"author":{"gitId":"-"},"content":"          ...DEFAULT_FEEDBACK_SESSION_GROUP.sessionName,"},{"lineNumber":602,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: \u0027openSession?key\u003doldKey\u0027,"},{"lineNumber":603,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":604,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      notOpenSessions: {"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        ...DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        sessionName: {"},{"lineNumber":608,"author":{"gitId":"-"},"content":"          ...DEFAULT_FEEDBACK_SESSION_GROUP.sessionName,"},{"lineNumber":609,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: \u0027notOpenSession?key\u003doldKey\u0027,"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":611,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      publishedSessions: {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        ...DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        sessionName: {"},{"lineNumber":615,"author":{"gitId":"-"},"content":"          ...DEFAULT_FEEDBACK_SESSION_GROUP.sessionName,"},{"lineNumber":616,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: \u0027publishedSession?key\u003doldKey\u0027,"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":618,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    component.students \u003d [studentResult];"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      return createMockNgbModalRef({});"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"    jest.spyOn(studentService, \u0027regenerateStudentKey\u0027).mockReturnValue(of({"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      message: \u0027success\u0027,"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      newRegistrationKey: \u0027newKey\u0027,"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":631,"author":{"gitId":"-"},"content":""},{"lineNumber":632,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showSuccessToast\u0027)"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":634,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027success\u0027);"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"    const regenerateButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#regenerate-student-key-0\u0027);"},{"lineNumber":638,"author":{"gitId":"-"},"content":"    regenerateButton.click();"},{"lineNumber":639,"author":{"gitId":"-"},"content":""},{"lineNumber":640,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":641,"author":{"gitId":"-"},"content":""},{"lineNumber":642,"author":{"gitId":"-"},"content":"    expect(studentResult.courseJoinLink).toEqual(\u0027courseJoinLink?key\u003dnewKey\u0027);"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    expect(studentResult.awaitingSessions.sessionName.feedbackSessionUrl).toEqual(\u0027awaitingSession?key\u003dnewKey\u0027);"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    expect(studentResult.openSessions.sessionName.feedbackSessionUrl).toEqual(\u0027openSession?key\u003dnewKey\u0027);"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    expect(studentResult.notOpenSessions.sessionName.feedbackSessionUrl).toEqual(\u0027notOpenSession?key\u003dnewKey\u0027);"},{"lineNumber":646,"author":{"gitId":"-"},"content":"    expect(studentResult.publishedSessions.sessionName.feedbackSessionUrl).toEqual(\u0027publishedSession?key\u003dnewKey\u0027);"},{"lineNumber":647,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"  it(\u0027should show error message if fail to regenerate registration key for student in a course\u0027, () \u003d\u003e {"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    const studentResult: StudentAccountSearchResult \u003d {"},{"lineNumber":651,"author":{"gitId":"-"},"content":"      ...DEFAULT_STUDENT_SEARCH_RESULT,"},{"lineNumber":652,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027courseJoinLink?key\u003doldKey\u0027,"},{"lineNumber":653,"author":{"gitId":"-"},"content":"      awaitingSessions: {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        ...DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        sessionName: {"},{"lineNumber":656,"author":{"gitId":"-"},"content":"          ...DEFAULT_FEEDBACK_SESSION_GROUP.sessionName,"},{"lineNumber":657,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: \u0027awaitingSession?key\u003doldKey\u0027,"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":659,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":660,"author":{"gitId":"-"},"content":"      openSessions: {"},{"lineNumber":661,"author":{"gitId":"-"},"content":"        ...DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        sessionName: {"},{"lineNumber":663,"author":{"gitId":"-"},"content":"          ...DEFAULT_FEEDBACK_SESSION_GROUP.sessionName,"},{"lineNumber":664,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: \u0027openSession?key\u003doldKey\u0027,"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":666,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      notOpenSessions: {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        ...DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        sessionName: {"},{"lineNumber":670,"author":{"gitId":"-"},"content":"          ...DEFAULT_FEEDBACK_SESSION_GROUP.sessionName,"},{"lineNumber":671,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: \u0027notOpenSession?key\u003doldKey\u0027,"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":673,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":674,"author":{"gitId":"-"},"content":"      publishedSessions: {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        ...DEFAULT_FEEDBACK_SESSION_GROUP,"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        sessionName: {"},{"lineNumber":677,"author":{"gitId":"-"},"content":"          ...DEFAULT_FEEDBACK_SESSION_GROUP.sessionName,"},{"lineNumber":678,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: \u0027publishedSession?key\u003doldKey\u0027,"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":680,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":682,"author":{"gitId":"-"},"content":"    component.students \u003d [studentResult];"},{"lineNumber":683,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":684,"author":{"gitId":"-"},"content":""},{"lineNumber":685,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":686,"author":{"gitId":"-"},"content":"      return createMockNgbModalRef({});"},{"lineNumber":687,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":688,"author":{"gitId":"-"},"content":""},{"lineNumber":689,"author":{"gitId":"-"},"content":"    jest.spyOn(studentService, \u0027regenerateStudentKey\u0027).mockReturnValue(throwError({"},{"lineNumber":690,"author":{"gitId":"-"},"content":"      error: {"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        message: \u0027This is the error message.\u0027,"},{"lineNumber":692,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":693,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":694,"author":{"gitId":"-"},"content":""},{"lineNumber":695,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showErrorToast\u0027)"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027This is the error message.\u0027);"},{"lineNumber":698,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"    const regenerateButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#regenerate-student-key-0\u0027);"},{"lineNumber":701,"author":{"gitId":"-"},"content":"    regenerateButton.click();"},{"lineNumber":702,"author":{"gitId":"-"},"content":""},{"lineNumber":703,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":704,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"  it(\u0027should show success message and update all keys if successfully regenerated instructor registration key\u0027, () \u003d\u003e {"},{"lineNumber":707,"author":{"gitId":"-"},"content":"    const instructorResult: InstructorAccountSearchResult \u003d {"},{"lineNumber":708,"author":{"gitId":"-"},"content":"      ...DEFAULT_INSTRUCTOR_SEARCH_RESULT,"},{"lineNumber":709,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027courseJoinLink?key\u003doldKey\u0027,"},{"lineNumber":710,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":711,"author":{"gitId":"-"},"content":"    component.instructors \u003d [instructorResult];"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":713,"author":{"gitId":"-"},"content":""},{"lineNumber":714,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":715,"author":{"gitId":"-"},"content":"      return createMockNgbModalRef({});"},{"lineNumber":716,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"-"},"content":"    jest.spyOn(instructorService, \u0027regenerateInstructorKey\u0027).mockReturnValue(of({"},{"lineNumber":719,"author":{"gitId":"-"},"content":"      message: \u0027success\u0027,"},{"lineNumber":720,"author":{"gitId":"-"},"content":"      newRegistrationKey: \u0027newKey\u0027,"},{"lineNumber":721,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":722,"author":{"gitId":"-"},"content":""},{"lineNumber":723,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showSuccessToast\u0027)"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":725,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027success\u0027);"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":727,"author":{"gitId":"-"},"content":""},{"lineNumber":728,"author":{"gitId":"-"},"content":"    const regenerateButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#regenerate-instructor-key-0\u0027);"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    regenerateButton.click();"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":732,"author":{"gitId":"-"},"content":""},{"lineNumber":733,"author":{"gitId":"-"},"content":"    expect(instructorResult.courseJoinLink).toEqual(\u0027courseJoinLink?key\u003dnewKey\u0027);"},{"lineNumber":734,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"-"},"content":"  it(\u0027should show error message if fail to regenerate registration key for instructor in a course\u0027, () \u003d\u003e {"},{"lineNumber":737,"author":{"gitId":"-"},"content":"    const instructorResult: InstructorAccountSearchResult \u003d {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"      ...DEFAULT_INSTRUCTOR_SEARCH_RESULT,"},{"lineNumber":739,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027courseJoinLink?key\u003doldKey\u0027,"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":741,"author":{"gitId":"-"},"content":"    component.instructors \u003d [instructorResult];"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"      return createMockNgbModalRef({});"},{"lineNumber":746,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":747,"author":{"gitId":"-"},"content":""},{"lineNumber":748,"author":{"gitId":"-"},"content":"    jest.spyOn(instructorService, \u0027regenerateInstructorKey\u0027).mockReturnValue(throwError({"},{"lineNumber":749,"author":{"gitId":"-"},"content":"      error: {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        message: \u0027This is the error message.\u0027,"},{"lineNumber":751,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":752,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":753,"author":{"gitId":"-"},"content":""},{"lineNumber":754,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showErrorToast\u0027)"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027This is the error message.\u0027);"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":758,"author":{"gitId":"-"},"content":""},{"lineNumber":759,"author":{"gitId":"-"},"content":"    const regenerateButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#regenerate-instructor-key-0\u0027);"},{"lineNumber":760,"author":{"gitId":"-"},"content":"    regenerateButton.click();"},{"lineNumber":761,"author":{"gitId":"-"},"content":""},{"lineNumber":762,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":763,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"  it(\u0027should show error message if fail to send course join email\u0027, () \u003d\u003e {"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    const studentResult: StudentAccountSearchResult \u003d {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"      ...DEFAULT_STUDENT_SEARCH_RESULT,"},{"lineNumber":768,"author":{"gitId":"-"},"content":"      showLinks: true,"},{"lineNumber":769,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":770,"author":{"gitId":"-"},"content":"    component.students \u003d [studentResult];"},{"lineNumber":771,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":772,"author":{"gitId":"-"},"content":""},{"lineNumber":773,"author":{"gitId":"-"},"content":"    jest.spyOn(emailGenerationService, \u0027getCourseJoinEmail\u0027).mockReturnValue(throwError({"},{"lineNumber":774,"author":{"gitId":"-"},"content":"      error: {"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        message: \u0027This is the error message.\u0027,"},{"lineNumber":776,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":777,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showErrorToast\u0027)"},{"lineNumber":780,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":781,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027This is the error message.\u0027);"},{"lineNumber":782,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":783,"author":{"gitId":"-"},"content":""},{"lineNumber":784,"author":{"gitId":"-"},"content":"    const sendButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#send-course-join-button\u0027);"},{"lineNumber":785,"author":{"gitId":"-"},"content":"    sendButton.click();"},{"lineNumber":786,"author":{"gitId":"-"},"content":""},{"lineNumber":787,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":788,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":789,"author":{"gitId":"-"},"content":""},{"lineNumber":790,"author":{"gitId":"-"},"content":"  it(\u0027should show error message if fail to send session reminder email\u0027, () \u003d\u003e {"},{"lineNumber":791,"author":{"gitId":"-"},"content":"    const studentResult: StudentAccountSearchResult \u003d {"},{"lineNumber":792,"author":{"gitId":"-"},"content":"      ...DEFAULT_STUDENT_SEARCH_RESULT,"},{"lineNumber":793,"author":{"gitId":"-"},"content":"      showLinks: true,"},{"lineNumber":794,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":795,"author":{"gitId":"-"},"content":"    component.students \u003d [studentResult];"},{"lineNumber":796,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"    jest.spyOn(emailGenerationService, \u0027getFeedbackSessionReminderEmail\u0027).mockReturnValue(throwError({"},{"lineNumber":799,"author":{"gitId":"-"},"content":"      error: {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"        message: \u0027This is the error message.\u0027,"},{"lineNumber":801,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":803,"author":{"gitId":"-"},"content":""},{"lineNumber":804,"author":{"gitId":"-"},"content":"    const spyStatusMessageService: SpyInstance \u003d jest.spyOn(statusMessageService, \u0027showErrorToast\u0027)"},{"lineNumber":805,"author":{"gitId":"-"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":806,"author":{"gitId":"-"},"content":"          expect(args).toEqual(\u0027This is the error message.\u0027);"},{"lineNumber":807,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":808,"author":{"gitId":"-"},"content":""},{"lineNumber":809,"author":{"gitId":"-"},"content":"    const sendAwaitingSessionReminderButton: any \u003d"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        fixture.debugElement.nativeElement.querySelector(\u0027#send-awaiting-session-reminder-button\u0027);"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    sendAwaitingSessionReminderButton.click();"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":814,"author":{"gitId":"-"},"content":""},{"lineNumber":815,"author":{"gitId":"-"},"content":"    const sendOpenSessionReminderButton: any \u003d"},{"lineNumber":816,"author":{"gitId":"-"},"content":"        fixture.debugElement.nativeElement.querySelector(\u0027#send-open-session-reminder-button\u0027);"},{"lineNumber":817,"author":{"gitId":"-"},"content":"    sendOpenSessionReminderButton.click();"},{"lineNumber":818,"author":{"gitId":"-"},"content":""},{"lineNumber":819,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"    const sendNotOpenSessionReminderButton: any \u003d"},{"lineNumber":822,"author":{"gitId":"-"},"content":"        fixture.debugElement.nativeElement.querySelector(\u0027#send-not-open-session-reminder-button\u0027);"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    sendNotOpenSessionReminderButton.click();"},{"lineNumber":824,"author":{"gitId":"-"},"content":""},{"lineNumber":825,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":826,"author":{"gitId":"-"},"content":""},{"lineNumber":827,"author":{"gitId":"-"},"content":"    const sendPublishedSessionReminderButton: any \u003d"},{"lineNumber":828,"author":{"gitId":"-"},"content":"        fixture.debugElement.nativeElement.querySelector(\u0027#send-published-session-reminder-button\u0027);"},{"lineNumber":829,"author":{"gitId":"-"},"content":"    sendPublishedSessionReminderButton.click();"},{"lineNumber":830,"author":{"gitId":"-"},"content":""},{"lineNumber":831,"author":{"gitId":"-"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":832,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":833,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":834,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should show error message when deleting account request is unsuccessful\u0027, () \u003d\u003e {"},{"lineNumber":835,"author":{"gitId":"samuelfangjw"},"content":"    component.accountRequests \u003d [DEFAULT_ACCOUNT_REQUEST_SEARCH_RESULT];"},{"lineNumber":836,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":837,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":838,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":839,"author":{"gitId":"samuelfangjw"},"content":"      return createMockNgbModalRef({});"},{"lineNumber":840,"author":{"gitId":"samuelfangjw"},"content":"    });"},{"lineNumber":841,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":842,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(accountService, \u0027deleteAccountRequest\u0027).mockReturnValue(throwError({"},{"lineNumber":843,"author":{"gitId":"samuelfangjw"},"content":"      error: {"},{"lineNumber":844,"author":{"gitId":"samuelfangjw"},"content":"        message: \u0027This is the error message.\u0027,"},{"lineNumber":845,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":846,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":847,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":848,"author":{"gitId":"samuelfangjw"},"content":"    const spyStatusMessageService: any \u003d jest.spyOn(statusMessageService, \u0027showErrorToast\u0027)"},{"lineNumber":849,"author":{"gitId":"samuelfangjw"},"content":"      .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":850,"author":{"gitId":"samuelfangjw"},"content":"        expect(args).toEqual(\u0027This is the error message.\u0027);"},{"lineNumber":851,"author":{"gitId":"samuelfangjw"},"content":"      });"},{"lineNumber":852,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":853,"author":{"gitId":"samuelfangjw"},"content":"    const deleteButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#delete-account-request-0\u0027);"},{"lineNumber":854,"author":{"gitId":"samuelfangjw"},"content":"    deleteButton.click();"},{"lineNumber":855,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":856,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":857,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":858,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":859,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should show success message when deleting account request is successful\u0027, () \u003d\u003e {"},{"lineNumber":860,"author":{"gitId":"samuelfangjw"},"content":"    component.accountRequests \u003d [DEFAULT_ACCOUNT_REQUEST_SEARCH_RESULT];"},{"lineNumber":861,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":862,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":863,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":864,"author":{"gitId":"samuelfangjw"},"content":"      return createMockNgbModalRef({});"},{"lineNumber":865,"author":{"gitId":"samuelfangjw"},"content":"    });"},{"lineNumber":866,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":867,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(accountService, \u0027deleteAccountRequest\u0027).mockReturnValue(of({"},{"lineNumber":868,"author":{"gitId":"samuelfangjw"},"content":"      message: \u0027Account request successfully deleted.\u0027,"},{"lineNumber":869,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":870,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":871,"author":{"gitId":"samuelfangjw"},"content":"    const spyStatusMessageService: any \u003d jest.spyOn(statusMessageService, \u0027showSuccessToast\u0027)"},{"lineNumber":872,"author":{"gitId":"samuelfangjw"},"content":"        .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":873,"author":{"gitId":"samuelfangjw"},"content":"          expect(args).toEqual(\u0027Account request successfully deleted.\u0027);"},{"lineNumber":874,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":875,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":876,"author":{"gitId":"samuelfangjw"},"content":"    const deleteButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#delete-account-request-0\u0027);"},{"lineNumber":877,"author":{"gitId":"samuelfangjw"},"content":"    deleteButton.click();"},{"lineNumber":878,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":879,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":880,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":881,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":882,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should show error message when resetting account request is unsuccessful\u0027, () \u003d\u003e {"},{"lineNumber":883,"author":{"gitId":"samuelfangjw"},"content":"    component.accountRequests \u003d [DEFAULT_ACCOUNT_REQUEST_SEARCH_RESULT];"},{"lineNumber":884,"author":{"gitId":"samuelfangjw"},"content":"    component.accountRequests[0].registeredAtText \u003d \u0027Wed, 09 Feb 2022, 10:23 AM +00:00\u0027;"},{"lineNumber":885,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":886,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":887,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":888,"author":{"gitId":"samuelfangjw"},"content":"      return createMockNgbModalRef({});"},{"lineNumber":889,"author":{"gitId":"samuelfangjw"},"content":"    });"},{"lineNumber":890,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":891,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(accountService, \u0027resetAccountRequest\u0027).mockReturnValue(throwError({"},{"lineNumber":892,"author":{"gitId":"samuelfangjw"},"content":"      error: {"},{"lineNumber":893,"author":{"gitId":"samuelfangjw"},"content":"        message: \u0027This is the error message.\u0027,"},{"lineNumber":894,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":895,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":896,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":897,"author":{"gitId":"samuelfangjw"},"content":"    const spyStatusMessageService \u003d jest.spyOn(statusMessageService, \u0027showErrorToast\u0027)"},{"lineNumber":898,"author":{"gitId":"samuelfangjw"},"content":"      .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":899,"author":{"gitId":"samuelfangjw"},"content":"        expect(args).toEqual(\u0027This is the error message.\u0027);"},{"lineNumber":900,"author":{"gitId":"samuelfangjw"},"content":"      });"},{"lineNumber":901,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":902,"author":{"gitId":"samuelfangjw"},"content":"    const resetButton \u003d fixture.debugElement.nativeElement.querySelector(\u0027#reset-account-request-0\u0027);"},{"lineNumber":903,"author":{"gitId":"samuelfangjw"},"content":"    resetButton.click();"},{"lineNumber":904,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":905,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":906,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":907,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":908,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should show success message when resetting account request is successful\u0027, () \u003d\u003e {"},{"lineNumber":909,"author":{"gitId":"samuelfangjw"},"content":"    component.accountRequests \u003d [DEFAULT_ACCOUNT_REQUEST_SEARCH_RESULT];"},{"lineNumber":910,"author":{"gitId":"samuelfangjw"},"content":"    component.accountRequests[0].registeredAtText \u003d \u0027Wed, 09 Feb 2022, 10:23 AM +00:00\u0027;"},{"lineNumber":911,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":912,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":913,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockImplementation(() \u003d\u003e {"},{"lineNumber":914,"author":{"gitId":"samuelfangjw"},"content":"      return createMockNgbModalRef({});"},{"lineNumber":915,"author":{"gitId":"samuelfangjw"},"content":"    });"},{"lineNumber":916,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":917,"author":{"gitId":"samuelfangjw"},"content":"    jest.spyOn(accountService, \u0027resetAccountRequest\u0027).mockReturnValue(of({"},{"lineNumber":918,"author":{"gitId":"samuelfangjw"},"content":"      joinLink: \u0027joinlink\u0027,"},{"lineNumber":919,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":920,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":921,"author":{"gitId":"samuelfangjw"},"content":"    const spyStatusMessageService \u003d jest.spyOn(statusMessageService, \u0027showSuccessToast\u0027)"},{"lineNumber":922,"author":{"gitId":"samuelfangjw"},"content":"      .mockImplementation((args: string) \u003d\u003e {"},{"lineNumber":923,"author":{"gitId":"samuelfangjw"},"content":"        expect(args)"},{"lineNumber":924,"author":{"gitId":"samuelfangjw"},"content":"            .toEqual(`Reset successful. An email has been sent to ${DEFAULT_ACCOUNT_REQUEST_SEARCH_RESULT.email}.`);"},{"lineNumber":925,"author":{"gitId":"samuelfangjw"},"content":"      });"},{"lineNumber":926,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":927,"author":{"gitId":"samuelfangjw"},"content":"    const resetButton \u003d fixture.debugElement.nativeElement.querySelector(\u0027#reset-account-request-0\u0027);"},{"lineNumber":928,"author":{"gitId":"samuelfangjw"},"content":"    resetButton.click();"},{"lineNumber":929,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":930,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyStatusMessageService).toBeCalled();"},{"lineNumber":931,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":932,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":755,"samuelfangjw":177}},{"path":"src/web/app/pages-admin/admin-search-page/admin-search-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AccountService } from \u0027../../../services/account.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { EmailGenerationService } from \u0027../../../services/email-generation.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoadingBarService } from \u0027../../../services/loading-bar.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"  AccountRequestSearchResult,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  AdminSearchResult,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FeedbackSessionsGroup,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  InstructorAccountSearchResult,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  SearchService,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  StudentAccountSearchResult,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027../../../services/search.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { ApiConst } from \u0027../../../types/api-const\u0027;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import { Email, MessageOutput, RegenerateKey } from \u0027../../../types/api-output\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Admin search page."},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  selector: \u0027tm-admin-search-page\u0027,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./admin-search-page.component.html\u0027,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./admin-search-page.component.scss\u0027],"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":33,"author":{"gitId":"-"},"content":"})"},{"lineNumber":34,"author":{"gitId":"-"},"content":"export class AdminSearchPageComponent {"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  searchQuery: string \u003d \u0027\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  instructors: InstructorAccountSearchResult[] \u003d [];"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  students: StudentAccountSearchResult[] \u003d [];"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"  accountRequests: AccountRequestSearchResult[] \u003d [];"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private statusMessageService: StatusMessageService,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private simpleModalService: SimpleModalService,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private accountService: AccountService,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private instructorService: InstructorService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private studentService: StudentService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private searchService: SearchService,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private emailGenerationService: EmailGenerationService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private loadingBarService: LoadingBarService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * Searches for students and instructors matching the search query."},{"lineNumber":54,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  search(): void {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.loadingBarService.showLoadingBar();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    this.searchService.searchAdmin("},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.searchQuery,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ).pipe(finalize(() \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      this.loadingBarService.hideLoadingBar();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    })).subscribe((resp: AdminSearchResult) \u003d\u003e {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      const hasStudents: boolean \u003d !!(resp.students \u0026\u0026 resp.students.length);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      const hasInstructors: boolean \u003d !!(resp.instructors \u0026\u0026 resp.instructors.length);"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"      const hasAccountRequests: boolean \u003d !!(resp.accountRequests \u0026\u0026 resp.accountRequests.length);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"      if (!hasStudents \u0026\u0026 !hasInstructors \u0026\u0026 !hasAccountRequests) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.statusMessageService.showWarningToast(\u0027No results found.\u0027);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.instructors \u003d [];"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.students \u003d [];"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        this.accountRequests \u003d [];"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.instructors \u003d resp.instructors;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      this.students \u003d resp.students;"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"      this.accountRequests \u003d resp.accountRequests;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      this.hideAllInstructorsLinks();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      this.hideAllStudentsLinks();"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"      this.hideAllAccountRequestsLinks();"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"      // prompt user to use more specific terms if search results limit reached"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      const limit: number \u003d ApiConst.SEARCH_QUERY_SIZE_LIMIT;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      const limitsReached: string[] \u003d [];"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      if (this.students.length \u003e\u003d limit) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        limitsReached.push(`${limit} student results`);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      if (this.instructors.length \u003e\u003d limit) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        limitsReached.push(`${limit} instructor results`);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"      if (this.accountRequests.length \u003e\u003d limit) {"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        limitsReached.push(`${limit} account request results`);"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"      }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      if (limitsReached.length) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.statusMessageService.showWarningToast(`${limitsReached.join(\u0027 and \u0027)} have been shown on this page"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            but there may be more results not shown. Consider searching with more specific terms.`);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      this.instructors \u003d [];"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      this.students \u003d [];"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * Shows all instructors\u0027 links in the page."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  showAllInstructorsLinks(): void {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    for (const instructor of this.instructors) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      instructor.showLinks \u003d true;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Hides all instructors\u0027 links in the page."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  hideAllInstructorsLinks(): void {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    for (const instructor of this.instructors) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      instructor.showLinks \u003d false;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":124,"author":{"gitId":"-"},"content":"   * Shows all students\u0027 links in the page."},{"lineNumber":125,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  showAllStudentsLinks(): void {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    for (const student of this.students) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      student.showLinks \u003d true;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   * Hides all students\u0027 links in the page."},{"lineNumber":134,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  hideAllStudentsLinks(): void {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    for (const student of this.students) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      student.showLinks \u003d false;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"   * Shows all account requests\u0027 links in the page."},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"  showAllAccountRequestsLinks(): void {"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"    for (const accountRequest of this.accountRequests) {"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"      accountRequest.showLinks \u003d true;"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"   * Hides all account requests\u0027 links in the page."},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"  hideAllAccountRequestsLinks(): void {"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    for (const accountRequest of this.accountRequests) {"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"      accountRequest.showLinks \u003d false;"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":160,"author":{"gitId":"-"},"content":"   * Resets the instructor\u0027s Google ID."},{"lineNumber":161,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  resetInstructorGoogleId(instructor: InstructorAccountSearchResult, event: any): void {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    if (event) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      event.preventDefault();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      event.stopPropagation();"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `Are you sure you want to reset the Google account ID currently associated for"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        \u003cstrong\u003e${instructor.name}\u003c/strong\u003e in the course \u003cstrong\u003e${instructor.courseId}\u003c/strong\u003e?"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        The user will need to re-associate their account with a new Google ID.`;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":172,"author":{"gitId":"-"},"content":"        `Reset \u003cstrong\u003e${instructor.name}\u003c/strong\u003e\u0027s Google ID?`, SimpleModalType.WARNING, modalContent);"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      this.accountService.resetInstructorAccount(instructor.courseId, instructor.email).subscribe(() \u003d\u003e {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        this.search();"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(\u0027The instructor\\\u0027s Google ID has been reset.\u0027);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":185,"author":{"gitId":"-"},"content":"   * Resets the student\u0027s Google ID."},{"lineNumber":186,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  resetStudentGoogleId(student: StudentAccountSearchResult, event: any): void {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    if (event) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      event.preventDefault();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      event.stopPropagation();"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `Are you sure you want to reset the Google account ID currently associated for"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        \u003cstrong\u003e${student.name}\u003c/strong\u003e in the course \u003cstrong\u003e${student.courseId}\u003c/strong\u003e?"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        The user will need to re-associate their account with a new Google ID.`;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":196,"author":{"gitId":"-"},"content":"        `Reset \u003cstrong\u003e${student.name}\u003c/strong\u003e\u0027s Google ID?`, SimpleModalType.WARNING, modalContent);"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      this.accountService.resetStudentAccount(student.courseId, student.email).subscribe(() \u003d\u003e {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        student.googleId \u003d \u0027\u0027;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(\u0027The student\\\u0027s Google ID has been reset.\u0027);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * Regenerates the student\u0027s registration key."},{"lineNumber":210,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  regenerateStudentKey(student: StudentAccountSearchResult): void {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `Are you sure you want to regenerate the registration key for"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        \u003cstrong\u003e${student.name}\u003c/strong\u003e for the course \u003cstrong\u003e${student.courseId}\u003c/strong\u003e?"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        An email will be sent to the student with all the new course registration and feedback session links.`;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":216,"author":{"gitId":"-"},"content":"        `Regenerate \u003cstrong\u003e${student.name}\u003c/strong\u003e\u0027s course links?`, SimpleModalType.WARNING, modalContent);"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      this.studentService.regenerateStudentKey(student.courseId, student.email)"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        .subscribe((resp: RegenerateKey) \u003d\u003e {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(resp.message);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"          this.updateDisplayedStudentCourseLinks(student, resp.newRegistrationKey);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }, (response: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(response.error.message);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   * Regenerates the instructor\u0027s registration key."},{"lineNumber":231,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  regenerateInstructorKey(instructor: InstructorAccountSearchResult): void {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `Are you sure you want to regenerate the registration key for"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        \u003cstrong\u003e${instructor.name}\u003c/strong\u003e for the course \u003cstrong\u003e${instructor.courseId}\u003c/strong\u003e?"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        An email will be sent to the instructor with all the new course registration and feedback session links.`;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":237,"author":{"gitId":"-"},"content":"        `Regenerate \u003cstrong\u003e${instructor.name}\u003c/strong\u003e\u0027s course links?`, SimpleModalType.WARNING, modalContent);"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      this.instructorService.regenerateInstructorKey(instructor.courseId, instructor.email)"},{"lineNumber":241,"author":{"gitId":"-"},"content":"          .subscribe((resp: RegenerateKey) \u003d\u003e {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(resp.message);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            this.updateDisplayedInstructorCourseLinks(instructor, resp.newRegistrationKey);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"          }, (response: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(response.error.message);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"  resetAccountRequest(accountRequest: AccountRequestSearchResult): void {"},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"    const modalContent \u003d `Are you sure you want to reset the account request for"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"        \u003cstrong\u003e${accountRequest.name}\u003c/strong\u003e with email \u003cstrong\u003e${accountRequest.email}\u003c/strong\u003e from"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"        \u003cstrong\u003e${accountRequest.institute}\u003c/strong\u003e?"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"        An email with the account registration link will also be sent to the instructor.`;"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"        `Reset account request for \u003cstrong\u003e${accountRequest.name}\u003c/strong\u003e?`, SimpleModalType.WARNING, modalContent);"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"      this.accountService.resetAccountRequest(accountRequest.email, accountRequest.institute)"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"        .subscribe(() \u003d\u003e {"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"          this.statusMessageService"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"            .showSuccessToast(`Reset successful. An email has been sent to ${accountRequest.email}.`);"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"          accountRequest.registeredAtText \u003d \u0027\u0027;"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"  deleteAccountRequest(accountRequest: AccountRequestSearchResult): void {"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"    const modalContent: string \u003d `Are you sure you want to delete the account request for"},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"        \u003cstrong\u003e${accountRequest.name}\u003c/strong\u003e with email \u003cstrong\u003e${accountRequest.email}\u003c/strong\u003e from"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"        \u003cstrong\u003e${accountRequest.institute}\u003c/strong\u003e?`;"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"        `Delete account request for \u003cstrong\u003e${accountRequest.name}\u003c/strong\u003e?`, SimpleModalType.WARNING, modalContent);"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"      this.accountService.deleteAccountRequest(accountRequest.email, accountRequest.institute)"},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":"      .subscribe((resp: MessageOutput) \u003d\u003e {"},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":"        this.statusMessageService.showSuccessToast(resp.message);"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"        this.accountRequests \u003d this.accountRequests.filter((x: AccountRequestSearchResult) \u003d\u003e x !\u003d\u003d accountRequest);"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"      });"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":289,"author":{"gitId":"-"},"content":"   * Updates the student\u0027s displayed course join and feedback session links with the value of the newKey."},{"lineNumber":290,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  private updateDisplayedStudentCourseLinks(student: StudentAccountSearchResult, newKey: string): void {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    const updateSessions: Function \u003d (sessions: FeedbackSessionsGroup): void \u003d\u003e {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      Object.keys(sessions).forEach((key: string): void \u003d\u003e {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        sessions[key].feedbackSessionUrl \u003d this.getUpdatedUrl(sessions[key].feedbackSessionUrl, newKey);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    student.courseJoinLink \u003d this.getUpdatedUrl(student.courseJoinLink, newKey);"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    updateSessions(student.awaitingSessions);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    updateSessions(student.openSessions);"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    updateSessions(student.notOpenSessions);"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    updateSessions(student.publishedSessions);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":306,"author":{"gitId":"-"},"content":"   * Updates the instructor\u0027s displayed course join and feedback session links with the value of the newKey."},{"lineNumber":307,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  private updateDisplayedInstructorCourseLinks(instructor: InstructorAccountSearchResult, newKey: string): void {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    const updateSessions: Function \u003d (sessions: FeedbackSessionsGroup): void \u003d\u003e {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"      Object.keys(sessions).forEach((key: string): void \u003d\u003e {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        sessions[key].feedbackSessionUrl \u003d this.getUpdatedUrl(sessions[key].feedbackSessionUrl, newKey);"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    instructor.courseJoinLink \u003d this.getUpdatedUrl(instructor.courseJoinLink, newKey);"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    updateSessions(instructor.awaitingSessions);"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    updateSessions(instructor.openSessions);"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    updateSessions(instructor.notOpenSessions);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    updateSessions(instructor.publishedSessions);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":323,"author":{"gitId":"-"},"content":"   * Returns the URL after replacing the value of the `key` parameter with that of the new key."},{"lineNumber":324,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  private getUpdatedUrl(link: string, newVal: string): string {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    const param: string \u003d \u0027key\u0027;"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    const regex: RegExp \u003d new RegExp(`(${param}\u003d)[^\u0026]+`);"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"    return link.replace(regex, `$1${newVal}`);"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":333,"author":{"gitId":"-"},"content":"   * Open up an email populated with content for course join invitation."},{"lineNumber":334,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  openCourseJoinEmail(courseId: string, studentemail: string): void {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    this.emailGenerationService.getCourseJoinEmail(courseId, studentemail)"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        .subscribe((email: Email) \u003d\u003e {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"          window.location.href \u003d `mailto:${email.recipient}`"},{"lineNumber":339,"author":{"gitId":"-"},"content":"              + `?Subject\u003d${email.subject}`"},{"lineNumber":340,"author":{"gitId":"-"},"content":"              + `\u0026body\u003d${email.content}`;"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }, (err: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(err.error.message);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":344,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":347,"author":{"gitId":"-"},"content":"   * Open up an email populated with content for feedback session reminder."},{"lineNumber":348,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":349,"author":{"gitId":"-"},"content":"  openFeedbackSessionReminderEmail(courseId: string, studentemail: string, fsname: string): void {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    this.emailGenerationService.getFeedbackSessionReminderEmail(courseId, studentemail, fsname)"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        .subscribe((email: Email) \u003d\u003e {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"          window.location.href \u003d `mailto:${email.recipient}`"},{"lineNumber":353,"author":{"gitId":"-"},"content":"              + `?Subject\u003d${email.subject}`"},{"lineNumber":354,"author":{"gitId":"-"},"content":"              + `\u0026body\u003d${email.content}`;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        }, (err: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(err.error.message);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":293,"samuelfangjw":67}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-courses-section/courses-section-questions.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Unique identifiers for each question in the courses section of instructor help page"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export enum CoursesSectionQuestions {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":6,"author":{"gitId":"-"},"content":"   * How do I add students to a course?"},{"lineNumber":7,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  COURSE_ADD_STUDENTS \u003d \u0027course-add-students\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   * Is there a size limit for a course?"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  SIZE_LIMIT \u003d \u0027size-limit\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"   * What should I do if my course doesn\u0027t have teams?"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  NO_TEAMS \u003d \u0027no-teams\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   * What are sections meant for?"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  SECTIONS \u003d \u0027sections\u0027,"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   * How do I enroll students into sections?"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  ENROLL_SECTIONS \u003d \u0027enroll-sections\u0027,"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * How do I add instructors to my course?"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  COURSE_ADD_INSTRUCTOR \u003d \u0027course-add-instructor\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * How do I edit the information of an instructor in my course?"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  COURSE_EDIT_INSTRUCTOR \u003d \u0027course-edit-instructor\u0027,"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * How do I set an instructor\u0027s access level?"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  COURSE_INSTRUCTOR_ACCESS \u003d \u0027course-instructor-access\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * How do I set custom privileges for an instructor?"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  PRIVILEGES \u003d \u0027privileges\u0027,"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * How do I view a list of students in a course?"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  COURSE_VIEW_STUDENTS \u003d \u0027course-view-students\u0027,"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * How do I change a student\u0027s section?"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  CHANGE_SECTION \u003d \u0027change-section\u0027,"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * What should I do if a student says his/her courses have disappeared from the system?"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  DISAPPEARED_COURSE \u003d \u0027disappeared-course\u0027,"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * How do I delete students from a course?"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  DEL_STUDENTS \u003d \u0027del-students\u0027,"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":71,"author":{"gitId":"-"},"content":"   * How do I archive a course?"},{"lineNumber":72,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  COURSE_ARCHIVE \u003d \u0027course-archive\u0027,"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   * How do I view courses I have archived?"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  COURSE_VIEW_ARCHIVED \u003d \u0027course-view-archived\u0027,"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * How do I unarchive an archived course?"},{"lineNumber":82,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  COURSE_UNARCHIVE \u003d \u0027course-unarchive\u0027,"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":86,"author":{"gitId":"-"},"content":"   * How do I view courses I have deleted?"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  COURSE_VIEW_DELETED \u003d \u0027course-view-deleted\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"   * How do I restore a deleted course?"},{"lineNumber":92,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  COURSE_RESTORE \u003d \u0027course-restore\u0027,"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"   * How do I permanently delete a course?"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  PERM_DEL \u003d \u0027perm-del\u0027,"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * How do I restore/delete all courses from Recycle Bin?"},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  RESTORE_ALL \u003d \u0027restore-all\u0027,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":103,"samuelfangjw":1}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-students-section/instructor-help-students-section.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch2 class\u003d\"color-blue\" *ngIf\u003d\"!key || showQuestion.length \u003e 0\"\u003eStudents\u003c/h2\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(0, 4)\"\u003eStudent Records\u003c/h4\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_VIEW_PROFILE)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_VIEW_PROFILE\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view a student\u0027s profile?\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_PROFILE]\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cp\u003eTo view the profile of Student A from Course B:\u003c/p\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in the course."},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Click the"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eView\u003c/button\u003e button in the last column of the row corresponding to Student A. A new page will open displaying the student\u0027s profile, similar to the sample profile below."},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_PROFILE]\" @collapseAnim\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003ctm-student-profile [studentProfile]\u003d\"exampleStudentProfile\"\u003e\u003c/tm-student-profile\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003ctm-course-related-info [student]\u003d\"exampleStudentAttributes\" [isDisplayOnly]\u003d\"true\"\u003e\u003c/tm-course-related-info\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      The student\u0027s profile page displays the student\u0027s details and course-related information, such as:"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cb\u003eSection Name\u003c/b\u003e: the name of the section you enrolled the student in. This only appears if sections are created for the course."},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cb\u003eTeam Name\u003c/b\u003e: the name of the team you enrolled the student in, or \u003ci\u003eNA\u003c/i\u003e if the student does not belong to a team."},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cb\u003eOfficial Email\u003c/b\u003e: the email address that will be used to contact the student, taken from enrollment information."},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cb\u003eComments\u003c/b\u003e: additional student information you entered in the Comments column during enrollment."},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      Below this is the \u003cb\u003eMore Info\u003c/b\u003e section containing a personal description given by the student, if any."},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cbr\u003e You can press the \u003cspan class\u003d\"text-muted fas fa-expand-arrows-alt cursor-pointer\"\u003e\u003c/span\u003e button in the top-right corner to display the information in a lightbox for better readability."},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_PROFILE]\" @collapseAnim\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003ctm-more-info [studentName]\u003d\"exampleStudentAttributes.name\" [moreInfoText]\u003d\"exampleStudentProfile.moreInfo\"\u003e\u003c/tm-more-info\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_EDIT_DETAILS)\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_EDIT_DETAILS\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I edit a student\u0027s details after enrolling the student?\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_EDIT_DETAILS]\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      To edit the name, section, team, contact email, or instructor comments of Student A from Course B:"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in Course B."},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Click the"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eEdit\u003c/button\u003e button in the last column of the row corresponding to Student A."},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cbr\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        In the new page that opens, edit the relevant fields of Student A\u0027s details. The page will look similar to the example below."},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Click"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eSave Changes\u003c/button\u003e to save your changes to Student A\u0027s details."},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      Note that moving a student to a different team (i.e. changing the student\u0027s Team ID) will change the student\u0027s team in all existing sessions in the course."},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_EDIT_DETAILS]\" @collapseAnim\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-course-student-edit-page [isEnabled]\u003d\"false\"\u003e\u003c/tm-instructor-course-student-edit-page\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_VIEW_RESPONSES)\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_VIEW_RESPONSES\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view all the responses a student has given and received?\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_RESPONSES]\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      To view the responses that Student A from Course B has given and received:"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in the course."},{"lineNumber":92,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Click"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eAll Records\u003c/button\u003e button corresponding to Student A to access all the responses Student A has given and received."},{"lineNumber":96,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  \u003c!--Question --\u003e"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_SEARCH)\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_SEARCH\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I search for a student in my course?\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\"\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      You can search for students from the \u003cb\u003eSearch\u003c/b\u003e page. Click the \u003cb\u003eSearch\u003c/b\u003e tab in the navigation bar at the top of the page. You should see a search bar similar to the one below:"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\" @collapseAnim\u003e\u003ctm-instructor-search-bar\u003e\u003c/tm-instructor-search-bar\u003e\u003c/tm-example-box\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      To search for a student:"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Tick the option \u003cb\u003eStudents\u003c/b\u003e below the search box."},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Type your search terms into the search bar. You can search for a student record based on:"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003cul\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          \u003cli\u003eSection name\u003c/li\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003cli\u003eTeam name\u003c/li\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          \u003cli\u003eStudent name\u003c/li\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003cli\u003eEmail\u003c/li\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003c/ul\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Click the"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eSearch\u003c/button\u003e button."},{"lineNumber":127,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      If you search for \u003ccode\u003ealice\u003c/code\u003e, the search results would show something like this (assuming such a student exists):"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\" @collapseAnim\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      \u003ctm-student-result-table [studentTables]\u003d\"exampleSingleStudentResultTables\" [isActionButtonsEnabled]\u003d\"false\"\u003e\u003c/tm-student-result-table\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      You can search for multiple students based on the attributes mentioned above. To do so, include the terms you wish to search for in the search box separated by spaces.\u003cbr\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      For example, if you search for \u003ccode\u003ealice Section A Team B jack@email.com\u003c/code\u003e, the search would result in something similar to this (assuming the corresponding data exists):"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\" @collapseAnim\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003ctm-student-result-table [studentTables]\u003d\"exampleMultipleStudentResultTables\" [isActionButtonsEnabled]\u003d\"false\"\u003e\u003c/tm-student-result-table\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(4, 6)\"\u003eStudent Accounts\u003c/h4\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_GOOGLE_ACCOUNT)\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_GOOGLE_ACCOUNT\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Is it compulsory for students to use Google accounts?\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_GOOGLE_ACCOUNT]\"\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      Students can submit feedback and view results without having to login to TEAMMATES, unless they choose to link their Google account (optional). TEAMMATES will send students a unique URL to access their feedback sessions and results. However, students"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      who link their TEAMMATES account with their Google account will be able to access a dashboard of all their sessions and results through the TEAMMATES website."},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_CHANGE_ID)\""},{"lineNumber":157,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_CHANGE_ID\""},{"lineNumber":158,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I change the Google ID associated with a student?\""},{"lineNumber":159,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_CHANGE_ID]\"\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      At the moment, there is no way for students to update their own Google IDs."},{"lineNumber":162,"author":{"gitId":"-"},"content":"      \u003cbr\u003e Please ask the student to \u003ca href\u003d\"mailto:{{ supportEmail }}\"\u003econtact us\u003c/a\u003e for assistance changing his/her Google ID."},{"lineNumber":163,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":4,"-":161}},{"path":"src/web/app/pages-instructor/instructor-course-edit-page/instructor-course-edit-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormGroup } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { forkJoin } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  InstructorPermissionRole,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  InstructorPermissionSet,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  InstructorPrivilege,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  InstructorPrivileges,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  Instructors,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  JoinState,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  MessageOutput,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { InstructorCreateRequest, Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  DEFAULT_INSTRUCTOR_PRIVILEGE,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  DEFAULT_PRIVILEGE_COOWNER,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  DEFAULT_PRIVILEGE_MANAGER,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  DEFAULT_PRIVILEGE_OBSERVER,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  DEFAULT_PRIVILEGE_TUTOR,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"} from \u0027../../../types/default-instructor-privilege\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { FormValidator } from \u0027../../../types/form-validator\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  CoursesSectionQuestions,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"} from \u0027../../pages-help/instructor-help-page/instructor-help-courses-section/courses-section-questions\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import { Sections } from \u0027../../pages-help/instructor-help-page/sections\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  InstructorOverallPermission,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  InstructorSectionLevelPermission,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  InstructorSessionLevelPermission,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"} from \u0027./custom-privilege-setting-panel/custom-privilege-setting-panel.component\u0027;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import { EditMode, InstructorEditPanel } from \u0027./instructor-edit-panel/instructor-edit-panel.component\u0027;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import { ViewRolePrivilegesModalComponent } from \u0027./view-role-privileges-modal/view-role-privileges-modal.component\u0027;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"interface InstructorEditPanelDetail {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  originalInstructor: Instructor;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  originalPanel: InstructorEditPanel;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  editPanel: InstructorEditPanel;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"interface Timezone {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  id: string;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  offset: string;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"const formatTwoDigits: Function \u003d (n: number): string \u003d\u003e {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  if (n \u003c 10) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    return `0${n}`;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  return String(n);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"};"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":75,"author":{"gitId":"-"},"content":" * Instructor course edit page."},{"lineNumber":76,"author":{"gitId":"-"},"content":" */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-course-edit-page\u0027,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-course-edit-page.component.html\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-course-edit-page.component.scss\u0027],"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":82,"author":{"gitId":"-"},"content":"})"},{"lineNumber":83,"author":{"gitId":"-"},"content":"export class InstructorCourseEditPageComponent implements OnInit {"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"  @ViewChild(\u0027courseForm\u0027) form!: FormGroup;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  EditMode: typeof EditMode \u003d EditMode;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  FormValidator: typeof FormValidator \u003d FormValidator;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  CoursesSectionQuestions: typeof CoursesSectionQuestions \u003d CoursesSectionQuestions;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  Sections: typeof Sections \u003d Sections;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  timezones: Timezone[] \u003d [];"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  isEditingCourse: boolean \u003d false;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  course: Course \u003d {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    institute: \u0027\u0027,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    creationTimestamp: 0,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    deletionTimestamp: 0,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  originalCourse: Course \u003d {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    institute: \u0027\u0027,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    creationTimestamp: 0,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    deletionTimestamp: 0,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  currInstructorGoogleId: string \u003d \u0027\u0027;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  currInstructorCoursePrivilege: InstructorPermissionSet \u003d {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    canModifyCourse: true,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    canModifySession: true,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    canModifyStudent: true,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    canModifyInstructor: true,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    canViewStudentInSections: true,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    canModifySessionCommentsInSections: true,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    canViewSessionInSections: true,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    canSubmitSessionInSections: true,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  instructorDetailPanels: InstructorEditPanelDetail[] \u003d [];"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  isAddingNewInstructor: boolean \u003d false;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  newInstructorPanel: InstructorEditPanel \u003d {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    googleId: \u0027\u0027,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    email: \u0027\u0027,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    isDisplayedToStudents: true,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    displayedToStudentsAs: \u0027Instructor\u0027,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    name: \u0027\u0027,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    joinState: JoinState.NOT_JOINED,"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    permission: {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      privilege: {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        canModifyCourse: false,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        canModifySession: false,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        canModifyStudent: false,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        canModifyInstructor: false,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        canViewStudentInSections: false,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        canModifySessionCommentsInSections: false,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        canViewSessionInSections: false,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        canSubmitSessionInSections: false,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      sectionLevel: [],"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    isEditing: true,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    isSavingInstructorEdit: false,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  // for fine-grain permission setting"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  allSections: string[] \u003d [];"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  allSessions: string[] \u003d [];"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"  isCourseLoading: boolean \u003d false;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  hasCourseLoadingFailed: boolean \u003d false;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  isInstructorsLoading: boolean \u003d false;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  hasInstructorsLoadingFailed: boolean \u003d false;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  isSavingCourseEdit: boolean \u003d false;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  isSavingNewInstructor: boolean \u003d false;"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"              private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService) { }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"      this.loadCourseInfo();"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      this.loadCurrInstructorInfo();"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"      // load all section and session name"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      forkJoin(["},{"lineNumber":188,"author":{"gitId":"-"},"content":"        this.studentService.getStudentsFromCourse({ courseId: this.courseId }),"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId),"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      ]).subscribe((vals: any[]) \u003d\u003e {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        const students: Students \u003d vals[0] as Students;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        const sessions: FeedbackSessions \u003d vals[1] as FeedbackSessions;"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        this.allSections \u003d"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            Array.from(new Set(students.students.map((value: Student) \u003d\u003e value.sectionName)));"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        this.allSessions \u003d"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            sessions.feedbackSessions.map((session: FeedbackSession) \u003d\u003e session.feedbackSessionName);"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        this.loadCourseInstructors();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"    for (const [id, offset] of Object.entries(this.timezoneService.getTzOffsets())) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      const hourOffset: number \u003d Math.floor(Math.abs(offset) / 60);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      const minOffset: number \u003d Math.abs(offset) % 60;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      const sign: string \u003d offset \u003c 0 ? \u0027-\u0027 : \u0027+\u0027;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      this.timezones.push({"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        id,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        offset: offset \u003d\u003d\u003d 0 ? \u0027UTC\u0027 : `UTC ${sign}${formatTwoDigits(hourOffset)}:${formatTwoDigits(minOffset)}`,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * Replaces the timezone value with the detected timezone."},{"lineNumber":216,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  detectTimezone(): void {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    this.course.timeZone \u003d this.timezoneService.guessTimezone();"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   * Loads the course being edited."},{"lineNumber":223,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  loadCourseInfo(): void {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    this.hasCourseLoadingFailed \u003d false;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    this.isCourseLoading \u003d true;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    this.courseService.getCourseAsInstructor(this.courseId).pipe(finalize(() \u003d\u003e {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      this.isCourseLoading \u003d false;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    })).subscribe((resp: Course) \u003d\u003e {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      this.course \u003d resp;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      this.currInstructorCoursePrivilege \u003d resp.privileges || DEFAULT_INSTRUCTOR_PRIVILEGE();"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      this.originalCourse \u003d { ...resp };"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      this.hasCourseLoadingFailed \u003d true;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":240,"author":{"gitId":"-"},"content":"   * Loads the information of the current logged-in instructor."},{"lineNumber":241,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  loadCurrInstructorInfo(): void {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    this.authService.getAuthUser().subscribe((res: AuthInfo) \u003d\u003e {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      this.currInstructorGoogleId \u003d res.user \u003d\u003d\u003d undefined ? \u0027\u0027 : res.user.id;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"   * Deletes the current course and redirects to \u0027Courses\u0027 page if action is successful."},{"lineNumber":252,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  deleteCourse(): void {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    this.courseService.binCourse(this.courseId).subscribe((course: Course) \u003d\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/courses\u0027,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"          `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":263,"author":{"gitId":"-"},"content":"   * Saves the updated course details."},{"lineNumber":264,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  onSaveCourse(): void {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    if (this.form.invalid) {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsTouched());"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    this.isSavingCourseEdit \u003d true;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    this.courseService.updateCourse(this.courseId, {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      courseName: this.course.courseName,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      timeZone: this.course.timeZone,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      this.isSavingCourseEdit \u003d false;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    })).subscribe((resp: Course) \u003d\u003e {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(\u0027The course has been edited.\u0027);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      this.isEditingCourse \u003d false;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      this.course \u003d resp;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      this.originalCourse \u003d { ...resp };"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsUntouched());"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsPristine());"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":289,"author":{"gitId":"-"},"content":"   * Cancels editing the course details."},{"lineNumber":290,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  cancelEditingCourse(): void {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    this.course \u003d { ...this.originalCourse };"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    this.isEditingCourse \u003d false;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsPristine());"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsUntouched());"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":299,"author":{"gitId":"-"},"content":"   * Loads all instructors in the course."},{"lineNumber":300,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  loadCourseInstructors(): void {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    this.hasInstructorsLoadingFailed \u003d false;"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    this.isInstructorsLoading \u003d true;"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    this.instructorService.loadInstructors({"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        .subscribe((resp: Instructors) \u003d\u003e {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"          this.instructorDetailPanels \u003d resp.instructors.map((i: Instructor) \u003d\u003e ({"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            originalInstructor: { ...i },"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            originalPanel: this.getInstructorEditPanelModel(i),"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            editPanel: this.getInstructorEditPanelModel(i),"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            isSavingInstructorEdit: false,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"          }));"},{"lineNumber":315,"author":{"gitId":"-"},"content":"          this.instructorDetailPanels.forEach((panel: InstructorEditPanelDetail) \u003d\u003e {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            this.loadPermissionForInstructor(panel);"},{"lineNumber":317,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"          this.hasInstructorsLoadingFailed \u003d true;"},{"lineNumber":320,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":322,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":325,"author":{"gitId":"-"},"content":"   * Gets the default edit panel model of an instructor."},{"lineNumber":326,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":327,"author":{"gitId":"-"},"content":"  getInstructorEditPanelModel(i: Instructor): InstructorEditPanel {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":329,"author":{"gitId":"-"},"content":"     * The non-null assertion operator (!) is used below in `isDisplayedToStudents`,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"     * `displayedToStudentsAs` and `role`. These attributes should never be undefined and are only"},{"lineNumber":331,"author":{"gitId":"samuelfangjw"},"content":"     * typed as such to accommodate for a use case in SearchService."},{"lineNumber":332,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      googleId: i.googleId,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      courseId: i.courseId,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      email: i.email,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      isDisplayedToStudents: i.isDisplayedToStudents!,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      displayedToStudentsAs: i.displayedToStudentsAs!,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      name: i.name,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      role: i.role!,"},{"lineNumber":344,"author":{"gitId":"-"},"content":"      joinState: i.joinState,"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"      permission: {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        privilege: {"},{"lineNumber":348,"author":{"gitId":"-"},"content":"          canModifyCourse: false,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"          canModifySession: false,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"          canModifyStudent: false,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"          canModifyInstructor: false,"},{"lineNumber":352,"author":{"gitId":"-"},"content":"          canViewStudentInSections: false,"},{"lineNumber":353,"author":{"gitId":"-"},"content":"          canModifySessionCommentsInSections: false,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"          canViewSessionInSections: false,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"          canSubmitSessionInSections: false,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        sectionLevel: [],"},{"lineNumber":358,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      isSavingInstructorEdit: false,"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":363,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":366,"author":{"gitId":"-"},"content":"   * Shows the model of details permission for a role."},{"lineNumber":367,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":368,"author":{"gitId":"-"},"content":"  viewRolePrivilegeModel(role: InstructorPermissionRole): void {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(ViewRolePrivilegesModalComponent);"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {}, () \u003d\u003e {});"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    let privilege: InstructorPermissionSet;"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    switch (role) {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      case InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER:"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        privilege \u003d DEFAULT_PRIVILEGE_COOWNER();"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      case InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_MANAGER:"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        privilege \u003d DEFAULT_PRIVILEGE_MANAGER();"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      case InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_OBSERVER:"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        privilege \u003d DEFAULT_PRIVILEGE_OBSERVER();"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      case InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_TUTOR:"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        privilege \u003d DEFAULT_PRIVILEGE_TUTOR();"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      case InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_CUSTOM:"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        privilege \u003d DEFAULT_INSTRUCTOR_PRIVILEGE();"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.instructorPrivilege \u003d privilege;"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.role \u003d role;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":394,"author":{"gitId":"-"},"content":"   * Cancels editing an instructor."},{"lineNumber":395,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":396,"author":{"gitId":"-"},"content":"  cancelEditingInstructor(index: number): void {"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    panelDetail.editPanel \u003d JSON.parse(JSON.stringify(panelDetail.originalPanel));"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    panelDetail.editPanel.isSavingInstructorEdit \u003d false;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    panelDetail.editPanel.isEditing \u003d false;"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":404,"author":{"gitId":"-"},"content":"   * Saves instructor at index."},{"lineNumber":405,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":406,"author":{"gitId":"-"},"content":"  saveInstructor(index: number): void {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    panelDetail.editPanel.isSavingInstructorEdit \u003d true;"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    const reqBody: InstructorCreateRequest \u003d {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      id: panelDetail.originalInstructor.joinState \u003d\u003d\u003d JoinState.JOINED"},{"lineNumber":411,"author":{"gitId":"-"},"content":"          ? panelDetail.originalInstructor.googleId : undefined,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      name: panelDetail.editPanel.name,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      email: panelDetail.originalInstructor.joinState \u003d\u003d\u003d JoinState.JOINED"},{"lineNumber":414,"author":{"gitId":"-"},"content":"          ? panelDetail.editPanel.email : panelDetail.originalInstructor.email,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      role: panelDetail.editPanel.role,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      displayName: panelDetail.editPanel.displayedToStudentsAs,"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      isDisplayedToStudent: panelDetail.editPanel.isDisplayedToStudents,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    } as InstructorCreateRequest;"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"    this.instructorService.updateInstructor({"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      courseId: panelDetail.originalInstructor.courseId,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      requestBody: reqBody,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      panelDetail.editPanel.isSavingInstructorEdit \u003d false;"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    })).subscribe((resp: Instructor) \u003d\u003e {"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      panelDetail.editPanel.isEditing \u003d false;"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      panelDetail.originalInstructor \u003d { ...resp };"},{"lineNumber":428,"author":{"gitId":"-"},"content":"      const permission: InstructorOverallPermission \u003d panelDetail.editPanel.permission;"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"      panelDetail.editPanel \u003d this.getInstructorEditPanelModel(resp);"},{"lineNumber":431,"author":{"gitId":"-"},"content":"      panelDetail.editPanel.permission \u003d permission;"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"      this.updatePrivilegeForInstructor(panelDetail.originalInstructor, panelDetail.editPanel.permission);"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(`The instructor ${resp.name} has been updated.`);"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"    panelDetail.originalPanel \u003d JSON.parse(JSON.stringify(panelDetail.editPanel));"},{"lineNumber":442,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   * Deletes instructor at index."},{"lineNumber":446,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":447,"author":{"gitId":"-"},"content":"  deleteInstructor(index: number): void {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    const isDeletingSelf: boolean \u003d panelDetail.originalInstructor.googleId \u003d\u003d\u003d this.currInstructorGoogleId;"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d isDeletingSelf"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        ? `Are you sure you want to delete your instructor role"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        from the course \u003cstrong\u003e${panelDetail.originalInstructor.courseId}\u003c/strong\u003e?"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        You will not be able to access the course anymore.`"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        : `Are you sure you want to delete the instructor \u003cstrong\u003e${panelDetail.originalInstructor.name}\u003c/strong\u003e"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        from the course \u003cstrong\u003e${panelDetail.originalInstructor.courseId}\u003c/strong\u003e?"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        He/she will not be able to access the course anymore.`;"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":458,"author":{"gitId":"-"},"content":"        `Delete instructor \u003cstrong\u003e${panelDetail.originalInstructor.name}\u003c/strong\u003e?`,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        SimpleModalType.DANGER, modalContent);"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      this.instructorService.deleteInstructor({"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        courseId: panelDetail.originalInstructor.courseId,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        instructorEmail: panelDetail.originalInstructor.email,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      }).subscribe(() \u003d\u003e {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        if (panelDetail.originalInstructor.googleId \u003d\u003d\u003d this.currInstructorGoogleId) {"},{"lineNumber":467,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithSuccessMessage("},{"lineNumber":468,"author":{"gitId":"-"},"content":"                  this.router, \u0027/web/instructor/courses\u0027, \u0027Instructor is successfully deleted.\u0027);"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"          this.instructorDetailPanels.splice(index, 1);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027Instructor is successfully deleted.\u0027);"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":477,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":480,"author":{"gitId":"-"},"content":"   * Re-sends an invitation email to an instructor in the course."},{"lineNumber":481,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":482,"author":{"gitId":"-"},"content":"  resendReminderEmail(index: number): void {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `Do you wish to re-send the invitation email to instructor"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      ${panelDetail.originalInstructor.name} from course ${panelDetail.originalInstructor.courseId}?`;"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":487,"author":{"gitId":"-"},"content":"        \u0027Re-send invitation email?\u0027, SimpleModalType.INFO, modalContent);"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      this.courseService"},{"lineNumber":491,"author":{"gitId":"-"},"content":"          .remindInstructorForJoin(panelDetail.originalInstructor.courseId, panelDetail.originalInstructor.email)"},{"lineNumber":492,"author":{"gitId":"-"},"content":"          .subscribe((resp: MessageOutput) \u003d\u003e {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(resp.message);"},{"lineNumber":494,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":496,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":498,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   * Adds new instructor."},{"lineNumber":502,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":503,"author":{"gitId":"-"},"content":"  addNewInstructor(): void {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    this.isSavingNewInstructor \u003d true;"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    const reqBody: InstructorCreateRequest \u003d {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      name: this.newInstructorPanel.name,"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      email: this.newInstructorPanel.email,"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      role: this.newInstructorPanel.role,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      displayName: this.newInstructorPanel.displayedToStudentsAs,"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      isDisplayedToStudent: this.newInstructorPanel.isDisplayedToStudents,"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    } as InstructorCreateRequest;"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"    this.instructorService.createInstructor({ courseId: this.courseId, requestBody: reqBody })"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"          this.isSavingNewInstructor \u003d false;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        .subscribe((resp: Instructor) \u003d\u003e {"},{"lineNumber":518,"author":{"gitId":"-"},"content":"          const newDetailPanels: InstructorEditPanelDetail \u003d {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"            originalInstructor: { ...resp },"},{"lineNumber":520,"author":{"gitId":"-"},"content":"            originalPanel: this.getInstructorEditPanelModel(resp),"},{"lineNumber":521,"author":{"gitId":"-"},"content":"            editPanel: this.getInstructorEditPanelModel(resp),"},{"lineNumber":522,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":523,"author":{"gitId":"-"},"content":"          newDetailPanels.editPanel.permission \u003d this.newInstructorPanel.permission;"},{"lineNumber":524,"author":{"gitId":"-"},"content":"          newDetailPanels.originalPanel \u003d JSON.parse(JSON.stringify(newDetailPanels.editPanel));"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"          this.instructorDetailPanels.push(newDetailPanels);"},{"lineNumber":527,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(`\"The instructor ${resp.name} has been added successfully."},{"lineNumber":528,"author":{"gitId":"-"},"content":"          An email containing how to \u0027join\u0027 this course will be sent to ${resp.email} in a few minutes.\"`);"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"          this.updatePrivilegeForInstructor(newDetailPanels.originalInstructor, newDetailPanels.editPanel.permission);"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"-"},"content":"          this.isAddingNewInstructor \u003d false;"},{"lineNumber":533,"author":{"gitId":"-"},"content":"          this.newInstructorPanel \u003d {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"            googleId: \u0027\u0027,"},{"lineNumber":535,"author":{"gitId":"-"},"content":"            courseId: \u0027\u0027,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            email: \u0027\u0027,"},{"lineNumber":537,"author":{"gitId":"-"},"content":"            isDisplayedToStudents: true,"},{"lineNumber":538,"author":{"gitId":"-"},"content":"            displayedToStudentsAs: \u0027\u0027,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            name: \u0027\u0027,"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"            joinState: JoinState.NOT_JOINED,"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"-"},"content":"            permission: {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"              privilege: {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                canModifyCourse: true,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"                canModifySession: true,"},{"lineNumber":547,"author":{"gitId":"-"},"content":"                canModifyStudent: true,"},{"lineNumber":548,"author":{"gitId":"-"},"content":"                canModifyInstructor: true,"},{"lineNumber":549,"author":{"gitId":"-"},"content":"                canViewStudentInSections: true,"},{"lineNumber":550,"author":{"gitId":"-"},"content":"                canModifySessionCommentsInSections: true,"},{"lineNumber":551,"author":{"gitId":"-"},"content":"                canViewSessionInSections: true,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"                canSubmitSessionInSections: true,"},{"lineNumber":553,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":554,"author":{"gitId":"-"},"content":"              sectionLevel: [],"},{"lineNumber":555,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"            isEditing: true,"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            isSavingInstructorEdit: false,"},{"lineNumber":559,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":561,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":563,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":566,"author":{"gitId":"-"},"content":"   * Loads permission for instructor."},{"lineNumber":567,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":568,"author":{"gitId":"-"},"content":"  loadPermissionForInstructor(panel: InstructorEditPanelDetail): void {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    const instructor: Instructor \u003d panel.originalInstructor;"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    const permission: InstructorOverallPermission \u003d panel.editPanel.permission;"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"    if (instructor.role !\u003d\u003d InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_CUSTOM) {"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      this.isInstructorsLoading \u003d false;"},{"lineNumber":574,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":575,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":576,"author":{"gitId":"-"},"content":""},{"lineNumber":577,"author":{"gitId":"-"},"content":"    this.instructorService.loadInstructorPrivilege({"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      courseId: instructor.courseId,"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      instructorEmail: instructor.email,"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    }).subscribe((resp: InstructorPrivilege) \u003d\u003e {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"      permission.privilege \u003d resp.privileges.courseLevel;"},{"lineNumber":582,"author":{"gitId":"-"},"content":""},{"lineNumber":583,"author":{"gitId":"-"},"content":"      this.allSections.forEach((sectionName: string) \u003d\u003e {"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        const sectionLevelPermission: InstructorSectionLevelPermission \u003d {"},{"lineNumber":585,"author":{"gitId":"-"},"content":"          sectionNames: [sectionName],"},{"lineNumber":586,"author":{"gitId":"-"},"content":"          privilege: resp.privileges.sectionLevel[sectionName] || permission.privilege,"},{"lineNumber":587,"author":{"gitId":"-"},"content":"          sessionLevel: [],"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"        this.allSessions.forEach((sessionName: string) \u003d\u003e {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"          const sessionLevelPermission: InstructorSessionLevelPermission \u003d {"},{"lineNumber":592,"author":{"gitId":"-"},"content":"            sessionName,"},{"lineNumber":593,"author":{"gitId":"-"},"content":"            privilege: (resp.privileges.sessionLevel[sectionName] || {})[sessionName]"},{"lineNumber":594,"author":{"gitId":"-"},"content":"                || sectionLevelPermission.privilege,"},{"lineNumber":595,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":596,"author":{"gitId":"-"},"content":"          sectionLevelPermission.sessionLevel.push(sessionLevelPermission);"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        permission.sectionLevel.push(sectionLevelPermission);"},{"lineNumber":599,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":600,"author":{"gitId":"-"},"content":""},{"lineNumber":601,"author":{"gitId":"-"},"content":"      permission.sectionLevel \u003d permission.sectionLevel"},{"lineNumber":602,"author":{"gitId":"-"},"content":"          .filter((sectionLevelPermission: InstructorSectionLevelPermission) \u003d\u003e {"},{"lineNumber":603,"author":{"gitId":"-"},"content":"            // discard section level permission that is consistent with the overall permission"},{"lineNumber":604,"author":{"gitId":"-"},"content":"            if (sectionLevelPermission.privilege.canViewStudentInSections"},{"lineNumber":605,"author":{"gitId":"-"},"content":"                !\u003d\u003d permission.privilege.canViewStudentInSections) {"},{"lineNumber":606,"author":{"gitId":"-"},"content":"              return true;"},{"lineNumber":607,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":608,"author":{"gitId":"-"},"content":"            if (sectionLevelPermission.privilege.canModifySessionCommentsInSections"},{"lineNumber":609,"author":{"gitId":"-"},"content":"                !\u003d\u003d permission.privilege.canModifySessionCommentsInSections) {"},{"lineNumber":610,"author":{"gitId":"-"},"content":"              return true;"},{"lineNumber":611,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":612,"author":{"gitId":"-"},"content":"            if (sectionLevelPermission.privilege.canViewSessionInSections"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                !\u003d\u003d permission.privilege.canViewSessionInSections) {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"              return true;"},{"lineNumber":615,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":616,"author":{"gitId":"-"},"content":"            if (sectionLevelPermission.privilege.canSubmitSessionInSections"},{"lineNumber":617,"author":{"gitId":"-"},"content":"                !\u003d\u003d permission.privilege.canSubmitSessionInSections) {"},{"lineNumber":618,"author":{"gitId":"-"},"content":"              return true;"},{"lineNumber":619,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":620,"author":{"gitId":"-"},"content":""},{"lineNumber":621,"author":{"gitId":"-"},"content":"            return sectionLevelPermission.sessionLevel"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                .some((sessionLevelPermission: InstructorSessionLevelPermission) \u003d\u003e {"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                  return sectionLevelPermission.privilege.canModifySessionCommentsInSections"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                          !\u003d\u003d sessionLevelPermission.privilege.canModifySessionCommentsInSections"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                      || sectionLevelPermission.privilege.canViewSessionInSections"},{"lineNumber":626,"author":{"gitId":"-"},"content":"                          !\u003d\u003d sessionLevelPermission.privilege.canViewSessionInSections"},{"lineNumber":627,"author":{"gitId":"-"},"content":"                      || sectionLevelPermission.privilege.canSubmitSessionInSections"},{"lineNumber":628,"author":{"gitId":"-"},"content":"                          !\u003d\u003d sessionLevelPermission.privilege.canSubmitSessionInSections;"},{"lineNumber":629,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":630,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":631,"author":{"gitId":"-"},"content":""},{"lineNumber":632,"author":{"gitId":"-"},"content":"      permission.sectionLevel.forEach((sectionLevel: InstructorSectionLevelPermission) \u003d\u003e {"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        if (sectionLevel.sessionLevel.every((sessionLevel: InstructorSessionLevelPermission) \u003d\u003e {"},{"lineNumber":634,"author":{"gitId":"-"},"content":"          return sectionLevel.privilege.canModifySessionCommentsInSections"},{"lineNumber":635,"author":{"gitId":"-"},"content":"                  \u003d\u003d\u003d sessionLevel.privilege.canModifySessionCommentsInSections"},{"lineNumber":636,"author":{"gitId":"-"},"content":"              \u0026\u0026 sectionLevel.privilege.canViewSessionInSections"},{"lineNumber":637,"author":{"gitId":"-"},"content":"                  \u003d\u003d\u003d sessionLevel.privilege.canViewSessionInSections"},{"lineNumber":638,"author":{"gitId":"-"},"content":"              \u0026\u0026 sectionLevel.privilege.canSubmitSessionInSections"},{"lineNumber":639,"author":{"gitId":"-"},"content":"                  \u003d\u003d\u003d sessionLevel.privilege.canSubmitSessionInSections;"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        })) {"},{"lineNumber":641,"author":{"gitId":"-"},"content":"          // session level is consistent with the section level, we can remove it."},{"lineNumber":642,"author":{"gitId":"-"},"content":"          sectionLevel.sessionLevel \u003d [];"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":644,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":645,"author":{"gitId":"-"},"content":"      panel.originalPanel \u003d JSON.parse(JSON.stringify(panel.editPanel));"},{"lineNumber":646,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":647,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":650,"author":{"gitId":"-"},"content":"   * Updates privilege for instructor"},{"lineNumber":651,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":652,"author":{"gitId":"-"},"content":"  updatePrivilegeForInstructor(instructor: Instructor, permission: InstructorOverallPermission): void {"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    if (instructor.role !\u003d\u003d InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_CUSTOM) {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":656,"author":{"gitId":"-"},"content":""},{"lineNumber":657,"author":{"gitId":"-"},"content":"    const privileges: InstructorPrivileges \u003d {"},{"lineNumber":658,"author":{"gitId":"-"},"content":"      courseLevel: permission.privilege,"},{"lineNumber":659,"author":{"gitId":"-"},"content":"      sectionLevel: {},"},{"lineNumber":660,"author":{"gitId":"-"},"content":"      sessionLevel: {},"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    permission.sectionLevel.forEach((sectionLevel: InstructorSectionLevelPermission) \u003d\u003e {"},{"lineNumber":663,"author":{"gitId":"-"},"content":"      sectionLevel.sectionNames.forEach((sectionName: string) \u003d\u003e {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        privileges.sectionLevel[sectionName] \u003d sectionLevel.privilege;"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        privileges.sessionLevel[sectionName] \u003d {};"},{"lineNumber":666,"author":{"gitId":"-"},"content":""},{"lineNumber":667,"author":{"gitId":"-"},"content":"        sectionLevel.sessionLevel.forEach((sessionLevel: InstructorSessionLevelPermission) \u003d\u003e {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"          privileges.sessionLevel[sectionName][sessionLevel.sessionName] \u003d sessionLevel.privilege;"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":670,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":672,"author":{"gitId":"-"},"content":""},{"lineNumber":673,"author":{"gitId":"-"},"content":"    this.instructorService.updateInstructorPrivilege({"},{"lineNumber":674,"author":{"gitId":"-"},"content":"      courseId: instructor.courseId,"},{"lineNumber":675,"author":{"gitId":"-"},"content":"      instructorEmail: instructor.email,"},{"lineNumber":676,"author":{"gitId":"-"},"content":"      requestBody: { privileges },"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    }).subscribe(() \u003d\u003e {"},{"lineNumber":678,"author":{"gitId":"-"},"content":"      // privileges updated"},{"lineNumber":679,"author":{"gitId":"-"},"content":"      // filter out empty permission setting"},{"lineNumber":680,"author":{"gitId":"-"},"content":"      permission.sectionLevel \u003d permission.sectionLevel.filter("},{"lineNumber":681,"author":{"gitId":"-"},"content":"          (sectionLevel: InstructorSectionLevelPermission) \u003d\u003e sectionLevel.sectionNames.length !\u003d\u003d 0);"},{"lineNumber":682,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":683,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":685,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":686,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":685,"samuelfangjw":1}},{"path":"src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry *tmIsLoading\u003d\"isLoadingCourseEnrollPage\" [shouldShowRetry]\u003d\"!coursePresent\" [message]\u003d\"\u0027Failed to load course\u0027\" (retryEvent)\u003d\"getCourseEnrollPageData(courseId)\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"coursePresent\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003ch1 id\u003d\"enroll-header\" class\u003d\"text-break\"\u003eEnroll Students for {{ courseId }}\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003ctm-loading-retry [shouldShowRetry]\u003d\"hasLoadingStudentsFailed\" [message]\u003d\"\u0027Failed to load students\u0027\" (retryEvent)\u003d\"getCourseEnrollPageData(courseId)\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\u0027!hasLoadingStudentsFailed\u0027 class\u003d\"card card-primary\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body fill-plain\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          \u003cp class\u003d\"text-muted\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u003ca class\u003d\"scroll-down\" tabindex\u003d\"0\" role\u003d\"button\" (click)\u003d\"navigateToMoreInfo()\"\u003e \u003c!--We are just treating it as a button here--\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"              \u003cb\u003e\u0026nbsp;\u003c/b\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"              \u003cb\u003e\u003cu\u003eScroll down\u003c/u\u003e\u003c/b\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            to see more information about the spreadsheet interfaces."},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cbr\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e If you want to enroll more than"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cstrong\u003e100\u003c/strong\u003e students into one course, divide students into sections containing no more than"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cstrong\u003e100\u003c/strong\u003e students.\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003c/p\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-12\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003ctm-status-message [messages]\u003d\"statusMessage\"\u003e\u003c/tm-status-message\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"card card-default\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              \u003cdiv id\u003d\"toggle-existing-students\" class\u003d\"card-header cursor-pointer\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                  (click)\u003d\"toggleExistingStudentsPanel()\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cb\u003eExisting Students\u003c/b\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                  \u003ctm-ajax-preload *ngIf\u003d\"isLoadingExistingStudents\"\u003e\u003c/tm-ajax-preload\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                  \u003cb class\u003d\"existing-students-status-message\"\u003e{{ isExistingStudentsPresent ? \u0027\u0027 : \u0027No existing students in course.\u0027 }}\u003c/b\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                  \u003cb class\u003d\"existing-students-status-message\"\u003e{{ isAjaxSuccess ? \u0027\u0027 : \u0027Failed to load. Click here to retry.\u0027 }}\u003c/b\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                  \u003ctm-panel-chevron [isExpanded]\u003d\"!isExistingStudentsPanelCollapsed\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003chot-table"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                  [licenseKey]\u003d\"\u0027non-commercial-and-evaluation\u0027\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                  [hotId]\u003d\"existingStudentsHOT\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                  [readOnly]\u003d\"true\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                  [height]\u003d\"400\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                  [autoWrapRow]\u003d\"true\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                  [preventOverflow]\u003d\"\u0027horizontal\u0027\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                  [manualColumnResize]\u003d\"true\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                  [manualRowResize]\u003d\"true\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                  [manualColumnMove]\u003d\"true\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"                  [rowHeaders]\u003d\"true\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"                  [colHeaders]\u003d\"colHeaders\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"                  [columnSorting]\u003d\"true\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"                  [minRows]\u003d\"20\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"                  [maxCols]\u003d\"5\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"                  [autoRowSize]\u003d\"true\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"                  [stretchH]\u003d\"\u0027all\u0027\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                  [hidden]\u003d\"isExistingStudentsPanelCollapsed\" @collapseAnim\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003c/hot-table\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"enrollErrorMessage\" class\u003d\"card card-default\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"card-body bg-danger text-white\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u003cbutton class\u003d\"float-right fas fa-times close\" (click)\u003d\"enrollErrorMessage \u003d \u0027\u0027\"\u003e\u003c/button\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                {{ enrollErrorMessage }}"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"card card-default\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"card-header cursor-pointer\" (click)\u003d\"toggleNewStudentsPanel()\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003cb\u003eNew Students\u003c/b\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                  \u003ctm-panel-chevron [isExpanded]\u003d\"!isNewStudentsPanelCollapsed\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"              \u003chot-table"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                  [licenseKey]\u003d\"\u0027non-commercial-and-evaluation\u0027\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                  [hotId]\u003d\"newStudentsHOT\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                  [height]\u003d\"500\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                  [autoWrapRow]\u003d\"true\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                  [preventOverflow]\u003d\"\u0027horizontal\u0027\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                  [manualColumnResize]\u003d\"true\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                  [manualRowResize]\u003d\"true\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"                  [manualColumnMove]\u003d\"true\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"                  [rowHeaders]\u003d\"true\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                  [colHeaders]\u003d\"colHeaders\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                  [columnSorting]\u003d\"true\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                  [minRows]\u003d\"20\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"                  [maxCols]\u003d\"5\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"                  [autoRowSize]\u003d\"true\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                  [stretchH]\u003d\"\u0027all\u0027\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                  [minSpareRows]\u003d\"1\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                  [contextMenu]\u003d\"contextMenuOptions\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                  [hidden]\u003d\"isNewStudentsPanelCollapsed\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"              \u003c/hot-table\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row enroll-students-spreadsheet-buttons\" [hidden]\u003d\"isNewStudentsPanelCollapsed\"\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"enroll-button-group\"\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"input-group\"\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                  \u003cbutton type\u003d\"button\" title\u003d\"Add\" id\u003d\"btn-add-empty-rows\" class\u003d\"btn btn-primary btn-margin-right\" (click)\u003d\"addRows(numOfRows.value)\"\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    Add row(s)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                  \u003c/button\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                  \u003cinput type\u003d\"number\" id\u003d\"number-of-rows\" class\u003d\"form-control\" value\u003d\"1\" min\u003d\"0\" #numOfRows\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"enroll-button-group\"\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u003cbutton"},{"lineNumber":99,"author":{"gitId":"FergusMok"},"content":"                    [ngClass]\u003d\"{\u0027w-50\u0027: isEnrolling}\""},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    type\u003d\"submit\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    title\u003d\"Enroll\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    id\u003d\"btn-enroll\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    name\u003d\"button-enroll\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    class\u003d\"btn btn-success float-right\""},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    [disabled]\u003d\"isEnrolling\""},{"lineNumber":106,"author":{"gitId":"-"},"content":"                    (click)\u003d\"submitEnrollData()\"\u003e"},{"lineNumber":107,"author":{"gitId":"FergusMok"},"content":"                  \u003ctm-progress-bar *ngIf\u003d\"isEnrolling\"\u003e\u003c/tm-progress-bar\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                  \u003ctm-ajax-loading *ngIf\u003d\"isEnrolling\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                  Enroll students"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-3\" style\u003d\"align-items: center;\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"box red-box\"\u003e\u003c/div\u003e\u003cspan class\u003d\"mr-5\"\u003eStudent failed to be enrolled\u003c/span\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"box green-box\"\u003e\u003c/div\u003e\u003cspan class\u003d\"mr-5\"\u003eStudent added\u003c/span\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"box yellow-box\"\u003e\u003c/div\u003e\u003cspan class\u003d\"mr-5\"\u003eStudent modified\u003c/span\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"box grey-box\"\u003e\u003c/div\u003e\u003cspan class\u003d\"mr-5\"\u003eStudent updated with no changes\u003c/span\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    \u003c/tm-loading-retry\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    \u003cbutton id\u003d\"paste\" [hidden]\u003d\"true\" (click)\u003d\"showPasteModalBox()\"\u003e\u003c/button\u003e \u003c!-- Acts as a medium to send the modal box into the JS file --\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"more-info\" #moreInfo [hidden]\u003d\"showEnrollResults\"\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      \u003ch2\u003e More info \u003c/h2\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      \u003chr\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003cul\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"more-info-point-title\"\u003eSpreadsheet Information\u003c/span\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"          \u003cul\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            \u003cli\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"              If you have student data in a spreadsheet, simply copy the relevant cell-range from your spreadsheet and"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              paste into the \u003ccode\u003eNew students\u003c/code\u003e spreadsheet interface above.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"              \u003ctable class\u003d\"table table-striped table-bordered\"\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u003ctbody\u003e\u003ctr\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                  \u003cth\u003eSection\u003c/th\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                  \u003cth\u003eTeam\u003c/th\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                  \u003cth\u003eName\u003c/th\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                  \u003cth\u003eEmail\u003c/th\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  \u003cth\u003eComments\u003c/th\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 1\u003c/td\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 1\u003c/td\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTom Jacobs\u003c/td\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                  \u003ctd\u003etom@example.com\u003c/td\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 1\u003c/td\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 1\u003c/td\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eJean Wong\u003c/td\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                  \u003ctd\u003ejean@example.com\u003c/td\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eExchange Student\u003c/td\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 1\u003c/td\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 1\u003c/td\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eRavi Kumar\u003c/td\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eravi@example.com\u003c/td\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 2\u003c/td\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 2\u003c/td\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eChun Ling\u003c/td\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eling@example.com\u003c/td\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 2\u003c/td\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 2\u003c/td\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eDesmond Wu\u003c/td\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                  \u003ctd\u003edesmond@example.com\u003c/td\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 2\u003c/td\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 3\u003c/td\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eHarsha Silva\u003c/td\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eharsha@example.com\u003c/td\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \u003c/tbody\u003e\u003c/table\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            \u003cli\u003eEach existing cells can be edited by just clicking on it.\u003c/li\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            \u003cli\u003eThe entire table can be sorted by just clicking on the column name.\u003c/li\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            \u003cli\u003eYou can re-arrange column order by clicking on the column header and dragging them left or right.\u003c/li\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            \u003cli\u003eTo access more edit functions, right-click on a cell.\u003c/li\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            \u003cli\u003eColumn width can be adjusted.\u003c/li\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003cli\u003eExpand the \u003ccode\u003eExisting students\u003c/code\u003e spreadsheet interface to view existing students in the course.\u003c/li\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          \u003c/ul\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"more-info-point-title\"\u003eColumns Information\u003c/span\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"          \u003cul\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"              \u003csamp\u003eSection\u003c/samp\u003e [Compulsory for courses having more than 100 students]: Section name/ID"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"              \u003csamp\u003eTeam\u003c/samp\u003e [Compulsory]: Team name/ID"},{"lineNumber":203,"author":{"gitId":"-"},"content":"              \u003cul\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"more-info-sub-point-details\"\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                  A team must be unique within a course. A team cannot be in 2 different sections."},{"lineNumber":206,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"more-info-sub-point-details\"\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                  If you do not have teams in your course, use “N/A” as the team name for all students."},{"lineNumber":209,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"              \u003c/ul\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":213,"author":{"gitId":"-"},"content":"              \u003csamp\u003eName\u003c/samp\u003e [Compulsory]: Student name"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":216,"author":{"gitId":"-"},"content":"              \u003csamp\u003eEmail\u003c/samp\u003e [Compulsory]: The email address used to contact the student.\u003cbr\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"              \u003cul\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"more-info-sub-point-details\"\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                  This need not be a Gmail address."},{"lineNumber":220,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"more-info-sub-point-details\"\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                  It should be unique for each student."},{"lineNumber":223,"author":{"gitId":"-"},"content":"                  If two students are given the same email, they will be considered the same student."},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"              \u003c/ul\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"              \u003csamp\u003eComments\u003c/samp\u003e [Optional]: Any other information you want to record about a student."},{"lineNumber":229,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          \u003c/ul\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"more-info-point-title\"\u003eMass editing enrolled students\u003c/span\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"          \u003cul\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            \u003cli\u003e"},{"lineNumber":236,"author":{"gitId":"-"},"content":"              To mass-edit data of enrolled students (except email address), simply use this page to re-enroll them with"},{"lineNumber":237,"author":{"gitId":"-"},"content":"              the"},{"lineNumber":238,"author":{"gitId":"-"},"content":"              updated data."},{"lineNumber":239,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u003cli\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"              To DELETE students or to UPDATE EMAIL address of a student, please go to the \u003ccode\u003ecourses\u003c/code\u003e page and"},{"lineNumber":242,"author":{"gitId":"-"},"content":"              click the \u003ccode\u003eStudents -\u0026gt; View/Edit\u003c/code\u003e link of the course."},{"lineNumber":243,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"          \u003c/ul\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003chr\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"results-panel\" *ngIf\u003d\"coursePresent \u0026\u0026 showEnrollResults\"\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  \u003ch1 class\u003d\"text-break\"\u003eEnrollment Results for {{ courseId }}\u003c/h1\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  \u003cdiv *ngFor\u003d\"let enrollResultPanel of enrollResultPanelList\"\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card enroll-results-panel\" *ngIf\u003d\"enrollResultPanel.studentList.length \u003e 0\"\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-header\" [ngClass]\u003d\"{\u0027bg-success\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.NEW,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"       \u0027bg-warning\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.MODIFIED,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"       \u0027bg-secondary\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.MODIFIED_UNCHANGED,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"       \u0027bg-danger\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.ERROR,"},{"lineNumber":259,"author":{"gitId":"-"},"content":"       \u0027bg-default\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.UNMODIFIED}\" [style.color]\u003d\"enrollResultPanel.status \u003d\u003d\u003d"},{"lineNumber":260,"author":{"gitId":"-"},"content":"       EnrollStatus.NEW || enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.MODIFIED_UNCHANGED ? \u0027white\u0027 : \u0027black\u0027 \"\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        {{ enrollResultPanel.messageForEnrollmentStatus }}"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      \u003ctable class\u003d\"table table-striped table-bordered table-responsive-lg\"\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        \u003cthead\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"          \u003ctr\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            \u003cth\u003eSection\u003c/th\u003e"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            \u003cth\u003eTeam\u003c/th\u003e"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            \u003cth\u003eStudent Name\u003c/th\u003e"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            \u003cth\u003eE-mail address\u003c/th\u003e"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            \u003cth\u003eComments\u003c/th\u003e"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            \u003cth *ngIf\u003d\"enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.ERROR\"\u003eErrors\u003c/th\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        \u003c/thead\u003e"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        \u003ctbody\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"          \u003ctr *ngFor\u003d\"let student of enrollResultPanel.studentList\"\u003e"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.sectionName }}\u003c/td\u003e"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.teamName }}\u003c/td\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.name }}\u003c/td\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.email }}\u003c/td\u003e"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.comments }}\u003c/td\u003e"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            \u003ctd *ngIf\u003d\"enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.ERROR\"\u003e{{ unsuccessfulEnrolls[student.email] }}\u003c/td\u003e"},{"lineNumber":282,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        \u003c/tbody\u003e"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c/table\u003e"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":287,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"FergusMok":2,"-":285}},{"path":"src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".fill-plain {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  background-color: #EAEFF5;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".card-default {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-color: #DDD;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  margin-bottom: 20px;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":".card-header {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  background-color: #F0F0F0;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":".card-body {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  padding: 15px;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":".text-muted {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  padding: 15px;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":".scroll-down :hover {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  color: blue;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":".status-message {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  padding: 15px;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":".more-info {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  margin-top: 30px;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  padding-bottom: 30px;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":".more-info-point-title {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  display: block;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  margin: 10px 0;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":".more-info-column-info {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  list-style: circle;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":".more-info-sub-point-details {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  list-style: disc;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-left: -20px;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":".enroll-students-spreadsheet-buttons {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  margin-top: -15px;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"#number-of-rows {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  margin-left: 10px;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":".enroll-results-panel {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  margin-bottom: 15px;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":".existing-students-status-message {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  margin-left: 1em;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  margin-right: 1em;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":".enroll-button-group {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  width: 50%;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"FergusMok"},"content":".enroll-button-group * {"},{"lineNumber":77,"author":{"gitId":"FergusMok"},"content":"  max-height: inherit;"},{"lineNumber":78,"author":{"gitId":"FergusMok"},"content":"}"},{"lineNumber":79,"author":{"gitId":"FergusMok"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"table {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  table-layout: fixed;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"table td {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  word-wrap: break-word;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":".box {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  float: left;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  width: 20px;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  height: 20px;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  margin: 5px;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"FergusMok":4,"-":90}},{"path":"src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { HotTableModule } from \u0027@handsontable/angular\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AjaxPreloadModule } from \u0027../../components/ajax-preload/ajax-preload.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { PanelChevronModule } from \u0027../../components/panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":10,"author":{"gitId":"FergusMok"},"content":"import { ProgressBarModule } from \u0027../../components/progress-bar/progress-bar.module\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { StatusMessageModule } from \u0027../../components/status-message/status-message.module\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { InstructorCourseEnrollPageComponent } from \u0027./instructor-course-enroll-page.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"describe(\u0027InstructorCourseEnrollPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  let component: InstructorCourseEnrollPageComponent;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cInstructorCourseEnrollPageComponent\u003e;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      declarations: [InstructorCourseEnrollPageComponent],"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":22,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        HotTableModule,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AjaxPreloadModule,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        StatusMessageModule,"},{"lineNumber":28,"author":{"gitId":"FergusMok"},"content":"        ProgressBarModule,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        PanelChevronModule,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(InstructorCourseEnrollPageComponent);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":46,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"FergusMok":2,"-":44}},{"path":"src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, ElementRef, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { HotTableRegisterer } from \u0027@handsontable/angular\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import Handsontable from \u0027handsontable\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { concat, Observable } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"FergusMok"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { EnrollStudents, HasResponses, JoinState, Student, Students } from \u0027../../../types/api-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { StudentEnrollRequest, StudentsEnrollRequest } from \u0027../../../types/api-request\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { StatusMessage } from \u0027../../components/status-message/status-message\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { EnrollStatus } from \u0027./enroll-status\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"interface EnrollResultPanel {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  status: EnrollStatus;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  messageForEnrollmentStatus: string;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  studentList: Student[];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Instructor course enroll page."},{"lineNumber":28,"author":{"gitId":"-"},"content":" */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-course-enroll-page\u0027,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-course-enroll-page.component.html\u0027,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-course-enroll-page.component.scss\u0027],"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":34,"author":{"gitId":"-"},"content":"})"},{"lineNumber":35,"author":{"gitId":"-"},"content":"export class InstructorCourseEnrollPageComponent implements OnInit {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  GENERAL_ERROR_MESSAGE: string \u003d `You may check that: \"Section\" and \"Comment\" are optional while \"Team\", \"Name\","},{"lineNumber":37,"author":{"gitId":"-"},"content":"        and \"Email\" must be filled. \"Section\", \"Team\", \"Name\", and \"Comment\" should start with an"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        alphabetical character, unless wrapped by curly brackets \"{}\", and should not contain vertical bar \"|\" and"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        percentage sign \"%\". \"Email\" should contain some text followed by one \"@\" sign followed by some"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        more text. \"Team\" should not have the same format as email to avoid mis-interpretation.`;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  SECTION_ERROR_MESSAGE: string \u003d \u0027Section cannot be empty if the total number of students is more than 100. \u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  TEAM_ERROR_MESSAGE: string \u003d \u0027Duplicated team detected in different sections. \u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  EnrollStatus: typeof EnrollStatus \u003d EnrollStatus;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  coursePresent?: boolean;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  isLoadingCourseEnrollPage: boolean \u003d false;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  showEnrollResults?: boolean \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  enrollErrorMessage: string \u003d \u0027\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  statusMessage: StatusMessage[] \u003d [];"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  unsuccessfulEnrolls: { [email: string]: string } \u003d {};"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  @ViewChild(\u0027moreInfo\u0027) moreInfo?: ElementRef;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  @Input() isNewStudentsPanelCollapsed: boolean \u003d false;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  @Input() isExistingStudentsPanelCollapsed: boolean \u003d true;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  colHeaders: string[] \u003d [\u0027Section\u0027, \u0027Team\u0027, \u0027Name\u0027, \u0027Email\u0027, \u0027Comments\u0027];"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  contextMenuOptions: String[] | Object[] \u003d"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    [\u0027row_above\u0027,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u0027row_below\u0027,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u0027remove_row\u0027,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u0027undo\u0027,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u0027redo\u0027,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        key: \u0027paste\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name: \u0027Paste\u0027,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        callback: this.pasteClick,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u0027make_read_only\u0027,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \u0027alignment\u0027];"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  hotRegisterer: HotTableRegisterer \u003d new HotTableRegisterer();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  newStudentsHOT: string \u003d \u0027newStudentsHOT\u0027;"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  enrollResultPanelList?: EnrollResultPanel[];"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  existingStudents: Student[] \u003d [];"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  existingStudentsHOT: string \u003d \u0027existingStudentsHOT\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  isExistingStudentsPresent: boolean \u003d true;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  hasLoadingStudentsFailed: boolean \u003d false;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  isLoadingExistingStudents: boolean \u003d false;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  isAjaxSuccess: boolean \u003d true;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  isEnrolling: boolean \u003d false;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  allStudentChunks: StudentEnrollRequest[][] \u003d [];"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  invalidRowsIndex: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  newStudentRowsIndex: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  modifiedStudentRowsIndex: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  unchangedStudentRowsIndex: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  numberOfStudentsPerRequest: number \u003d 50; // at most 50 students per chunk"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":98,"author":{"gitId":"FergusMok"},"content":"              private progressBarService: ProgressBarService,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService) { }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      this.getCourseEnrollPageData(queryParams.courseid);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   * Submits enroll data"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  submitEnrollData(): void {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    this.isEnrolling \u003d true;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    this.enrollErrorMessage \u003d \u0027\u0027;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    this.allStudentChunks \u003d [];"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    this.invalidRowsIndex \u003d new Set();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    this.newStudentRowsIndex \u003d new Set();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    this.modifiedStudentRowsIndex \u003d new Set();"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    this.unchangedStudentRowsIndex \u003d new Set();"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    const lastColIndex: number \u003d 4;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    const newStudentsHOTInstance: Handsontable \u003d"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this.hotRegisterer.getInstance(this.newStudentsHOT);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    const hotInstanceColHeaders: string[] \u003d (newStudentsHOTInstance.getColHeader() as string[]);"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    // Reset error highlighting on a new submission"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    this.resetTableStyle(newStudentsHOTInstance, 0,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        newStudentsHOTInstance.getData().length - 1,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        0,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        hotInstanceColHeaders.indexOf(this.colHeaders[lastColIndex]));"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    // Remove error highlight on click"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    newStudentsHOTInstance.addHook(\u0027afterSelectionEnd\u0027, (row: number, column: number,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                                                         row2: number, column2: number) \u003d\u003e {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      this.resetTableStyle(newStudentsHOTInstance, row, row2, column, column2);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    // Record the row with its index on the table"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    const studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e \u003d new Map();"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    // Parse the user input to be requests."},{"lineNumber":141,"author":{"gitId":"-"},"content":"    // Handsontable contains null value initially,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    // see https://github.com/handsontable/handsontable/issues/3927"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    newStudentsHOTInstance.getData()"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        .forEach((row: string[], index: number) \u003d\u003e {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          if (!row.every((cell: string) \u003d\u003e cell \u003d\u003d\u003d null || cell \u003d\u003d\u003d \u0027\u0027)) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            studentEnrollRequests.set(index, {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              section: row[hotInstanceColHeaders.indexOf(this.colHeaders[0])] \u003d\u003d\u003d null"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                  ? \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[0])].trim(),"},{"lineNumber":149,"author":{"gitId":"-"},"content":"              team: row[hotInstanceColHeaders.indexOf(this.colHeaders[1])] \u003d\u003d\u003d null"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                  ? \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[1])].trim(),"},{"lineNumber":151,"author":{"gitId":"-"},"content":"              name: row[hotInstanceColHeaders.indexOf(this.colHeaders[2])] \u003d\u003d\u003d null"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                  ? \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[2])].trim(),"},{"lineNumber":153,"author":{"gitId":"-"},"content":"              email: row[hotInstanceColHeaders.indexOf(this.colHeaders[3])] \u003d\u003d\u003d null"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                  ? \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[3])].trim(),"},{"lineNumber":155,"author":{"gitId":"-"},"content":"              comments: row[hotInstanceColHeaders.indexOf(this.colHeaders[4])] \u003d\u003d\u003d null"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                  ? \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[4])].trim(),"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    if (studentEnrollRequests.size \u003d\u003d\u003d 0) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      this.enrollErrorMessage \u003d \u0027Empty table\u0027;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      this.isEnrolling \u003d false;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"    this.checkCompulsoryFields(studentEnrollRequests);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    this.checkEmailNotRepeated(studentEnrollRequests);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    this.checkTeamsValid(studentEnrollRequests);"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    if (this.invalidRowsIndex.size \u003e 0) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      this.setTableStyleBasedOnFieldChecks(newStudentsHOTInstance, hotInstanceColHeaders);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      this.isEnrolling \u003d false;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    this.partitionStudentEnrollRequests(Array.from(studentEnrollRequests.values()));"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    const enrolledStudents: Student[] \u003d [];"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    // Use concat because we cannot afford to parallelize with forkJoin when there\u0027s data dependency"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    const enrollRequests: Observable\u003cEnrollStudents\u003e \u003d concat("},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ...this.allStudentChunks.map((studentChunk: StudentEnrollRequest[]) \u003d\u003e {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"          const request: StudentsEnrollRequest \u003d {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            studentEnrollRequests: studentChunk,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":186,"author":{"gitId":"-"},"content":"          return this.studentService.enrollStudents("},{"lineNumber":187,"author":{"gitId":"-"},"content":"              this.courseId, request,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"FergusMok"},"content":"    this.progressBarService.updateProgress(0);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    enrollRequests.pipe(finalize(() \u003d\u003e {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      this.isEnrolling \u003d false;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    })).subscribe({"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      next: (resp: EnrollStudents) \u003d\u003e {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        enrolledStudents.push(...resp.studentsData.students);"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        if (resp.unsuccessfulEnrolls !\u003d null) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"          for (const unsuccessfulEnroll of resp.unsuccessfulEnrolls) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.unsuccessfulEnrolls[unsuccessfulEnroll.studentEmail] \u003d unsuccessfulEnroll.errorMessage;"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"            for (const index of studentEnrollRequests.keys()) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"              if (studentEnrollRequests.get(index)?.email \u003d\u003d\u003d unsuccessfulEnroll.studentEmail) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                this.invalidRowsIndex.add(index);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":209,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"FergusMok"},"content":"        const percentage: number \u003d Math.round(100 * enrolledStudents.length / studentEnrollRequests.size);"},{"lineNumber":212,"author":{"gitId":"FergusMok"},"content":"        this.progressBarService.updateProgress(percentage);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      complete: () \u003d\u003e {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        this.showEnrollResults \u003d true;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        this.statusMessage.pop(); // removes any existing error status message"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(\u0027Enrollment successful. Summary given below.\u0027);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        this.prepareEnrollmentResults(enrolledStudents, studentEnrollRequests);"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        if (this.invalidRowsIndex.size \u003e 0"},{"lineNumber":221,"author":{"gitId":"-"},"content":"          || this.newStudentRowsIndex.size \u003e 0"},{"lineNumber":222,"author":{"gitId":"-"},"content":"          || this.modifiedStudentRowsIndex.size \u003e 0"},{"lineNumber":223,"author":{"gitId":"-"},"content":"          || this.unchangedStudentRowsIndex.size \u003e 0) {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"          this.setTableStyleBasedOnFieldChecks(newStudentsHOTInstance, hotInstanceColHeaders);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        if (enrolledStudents.length \u003e 0) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"          this.showEnrollResults \u003d true;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          this.prepareEnrollmentResults(enrolledStudents, studentEnrollRequests);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // Set error message after populating result panels to avoid it being overridden"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        this.enrollErrorMessage \u003d resp.error.message;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"  private prepareEnrollmentResults(enrolledStudents: Student[],"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                                   studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e): void {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    this.enrollResultPanelList \u003d this.populateEnrollResultPanelList(this.existingStudents,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        enrolledStudents, Array.from(studentEnrollRequests.values()));"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: this.courseId }).subscribe((resp: Students) \u003d\u003e {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      this.existingStudents \u003d resp.students;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      if (!this.isExistingStudentsPanelCollapsed) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        const existingStudentTable: Handsontable \u003d this.hotRegisterer.getInstance(this.existingStudentsHOT);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        this.loadExistingStudentsData(existingStudentTable, this.existingStudents);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      this.isExistingStudentsPresent \u003d true;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"  private partitionStudentEnrollRequests(studentEnrollRequests: StudentEnrollRequest[]): void {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    let currentStudentChunk: StudentEnrollRequest[] \u003d [];"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    for (const request of studentEnrollRequests) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      currentStudentChunk.push(request);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      if (currentStudentChunk.length \u003e\u003d this.numberOfStudentsPerRequest) {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        this.allStudentChunks.push(currentStudentChunk);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        currentStudentChunk \u003d [];"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    if (currentStudentChunk.length \u003e 0) {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"      this.allStudentChunks.push(currentStudentChunk);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"  private checkTeamsValid(studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e): void {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    const teamSectionMap: Map\u003cstring, string\u003e \u003d new Map();"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    const teamIndexMap: Map\u003cstring, number\u003e \u003d new Map();"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    const invalidRowsOriginalSize: number \u003d this.invalidRowsIndex.size;"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    Array.from(studentEnrollRequests.keys()).forEach((key: number) \u003d\u003e {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      const request: StudentEnrollRequest | undefined \u003d studentEnrollRequests.get(key);"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      if (request \u003d\u003d\u003d undefined) {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"      if (!teamSectionMap.has(request.team)) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        teamSectionMap.set(request.team, request.section);"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        teamIndexMap.set(request.team, key);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"      if (teamSectionMap.get(request.team) !\u003d\u003d request.section) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        this.invalidRowsIndex.add(key);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        const firstIndex: number | undefined \u003d teamIndexMap.get(request.team);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        if (firstIndex !\u003d\u003d undefined) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"          this.invalidRowsIndex.add(firstIndex);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    if (this.invalidRowsIndex.size \u003e invalidRowsOriginalSize) {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      this.enrollErrorMessage +\u003d \u0027Found duplicated teams in different sections. \u0027;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"  private checkCompulsoryFields(studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e): void {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    const invalidRowsOriginalSize: number \u003d this.invalidRowsIndex.size;"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"    Array.from(studentEnrollRequests.keys()).forEach((key: number) \u003d\u003e {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      const request: StudentEnrollRequest | undefined \u003d studentEnrollRequests.get(key);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      if (request \u003d\u003d\u003d undefined) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"      if ((studentEnrollRequests.size \u003e\u003d 100 \u0026\u0026 request.section \u003d\u003d\u003d \u0027\u0027)"},{"lineNumber":308,"author":{"gitId":"-"},"content":"          || request.team \u003d\u003d\u003d \u0027\u0027 || request.name \u003d\u003d\u003d \u0027\u0027 || request.email \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        this.invalidRowsIndex.add(key);"},{"lineNumber":310,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    if (this.invalidRowsIndex.size \u003e invalidRowsOriginalSize) {"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      this.enrollErrorMessage +\u003d \u0027Found empty compulsory fields and/or sections with more than 100 students. \u0027;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"  private checkEmailNotRepeated(studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e): void {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    const emailMap: Map\u003cstring, number\u003e \u003d new Map();"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    const invalidRowsOriginalSize: number \u003d this.invalidRowsIndex.size;"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"    Array.from(studentEnrollRequests.keys()).forEach((key: number) \u003d\u003e {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      const request: StudentEnrollRequest | undefined \u003d studentEnrollRequests.get(key);"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      if (request \u003d\u003d\u003d undefined) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"      if (!emailMap.has(request.email)) {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        emailMap.set(request.email, key);"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"      this.invalidRowsIndex.add(key);"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      const firstIndex: number | undefined \u003d emailMap.get(request.email);"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      if (firstIndex !\u003d\u003d undefined) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        this.invalidRowsIndex.add(firstIndex);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    if (this.invalidRowsIndex.size \u003e invalidRowsOriginalSize) {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      this.enrollErrorMessage +\u003d \u0027Found duplicated emails. \u0027;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"  private resetTableStyle(newStudentsHOTInstance: Handsontable,"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                                 startRow: number, endRow: number, startCol: number, endCol: number): void {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    for (let row: number \u003d startRow; row \u003c\u003d endRow; row +\u003d 1) {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      for (let col: number \u003d startCol; col \u003c\u003d endCol; col +\u003d 1) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        newStudentsHOTInstance.setCellMeta(row, col, \u0027className\u0027, \u0027valid-row\u0027);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    newStudentsHOTInstance.render();"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"  private setTableStyleBasedOnFieldChecks(newStudentsHOTInstance: Handsontable,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                                          hotInstanceColHeaders: string[]): void {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    this.setRowStyle(this.invalidRowsIndex, \u0027invalid-row\u0027, newStudentsHOTInstance, hotInstanceColHeaders);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    this.setRowStyle(this.newStudentRowsIndex, \u0027new-row\u0027, newStudentsHOTInstance, hotInstanceColHeaders);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    this.setRowStyle(this.modifiedStudentRowsIndex, \u0027modified-row\u0027, newStudentsHOTInstance, hotInstanceColHeaders);"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    this.setRowStyle(this.unchangedStudentRowsIndex, \u0027unchanged-row\u0027, newStudentsHOTInstance, hotInstanceColHeaders);"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"    newStudentsHOTInstance.render();"},{"lineNumber":361,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"  private setRowStyle(rowsIndex: Set\u003cnumber\u003e, style: string, newStudentsHOTInstance: Handsontable,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    hotInstanceColHeaders: string[]): void {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    for (const index of rowsIndex) {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"      for (const header of this.colHeaders) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        newStudentsHOTInstance.setCellMeta(index, hotInstanceColHeaders.indexOf(header), \u0027className\u0027, style);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":370,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"  private populateEnrollResultPanelList(existingStudents: Student[], enrolledStudents: Student[],"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                                        enrollRequests: StudentEnrollRequest[]): EnrollResultPanel[] {"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"    const panels: EnrollResultPanel[] \u003d [];"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    const studentLists: Student[][] \u003d [];"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    const statuses: (string | EnrollStatus)[] \u003d Object.values(EnrollStatus)"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        .filter((value: string | EnrollStatus) \u003d\u003e typeof value \u003d\u003d\u003d \u0027string\u0027);"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    for (let i \u003d 0; i \u003c statuses.length; i +\u003d 1) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      studentLists.push([]);"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"    const emailToIndexMap: Map\u003cstring, number\u003e \u003d new Map();"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    enrollRequests.forEach((enrollRequest: StudentEnrollRequest, index: number) \u003d\u003e {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      emailToIndexMap.set(enrollRequest.email, index);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"    // Identify students not in the enroll list."},{"lineNumber":390,"author":{"gitId":"-"},"content":"    for (const existingStudent of existingStudents) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      const enrolledStudent: Student | undefined \u003d enrolledStudents.find((student: Student) \u003d\u003e {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        return student.email \u003d\u003d\u003d existingStudent.email;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      if (enrolledStudent \u003d\u003d\u003d undefined) {"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.UNMODIFIED].push(existingStudent);"},{"lineNumber":396,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"    // Identify new students, modified students, and students that are modified without any changes."},{"lineNumber":400,"author":{"gitId":"-"},"content":"    for (const enrolledStudent of enrolledStudents) {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      const unchangedStudent: Student | undefined \u003d existingStudents.find((student: Student) \u003d\u003e {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        return this.isSameEnrollInformation(student, enrolledStudent);"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":404,"author":{"gitId":"-"},"content":"      const modifiedStudent: Student | undefined \u003d existingStudents.find((student: Student) \u003d\u003e {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        return student.email \u003d\u003d\u003d enrolledStudent.email;"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"      if (unchangedStudent !\u003d\u003d undefined) {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.MODIFIED_UNCHANGED].push(enrolledStudent);"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        this.addToRowsIndexSet(enrolledStudent.email, emailToIndexMap, this.unchangedStudentRowsIndex);"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      } else if (unchangedStudent \u003d\u003d\u003d undefined \u0026\u0026 modifiedStudent !\u003d\u003d undefined) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.MODIFIED].push(enrolledStudent);"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        this.addToRowsIndexSet(enrolledStudent.email, emailToIndexMap, this.modifiedStudentRowsIndex);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      } else if (unchangedStudent \u003d\u003d\u003d undefined \u0026\u0026 modifiedStudent \u003d\u003d\u003d undefined) {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.NEW].push(enrolledStudent);"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        this.addToRowsIndexSet(enrolledStudent.email, emailToIndexMap, this.newStudentRowsIndex);"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"    // Identify students that failed to enroll."},{"lineNumber":421,"author":{"gitId":"-"},"content":"    for (const request of enrollRequests) {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      const enrolledStudent: Student | undefined \u003d enrolledStudents.find((student: Student) \u003d\u003e {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        return student.email \u003d\u003d\u003d request.email;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"      if (enrolledStudent \u003d\u003d\u003d undefined) {"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.ERROR].push({"},{"lineNumber":428,"author":{"gitId":"-"},"content":"          email: request.email,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":430,"author":{"gitId":"-"},"content":"          name: request.name,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"          sectionName: request.section,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"          teamName: request.team,"},{"lineNumber":433,"author":{"gitId":"-"},"content":"          comments: request.comments,"},{"lineNumber":434,"author":{"gitId":"-"},"content":"          joinState: JoinState.NOT_JOINED,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"    const statusMessage: Record\u003cnumber, string\u003e \u003d {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      0: `${studentLists[EnrollStatus.ERROR].length} student(s) failed to be enrolled:`,"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      1: `${studentLists[EnrollStatus.NEW].length} student(s) added:`,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      2: `${studentLists[EnrollStatus.MODIFIED].length} student(s) modified:`,"},{"lineNumber":444,"author":{"gitId":"-"},"content":"      3: `${studentLists[EnrollStatus.MODIFIED_UNCHANGED].length} student(s) updated with no changes:`,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"      4: `${studentLists[EnrollStatus.UNMODIFIED].length} student(s) remain unmodified:`,"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"    for (const status of statuses) {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      panels.push({"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        status: EnrollStatus[status as keyof typeof EnrollStatus],"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        messageForEnrollmentStatus: statusMessage[EnrollStatus[status as keyof typeof EnrollStatus]],"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        studentList: studentLists[EnrollStatus[status as keyof typeof EnrollStatus]],"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"    if (studentLists[EnrollStatus.ERROR].length \u003e 0) {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      this.enrollErrorMessage \u003d this.GENERAL_ERROR_MESSAGE;"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(\u0027Some students failed to be enrolled, see the summary below.\u0027);"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    return panels;"},{"lineNumber":461,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"  private addToRowsIndexSet(email: string, emailToIndexMap: Map\u003cstring, number\u003e, rowsIndex: Set\u003cnumber\u003e): void {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    const index: number | undefined \u003d emailToIndexMap.get(email);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    if (index !\u003d\u003d undefined) {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      rowsIndex.add(index);"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":468,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"  private isSameEnrollInformation(enrolledStudent: Student, existingStudent: Student): boolean {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    return enrolledStudent.email \u003d\u003d\u003d existingStudent.email"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        \u0026\u0026 enrolledStudent.name \u003d\u003d\u003d existingStudent.name"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        \u0026\u0026 enrolledStudent.teamName \u003d\u003d\u003d existingStudent.teamName"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        \u0026\u0026 enrolledStudent.sectionName \u003d\u003d\u003d existingStudent.sectionName"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        \u0026\u0026 enrolledStudent.comments \u003d\u003d\u003d existingStudent.comments;"},{"lineNumber":476,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   * Adds new rows to the \u0027New students\u0027 spreadsheet interface"},{"lineNumber":480,"author":{"gitId":"-"},"content":"   * according to user input"},{"lineNumber":481,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":482,"author":{"gitId":"-"},"content":"  addRows(numOfRows: number): void {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    this.hotRegisterer.getInstance(this.newStudentsHOT).alter("},{"lineNumber":484,"author":{"gitId":"-"},"content":"        \u0027insert_row\u0027, [], numOfRows);"},{"lineNumber":485,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":488,"author":{"gitId":"-"},"content":"   * Toggles the view of \u0027New Students\u0027 spreadsheet interface"},{"lineNumber":489,"author":{"gitId":"-"},"content":"   * and/or its affiliated buttons"},{"lineNumber":490,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":491,"author":{"gitId":"-"},"content":"  toggleNewStudentsPanel(): void {"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    this.isNewStudentsPanelCollapsed \u003d !this.isNewStudentsPanelCollapsed;"},{"lineNumber":493,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":496,"author":{"gitId":"-"},"content":"   * Returns the length of the current spreadsheet."},{"lineNumber":497,"author":{"gitId":"-"},"content":"   * Rows with all null values are filtered."},{"lineNumber":498,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":499,"author":{"gitId":"-"},"content":"  getSpreadsheetLength(dataHandsontable: string[][]): number {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    return dataHandsontable"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        .filter((row: string[]) \u003d\u003e (!row.every((cell: string) \u003d\u003e cell \u003d\u003d\u003d null)))"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        .length;"},{"lineNumber":503,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":506,"author":{"gitId":"-"},"content":"   * Transforms the first uppercase letter of a string into a lowercase letter."},{"lineNumber":507,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":508,"author":{"gitId":"-"},"content":"  unCapitalizeFirstLetter(targetString: string): string {"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    return targetString.charAt(0).toLowerCase() + targetString.slice(1);"},{"lineNumber":510,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   * Converts returned student list to a suitable format required by Handsontable."},{"lineNumber":514,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":515,"author":{"gitId":"-"},"content":"  studentListDataToHandsontableData(studentsData: Student[], handsontableColHeader: any[]): string[][] {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    const headers: string[] \u003d handsontableColHeader.map(this.unCapitalizeFirstLetter);"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    return studentsData.map((student: Student) \u003d\u003e (headers.map("},{"lineNumber":518,"author":{"gitId":"-"},"content":"        (header: string) \u003d\u003e {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"          if (header \u003d\u003d\u003d \u0027team\u0027) {"},{"lineNumber":520,"author":{"gitId":"-"},"content":"            return (student as any).teamName;"},{"lineNumber":521,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":522,"author":{"gitId":"-"},"content":"          if (header \u003d\u003d\u003d \u0027section\u0027) {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"            return (student as any).sectionName;"},{"lineNumber":524,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":525,"author":{"gitId":"-"},"content":"          return (student as any)[header];"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    )));"},{"lineNumber":528,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":531,"author":{"gitId":"-"},"content":"   * Loads existing student data into the spreadsheet interface."},{"lineNumber":532,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":533,"author":{"gitId":"-"},"content":"  loadExistingStudentsData(existingStudentsHOTInstance: Handsontable, studentsData: Student[]): void {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    existingStudentsHOTInstance.loadData(this.studentListDataToHandsontableData("},{"lineNumber":535,"author":{"gitId":"-"},"content":"        studentsData, (existingStudentsHOTInstance.getColHeader() as any[])));"},{"lineNumber":536,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   * Toggles the view of \u0027Existing Students\u0027 spreadsheet interface"},{"lineNumber":540,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":541,"author":{"gitId":"-"},"content":"  toggleExistingStudentsPanel(): void {"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    // Has to be done before the API call is made so that HOT is available for data population"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed;"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    this.isLoadingExistingStudents \u003d true;"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    const existingStudentsHOTInstance: Handsontable \u003d"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        this.hotRegisterer.getInstance(this.existingStudentsHOT);"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"    // Calling REST API only the first time when spreadsheet has no data"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    if (this.getSpreadsheetLength(existingStudentsHOTInstance.getData()) !\u003d\u003d 0) {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      this.isLoadingExistingStudents \u003d false;"},{"lineNumber":551,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":553,"author":{"gitId":"-"},"content":""},{"lineNumber":554,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: this.courseId }).subscribe("},{"lineNumber":555,"author":{"gitId":"-"},"content":"        (resp: Students) \u003d\u003e {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"          if (resp.students.length) {"},{"lineNumber":557,"author":{"gitId":"-"},"content":"            this.loadExistingStudentsData(existingStudentsHOTInstance, resp.students);"},{"lineNumber":558,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":559,"author":{"gitId":"-"},"content":"            // Shows a message if there are no existing students. Panel would not be expanded."},{"lineNumber":560,"author":{"gitId":"-"},"content":"            this.isExistingStudentsPresent \u003d false;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"            this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed; // Collapse the panel again"},{"lineNumber":562,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      this.isAjaxSuccess \u003d false;"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed; // Collapse the panel again"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"      this.isLoadingExistingStudents \u003d false;"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":570,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":573,"author":{"gitId":"-"},"content":"   * Trigger click button"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":575,"author":{"gitId":"-"},"content":"  pasteClick(): void {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    const element: HTMLElement \u003d"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        (document.getElementById(\u0027paste\u0027) as HTMLElement);"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    element.click();"},{"lineNumber":579,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":582,"author":{"gitId":"-"},"content":"   * Shows modal box when user clicks on the \u0027paste\u0027 option in the"},{"lineNumber":583,"author":{"gitId":"-"},"content":"   * Handsontable context menu"},{"lineNumber":584,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":585,"author":{"gitId":"-"},"content":"  showPasteModalBox(): void {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      `Pasting data through the context menu is not supported due to browser restrictions.\u003cbr\u003e"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      Please use \u003ckbd\u003eCtrl + V\u003c/kbd\u003e or \u003ckbd\u003e⌘ + V\u003c/kbd\u003e to paste your data instead.`;"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    this.simpleModalService.openInformationModal(\u0027Pasting data through the context menu\u0027,"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, modalContent);"},{"lineNumber":591,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":594,"author":{"gitId":"-"},"content":"   * Checks whether the course is present"},{"lineNumber":595,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":596,"author":{"gitId":"-"},"content":"  getCourseEnrollPageData(courseid: string): void {"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    this.existingStudents \u003d [];"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    this.hasLoadingStudentsFailed \u003d false;"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    this.isLoadingCourseEnrollPage \u003d true;"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    this.courseService.hasResponsesForCourse(courseid).subscribe((resp: HasResponses) \u003d\u003e {"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      this.coursePresent \u003d true;"},{"lineNumber":602,"author":{"gitId":"-"},"content":"      this.courseId \u003d courseid;"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      if (resp.hasResponsesBySession \u003d\u003d\u003d undefined) {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":606,"author":{"gitId":"-"},"content":"      for (const sessionName of Object.keys(resp.hasResponsesBySession)) {"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        if (resp.hasResponsesBySession[sessionName]) {"},{"lineNumber":608,"author":{"gitId":"-"},"content":"          const modalContent: string \u003d `\u003cp\u003e\u003cstrong\u003eThere are existing feedback responses for this course.\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":609,"author":{"gitId":"-"},"content":"          Modifying records of enrolled students will result in some existing responses"},{"lineNumber":610,"author":{"gitId":"-"},"content":"          from those modified students to be deleted. You may wish to download the data"},{"lineNumber":611,"author":{"gitId":"-"},"content":"          before you make the changes.`;"},{"lineNumber":612,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal("},{"lineNumber":613,"author":{"gitId":"-"},"content":"            \u0027Existing feedback responses\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":615,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":617,"author":{"gitId":"-"},"content":"      this.coursePresent \u003d false;"},{"lineNumber":618,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      this.isLoadingCourseEnrollPage \u003d false;"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: courseid }).subscribe((resp: Students) \u003d\u003e {"},{"lineNumber":623,"author":{"gitId":"-"},"content":"      this.existingStudents \u003d resp.students;"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":625,"author":{"gitId":"-"},"content":"      this.hasLoadingStudentsFailed \u003d true;"},{"lineNumber":626,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":628,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":629,"author":{"gitId":"-"},"content":""},{"lineNumber":630,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":631,"author":{"gitId":"-"},"content":"   * Shows user more information about the spreadsheet interfaces"},{"lineNumber":632,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":633,"author":{"gitId":"-"},"content":"  navigateToMoreInfo(): void {"},{"lineNumber":634,"author":{"gitId":"-"},"content":"    (this.moreInfo as ElementRef)"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        .nativeElement.scrollIntoView({ behavior: \u0027auto\u0027, block: \u0027start\u0027 });"},{"lineNumber":636,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":637,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"FergusMok":5,"-":632}},{"path":"src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { HotTableModule } from \u0027@handsontable/angular\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AjaxPreloadModule } from \u0027../../components/ajax-preload/ajax-preload.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { PanelChevronModule } from \u0027../../components/panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":10,"author":{"gitId":"FergusMok"},"content":"import { ProgressBarModule } from \u0027../../components/progress-bar/progress-bar.module\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { StatusMessageModule } from \u0027../../components/status-message/status-message.module\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { InstructorCourseEnrollPageComponent } from \u0027./instructor-course-enroll-page.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":15,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    component: InstructorCourseEnrollPageComponent,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":19,"author":{"gitId":"-"},"content":"];"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Module for instructor course enroll page."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":26,"author":{"gitId":"-"},"content":"    InstructorCourseEnrollPageComponent,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":29,"author":{"gitId":"-"},"content":"    InstructorCourseEnrollPageComponent,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":32,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    HotTableModule,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    StatusMessageModule,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    AjaxPreloadModule,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    AjaxLoadingModule,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    LoadingRetryModule,"},{"lineNumber":39,"author":{"gitId":"FergusMok"},"content":"    ProgressBarModule,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    LoadingSpinnerModule,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    PanelChevronModule,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":43,"author":{"gitId":"-"},"content":"})"},{"lineNumber":44,"author":{"gitId":"-"},"content":"export class InstructorCourseEnrollPageModule { }"}],"authorContributionMap":{"FergusMok":2,"-":42}},{"path":"src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1\u003eHome\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light\" style\u003d\"margin-bottom: 20px;\" *ngIf\u003d\"isNewUser\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    New to TEAMMATES? You may wish to have a look at our \u003ca href\u003d\"/web/instructor/getting-started\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003eGetting Started Guide\u003c/a\u003e."},{"lineNumber":6,"author":{"gitId":"-"},"content":"    A video tour is also available in our \u003ca href\u003d\"/web\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003ehome page\u003c/a\u003e."},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row mb-3\" *tmIsLoading\u003d\"!hasCoursesLoaded\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-4\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003ca tmRouterLink\u003d\"/web/instructor/courses\" class\u003d\"btn btn-success\" [queryParams]\u003d\"{isAddNewCourse: true}\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Course"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/a\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-8\" *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"float-right\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstrong class\u003d\"d-inline\"\u003e Sort By: \u003c/strong\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"btn-group\" data-toggle\u003d\"buttons\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-id\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_ID)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-name\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_NAME)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-date\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_CREATION_DATE)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_CREATION_DATE)\"\u003eCreation Date\u003c/button\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCoursesLoadingFailed\" [message]\u003d\"\u0027Something went wrong\u0027\" (retryEvent)\u003d\"loadCourses()\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"!hasCoursesLoaded || isCopyLoading\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-tab\" class\u003d\"card\" *ngFor\u003d\"let courseTabModel of courseTabModels; let idx \u003d index\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cdiv id\u003d\"course-tab-header\" class\u003d\"card-header bg-primary text-white cursor-pointer\" (click)\u003d\"courseTabModel.isTabExpanded \u003d handleClick($event, courseTabModel); this.loadFeedbackSessions(idx);\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cb id\u003d\"course-details\" class\u003d\"text-break\"\u003e[{{ courseTabModel.course.courseId }}]: {{ courseTabModel.course.courseName }}\u003c/b\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"card-header-btn-toolbar flex-lg-shrink-0\" *ngIf\u003d\"courseTabModel.isAjaxSuccess\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Students \u003c/button\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyStudent\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                  \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Enroll"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/courses/details\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Instructors \u003c/button\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/courses/edit\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Sessions \u003c/button\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/sessions\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Add"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"btn-course\" class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Course \u003c/button\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u003ca id\u003d\"btn-archive-course\" class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                   ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still access it from the \u0027Courses\u0027 tab)\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                   (click)\u003d\"archiveCourse(courseTabModel.course.courseId)\"\u003e Archive"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyCourse\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                  \u003ca id\u003d\"btn-delete-course\" class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"                     ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                     (click)\u003d\"deleteCourse(courseTabModel.course.courseId)\"\u003e Delete"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u003ctm-panel-chevron [isExpanded]\u003d\"courseTabModel.isTabExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body padding-0\" *ngIf\u003d\"courseTabModel.isTabExpanded\" @collapseAnim\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          \u003ctm-loading-retry [shouldShowRetry]\u003d\"courseTabModel.hasLoadingFailed\" [message]\u003d\"\u0027Error loading feedback sessions\u0027\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                            (retryEvent)\u003d\"loadFeedbackSessions(idx)\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003ctm-sessions-table *tmIsLoading\u003d\"!courseTabModel.hasPopulated\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                [sessionsTableRowModels]\u003d\"courseTabModel.sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"courseTabModel.sessionsTableRowModelsSortBy\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                [sessionsTableRowModelsSortOrder]\u003d\"courseTabModel.sessionsTableRowModelsSortOrder\" [courseCandidates]\u003d\"courseCandidates\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.WHITE\" [columnsToShow]\u003d\"[ SessionsTableColumn.START_DATE, SessionsTableColumn.END_DATE ]\" [isSendReminderLoading]\u003d\"isSendReminderLoading\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent(idx, $event)\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler(idx, $event)\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler(idx, $event)\" (copySessionEvent)\u003d\"copySessionEventHandler(idx, $event)\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler(idx, $event)\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                (publishSessionEvent)\u003d\"publishSessionEventHandler(idx, $event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler(idx, $event)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                (downloadSessionResultsEvent)\u003d\"downloadSessionResultEventHandler(idx, $event)\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\""},{"lineNumber":99,"author":{"gitId":"Nicolascwy"},"content":"                (sendRemindersToAllNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event], true)\""},{"lineNumber":100,"author":{"gitId":"Nicolascwy"},"content":"                (sendRemindersToSelectedNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event], false)\"\u003e\u003c/tm-sessions-table\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          \u003c/tm-loading-retry\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"-":104,"Nicolascwy":2}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal-model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { FeedbackQuestion } from \u0027../../../../types/api-output\u0027;"},{"lineNumber":2,"author":{"gitId":"zhaojj2209"},"content":"import { SortBy, SortOrder } from \u0027../../../../types/sort-properties\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"zhaojj2209"},"content":" * The model for a feedback session tab."},{"lineNumber":6,"author":{"gitId":"-"},"content":" */"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"export interface FeedbackSessionTabModel {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  courseId: string;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  feedbackSessionName: string;"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"  createdAtTimestamp: number;"},{"lineNumber":11,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"  questionsTableRowModels: QuestionToCopyCandidate[];"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"  questionsTableRowModelsSortBy: SortBy;"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":"  questionsTableRowModelsSortOrder: SortOrder;"},{"lineNumber":15,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"  hasQuestionsLoaded: boolean;"},{"lineNumber":17,"author":{"gitId":"zhaojj2209"},"content":"  isTabExpanded: boolean;"},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"  hasLoadingFailed: boolean;"},{"lineNumber":19,"author":{"gitId":"zhaojj2209"},"content":"}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"zhaojj2209"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"zhaojj2209"},"content":" * The model for a question to copy."},{"lineNumber":23,"author":{"gitId":"zhaojj2209"},"content":" */"},{"lineNumber":24,"author":{"gitId":"zhaojj2209"},"content":"export interface QuestionToCopyCandidate {"},{"lineNumber":25,"author":{"gitId":"zhaojj2209"},"content":"  question: FeedbackQuestion;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  isSelected: boolean;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":18,"-":9}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-header\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch4 class\u003d\"modal-title\"\u003eCopy Questions\u003c/h4\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"activeModal.dismiss()\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"copy-question-modal\" class\u003d\"modal-body\"\u003e"},{"lineNumber":8,"author":{"gitId":"zhaojj2209"},"content":"  \u003cdiv class\u003d\"col-12 mb-3 text-md-right\"\u003e"},{"lineNumber":9,"author":{"gitId":"zhaojj2209"},"content":"    \u003cstrong class\u003d\"d-inline\"\u003e Sort Sessions By: \u003c/strong\u003e"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"    \u003cdiv class\u003d\"btn-group\" data-toggle\u003d\"buttons\"\u003e"},{"lineNumber":11,"author":{"gitId":"zhaojj2209"},"content":"      \u003cbutton id\u003d\"sort-course-id\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_ID)\" (click)\u003d\"sortFeedbackSessionTabs(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"      \u003cbutton id\u003d\"sort-session-name\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.SESSION_NAME)\" (click)\u003d\"sortFeedbackSessionTabs(SortBy.SESSION_NAME)\"\u003eSession Name\u003c/button\u003e"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"      \u003cbutton id\u003d\"sort-creation-date\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.SESSION_CREATION_DATE)\" (click)\u003d\"sortFeedbackSessionTabs(SortBy.SESSION_CREATION_DATE)\"\u003eCreation Date\u003c/button\u003e"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":"    \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"zhaojj2209"},"content":"  \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"  \u003cdiv class\u003d\"feedback-session-tabs\" *ngFor\u003d\"let feedbackSessionTabModel of feedbackSessionTabModels\"\u003e"},{"lineNumber":17,"author":{"gitId":"zhaojj2209"},"content":"    \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"      \u003cdiv class\u003d\"card-header cursor-pointer bg-primary text-white\" (click)\u003d\"toggleCard(feedbackSessionTabModel)\"\u003e"},{"lineNumber":19,"author":{"gitId":"zhaojj2209"},"content":"        \u003cstrong class\u003d\"text-break\"\u003e[{{feedbackSessionTabModel.courseId}}] Session: {{feedbackSessionTabModel.feedbackSessionName}}\u003c/strong\u003e"},{"lineNumber":20,"author":{"gitId":"zhaojj2209"},"content":"        \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":21,"author":{"gitId":"zhaojj2209"},"content":"          \u003ctm-panel-chevron [isExpanded]\u003d\"feedbackSessionTabModel.isTabExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":22,"author":{"gitId":"zhaojj2209"},"content":"        \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"zhaojj2209"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":25,"author":{"gitId":"zhaojj2209"},"content":"      \u003cdiv *ngIf\u003d\"feedbackSessionTabModel.isTabExpanded\"\u003e"},{"lineNumber":26,"author":{"gitId":"zhaojj2209"},"content":"        \u003ctm-loading-retry [shouldShowRetry]\u003d\"feedbackSessionTabModel.hasLoadingFailed\" [message]\u003d\"\u0027Failed to load questions\u0027\" (retryEvent)\u003d\"loadQuestions(feedbackSessionTabModel)\"\u003e"},{"lineNumber":27,"author":{"gitId":"zhaojj2209"},"content":"          \u003cdiv *tmIsLoading\u003d\"!feedbackSessionTabModel.hasQuestionsLoaded\"\u003e"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"            \u003cdiv *ngIf\u003d\"!feedbackSessionTabModel.hasLoadingFailed\" class\u003d\"card-body\"\u003e"},{"lineNumber":29,"author":{"gitId":"zhaojj2209"},"content":"              \u003cng-container *ngIf\u003d\"feedbackSessionTabModel.hasQuestionsLoaded \u0026\u0026 feedbackSessionTabModel.questionsTableRowModels.length \u003e 0, else noQuestionsTemplate\"\u003e"},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"                \u003ctable id\u003d\"copy-question-table\" class\u003d\"table table-bordered table-responsive-lg\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                  \u003cthead class\u003d\"bg-primary text-white\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003ctr\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                      \u003cth\u003e#\u003c/th\u003e"},{"lineNumber":34,"author":{"gitId":"zhaojj2209"},"content":"                      \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortQuestionsToCopyForFeedbackSession(feedbackSessionTabModel, SortBy.QUESTION_TYPE)\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        Question Type"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                          \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":38,"author":{"gitId":"zhaojj2209"},"content":"                          \u003ci *ngIf\u003d\"isSortQuestionsBy(feedbackSessionTabModel, SortBy.QUESTION_TYPE, SortOrder.DESC)\" class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e"},{"lineNumber":39,"author":{"gitId":"zhaojj2209"},"content":"                          \u003ci *ngIf\u003d\"isSortQuestionsBy(feedbackSessionTabModel, SortBy.QUESTION_TYPE, SortOrder.ASC)\" class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        \u003c/span\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                      \u003c/th\u003e"},{"lineNumber":42,"author":{"gitId":"zhaojj2209"},"content":"                      \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortQuestionsToCopyForFeedbackSession(feedbackSessionTabModel, SortBy.QUESTION_TEXT)\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        Question Text"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                          \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"                          \u003ci *ngIf\u003d\"isSortQuestionsBy(feedbackSessionTabModel, SortBy.QUESTION_TEXT, SortOrder.DESC)\" class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e"},{"lineNumber":47,"author":{"gitId":"zhaojj2209"},"content":"                          \u003ci *ngIf\u003d\"isSortQuestionsBy(feedbackSessionTabModel, SortBy.QUESTION_TEXT, SortOrder.ASC)\" class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        \u003c/span\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                      \u003c/th\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003c/tr\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                  \u003c/thead\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                  \u003ctbody\u003e"},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":"                    \u003ctr *ngFor\u003d\"let questionCandidate of feedbackSessionTabModel.questionsTableRowModels\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                      \u003ctd\u003e\u003cinput type\u003d\"checkbox\" class\u003d\"form-control\" [(ngModel)]\u003d\"questionCandidate.isSelected\"\u003e\u003c/td\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                      \u003ctd\u003e{{ questionCandidate.question.questionType | questionTypeName }}\u003c/td\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                      \u003ctd\u003e{{ questionCandidate.question.questionBrief }}\u003c/td\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    \u003c/tr\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                  \u003c/tbody\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003c/table\u003e"},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"              \u003c/ng-container\u003e"},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":"              \u003cbutton (click)\u003d\"loadQuestions(feedbackSessionTabModel)\" class\u003d\"btn btn-primary float-right mt-2 mb-3\"\u003e"},{"lineNumber":62,"author":{"gitId":"zhaojj2209"},"content":"                \u003ci class\u003d\"fas fa-redo\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":"                \u0026nbsp;Reload"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"              \u003c/button\u003e"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"            \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"          \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":"        \u003c/tm-loading-retry\u003e"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"      \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":70,"author":{"gitId":"zhaojj2209"},"content":"      \u003cng-template #noQuestionsTemplate\u003e"},{"lineNumber":71,"author":{"gitId":"zhaojj2209"},"content":"        \u003ch5\u003eThere are no questions in this feedback session available for copying.\u003c/h5\u003e"},{"lineNumber":72,"author":{"gitId":"zhaojj2209"},"content":"      \u003c/ng-template\u003e"},{"lineNumber":73,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":74,"author":{"gitId":"zhaojj2209"},"content":"    \u003c/div\u003e"},{"lineNumber":75,"author":{"gitId":"zhaojj2209"},"content":"  \u003c/div\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-footer\"\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003cbutton id\u003d\"btn-confirm-copy-question\" type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"activeModal.close(getSelectedQuestions())\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"!hasAnyQuestionsToCopySelected\"\u003eCopy\u003c/button\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"activeModal.dismiss()\"\u003eCancel\u003c/button\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":46,"-":35}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".sortable-header {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copy-question-modal {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  table-layout: auto;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"  margin-bottom: 10px;"},{"lineNumber":8,"author":{"gitId":"zhaojj2209"},"content":"  width: 70vw;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":".modal-footer {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  justify-content: right;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  background-color: white;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":".form-control {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  height: calc(.5em + 1.5vh);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  width: calc(.5em + 1.5vw);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":2,"-":17}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"zhaojj2209"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"zhaojj2209"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackQuestionsService } from \u0027../../../../services/feedback-questions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"zhaojj2209"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackParticipantType,"},{"lineNumber":11,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackQuestion,"},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackQuestions,"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackQuestionType,"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":15,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackVisibilityType,"},{"lineNumber":17,"author":{"gitId":"zhaojj2209"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":19,"author":{"gitId":"zhaojj2209"},"content":"import { SortBy, SortOrder } from \u0027../../../../types/sort-properties\u0027;"},{"lineNumber":20,"author":{"gitId":"zhaojj2209"},"content":"import { LoadingRetryModule } from \u0027../../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":21,"author":{"gitId":"zhaojj2209"},"content":"import { LoadingSpinnerModule } from \u0027../../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":22,"author":{"gitId":"zhaojj2209"},"content":"import { PanelChevronModule } from \u0027../../../components/panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":24,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackSessionTabModel, QuestionToCopyCandidate } from \u0027./copy-questions-from-other-sessions-modal-model\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { CopyQuestionsFromOtherSessionsModalComponent } from \u0027./copy-questions-from-other-sessions-modal.component\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"describe(\u0027CopyQuestionsFromOtherSessionsModalComponent\u0027, () \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":29,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackQuestion1: FeedbackQuestion \u003d {"},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"    feedbackQuestionId: \u0027feedback-question-1\u0027,"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":"    questionNumber: 1,"},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":33,"author":{"gitId":"zhaojj2209"},"content":"    questionDescription: \u0027description\u0027,"},{"lineNumber":34,"author":{"gitId":"zhaojj2209"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":35,"author":{"gitId":"zhaojj2209"},"content":"    questionDetails: {"},{"lineNumber":36,"author":{"gitId":"zhaojj2209"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":37,"author":{"gitId":"zhaojj2209"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":38,"author":{"gitId":"zhaojj2209"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":39,"author":{"gitId":"zhaojj2209"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":40,"author":{"gitId":"zhaojj2209"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":41,"author":{"gitId":"zhaojj2209"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":42,"author":{"gitId":"zhaojj2209"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":43,"author":{"gitId":"zhaojj2209"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":44,"author":{"gitId":"zhaojj2209"},"content":"    showGiverNameTo: [],"},{"lineNumber":45,"author":{"gitId":"zhaojj2209"},"content":"    showRecipientNameTo: [],"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":47,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":48,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackQuestion2: FeedbackQuestion \u003d {"},{"lineNumber":49,"author":{"gitId":"zhaojj2209"},"content":"    feedbackQuestionId: \u0027feedback-question-2\u0027,"},{"lineNumber":50,"author":{"gitId":"zhaojj2209"},"content":"    questionNumber: 2,"},{"lineNumber":51,"author":{"gitId":"zhaojj2209"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":52,"author":{"gitId":"zhaojj2209"},"content":"    questionDescription: \u0027description\u0027,"},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":54,"author":{"gitId":"zhaojj2209"},"content":"    questionDetails: {"},{"lineNumber":55,"author":{"gitId":"zhaojj2209"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":56,"author":{"gitId":"zhaojj2209"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":57,"author":{"gitId":"zhaojj2209"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":58,"author":{"gitId":"zhaojj2209"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":59,"author":{"gitId":"zhaojj2209"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":62,"author":{"gitId":"zhaojj2209"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"    showGiverNameTo: [],"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"    showRecipientNameTo: [],"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackQuestion3: FeedbackQuestion \u003d {"},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":"    feedbackQuestionId: \u0027feedback-question-3\u0027,"},{"lineNumber":70,"author":{"gitId":"zhaojj2209"},"content":"    questionNumber: 3,"},{"lineNumber":71,"author":{"gitId":"zhaojj2209"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":72,"author":{"gitId":"zhaojj2209"},"content":"    questionDescription: \u0027description\u0027,"},{"lineNumber":73,"author":{"gitId":"zhaojj2209"},"content":"    questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":74,"author":{"gitId":"zhaojj2209"},"content":"    questionDetails: {"},{"lineNumber":75,"author":{"gitId":"zhaojj2209"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":76,"author":{"gitId":"zhaojj2209"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":77,"author":{"gitId":"zhaojj2209"},"content":"      minOptionsToBeRanked: 5,"},{"lineNumber":78,"author":{"gitId":"zhaojj2209"},"content":"      maxOptionsToBeRanked: 5,"},{"lineNumber":79,"author":{"gitId":"zhaojj2209"},"content":"      areDuplicatesAllowed: true,"},{"lineNumber":80,"author":{"gitId":"zhaojj2209"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":81,"author":{"gitId":"zhaojj2209"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":82,"author":{"gitId":"zhaojj2209"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":83,"author":{"gitId":"zhaojj2209"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":84,"author":{"gitId":"zhaojj2209"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":85,"author":{"gitId":"zhaojj2209"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":86,"author":{"gitId":"zhaojj2209"},"content":"    showGiverNameTo: [],"},{"lineNumber":87,"author":{"gitId":"zhaojj2209"},"content":"    showRecipientNameTo: [],"},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"  const testQuestionToCopyCandidate1: QuestionToCopyCandidate \u003d {"},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":"    question: testFeedbackQuestion1,"},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"    isSelected: false,"},{"lineNumber":93,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":94,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":95,"author":{"gitId":"zhaojj2209"},"content":"  const testQuestionToCopyCandidate2: QuestionToCopyCandidate \u003d {"},{"lineNumber":96,"author":{"gitId":"zhaojj2209"},"content":"    question: testFeedbackQuestion2,"},{"lineNumber":97,"author":{"gitId":"zhaojj2209"},"content":"    isSelected: false,"},{"lineNumber":98,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":99,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":100,"author":{"gitId":"zhaojj2209"},"content":"  const testQuestionToCopyCandidate3: QuestionToCopyCandidate \u003d {"},{"lineNumber":101,"author":{"gitId":"zhaojj2209"},"content":"    question: testFeedbackQuestion3,"},{"lineNumber":102,"author":{"gitId":"zhaojj2209"},"content":"    isSelected: false,"},{"lineNumber":103,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":104,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":105,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackSessionTabModel1: FeedbackSessionTabModel \u003d {"},{"lineNumber":106,"author":{"gitId":"zhaojj2209"},"content":"    courseId: \u0027testId1\u0027,"},{"lineNumber":107,"author":{"gitId":"zhaojj2209"},"content":"    feedbackSessionName: \u0027Test Session 1\u0027,"},{"lineNumber":108,"author":{"gitId":"zhaojj2209"},"content":"    createdAtTimestamp: 1644458400, // Thursday, 10 February 2022 10:00:00 GMT+08:00"},{"lineNumber":109,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModels: [],"},{"lineNumber":110,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":111,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":112,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":113,"author":{"gitId":"zhaojj2209"},"content":"    hasQuestionsLoaded: false,"},{"lineNumber":114,"author":{"gitId":"zhaojj2209"},"content":"    isTabExpanded: false,"},{"lineNumber":115,"author":{"gitId":"zhaojj2209"},"content":"    hasLoadingFailed: false,"},{"lineNumber":116,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":117,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":118,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackSessionTabModel2: FeedbackSessionTabModel \u003d {"},{"lineNumber":119,"author":{"gitId":"zhaojj2209"},"content":"    courseId: \u0027testId2\u0027,"},{"lineNumber":120,"author":{"gitId":"zhaojj2209"},"content":"    feedbackSessionName: \u0027Test Session 2\u0027,"},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"    createdAtTimestamp: 1645063200, // Thursday, 17 February 2022 10:00:00 GMT+08:00"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModels: [],"},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":124,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"    hasQuestionsLoaded: false,"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":"    isTabExpanded: false,"},{"lineNumber":128,"author":{"gitId":"zhaojj2209"},"content":"    hasLoadingFailed: false,"},{"lineNumber":129,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":130,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  let component: CopyQuestionsFromOtherSessionsModalComponent;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cCopyQuestionsFromOtherSessionsModalComponent\u003e;"},{"lineNumber":133,"author":{"gitId":"zhaojj2209"},"content":"  let feedbackQuestionsService: FeedbackQuestionsService;"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      declarations: [CopyQuestionsFromOtherSessionsModalComponent],"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommonModule,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":142,"author":{"gitId":"zhaojj2209"},"content":"        PanelChevronModule,"},{"lineNumber":143,"author":{"gitId":"zhaojj2209"},"content":"        LoadingSpinnerModule,"},{"lineNumber":144,"author":{"gitId":"zhaojj2209"},"content":"        LoadingRetryModule,"},{"lineNumber":145,"author":{"gitId":"zhaojj2209"},"content":"        HttpClientTestingModule,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":148,"author":{"gitId":"-"},"content":"        NgbActiveModal,"},{"lineNumber":149,"author":{"gitId":"zhaojj2209"},"content":"        FeedbackQuestionsService,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(CopyQuestionsFromOtherSessionsModalComponent);"},{"lineNumber":157,"author":{"gitId":"zhaojj2209"},"content":"    feedbackQuestionsService \u003d TestBed.inject(FeedbackQuestionsService);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":165,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":166,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":167,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":168,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":169,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":170,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap with feedback sessions\u0027, () \u003d\u003e {"},{"lineNumber":171,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1, testFeedbackSessionTabModel2];"},{"lineNumber":172,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":173,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":174,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":175,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":176,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap when feedback questions are loading\u0027, () \u003d\u003e {"},{"lineNumber":177,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.isTabExpanded \u003d true;"},{"lineNumber":178,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.hasQuestionsLoaded \u003d false;"},{"lineNumber":179,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1];"},{"lineNumber":180,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":181,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":182,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":183,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":184,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap when feedback questions are loaded\u0027, () \u003d\u003e {"},{"lineNumber":185,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.isTabExpanded \u003d true;"},{"lineNumber":186,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.hasQuestionsLoaded \u003d true;"},{"lineNumber":187,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.questionsTableRowModels \u003d [testQuestionToCopyCandidate1, testQuestionToCopyCandidate2];"},{"lineNumber":188,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1];"},{"lineNumber":189,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":190,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":191,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":192,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":193,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap when feedback questions failed to load\u0027, () \u003d\u003e {"},{"lineNumber":194,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.isTabExpanded \u003d true;"},{"lineNumber":195,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.hasLoadingFailed \u003d true;"},{"lineNumber":196,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1];"},{"lineNumber":197,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":198,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":199,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":200,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":201,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should load feedback questions\u0027, () \u003d\u003e {"},{"lineNumber":202,"author":{"gitId":"zhaojj2209"},"content":"    const feedbackQuestions: FeedbackQuestions \u003d {"},{"lineNumber":203,"author":{"gitId":"zhaojj2209"},"content":"      questions: [testFeedbackQuestion1, testFeedbackQuestion2],"},{"lineNumber":204,"author":{"gitId":"zhaojj2209"},"content":"    };"},{"lineNumber":205,"author":{"gitId":"zhaojj2209"},"content":"    jest.spyOn(feedbackQuestionsService, \u0027getFeedbackQuestions\u0027).mockReturnValue(of(feedbackQuestions));"},{"lineNumber":206,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1];"},{"lineNumber":207,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":208,"author":{"gitId":"zhaojj2209"},"content":"    component.loadQuestions(testFeedbackSessionTabModel1);"},{"lineNumber":209,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":210,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].hasQuestionsLoaded).toBeTruthy();"},{"lineNumber":211,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].hasLoadingFailed).toBeFalsy();"},{"lineNumber":212,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].questionsTableRowModels.length).toBe(2);"},{"lineNumber":213,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].questionsTableRowModels[0].question.feedbackQuestionId)"},{"lineNumber":214,"author":{"gitId":"zhaojj2209"},"content":"      .toBe(testFeedbackQuestion1.feedbackQuestionId);"},{"lineNumber":215,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].questionsTableRowModels[1].question.feedbackQuestionId)"},{"lineNumber":216,"author":{"gitId":"zhaojj2209"},"content":"      .toBe(testFeedbackQuestion2.feedbackQuestionId);"},{"lineNumber":217,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":218,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":219,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should not allow copying when no questions are selected\u0027, () \u003d\u003e {"},{"lineNumber":220,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.questionsTableRowModels \u003d [testQuestionToCopyCandidate1, testQuestionToCopyCandidate2];"},{"lineNumber":221,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel2.questionsTableRowModels \u003d [testQuestionToCopyCandidate3];"},{"lineNumber":222,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1, testFeedbackSessionTabModel2];"},{"lineNumber":223,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":224,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":225,"author":{"gitId":"zhaojj2209"},"content":"    const questions: FeedbackQuestion[] \u003d component.getSelectedQuestions();"},{"lineNumber":226,"author":{"gitId":"zhaojj2209"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-confirm-copy-question\u0027);"},{"lineNumber":227,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":228,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.hasAnyQuestionsToCopySelected).toBeFalsy();"},{"lineNumber":229,"author":{"gitId":"zhaojj2209"},"content":"    expect(questions.length).toBe(0);"},{"lineNumber":230,"author":{"gitId":"zhaojj2209"},"content":"    expect(button.disabled).toBeTruthy();"},{"lineNumber":231,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":232,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":233,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should copy selected questions\u0027, () \u003d\u003e {"},{"lineNumber":234,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionToCopyCandidate1.isSelected \u003d true;"},{"lineNumber":235,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionToCopyCandidate2.isSelected \u003d true;"},{"lineNumber":236,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionToCopyCandidate3.isSelected \u003d true;"},{"lineNumber":237,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.questionsTableRowModels \u003d [testQuestionToCopyCandidate1, testQuestionToCopyCandidate2];"},{"lineNumber":238,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel2.questionsTableRowModels \u003d [testQuestionToCopyCandidate3];"},{"lineNumber":239,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1, testFeedbackSessionTabModel2];"},{"lineNumber":240,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":241,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":242,"author":{"gitId":"zhaojj2209"},"content":"    jest.spyOn(component.activeModal, \u0027close\u0027).mockImplementation((questions: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":243,"author":{"gitId":"zhaojj2209"},"content":"      expect(questions.length).toBe(3);"},{"lineNumber":244,"author":{"gitId":"zhaojj2209"},"content":"      expect(questions[0].feedbackQuestionId).toBe(testFeedbackQuestion1.feedbackQuestionId);"},{"lineNumber":245,"author":{"gitId":"zhaojj2209"},"content":"      expect(questions[1].feedbackQuestionId).toBe(testFeedbackQuestion2.feedbackQuestionId);"},{"lineNumber":246,"author":{"gitId":"zhaojj2209"},"content":"      expect(questions[2].feedbackQuestionId).toBe(testFeedbackQuestion3.feedbackQuestionId);"},{"lineNumber":247,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":248,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":249,"author":{"gitId":"zhaojj2209"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-confirm-copy-question\u0027);"},{"lineNumber":250,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":251,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.hasAnyQuestionsToCopySelected).toBeTruthy();"},{"lineNumber":252,"author":{"gitId":"zhaojj2209"},"content":"    expect(button.disabled).toBeFalsy();"},{"lineNumber":253,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":254,"author":{"gitId":"zhaojj2209"},"content":"    button.click();"},{"lineNumber":255,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.activeModal.close).toHaveBeenCalledTimes(1);"},{"lineNumber":256,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":257,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":221,"-":36}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackQuestionsService } from \u0027../../../../services/feedback-questions.service\u0027;"},{"lineNumber":4,"author":{"gitId":"zhaojj2209"},"content":"import { StatusMessageService } from \u0027../../../../services/status-message.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../../services/table-comparator.service\u0027;"},{"lineNumber":6,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackQuestion, FeedbackQuestions } from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"import { Intent } from \u0027../../../../types/api-request\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../../types/sort-properties\u0027;"},{"lineNumber":9,"author":{"gitId":"zhaojj2209"},"content":"import { ErrorMessageOutput } from \u0027../../../error-message-output\u0027;"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackSessionTabModel, QuestionToCopyCandidate } from \u0027./copy-questions-from-other-sessions-modal-model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Modal to select questions to copy from other sessions."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  selector: \u0027tm-copy-questions-from-other-sessions-modal\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./copy-questions-from-other-sessions-modal.component.html\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./copy-questions-from-other-sessions-modal.component.scss\u0027],"},{"lineNumber":19,"author":{"gitId":"-"},"content":"})"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export class CopyQuestionsFromOtherSessionsModalComponent {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  SortOrder: typeof SortOrder \u003d SortOrder;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  // data"},{"lineNumber":27,"author":{"gitId":"zhaojj2209"},"content":"  feedbackSessionTabModels: FeedbackSessionTabModel[] \u003d [];"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"  feedbackSessionTabModelsSortBy: SortBy \u003d SortBy.COURSE_ID;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"  constructor(public activeModal: NgbActiveModal,"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":"              public statusMessageService: StatusMessageService,"},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":"              public feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":33,"author":{"gitId":"zhaojj2209"},"content":"              private tableComparatorService: TableComparatorService) { }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":36,"author":{"gitId":"zhaojj2209"},"content":"   * Toggles specific card and loads questions if needed."},{"lineNumber":37,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":38,"author":{"gitId":"zhaojj2209"},"content":"  toggleCard(feedbackSessionTabModel: FeedbackSessionTabModel): void {"},{"lineNumber":39,"author":{"gitId":"zhaojj2209"},"content":"    feedbackSessionTabModel.isTabExpanded \u003d !feedbackSessionTabModel.isTabExpanded;"},{"lineNumber":40,"author":{"gitId":"zhaojj2209"},"content":"    if (!feedbackSessionTabModel.hasQuestionsLoaded) {"},{"lineNumber":41,"author":{"gitId":"zhaojj2209"},"content":"      this.loadQuestions(feedbackSessionTabModel);"},{"lineNumber":42,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":45,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"   * Loads the questions in the feedback session."},{"lineNumber":47,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":48,"author":{"gitId":"zhaojj2209"},"content":"  loadQuestions(model: FeedbackSessionTabModel): void {"},{"lineNumber":49,"author":{"gitId":"zhaojj2209"},"content":"    model.hasQuestionsLoaded \u003d false;"},{"lineNumber":50,"author":{"gitId":"zhaojj2209"},"content":"    model.hasLoadingFailed \u003d false;"},{"lineNumber":51,"author":{"gitId":"zhaojj2209"},"content":"    model.questionsTableRowModels \u003d [];"},{"lineNumber":52,"author":{"gitId":"zhaojj2209"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":"      courseId: model.courseId,"},{"lineNumber":54,"author":{"gitId":"zhaojj2209"},"content":"      feedbackSessionName: model.feedbackSessionName,"},{"lineNumber":55,"author":{"gitId":"zhaojj2209"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":56,"author":{"gitId":"zhaojj2209"},"content":"    })"},{"lineNumber":57,"author":{"gitId":"zhaojj2209"},"content":"    .subscribe((response: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"zhaojj2209"},"content":"      response.questions.forEach((q: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"zhaojj2209"},"content":"        const questionToCopy: QuestionToCopyCandidate \u003d {"},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"          question: q,"},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":"          isSelected: false,"},{"lineNumber":62,"author":{"gitId":"zhaojj2209"},"content":"        };"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":"        model.questionsTableRowModels.push(questionToCopy);"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"      });"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"      model.hasQuestionsLoaded \u003d true;"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":"      model.hasLoadingFailed \u003d true;"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"   * Gets the selected questions to copy."},{"lineNumber":74,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  getSelectedQuestions(): FeedbackQuestion[] {"},{"lineNumber":76,"author":{"gitId":"zhaojj2209"},"content":"    const selectedQuestions: FeedbackQuestion[] \u003d [];"},{"lineNumber":77,"author":{"gitId":"zhaojj2209"},"content":"    this.feedbackSessionTabModels.forEach((model: FeedbackSessionTabModel) \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"zhaojj2209"},"content":"      if (model.questionsTableRowModels.length \u003e 0) {"},{"lineNumber":79,"author":{"gitId":"zhaojj2209"},"content":"        selectedQuestions.push("},{"lineNumber":80,"author":{"gitId":"zhaojj2209"},"content":"          ...model.questionsTableRowModels"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .filter((c: QuestionToCopyCandidate) \u003d\u003e c.isSelected)"},{"lineNumber":82,"author":{"gitId":"zhaojj2209"},"content":"            .map((c: QuestionToCopyCandidate) \u003d\u003e c.question),"},{"lineNumber":83,"author":{"gitId":"zhaojj2209"},"content":"        );"},{"lineNumber":84,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":85,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":86,"author":{"gitId":"zhaojj2209"},"content":"    return selectedQuestions;"},{"lineNumber":87,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"   * Checks the option selected to sort feedback sessions."},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"  isSelectedForSorting(by: SortBy): boolean {"},{"lineNumber":93,"author":{"gitId":"zhaojj2209"},"content":"    return this.feedbackSessionTabModelsSortBy \u003d\u003d\u003d by;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":97,"author":{"gitId":"zhaojj2209"},"content":"   * Check whether the feedback session questions are sorted by the given type and in the given order."},{"lineNumber":98,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":99,"author":{"gitId":"zhaojj2209"},"content":"  isSortQuestionsBy(model: FeedbackSessionTabModel, by: SortBy, order: SortOrder): boolean {"},{"lineNumber":100,"author":{"gitId":"zhaojj2209"},"content":"    return model.questionsTableRowModelsSortBy \u003d\u003d\u003d by \u0026\u0026 model.questionsTableRowModelsSortOrder \u003d\u003d\u003d order;"},{"lineNumber":101,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":102,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":103,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":104,"author":{"gitId":"zhaojj2209"},"content":"   * Sorts the list of feedback sessions."},{"lineNumber":105,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":106,"author":{"gitId":"zhaojj2209"},"content":"  sortFeedbackSessionTabs(by: SortBy): void {"},{"lineNumber":107,"author":{"gitId":"zhaojj2209"},"content":"    this.feedbackSessionTabModelsSortBy \u003d by;"},{"lineNumber":108,"author":{"gitId":"zhaojj2209"},"content":"    this.feedbackSessionTabModels.sort(this.sortFeedbackSessionsBy(by));"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":112,"author":{"gitId":"zhaojj2209"},"content":"   * Sorts the list of questions for a feedback session."},{"lineNumber":113,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":114,"author":{"gitId":"zhaojj2209"},"content":"  sortQuestionsToCopyForFeedbackSession(model: FeedbackSessionTabModel, by: SortBy): void {"},{"lineNumber":115,"author":{"gitId":"zhaojj2209"},"content":"    model.questionsTableRowModelsSortBy \u003d by;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    // reverse the sort order"},{"lineNumber":117,"author":{"gitId":"zhaojj2209"},"content":"    model.questionsTableRowModelsSortOrder \u003d"},{"lineNumber":118,"author":{"gitId":"zhaojj2209"},"content":"      model.questionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"},{"lineNumber":119,"author":{"gitId":"zhaojj2209"},"content":"    model.questionsTableRowModels.sort(this.sortQuestionsBy(by, model.questionsTableRowModelsSortOrder));"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"   * Generates a sorting function for sessions."},{"lineNumber":124,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":"  protected sortFeedbackSessionsBy(by: SortBy):"},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"      ((a: FeedbackSessionTabModel, b: FeedbackSessionTabModel) \u003d\u003e number) {"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":"    return ((a: FeedbackSessionTabModel, b: FeedbackSessionTabModel): number \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      let strA: string;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      let strB: string;"},{"lineNumber":130,"author":{"gitId":"zhaojj2209"},"content":"      let order: SortOrder;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      switch (by) {"},{"lineNumber":132,"author":{"gitId":"zhaojj2209"},"content":"        case SortBy.COURSE_ID:"},{"lineNumber":133,"author":{"gitId":"zhaojj2209"},"content":"          strA \u003d a.courseId.toString();"},{"lineNumber":134,"author":{"gitId":"zhaojj2209"},"content":"          strB \u003d b.courseId.toString();"},{"lineNumber":135,"author":{"gitId":"zhaojj2209"},"content":"          order \u003d SortOrder.ASC;"},{"lineNumber":136,"author":{"gitId":"zhaojj2209"},"content":"          break;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        case SortBy.SESSION_NAME:"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          strA \u003d a.feedbackSessionName;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          strB \u003d b.feedbackSessionName;"},{"lineNumber":140,"author":{"gitId":"zhaojj2209"},"content":"          order \u003d SortOrder.ASC;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":142,"author":{"gitId":"zhaojj2209"},"content":"        case SortBy.SESSION_CREATION_DATE:"},{"lineNumber":143,"author":{"gitId":"zhaojj2209"},"content":"          strA \u003d a.createdAtTimestamp.toString();"},{"lineNumber":144,"author":{"gitId":"zhaojj2209"},"content":"          strB \u003d b.createdAtTimestamp.toString();"},{"lineNumber":145,"author":{"gitId":"zhaojj2209"},"content":"          order \u003d SortOrder.DESC;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":147,"author":{"gitId":"zhaojj2209"},"content":"        default:"},{"lineNumber":148,"author":{"gitId":"zhaojj2209"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":149,"author":{"gitId":"zhaojj2209"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":150,"author":{"gitId":"zhaojj2209"},"content":"          order \u003d SortOrder.ASC;"},{"lineNumber":151,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":152,"author":{"gitId":"zhaojj2209"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":153,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":154,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":155,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":156,"author":{"gitId":"zhaojj2209"},"content":"   * Generates a sorting function for questions."},{"lineNumber":157,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":158,"author":{"gitId":"zhaojj2209"},"content":"  protected sortQuestionsBy(by: SortBy, order: SortOrder):"},{"lineNumber":159,"author":{"gitId":"zhaojj2209"},"content":"      ((a: QuestionToCopyCandidate, b: QuestionToCopyCandidate) \u003d\u003e number) {"},{"lineNumber":160,"author":{"gitId":"zhaojj2209"},"content":"    return ((a: QuestionToCopyCandidate, b: QuestionToCopyCandidate): number \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"zhaojj2209"},"content":"      let strA: string;"},{"lineNumber":162,"author":{"gitId":"zhaojj2209"},"content":"      let strB: string;"},{"lineNumber":163,"author":{"gitId":"zhaojj2209"},"content":"      switch (by) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        case SortBy.QUESTION_TYPE:"},{"lineNumber":165,"author":{"gitId":"zhaojj2209"},"content":"          strA \u003d a.question.questionType;"},{"lineNumber":166,"author":{"gitId":"zhaojj2209"},"content":"          strB \u003d b.question.questionType;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        case SortBy.QUESTION_TEXT:"},{"lineNumber":169,"author":{"gitId":"-"},"content":"          strA \u003d a.question.questionBrief;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"          strB \u003d b.question.questionBrief;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":173,"author":{"gitId":"-"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":181,"author":{"gitId":"zhaojj2209"},"content":"   * Checks whether there are any selected questions."},{"lineNumber":182,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  get hasAnyQuestionsToCopySelected(): boolean {"},{"lineNumber":184,"author":{"gitId":"zhaojj2209"},"content":"    return this.feedbackSessionTabModels.reduce((a: boolean, b: FeedbackSessionTabModel) \u003d\u003e {"},{"lineNumber":185,"author":{"gitId":"zhaojj2209"},"content":"      return a || !!b.questionsTableRowModels.find((c: QuestionToCopyCandidate) \u003d\u003e c.isSelected);"},{"lineNumber":186,"author":{"gitId":"zhaojj2209"},"content":"    }, false);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":119,"-":70}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { ChangeDetectorRef, Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"zhaojj2209"},"content":"import { concatMap, finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  CommonVisibilitySetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackQuestionsService,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  NewQuestionModel,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackSessionActionsService } from \u0027../../../services/feedback-session-actions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails, FeedbackVisibilityType,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  HasResponses,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  Instructors,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import { CopySessionModalResult } from \u0027../../components/copy-session-modal/copy-session-modal-model\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import { CopySessionModalComponent } from \u0027../../components/copy-session-modal/copy-session-modal.component\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import { DateFormat } from \u0027../../components/datepicker/datepicker.component\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  QuestionEditFormMode,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  QuestionEditFormModel,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-edit-form/question-edit-form-model\u0027;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  SessionEditFormMode,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  SessionEditFormModel,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import { TimeFormat } from \u0027../../components/timepicker/timepicker.component\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import { InstructorSessionBasePageComponent } from \u0027../instructor-session-base-page.component\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackSessionTabModel,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal-model\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  CopyQuestionsFromOtherSessionsModalComponent,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component\u0027;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"import { TemplateQuestionModalComponent } from \u0027./template-question-modal/template-question-modal.component\u0027;"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":72,"author":{"gitId":"-"},"content":" * Instructor feedback session edit page."},{"lineNumber":73,"author":{"gitId":"-"},"content":" */"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-session-edit-page\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-session-edit-page.component.html\u0027,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-session-edit-page.component.scss\u0027],"},{"lineNumber":78,"author":{"gitId":"-"},"content":"})"},{"lineNumber":79,"author":{"gitId":"-"},"content":"export class InstructorSessionEditPageComponent extends InstructorSessionBasePageComponent implements OnInit {"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  // url param"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  isEditingMode: boolean \u003d false;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  courseName: string \u003d \u0027\u0027;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  // models"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  sessionEditFormModel: SessionEditFormModel \u003d {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    submissionStartTime: { hour: 23, minute: 59 },"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    submissionStartDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    submissionEndTime: { hour: 23, minute: 59 },"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    submissionEndDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    customSessionVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    customResponseVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    templateSessionName: \u0027\u0027,"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    isEditable: false,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    isCopying: false,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    hasVisibleSettingsPanelExpanded: false,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    hasEmailSettingsPanelExpanded: false,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  // to get the original session model on discard changes"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  feedbackSessionModelBeforeEditing: SessionEditFormModel \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"  // to get the original question model"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  feedbackQuestionModels: Map\u003cstring, FeedbackQuestion\u003e \u003d new Map();"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"  questionEditFormModels: QuestionEditFormModel[] \u003d [];"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  newQuestionEditFormModel: QuestionEditFormModel \u003d {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    isQuestionHasResponses: false,"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 1,"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    isDuplicating: false,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    isEditable: true,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    isCollapsed: false,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    isVisibilityChanged: false,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    isFeedbackPathChanged: false,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    isQuestionDetailsChanged: false,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"  isAddingFromTemplate: boolean \u003d false;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  isAddingQuestionPanelExpanded: boolean \u003d false;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  isLoadingFeedbackSession: boolean \u003d false;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackSessionFailed: boolean \u003d false;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  isLoadingFeedbackQuestions: boolean \u003d false;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackQuestionsFailed: boolean \u003d false;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  isCopyingQuestion: boolean \u003d false;"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"  // all students of the course"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  studentsOfCourse: Student[] \u003d [];"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  emailOfStudentToPreview: string \u003d \u0027\u0027;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  // instructors which can be previewed as"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  instructorsCanBePreviewedAs: Instructor[] \u003d [];"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  emailOfInstructorToPreview: string \u003d \u0027\u0027;"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"  get isAllCollapsed(): boolean {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    return this.questionEditFormModels.some((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      return model.isCollapsed;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"  constructor(router: Router,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"              instructorService: InstructorService,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"              statusMessageService: StatusMessageService,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              navigationService: NavigationService,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"              feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"              feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"              tableComparatorService: TableComparatorService,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"              ngbModal: NgbModal,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"              simpleModalService: SimpleModalService,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"              progressBarService: ProgressBarService,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"              feedbackSessionActionsService: FeedbackSessionActionsService,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"              private changeDetectorRef: ChangeDetectorRef) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        feedbackSessionsService, feedbackQuestionsService, tableComparatorService,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ngbModal, simpleModalService, progressBarService, feedbackSessionActionsService);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      this.isEditingMode \u003d queryParams.editingMode \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"      this.loadFeedbackSession();"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      this.loadFeedbackQuestions();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      this.getAllStudentsOfCourse();"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      this.getAllInstructorsCanBePreviewedAs();"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   * Loads a feedback session."},{"lineNumber":230,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackSessionFailed \u003d false;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackSession \u003d true;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    // load the course of the feedback session first"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    this.courseService.getCourseAsInstructor(this.courseId).subscribe((course: Course) \u003d\u003e {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      this.courseName \u003d course.courseName;"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        courseId: this.courseId,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        intent: Intent.FULL_DETAIL,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        this.isLoadingFeedbackSession \u003d false;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      }))"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession, this.isEditingMode);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        this.feedbackSessionModelBeforeEditing \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      this.isLoadingFeedbackSession \u003d false;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":260,"author":{"gitId":"-"},"content":"   * Copies the feedback session."},{"lineNumber":261,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  copyCurrentSession(): Promise\u003cvoid\u003e {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    // load course candidates first"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    return new Promise\u003cvoid\u003e((_resolve: any, reject: any) \u003d\u003e {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"      this.courseService.getInstructorCoursesThatAreActive()"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      .pipe(finalize(() \u003d\u003e {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      }))"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      .subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        this.failedToCopySessions \u003d {};"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(CopySessionModalComponent);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.newFeedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseCandidates \u003d courses.courses;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.sessionToCopyCourseId \u003d this.courseId;"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"          const requestList: Observable\u003cFeedbackSession\u003e[] \u003d this.createSessionCopyRequestsFromModal("},{"lineNumber":278,"author":{"gitId":"-"},"content":"              result, this.courseId, this.feedbackSessionName);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.isCopying \u003d true;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"          if (requestList.length \u003d\u003d\u003d 1) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            this.copySingleSession(requestList[0].pipe(finalize(() \u003d\u003e {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            })));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":285,"author":{"gitId":"-"},"content":"          if (requestList.length \u003e 1) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            forkJoin(requestList)"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            .pipe(finalize(() \u003d\u003e {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            }))"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"              this.showCopyStatusMessage();"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":293,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"          reject(resp);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        .catch(() \u003d\u003e {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":306,"author":{"gitId":"-"},"content":"   * Gets the {@code sessionEditFormModel} with {@link FeedbackSession} entity."},{"lineNumber":307,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  getSessionEditFormModel(feedbackSession: FeedbackSession, isEditable: boolean \u003d false): SessionEditFormModel {"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"    const submissionStart: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        this.getDateTimeAtTimezone(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone, true);"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"samuelfangjw"},"content":"    const submissionEnd: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        this.getDateTimeAtTimezone(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone, true);"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    const model: SessionEditFormModel \u003d {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      isEditable,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      courseId: feedbackSession.courseId,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      timeZone: feedbackSession.timeZone,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      courseName: this.courseName,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      feedbackSessionName: feedbackSession.feedbackSessionName,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      instructions: feedbackSession.instructions,"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"      submissionStartTime: submissionStart.time,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      submissionStartDate: submissionStart.date,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      submissionEndTime: submissionEnd.time,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      submissionEndDate: submissionEnd.date,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      gracePeriod: feedbackSession.gracePeriod,"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: feedbackSession.sessionVisibleSetting,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      customSessionVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"      responseVisibleSetting: feedbackSession.responseVisibleSetting,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      customResponseVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"      submissionStatus: feedbackSession.submissionStatus,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      publishStatus: feedbackSession.publishStatus,"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"      templateSessionName: \u0027\u0027,"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: feedbackSession.isClosingEmailEnabled,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      isCopying: false,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      hasVisibleSettingsPanelExpanded: feedbackSession.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.AT_OPEN"},{"lineNumber":349,"author":{"gitId":"-"},"content":"          || feedbackSession.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.LATER,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      hasEmailSettingsPanelExpanded: !feedbackSession.isClosingEmailEnabled || !feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"    if (feedbackSession.customSessionVisibleTimestamp) {"},{"lineNumber":354,"author":{"gitId":"samuelfangjw"},"content":"      const customSessionVisible: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":355,"author":{"gitId":"-"},"content":"          this.getDateTimeAtTimezone(feedbackSession.customSessionVisibleTimestamp, feedbackSession.timeZone, true);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      model.customSessionVisibleTime \u003d customSessionVisible.time;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      model.customSessionVisibleDate \u003d customSessionVisible.date;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"    if (feedbackSession.customResponseVisibleTimestamp) {"},{"lineNumber":361,"author":{"gitId":"samuelfangjw"},"content":"      const customResponseVisible: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":362,"author":{"gitId":"-"},"content":"          this.getDateTimeAtTimezone(feedbackSession.customResponseVisibleTimestamp, feedbackSession.timeZone, true);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"      model.customResponseVisibleTime \u003d customResponseVisible.time;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      model.customResponseVisibleDate \u003d customResponseVisible.date;"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"    return model;"},{"lineNumber":368,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":371,"author":{"gitId":"-"},"content":"   * Get the local date and time of timezone from timestamp."},{"lineNumber":372,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":373,"author":{"gitId":"-"},"content":"  private getDateTimeAtTimezone(timestamp: number, timeZone: string, resolveMidnightTo2359: boolean):"},{"lineNumber":374,"author":{"gitId":"samuelfangjw"},"content":"      { date: DateFormat, time: TimeFormat } {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    let momentInstance: moment.Moment \u003d this.timezoneService.getMomentInstance(timestamp, timeZone);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    if (resolveMidnightTo2359 \u0026\u0026 momentInstance.hour() \u003d\u003d\u003d 0 \u0026\u0026 momentInstance.minute() \u003d\u003d\u003d 0) {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      momentInstance \u003d momentInstance.subtract(1, \u0027minute\u0027);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    const date: DateFormat \u003d {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      year: momentInstance.year(),"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      month: momentInstance.month() + 1, // moment return 0-11 for month"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      day: momentInstance.date(),"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    const time: TimeFormat \u003d {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      minute: momentInstance.minute(),"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      hour: momentInstance.hour(),"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      date,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      time,"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":392,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":395,"author":{"gitId":"-"},"content":"   * Handles editing existing session event."},{"lineNumber":396,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  editExistingSessionHandler(): void {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isEditable \u003d false;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    this.feedbackSessionModelBeforeEditing \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isSaving \u003d true;"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"    const submissionStartTime: number \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":403,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.submissionStartDate, this.sessionEditFormModel.submissionStartTime,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.timeZone, true);"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    const submissionEndTime: number \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":406,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.submissionEndDate, this.sessionEditFormModel.submissionEndTime,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.timeZone, true);"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    let sessionVisibleTime: number \u003d 0;"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    if (this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM) {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      sessionVisibleTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":411,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.customSessionVisibleDate, this.sessionEditFormModel.customSessionVisibleTime,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.timeZone, true);"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    let responseVisibleTime: number \u003d 0;"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    if (this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      responseVisibleTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":417,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.customResponseVisibleDate, this.sessionEditFormModel.customResponseVisibleTime,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.timeZone, true);"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.updateFeedbackSession(this.courseId, this.feedbackSessionName, {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      instructions: this.sessionEditFormModel.instructions,"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"      submissionStartTimestamp: submissionStartTime,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      submissionEndTimestamp: submissionEndTime,"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      gracePeriod: this.sessionEditFormModel.gracePeriod,"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      customSessionVisibleTimestamp: sessionVisibleTime,"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"      responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      customResponseVisibleTimestamp: responseVisibleTime,"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.isSaving \u003d false;"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    })).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(\u0027The feedback session has been updated.\u0027);"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":445,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   * Handles canceling existing session event without saving changes."},{"lineNumber":449,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":450,"author":{"gitId":"-"},"content":"  cancelEditingSessionHandler(): void {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel \u003d JSON.parse(JSON.stringify(this.feedbackSessionModelBeforeEditing));"},{"lineNumber":452,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   * Handles deleting current feedback session."},{"lineNumber":456,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":457,"author":{"gitId":"-"},"content":"  deleteExistingSessionHandler(): void {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isDeleting \u003d true;"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.moveSessionToRecycleBin(this.courseId, this.feedbackSessionName)"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      .pipe(finalize(() \u003d\u003e {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.isDeleting \u003d false;"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      }))"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      .subscribe(() \u003d\u003e {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions\u0027,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"          \u0027The feedback session has been deleted. You can restore it from the deleted sessions table below.\u0027);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":469,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":470,"author":{"gitId":"-"},"content":""},{"lineNumber":471,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   * Loads feedback questions."},{"lineNumber":473,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":474,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    this.questionEditFormModels \u003d [];"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackQuestionsFailed \u003d false;"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackQuestions \u003d true;"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":479,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"          this.isLoadingFeedbackQuestions \u003d false;"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":487,"author":{"gitId":"-"},"content":"          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            const addedQuestionEditFormModel: QuestionEditFormModel \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            this.questionEditFormModels.push(addedQuestionEditFormModel);"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            this.loadResponseStatusForQuestion(addedQuestionEditFormModel);"},{"lineNumber":491,"author":{"gitId":"-"},"content":"            this.feedbackQuestionModels.set(feedbackQuestion.feedbackQuestionId, feedbackQuestion);"},{"lineNumber":492,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"          this.hasLoadingFeedbackQuestionsFailed \u003d true;"},{"lineNumber":495,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":497,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":500,"author":{"gitId":"-"},"content":"   * Tracks the question edit form by feedback question id."},{"lineNumber":501,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":504,"author":{"gitId":"-"},"content":"  trackQuestionEditFormByFn(_: any, item: QuestionEditFormModel): any {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":506,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   * Converts feedback question to the question edit form model."},{"lineNumber":510,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":511,"author":{"gitId":"-"},"content":"  private getQuestionEditFormModel(feedbackQuestion: FeedbackQuestion): QuestionEditFormModel {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"      questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"      questionType: feedbackQuestion.questionType,"},{"lineNumber":522,"author":{"gitId":"-"},"content":"      questionDetails: this.deepCopy(feedbackQuestion.questionDetails),"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"      giverType: feedbackQuestion.giverType,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"      recipientType: feedbackQuestion.recipientType,"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":529,"author":{"gitId":"-"},"content":"          ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"      showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      isDuplicating: false,"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      isEditable: false,"},{"lineNumber":538,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":543,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":545,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":548,"author":{"gitId":"-"},"content":"   * Loads the isQuestionHasResponses value for a question edit for model."},{"lineNumber":549,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":550,"author":{"gitId":"-"},"content":"  private loadResponseStatusForQuestion(model: QuestionEditFormModel): void {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.hasResponsesForQuestion(model.feedbackQuestionId)"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        .subscribe((resp: HasResponses) \u003d\u003e {"},{"lineNumber":553,"author":{"gitId":"-"},"content":"          model.isQuestionHasResponses \u003d resp.hasResponses;"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":555,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   * Saves the existing question."},{"lineNumber":559,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":560,"author":{"gitId":"-"},"content":"  saveExistingQuestionHandler(index: number): void {"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    const originalQuestionNumber: number \u003d"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber;"},{"lineNumber":565,"author":{"gitId":"-"},"content":""},{"lineNumber":566,"author":{"gitId":"-"},"content":"    questionEditFormModel.isSaving \u003d true;"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.saveFeedbackQuestion(questionEditFormModel.feedbackQuestionId, {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"      questionNumber: questionEditFormModel.questionNumber,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":570,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":577,"author":{"gitId":"-"},"content":""},{"lineNumber":578,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":582,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":586,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"              questionEditFormModel.isSaving \u003d false;"},{"lineNumber":588,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        .subscribe((updatedQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"          this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(updatedQuestion);"},{"lineNumber":592,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(updatedQuestion.feedbackQuestionId, updatedQuestion);"},{"lineNumber":593,"author":{"gitId":"-"},"content":"          this.loadResponseStatusForQuestion(this.questionEditFormModels[index]);"},{"lineNumber":594,"author":{"gitId":"-"},"content":""},{"lineNumber":595,"author":{"gitId":"-"},"content":"          // shift question if needed"},{"lineNumber":596,"author":{"gitId":"-"},"content":"          if (originalQuestionNumber !\u003d\u003d updatedQuestion.questionNumber) {"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            // move question form"},{"lineNumber":598,"author":{"gitId":"-"},"content":"            this.moveQuestionForm("},{"lineNumber":599,"author":{"gitId":"-"},"content":"                originalQuestionNumber - 1, updatedQuestion.questionNumber - 1);"},{"lineNumber":600,"author":{"gitId":"-"},"content":"            this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":601,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The changes to the question have been updated.\u0027);"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":605,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   * Moves question edit form from the original position to the new position."},{"lineNumber":609,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":610,"author":{"gitId":"-"},"content":"  private moveQuestionForm(originalPosition: number, newPosition: number): void {"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.splice(newPosition, 0,"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        this.questionEditFormModels.splice(originalPosition, 1)[0]);"},{"lineNumber":613,"author":{"gitId":"-"},"content":""},{"lineNumber":614,"author":{"gitId":"-"},"content":"    // all expanded questions that were moved upwards must be re-expanded to reload rich text editor"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    const start: number \u003d Math.min(originalPosition, newPosition);"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    const movedExpandedQuestions: QuestionEditFormModel[] \u003d this.questionEditFormModels"},{"lineNumber":617,"author":{"gitId":"-"},"content":"      .slice(start, newPosition + 1)"},{"lineNumber":618,"author":{"gitId":"-"},"content":"      .filter((model: QuestionEditFormModel) \u003d\u003e !model.isCollapsed);"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d true;"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    this.changeDetectorRef.detectChanges();"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d false;"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":626,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":627,"author":{"gitId":"-"},"content":""},{"lineNumber":628,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":629,"author":{"gitId":"-"},"content":"   * Normalizes question number in question forms by setting question number in sequence (i.e. 1, 2, 3, 4 ...)."},{"lineNumber":630,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":631,"author":{"gitId":"-"},"content":"  private normalizeQuestionNumberInQuestionForms(): void {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 1; i \u003c\u003d this.questionEditFormModels.length; i +\u003d 1) {"},{"lineNumber":633,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[i - 1];"},{"lineNumber":634,"author":{"gitId":"-"},"content":"      questionEditFormModel.questionNumber \u003d i;"},{"lineNumber":635,"author":{"gitId":"-"},"content":"      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":636,"author":{"gitId":"-"},"content":"      this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber \u003d i;"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":638,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":639,"author":{"gitId":"-"},"content":""},{"lineNumber":640,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":641,"author":{"gitId":"-"},"content":"   * Discards the changes made to the existing question."},{"lineNumber":642,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":643,"author":{"gitId":"-"},"content":"  discardExistingQuestionHandler(index: number): void {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    const feedbackQuestion: FeedbackQuestion \u003d"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!;"},{"lineNumber":648,"author":{"gitId":"-"},"content":"    this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":649,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":652,"author":{"gitId":"-"},"content":"   * Duplicates the question."},{"lineNumber":653,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":654,"author":{"gitId":"-"},"content":"  duplicateCurrentQuestionHandler(index: number): void {"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":656,"author":{"gitId":"-"},"content":""},{"lineNumber":657,"author":{"gitId":"-"},"content":"    questionEditFormModel.isDuplicating \u003d true;"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":659,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1, // add the duplicated question at the end"},{"lineNumber":660,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":661,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":664,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":668,"author":{"gitId":"-"},"content":""},{"lineNumber":669,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":670,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":671,"author":{"gitId":"-"},"content":""},{"lineNumber":672,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":673,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":674,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":677,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":678,"author":{"gitId":"-"},"content":"              questionEditFormModel.isDuplicating \u003d false;"},{"lineNumber":679,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":681,"author":{"gitId":"-"},"content":"        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":683,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":684,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been duplicated below.\u0027);"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":686,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":687,"author":{"gitId":"-"},"content":""},{"lineNumber":688,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":689,"author":{"gitId":"-"},"content":"   * Deletes the existing question."},{"lineNumber":690,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":691,"author":{"gitId":"-"},"content":"  deleteExistingQuestionHandler(index: number): void {"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":693,"author":{"gitId":"-"},"content":"        \u0027Delete the question?\u0027, SimpleModalType.DANGER,"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        \u0027Warning: Deleted question cannot be recovered. \u0027"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        + \u0027\u003cb\u003eAll existing responses for this question to be deleted.\u003c/b\u003e\u0027);"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":698,"author":{"gitId":"-"},"content":"      questionEditFormModel.isDeleting \u003d true;"},{"lineNumber":699,"author":{"gitId":"-"},"content":"      this.feedbackQuestionsService.deleteFeedbackQuestion(questionEditFormModel.feedbackQuestionId)"},{"lineNumber":700,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e {"},{"lineNumber":701,"author":{"gitId":"-"},"content":"            questionEditFormModel.isDeleting \u003d false;"},{"lineNumber":702,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":703,"author":{"gitId":"-"},"content":"          .subscribe("},{"lineNumber":704,"author":{"gitId":"-"},"content":"            () \u003d\u003e {"},{"lineNumber":705,"author":{"gitId":"-"},"content":"              // remove form model"},{"lineNumber":706,"author":{"gitId":"-"},"content":"              this.feedbackQuestionModels.delete(questionEditFormModel.feedbackQuestionId);"},{"lineNumber":707,"author":{"gitId":"-"},"content":"              this.questionEditFormModels.splice(index, 1);"},{"lineNumber":708,"author":{"gitId":"-"},"content":"              this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast(\u0027The question has been deleted.\u0027);"},{"lineNumber":711,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":713,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":714,"author":{"gitId":"-"},"content":""},{"lineNumber":715,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":716,"author":{"gitId":"-"},"content":"   * Handles display of template question modal."},{"lineNumber":717,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":718,"author":{"gitId":"-"},"content":"  templateQuestionModalHandler(): void {"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    const windowClass: string \u003d \u0027modal-large\u0027;"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    this.ngbModal.open(TemplateQuestionModalComponent, { windowClass }).result.then((questions: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":721,"author":{"gitId":"-"},"content":"      let questionNumber: number \u003d this.questionEditFormModels.length; // append the questions at the end"},{"lineNumber":722,"author":{"gitId":"-"},"content":"      this.isAddingFromTemplate \u003d true;"},{"lineNumber":723,"author":{"gitId":"-"},"content":"      of(...questions).pipe("},{"lineNumber":724,"author":{"gitId":"-"},"content":"          concatMap((question: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":725,"author":{"gitId":"-"},"content":"            questionNumber +\u003d 1;"},{"lineNumber":726,"author":{"gitId":"-"},"content":"            return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":727,"author":{"gitId":"-"},"content":"              questionNumber,"},{"lineNumber":728,"author":{"gitId":"-"},"content":"              questionBrief: question.questionBrief,"},{"lineNumber":729,"author":{"gitId":"-"},"content":"              questionDescription: question.questionDescription,"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"-"},"content":"              questionDetails: question.questionDetails,"},{"lineNumber":732,"author":{"gitId":"-"},"content":"              questionType: question.questionType,"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"              giverType: question.giverType,"},{"lineNumber":735,"author":{"gitId":"-"},"content":"              recipientType: question.recipientType,"},{"lineNumber":736,"author":{"gitId":"-"},"content":""},{"lineNumber":737,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":738,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"              showResponsesTo: question.showResponsesTo,"},{"lineNumber":741,"author":{"gitId":"-"},"content":"              showGiverNameTo: question.showGiverNameTo,"},{"lineNumber":742,"author":{"gitId":"-"},"content":"              showRecipientNameTo: question.showRecipientNameTo,"},{"lineNumber":743,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":744,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":745,"author":{"gitId":"-"},"content":"      ).pipe("},{"lineNumber":746,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":747,"author":{"gitId":"-"},"content":"          this.isAddingFromTemplate \u003d false;"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":749,"author":{"gitId":"-"},"content":"      ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":752,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); }, () \u003d\u003e {"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        if (questions.length \u003d\u003d\u003d 1) {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The questions have been added to this feedback session.\u0027);"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":758,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":759,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":760,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":761,"author":{"gitId":"-"},"content":""},{"lineNumber":762,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":763,"author":{"gitId":"-"},"content":"   * Populates and shows new question edit form."},{"lineNumber":764,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":765,"author":{"gitId":"-"},"content":"  populateAndShowNewQuestionForm(type: FeedbackQuestionType): void {"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    this.isAddingQuestionPanelExpanded \u003d true;"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"    const newQuestionModel: NewQuestionModel \u003d"},{"lineNumber":769,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewQuestionModel(type);"},{"lineNumber":770,"author":{"gitId":"-"},"content":""},{"lineNumber":771,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel \u003d {"},{"lineNumber":772,"author":{"gitId":"-"},"content":"      feedbackQuestionId: \u0027\u0027,"},{"lineNumber":773,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1,"},{"lineNumber":774,"author":{"gitId":"-"},"content":"      questionBrief: newQuestionModel.questionBrief,"},{"lineNumber":775,"author":{"gitId":"-"},"content":"      questionDescription: newQuestionModel.questionDescription,"},{"lineNumber":776,"author":{"gitId":"-"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"      questionType: newQuestionModel.questionType,"},{"lineNumber":780,"author":{"gitId":"-"},"content":"      questionDetails: newQuestionModel.questionDetails,"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"      giverType: newQuestionModel.giverType,"},{"lineNumber":783,"author":{"gitId":"-"},"content":"      recipientType: newQuestionModel.recipientType,"},{"lineNumber":784,"author":{"gitId":"-"},"content":""},{"lineNumber":785,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: newQuestionModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":786,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":787,"author":{"gitId":"-"},"content":"          ? newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"-"},"content":"      showResponsesTo: newQuestionModel.showResponsesTo,"},{"lineNumber":790,"author":{"gitId":"-"},"content":"      showGiverNameTo: newQuestionModel.showGiverNameTo,"},{"lineNumber":791,"author":{"gitId":"-"},"content":"      showRecipientNameTo: newQuestionModel.showRecipientNameTo,"},{"lineNumber":792,"author":{"gitId":"-"},"content":""},{"lineNumber":793,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":794,"author":{"gitId":"-"},"content":"      isDuplicating: false,"},{"lineNumber":795,"author":{"gitId":"-"},"content":"      isEditable: true,"},{"lineNumber":796,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":797,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":798,"author":{"gitId":"-"},"content":""},{"lineNumber":799,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":800,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":801,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":803,"author":{"gitId":"-"},"content":""},{"lineNumber":804,"author":{"gitId":"-"},"content":"    // inherit some settings from the last question"},{"lineNumber":805,"author":{"gitId":"-"},"content":"    if (this.questionEditFormModels.length \u003e 0) {"},{"lineNumber":806,"author":{"gitId":"-"},"content":"      const lastQuestionEditFormModel: QuestionEditFormModel \u003d"},{"lineNumber":807,"author":{"gitId":"-"},"content":"          this.questionEditFormModels[this.questionEditFormModels.length - 1];"},{"lineNumber":808,"author":{"gitId":"-"},"content":""},{"lineNumber":809,"author":{"gitId":"-"},"content":"      const newQuestionAllowedFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d"},{"lineNumber":810,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getAllowedFeedbackPaths(type);"},{"lineNumber":811,"author":{"gitId":"-"},"content":"      // inherit feedback path if applicable"},{"lineNumber":812,"author":{"gitId":"-"},"content":"      if (newQuestionAllowedFeedbackPaths.has(lastQuestionEditFormModel.giverType)"},{"lineNumber":813,"author":{"gitId":"-"},"content":"          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":814,"author":{"gitId":"-"},"content":"          \u0026\u0026 newQuestionAllowedFeedbackPaths.get(lastQuestionEditFormModel.giverType)!"},{"lineNumber":815,"author":{"gitId":"-"},"content":"              .indexOf(lastQuestionEditFormModel.recipientType) !\u003d\u003d -1) {"},{"lineNumber":816,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.giverType \u003d lastQuestionEditFormModel.giverType;"},{"lineNumber":817,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.recipientType \u003d lastQuestionEditFormModel.recipientType;"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting \u003d"},{"lineNumber":819,"author":{"gitId":"-"},"content":"          lastQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting;"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo \u003d"},{"lineNumber":821,"author":{"gitId":"-"},"content":"          lastQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":822,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":823,"author":{"gitId":"-"},"content":""},{"lineNumber":824,"author":{"gitId":"-"},"content":"      const newQuestionVisibilityStateMachine: VisibilityStateMachine \u003d"},{"lineNumber":825,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":826,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.giverType, this.newQuestionEditFormModel.recipientType);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"      // inherit visibility settings if applicable, the state machine will automatically filter out invalid choices"},{"lineNumber":828,"author":{"gitId":"-"},"content":"      newQuestionVisibilityStateMachine.applyVisibilitySettings({"},{"lineNumber":829,"author":{"gitId":"-"},"content":"        SHOW_RESPONSE: lastQuestionEditFormModel.showResponsesTo,"},{"lineNumber":830,"author":{"gitId":"-"},"content":"        SHOW_GIVER_NAME: lastQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":831,"author":{"gitId":"-"},"content":"        SHOW_RECIPIENT_NAME: lastQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":832,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":833,"author":{"gitId":"-"},"content":"      const newQuestionShowResponsesTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":834,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RESPONSE);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"      const newQuestionShowGiverNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":836,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_GIVER_NAME);"},{"lineNumber":837,"author":{"gitId":"-"},"content":"      const newQuestionShowRecipientNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":838,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine"},{"lineNumber":839,"author":{"gitId":"-"},"content":"              .getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RECIPIENT_NAME);"},{"lineNumber":840,"author":{"gitId":"-"},"content":""},{"lineNumber":841,"author":{"gitId":"-"},"content":"      let isAllowedToUseInheritedVisibility: boolean \u003d false;"},{"lineNumber":842,"author":{"gitId":"-"},"content":"      if (this.feedbackQuestionsService"},{"lineNumber":843,"author":{"gitId":"-"},"content":"          .isCustomFeedbackVisibilitySettingAllowed(this.newQuestionEditFormModel.questionType)) {"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":845,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        const commonFeedbackVisibilitySettings: CommonVisibilitySetting[] \u003d"},{"lineNumber":847,"author":{"gitId":"-"},"content":"            this.feedbackQuestionsService.getCommonFeedbackVisibilitySettings("},{"lineNumber":848,"author":{"gitId":"-"},"content":"                newQuestionVisibilityStateMachine, this.newQuestionEditFormModel.questionType);"},{"lineNumber":849,"author":{"gitId":"-"},"content":"        // new question is only allowed to have common visibility settings"},{"lineNumber":850,"author":{"gitId":"-"},"content":"        // check whether the inherited settings fall into that or not"},{"lineNumber":851,"author":{"gitId":"-"},"content":"        for (const commonVisibilityOption of commonFeedbackVisibilitySettings) {"},{"lineNumber":852,"author":{"gitId":"-"},"content":"          if (this.isSameSet(newQuestionShowResponsesTo, commonVisibilityOption.visibilitySettings.SHOW_RESPONSE)"},{"lineNumber":853,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowGiverNameTo,"},{"lineNumber":854,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_GIVER_NAME)"},{"lineNumber":855,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowRecipientNameTo,"},{"lineNumber":856,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_RECIPIENT_NAME)) {"},{"lineNumber":857,"author":{"gitId":"-"},"content":"            isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":858,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":859,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":860,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":861,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":862,"author":{"gitId":"-"},"content":""},{"lineNumber":863,"author":{"gitId":"-"},"content":"      if (isAllowedToUseInheritedVisibility) {"},{"lineNumber":864,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showResponsesTo \u003d newQuestionShowResponsesTo;"},{"lineNumber":865,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showGiverNameTo \u003d newQuestionShowGiverNameTo;"},{"lineNumber":866,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showRecipientNameTo \u003d newQuestionShowRecipientNameTo;"},{"lineNumber":867,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":869,"author":{"gitId":"-"},"content":""},{"lineNumber":870,"author":{"gitId":"-"},"content":"    this.scrollToNewEditForm();"},{"lineNumber":871,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":872,"author":{"gitId":"-"},"content":""},{"lineNumber":873,"author":{"gitId":"-"},"content":"  private isSameSet(setA: FeedbackVisibilityType[], setB: FeedbackVisibilityType[]): boolean {"},{"lineNumber":874,"author":{"gitId":"-"},"content":"    return setA.length \u003d\u003d\u003d setB.length \u0026\u0026 setA.every((ele: FeedbackVisibilityType) \u003d\u003e setB.includes(ele));"},{"lineNumber":875,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":876,"author":{"gitId":"-"},"content":""},{"lineNumber":877,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":878,"author":{"gitId":"-"},"content":"   * Creates a new question."},{"lineNumber":879,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":880,"author":{"gitId":"-"},"content":"  createNewQuestionHandler(): void {"},{"lineNumber":881,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel.isSaving \u003d true;"},{"lineNumber":882,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":883,"author":{"gitId":"-"},"content":"      questionNumber: this.newQuestionEditFormModel.questionNumber,"},{"lineNumber":884,"author":{"gitId":"-"},"content":"      questionBrief: this.newQuestionEditFormModel.questionBrief,"},{"lineNumber":885,"author":{"gitId":"-"},"content":"      questionDescription: this.newQuestionEditFormModel.questionDescription,"},{"lineNumber":886,"author":{"gitId":"-"},"content":""},{"lineNumber":887,"author":{"gitId":"-"},"content":"      questionDetails: this.newQuestionEditFormModel.questionDetails,"},{"lineNumber":888,"author":{"gitId":"-"},"content":"      questionType: this.newQuestionEditFormModel.questionType,"},{"lineNumber":889,"author":{"gitId":"-"},"content":""},{"lineNumber":890,"author":{"gitId":"-"},"content":"      giverType: this.newQuestionEditFormModel.giverType,"},{"lineNumber":891,"author":{"gitId":"-"},"content":"      recipientType: this.newQuestionEditFormModel.recipientType,"},{"lineNumber":892,"author":{"gitId":"-"},"content":""},{"lineNumber":893,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":894,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":895,"author":{"gitId":"-"},"content":""},{"lineNumber":896,"author":{"gitId":"-"},"content":"      showResponsesTo: this.newQuestionEditFormModel.showResponsesTo,"},{"lineNumber":897,"author":{"gitId":"-"},"content":"      showGiverNameTo: this.newQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":898,"author":{"gitId":"-"},"content":"      showRecipientNameTo: this.newQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":899,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":900,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":901,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":902,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.isSaving \u003d false;"},{"lineNumber":903,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":904,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":905,"author":{"gitId":"-"},"content":"        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":906,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":907,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":908,"author":{"gitId":"-"},"content":""},{"lineNumber":909,"author":{"gitId":"-"},"content":"          this.moveQuestionForm("},{"lineNumber":910,"author":{"gitId":"-"},"content":"              this.questionEditFormModels.length - 1, newQuestion.questionNumber - 1);"},{"lineNumber":911,"author":{"gitId":"-"},"content":"          this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":912,"author":{"gitId":"-"},"content":"          this.isAddingQuestionPanelExpanded \u003d false;"},{"lineNumber":913,"author":{"gitId":"-"},"content":""},{"lineNumber":914,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":915,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":916,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":917,"author":{"gitId":"-"},"content":""},{"lineNumber":918,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":919,"author":{"gitId":"-"},"content":"   * Handles \u0027Copy Question\u0027 click event."},{"lineNumber":920,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":921,"author":{"gitId":"-"},"content":"  copyQuestionsFromOtherSessionsHandler(): void {"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    this.isCopyingQuestion \u003d true;"},{"lineNumber":923,"author":{"gitId":"zhaojj2209"},"content":"    const feedbackSessionTabModels: FeedbackSessionTabModel[] \u003d [];"},{"lineNumber":924,"author":{"gitId":"-"},"content":""},{"lineNumber":925,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionsForInstructor().pipe("},{"lineNumber":926,"author":{"gitId":"-"},"content":"      finalize(() \u003d\u003e {"},{"lineNumber":927,"author":{"gitId":"-"},"content":"        this.isCopyingQuestion \u003d false;"},{"lineNumber":928,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":929,"author":{"gitId":"zhaojj2209"},"content":"    ).subscribe((response: FeedbackSessions) \u003d\u003e {"},{"lineNumber":930,"author":{"gitId":"zhaojj2209"},"content":"      response.feedbackSessions.forEach((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":931,"author":{"gitId":"zhaojj2209"},"content":"        const model: FeedbackSessionTabModel \u003d {"},{"lineNumber":932,"author":{"gitId":"zhaojj2209"},"content":"          courseId: feedbackSession.courseId,"},{"lineNumber":933,"author":{"gitId":"zhaojj2209"},"content":"          feedbackSessionName: feedbackSession.feedbackSessionName,"},{"lineNumber":934,"author":{"gitId":"zhaojj2209"},"content":"          createdAtTimestamp: feedbackSession.createdAtTimestamp,"},{"lineNumber":935,"author":{"gitId":"zhaojj2209"},"content":"          questionsTableRowModels: [],"},{"lineNumber":936,"author":{"gitId":"zhaojj2209"},"content":"          isTabExpanded: false,"},{"lineNumber":937,"author":{"gitId":"zhaojj2209"},"content":"          hasQuestionsLoaded: false,"},{"lineNumber":938,"author":{"gitId":"zhaojj2209"},"content":"          hasLoadingFailed: false,"},{"lineNumber":939,"author":{"gitId":"zhaojj2209"},"content":"          questionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":940,"author":{"gitId":"zhaojj2209"},"content":"          questionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":941,"author":{"gitId":"zhaojj2209"},"content":"        };"},{"lineNumber":942,"author":{"gitId":"zhaojj2209"},"content":"        feedbackSessionTabModels.push(model);"},{"lineNumber":943,"author":{"gitId":"zhaojj2209"},"content":"      });"},{"lineNumber":944,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); }, () \u003d\u003e {"},{"lineNumber":945,"author":{"gitId":"-"},"content":"      const ref: NgbModalRef \u003d this.ngbModal.open(CopyQuestionsFromOtherSessionsModalComponent);"},{"lineNumber":946,"author":{"gitId":"zhaojj2209"},"content":"      ref.componentInstance.feedbackSessionTabModels \u003d feedbackSessionTabModels;"},{"lineNumber":947,"author":{"gitId":"-"},"content":""},{"lineNumber":948,"author":{"gitId":"-"},"content":"      ref.result.then((questionsToCopy: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":949,"author":{"gitId":"-"},"content":"        this.isCopyingQuestion \u003d true;"},{"lineNumber":950,"author":{"gitId":"-"},"content":"        of(...questionsToCopy).pipe("},{"lineNumber":951,"author":{"gitId":"-"},"content":"            concatMap((questionToCopy: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":952,"author":{"gitId":"-"},"content":"              return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":953,"author":{"gitId":"-"},"content":"                questionNumber: this.questionEditFormModels.length + 1, // add the copied question at the end"},{"lineNumber":954,"author":{"gitId":"-"},"content":"                questionBrief: questionToCopy.questionBrief,"},{"lineNumber":955,"author":{"gitId":"-"},"content":"                questionDescription: questionToCopy.questionDescription,"},{"lineNumber":956,"author":{"gitId":"-"},"content":""},{"lineNumber":957,"author":{"gitId":"-"},"content":"                questionDetails: questionToCopy.questionDetails,"},{"lineNumber":958,"author":{"gitId":"-"},"content":"                questionType: questionToCopy.questionType,"},{"lineNumber":959,"author":{"gitId":"-"},"content":""},{"lineNumber":960,"author":{"gitId":"-"},"content":"                giverType: questionToCopy.giverType,"},{"lineNumber":961,"author":{"gitId":"-"},"content":"                recipientType: questionToCopy.recipientType,"},{"lineNumber":962,"author":{"gitId":"-"},"content":""},{"lineNumber":963,"author":{"gitId":"-"},"content":"                numberOfEntitiesToGiveFeedbackToSetting: questionToCopy.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":964,"author":{"gitId":"-"},"content":"                customNumberOfEntitiesToGiveFeedbackTo: questionToCopy.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":965,"author":{"gitId":"-"},"content":""},{"lineNumber":966,"author":{"gitId":"-"},"content":"                showResponsesTo: questionToCopy.showResponsesTo,"},{"lineNumber":967,"author":{"gitId":"-"},"content":"                showGiverNameTo: questionToCopy.showGiverNameTo,"},{"lineNumber":968,"author":{"gitId":"-"},"content":"                showRecipientNameTo: questionToCopy.showRecipientNameTo,"},{"lineNumber":969,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":970,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":971,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":972,"author":{"gitId":"-"},"content":"              this.isCopyingQuestion \u003d false;"},{"lineNumber":973,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":974,"author":{"gitId":"-"},"content":"        ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":975,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":976,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":977,"author":{"gitId":"zhaojj2209"},"content":"          this.statusMessageService.showSuccessToast("},{"lineNumber":978,"author":{"gitId":"zhaojj2209"},"content":"            \u0027The selected question(s) have been added to this feedback session.\u0027,"},{"lineNumber":979,"author":{"gitId":"zhaojj2209"},"content":"          );"},{"lineNumber":980,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":981,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":982,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":983,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":984,"author":{"gitId":"-"},"content":""},{"lineNumber":985,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":986,"author":{"gitId":"-"},"content":"   * Gets all students of a course."},{"lineNumber":987,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":988,"author":{"gitId":"-"},"content":"  getAllStudentsOfCourse(): void {"},{"lineNumber":989,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: this.courseId })"},{"lineNumber":990,"author":{"gitId":"-"},"content":"        .subscribe((students: Students) \u003d\u003e {"},{"lineNumber":991,"author":{"gitId":"-"},"content":"          this.studentsOfCourse \u003d students.students;"},{"lineNumber":992,"author":{"gitId":"-"},"content":""},{"lineNumber":993,"author":{"gitId":"-"},"content":"          // sort the student list based on team name and student name"},{"lineNumber":994,"author":{"gitId":"-"},"content":"          this.studentsOfCourse.sort((a: Student, b: Student): number \u003d\u003e {"},{"lineNumber":995,"author":{"gitId":"-"},"content":"            const teamNameCompare: number \u003d a.teamName.localeCompare(b.teamName);"},{"lineNumber":996,"author":{"gitId":"-"},"content":"            if (teamNameCompare \u003d\u003d\u003d 0) {"},{"lineNumber":997,"author":{"gitId":"-"},"content":"              return a.name.localeCompare(b.name);"},{"lineNumber":998,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":999,"author":{"gitId":"-"},"content":"            return teamNameCompare;"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":1001,"author":{"gitId":"-"},"content":""},{"lineNumber":1002,"author":{"gitId":"-"},"content":"          // select the first student"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"          if (this.studentsOfCourse.length \u003e\u003d 1) {"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"            this.emailOfStudentToPreview \u003d this.studentsOfCourse[0].email;"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1008,"author":{"gitId":"-"},"content":""},{"lineNumber":1009,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"   * Gets all instructors of a course which can be previewed as."},{"lineNumber":1011,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"  getAllInstructorsCanBePreviewedAs(): void {"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"    this.instructorService.loadInstructors({"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"        .subscribe((instructors: Instructors) \u003d\u003e {"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"          this.instructorsCanBePreviewedAs \u003d instructors.instructors;"},{"lineNumber":1019,"author":{"gitId":"-"},"content":""},{"lineNumber":1020,"author":{"gitId":"-"},"content":"          // TODO use privilege API to filter instructors who has INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"          // in the feedback session"},{"lineNumber":1022,"author":{"gitId":"-"},"content":""},{"lineNumber":1023,"author":{"gitId":"-"},"content":"          // sort the instructor list based on name"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"          this.instructorsCanBePreviewedAs.sort((a: Instructor, b: Instructor): number \u003d\u003e {"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"            return a.name.localeCompare(b.name);"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":1027,"author":{"gitId":"-"},"content":""},{"lineNumber":1028,"author":{"gitId":"-"},"content":"          // select the first instructor"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"          if (this.instructorsCanBePreviewedAs.length \u003e\u003d 1) {"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"            this.emailOfInstructorToPreview \u003d this.instructorsCanBePreviewedAs[0].email;"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1034,"author":{"gitId":"-"},"content":""},{"lineNumber":1035,"author":{"gitId":"-"},"content":"  expandAll(): void {"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d false;"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1040,"author":{"gitId":"-"},"content":""},{"lineNumber":1041,"author":{"gitId":"-"},"content":"  collapseAll(): void {"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d true;"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1046,"author":{"gitId":"-"},"content":""},{"lineNumber":1047,"author":{"gitId":"-"},"content":"  private deepCopy\u003cT\u003e(obj: T): T {"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"    return JSON.parse(JSON.stringify(obj));"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1050,"author":{"gitId":"-"},"content":""},{"lineNumber":1051,"author":{"gitId":"-"},"content":"  private scrollToNewEditForm(): void {"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"      const allEditForms: NodeListOf\u003cElement\u003e \u003d document.querySelectorAll(\u0027tm-question-edit-form\u0027);"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"      const newEditForm: Element \u003d allEditForms[allEditForms.length - 1];"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"      const yOffset: number \u003d -70; // Need offset because of the navBar"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"      const y: number \u003d newEditForm.getBoundingClientRect().top + window.pageYOffset + yOffset;"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"      window.scrollTo({ top: y, behavior: \u0027smooth\u0027 });"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"    }, 0);"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":23,"-":1032,"samuelfangjw":5}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgbCollapseModule, NgbDropdownModule, NgbTooltipModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { AddingQuestionPanelModule } from \u0027../../components/adding-question-panel/adding-question-panel.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { CopySessionModalModule } from \u0027../../components/copy-session-modal/copy-session-modal.module\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"import { PanelChevronModule } from \u0027../../components/panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { PreviewSessionPanelModule } from \u0027../../components/preview-session-panel/preview-session-panel.module\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { QuestionEditFormModule } from \u0027../../components/question-edit-form/question-edit-form.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { SessionEditFormModule } from \u0027../../components/session-edit-form/session-edit-form.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../../components/teammates-router/teammates-router.module\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  CopyQuestionsFromOtherSessionsModalComponent,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { InstructorSessionEditPageComponent } from \u0027./instructor-session-edit-page.component\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { TemplateQuestionModalComponent } from \u0027./template-question-modal/template-question-modal.component\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":26,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    component: InstructorSessionEditPageComponent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":30,"author":{"gitId":"-"},"content":"];"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Module for instructor session edit page."},{"lineNumber":34,"author":{"gitId":"-"},"content":" */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":37,"author":{"gitId":"-"},"content":"    AddingQuestionPanelModule,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    AjaxLoadingModule,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    FormsModule,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    NgbCollapseModule,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    NgbDropdownModule,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    NgbTooltipModule,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    TeammatesCommonModule,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    SessionEditFormModule,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    QuestionEditFormModule,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    CopySessionModalModule,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    LoadingSpinnerModule,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    LoadingRetryModule,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    TeammatesRouterModule,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    PreviewSessionPanelModule,"},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":"    PanelChevronModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  entryComponents: ["},{"lineNumber":56,"author":{"gitId":"-"},"content":"    TemplateQuestionModalComponent,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    CopyQuestionsFromOtherSessionsModalComponent,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":60,"author":{"gitId":"-"},"content":"    InstructorSessionEditPageComponent,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    TemplateQuestionModalComponent,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CopyQuestionsFromOtherSessionsModalComponent,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":65,"author":{"gitId":"-"},"content":"    InstructorSessionEditPageComponent,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":67,"author":{"gitId":"-"},"content":"})"},{"lineNumber":68,"author":{"gitId":"-"},"content":"export class InstructorSessionEditPageModule { }"}],"authorContributionMap":{"zhaojj2209":2,"-":66}},{"path":"src/web/app/pages-instructor/instructor-session-modal-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { forkJoin } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../services/feedback-questions.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { FeedbackSessionActionsService } from \u0027../../services/feedback-session-actions.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../services/feedback-sessions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../services/instructor.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../services/navigation.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ProgressBarService } from \u0027../../services/progress-bar.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../services/simple-modal.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../services/status-message.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../services/student.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../services/table-comparator.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmittedGiverSet, Instructor, Instructors,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  Student, Students,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"} from \u0027../../types/api-output\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../types/api-request\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  ResendResultsLinkToRespondentModalComponent,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/resend-results-link-to-respondent-modal/resend-results-link-to-respondent-modal.component\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    InstructorListInfoTableRowModel,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    StudentListInfoTableRowModel,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  SendRemindersToRespondentsModalComponent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/send-reminders-to-respondents-modal/send-reminders-to-respondents-modal.component\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  SessionsTableRowModel,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/sessions-table-model\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../error-message-output\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  InstructorSessionBasePageComponent,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"} from \u0027./instructor-session-base-page.component\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * The base page for session related page."},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"export abstract class InstructorSessionModalPageComponent extends InstructorSessionBasePageComponent {"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  isSendReminderLoading: boolean \u003d false;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  protected constructor(router: Router,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        instructorService: InstructorService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        statusMessageService: StatusMessageService,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        navigationService: NavigationService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        tableComparatorService: TableComparatorService,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        ngbModal: NgbModal,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        simpleModalService: SimpleModalService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        progressBarService: ProgressBarService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        feedbackSessionActionsService: FeedbackSessionActionsService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        protected studentService: StudentService) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        feedbackSessionsService, feedbackQuestionsService, tableComparatorService,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ngbModal, simpleModalService, progressBarService, feedbackSessionActionsService);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents on the published results link."},{"lineNumber":64,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  resendResultsLinkToRespondentsEventHandler(model: SessionsTableRowModel): void {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.isSendReminderLoading \u003d true;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    const courseId: string \u003d model.feedbackSession.courseId;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":71,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({ courseId }),"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    ]).pipe(finalize(() \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.isSendReminderLoading \u003d false;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      .subscribe((result: any[]) \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        const students: Student[] \u003d (result[0] as Students).students;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        const instructors: Instructor[] \u003d (result[1] as Instructors).instructors;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(ResendResultsLinkToRespondentModalComponent);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          email: student.email,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          name: student.name,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          teamName: student.teamName,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          sectionName: student.sectionName,"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"          hasSubmittedSession: false,"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"          isSelected: false,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } as StudentListInfoTableRowModel));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.instructorListInfoTableRowModels \u003d"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            instructors.map((instructor: Instructor) \u003d\u003e ({"},{"lineNumber":96,"author":{"gitId":"-"},"content":"              email: instructor.email,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              name: instructor.name,"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"              hasSubmittedSession: false,"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"              isSelected: false,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            } as InstructorListInfoTableRowModel));"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modalRef.result.then((respondentsToRemind: any[]) \u003d\u003e {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          this.isSendReminderLoading \u003d true;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.remindResultsLinkToRespondents(courseId, feedbackSessionName, {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            usersToRemind: respondentsToRemind.map((m: any) \u003d\u003e m.email),"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            this.isSendReminderLoading \u003d false;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast("},{"lineNumber":113,"author":{"gitId":"-"},"content":"                  \u0027Session published notification emails have been resent to those students and instructors. \u0027"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                  + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents who have not submitted their feedback."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToRespondentsEventHandler(model: SessionsTableRowModel, selectAllRespondents: boolean): void {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.isSendReminderLoading \u003d true;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    const courseId: string \u003d model.feedbackSession.courseId;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":129,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({ courseId }),"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({ courseId, feedbackSessionName }),"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    ]).pipe(finalize(() \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      this.isSendReminderLoading \u003d false;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      .subscribe((result: any[]) \u003d\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        const students: Student[] \u003d (result[0] as Students).students;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        const giverSet: Set\u003cstring\u003e \u003d new Set((result[1] as FeedbackSessionSubmittedGiverSet).giverIdentifiers);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        const instructors: Instructor[] \u003d (result[2] as Instructors).instructors;"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(SendRemindersToRespondentsModalComponent);"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          email: student.email,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          name: student.name,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"          teamName: student.teamName,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"          sectionName: student.sectionName,"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"          hasSubmittedSession: giverSet.has(student.email),"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"Nicolascwy"},"content":"          isSelected: selectAllRespondents \u0026\u0026 !giverSet.has(student.email),"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } as StudentListInfoTableRowModel));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.instructorListInfoTableRowModels \u003d instructors.map("},{"lineNumber":155,"author":{"gitId":"-"},"content":"            (instructor: Instructor) \u003d\u003e ({"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              email: instructor.email,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"              name: instructor.name,"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"              hasSubmittedSession: giverSet.has(instructor.email),"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"              isSelected: selectAllRespondents \u0026\u0026 !giverSet.has(instructor.email),"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            } as InstructorListInfoTableRowModel));"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        modalRef.result.then((respondentsToRemind: any[]) \u003d\u003e {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"          this.isSendReminderLoading \u003d true;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.remindFeedbackSessionSubmissionForRespondents(courseId, feedbackSessionName, {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            usersToRemind: respondentsToRemind.map((m: any) \u003d\u003e m.email),"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.isSendReminderLoading \u003d false;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast("},{"lineNumber":173,"author":{"gitId":"-"},"content":"                  \u0027Reminder e-mails have been sent out to those students and instructors. \u0027"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                  + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":176,"Nicolascwy":3}},{"path":"src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"no-response-panel\" class\u003d\"card-header bg-secondary text-white cursor-pointer\" (click)\u003d\"toggleTab()\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  Participants who have not responded to any question"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cbutton id\u003d\"btn-remind-all\" class\u003d\"btn btn-secondary btn-sm button\" type\u003d\"button\" (click)\u003d\"!isDisplayOnly \u0026\u0026 openSendReminderModal($event); $event.stopPropagation();\""},{"lineNumber":5,"author":{"gitId":"-"},"content":"        [disabled]\u003d\"session.submissionStatus !\u003d\u003d FeedbackSessionSubmissionStatus.OPEN\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      Remind All"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003ctm-panel-chevron [isExpanded]\u003d\"isTabExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"isTabExpanded\" @collapseAnim\u003e"},{"lineNumber":12,"author":{"gitId":"FergusMok"},"content":"  \u003cdiv *tmIsLoading\u003d\"!isNoResponseStudentsLoaded\" class\u003d\"card-body\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body p-0\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"noResponseStudentsInSection.length\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003ctable id\u003d\"no-response-table\" class\u003d\"table table-striped\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003cthead\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003ctr\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cth class\u003d\"cursor-pointer\" (click)\u003d\"sortParticipantsBy(SortBy.TEAM_NAME)\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"              Team"},{"lineNumber":20,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"fa-stack\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003ci *ngIf\u003d\"sortBy \u003d\u003d\u003d SortBy.TEAM_NAME \u0026\u0026 sortOrder \u003d\u003d\u003d SortOrder.DESC\" class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003ci *ngIf\u003d\"sortBy \u003d\u003d\u003d SortBy.TEAM_NAME \u0026\u0026 sortOrder \u003d\u003d\u003d SortOrder.ASC\" class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/th\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cth id\u003d\"sort-by-name\" class\u003d\"cursor-pointer\" (click)\u003d\"sortParticipantsBy(SortBy.RESPONDENT_NAME)\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              Name"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"fa-stack\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003ci *ngIf\u003d\"sortBy \u003d\u003d\u003d SortBy.RESPONDENT_NAME \u0026\u0026 sortOrder \u003d\u003d\u003d SortOrder.DESC\" class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003ci *ngIf\u003d\"sortBy \u003d\u003d\u003d SortBy.RESPONDENT_NAME \u0026\u0026 sortOrder \u003d\u003d\u003d SortOrder.ASC\" class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/th\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cth\u003eActions\u003c/th\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/thead\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003ctbody\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003ctr *ngFor\u003d\"let noResponseStudent of noResponseStudentsInSection\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ noResponseStudent.teamName }}\u003c/td\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ noResponseStudent.name }}\u003c/td\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003ctd\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003ca *ngIf\u003d\"!isDisplayOnly; else displayOnlySubmitResponseButton\" tmRouterLink\u003d\"/web/sessions/submission\" rel\u003d\"noopener noreferrer\" target\u003d\"_blank\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                [queryParams]\u003d\"{courseid: session.courseId, fsname: session.feedbackSessionName, moderatedperson: noResponseStudent.email}\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"                class\u003d\"btn btn-light btn-sm button\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                Submit responses"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              \u003c/a\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003cng-template #displayOnlySubmitResponseButton\u003e\u003ca class\u003d\"btn btn-light btn-sm button\"\u003eSubmit response\u003c/a\u003e\u003c/ng-template\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/tbody\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/table\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"!noResponseStudentsInSection.length\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003ci\u003eAll students have responded to some questions in this session.\u003c/i\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"FergusMok":1,"-":55}},{"path":"src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterModule } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"FergusMok"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { PanelChevronModule } from \u0027../../components/panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../../components/teammates-router/teammates-router.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InstructorSessionNoResponsePanelComponent } from \u0027./instructor-session-no-response-panel.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"describe(\u0027InstructorSessionNoResponsePanelComponent\u0027, () \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  let component: InstructorSessionNoResponsePanelComponent;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cInstructorSessionNoResponsePanelComponent\u003e;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      declarations: [InstructorSessionNoResponsePanelComponent],"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":18,"author":{"gitId":"-"},"content":"        RouterModule,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        NgbModule,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        PanelChevronModule,"},{"lineNumber":22,"author":{"gitId":"FergusMok"},"content":"        LoadingSpinnerModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        TeammatesRouterModule,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(InstructorSessionNoResponsePanelComponent);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":38,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"FergusMok":2,"-":36}},{"path":"src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  StudentListInfoTableRowModel,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027../../components/sessions-table/respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  SendRemindersToRespondentsModalComponent,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"} from \u0027../../components/sessions-table/send-reminders-to-respondents-modal/send-reminders-to-respondents-modal.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Instructor sessions results page No Response Panel."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-session-no-response-panel\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-session-no-response-panel.component.html\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-session-no-response-panel.component.scss\u0027],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":29,"author":{"gitId":"-"},"content":"})"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChanges {"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  SortOrder: typeof SortOrder \u003d SortOrder;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"FergusMok"},"content":"  @Input() isNoResponseStudentsLoaded: boolean \u003d false;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  @Input() isDisplayOnly: boolean \u003d false;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  @Input() allStudents: Student[] \u003d [];"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  @Input() noResponseStudents: Student[] \u003d [];"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  @Input() section: string \u003d \u0027\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  @Input() session: FeedbackSession \u003d {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    timeZone: \u0027\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 0,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: 0,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  isTabExpanded: boolean \u003d false;"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  sortBy: SortBy \u003d SortBy.NONE;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  sortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  noResponseStudentsInSection: Student[] \u003d [];"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  @Output() studentsToRemindEvent: EventEmitter\u003cStudentListInfoTableRowModel[]\u003e \u003d new EventEmitter();"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  constructor(private ngbModal: NgbModal,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"              private tableComparatorService: TableComparatorService) { }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    this.filterStudentsBySection();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  ngOnChanges(): void {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    this.filterStudentsBySection();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  private filterStudentsBySection(): void {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    if (this.section) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      this.noResponseStudentsInSection \u003d"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          this.noResponseStudents.filter((student: Student) \u003d\u003e student.sectionName \u003d\u003d\u003d this.section);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      this.noResponseStudentsInSection \u003d this.noResponseStudents;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  openSendReminderModal(event: any): void {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const courseId: string \u003d this.session.courseId;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    const feedbackSessionName: string \u003d this.session.feedbackSessionName;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const nonResponseStudentEmails: string[] \u003d this.noResponseStudents.map((student: Student) \u003d\u003e student.email);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    const nonResponseStudentEmailSet: Set\u003cstring\u003e \u003d new Set(nonResponseStudentEmails);"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(SendRemindersToRespondentsModalComponent);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.studentListInfoTableRowModels \u003d"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      this.allStudents.map((student: Student) \u003d\u003e ({"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        email: student.email,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        name: student.name,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        teamName: student.teamName,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        sectionName: student.sectionName,"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        hasSubmittedSession: !nonResponseStudentEmailSet.has(student.email),"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        isSelected: nonResponseStudentEmailSet.has(student.email),"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      } as StudentListInfoTableRowModel));"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    modalRef.result.then((studentsToRemind: StudentListInfoTableRowModel[]) \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      this.studentsToRemindEvent.emit(studentsToRemind);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   * Toggles the tab of the no response panel."},{"lineNumber":117,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  toggleTab(): void {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    this.isTabExpanded \u003d !this.isTabExpanded;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":123,"author":{"gitId":"-"},"content":"   * Expands the tab of the no response panel."},{"lineNumber":124,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  expandTab(): void {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    this.isTabExpanded \u003d true;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":130,"author":{"gitId":"-"},"content":"   * Collapses the tab of the no response panel."},{"lineNumber":131,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  collapseTab(): void {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    this.isTabExpanded \u003d false;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Sorts the no response panel."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  sortParticipantsBy(sortBy: SortBy): void {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    this.sortBy \u003d sortBy;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    this.sortOrder \u003d this.sortOrder \u003d\u003d\u003d SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    this.noResponseStudentsInSection.sort((a: Student, b: Student) \u003d\u003e {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      let strA: string;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      let strB: string;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      switch (this.sortBy) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        case SortBy.TEAM_NAME:"},{"lineNumber":148,"author":{"gitId":"-"},"content":"          strA \u003d a.teamName;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          strB \u003d b.teamName;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        case SortBy.RESPONDENT_NAME:"},{"lineNumber":152,"author":{"gitId":"-"},"content":"          strA \u003d a.name;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"          strB \u003d b.name;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(this.sortBy, this.sortOrder, strA, strB);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"FergusMok":1,"-":161}},{"path":"src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  Feedback Session Results"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasFeedbackSessionLoadingFailed || hasSectionsLoadingFailed || hasQuestionsLoadingFailed\" [message]\u003d\"\u0027Failed to load feedback session\u0027\" (retryEvent)\u003d\"loadFeedbackSessionResults(courseId, fsName)\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isFeedbackSessionLoading\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card bg-light top-padded text-center text-sm-left\" *ngIf\u003d\"session\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body row info-card-padding\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"col-sm-12 col-md-12 col-lg-4\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group row\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"col-lg-4 control-label\"\u003e\u003cb\u003eCourse ID:\u003c/b\u003e\u003c/label\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"course-id\" class\u003d\"col-lg-8\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"              \u003cp class\u003d\"form-control-static\"\u003e{{ session.courseId }}\u003c/p\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group row\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"col-lg-4 control-label\"\u003e\u003cb\u003eSession:\u003c/b\u003e\u003c/label\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"session-name\" class\u003d\"col-lg-8\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"              \u003cp class\u003d\"form-control-static\"\u003e{{ session.feedbackSessionName }}"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003ca tmRouterLink\u003d\"/web/instructor/sessions/edit\" [queryParams]\u003d\"{ courseid: session.courseId, fsname: session.feedbackSessionName, editingMode: true }\"\u003e\u003ci class\u003d\"fas fa-edit\"\u003e\u003c/i\u003e\u003c/a\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"              \u003c/p\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"col-sm-12 col-md-12 col-lg-5\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group row\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"col-lg-4 control-label\"\u003e\u003cb\u003eSession duration:\u003c/b\u003e\u003c/label\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"session-duration\" class\u003d\"col-lg-8\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              \u003cp class\u003d\"form-control-static\"\u003e{{ formattedSessionOpeningTime }}\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cb\u003eto\u003c/b\u003e\u003cbr\u003e{{ formattedSessionClosingTime }}\u003c/p\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group row\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"col-lg-4 control-label\"\u003e\u003cb\u003eResults visible from:\u003c/b\u003e\u003c/label\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"result-visible-date\" class\u003d\"col-lg-8\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cp class\u003d\"form-control-static\"\u003e{{ formattedResultVisibleFromTime }}\u003c/p\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"action-btn-group col-sm-12 col-md-12 col-lg-3\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cbutton id\u003d\"btn-publish\" class\u003d\"btn btn-primary action-btn no-print\" ngbTooltip\u003d\"{{session.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED? \u0027Make responses no longer visible\u0027: \u0027Make session responses available for viewing\u0027 }}\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"             placement\u003d\"top\" (click)\u003d\"publishResultHandler()\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003ci *ngIf\u003d\"session.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.NOT_PUBLISHED\" class\u003d\"fas fa-eye\"\u003e\u003c/i\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003ci *ngIf\u003d\"session.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED\" class\u003d\"fas fa-eye-slash\"\u003e\u003c/i\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            {{session.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED ? \"Unpublish\" : \"Publish\"}} Results"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cbutton id\u003d\"btn-download\" class\u003d\"btn btn-primary action-btn no-print\" [ngbTooltip]\u003d\"downloadTooltip\" (click)\u003d\"downloadResultHandler()\" [disabled]\u003d\"isDownloadingResults\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003ctm-ajax-loading *ngIf\u003d\"isDownloadingResults\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-file-download\"\u003e\u003c/i\u003e Download Results"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cbutton class\u003d\"btn btn-primary action-btn no-print\" (click)\u003d\"printViewHandler()\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-print\"\u003e\u003c/i\u003e Print View"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003ctm-view-results-panel [session]\u003d\"session\" [(viewType)]\u003d\"viewType\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"                           [(section)]\u003d\"section\" [sectionsModel]\u003d\"sectionsModel\" [(sectionType)]\u003d\"sectionType\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                           [(groupByTeam)]\u003d\"groupByTeam\" [(showStatistics)]\u003d\"showStatistics\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                           [(indicateMissingResponses)]\u003d\"indicateMissingResponses\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"                           (collapseAllTabsEvent)\u003d\"collapseAllTabs()\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-view-results-panel\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card bg-light\" style\u003d\"margin-bottom: 20px;\" *ngIf\u003d\"!isFeedbackSessionLoading\"\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      If you wish to view only the feedback responses you submitted or received, \u003ca href\u003d\"javascript:;\" (click)\u003d\"navigateToIndividualSessionResultPage(); $event.preventDefault()\"\u003eclick here\u003c/a\u003e."},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"!isSectionsLoaded || !isQuestionsLoaded\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"top-padded offset-md-10 margin-vertical-20px\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"btn-expand-all\" class\u003d\"btn expand-btn btn-light\" (click)\u003d\"toggleExpandAllHandler()\"\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        {{this.isExpandAll ? \"Collapse\": \"Expand\"}} All"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003ctm-instructor-session-result-question-view *ngIf\u003d\"viewType \u003d\u003d\u003d InstructorSessionResultViewType.QUESTION\" [questions]\u003d\"questionsModel\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        [section]\u003d\"section\" [sectionType]\u003d\"sectionType\" [session] \u003d \"session\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        [showStatistics]\u003d\"showStatistics\" [indicateMissingResponses]\u003d\"indicateMissingResponses\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        [(instructorCommentTableModel)]\u003d\"instructorCommentTableModel\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        (saveNewCommentEvent)\u003d\"saveNewComment($event, session.timeZone)\" (deleteCommentEvent)\u003d\"deleteComment($event)\" (updateCommentEvent)\u003d\"updateComment($event, session.timeZone)\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        (toggleAndLoadTab)\u003d\"toggleQuestionTab($event)\" (downloadQuestionResult)\u003d\"downloadQuestionResultHandler($event)\"\u003e\u003c/tm-instructor-session-result-question-view\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003ctm-instructor-session-result-grq-view *ngIf\u003d\"viewType \u003d\u003d\u003d InstructorSessionResultViewType.GRQ\" [responses]\u003d\"sectionsModel\" [isExpandAll]\u003d\"isExpandAll\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        [section]\u003d\"section\" [sectionType]\u003d\"sectionType\" [groupByTeam]\u003d\"groupByTeam\" [session]\u003d\"session\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        [showStatistics]\u003d\"showStatistics\" [indicateMissingResponses]\u003d\"indicateMissingResponses\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        [(instructorCommentTableModel)]\u003d\"instructorCommentTableModel\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        (saveNewCommentEvent)\u003d\"saveNewComment($event, session.timeZone)\" (deleteCommentEvent)\u003d\"deleteComment($event)\" (updateCommentEvent)\u003d\"updateComment($event, session.timeZone)\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        (toggleAndLoadTab)\u003d\"toggleSectionTab($event)\"\u003e\u003c/tm-instructor-session-result-grq-view\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003ctm-instructor-session-result-rgq-view *ngIf\u003d\"viewType \u003d\u003d\u003d InstructorSessionResultViewType.RGQ\" [responses]\u003d\"sectionsModel\" [isExpandAll]\u003d\"isExpandAll\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        [section]\u003d\"section\" [sectionType]\u003d\"sectionType\" [groupByTeam]\u003d\"groupByTeam\" [session]\u003d\"session\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        [showStatistics]\u003d\"showStatistics\" [indicateMissingResponses]\u003d\"indicateMissingResponses\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        [(instructorCommentTableModel)]\u003d\"instructorCommentTableModel\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        (saveNewCommentEvent)\u003d\"saveNewComment($event, session.timeZone)\" (deleteCommentEvent)\u003d\"deleteComment($event)\" (updateCommentEvent)\u003d\"updateComment($event, session.timeZone)\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        (toggleAndLoadTab)\u003d\"toggleSectionTab($event)\"\u003e\u003c/tm-instructor-session-result-rgq-view\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    \u003ctm-instructor-session-result-gqr-view *ngIf\u003d\"viewType \u003d\u003d\u003d InstructorSessionResultViewType.GQR\" [responses]\u003d\"sectionsModel\" [isExpandAll]\u003d\"isExpandAll\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        [section]\u003d\"section\" [sectionType]\u003d\"sectionType\" [groupByTeam]\u003d\"groupByTeam\" [session]\u003d\"session\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        [showStatistics]\u003d\"showStatistics\" [indicateMissingResponses]\u003d\"indicateMissingResponses\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        [(instructorCommentTableModel)]\u003d\"instructorCommentTableModel\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        (saveNewCommentEvent)\u003d\"saveNewComment($event, session.timeZone)\" (deleteCommentEvent)\u003d\"deleteComment($event)\" (updateCommentEvent)\u003d\"updateComment($event, session.timeZone)\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        (toggleAndLoadTab)\u003d\"toggleSectionTab($event)\"\u003e\u003c/tm-instructor-session-result-gqr-view\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    \u003ctm-instructor-session-result-rqg-view *ngIf\u003d\"viewType \u003d\u003d\u003d InstructorSessionResultViewType.RQG\" [responses]\u003d\"sectionsModel\" [isExpandAll]\u003d\"isExpandAll\""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        [section]\u003d\"section\" [sectionType]\u003d\"sectionType\" [groupByTeam]\u003d\"groupByTeam\" [session]\u003d\"session\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"        [showStatistics]\u003d\"showStatistics\" [indicateMissingResponses]\u003d\"indicateMissingResponses\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        [(instructorCommentTableModel)]\u003d\"instructorCommentTableModel\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        (saveNewCommentEvent)\u003d\"saveNewComment($event, session.timeZone)\" (deleteCommentEvent)\u003d\"deleteComment($event)\" (updateCommentEvent)\u003d\"updateComment($event, session.timeZone)\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        (toggleAndLoadTab)\u003d\"toggleSectionTab($event)\"\u003e\u003c/tm-instructor-session-result-rqg-view\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasNoResponseLoadingFailed\" [message]\u003d\"\u0027Failed to load students who have not responded\u0027\" (retryEvent)\u003d\"loadNoResponseStudents(courseId, fsName)\"\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card top-padded\" *ngIf\u003d\"isNoResponsePanelLoaded\"\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \u003ctm-instructor-session-no-response-panel [allStudents]\u003d\"allStudentsInCourse\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                             [noResponseStudents]\u003d\"noResponseStudents\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                             [section]\u003d\"section\" [session]\u003d\"session\""},{"lineNumber":113,"author":{"gitId":"FergusMok"},"content":"                                             [isNoResponseStudentsLoaded]\u003d\"isNoResponseStudentsLoaded\""},{"lineNumber":114,"author":{"gitId":"-"},"content":"                                             (studentsToRemindEvent)\u003d\"sendReminderToStudents($event)\" \u003e\u003c/tm-instructor-session-no-response-panel\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cng-template #downloadTooltip\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  Download session results\u003cbr/\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  Show Statistics ({{ showStatistics ? \"\u0026#x2713;\" : \"\u0026#x2717;\" }})\u003cbr/\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  Indicate Missing Responses ({{ indicateMissingResponses ? \"\u0026#x2713;\" : \"\u0026#x2717;\" }})"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/ng-template\u003e"}],"authorContributionMap":{"FergusMok":1,"-":121}},{"path":"src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { saveAs } from \u0027file-saver\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { FeedbackSessionActionsService } from \u0027../../../services/feedback-session-actions.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  CourseSectionNames,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus, FeedbackSessionSubmissionStatus,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmittedGiverSet,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  QuestionOutput,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  ResponseOutput, ResponseVisibleSetting,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  SessionResults, SessionVisibleSetting,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { CommentToCommentRowModelPipe } from \u0027../../components/comment-box/comment-to-comment-row-model.pipe\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { CommentsToCommentTableModelPipe } from \u0027../../components/comment-box/comments-to-comment-table-model.pipe\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  StudentListInfoTableRowModel,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"} from \u0027../../components/sessions-table/respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import { InstructorCommentsComponent } from \u0027../instructor-comments.component\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import { InstructorSessionNoResponsePanelComponent } from \u0027./instructor-session-no-response-panel.component\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import { InstructorSessionResultSectionType } from \u0027./instructor-session-result-section-type.enum\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import { InstructorSessionResultViewType } from \u0027./instructor-session-result-view-type.enum\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":47,"author":{"gitId":"-"},"content":" * Per section view tab model."},{"lineNumber":48,"author":{"gitId":"-"},"content":" */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"export interface SectionTabModel {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  questions: QuestionOutput[];"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  hasPopulated: boolean;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  isTabExpanded: boolean;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":57,"author":{"gitId":"-"},"content":" * Per question view tab model."},{"lineNumber":58,"author":{"gitId":"-"},"content":" */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"export interface QuestionTabModel {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  question: FeedbackQuestion;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  responses: ResponseOutput[];"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  statistics: string; // TODO will define types later"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  hasPopulated: boolean;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  isTabExpanded: boolean;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":70,"author":{"gitId":"-"},"content":" * Instructor feedback session result page."},{"lineNumber":71,"author":{"gitId":"-"},"content":" */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-session-result-page\u0027,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-session-result-page.component.html\u0027,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-session-result-page.component.scss\u0027],"},{"lineNumber":76,"author":{"gitId":"-"},"content":"})"},{"lineNumber":77,"author":{"gitId":"-"},"content":"export class InstructorSessionResultPageComponent extends InstructorCommentsComponent implements OnInit {"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  InstructorSessionResultSectionType: typeof InstructorSessionResultSectionType \u003d InstructorSessionResultSectionType;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  InstructorSessionResultViewType: typeof InstructorSessionResultViewType \u003d InstructorSessionResultViewType;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  formattedResultVisibleFromTime: string \u003d \u0027\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  fsName: string \u003d \u0027\u0027;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  viewType: string \u003d InstructorSessionResultViewType.QUESTION;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  section: string \u003d \u0027\u0027;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  sectionType: InstructorSessionResultSectionType \u003d InstructorSessionResultSectionType.EITHER;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  groupByTeam: boolean \u003d true;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  showStatistics: boolean \u003d true;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  indicateMissingResponses: boolean \u003d true;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  // below are two models contain similar and duplicate data"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  // they are for different views"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  sectionsModel: Record\u003cstring, SectionTabModel\u003e \u003d {};"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  isSectionsLoaded: boolean \u003d false;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  hasSectionsLoadingFailed: boolean \u003d false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  questionsModel: Record\u003cstring, QuestionTabModel\u003e \u003d {};"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  isQuestionsLoaded: boolean \u003d false;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  hasQuestionsLoadingFailed: boolean \u003d false;"},{"lineNumber":104,"author":{"gitId":"FergusMok"},"content":"  isNoResponseStudentsLoaded: boolean \u003d false;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  isFeedbackSessionLoading: boolean \u003d false;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  hasFeedbackSessionLoadingFailed: boolean \u003d false;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  isDownloadingResults: boolean \u003d false;"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  noResponseStudents: Student[] \u003d [];"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  isNoResponsePanelLoaded: boolean \u003d false;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  hasNoResponseLoadingFailed: boolean \u003d false;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  allStudentsInCourse: Student[] \u003d [];"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus: typeof FeedbackSessionPublishStatus \u003d FeedbackSessionPublishStatus;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  isExpandAll: boolean \u003d false;"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  session: FeedbackSession \u003d {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    timeZone: \u0027\u0027,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 0,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: 0,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  @ViewChild(InstructorSessionNoResponsePanelComponent) noResponsePanel?:"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    InstructorSessionNoResponsePanelComponent;"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  constructor(private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"              private feedbackSessionActionsService: FeedbackSessionActionsService,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"              private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              private commentsToCommentTableModel: CommentsToCommentTableModelPipe,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"              statusMessageService: StatusMessageService,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              commentService: FeedbackResponseCommentService,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"              commentToCommentRowModel: CommentToCommentRowModelPipe,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"              tableComparatorService: TableComparatorService) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    super(commentToCommentRowModel, commentService, statusMessageService, tableComparatorService);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      this.fsName \u003d queryParams.fsname;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      this.loadFeedbackSessionResults(this.courseId, this.fsName);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"  loadFeedbackSessionResults(courseId: string, feedbackSessionName: string): void {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    this.hasQuestionsLoadingFailed \u003d false;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    this.hasSectionsLoadingFailed \u003d false;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionLoadingFailed \u003d false;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionLoading \u003d true;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      courseId,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      feedbackSessionName,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      intent: Intent.INSTRUCTOR_RESULT,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      this.session \u003d feedbackSession;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      this.formattedSessionClosingTime \u003d this.timezoneService"},{"lineNumber":181,"author":{"gitId":"-"},"content":"          .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      if (this.session.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.AT_VISIBLE) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (this.session.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.AT_OPEN) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"          this.formattedResultVisibleFromTime \u003d this.timezoneService"},{"lineNumber":185,"author":{"gitId":"-"},"content":"              .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } else if (this.session.sessionVisibleFromTimestamp) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"          this.formattedResultVisibleFromTime \u003d this.timezoneService"},{"lineNumber":188,"author":{"gitId":"-"},"content":"              .formatToString(this.session.sessionVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      } else if (this.session.resultVisibleFromTimestamp) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        this.formattedResultVisibleFromTime \u003d this.timezoneService"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        this.formattedResultVisibleFromTime \u003d \u0027Not applicable\u0027;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionLoading \u003d false;"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"      // load section tabs"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      this.courseService.getCourseSectionNames(courseId)"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        .subscribe((courseSectionNames: CourseSectionNames) \u003d\u003e {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"          this.sectionsModel.None \u003d {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            questions: [],"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            hasPopulated: false,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            isTabExpanded: false,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":206,"author":{"gitId":"-"},"content":"          for (const sectionName of courseSectionNames.sectionNames) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.sectionsModel[sectionName] \u003d {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"              questions: [],"},{"lineNumber":209,"author":{"gitId":"-"},"content":"              hasPopulated: false,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"              isTabExpanded: false,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":212,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          this.isSectionsLoaded \u003d true;"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          this.hasSectionsLoadingFailed \u003d true;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"      // load question tabs"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        courseId,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        feedbackSessionName,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        intent: Intent.INSTRUCTOR_RESULT,"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      }).subscribe((feedbackQuestions: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        for (const question of feedbackQuestions.questions) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"          this.questionsModel[question.feedbackQuestionId] \u003d {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            question,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            responses: [],"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            statistics: \u0027\u0027,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            hasPopulated: false,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            isTabExpanded: false,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        this.isQuestionsLoaded \u003d true;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        this.hasQuestionsLoadingFailed \u003d true;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"      // load all students in course"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        courseId,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      }).subscribe((allStudents: Students) \u003d\u003e {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        this.allStudentsInCourse \u003d allStudents.students;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        this.loadNoResponseStudents(courseId, feedbackSessionName);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"      // load current instructor name"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      this.instructorService.getInstructor({"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        courseId,"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        intent: Intent.FULL_DETAIL,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        this.currInstructorName \u003d instructor.name;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionLoading \u003d false;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      this.hasFeedbackSessionLoadingFailed \u003d true;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"  loadNoResponseStudents(courseId: string, feedbackSessionName: string): void {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    this.hasNoResponseLoadingFailed \u003d false;"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    // load no response students"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      courseId,"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      feedbackSessionName,"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }).subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) \u003d\u003e {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      // TODO team is missing"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      this.noResponseStudents \u003d this.allStudentsInCourse.filter((student: Student) \u003d\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        !feedbackSessionSubmittedGiverSet.giverIdentifiers.includes(student.email));"},{"lineNumber":274,"author":{"gitId":"FergusMok"},"content":"      this.isNoResponseStudentsLoaded \u003d true;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      this.hasNoResponseLoadingFailed \u003d true;"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    this.isNoResponsePanelLoaded \u003d true;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":283,"author":{"gitId":"-"},"content":"   * Toggles the question tab in per question view."},{"lineNumber":284,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  toggleQuestionTab(questionId: string): void {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    this.questionsModel[questionId].isTabExpanded \u003d !this.questionsModel[questionId].isTabExpanded;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    if (this.questionsModel[questionId].isTabExpanded) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      this.loadQuestionTab(questionId);"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":293,"author":{"gitId":"-"},"content":"   * Loads all the responses and response statistics for the specified question."},{"lineNumber":294,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  loadQuestionTab(questionId: string): void {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    if (this.questionsModel[questionId].hasPopulated) {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      // Do not re-fetch data"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionResults({"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      questionId,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      courseId: this.session.courseId,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.session.feedbackSessionName,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    .subscribe((resp: SessionResults) \u003d\u003e {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      if (resp.questions.length) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        const responses: QuestionOutput \u003d resp.questions[0];"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].responses \u003d responses.allResponses;"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].statistics \u003d responses.questionStatistics;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].hasPopulated \u003d true;"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"        this.preprocessComments(responses.allResponses);"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":318,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":321,"author":{"gitId":"-"},"content":"   * Toggles the section tab in per section view."},{"lineNumber":322,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":323,"author":{"gitId":"-"},"content":"  toggleSectionTab(sectionName: string): void {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    this.sectionsModel[sectionName].isTabExpanded \u003d !this.sectionsModel[sectionName].isTabExpanded;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    if (this.sectionsModel[sectionName].isTabExpanded) {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      this.loadSectionTab(sectionName);"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":331,"author":{"gitId":"-"},"content":"   * Loads all the responses and response statistics for the specified section."},{"lineNumber":332,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  loadSectionTab(sectionName: string): void {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    if (this.sectionsModel[sectionName].hasPopulated) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      // Do not re-fetch data"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionResults({"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      courseId: this.session.courseId,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.session.feedbackSessionName,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      groupBySection: sectionName,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    .subscribe((resp: SessionResults) \u003d\u003e {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      this.sectionsModel[sectionName].questions \u003d resp.questions;"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      this.sectionsModel[sectionName].hasPopulated \u003d true;"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"      // sort questions by question number"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      resp.questions.sort((a: QuestionOutput, b: QuestionOutput) \u003d\u003e"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        a.feedbackQuestion.questionNumber - b.feedbackQuestion.questionNumber);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      resp.questions.forEach((question: QuestionOutput) \u003d\u003e {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        this.preprocessComments(question.allResponses);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":357,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":358,"author":{"gitId":"-"},"content":""},{"lineNumber":359,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":360,"author":{"gitId":"-"},"content":"   * Preprocesses the comments from instructor."},{"lineNumber":361,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":362,"author":{"gitId":"-"},"content":"   * \u003cp\u003eThe instructor comment will be moved to map {@code instructorCommentTableModel}. The original"},{"lineNumber":363,"author":{"gitId":"-"},"content":"   * instructor comments associated with the response will be deleted."},{"lineNumber":364,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":365,"author":{"gitId":"-"},"content":"  preprocessComments(responses: ResponseOutput[]): void {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    responses.forEach((response: ResponseOutput) \u003d\u003e {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"      this.instructorCommentTableModel[response.responseId] \u003d"},{"lineNumber":368,"author":{"gitId":"-"},"content":"         this.commentsToCommentTableModel.transform(response.instructorComments, false, this.session.timeZone);"},{"lineNumber":369,"author":{"gitId":"-"},"content":"      this.sortComments(this.instructorCommentTableModel[response.responseId]);"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      // clear the original comments for safe as instructorCommentTableModel will become the single point of truth"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      response.instructorComments \u003d [];"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":373,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":376,"author":{"gitId":"-"},"content":"   * Handle publish result button event."},{"lineNumber":377,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":378,"author":{"gitId":"-"},"content":"  publishResultHandler(): void {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    const isPublished: boolean \u003d this.session.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED;"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    let modalRef: NgbModalRef;"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    if (isPublished) {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      const modalContent: string \u003d"},{"lineNumber":383,"author":{"gitId":"-"},"content":"          `An email will be sent to students to inform them that the session has been unpublished"},{"lineNumber":384,"author":{"gitId":"-"},"content":"          and the session responses will no longer be viewable by students.`;"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      modalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":386,"author":{"gitId":"-"},"content":"          `Unpublish this session \u003cstrong\u003e${this.session.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":387,"author":{"gitId":"-"},"content":"          SimpleModalType.WARNING, modalContent);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      const modalContent: string \u003d"},{"lineNumber":390,"author":{"gitId":"-"},"content":"          \u0027An email will be sent to students to inform them that the responses are ready for viewing.\u0027;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      modalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":392,"author":{"gitId":"-"},"content":"          `Publish this session \u003cstrong\u003e${this.session.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":393,"author":{"gitId":"-"},"content":"          SimpleModalType.WARNING, modalContent);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      const response: Observable\u003cany\u003e \u003d isPublished"},{"lineNumber":398,"author":{"gitId":"-"},"content":"          ? this.feedbackSessionsService.unpublishFeedbackSession("},{"lineNumber":399,"author":{"gitId":"-"},"content":"            this.session.courseId, this.session.feedbackSessionName,"},{"lineNumber":400,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":401,"author":{"gitId":"-"},"content":"          : this.feedbackSessionsService.publishFeedbackSession("},{"lineNumber":402,"author":{"gitId":"-"},"content":"            this.session.courseId, this.session.feedbackSessionName,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"      response.subscribe((res: FeedbackSession) \u003d\u003e {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        this.session \u003d res;"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        if (this.session.resultVisibleFromTimestamp) {"},{"lineNumber":408,"author":{"gitId":"-"},"content":"          this.formattedResultVisibleFromTime \u003d this.timezoneService"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":410,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The feedback session has been published. \u0027"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"          this.formattedResultVisibleFromTime \u003d \u0027Not applicable\u0027;"},{"lineNumber":414,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The feedback session has been unpublished.\u0027);"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":420,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   * Handle print view button event."},{"lineNumber":424,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":425,"author":{"gitId":"-"},"content":"  printViewHandler(): void {"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    window.print();"},{"lineNumber":427,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":430,"author":{"gitId":"-"},"content":"   * Handle download results button event."},{"lineNumber":431,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  downloadResultHandler(): void {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    this.isDownloadingResults \u003d true;"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    of(this.feedbackSessionActionsService.downloadSessionResult("},{"lineNumber":435,"author":{"gitId":"-"},"content":"      this.courseId,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"      this.session.feedbackSessionName,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      Intent.FULL_DETAIL,"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      this.indicateMissingResponses,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      this.showStatistics,"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      Object.values(this.questionsModel).map((questionTabModel: QuestionTabModel) \u003d\u003e questionTabModel.question),"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      this.section.length \u003d\u003d\u003d 0 ? undefined : this.section,"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      this.section.length \u003d\u003d\u003d 0 ? undefined : this.sectionType,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    )).pipe(finalize(() \u003d\u003e {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"      this.isDownloadingResults \u003d false;"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":446,"author":{"gitId":"-"},"content":"      .subscribe();"},{"lineNumber":447,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"  downloadQuestionResultHandler(question: { questionNumber: number, questionId: string }): void {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    const filename: string \u003d"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        `${this.session.courseId}_${this.session.feedbackSessionName}_question${question.questionNumber}.csv`;"},{"lineNumber":452,"author":{"gitId":"-"},"content":""},{"lineNumber":453,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.downloadSessionResults("},{"lineNumber":454,"author":{"gitId":"-"},"content":"        this.session.courseId,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        this.session.feedbackSessionName,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        Intent.FULL_DETAIL,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        this.indicateMissingResponses,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        this.showStatistics,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        question.questionId,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    ).subscribe((resp: string) \u003d\u003e {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      const blob: any \u003d new Blob([resp], { type: \u0027text/csv\u0027 });"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      saveAs(blob, filename);"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":466,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":469,"author":{"gitId":"-"},"content":"   * Handle expand all questions button event."},{"lineNumber":470,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":471,"author":{"gitId":"-"},"content":"  toggleExpandAllHandler(): void {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    if (this.isExpandAll) {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      this.collapseAllTabs();"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      this.expandAllTabs();"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":477,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":480,"author":{"gitId":"-"},"content":"   * Expands the tab of all sections."},{"lineNumber":481,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":482,"author":{"gitId":"-"},"content":"  expandAllTabs(): void {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    this.isExpandAll \u003d true;"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"    if (this.noResponsePanel !\u003d\u003d undefined) {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      this.noResponsePanel.expandTab();"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"    if (this.viewType \u003d\u003d\u003d InstructorSessionResultViewType.QUESTION) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      for (const questionId of Object.keys(this.questionsModel)) {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].isTabExpanded \u003d true;"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        this.loadQuestionTab(questionId);"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"    for (const sectionName of Object.keys(this.sectionsModel)) {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      this.sectionsModel[sectionName].isTabExpanded \u003d true;"},{"lineNumber":499,"author":{"gitId":"-"},"content":"      this.loadSectionTab(sectionName);"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":501,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   * Collapses the tab of all sections."},{"lineNumber":505,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":506,"author":{"gitId":"-"},"content":"  collapseAllTabs(): void {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    this.isExpandAll \u003d false;"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"    if (this.noResponsePanel !\u003d\u003d undefined) {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      this.noResponsePanel.collapseTab();"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"    if (this.viewType \u003d\u003d\u003d InstructorSessionResultViewType.QUESTION) {"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      for (const questionId of Object.keys(this.questionsModel)) {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].isTabExpanded \u003d false;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"    for (const sectionName of Object.keys(this.sectionsModel)) {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      this.sectionsModel[sectionName].isTabExpanded \u003d false;"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   * Handles the sending of reminders to students."},{"lineNumber":527,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":528,"author":{"gitId":"-"},"content":"  sendReminderToStudents(studentsToRemindData: StudentListInfoTableRowModel[]): void {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      .remindFeedbackSessionSubmissionForRespondents(this.session.courseId, this.session.feedbackSessionName, {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        usersToRemind: studentsToRemindData.map((m: StudentListInfoTableRowModel) \u003d\u003e m.email),"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      }).subscribe(() \u003d\u003e {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast("},{"lineNumber":534,"author":{"gitId":"-"},"content":"          \u0027Reminder e-mails have been sent out to those students and instructors. \u0027"},{"lineNumber":535,"author":{"gitId":"-"},"content":"          + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"  navigateToIndividualSessionResultPage(): void {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/instructor/sessions/result\u0027,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        { courseid: this.courseId, fsname: this.fsName });"},{"lineNumber":545,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"FergusMok":2,"-":545}},{"path":"src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"!isCoursesLoading \u0026\u0026 courseCandidates.length \u003d\u003d\u003d 0 \u0026\u0026 !hasCourseLoadingFailed\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  You have not created any courses yet, or you have no active courses. Go \u003ca tmRouterLink\u003d\"/web/instructor/courses\"\u003ehere\u003c/a\u003e to create or unarchive a course."},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cbutton id\u003d\"btn-add-session\" class\u003d\"btn btn-success\" (click)\u003d\"isSessionEditFormExpanded \u003d true\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isSessionEditFormExpanded || isCoursesLoading\"\u003e\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Feedback Session"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"margin-top-30px\" *ngIf\u003d\"isSessionEditFormExpanded \u0026\u0026 !isCoursesLoading\" @collapseAnim\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cdiv\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ctm-session-edit-form [formMode]\u003d\"SessionEditFormMode.ADD\" [(model)]\u003d\"sessionEditFormModel\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                          [courseCandidates]\u003d\"courseCandidates\" [templateSessions]\u003d\"templateSessions\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                          [isCopyOtherSessionLoading]\u003d\"isCopyOtherSessionLoading\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                          (addNewSessionEvent)\u003d\"addNewSessionHandler()\" (copyOtherSessionsEvent)\u003d\"copyFromOtherSessionsHandler()\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                          (closeEditFormEvent)\u003d\"isSessionEditFormExpanded \u003d false\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-session-edit-form\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCourseLoadingFailed || hasFeedbackSessionLoadingFailed\" [message]\u003d\"\u0027Failed to load data\u0027\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                  (retryEvent)\u003d\"retryLoadingAllData()\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cdiv *tmIsLoading\u003d\"isCoursesLoading || isMoveToRecycleBinLoading || isCopySessionLoading || isResultActionLoading\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"alert alert-warning margin-top-30px\" role\u003d\"alert\" *ngIf\u003d\"sessionsTableRowModels.length \u003d\u003d\u003d 0 \u0026\u0026 !isFeedbackSessionsLoading\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        You have not created any sessions yet. Use the form above to create a session."},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-table *tmIsLoading\u003d\"isFeedbackSessionsLoading\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                         [sessionsTableRowModels]\u003d\"sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"sessionsTableRowModelsSortBy\" [sessionsTableRowModelsSortOrder]\u003d\"sessionsTableRowModelsSortOrder\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                         [courseCandidates]\u003d\"courseCandidates\" [columnsToShow]\u003d\"[ SessionsTableColumn.COURSE_ID ]\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"                         [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.BLUE\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"                         [isSendReminderLoading]\u003d\"isSendReminderLoading\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                         (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent($event)\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                         (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler($event)\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                         (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler($event)\" (copySessionEvent)\u003d\"copySessionEventHandler($event)\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                         (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler($event)\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                         (publishSessionEvent)\u003d\"publishSessionEventHandler($event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler($event)\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                         (downloadSessionResultsEvent)\u003d\"downloadSessionResultEventHandler($event)\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                         (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToRespondentsEventHandler(sessionsTableRowModels[$event])\""},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"                         (sendRemindersToAllNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(sessionsTableRowModels[$event], true)\""},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"                         (sendRemindersToSelectedNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(sessionsTableRowModels[$event], false)\"\u003e\u003c/tm-sessions-table\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003cbr/\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 text-muted\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cp\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Note: The table above doesn\u0027t contain sessions from archived courses and courses in recycle bin."},{"lineNumber":51,"author":{"gitId":"-"},"content":"        To view sessions from an archived course, unarchive the course first; to view sessions from a course in recycle bin, restore the course first."},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003ctm-sessions-recycle-bin-table"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        *tmIsLoading\u003d\"isRecycleBinLoading || isRestoreFeedbackSessionLoading\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        [isRecycleBinExpanded]\u003d\"isRecycleBinExpanded\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModels]\u003d\"recycleBinFeedbackSessionRowModels\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortBy]\u003d\"recycleBinFeedbackSessionRowModelsSortBy\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortOrder]\u003d\"recycleBinFeedbackSessionRowModelsSortOrder\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        [isPermanentDeleteLoading]\u003d\"isPermanentDeleteLoading\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        (restoreSessionEvent)\u003d\"restoreRecycleBinFeedbackSession($event)\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        (restoreAllRecycleBinFeedbackSessionEvent)\u003d\"restoreAllRecycleBinFeedbackSession()\""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        (permanentlyDeleteSessionEvent)\u003d\"permanentDeleteSession($event)\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        (permanentDeleteAllSessionsEvent)\u003d\"permanentDeleteAllSessions()\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        (sortRecycleBinFeedbackSessionRowsEvent)\u003d\"sortRecycleBinFeedbackSessionRowsEvent($event)\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        (recycleBinExpandEvent)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded;\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"-":70,"Nicolascwy":2}},{"path":"src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CourseService, CourseStatistics } from \u0027../../../services/course.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  InstructorPermissionSet,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  InstructorPrivilege,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { JoinStatePipe } from \u0027../../components/student-list/join-state.pipe\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StudentListRowModel } from \u0027../../components/student-list/student-list.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"interface StudentIndexedData {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  [key: string]: Student[];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"interface CourseTab {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  course: Course;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  studentList: StudentListRowModel[];"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  studentSortBy: SortBy;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  studentSortOrder: SortOrder;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  hasTabExpanded: boolean;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  hasStudentLoaded: boolean;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  hasLoadingFailed: boolean;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  stats: CourseStatistics;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Instructor student list page."},{"lineNumber":39,"author":{"gitId":"-"},"content":" */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-student-list-page\u0027,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-student-list-page.component.html\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-student-list-page.component.scss\u0027],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":45,"author":{"gitId":"-"},"content":"})"},{"lineNumber":46,"author":{"gitId":"-"},"content":"export class InstructorStudentListPageComponent implements OnInit {"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  courseTabList: CourseTab[] \u003d [];"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  hasLoadingFailed: boolean \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  isLoadingCourses: boolean \u003d false;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  constructor(private instructorService: InstructorService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              private tableComparatorService: TableComparatorService) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.loadCourses();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * Loads courses of current instructor."},{"lineNumber":65,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  loadCourses(): void {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.hasLoadingFailed \u003d false;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.isLoadingCourses \u003d true;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.courseService.getAllCoursesAsInstructor(\u0027active\u0027)"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          this.isLoadingCourses \u003d false;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        .subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          courses.courses.forEach((course: Course) \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            const courseTab: CourseTab \u003d {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"              course,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"              studentList: [],"},{"lineNumber":78,"author":{"gitId":"-"},"content":"              studentSortBy: SortBy.NONE,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"              studentSortOrder: SortOrder.ASC,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              hasTabExpanded: false,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              hasStudentLoaded: false,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"              hasLoadingFailed: false,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              stats: {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                numOfSections: 0,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                numOfStudents: 0,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                numOfTeams: 0,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.courseTabList.push(courseTab);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          this.courseTabList \u003d [];"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          this.hasLoadingFailed \u003d true;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e this.sortCourses());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   * Toggles specific card and loads students if needed"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  toggleCard(courseTab: CourseTab): void {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    courseTab.hasTabExpanded \u003d !courseTab.hasTabExpanded;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    if (!courseTab.hasStudentLoaded) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      this.loadStudents(courseTab);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   * Loads students of a specified course."},{"lineNumber":111,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  loadStudents(courseTab: CourseTab): void {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    courseTab.hasLoadingFailed \u003d false;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    courseTab.hasStudentLoaded \u003d false;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: courseTab.course.courseId })"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        .subscribe((students: Students) \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          courseTab.studentList \u003d []; // Reset the list of students for the course"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          const sections: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            const term: string \u003d x.sectionName;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            (acc[term] \u003d acc[term] || []).push(x);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return acc;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          }, {});"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"          this.instructorService.loadInstructorPrivilege({"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            courseId: courseTab.course.courseId,"},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"          })"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            courseTab.hasStudentLoaded \u003d true;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"          .subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            const courseLevelPrivilege: InstructorPermissionSet \u003d instructorPrivilege.privileges.courseLevel;"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Object.keys(sections).forEach((sectionName: string) \u003d\u003e {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              const sectionLevelPrivilege: InstructorPermissionSet \u003d"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                  instructorPrivilege.privileges.sectionLevel[sectionName] || courseLevelPrivilege;"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"              const studentsInSection: Student[] \u003d sections[sectionName];"},{"lineNumber":138,"author":{"gitId":"-"},"content":"              const studentModels: StudentListRowModel[] \u003d studentsInSection.map((studentInSection: Student) \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                return {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                  student: studentInSection,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  isAllowedToViewStudentInSection: sectionLevelPrivilege.canViewStudentInSections,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                  isAllowedToModifyStudent: sectionLevelPrivilege.canModifyStudent,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"              courseTab.studentList.push(...studentModels);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              courseTab.studentList.sort(this.sortStudentBy(SortBy.NONE, SortOrder.ASC));"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"            courseTab.stats \u003d this.courseService.calculateCourseStatistics(students.students);"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            courseTab.hasLoadingFailed \u003d true;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            courseTab.studentList \u003d [];"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          courseTab.hasLoadingFailed \u003d true;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          courseTab.studentList \u003d [];"},{"lineNumber":160,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":165,"author":{"gitId":"-"},"content":"   * Removes the student from course and update the course statistics."},{"lineNumber":166,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  removeStudentFromCourse(courseTab: CourseTab, studentEmail: string): void {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    this.courseService.removeStudentFromCourse(courseTab.course.courseId, studentEmail).subscribe(() \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      courseTab.studentList \u003d"},{"lineNumber":170,"author":{"gitId":"-"},"content":"          courseTab.studentList.filter("},{"lineNumber":171,"author":{"gitId":"-"},"content":"              (studentModel: StudentListRowModel) \u003d\u003e studentModel.student.email !\u003d\u003d studentEmail);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"      const students: Student[] \u003d"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          courseTab.studentList.map((studentModel: StudentListRowModel) \u003d\u003e studentModel.student);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      courseTab.stats \u003d this.courseService.calculateCourseStatistics(students);"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"      this.statusMessageService"},{"lineNumber":178,"author":{"gitId":"-"},"content":"          .showSuccessToast(`Student is successfully deleted from course \"${courseTab.course.courseId}\"`);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":185,"author":{"gitId":"-"},"content":"   * Sorts the courses in the list according to course ID."},{"lineNumber":186,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  sortCourses(): void {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    this.courseTabList.sort((a: CourseTab, b: CourseTab) \u003d\u003e {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      return this.tableComparatorService"},{"lineNumber":190,"author":{"gitId":"-"},"content":"          .compare(SortBy.COURSE_ID, SortOrder.ASC, a.course.courseId, b.course.courseId);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   * Sorts the student list."},{"lineNumber":196,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  sortStudentList(courseTab: CourseTab, by: SortBy): void {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    courseTab.studentSortBy \u003d by;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    courseTab.studentSortOrder \u003d"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      courseTab.studentSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    courseTab.studentList.sort(this.sortStudentBy(by, courseTab.studentSortOrder));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * Returns a function to determine the order of sort for students."},{"lineNumber":206,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  sortStudentBy(by: SortBy, order: SortOrder):"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      ((a: StudentListRowModel, b: StudentListRowModel) \u003d\u003e number) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    const joinStatePipe: JoinStatePipe \u003d new JoinStatePipe();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    if (by \u003d\u003d\u003d SortBy.NONE) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      // Default order: section name \u003e team name \u003e student name"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      return ((a: StudentListRowModel, b: StudentListRowModel): number \u003d\u003e {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return this.tableComparatorService"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            .compare(SortBy.SECTION_NAME, order, a.student.sectionName, b.student.sectionName)"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          || this.tableComparatorService.compare(SortBy.TEAM_NAME, order, a.student.teamName, b.student.teamName)"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          || this.tableComparatorService.compare(SortBy.RESPONDENT_NAME, order, a.student.name, b.student.name);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    return (a: StudentListRowModel, b: StudentListRowModel): number \u003d\u003e {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      let strA: string;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      let strB: string;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      switch (by) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        case SortBy.SECTION_NAME:"},{"lineNumber":224,"author":{"gitId":"-"},"content":"          strA \u003d a.student.sectionName;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"          strB \u003d b.student.sectionName;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        case SortBy.RESPONDENT_NAME:"},{"lineNumber":228,"author":{"gitId":"-"},"content":"          strA \u003d a.student.name;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"          strB \u003d b.student.name;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        case SortBy.TEAM_NAME:"},{"lineNumber":232,"author":{"gitId":"-"},"content":"          strA \u003d a.student.teamName;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          strB \u003d b.student.teamName;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        case SortBy.RESPONDENT_EMAIL:"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          strA \u003d a.student.email;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"          strB \u003d b.student.email;"},{"lineNumber":238,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        case SortBy.JOIN_STATUS:"},{"lineNumber":240,"author":{"gitId":"-"},"content":"          strA \u003d joinStatePipe.transform(a.student.joinState);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"          strB \u003d joinStatePipe.transform(b.student.joinState);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":244,"author":{"gitId":"-"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":249}},{"path":"src/web/app/pages-session/session-result-page/session-result-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  Feedback Session Results"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"regKey\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"loggedInUser\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        You are viewing feedback results as {{ personName }}. If you wish to link your Google account ({{ loggedInUser }}) with this user,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003ca href\u003d\"#\" id\u003d\"join-course-btn\" (click)\u003d\"joinCourseForUnregisteredEntity(); $event.preventDefault()\"\u003eclick here\u003c/a\u003e."},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"!loggedInUser\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        You are viewing feedback results as {{ personName }}. You may submit feedback for sessions that are currently open and view results without logging in."},{"lineNumber":13,"author":{"gitId":"-"},"content":"        To access other features you need to \u003ca href\u003d\"#\" (click)\u003d\"joinCourseForUnregisteredEntity(); $event.preventDefault()\"\u003elogin using a Google account\u003c/a\u003e (recommended)."},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"!isFeedbackSessionResultsLoading \u0026\u0026 questions.length !\u003d\u003d 0\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Note: Questions without responses (i.e., no responses received or responses are not meant to be visible to you) are not shown below."},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv *ngIf\u003d\"!isFeedbackSessionDetailsLoading\" class\u003d\"card card-plain mt-3\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eCourse ID:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-id\" class\u003d\"col-md-7 text-md-left\"\u003e{{ session.courseId }}\u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eSession:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"session-name\" class\u003d\"col-md-7 text-md-left\"\u003e{{ session.feedbackSessionName }}\u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eOpening time:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"opening-time\" class\u003d\"col-md-7 text-md-left\"\u003e{{ formattedSessionOpeningTime }}\u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eClosing time:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"closing-time\" class\u003d\"col-md-7 text-md-left\"\u003e{{ formattedSessionClosingTime }}\u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light\" style\u003d\"margin-bottom: 20px;\" *ngIf\u003d\"intent \u003d\u003d\u003d Intent.INSTRUCTOR_RESULT\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    If you wish to view the feedback results of the entire course, \u003ca href\u003d\"javascript:;\" (click)\u003d\"navigateToSessionReportPage(); $event.preventDefault()\"\u003eclick here\u003c/a\u003e."},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasFeedbackSessionResultsLoadingFailed\" [message]\u003d\"\u0027Failed to load results\u0027\" (retryEvent)\u003d\"retryLoadingFeedbackSessionResults()\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isFeedbackSessionResultsLoading\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"questions.length \u003d\u003d\u003d 0\" class\u003d\"mt-4\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"alert alert-primary d-flex align-items-center justify-content-center\" style\u003d\"background-color: #D1ECF1;\" role\u003d\"alert\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Nothing to show. The responses are either not configured to be visible or there are no responses."},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003ctm-question-response-panel [questions]\u003d\"questions\" [session]\u003d\"session\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                                [intent]\u003d\"intent\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-question-response-panel\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":63}},{"path":"src/web/app/pages-session/session-result-page/session-result-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import SpyInstance \u003d jest.SpyInstance;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  AuthInfo, FeedbackContributionQuestionDetails, FeedbackContributionResponseDetails,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails, FeedbackMcqResponseDetails,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  FeedbackQuestionType, FeedbackRubricQuestionDetails, FeedbackRubricResponseDetails,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus, FeedbackTextQuestionDetails, FeedbackTextResponseDetails,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  QuestionOutput,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting, SessionResults,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { QuestionResponsePanelModule } from \u0027../../components/question-response-panel/question-response-panel.module\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { SingleStatisticsModule } from \u0027../../components/question-responses/single-statistics/single-statistics.module\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  StudentViewResponsesModule,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-responses/student-view-responses/student-view-responses.module\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import { QuestionTextWithInfoModule } from \u0027../../components/question-text-with-info/question-text-with-info.module\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { SessionResultPageComponent } from \u0027./session-result-page.component\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"describe(\u0027SessionResultPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  const testFeedbackSession: FeedbackSession \u003d {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 0,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: 1549095330000,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  const testInfo: AuthInfo \u003d {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    masquerade: false,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    user: {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      id: \u0027user-id\u0027,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      isAdmin: false,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      isInstructor: true,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      isStudent: false,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      isMaintainer: false,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  const testQuestion1: FeedbackQuestion \u003d {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestion1\u0027,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    questionNumber: 1,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    questionBrief: \u0027How well did team member perform?\u0027,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      hasAssignedWeights: false,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      mcqWeights: [],"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      mcqOtherWeight: 0,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      mcqChoices: ["},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u0027\u003cp\u003eGood\u003c/p\u003e\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        \u0027\u003cp\u003eNormal\u003c/p\u003e\u0027,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u0027\u003cp\u003eBad\u003c/p\u003e\u0027,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      otherEnabled: false,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      generateOptionsFor: \u0027NONE\u0027,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      questionText: \u0027How well did team member perform?\u0027,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  const testQuestion2: FeedbackQuestion \u003d {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestion2\u0027,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    questionNumber: 2,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    questionBrief: \u0027Rate your teammates in contribution\u0027,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      questionText: \u0027Rate your teammates in contribution\u0027,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      isNotSureAllowed: false,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    } as FeedbackContributionQuestionDetails,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"  const testQuestion3: FeedbackQuestion \u003d {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestion3\u0027,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    questionNumber: 3,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    questionBrief: \u0027Rate your teammates proficiency\u0027,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      questionText: \u0027Rate your teammates proficiency\u0027,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      hasAssignedWeights: false,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      rubricWeightsForEachCell: [[]],"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      rubricChoices: [\u0027Poor\u0027, \u0027Average\u0027, \u0027Good\u0027],"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      rubricSubQuestions: [],"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      rubricDescriptions: [[]],"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    } as FeedbackRubricQuestionDetails,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  const testQuestionAnonymousResponse1: FeedbackQuestion \u003d {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestionAnonymousResponse1\u0027,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    questionNumber: 1,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    questionBrief: \u0027What comments do you have regarding each of your team members? \u0027"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        + \u0027(response is confidential and will only be shown to the instructor).\u0027,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      shouldAllowRichText: true,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      questionText: \u0027What comments do you have regarding each of your team members? \u0027"},{"lineNumber":152,"author":{"gitId":"-"},"content":"          + \u0027(response is confidential and will only be shown to the instructor).\u0027,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  const testQuestionAnonymousResponse2: FeedbackQuestion \u003d {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestionAnonymousResponse2\u0027,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    questionNumber: 2,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    questionBrief: \u0027How are the team dynamics thus far? \u0027"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        + \u0027(response is confidential and will only be shown to the instructor).\u0027,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      shouldAllowRichText: true,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      questionText: \u0027How are the team dynamics thus far? \u0027"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          + \u0027(response is confidential and will only be shown to the instructor).\u0027,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"  let component: SessionResultPageComponent;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cSessionResultPageComponent\u003e;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  let authService: AuthService;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  let navService: NavigationService;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  let studentService: StudentService;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  let feedbackSessionService: FeedbackSessionsService;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  let logService: LogService;"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"  const testQueryParams: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    courseid: \u0027CS3281\u0027,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    fsname: \u0027Peer Feedback\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    key: \u0027reg-key\u0027,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":203,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        StudentViewResponsesModule,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        QuestionTextWithInfoModule,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        QuestionResponsePanelModule,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        SingleStatisticsModule,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      declarations: [SessionResultPageComponent],"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":214,"author":{"gitId":"-"},"content":"        AuthService,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        NavigationService,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        StudentService,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        FeedbackSessionsService,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        LogService,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"          provide: ActivatedRoute,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"          useValue: {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            queryParams: of(testQueryParams),"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            data: {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"              intent: Intent.STUDENT_RESULT,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"              pipe: () \u003d\u003e {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                  subscribe: (fn: (value: any) \u003d\u003e void) \u003d\u003e fn(testQueryParams),"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":229,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":231,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        .compileComponents();"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(SessionResultPageComponent);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    feedbackSessionService \u003d TestBed.inject(FeedbackSessionsService);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    logService \u003d TestBed.inject(LogService);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":246,"author":{"gitId":"fsgmhoward"},"content":"    // Set both loading flags to false initially for testing purposes only"},{"lineNumber":247,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionDetailsLoading \u003d false;"},{"lineNumber":248,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionResultsLoading \u003d false;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027should snap with session details and results are loading\u0027, () \u003d\u003e {"},{"lineNumber":261,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionDetailsLoading \u003d true;"},{"lineNumber":262,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionResultsLoading \u003d true;"},{"lineNumber":263,"author":{"gitId":"fsgmhoward"},"content":"    fixture.detectChanges();"},{"lineNumber":264,"author":{"gitId":"fsgmhoward"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":265,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":266,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":267,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027should snap with session details loaded and results are loading\u0027, () \u003d\u003e {"},{"lineNumber":268,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionDetailsLoading \u003d false;"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionResultsLoading \u003d true;"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"  it(\u0027should snap when session results failed to load\u0027, () \u003d\u003e {"},{"lineNumber":275,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionDetailsLoading \u003d false;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionResultsLoading \u003d false;"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    component.hasFeedbackSessionResultsLoadingFailed \u003d true;"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027session-link-key\u0027;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027alice\u0027;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is not logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027session-link-key\u0027;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027\u0027;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"  it(\u0027should snap with an open feedback session with no questions\u0027, () \u003d\u003e {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    component.session \u003d {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      courseId: \u0027CS3281\u0027,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      timeZone: \u0027UTC\u0027,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      feedbackSessionName: \u0027Peer Review 1\u0027,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      instructions: \u0027\u0027,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      submissionStartTimestamp: 1555232400,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      submissionEndTimestamp: 1555233400,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      gracePeriod: 0,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"      publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: true,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: true,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      createdAtTimestamp: 1555231400,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    component.questions \u003d [];"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":318,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session with questions\u0027, () \u003d\u003e {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    component.session \u003d testFeedbackSession;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    component.questions \u003d ["},{"lineNumber":323,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestion1,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        allResponses: [],"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        responsesToSelf: [],"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":329,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-1\u0027,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient1\u0027,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"              answer: \u0027Good\u0027,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"              isOther: false,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"              otherFieldContent: \u0027\u0027,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            } as FeedbackMcqResponseDetails,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":344,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        otherResponses: [[]],"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestion2,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        allResponses: [],"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        responsesToSelf: ["},{"lineNumber":353,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-2\u0027,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            recipient: \u0027giver1\u0027,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":363,"author":{"gitId":"-"},"content":"              answer: 120,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            } as FeedbackContributionResponseDetails,"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":366,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":369,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-3\u0027,"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient2\u0027,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team2\u0027,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section2\u0027,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"              answer: 110,"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            } as FeedbackContributionResponseDetails,"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":382,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":383,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-4\u0027,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team2\u0027,"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section2\u0027,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"              answer: 100,"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            } as FeedbackContributionResponseDetails,"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":396,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        otherResponses: [[]],"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestion3,"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        allResponses: [],"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        responsesToSelf: [],"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":406,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-5\u0027,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team2\u0027,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section2\u0027,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"              answer: [1],"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            } as FeedbackRubricResponseDetails,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            instructorComments: ["},{"lineNumber":419,"author":{"gitId":"-"},"content":"              {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                commentGiver: \u0027comment-giver-1\u0027,"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                lastEditorEmail: \u0027comment@egeg.com\u0027,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                feedbackResponseCommentId: 1,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                commentText: \u0027this is a text\u0027,"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                createdAt: 1402775804,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                lastEditedAt: 1402775804,"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                isVisibilityFollowingFeedbackQuestion: true,"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                showGiverNameTo: [],"},{"lineNumber":428,"author":{"gitId":"-"},"content":"                showCommentTo: [],"},{"lineNumber":429,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            ],"},{"lineNumber":431,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        otherResponses: [[]],"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":439,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session with questions of anonymous responses\u0027, () \u003d\u003e {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    component.session \u003d testFeedbackSession;"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    component.questions \u003d ["},{"lineNumber":444,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestionAnonymousResponse1,"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        allResponses: ["},{"lineNumber":448,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-1\u0027,"},{"lineNumber":451,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient1\u0027,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":461,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":462,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-2\u0027,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":466,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":467,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient2\u0027,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":470,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":475,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":476,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-3\u0027,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":485,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":489,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        responsesToSelf: [],"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":493,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-1\u0027,"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":497,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":498,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":499,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient1\u0027,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":501,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":503,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":504,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":505,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":506,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":507,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-2\u0027,"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":511,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":512,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":513,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient2\u0027,"},{"lineNumber":514,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":515,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":517,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":518,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":520,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":521,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":523,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-3\u0027,"},{"lineNumber":524,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":534,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        otherResponses: [],"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":538,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestionAnonymousResponse2,"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        allResponses: ["},{"lineNumber":542,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-4\u0027,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":548,"author":{"gitId":"-"},"content":"            recipient: \u0027team1\u0027,"},{"lineNumber":549,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":553,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":555,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        responsesToSelf: [],"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":559,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":561,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-4\u0027,"},{"lineNumber":562,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":563,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":564,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            recipient: \u0027team1\u0027,"},{"lineNumber":566,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":567,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":568,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":570,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":572,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        otherResponses: [],"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":577,"author":{"gitId":"-"},"content":""},{"lineNumber":578,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":580,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"  it(\u0027should fetch auth info on init\u0027, () \u003d\u003e {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"    expect(component.courseId).toEqual(\u0027CS3281\u0027);"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionName).toEqual(\u0027Peer Feedback\u0027);"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    expect(component.regKey).toEqual(\u0027reg-key\u0027);"},{"lineNumber":590,"author":{"gitId":"-"},"content":"    expect(component.loggedInUser).toEqual(\u0027user-id\u0027);"},{"lineNumber":591,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"  it(\u0027should verify allowed access and used reg key\u0027, () \u003d\u003e {"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"      isUsed: true,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURLWithParamEncoding\u0027).mockImplementation();"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":604,"author":{"gitId":"-"},"content":""},{"lineNumber":605,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/sessions/result\u0027,"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        { courseid: \u0027CS3281\u0027, fsname: \u0027Peer Feedback\u0027 });"},{"lineNumber":608,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":609,"author":{"gitId":"-"},"content":""},{"lineNumber":610,"author":{"gitId":"-"},"content":"  it(\u0027should load info and create log for unused reg key that is allowed\u0027, () \u003d\u003e {"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":613,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":614,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    jest.spyOn(studentService, \u0027getStudent\u0027).mockReturnValue(of({"},{"lineNumber":619,"author":{"gitId":"-"},"content":"      name: \u0027student-name\u0027,"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      email: \u0027\u0027,"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      courseId: \u0027\u0027,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"      sectionName: \u0027\u0027,"},{"lineNumber":623,"author":{"gitId":"-"},"content":"      teamName: \u0027\u0027,"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionService, \u0027getFeedbackSession\u0027).mockReturnValue(of(testFeedbackSession));"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    const logSpy: SpyInstance \u003d jest.spyOn(logService, \u0027createFeedbackSessionLog\u0027).mockReturnValue(of(\u0027log created\u0027));"},{"lineNumber":627,"author":{"gitId":"-"},"content":""},{"lineNumber":628,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":629,"author":{"gitId":"-"},"content":""},{"lineNumber":630,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(\u0027student-name\u0027);"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    expect(component.session.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    expect(logSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":633,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":634,"author":{"gitId":"-"},"content":""},{"lineNumber":635,"author":{"gitId":"-"},"content":"  it(\u0027should fetch session results when loading feedback session\u0027, () \u003d\u003e {"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":637,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":638,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":641,"author":{"gitId":"-"},"content":""},{"lineNumber":642,"author":{"gitId":"-"},"content":"    const testFeedbackSessionResult: SessionResults \u003d {"},{"lineNumber":643,"author":{"gitId":"-"},"content":"      questions: ["},{"lineNumber":644,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"          feedbackQuestion: testQuestion1,"},{"lineNumber":646,"author":{"gitId":"-"},"content":"          questionStatistics: \u0027\u0027,"},{"lineNumber":647,"author":{"gitId":"-"},"content":"          allResponses: [],"},{"lineNumber":648,"author":{"gitId":"-"},"content":"          responsesToSelf: [],"},{"lineNumber":649,"author":{"gitId":"-"},"content":"          responsesFromSelf: [],"},{"lineNumber":650,"author":{"gitId":"-"},"content":"          otherResponses: [],"},{"lineNumber":651,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":653,"author":{"gitId":"-"},"content":"          feedbackQuestion: testQuestion3,"},{"lineNumber":654,"author":{"gitId":"-"},"content":"          questionStatistics: \u0027\u0027,"},{"lineNumber":655,"author":{"gitId":"-"},"content":"          allResponses: [],"},{"lineNumber":656,"author":{"gitId":"-"},"content":"          responsesToSelf: [],"},{"lineNumber":657,"author":{"gitId":"-"},"content":"          responsesFromSelf: [],"},{"lineNumber":658,"author":{"gitId":"-"},"content":"          otherResponses: [],"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":661,"author":{"gitId":"-"},"content":"          feedbackQuestion: testQuestion2,"},{"lineNumber":662,"author":{"gitId":"-"},"content":"          questionStatistics: \u0027\u0027,"},{"lineNumber":663,"author":{"gitId":"-"},"content":"          allResponses: [],"},{"lineNumber":664,"author":{"gitId":"-"},"content":"          responsesToSelf: [],"},{"lineNumber":665,"author":{"gitId":"-"},"content":"          responsesFromSelf: [],"},{"lineNumber":666,"author":{"gitId":"-"},"content":"          otherResponses: [],"},{"lineNumber":667,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionService, \u0027getFeedbackSession\u0027).mockReturnValue(of(testFeedbackSession));"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionService, \u0027getFeedbackSessionResults\u0027)"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testFeedbackSessionResult));"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":678,"author":{"gitId":"-"},"content":""},{"lineNumber":679,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":680,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith({"},{"lineNumber":681,"author":{"gitId":"-"},"content":"      courseId: \u0027CS3281\u0027,"},{"lineNumber":682,"author":{"gitId":"-"},"content":"      feedbackSessionName: \u0027Peer Feedback\u0027,"},{"lineNumber":683,"author":{"gitId":"-"},"content":"      intent: Intent.STUDENT_RESULT,"},{"lineNumber":684,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":685,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":686,"author":{"gitId":"-"},"content":"    expect(component.questions.map((question: QuestionOutput) \u003d\u003e question.feedbackQuestion.questionNumber))"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        .toEqual([1, 2, 3]);"},{"lineNumber":688,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"  it(\u0027should deny access for reg key not belonging to logged in user\u0027, () \u003d\u003e {"},{"lineNumber":691,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":692,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":693,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":694,"author":{"gitId":"-"},"content":"      isValid: true,"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":697,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":698,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":701,"author":{"gitId":"-"},"content":""},{"lineNumber":702,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        `You are trying to access TEAMMATES using the Google account user-id, which"},{"lineNumber":705,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":706,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":707,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":708,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":709,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":710,"author":{"gitId":"-"},"content":""},{"lineNumber":711,"author":{"gitId":"-"},"content":"  it(\u0027should deny access for invalid reg key\u0027, () \u003d\u003e {"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":714,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":715,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":716,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":718,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":720,"author":{"gitId":"-"},"content":""},{"lineNumber":721,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":722,"author":{"gitId":"-"},"content":""},{"lineNumber":723,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":724,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":725,"author":{"gitId":"-"},"content":"        \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":726,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":727,"author":{"gitId":"-"},"content":""},{"lineNumber":728,"author":{"gitId":"-"},"content":"  it(\u0027should navigate away when error occurs\u0027, () \u003d\u003e {"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(throwError({"},{"lineNumber":730,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is error\u0027 },"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":732,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":736,"author":{"gitId":"-"},"content":""},{"lineNumber":737,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":738,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":739,"author":{"gitId":"-"},"content":"        \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":740,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"  it(\u0027should navigate to join course when user click on join course link\u0027, () \u003d\u003e {"},{"lineNumber":743,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":744,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027user\u0027;"},{"lineNumber":745,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":746,"author":{"gitId":"-"},"content":""},{"lineNumber":747,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"    const btn: any \u003d fixture.debugElement.nativeElement"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        .querySelector(\u0027#join-course-btn\u0027);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"    btn.click();"},{"lineNumber":752,"author":{"gitId":"-"},"content":""},{"lineNumber":753,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":754,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/join\u0027, { entitytype: \u0027student\u0027, key: \u0027reg-key\u0027 });"},{"lineNumber":755,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":756,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"fsgmhoward":13,"-":743}},{"path":"src/web/app/pages-session/session-result-page/session-result-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackSession, FeedbackSessionLogType,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus, FeedbackSessionSubmissionStatus,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  QuestionOutput, RegkeyValidity,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  SessionResults,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  SessionVisibleSetting, Student,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { FeedbackVisibilityType, Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { DEFAULT_NUMBER_OF_RETRY_ATTEMPTS } from \u0027../../../types/default-retry-attempts\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027../../components/error-report/error-report.component\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Feedback session result page."},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-result-page\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-result-page.component.html\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-result-page.component.scss\u0027],"},{"lineNumber":36,"author":{"gitId":"-"},"content":"})"},{"lineNumber":37,"author":{"gitId":"-"},"content":"export class SessionResultPageComponent implements OnInit {"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  Intent: typeof Intent \u003d Intent;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  session: FeedbackSession \u003d {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    timeZone: \u0027\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 0,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: 0,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  questions: QuestionOutput[] \u003d [];"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  personName: string \u003d \u0027\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  personEmail: string \u003d \u0027\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  entityType: string \u003d \u0027student\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  regKey: string \u003d \u0027\u0027;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  loggedInUser: string \u003d \u0027\u0027;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  visibilityRecipient: FeedbackVisibilityType \u003d FeedbackVisibilityType.RECIPIENT;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  intent: Intent \u003d Intent.STUDENT_RESULT;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"  isFeedbackSessionDetailsLoading: boolean \u003d true;"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"  isFeedbackSessionResultsLoading: boolean \u003d true;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  hasFeedbackSessionResultsLoadingFailed: boolean \u003d false;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  retryAttempts: number \u003d DEFAULT_NUMBER_OF_RETRY_ATTEMPTS;"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  constructor(private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"              private logService: LogService,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    this.route.data.pipe("},{"lineNumber":95,"author":{"gitId":"-"},"content":"        tap((data: any) \u003d\u003e {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"          this.intent \u003d data.intent;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        switchMap(() \u003d\u003e this.route.queryParams),"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    ).subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      this.regKey \u003d queryParams.key || \u0027\u0027;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      if (queryParams.entitytype \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.intent \u003d Intent.INSTRUCTOR_RESULT;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search.replace(/\u0026/g, \u0027%26\u0027)}`;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (auth.user) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          this.loggedInUser \u003d auth.user.id;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (this.regKey) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          this.authService.getAuthRegkeyValidity(this.regKey, this.intent).subscribe((resp: RegkeyValidity) \u003d\u003e {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (resp.isAllowedAccess) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              if (resp.isUsed) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                // The logged in user matches the registration key; redirect to the logged in URL"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"                this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":120,"author":{"gitId":"-"},"content":"                    this.router, `/web/${this.entityType}/sessions/result`,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                    { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":122,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                // Valid, unused registration key; load information based on the key"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                this.loadPersonName();"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                this.loadFeedbackSession();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            } else if (resp.isValid) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"              // At this point, registration key must already be used, otherwise access would be granted"},{"lineNumber":129,"author":{"gitId":"-"},"content":"              if (this.loggedInUser) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                // Registration key belongs to another user who is not the logged in user"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    `You are trying to access TEAMMATES using the Google account ${this.loggedInUser}, which"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                // There is no logged in user for a valid, used registration key, redirect to login page"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                // eslint-disable-next-line no-lonely-if"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                if (this.entityType \u003d\u003d\u003d \u0027student\u0027) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                } else if (this.entityType \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.instructorLoginUrl}`;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":145,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              // The registration key is invalid"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                  \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } else if (this.loggedInUser) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          // Load information based on logged in user"},{"lineNumber":157,"author":{"gitId":"-"},"content":"          this.loadPersonName();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          this.loadFeedbackSession();"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"              \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      }, () \u003d\u003e {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"  private loadPersonName(): void {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    switch (this.intent) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      case Intent.STUDENT_RESULT:"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        this.studentService.getStudent(this.courseId, \u0027\u0027, this.regKey).subscribe((student: Student) \u003d\u003e {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          this.personName \u003d student.name;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          this.personEmail \u003d student.email;"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"          this.logService.createFeedbackSessionLog({"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            courseId: this.courseId,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            studentEmail: this.personEmail,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logType: FeedbackSessionLogType.VIEW_RESULT,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"          }).subscribe("},{"lineNumber":183,"author":{"gitId":"-"},"content":"              () \u003d\u003e {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                // No action needed if log is successfully created."},{"lineNumber":185,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":186,"author":{"gitId":"-"},"content":"              () \u003d\u003e this.statusMessageService.showWarningToast(\u0027Failed to log feedback session view\u0027));"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      case Intent.INSTRUCTOR_RESULT:"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        this.instructorService.getInstructor({"},{"lineNumber":191,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"          feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          intent: this.intent,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          this.personName \u003d instructor.name;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"          this.personEmail \u003d instructor.email;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"  private loadFeedbackSession(): void {"},{"lineNumber":205,"author":{"gitId":"fsgmhoward"},"content":"    this.isFeedbackSessionDetailsLoading \u003d true;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionResultsLoading \u003d true;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":212,"author":{"gitId":"fsgmhoward"},"content":"    })"},{"lineNumber":213,"author":{"gitId":"fsgmhoward"},"content":"    .pipe(finalize(() \u003d\u003e { this.isFeedbackSessionDetailsLoading \u003d false; }))"},{"lineNumber":214,"author":{"gitId":"fsgmhoward"},"content":"    .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      this.session \u003d feedbackSession;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":218,"author":{"gitId":"-"},"content":"          .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      this.formattedSessionClosingTime \u003d this.timezoneService"},{"lineNumber":220,"author":{"gitId":"-"},"content":"          .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSessionResults({"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        courseId: this.courseId,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        intent: this.intent,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        key: this.regKey,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":227,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            this.isFeedbackSessionResultsLoading \u003d false;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          .subscribe((sessionResults: SessionResults) \u003d\u003e {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.questions \u003d sessionResults.questions.sort("},{"lineNumber":232,"author":{"gitId":"-"},"content":"                (a: QuestionOutput, b: QuestionOutput) \u003d\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    a.feedbackQuestion.questionNumber - b.feedbackQuestion.questionNumber);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            this.handleError(resp);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionResultsLoading \u003d false;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      this.handleError(resp);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":244,"author":{"gitId":"-"},"content":"   * Redirects to join course link for unregistered student/instructor."},{"lineNumber":245,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  joinCourseForUnregisteredEntity(): void {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/join\u0027, { entitytype: this.entityType, key: this.regKey });"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"  navigateToSessionReportPage(): void {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/instructor/sessions/report\u0027,"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"  retryLoadingFeedbackSessionResults(): void {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionResultsLoadingFailed \u003d false;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003e\u003d 0) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      this.retryAttempts -\u003d 1;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    this.loadFeedbackSession();"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":264,"author":{"gitId":"-"},"content":"   * Handles error according to number of attempts at retry"},{"lineNumber":265,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  handleError(resp: ErrorMessageOutput): void {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionResultsLoadingFailed \u003d true;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003c 0) {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      const report: NgbModalRef \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      report.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      report.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":6,"-":270}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { NgxPageScrollCoreModule } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import SpyInstance \u003d jest.SpyInstance;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  CommentVisibilityType,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackContributionQuestionDetails,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackContributionResponseDetails,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackMcqResponseDetails,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackMsqQuestionDetails,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackMsqResponseDetails,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackNumericalScaleResponseDetails,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  FeedbackRankOptionsQuestionDetails,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  FeedbackRankOptionsResponseDetails,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  FeedbackRubricQuestionDetails,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  FeedbackRubricResponseDetails,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  FeedbackTextResponseDetails,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  JoinState,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModule,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form.module\u0027;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"import { SessionSubmissionPageComponent } from \u0027./session-submission-page.component\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"describe(\u0027SessionSubmissionPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  const deepCopy: \u003cT\u003e(obj: T) \u003d\u003e T \u003d \u003cT\u003e(obj: T) \u003d\u003e JSON.parse(JSON.stringify(obj));"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  const testStudent: Student \u003d {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    email: \u0027alice@tmms.com\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    courseId: \u0027course-id\u0027,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    name: \u0027Alice Betsy\u0027,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    teamName: \u0027Team 1\u0027,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    sectionName: \u0027Section 1\u0027,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  const testInstructor: Instructor \u003d {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    courseId: \u0027course-id\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    email: \u0027test@example.com\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    name: \u0027Instructor Ho\u0027,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    joinState: JoinState.JOINED,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  const testOpenFeedbackSession: FeedbackSession \u003d {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    instructions: \u0027Instructions\u0027,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 1000000000000,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: Date.now() + 10 * 60 * 1000, // 10 minutes before closing"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  const testComment: FeedbackResponseComment \u003d {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    commentGiver: \u0027comment giver\u0027,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    lastEditorEmail: \u0027last-editor@email.com\u0027,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    feedbackResponseCommentId: 1,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    commentText: \u0027comment text\u0027,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    createdAt: 10000000,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    lastEditedAt: 20000000,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    isVisibilityFollowingFeedbackQuestion: true,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-1\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"      originalRecipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text here\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm2: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-2\u0027,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027recipient-identifier\u0027,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"      originalRecipientIdentifier: \u0027recipient-identifier\u0027,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  const testTextRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-3\u0027,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    } as FeedbackTextResponseDetails,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text here\u0027,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm3: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-4\u0027,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      answer: \u0027barry-harris-answer\u0027,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm4: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-5\u0027,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      answer: \u0027gene-harris-answer\u0027,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"  const testMsqRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-6\u0027,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      answers: [\u0027answer 1\u0027, \u0027answer 2\u0027],"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      isOther: false,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      otherFieldContent: \u0027other field content\u0027,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MSQ,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    } as FeedbackMsqResponseDetails,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"    commentByGiver: {"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"      originalComment: testComment,"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"      originalRecipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"      commentEditFormModel: {"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"        commentText: \u0027comment text\u0027,"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"      isEditing: false,"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"    },"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"  const testNumscaleRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-7\u0027,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"  const testConstsumRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-8\u0027,"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      answers: [7, 13],"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"  const testContribRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-9\u0027,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      answer: 20,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"  const testRubricRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-10\u0027,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      answer: [3, 4],"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"  const testRankOptionsRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-11\u0027,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      answers: [2, 1],"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    } as FeedbackRankOptionsResponseDetails,"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"  const testRankRecipientsRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-12\u0027,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      minOptionsToBeRanked: 1,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      maxOptionsToBeRanked: 2,"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      areDuplicatesAllowed: false,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"  const testResponse1: FeedbackResponse \u003d {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    feedbackResponseId: \u0027response-id-4\u0027,"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    giverIdentifier: \u0027giver-identifier\u0027,"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      answer: \u0027barry-harris-answer\u0027,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"  const testResponse2: FeedbackResponse \u003d {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    feedbackResponseId: \u0027response-id-5\u0027,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    giverIdentifier: \u0027giver-identifier\u0027,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      answer: \u0027gene-harris-answer\u0027,"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"  const testMcqQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-mcq\u0027,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    questionNumber: 1,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMcqRecipientSubmissionForm],"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.STUDENTS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"  const testMcqQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-mcq-2\u0027,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    questionNumber: 2,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.TEAMS,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [],"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    isLoaded: false,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"  const testTextQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-text\u0027,"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    questionNumber: 3,"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testTextRecipientSubmissionForm],"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"  const testMsqQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-msq\u0027,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    questionNumber: 4,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    questionBrief: \u0027MSQ question\u0027,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MSQ,"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      msqChoices: [\u0027first\u0027, \u0027second\u0027, \u0027third\u0027],"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      otherEnabled: false,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      hasAssignedWeights: true,"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      msqWeights: [1, 2, 3],"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      maxSelectableChoices: 2,"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      minSelectableChoices: 1,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    } as FeedbackMsqQuestionDetails,"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMsqRecipientSubmissionForm],"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"  const testNumscaleQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-numscale\u0027,"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    questionNumber: 5,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    questionBrief: \u0027numerical scale question\u0027,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      minScale: 1,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      maxScale: 10,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      step: 1,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testNumscaleRecipientSubmissionForm],"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"  const testConstsumQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-constsum\u0027,"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    questionNumber: 6,"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    questionBrief: \u0027constant sum question\u0027,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONSTSUM_RECIPIENTS,"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"      constSumOptions: [\u0027option 1\u0027, \u0027option 2\u0027],"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      distributeToRecipients: true,"},{"lineNumber":433,"author":{"gitId":"-"},"content":"      pointsPerOption: true,"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      forceUnevenDistribution: false,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      distributePointsFor: \u0027distribute points for\u0027,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"      points: 20,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumQuestionDetails,"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testConstsumRecipientSubmissionForm],"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":449,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"  const testContribQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-contrib\u0027,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    questionNumber: 7,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    questionBrief: \u0027contribution question\u0027,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      isNotSureAllowed: false,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    } as FeedbackContributionQuestionDetails,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testContribRecipientSubmissionForm],"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"  const testRubricQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rubric\u0027,"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    questionNumber: 8,"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"      hasAssignedWeights: false,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      rubricWeightsForEachCell: [[1, 2], [2, 1]],"},{"lineNumber":482,"author":{"gitId":"-"},"content":"      rubricChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027],"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      rubricSubQuestions: [\u0027subquestion 1\u0027, \u0027subquestion 2\u0027],"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      rubricDescriptions: [[\u0027description 1\u0027, \u0027description 2\u0027], [\u0027description 3\u0027, \u0027description 4\u0027]],"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    } as FeedbackRubricQuestionDetails,"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRubricRecipientSubmissionForm],"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":497,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"  const testRankOptionsQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rank-options\u0027,"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    questionNumber: 9,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RANK_OPTIONS,"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      options: [\u0027option 1\u0027, \u0027option 2\u0027],"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    } as FeedbackRankOptionsQuestionDetails,"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRankOptionsRecipientSubmissionForm],"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":514,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"  const testRankRecipientsQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rank-recipients\u0027,"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    questionNumber: 10,"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      minOptionsToBeRanked: 1,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      maxOptionsToBeRanked: 2,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      areDuplicatesAllowed: false,"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRankRecipientsRecipientSubmissionForm],"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":543,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"-"},"content":"  const testInfo: AuthInfo \u003d {"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    masquerade: false,"},{"lineNumber":547,"author":{"gitId":"-"},"content":"    user: {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      id: \u0027user-id\u0027,"},{"lineNumber":549,"author":{"gitId":"-"},"content":"      isAdmin: false,"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      isInstructor: false,"},{"lineNumber":551,"author":{"gitId":"-"},"content":"      isStudent: true,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      isMaintainer: false,"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":554,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":555,"author":{"gitId":"-"},"content":""},{"lineNumber":556,"author":{"gitId":"-"},"content":"  const testQueryParams: any \u003d {"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    courseid: \u0027CS3281\u0027,"},{"lineNumber":558,"author":{"gitId":"-"},"content":"    fsname: \u0027Feedback Session Name\u0027,"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    key: \u0027reg-key\u0027,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"  const getFeedbackSessionArgs: any \u003d {"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    courseId: testQueryParams.courseid,"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    feedbackSessionName: testQueryParams.fsname,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    intent: Intent.STUDENT_SUBMISSION,"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    key: testQueryParams.key,"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    moderatedPerson: \u0027\u0027,"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    previewAs: \u0027\u0027,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"  let component: SessionSubmissionPageComponent;"},{"lineNumber":572,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cSessionSubmissionPageComponent\u003e;"},{"lineNumber":573,"author":{"gitId":"-"},"content":"  let authService: AuthService;"},{"lineNumber":574,"author":{"gitId":"-"},"content":"  let navService: NavigationService;"},{"lineNumber":575,"author":{"gitId":"-"},"content":"  let studentService: StudentService;"},{"lineNumber":576,"author":{"gitId":"-"},"content":"  let instructorService: InstructorService;"},{"lineNumber":577,"author":{"gitId":"-"},"content":"  let feedbackSessionsService: FeedbackSessionsService;"},{"lineNumber":578,"author":{"gitId":"-"},"content":"  let feedbackResponsesService: FeedbackResponsesService;"},{"lineNumber":579,"author":{"gitId":"-"},"content":"  let feedbackResponseCommentService: FeedbackResponseCommentService;"},{"lineNumber":580,"author":{"gitId":"-"},"content":"  let feedbackQuestionsService: FeedbackQuestionsService;"},{"lineNumber":581,"author":{"gitId":"-"},"content":"  let simpleModalService: SimpleModalService;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"  let ngbModal: NgbModal;"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":586,"author":{"gitId":"-"},"content":"      declarations: [SessionSubmissionPageComponent, SavingCompleteModalComponent],"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":588,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        NgxPageScrollCoreModule,"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        QuestionSubmissionFormModule,"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":599,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"          provide: ActivatedRoute,"},{"lineNumber":601,"author":{"gitId":"-"},"content":"          useValue: {"},{"lineNumber":602,"author":{"gitId":"-"},"content":"            data: {"},{"lineNumber":603,"author":{"gitId":"-"},"content":"              intent: Intent.STUDENT_SUBMISSION,"},{"lineNumber":604,"author":{"gitId":"-"},"content":"              pipe: () \u003d\u003e {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"                return {"},{"lineNumber":606,"author":{"gitId":"-"},"content":"                  subscribe: (fn: (value: any) \u003d\u003e void) \u003d\u003e fn(testQueryParams),"},{"lineNumber":607,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":608,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":609,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":610,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":615,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(SessionSubmissionPageComponent);"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    instructorService \u003d TestBed.inject(InstructorService);"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    feedbackQuestionsService \u003d TestBed.inject(FeedbackQuestionsService);"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    feedbackResponsesService \u003d TestBed.inject(FeedbackResponsesService);"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    feedbackResponseCommentService \u003d TestBed.inject(FeedbackResponseCommentService);"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    feedbackSessionsService \u003d TestBed.inject(FeedbackSessionsService);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    simpleModalService \u003d TestBed.inject(SimpleModalService);"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    ngbModal \u003d TestBed.inject(NgbModal);"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":631,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":632,"author":{"gitId":"-"},"content":""},{"lineNumber":633,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":634,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":635,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":639,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"  it(\u0027should snap when feedback session questions have failed to load\u0027, () \u003d\u003e {"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    component.retryAttempts \u003d 0;"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    component.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":646,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":647,"author":{"gitId":"-"},"content":""},{"lineNumber":648,"author":{"gitId":"-"},"content":"  it(\u0027should snap when saving responses\u0027, () \u003d\u003e {"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    component.isSavingResponses \u003d true;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":652,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":653,"author":{"gitId":"-"},"content":""},{"lineNumber":654,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027alice\u0027;"},{"lineNumber":657,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":660,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":661,"author":{"gitId":"-"},"content":""},{"lineNumber":662,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is not logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":663,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027\u0027;"},{"lineNumber":665,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":668,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":669,"author":{"gitId":"-"},"content":""},{"lineNumber":670,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session and user details\u0027, () \u003d\u003e {"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    component.courseId \u003d \u0027test.exa-demo\u0027;"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    component.feedbackSessionName \u003d \u0027First team feedback session\u0027;"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027logged-in-user\u0027;"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027person name\u0027;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"    component.personEmail \u003d \u0027person@email.com\u0027;"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    component.formattedSessionOpeningTime \u003d \u0027Sun, 01 Apr, 2012, 11:59 PM +08\u0027;"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    component.formattedSessionClosingTime \u003d \u0027Mon, 02 Apr, 2012, 11:59 PM +08\u0027;"},{"lineNumber":679,"author":{"gitId":"-"},"content":"    component.feedbackSessionInstructions \u003d \u0027Please give your feedback based on the following questions.\u0027;"},{"lineNumber":680,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":682,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":683,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":684,"author":{"gitId":"-"},"content":""},{"lineNumber":685,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session question submission forms\u0027, () \u003d\u003e {"},{"lineNumber":686,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d ["},{"lineNumber":687,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm,"},{"lineNumber":688,"author":{"gitId":"-"},"content":"      testTextQuestionSubmissionForm,"},{"lineNumber":689,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm2,"},{"lineNumber":690,"author":{"gitId":"-"},"content":"      testMsqQuestionSubmissionForm,"},{"lineNumber":691,"author":{"gitId":"-"},"content":"      testNumscaleQuestionSubmissionForm,"},{"lineNumber":692,"author":{"gitId":"-"},"content":"      testConstsumQuestionSubmissionForm,"},{"lineNumber":693,"author":{"gitId":"-"},"content":"      testContribQuestionSubmissionForm,"},{"lineNumber":694,"author":{"gitId":"-"},"content":"      testRubricQuestionSubmissionForm,"},{"lineNumber":695,"author":{"gitId":"-"},"content":"      testRankOptionsQuestionSubmissionForm,"},{"lineNumber":696,"author":{"gitId":"-"},"content":"      testRankRecipientsQuestionSubmissionForm,"},{"lineNumber":697,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":698,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":700,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":701,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":702,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":703,"author":{"gitId":"-"},"content":""},{"lineNumber":704,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session question submission forms when disabled\u0027, () \u003d\u003e {"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d ["},{"lineNumber":706,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm,"},{"lineNumber":707,"author":{"gitId":"-"},"content":"      testTextQuestionSubmissionForm,"},{"lineNumber":708,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm2,"},{"lineNumber":709,"author":{"gitId":"-"},"content":"      testMsqQuestionSubmissionForm,"},{"lineNumber":710,"author":{"gitId":"-"},"content":"      testNumscaleQuestionSubmissionForm,"},{"lineNumber":711,"author":{"gitId":"-"},"content":"      testConstsumQuestionSubmissionForm,"},{"lineNumber":712,"author":{"gitId":"-"},"content":"      testContribQuestionSubmissionForm,"},{"lineNumber":713,"author":{"gitId":"-"},"content":"      testRubricQuestionSubmissionForm,"},{"lineNumber":714,"author":{"gitId":"-"},"content":"      testRankOptionsQuestionSubmissionForm,"},{"lineNumber":715,"author":{"gitId":"-"},"content":"      testRankRecipientsQuestionSubmissionForm,"},{"lineNumber":716,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    component.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":718,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":721,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":722,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":723,"author":{"gitId":"-"},"content":""},{"lineNumber":724,"author":{"gitId":"-"},"content":"  it(\u0027should fetch auth info on init\u0027, () \u003d\u003e {"},{"lineNumber":725,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":726,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":727,"author":{"gitId":"-"},"content":"    expect(component.intent).toEqual(Intent.STUDENT_SUBMISSION);"},{"lineNumber":728,"author":{"gitId":"-"},"content":"    expect(component.courseId).toEqual(testQueryParams.courseid);"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionName).toEqual(testQueryParams.fsname);"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    expect(component.regKey).toEqual(testQueryParams.key);"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    expect(component.loggedInUser).toEqual(testInfo.user?.id);"},{"lineNumber":732,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"  it(\u0027should verify allowed access with used reg key\u0027, () \u003d\u003e {"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":736,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":737,"author":{"gitId":"-"},"content":"      isUsed: true,"},{"lineNumber":738,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":739,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":741,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURLWithParamEncoding\u0027).mockImplementation();"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":747,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/sessions/submission\u0027,"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        { courseid: \u0027CS3281\u0027, fsname: \u0027Feedback Session Name\u0027 });"},{"lineNumber":749,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":750,"author":{"gitId":"-"},"content":""},{"lineNumber":751,"author":{"gitId":"-"},"content":"  it(\u0027should deny unallowed access with valid reg key for logged in user\u0027, () \u003d\u003e {"},{"lineNumber":752,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":753,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":754,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":755,"author":{"gitId":"-"},"content":"      isValid: true,"},{"lineNumber":756,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":758,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":759,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":760,"author":{"gitId":"-"},"content":""},{"lineNumber":761,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":762,"author":{"gitId":"-"},"content":""},{"lineNumber":763,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":764,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":765,"author":{"gitId":"-"},"content":"        `You are trying to access TEAMMATES using the Google account user-id, which"},{"lineNumber":766,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":767,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":768,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":769,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":770,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":771,"author":{"gitId":"-"},"content":""},{"lineNumber":772,"author":{"gitId":"-"},"content":"  it(\u0027should deny unallowed access with invalid reg key\u0027, () \u003d\u003e {"},{"lineNumber":773,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":774,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":775,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":776,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":777,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":778,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":779,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":780,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":783,"author":{"gitId":"-"},"content":""},{"lineNumber":784,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":785,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":787,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"-"},"content":"  it(\u0027should load a student name\u0027, () \u003d\u003e {"},{"lineNumber":790,"author":{"gitId":"-"},"content":"    component.intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":791,"author":{"gitId":"-"},"content":"    jest.spyOn(studentService, \u0027getStudent\u0027).mockReturnValue(of(testStudent));"},{"lineNumber":792,"author":{"gitId":"-"},"content":"    component.loadPersonName();"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(testStudent.name);"},{"lineNumber":794,"author":{"gitId":"-"},"content":"    expect(component.personEmail).toEqual(testStudent.email);"},{"lineNumber":795,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":796,"author":{"gitId":"-"},"content":""},{"lineNumber":797,"author":{"gitId":"-"},"content":"  it(\u0027should load an instructor name\u0027, () \u003d\u003e {"},{"lineNumber":798,"author":{"gitId":"-"},"content":"    component.intent \u003d Intent.INSTRUCTOR_SUBMISSION;"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    jest.spyOn(instructorService, \u0027getInstructor\u0027).mockReturnValue(of(testInstructor));"},{"lineNumber":800,"author":{"gitId":"-"},"content":"    component.loadPersonName();"},{"lineNumber":801,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(testInstructor.name);"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    expect(component.personEmail).toEqual(testInstructor.email);"},{"lineNumber":803,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":804,"author":{"gitId":"-"},"content":""},{"lineNumber":805,"author":{"gitId":"-"},"content":"  it(\u0027should join course for unregistered student\u0027, () \u003d\u003e {"},{"lineNumber":806,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    component.joinCourseForUnregisteredEntity();"},{"lineNumber":808,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":809,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/join\u0027,"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        { entitytype: \u0027student\u0027, key: testQueryParams.key });"},{"lineNumber":811,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"  it(\u0027should load an open feedback session\u0027, () \u003d\u003e {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testOpenFeedbackSession));"},{"lineNumber":816,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":817,"author":{"gitId":"-"},"content":""},{"lineNumber":818,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":819,"author":{"gitId":"-"},"content":""},{"lineNumber":820,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":821,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Will Be Closing Soon!\u0027,"},{"lineNumber":824,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, \u0027Warning: you have less than 15 minutes before the submission deadline expires!\u0027);"},{"lineNumber":825,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testOpenFeedbackSession.instructions);"},{"lineNumber":826,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testOpenFeedbackSession.submissionStatus);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testOpenFeedbackSession.timeZone);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(false);"},{"lineNumber":829,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":830,"author":{"gitId":"-"},"content":""},{"lineNumber":831,"author":{"gitId":"-"},"content":"  it(\u0027should load a closed feedback session\u0027, () \u003d\u003e {"},{"lineNumber":832,"author":{"gitId":"-"},"content":"    const testClosedFeedbackSession: FeedbackSession \u003d deepCopy(testOpenFeedbackSession);"},{"lineNumber":833,"author":{"gitId":"-"},"content":"    testClosedFeedbackSession.submissionStatus \u003d FeedbackSessionSubmissionStatus.CLOSED;"},{"lineNumber":834,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testClosedFeedbackSession));"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":837,"author":{"gitId":"-"},"content":""},{"lineNumber":838,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":839,"author":{"gitId":"-"},"content":""},{"lineNumber":840,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":841,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":842,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Closed\u0027, SimpleModalType.WARNING, expect.anything());"},{"lineNumber":844,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testClosedFeedbackSession.instructions);"},{"lineNumber":845,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testClosedFeedbackSession.submissionStatus);"},{"lineNumber":846,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testClosedFeedbackSession.timeZone);"},{"lineNumber":847,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(true);"},{"lineNumber":848,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":849,"author":{"gitId":"-"},"content":""},{"lineNumber":850,"author":{"gitId":"-"},"content":"  it(\u0027should load a visible not open feedback session\u0027, () \u003d\u003e {"},{"lineNumber":851,"author":{"gitId":"-"},"content":"    const testVisibleNotOpenFeedbackSession: FeedbackSession \u003d deepCopy(testOpenFeedbackSession);"},{"lineNumber":852,"author":{"gitId":"-"},"content":"    testVisibleNotOpenFeedbackSession.submissionStatus \u003d FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN;"},{"lineNumber":853,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":854,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testVisibleNotOpenFeedbackSession));"},{"lineNumber":855,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":856,"author":{"gitId":"-"},"content":""},{"lineNumber":857,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":860,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":861,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":862,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Not Open\u0027, SimpleModalType.WARNING, expect.anything());"},{"lineNumber":863,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testVisibleNotOpenFeedbackSession.instructions);"},{"lineNumber":864,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testVisibleNotOpenFeedbackSession.submissionStatus);"},{"lineNumber":865,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testVisibleNotOpenFeedbackSession.timeZone);"},{"lineNumber":866,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(true);"},{"lineNumber":867,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":868,"author":{"gitId":"-"},"content":""},{"lineNumber":869,"author":{"gitId":"-"},"content":"  it(\u0027should redirect when loading non-existent feedback session\u0027, () \u003d\u003e {"},{"lineNumber":870,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027).mockReturnValue(throwError({"},{"lineNumber":871,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is an error\u0027 },"},{"lineNumber":872,"author":{"gitId":"-"},"content":"      status: 404,"},{"lineNumber":873,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":874,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":875,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":876,"author":{"gitId":"-"},"content":""},{"lineNumber":877,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":878,"author":{"gitId":"-"},"content":""},{"lineNumber":879,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":880,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Does Not Exist!\u0027, SimpleModalType.DANGER,"},{"lineNumber":881,"author":{"gitId":"-"},"content":"        \u0027The session does not exist (most likely deleted by the instructor after the submission link was sent).\u0027);"},{"lineNumber":882,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":883,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/home\u0027);"},{"lineNumber":884,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":885,"author":{"gitId":"-"},"content":""},{"lineNumber":886,"author":{"gitId":"-"},"content":"  it(\u0027should redirect when loading non-viewable feedback session\u0027, () \u003d\u003e {"},{"lineNumber":887,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027).mockReturnValue(throwError({"},{"lineNumber":888,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is an error\u0027 },"},{"lineNumber":889,"author":{"gitId":"-"},"content":"      status: 403,"},{"lineNumber":890,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":891,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":892,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":893,"author":{"gitId":"-"},"content":""},{"lineNumber":894,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":895,"author":{"gitId":"-"},"content":""},{"lineNumber":896,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":897,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Not Authorised To Access!\u0027, SimpleModalType.DANGER, \u0027This is an error\u0027);"},{"lineNumber":898,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":899,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/home\u0027);"},{"lineNumber":900,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":901,"author":{"gitId":"-"},"content":""},{"lineNumber":902,"author":{"gitId":"-"},"content":"  it(\u0027should load feedback questions\u0027, () \u003d\u003e {"},{"lineNumber":903,"author":{"gitId":"-"},"content":"    const testFeedbackQuestions: FeedbackQuestions \u003d {"},{"lineNumber":904,"author":{"gitId":"-"},"content":"      questions: ["},{"lineNumber":905,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":906,"author":{"gitId":"-"},"content":"          feedbackQuestionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":907,"author":{"gitId":"-"},"content":"          questionNumber: testMcqQuestionSubmissionForm2.questionNumber,"},{"lineNumber":908,"author":{"gitId":"-"},"content":"          questionBrief: testMcqQuestionSubmissionForm2.questionBrief,"},{"lineNumber":909,"author":{"gitId":"-"},"content":"          questionDescription: testMcqQuestionSubmissionForm2.questionDescription,"},{"lineNumber":910,"author":{"gitId":"-"},"content":"          questionDetails: testMcqQuestionSubmissionForm2.questionDetails,"},{"lineNumber":911,"author":{"gitId":"-"},"content":"          questionType: testMcqQuestionSubmissionForm2.questionType,"},{"lineNumber":912,"author":{"gitId":"-"},"content":"          giverType: testMcqQuestionSubmissionForm2.giverType,"},{"lineNumber":913,"author":{"gitId":"-"},"content":"          recipientType: testMcqQuestionSubmissionForm2.recipientType,"},{"lineNumber":914,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting:"},{"lineNumber":915,"author":{"gitId":"-"},"content":"            testMcqQuestionSubmissionForm2.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":916,"author":{"gitId":"-"},"content":"          customNumberOfEntitiesToGiveFeedbackTo: testMcqQuestionSubmissionForm2.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":917,"author":{"gitId":"-"},"content":"          showResponsesTo: testMcqQuestionSubmissionForm2.showResponsesTo,"},{"lineNumber":918,"author":{"gitId":"-"},"content":"          showGiverNameTo: testMcqQuestionSubmissionForm2.showGiverNameTo,"},{"lineNumber":919,"author":{"gitId":"-"},"content":"          showRecipientNameTo: testMcqQuestionSubmissionForm2.showRecipientNameTo,"},{"lineNumber":920,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":921,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":923,"author":{"gitId":"-"},"content":""},{"lineNumber":924,"author":{"gitId":"-"},"content":"    const getQuestionsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027getFeedbackQuestions\u0027)"},{"lineNumber":925,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testFeedbackQuestions));"},{"lineNumber":926,"author":{"gitId":"-"},"content":""},{"lineNumber":927,"author":{"gitId":"-"},"content":"    component.loadFeedbackQuestions();"},{"lineNumber":928,"author":{"gitId":"-"},"content":""},{"lineNumber":929,"author":{"gitId":"-"},"content":"    expect(getQuestionsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":930,"author":{"gitId":"-"},"content":"    expect(component.questionSubmissionForms.length).toEqual(1);"},{"lineNumber":931,"author":{"gitId":"-"},"content":"    expect(component.questionSubmissionForms[0]).toEqual(testMcqQuestionSubmissionForm2);"},{"lineNumber":932,"author":{"gitId":"-"},"content":"    expect(component.questionsNeedingSubmission.length).toEqual(0);"},{"lineNumber":933,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":934,"author":{"gitId":"-"},"content":""},{"lineNumber":935,"author":{"gitId":"-"},"content":"  it(\u0027should load the recipients and responses of a question if not yet loaded\u0027, () \u003d\u003e {"},{"lineNumber":936,"author":{"gitId":"-"},"content":"    const testFeedbackQuestionRecipients: FeedbackQuestionRecipients \u003d {"},{"lineNumber":937,"author":{"gitId":"-"},"content":"      recipients: ["},{"lineNumber":938,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":939,"author":{"gitId":"-"},"content":"          name: \u0027Barry Harris\u0027,"},{"lineNumber":940,"author":{"gitId":"-"},"content":"          identifier: \u0027barry-harris-id\u0027,"},{"lineNumber":941,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":942,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":943,"author":{"gitId":"-"},"content":"          name: \u0027Gene Harris\u0027,"},{"lineNumber":944,"author":{"gitId":"-"},"content":"          identifier: \u0027gene-harris-id\u0027,"},{"lineNumber":945,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":946,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":947,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":948,"author":{"gitId":"-"},"content":"    const testExistingResponses: FeedbackResponses \u003d {"},{"lineNumber":949,"author":{"gitId":"-"},"content":"      responses: [testResponse1, testResponse2],"},{"lineNumber":950,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":951,"author":{"gitId":"-"},"content":""},{"lineNumber":952,"author":{"gitId":"-"},"content":"    const loadRecipientsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027loadFeedbackQuestionRecipients\u0027)"},{"lineNumber":953,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testFeedbackQuestionRecipients));"},{"lineNumber":954,"author":{"gitId":"-"},"content":"    const getResponseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027getFeedbackResponse\u0027)"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testExistingResponses));"},{"lineNumber":956,"author":{"gitId":"-"},"content":""},{"lineNumber":957,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testMcqQuestionSubmissionForm2];"},{"lineNumber":958,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({ visible: true }, testMcqQuestionSubmissionForm2);"},{"lineNumber":959,"author":{"gitId":"-"},"content":""},{"lineNumber":960,"author":{"gitId":"-"},"content":"    expect(loadRecipientsSpy).toHaveBeenLastCalledWith({"},{"lineNumber":961,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":962,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":963,"author":{"gitId":"-"},"content":"      moderatedPerson: \u0027\u0027,"},{"lineNumber":964,"author":{"gitId":"-"},"content":"      previewAs: \u0027\u0027,"},{"lineNumber":965,"author":{"gitId":"-"},"content":"      questionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":966,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":967,"author":{"gitId":"-"},"content":"    expect(getResponseSpy).toHaveBeenLastCalledWith({"},{"lineNumber":968,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":969,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":970,"author":{"gitId":"-"},"content":"      moderatedPerson: \u0027\u0027,"},{"lineNumber":971,"author":{"gitId":"-"},"content":"      questionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":972,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":973,"author":{"gitId":"-"},"content":"    expect(testMcqQuestionSubmissionForm2.isLoading).toBe(false);"},{"lineNumber":974,"author":{"gitId":"-"},"content":"    expect(testMcqQuestionSubmissionForm2.isLoaded).toBe(true);"},{"lineNumber":975,"author":{"gitId":"-"},"content":"    expect(testMcqQuestionSubmissionForm2.recipientList).toEqual(["},{"lineNumber":976,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":977,"author":{"gitId":"-"},"content":"        recipientName: \u0027Barry Harris\u0027,"},{"lineNumber":978,"author":{"gitId":"-"},"content":"        recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":979,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":980,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":981,"author":{"gitId":"-"},"content":"        recipientName: \u0027Gene Harris\u0027,"},{"lineNumber":982,"author":{"gitId":"-"},"content":"        recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":983,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":984,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":985,"author":{"gitId":"-"},"content":"    expect(testMcqQuestionSubmissionForm2.recipientSubmissionForms).toEqual(["},{"lineNumber":986,"author":{"gitId":"-"},"content":"      testMcqRecipientSubmissionForm3, testMcqRecipientSubmissionForm4,"},{"lineNumber":987,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":988,"author":{"gitId":"-"},"content":"    expect(component.questionsNeedingSubmission.length).toEqual(1);"},{"lineNumber":989,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":990,"author":{"gitId":"-"},"content":""},{"lineNumber":991,"author":{"gitId":"-"},"content":"  it(\u0027should not load the recipients and responses of a question if already loaded\u0027, () \u003d\u003e {"},{"lineNumber":992,"author":{"gitId":"-"},"content":"    const loadRecipientsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027loadFeedbackQuestionRecipients\u0027);"},{"lineNumber":993,"author":{"gitId":"-"},"content":"    const getResponseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027getFeedbackResponse\u0027);"},{"lineNumber":994,"author":{"gitId":"-"},"content":""},{"lineNumber":995,"author":{"gitId":"-"},"content":"    testMcqQuestionSubmissionForm2.isLoaded \u003d true;"},{"lineNumber":996,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({ visible: true }, testMcqQuestionSubmissionForm2);"},{"lineNumber":997,"author":{"gitId":"-"},"content":""},{"lineNumber":998,"author":{"gitId":"-"},"content":"    testMsqQuestionSubmissionForm.isLoading \u003d true;"},{"lineNumber":999,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({ visible: true }, testMsqQuestionSubmissionForm);"},{"lineNumber":1000,"author":{"gitId":"-"},"content":""},{"lineNumber":1001,"author":{"gitId":"-"},"content":"    expect(loadRecipientsSpy).not.toHaveBeenCalled();"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"    expect(getResponseSpy).not.toHaveBeenCalled();"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1004,"author":{"gitId":"-"},"content":""},{"lineNumber":1005,"author":{"gitId":"-"},"content":"  it(\u0027should not load the recipients and responses of a question if the event is not correct\u0027, () \u003d\u003e {"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"    const loadRecipientsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027loadFeedbackQuestionRecipients\u0027);"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"    const getResponseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027getFeedbackResponse\u0027);"},{"lineNumber":1008,"author":{"gitId":"-"},"content":""},{"lineNumber":1009,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses(null, testMcqQuestionSubmissionForm2);"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({}, testMcqQuestionSubmissionForm2);"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({ visible: false }, testMsqQuestionSubmissionForm);"},{"lineNumber":1012,"author":{"gitId":"-"},"content":""},{"lineNumber":1013,"author":{"gitId":"-"},"content":"    expect(loadRecipientsSpy).not.toHaveBeenCalled();"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"    expect(getResponseSpy).not.toHaveBeenCalled();"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1016,"author":{"gitId":"-"},"content":""},{"lineNumber":1017,"author":{"gitId":"-"},"content":"  it(\u0027should check that there are no responses to submit\u0027, () \u003d\u003e {"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"    const testSubmissionForm: QuestionSubmissionFormModel \u003d deepCopy(testTextQuestionSubmissionForm);"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"    testSubmissionForm.recipientSubmissionForms \u003d [];"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testSubmissionForm];"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"    expect(component.questionsNeedingSubmission.length).toEqual(0);"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1023,"author":{"gitId":"-"},"content":""},{"lineNumber":1024,"author":{"gitId":"-"},"content":"  it(\u0027should save feedback responses\u0027, () \u003d\u003e {"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"    const mockModalRef: any \u003d { componentInstance: {} };"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"    const testResponseDetails1: any \u003d deepCopy(testMcqRecipientSubmissionForm.responseDetails);"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"    // leave question unanswered"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"    const testResponseDetails2: FeedbackTextResponseDetails \u003d { answer: \u0027\u0027, questionType: FeedbackQuestionType.TEXT };"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"    const testQuestionSubmissionForm1: QuestionSubmissionFormModel \u003d deepCopy(testMcqQuestionSubmissionForm);"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"    const testQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d deepCopy(testTextQuestionSubmissionForm);"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"    testQuestionSubmissionForm1.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails1;"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails2;"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testQuestionSubmissionForm1, testQuestionSubmissionForm2];"},{"lineNumber":1034,"author":{"gitId":"-"},"content":""},{"lineNumber":1035,"author":{"gitId":"-"},"content":"    const responseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027submitFeedbackResponses\u0027)"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"        .mockImplementation((id: string) \u003d\u003e {"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"          if (id \u003d\u003d\u003d testQuestionSubmissionForm1.feedbackQuestionId) {"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"            return of({ responses: [testResponse1], requestId: \u002710\u0027 });"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"          return of({ responses: [testResponse2], requestId: \u002720\u0027 });"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027updateComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockReturnValue(mockModalRef);"},{"lineNumber":1045,"author":{"gitId":"-"},"content":""},{"lineNumber":1046,"author":{"gitId":"-"},"content":"    component.saveFeedbackResponses(component.questionSubmissionForms);"},{"lineNumber":1047,"author":{"gitId":"-"},"content":""},{"lineNumber":1048,"author":{"gitId":"-"},"content":"    expect(responseSpy).toBeCalledTimes(2);"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"    expect(responseSpy).toHaveBeenNthCalledWith(1, \u0027feedback-question-id-mcq\u0027, {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"      responses: [{"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"        recipient: testMcqRecipientSubmissionForm.recipientIdentifier,"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"        responseDetails: testResponseDetails1,"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"      }],"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"    }, {"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"      moderatedperson: \u0027\u0027,"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"    expect(responseSpy).toHaveBeenLastCalledWith(\u0027feedback-question-id-text\u0027, {"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"      responses: [], // do not call for empty response details"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"    }, {"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"      moderatedperson: \u0027\u0027,"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1066,"author":{"gitId":"-"},"content":""},{"lineNumber":1067,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.requestIds).toEqual({"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-mcq\u0027: \u002710\u0027,"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-text\u0027: \u002720\u0027,"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.questions).toEqual(["},{"lineNumber":1072,"author":{"gitId":"-"},"content":"      testQuestionSubmissionForm1,"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"      testQuestionSubmissionForm2,"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.answers).toEqual({"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-mcq\u0027: [testResponse1],"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-text\u0027: [testResponse2],"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.notYetAnsweredQuestions).toHaveLength(1);"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.failToSaveQuestions).toEqual({});"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1082,"author":{"gitId":"-"},"content":""},{"lineNumber":1083,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should not save invalid feedback responses\u0027, () \u003d\u003e {"},{"lineNumber":1084,"author":{"gitId":"zhaojj2209"},"content":"    const mockModalRef: any \u003d { componentInstance: {} };"},{"lineNumber":1085,"author":{"gitId":"zhaojj2209"},"content":"    const testResponseDetails1: any \u003d deepCopy(testMcqRecipientSubmissionForm.responseDetails);"},{"lineNumber":1086,"author":{"gitId":"zhaojj2209"},"content":"    const testResponseDetails2: any \u003d deepCopy(testConstsumRecipientSubmissionForm.responseDetails);"},{"lineNumber":1087,"author":{"gitId":"zhaojj2209"},"content":"    const testQuestionSubmissionForm1: QuestionSubmissionFormModel \u003d deepCopy(testMcqQuestionSubmissionForm);"},{"lineNumber":1088,"author":{"gitId":"zhaojj2209"},"content":"    const testQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d deepCopy(testConstsumQuestionSubmissionForm);"},{"lineNumber":1089,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm1.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails1;"},{"lineNumber":1090,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails2;"},{"lineNumber":1091,"author":{"gitId":"zhaojj2209"},"content":"    // invalid response"},{"lineNumber":1092,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].isValid \u003d false;"},{"lineNumber":1093,"author":{"gitId":"zhaojj2209"},"content":"    component.questionSubmissionForms \u003d [testQuestionSubmissionForm1, testQuestionSubmissionForm2];"},{"lineNumber":1094,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1095,"author":{"gitId":"-"},"content":"    const responseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027submitFeedbackResponses\u0027)"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"        .mockImplementation(() \u003d\u003e {"},{"lineNumber":1097,"author":{"gitId":"zhaojj2209"},"content":"          return of({ responses: [testResponse1], requestId: \u002710\u0027 });"},{"lineNumber":1098,"author":{"gitId":"zhaojj2209"},"content":"        });"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027updateComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockReturnValue(mockModalRef);"},{"lineNumber":1102,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1103,"author":{"gitId":"-"},"content":"    component.saveFeedbackResponses(component.questionSubmissionForms);"},{"lineNumber":1104,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1105,"author":{"gitId":"zhaojj2209"},"content":"    expect(responseSpy).toBeCalledTimes(1);"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"    expect(responseSpy).toHaveBeenNthCalledWith(1, testQuestionSubmissionForm1.feedbackQuestionId, {"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"      responses: [{"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"        recipient: testMcqRecipientSubmissionForm.recipientIdentifier,"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"        responseDetails: testResponseDetails1,"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"      }],"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"    }, {"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"      moderatedperson: \u0027\u0027,"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1116,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1117,"author":{"gitId":"zhaojj2209"},"content":"    // only the valid response is saved"},{"lineNumber":1118,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.requestIds).toEqual({"},{"lineNumber":1119,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm1.feedbackQuestionId]: \u002710\u0027,"},{"lineNumber":1120,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1121,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.questions).toEqual(["},{"lineNumber":1122,"author":{"gitId":"zhaojj2209"},"content":"      testQuestionSubmissionForm1,"},{"lineNumber":1123,"author":{"gitId":"zhaojj2209"},"content":"      testQuestionSubmissionForm2,"},{"lineNumber":1124,"author":{"gitId":"zhaojj2209"},"content":"    ]);"},{"lineNumber":1125,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.answers).toEqual({"},{"lineNumber":1126,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm1.feedbackQuestionId]: [testResponse1],"},{"lineNumber":1127,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1128,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.failToSaveQuestions).toEqual({"},{"lineNumber":1129,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm2.questionNumber]: \u0027Invalid responses provided. Please check question constraints.\u0027,"},{"lineNumber":1130,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1131,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":1132,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1133,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to create new comment when submission form has no original comment\u0027, () \u003d\u003e {"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testTextRecipientSubmissionForm);"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027)"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testComment));"},{"lineNumber":1137,"author":{"gitId":"-"},"content":""},{"lineNumber":1138,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1139,"author":{"gitId":"samuelfangjw"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual("},{"lineNumber":1140,"author":{"gitId":"samuelfangjw"},"content":"          component.getCommentModel(testComment, testSubmissionForm.recipientIdentifier));"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1142,"author":{"gitId":"-"},"content":""},{"lineNumber":1143,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith({"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"    }, testTextRecipientSubmissionForm.responseId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1151,"author":{"gitId":"-"},"content":""},{"lineNumber":1152,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should create comment request to create new comment when submission form has original comment\u0027"},{"lineNumber":1153,"author":{"gitId":"samuelfangjw"},"content":"      + \u0027with different original recipient\u0027, () \u003d\u003e {"},{"lineNumber":1154,"author":{"gitId":"samuelfangjw"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm);"},{"lineNumber":1155,"author":{"gitId":"samuelfangjw"},"content":"    testSubmissionForm.commentByGiver!.originalRecipientIdentifier \u003d \u0027other-recipient-identifier\u0027;"},{"lineNumber":1156,"author":{"gitId":"samuelfangjw"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027)"},{"lineNumber":1157,"author":{"gitId":"samuelfangjw"},"content":"        .mockReturnValue(of(testComment));"},{"lineNumber":1158,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1159,"author":{"gitId":"samuelfangjw"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1160,"author":{"gitId":"samuelfangjw"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual("},{"lineNumber":1161,"author":{"gitId":"samuelfangjw"},"content":"          component.getCommentModel(testComment, testSubmissionForm.recipientIdentifier));"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1163,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1164,"author":{"gitId":"samuelfangjw"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1165,"author":{"gitId":"samuelfangjw"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith({"},{"lineNumber":1166,"author":{"gitId":"samuelfangjw"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1167,"author":{"gitId":"samuelfangjw"},"content":"      showCommentTo: [],"},{"lineNumber":1168,"author":{"gitId":"samuelfangjw"},"content":"      showGiverNameTo: [],"},{"lineNumber":1169,"author":{"gitId":"samuelfangjw"},"content":"    }, testMcqRecipientSubmissionForm.responseId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1170,"author":{"gitId":"samuelfangjw"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1172,"author":{"gitId":"-"},"content":""},{"lineNumber":1173,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to update existing comment when submission form has original comment\u0027, () \u003d\u003e {"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm);"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMcqRecipientSubmissionForm.commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027updateComment\u0027)"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testComment));"},{"lineNumber":1178,"author":{"gitId":"-"},"content":""},{"lineNumber":1179,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1180,"author":{"gitId":"samuelfangjw"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual("},{"lineNumber":1181,"author":{"gitId":"samuelfangjw"},"content":"          component.getCommentModel(testComment, testSubmissionForm.recipientIdentifier));"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1183,"author":{"gitId":"-"},"content":""},{"lineNumber":1184,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith({"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"    }, expectedId, Intent.STUDENT_SUBMISSION, { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1191,"author":{"gitId":"-"},"content":""},{"lineNumber":1192,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to delete existing comment when new comment text is empty\u0027, () \u003d\u003e {"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm2);"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMcqRecipientSubmissionForm2.commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027deleteComment\u0027)"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"        .mockReturnValue(of({}));"},{"lineNumber":1197,"author":{"gitId":"-"},"content":""},{"lineNumber":1198,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual(undefined);"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1201,"author":{"gitId":"-"},"content":""},{"lineNumber":1202,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith(expectedId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1206,"author":{"gitId":"-"},"content":""},{"lineNumber":1207,"author":{"gitId":"-"},"content":"  it(\u0027should delete participant comment\u0027, () \u003d\u003e {"},{"lineNumber":1208,"author":{"gitId":"samuelfangjw"},"content":"    const testSubmissionForm: QuestionSubmissionFormModel \u003d deepCopy(testMsqQuestionSubmissionForm);"},{"lineNumber":1209,"author":{"gitId":"samuelfangjw"},"content":"    const expectedId: any \u003d testMsqQuestionSubmissionForm.recipientSubmissionForms[0]"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"        .commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027deleteComment\u0027)"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(true));"},{"lineNumber":1213,"author":{"gitId":"-"},"content":""},{"lineNumber":1214,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testSubmissionForm];"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"    component.deleteParticipantComment(0, 0);"},{"lineNumber":1216,"author":{"gitId":"-"},"content":""},{"lineNumber":1217,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith(expectedId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":34,"-":1150,"samuelfangjw":37}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DOCUMENT } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PageScrollService } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackResponsesResponse, FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipient,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSessionLogType,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { FeedbackResponseRequest, Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import { DEFAULT_NUMBER_OF_RETRY_ATTEMPTS } from \u0027../../../types/default-retry-attempts\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../../components/comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027../../components/error-report/error-report.component\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"interface FeedbackQuestionsResponse {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  questions: FeedbackQuestion[];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":57,"author":{"gitId":"-"},"content":" * Feedback session submission page."},{"lineNumber":58,"author":{"gitId":"-"},"content":" */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-submission-page\u0027,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-submission-page.component.html\u0027,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-submission-page.component.scss\u0027],"},{"lineNumber":63,"author":{"gitId":"-"},"content":"})"},{"lineNumber":64,"author":{"gitId":"-"},"content":"export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  Intent: typeof Intent \u003d Intent;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  regKey: string \u003d \u0027\u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  entityType: string \u003d \u0027student\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  loggedInUser: string \u003d \u0027\u0027;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  moderatedPerson: string \u003d \u0027\u0027;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  previewAsPerson: string \u003d \u0027\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  // the name of the person involved"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  // (e.g. the student name for unregistered student, the name of instructor being moderated)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  personName: string \u003d \u0027\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  personEmail: string \u003d \u0027\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  feedbackSessionInstructions: string \u003d \u0027\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  feedbackSessionTimezone: string \u003d \u0027\u0027;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  feedbackSessionSubmissionStatus: FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus.OPEN;"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  intent: Intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  questionSubmissionForms: QuestionSubmissionFormModel[] \u003d [];"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  isSavingResponses: boolean \u003d false;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  isSubmissionFormsDisabled: boolean \u003d false;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  isModerationHintExpanded: boolean \u003d false;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  moderatedQuestionId: string \u003d \u0027\u0027;"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  isFeedbackSessionLoading: boolean \u003d true;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  isFeedbackSessionQuestionsLoading: boolean \u003d true;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  hasFeedbackSessionQuestionsLoadingFailed: boolean \u003d false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  retryAttempts: number \u003d DEFAULT_NUMBER_OF_RETRY_ATTEMPTS;"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"              private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"              private feedbackResponsesService: FeedbackResponsesService,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"              private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              private pageScrollService: PageScrollService,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              private commentService: FeedbackResponseCommentService,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"              private logService: LogService,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"              @Inject(DOCUMENT) private document: any) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    this.route.data.pipe("},{"lineNumber":128,"author":{"gitId":"-"},"content":"        tap((data: any) \u003d\u003e {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"          this.intent \u003d data.intent;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        switchMap(() \u003d\u003e this.route.queryParams),"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    ).subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      this.regKey \u003d queryParams.key ? queryParams.key : \u0027\u0027;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      this.moderatedPerson \u003d queryParams.moderatedperson ? queryParams.moderatedperson : \u0027\u0027;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      this.previewAsPerson \u003d queryParams.previewas ? queryParams.previewas : \u0027\u0027;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      if (queryParams.entitytype \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        this.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        this.intent \u003d Intent.INSTRUCTOR_SUBMISSION;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      this.moderatedQuestionId \u003d queryParams.moderatedquestionId ? queryParams.moderatedquestionId : \u0027\u0027;"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // disable submission in the preview mode"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search.replace(/\u0026/g, \u0027%26\u0027)}`;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) \u003d\u003e {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        const isPreviewOrModeration: boolean \u003d !!(auth.user \u0026\u0026 (this.moderatedPerson || this.previewAsPerson));"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (auth.user) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"          this.loggedInUser \u003d auth.user.id;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (this.regKey \u0026\u0026 !isPreviewOrModeration) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          this.authService.getAuthRegkeyValidity(this.regKey, this.intent).subscribe((resp: RegkeyValidity) \u003d\u003e {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (resp.isAllowedAccess) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"              if (resp.isUsed) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                // The logged in user matches the registration key; redirect to the logged in URL"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    this.router, `/web/${this.entityType}/sessions/submission`,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":164,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                // Valid, unused registration key; load information based on the key"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                this.loadPersonName();"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                this.loadFeedbackSession();"},{"lineNumber":168,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            } else if (resp.isValid) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"              // At this point, registration key must already be used, otherwise access would be granted"},{"lineNumber":171,"author":{"gitId":"-"},"content":"              if (this.loggedInUser) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                // Registration key belongs to another user who is not the logged in user"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                    `You are trying to access TEAMMATES using the Google account ${this.loggedInUser}, which"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                // There is no logged in user for a valid, used registration key, redirect to login page"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                // eslint-disable-next-line no-lonely-if"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                if (this.entityType \u003d\u003d\u003d \u0027student\u0027) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                } else if (this.entityType \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.instructorLoginUrl}`;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"              // The registration key is invalid"},{"lineNumber":190,"author":{"gitId":"-"},"content":"              this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                  \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } else if (this.loggedInUser) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"          // Load information based on logged in user"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          // This will also cover moderation/preview cases"},{"lineNumber":200,"author":{"gitId":"-"},"content":"          this.loadPersonName();"},{"lineNumber":201,"author":{"gitId":"-"},"content":"          this.loadFeedbackSession();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"              \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      }, () \u003d\u003e {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"  // Solution for checking partial element visibility adapted from"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  // https://stackoverflow.com/questions/30943662/check-if-element-is-partially-in-viewport"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * Checks if a given element is in view."},{"lineNumber":217,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   * @param e element to perform check for"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  isInViewport(e: HTMLElement): boolean {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    const rect: ClientRect \u003d e.getBoundingClientRect();"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    const windowHeight: number \u003d (window.innerHeight || document.documentElement.clientHeight);"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    return !("},{"lineNumber":225,"author":{"gitId":"-"},"content":"      Math.floor(100 - (((rect.top \u003e\u003d 0 ? 0 : rect.top) / +-rect.height) * 100)) \u003c 1"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      || Math.floor(100 - ((rect.bottom - windowHeight) / rect.height) * 100) \u003c 1"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":231,"author":{"gitId":"-"},"content":"   * Scrolls to the question based on its given question id."},{"lineNumber":232,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  scrollToQuestion(): void {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    const div: HTMLElement | null \u003d document.getElementById(this.moderatedQuestionId);"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    // continue scrolling as long as the element to scroll to is yet to be found or not in view"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    if (div \u003d\u003d null || !(this.isInViewport(div))) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      setTimeout(() \u003d\u003e {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        this.pageScrollService.scroll({"},{"lineNumber":240,"author":{"gitId":"-"},"content":"          document: this.document,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"          scrollTarget: `#${this.moderatedQuestionId}`,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"          scrollOffset: 70,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        this.scrollToQuestion();"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      }, 500);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    if (!this.moderatedQuestionId) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    this.scrollToQuestion();"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * Loads the name of the person involved in the submission."},{"lineNumber":258,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  loadPersonName(): void {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    switch (this.intent) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      case Intent.STUDENT_SUBMISSION:"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        this.studentService.getStudent("},{"lineNumber":263,"author":{"gitId":"-"},"content":"            this.courseId,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            this.moderatedPerson || this.previewAsPerson,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            this.regKey,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        ).subscribe((student: Student) \u003d\u003e {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"          this.personName \u003d student.name;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"          this.personEmail \u003d student.email;"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"          this.logService.createFeedbackSessionLog({"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            courseId: this.courseId,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            studentEmail: this.personEmail,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            logType: FeedbackSessionLogType.ACCESS,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"          }).subscribe(() \u003d\u003e {"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            this.statusMessageService.showWarningToast(\u0027Failed to log feedback session access\u0027);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      case Intent.INSTRUCTOR_SUBMISSION:"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        this.instructorService.getInstructor({"},{"lineNumber":285,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"          feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"          intent: this.intent,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":289,"author":{"gitId":"-"},"content":"          moderatedPerson: this.moderatedPerson,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"          previewAs: this.previewAsPerson,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"          this.personName \u003d instructor.name;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"          this.personEmail \u003d instructor.email;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":301,"author":{"gitId":"-"},"content":"   * Redirects to join course link for unregistered student/instructor."},{"lineNumber":302,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  joinCourseForUnregisteredEntity(): void {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/join\u0027, { entitytype: this.entityType, key: this.regKey });"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":308,"author":{"gitId":"-"},"content":"   * Loads the feedback session information."},{"lineNumber":309,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionLoading \u003d true;"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionLoading \u003d false;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        this.feedbackSessionInstructions \u003d feedbackSession.instructions;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":326,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        this.formattedSessionClosingTime \u003d this.timezoneService"},{"lineNumber":329,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        this.feedbackSessionSubmissionStatus \u003d feedbackSession.submissionStatus;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        this.feedbackSessionTimezone \u003d feedbackSession.timeZone;"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"        // don\u0027t show alert modal in moderation"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        if (!this.moderatedPerson) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"          let modalContent: string;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"          switch (feedbackSession.submissionStatus) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN:"},{"lineNumber":339,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eThe feedback session is currently not open for submissions.\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":344,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Not Open\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.OPEN:"},{"lineNumber":347,"author":{"gitId":"-"},"content":"              // closing in 15 minutes"},{"lineNumber":348,"author":{"gitId":"-"},"content":"              if (feedbackSession.submissionEndTimestamp - Date.now() \u003c 15 * 60 * 1000) {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                modalContent \u003d \u0027Warning: you have less than 15 minutes before the submission deadline expires!\u0027;"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                this.simpleModalService.openInformationModal("},{"lineNumber":351,"author":{"gitId":"-"},"content":"                  \u0027Feedback Session Will Be Closing Soon!\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":353,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.CLOSED:"},{"lineNumber":355,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eFeedback Session is Closed\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":360,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Closed\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.GRACE_PERIOD:"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":364,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"        this.loadFeedbackQuestions();"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"        // Display note on submission on mobile device"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        const mobileDeviceWidth: number \u003d 768;"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        if (this.feedbackSessionSubmissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN"},{"lineNumber":372,"author":{"gitId":"-"},"content":"          \u0026\u0026 window.innerWidth \u003c mobileDeviceWidth) {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"          const modalContent: string \u003d `Note that you can use the Submit button to save responses already entered,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"              and continue to answer remaining questions after that."},{"lineNumber":375,"author":{"gitId":"-"},"content":"              You may also edit your submission any number of times before the closing time of this session.`;"},{"lineNumber":376,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal("},{"lineNumber":377,"author":{"gitId":"-"},"content":"              \u0027Note On Submission\u0027, SimpleModalType.INFO, modalContent);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal(\u0027Feedback Session Does Not Exist!\u0027, SimpleModalType.DANGER,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"              \u0027The session does not exist (most likely deleted by the instructor after the submission link was sent).\u0027);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"          this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        } else if (resp.status \u003d\u003d\u003d 403) {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal(\u0027Not Authorised To Access!\u0027, SimpleModalType.DANGER,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"              resp.error.message);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"          this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage("},{"lineNumber":390,"author":{"gitId":"-"},"content":"              this.router, `/web/${this.entityType}/home`, resp.error.message);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":396,"author":{"gitId":"-"},"content":"   * Loads feedback questions to submit."},{"lineNumber":397,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionQuestionsLoading \u003d true;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    this.questionSubmissionForms \u003d [];"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":402,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackQuestionsResponse) \u003d\u003e {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            const model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"              isLoading: false,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"              isLoaded: false,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"              feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"              questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"              questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"              questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"              giverType: feedbackQuestion.giverType,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"              recipientType: feedbackQuestion.recipientType,"},{"lineNumber":424,"author":{"gitId":"-"},"content":"              recipientList: [],"},{"lineNumber":425,"author":{"gitId":"-"},"content":"              recipientSubmissionForms: [],"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"              questionType: feedbackQuestion.questionType,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"              questionDetails: feedbackQuestion.questionDetails,"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":432,"author":{"gitId":"-"},"content":"                      ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 0,"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"              showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"              showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"              showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            this.questionSubmissionForms.push(model);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"          this.handleError(resp);"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":443,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   * Tracks the question submission form by feedback question id."},{"lineNumber":447,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":450,"author":{"gitId":"-"},"content":"  trackQuestionSubmissionFormByFn(_: any, item: QuestionSubmissionFormModel): any {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":452,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   * Loads the feedback question recipients for the question."},{"lineNumber":456,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":457,"author":{"gitId":"-"},"content":"  loadFeedbackQuestionRecipientsForQuestion(model: QuestionSubmissionFormModel): void {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.loadFeedbackQuestionRecipients({"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    }).subscribe((response: FeedbackQuestionRecipients) \u003d\u003e {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      response.recipients.forEach((recipient: FeedbackQuestionRecipient) \u003d\u003e {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        model.recipientList.push({"},{"lineNumber":467,"author":{"gitId":"-"},"content":"          recipientIdentifier: recipient.identifier,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"          recipientName: recipient.name,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":470,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        // don\u0027t load responses in preview mode"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        // generate a list of empty response box"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        const formMode: QuestionSubmissionFormMode \u003d this.getQuestionSubmissionFormMode(model);"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"          if (formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT"},{"lineNumber":478,"author":{"gitId":"-"},"content":"              \u0026\u0026 model.recipientSubmissionForms.length \u003e\u003d model.customNumberOfEntitiesToGiveFeedbackTo) {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":480,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"-"},"content":"          let recipientIdentifier: string \u003d \u0027\u0027;"},{"lineNumber":483,"author":{"gitId":"-"},"content":"          if (formMode !\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            recipientIdentifier \u003d recipient.recipientIdentifier;"},{"lineNumber":485,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"          model.recipientSubmissionForms.push({"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            recipientIdentifier,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            responseId: \u0027\u0027,"},{"lineNumber":491,"author":{"gitId":"-"},"content":"            isValid: true,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        model.isLoading \u003d false;"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        model.isLoaded \u003d true;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        this.loadFeedbackResponses(model);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":500,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   * Gets the form mode of the question submission form."},{"lineNumber":504,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":505,"author":{"gitId":"-"},"content":"  getQuestionSubmissionFormMode(model: QuestionSubmissionFormModel): QuestionSubmissionFormMode {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    const isNumberOfEntitiesToGiveFeedbackToSettingLimited: boolean \u003d"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        (model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS_IN_SAME_SECTION"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS_IN_SAME_SECTION"},{"lineNumber":511,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.numberOfEntitiesToGiveFeedbackToSetting \u003d\u003d\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.recipientList.length \u003e model.customNumberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    return isNumberOfEntitiesToGiveFeedbackToSettingLimited"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        ? QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT : QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   * Loads the responses of the feedback question to {@recipientSubmissionForms} in the model."},{"lineNumber":521,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":522,"author":{"gitId":"-"},"content":"  loadFeedbackResponses(model: QuestionSubmissionFormModel): void {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    this.feedbackResponsesService.getFeedbackResponse({"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      model.isLoading \u003d false;"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      model.isLoaded \u003d true;"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      .subscribe((existingResponses: FeedbackResponsesResponse) \u003d\u003e {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT) {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"          // need to generate a full list of submission forms"},{"lineNumber":535,"author":{"gitId":"-"},"content":"          model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            const matchedExistingResponse: FeedbackResponse | undefined \u003d"},{"lineNumber":537,"author":{"gitId":"-"},"content":"              existingResponses.responses.find("},{"lineNumber":538,"author":{"gitId":"-"},"content":"                  (response: FeedbackResponse) \u003d\u003e response.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            const submissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"              recipientIdentifier: recipient.recipientIdentifier,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"              responseDetails: matchedExistingResponse"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                ? matchedExistingResponse.responseDetails"},{"lineNumber":543,"author":{"gitId":"-"},"content":"                : this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":544,"author":{"gitId":"-"},"content":"              responseId: matchedExistingResponse ? matchedExistingResponse.feedbackResponseId : \u0027\u0027,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            if (matchedExistingResponse \u0026\u0026 matchedExistingResponse.giverComment) {"},{"lineNumber":548,"author":{"gitId":"samuelfangjw"},"content":"              submissionForm.commentByGiver \u003d this.getCommentModel("},{"lineNumber":549,"author":{"gitId":"samuelfangjw"},"content":"                  matchedExistingResponse.giverComment, recipient.recipientIdentifier);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push(submissionForm);"},{"lineNumber":552,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"          // need to generate limited number of submission forms"},{"lineNumber":557,"author":{"gitId":"-"},"content":"          let numberOfRecipientSubmissionFormsNeeded: number \u003d"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            model.customNumberOfEntitiesToGiveFeedbackTo - existingResponses.responses.length;"},{"lineNumber":559,"author":{"gitId":"-"},"content":""},{"lineNumber":560,"author":{"gitId":"-"},"content":"          existingResponses.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":561,"author":{"gitId":"samuelfangjw"},"content":"            const submissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":562,"author":{"gitId":"-"},"content":"              recipientIdentifier: response.recipientIdentifier,"},{"lineNumber":563,"author":{"gitId":"-"},"content":"              responseDetails: response.responseDetails,"},{"lineNumber":564,"author":{"gitId":"-"},"content":"              responseId: response.feedbackResponseId,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":566,"author":{"gitId":"samuelfangjw"},"content":"            };"},{"lineNumber":567,"author":{"gitId":"samuelfangjw"},"content":"            if (response.giverComment) {"},{"lineNumber":568,"author":{"gitId":"samuelfangjw"},"content":"              submissionForm.commentByGiver \u003d this.getCommentModel("},{"lineNumber":569,"author":{"gitId":"samuelfangjw"},"content":"                  response.giverComment, response.recipientIdentifier);"},{"lineNumber":570,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":571,"author":{"gitId":"samuelfangjw"},"content":"            model.recipientSubmissionForms.push(submissionForm);"},{"lineNumber":572,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"          // generate empty submission forms"},{"lineNumber":575,"author":{"gitId":"-"},"content":"          while (numberOfRecipientSubmissionFormsNeeded \u003e 0) {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push({"},{"lineNumber":577,"author":{"gitId":"-"},"content":"              recipientIdentifier: \u0027\u0027,"},{"lineNumber":578,"author":{"gitId":"-"},"content":"              responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":579,"author":{"gitId":"-"},"content":"              responseId: \u0027\u0027,"},{"lineNumber":580,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":581,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":582,"author":{"gitId":"-"},"content":"            numberOfRecipientSubmissionFormsNeeded -\u003d 1;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":586,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":587,"author":{"gitId":"-"},"content":""},{"lineNumber":588,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":589,"author":{"gitId":"-"},"content":"   * Gets the comment model for a given comment."},{"lineNumber":590,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":591,"author":{"gitId":"samuelfangjw"},"content":"  getCommentModel(comment: FeedbackResponseComment, recipientIdentifier: string): CommentRowModel {"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":593,"author":{"gitId":"-"},"content":"      originalComment: comment,"},{"lineNumber":594,"author":{"gitId":"samuelfangjw"},"content":"      originalRecipientIdentifier: recipientIdentifier,"},{"lineNumber":595,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        commentText: comment.commentText,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        // the participant comment shall not use custom visibilities"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":602,"author":{"gitId":"-"},"content":"      timezone: this.feedbackSessionTimezone,"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":605,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   * Checks whether there is any submission forms in the current page."},{"lineNumber":609,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":610,"author":{"gitId":"-"},"content":"  get questionsNeedingSubmission(): QuestionSubmissionFormModel[] {"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    return this.questionSubmissionForms"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        .filter((model: QuestionSubmissionFormModel) \u003d\u003e model.recipientSubmissionForms.length !\u003d\u003d 0);"},{"lineNumber":613,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":616,"author":{"gitId":"-"},"content":"   * Saves the feedback responses for the specific questions."},{"lineNumber":617,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":618,"author":{"gitId":"-"},"content":"   * \u003cp\u003eAll empty feedback response will be deleted; For non-empty responses, update/create them if necessary."},{"lineNumber":619,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":620,"author":{"gitId":"-"},"content":"  saveFeedbackResponses(questionSubmissionForms: QuestionSubmissionFormModel[]): void {"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    const notYetAnsweredQuestions: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    const requestIds: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    const answers: Record\u003cstring, FeedbackResponse[]\u003e \u003d {};"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    const failToSaveQuestions: Record\u003cnumber, string\u003e \u003d {}; // Map of question number to error message"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    const savingRequests: Observable\u003cany\u003e[] \u003d [];"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"    this.logService.createFeedbackSessionLog({"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":630,"author":{"gitId":"-"},"content":"      studentEmail: this.personEmail,"},{"lineNumber":631,"author":{"gitId":"-"},"content":"      logType: FeedbackSessionLogType.SUBMISSION,"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    }).subscribe(() \u003d\u003e {"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {"},{"lineNumber":635,"author":{"gitId":"-"},"content":"      this.statusMessageService.showWarningToast(\u0027Failed to log feedback session submission\u0027);"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":637,"author":{"gitId":"-"},"content":""},{"lineNumber":638,"author":{"gitId":"-"},"content":"    questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) \u003d\u003e {"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      let isQuestionFullyAnswered: boolean \u003d true;"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"      const responses: FeedbackResponseRequest[] \u003d [];"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"      questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":644,"author":{"gitId":"-"},"content":"          .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"            if (!recipientSubmissionFormModel.isValid) {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"              failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                  \u0027Invalid responses provided. Please check question constraints.\u0027;"},{"lineNumber":648,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":650,"author":{"gitId":"-"},"content":"            const isFeedbackResponseDetailsEmpty: boolean \u003d"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                this.feedbackResponsesService.isFeedbackResponseDetailsEmpty("},{"lineNumber":652,"author":{"gitId":"-"},"content":"                    questionSubmissionFormModel.questionType, recipientSubmissionFormModel.responseDetails);"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            isQuestionFullyAnswered \u003d isQuestionFullyAnswered \u0026\u0026 !isFeedbackResponseDetailsEmpty;"},{"lineNumber":654,"author":{"gitId":"-"},"content":""},{"lineNumber":655,"author":{"gitId":"-"},"content":"            if (!isFeedbackResponseDetailsEmpty) {"},{"lineNumber":656,"author":{"gitId":"-"},"content":"              responses.push({"},{"lineNumber":657,"author":{"gitId":"-"},"content":"                recipient: recipientSubmissionFormModel.recipientIdentifier,"},{"lineNumber":658,"author":{"gitId":"-"},"content":"                responseDetails: recipientSubmissionFormModel.responseDetails,"},{"lineNumber":659,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":660,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":661,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"zhaojj2209"},"content":"      if (!failToSaveQuestions[questionSubmissionFormModel.questionNumber]) {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        savingRequests.push("},{"lineNumber":665,"author":{"gitId":"-"},"content":"            this.feedbackResponsesService.submitFeedbackResponses(questionSubmissionFormModel.feedbackQuestionId, {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"              responses,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            }, {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"              intent: this.intent,"},{"lineNumber":669,"author":{"gitId":"-"},"content":"              key: this.regKey,"},{"lineNumber":670,"author":{"gitId":"-"},"content":"              moderatedperson: this.moderatedPerson,"},{"lineNumber":671,"author":{"gitId":"-"},"content":"            }).pipe("},{"lineNumber":672,"author":{"gitId":"-"},"content":"                tap((resp: FeedbackResponses) \u003d\u003e {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"                  const responsesMap: Record\u003cstring, FeedbackResponse\u003e \u003d {};"},{"lineNumber":674,"author":{"gitId":"-"},"content":"                  resp.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"                    responsesMap[response.recipientIdentifier] \u003d response;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId] \u003d"},{"lineNumber":677,"author":{"gitId":"-"},"content":"                        answers[questionSubmissionFormModel.feedbackQuestionId] || [];"},{"lineNumber":678,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId].push(response);"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                  });"},{"lineNumber":680,"author":{"gitId":"-"},"content":"                  requestIds[questionSubmissionFormModel.feedbackQuestionId] \u003d resp.requestId || \u0027\u0027;"},{"lineNumber":681,"author":{"gitId":"-"},"content":""},{"lineNumber":682,"author":{"gitId":"-"},"content":"                  questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":683,"author":{"gitId":"-"},"content":"                      .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":684,"author":{"gitId":"-"},"content":"                        if (responsesMap[recipientSubmissionFormModel.recipientIdentifier]) {"},{"lineNumber":685,"author":{"gitId":"-"},"content":"                          const correspondingResp: FeedbackResponse \u003d"},{"lineNumber":686,"author":{"gitId":"-"},"content":"                              responsesMap[recipientSubmissionFormModel.recipientIdentifier];"},{"lineNumber":687,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d correspondingResp.feedbackResponseId;"},{"lineNumber":688,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseDetails \u003d correspondingResp.responseDetails;"},{"lineNumber":689,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.recipientIdentifier \u003d correspondingResp.recipientIdentifier;"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                        } else {"},{"lineNumber":691,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d \u0027\u0027;"},{"lineNumber":692,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":693,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":694,"author":{"gitId":"-"},"content":"                      });"},{"lineNumber":695,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":696,"author":{"gitId":"-"},"content":"                switchMap(() \u003d\u003e"},{"lineNumber":697,"author":{"gitId":"-"},"content":"                    forkJoin(questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":698,"author":{"gitId":"-"},"content":"                        .map((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":699,"author":{"gitId":"-"},"content":"                            this.createCommentRequest(recipientSubmissionFormModel))),"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                ),"},{"lineNumber":701,"author":{"gitId":"-"},"content":"                catchError((error: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"                  failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d error.error.message;"},{"lineNumber":703,"author":{"gitId":"-"},"content":"                  return of(error);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":705,"author":{"gitId":"-"},"content":"            ),"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":707,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":708,"author":{"gitId":"-"},"content":""},{"lineNumber":709,"author":{"gitId":"-"},"content":"      if (!isQuestionFullyAnswered) {"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        notYetAnsweredQuestions.add(questionSubmissionFormModel.questionNumber);"},{"lineNumber":711,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":713,"author":{"gitId":"-"},"content":""},{"lineNumber":714,"author":{"gitId":"-"},"content":"    this.isSavingResponses \u003d true;"},{"lineNumber":715,"author":{"gitId":"-"},"content":"    forkJoin(savingRequests).pipe("},{"lineNumber":716,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":717,"author":{"gitId":"-"},"content":"          this.isSavingResponses \u003d false;"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"          const modalRef: NgbModalRef \u003d this.ngbModal.open(SavingCompleteModalComponent);"},{"lineNumber":720,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.requestIds \u003d requestIds;"},{"lineNumber":721,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.courseId \u003d this.courseId;"},{"lineNumber":722,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":723,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionTimezone \u003d this.feedbackSessionTimezone;"},{"lineNumber":724,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personEmail \u003d this.personEmail;"},{"lineNumber":725,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personName \u003d this.personName;"},{"lineNumber":726,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.questions \u003d questionSubmissionForms;"},{"lineNumber":727,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.answers \u003d answers;"},{"lineNumber":728,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.notYetAnsweredQuestions \u003d Array.from(notYetAnsweredQuestions.values());"},{"lineNumber":729,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.failToSaveQuestions \u003d failToSaveQuestions;"},{"lineNumber":730,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    ).subscribe();"},{"lineNumber":732,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":735,"author":{"gitId":"-"},"content":"   * Creates comment request."},{"lineNumber":736,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":737,"author":{"gitId":"-"},"content":"  createCommentRequest(recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel): Observable\u003cany\u003e {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.responseId) {"},{"lineNumber":739,"author":{"gitId":"-"},"content":"      // responseId not set, cannot set comment"},{"lineNumber":740,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":741,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver) {"},{"lineNumber":743,"author":{"gitId":"-"},"content":"      // comment not given, do nothing"},{"lineNumber":744,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":745,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":746,"author":{"gitId":"-"},"content":""},{"lineNumber":747,"author":{"gitId":"samuelfangjw"},"content":"    const isSameRecipient \u003d recipientSubmissionFormModel.recipientIdentifier"},{"lineNumber":748,"author":{"gitId":"samuelfangjw"},"content":"        \u003d\u003d\u003d recipientSubmissionFormModel.commentByGiver.originalRecipientIdentifier;"},{"lineNumber":749,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":750,"author":{"gitId":"samuelfangjw"},"content":"    if (!recipientSubmissionFormModel.commentByGiver.originalComment || !isSameRecipient) {"},{"lineNumber":751,"author":{"gitId":"samuelfangjw"},"content":"      // comment is new or original comment deleted because recipient has changed"},{"lineNumber":752,"author":{"gitId":"-"},"content":""},{"lineNumber":753,"author":{"gitId":"-"},"content":"      if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        // new comment is empty"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        return of({});"},{"lineNumber":757,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":758,"author":{"gitId":"-"},"content":""},{"lineNumber":759,"author":{"gitId":"-"},"content":"      // create new comment"},{"lineNumber":760,"author":{"gitId":"-"},"content":"      return this.commentService.createComment({"},{"lineNumber":761,"author":{"gitId":"-"},"content":"        commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        // we ignore the fields in comment edit model as participant comment"},{"lineNumber":763,"author":{"gitId":"-"},"content":"        // will follow visibilities from question by design"},{"lineNumber":764,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":765,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":766,"author":{"gitId":"-"},"content":"      }, recipientSubmissionFormModel.responseId, this.intent, {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"        key: this.regKey,"},{"lineNumber":768,"author":{"gitId":"-"},"content":"        moderatedperson: this.moderatedPerson,"},{"lineNumber":769,"author":{"gitId":"-"},"content":"      }).pipe("},{"lineNumber":770,"author":{"gitId":"-"},"content":"          tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":771,"author":{"gitId":"samuelfangjw"},"content":"            recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel("},{"lineNumber":772,"author":{"gitId":"samuelfangjw"},"content":"                comment, recipientSubmissionFormModel.recipientIdentifier);"},{"lineNumber":773,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":774,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":775,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":776,"author":{"gitId":"-"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"    // existing comment"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"    if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":780,"author":{"gitId":"-"},"content":"      // comment is empty, create delete request"},{"lineNumber":781,"author":{"gitId":"-"},"content":"      return this.commentService.deleteComment("},{"lineNumber":782,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":783,"author":{"gitId":"-"},"content":"            key: this.regKey,"},{"lineNumber":784,"author":{"gitId":"-"},"content":"            moderatedperson: this.moderatedPerson,"},{"lineNumber":785,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":786,"author":{"gitId":"-"},"content":"          .pipe("},{"lineNumber":787,"author":{"gitId":"-"},"content":"              tap(() \u003d\u003e {"},{"lineNumber":788,"author":{"gitId":"-"},"content":"                recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":789,"author":{"gitId":"-"},"content":"              }));"},{"lineNumber":790,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":791,"author":{"gitId":"-"},"content":""},{"lineNumber":792,"author":{"gitId":"-"},"content":"    // update comment"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    return this.commentService.updateComment({"},{"lineNumber":794,"author":{"gitId":"-"},"content":"      commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":795,"author":{"gitId":"-"},"content":"      // we ignore the fields in comment edit model as participant comment"},{"lineNumber":796,"author":{"gitId":"-"},"content":"      // will follow visibilities from question by design"},{"lineNumber":797,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":798,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    }, recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":801,"author":{"gitId":"-"},"content":"      moderatedperson: this.moderatedPerson,"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":803,"author":{"gitId":"-"},"content":"        tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":804,"author":{"gitId":"samuelfangjw"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel("},{"lineNumber":805,"author":{"gitId":"samuelfangjw"},"content":"              comment, recipientSubmissionFormModel.recipientIdentifier);"},{"lineNumber":806,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":808,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":811,"author":{"gitId":"-"},"content":"   * Deletes a comment by participants."},{"lineNumber":812,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":813,"author":{"gitId":"-"},"content":"  deleteParticipantComment(questionIndex: number, responseIdx: number): void {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"    const recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel \u003d"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        this.questionSubmissionForms[questionIndex].recipientSubmissionForms[responseIdx];"},{"lineNumber":816,"author":{"gitId":"-"},"content":""},{"lineNumber":817,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver || !recipientSubmissionFormModel.commentByGiver.originalComment) {"},{"lineNumber":818,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"    this.commentService.deleteComment("},{"lineNumber":822,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":823,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":824,"author":{"gitId":"-"},"content":"          moderatedperson: this.moderatedPerson,"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        }).subscribe(() \u003d\u003e {"},{"lineNumber":826,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":827,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027Your comment has been deleted!\u0027);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":829,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":830,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":831,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"  retryLoadingFeedbackSessionQuestions(): void {"},{"lineNumber":834,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d false;"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003e\u003d 0) {"},{"lineNumber":836,"author":{"gitId":"-"},"content":"      this.retryAttempts -\u003d 1;"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":838,"author":{"gitId":"-"},"content":"    this.loadFeedbackQuestions();"},{"lineNumber":839,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":840,"author":{"gitId":"-"},"content":""},{"lineNumber":841,"author":{"gitId":"-"},"content":"  handleError(resp: ErrorMessageOutput): void {"},{"lineNumber":842,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003c 0) {"},{"lineNumber":844,"author":{"gitId":"-"},"content":"      const report: NgbModalRef \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":845,"author":{"gitId":"-"},"content":"      report.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":846,"author":{"gitId":"-"},"content":"      report.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":847,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":848,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":849,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":850,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":851,"author":{"gitId":"-"},"content":""},{"lineNumber":852,"author":{"gitId":"-"},"content":"  loadRecipientsAndResponses(event: any, questionSubmissionForm: QuestionSubmissionFormModel): void {"},{"lineNumber":853,"author":{"gitId":"-"},"content":"    if (event \u0026\u0026 event.visible \u0026\u0026 !questionSubmissionForm.isLoaded \u0026\u0026 !questionSubmissionForm.isLoading) {"},{"lineNumber":854,"author":{"gitId":"-"},"content":"      questionSubmissionForm.isLoading \u003d true;"},{"lineNumber":855,"author":{"gitId":"-"},"content":"      this.loadFeedbackQuestionRecipientsForQuestion(questionSubmissionForm);"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":857,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":2,"-":837,"samuelfangjw":20}},{"path":"src/web/app/pages-student/student-home-page/student-home-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCoursesLoadingFailed\" [message]\u003d\"\u0027Failed to load courses\u0027\" (retryEvent)\u003d\"loadStudentCourses()\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isCoursesLoading\"\u003e\u003c/div\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv *ngIf\u003d\"!isCoursesLoading\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courses.length \u003d\u003d\u003d 0; else coursesContainer\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      You are not enrolled in any courses. Please refer to the \u003ca tmRouterLink\u003d\"/web/student/help\"\u003ehelp page\u003c/a\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      if you need more information."},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cng-template #coursesContainer\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courses.length\" class\u003d\"row mb-2\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"float-right\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cstrong class\u003d\"d-inline\"\u003e Sort By: \u003c/strong\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"btn-group\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"sort-course-id-btn\" class\u003d\"btn btn-light\" [disabled]\u003d\"sortBy \u003d\u003d\u003d SortBy.COURSE_ID\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"sort-course-name-btn\" class\u003d\"btn btn-light\" [disabled]\u003d\"sortBy \u003d\u003d\u003d SortBy.COURSE_NAME\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cng-container *ngFor\u003d\"let studentCourse of courses; index as i\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card bg-light top-padded\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-header bg-primary text-white\" *ngIf\u003d\"studentCourse.course as course\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cstrong class\u003d\"text-break\"\u003e[{{ course.courseId }}]: {{ course.courseName }}\u003c/strong\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003ca tmRouterLink\u003d\"/web/student/course\" [queryParams]\u003d\"{courseid: course.courseId}\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"               id\u003d\"view-team-btn-{{i}}\" class\u003d\"btn btn-primary btn-sm button text-nowrap\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              View team"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"table-responsive\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003ctable class\u003d\"table table-striped table-bordered margin-0\" *ngIf\u003d\"studentCourse.feedbackSessions \u0026\u0026 studentCourse.feedbackSessions.length\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cthead\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003ctr\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cth\u003eSession Name\u003c/th\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cth\u003eDeadline\u003c/th\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003cth\u003eSubmissions\u003c/th\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cth\u003eResponses\u003c/th\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"              \u003cth\u003eAction(s)\u003c/th\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/thead\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003ctbody\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003ctr *ngFor\u003d\"let session of studentCourse.feedbackSessions; index as i\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003cng-container\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003ctd class\u003d\"text-break\"\u003e{{ session.session.feedbackSessionName }}\u003c/td\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u003ctd *ngIf\u003d\"session.session.submissionEndTimestamp\"\u003e{{ session.session.submissionEndTimestamp | formatDateDetail: session.session.timeZone }}\u003c/td\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                  \u003cspan [ngbTooltip]\u003d\"getSubmissionStatusTooltip(session)\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    {{ session.isOpened | sessionSubmissionStatus: session.isWaitingToOpen : session.isSubmitted }}"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                  \u003c/span\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                  \u003cspan [ngbTooltip]\u003d\"getResponseStatusTooltip(session.isPublished)\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    {{ session.isPublished | sessionResponseStatus }}"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                  \u003c/span\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                  \u003ca [ngClass]\u003d\"{\u0027disabled\u0027 : !session.isPublished}\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/result\" [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"                     id\u003d\"view-responses-btn-{{i}}\" class\u003d\"btn btn-light btn-sm btn-margin-right\"\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    View Responses"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isWaitingToOpen\" id\u003d\"disabled-start-submit-btn-{{i}}\" class\u003d\"btn btn-light btn-sm disabled\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    Start Submission"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isOpened \u0026\u0026 !session.isSubmitted\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                     id\u003d\"start-submit-btn-{{i}}\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                     class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    Start Submission"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isOpened \u0026\u0026 session.isSubmitted\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                     id\u003d\"edit-submit-btn-{{i}}\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                     class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    Edit Submission"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"!session.isOpened \u0026\u0026 !session.isWaitingToOpen\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                     id\u003d\"view-submit-btn-{{i}}\" class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    View Submission"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              \u003c/ng-container\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \u003c/tbody\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          \u003c/table\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"          \u003ctable class\u003d\"table table-striped table-bordered margin-0\" *ngIf\u003d\"!(studentCourse.feedbackSessions \u0026\u0026 studentCourse.feedbackSessions.length)\"\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003ctbody\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003ctr\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              \u003cth class\u003d\"align-center white\"\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Currently, there are no open evaluation/feedback sessions in this course. When a session is open for submission you will be notified."},{"lineNumber":99,"author":{"gitId":"-"},"content":"              \u003c/th\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003c/tbody\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          \u003c/table\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \u003c/ng-container\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \u003c/ng-template\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":106}},{"path":"src/web/app/pages-student/student-profile-page/student-profile-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasLoadingStudentProfileFailed\" [message]\u003d\"\u0027Failed to load profile\u0027\" (retryEvent)\u003d\"loadStudentProfile()\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isLoadingStudentProfile\" class\u003d\"text-center text-sm-left\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003ch1\u003eStudent Profile\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"student\" class\u003d\"card\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body fill-plain\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003ch1\u003e{{ name }}\u003c/h1\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row profile-pic-row\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col cursor-pointer\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u003cimg"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                src\u003d\"{{ profilePicLink }}\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                class\u003d\"profile-pic\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                (click)\u003d\"onUploadEdit()\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                (error)\u003d\"setDefaultPic()\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row profile-pic-row\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-12 cursor-pointer\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cbutton"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                class\u003d\"btn btn-primary upload-edit-photo btn-margin-right\""},{"lineNumber":20,"author":{"gitId":"FergusMok"},"content":"                ngbTooltip\u003d\".jpg, .png, .gif or .svg, max size 5 MB\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"                (click)\u003d\"onUploadEdit()\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              Upload/Edit Photo"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cbutton *ngIf\u003d\"this.profilePicLink !\u003d\u003d this.defaultPictureLink\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                id\u003d\"profile-delete-photo\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"                class\u003d\"btn btn-danger\""},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"                (click)\u003d\"onDelete()\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"              Delete Photo"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cform [formGroup]\u003d\"editForm\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"              (ngSubmit)\u003d\"onSubmit()\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003clabel\u003eThe name you prefer to be called by instructors\u003c/label\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cinput"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                id\u003d\"studentshortname\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentshortname\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003clabel\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              Long-term Contact Email"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003cem class\u003d\"font-weight-normal emphasis text-muted small\"\u003e- only visible to your instructors\u003c/em\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003c/label\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cinput"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                id\u003d\"studentprofileemail\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentprofileemail\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003clabel\u003eInstitute\u003c/label\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cinput"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"                id\u003d\"studentprofileinstitute\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentprofileinstitute\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003clabel\u003eNationality\u003c/label\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cselect"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"                id\u003d\"studentnationality\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentnationality\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003coption"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                  *ngFor\u003d\"let n of nationalities\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"                  [value]\u003d\"n\"\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                {{n}}"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              \u003c/option\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003c/select\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          \u003clabel\u003eGender\u003c/label\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"custom-control-inline\" *ngFor\u003d\"let gender of Gender | enumToArray\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"              \u003cinput"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                  class\u003d\"student-gender-radio\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                  type\u003d\"radio\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                  formControlName\u003d\"studentgender\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                  [value]\u003d\"gender\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"student-gender-label mt-1\"\u003e{{ gender | genderFormat }}\u003c/label\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"You may specify miscellaneous info about yourself e.g. links to home page, online CV, portfolio etc\"\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"              More Information about Yourself\u003c/label\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003ctextarea"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                id\u003d\"studentprofilemoreinfo\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                rows\u003d\"4\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentprofilemoreinfo\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                placeholder\u003d\"You may specify miscellaneous info about yourself e.g. links to home page, online CV, portfolio etc.\"\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u003c/textarea\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"text-center\"\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cbutton"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                type\u003d\"submit\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                class\u003d\"btn btn-primary student-save-profile\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                [disabled]\u003d\"isSavingProfileEdit\"\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"              \u003ctm-ajax-loading *ngIf\u003d\"isSavingProfileEdit\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"              Save Profile"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"whisper\"\u003eThis profile will be visible to all your instructors and coursemates.\u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003c/form\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"FergusMok":1,"-":107}},{"path":"src/web/app/pages-student/student-profile-page/upload-edit-profile-picture-modal/upload-edit-profile-picture-modal.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-header\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch4 class\u003d\"modal-title\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    Upload/Edit Photo"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/h4\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003cbutton (click)\u003d\"activeModal.dismiss()\" type\u003d\"button\" class\u003d\"close\" data-dismiss\u003d\"modal\" aria-hidden\u003d\"true\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    ×"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-body align-center\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col sm-5\"\u003e"},{"lineNumber":13,"author":{"gitId":"FergusMok"},"content":"      \u003cp\u003ePlease upload an image file \u003cb\u003e(ending with .jpg, .png, .gif or .svg)\u003c/b\u003e from your computer."},{"lineNumber":14,"author":{"gitId":"FergusMok"},"content":"      Once a picture is uploaded, you will be able to edit it using the buttons below."},{"lineNumber":15,"author":{"gitId":"FergusMok"},"content":"      Cropping is available by adjusting the box size."},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":22,"author":{"gitId":"FergusMok"},"content":"      \u003cinput class\u003d\"row col student-photo\" type\u003d\"file\" accept\u003d\"{{ validProfileFileTypes }}\" (change)\u003d\"fileChangeEvent($event)\"/\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003csmall\u003eMax Size: 5MB\u003c/small\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-md-8 pl-md-5\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary btn-space\" (click)\u003d\"flipHorizontal()\" ngbTooltip\u003d\"Flip Horizontally\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"fas fa-angle-double-left\"\u003e\u003c/i\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary btn-space\" (click)\u003d\"flipVertical()\" ngbTooltip\u003d\"Flip Vertically\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"fas fa-angle-double-up\"\u003e\u003c/i\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary btn-space\" (click)\u003d\"rotateLeft()\" ngbTooltip\u003d\"Rotate Anti-clockwise\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"fas fa-redo-alt fa-flip-horizontal\"\u003e\u003c/i\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary btn-space\" (click)\u003d\"rotateRight()\" ngbTooltip\u003d\"Rotate Clockwise\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"fas fa-redo-alt\"\u003e\u003c/i\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003cimage-cropper"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      [imageChangedEvent]\u003d\"imageChangedEvent\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"      [maintainAspectRatio]\u003d\"false\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"      (imageCropped)\u003d\"imageCropped($event)\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003e\u003c/image-cropper\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-footer\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cdiv\u003e"},{"lineNumber":55,"author":{"gitId":"FergusMok"},"content":"    \u003cbutton class\u003d\"btn btn-success btn-lg profile-upload-picture-submit\" (click)\u003d\"uploadPicture()\" [disabled]\u003d\"!isValidProfileFileType\"\u003eUpload Image\u003c/button\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"FergusMok":5,"-":52}},{"path":"src/web/app/pages-student/student-profile-page/upload-edit-profile-picture-modal/upload-edit-profile-picture-modal.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ImageCroppedEvent, ImageCropperComponent } from \u0027ngx-image-cropper\u0027;"},{"lineNumber":4,"author":{"gitId":"FergusMok"},"content":"import { StatusMessageService } from \u0027../../../../services/status-message.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Student profile page\u0027s modal to upload/edit photo."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027tm-upload-edit-profile-picture-modal\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./upload-edit-profile-picture-modal.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./upload-edit-profile-picture-modal.component.scss\u0027],"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class UploadEditProfilePictureModalComponent implements OnInit {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  imageChangedEvent: any \u003d \u0027\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  formData?: FormData;"},{"lineNumber":17,"author":{"gitId":"FergusMok"},"content":"  isValidProfileFileType: boolean \u003d false;"},{"lineNumber":18,"author":{"gitId":"FergusMok"},"content":"  readonly validProfileFileTypes: string[] \u003d [\u0027image/gif\u0027, \u0027image/jpeg\u0027, \u0027image/png\u0027, \u0027image/svg+xml\u0027];"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  @ViewChild(ImageCropperComponent) imageCropper!: ImageCropperComponent;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Input() image!: Blob | null;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"FergusMok"},"content":"  constructor(public activeModal: NgbActiveModal,"},{"lineNumber":25,"author":{"gitId":"FergusMok"},"content":"    private statusMessageService: StatusMessageService,"},{"lineNumber":26,"author":{"gitId":"FergusMok"},"content":"    ) { }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    if (this.image \u003d\u003d null) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.blobToBase64Image(this.image);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * Converts the blob image into a base64 string to be shown in the image cropper."},{"lineNumber":37,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  blobToBase64Image(image: Blob): void {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    const reader: FileReader \u003d new FileReader();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    reader.addEventListener(\u0027load\u0027, () \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      if (reader.result) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.imageCropper.imageBase64 \u003d reader.result as string;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }, false);"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    if (image) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      reader.readAsDataURL(image);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * Populates form data with the image blob."},{"lineNumber":53,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  populateFormData(file: File): void {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    this.formData \u003d new FormData();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.formData.append(\u0027studentprofilephoto\u0027, file, file.name);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * Uploads the picture that has been newly uploaded/edited."},{"lineNumber":61,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  uploadPicture(): void {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.activeModal.close(this.formData);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * Handles event(s) when a file is selected from the user\u0027s file browser."},{"lineNumber":68,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  fileChangeEvent(event: any): void {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.imageChangedEvent \u003d event;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const file: File \u003d event.target.files[0];"},{"lineNumber":73,"author":{"gitId":"FergusMok"},"content":"    if (this.validProfileFileTypes.includes(file.type)) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.populateFormData(file);"},{"lineNumber":75,"author":{"gitId":"FergusMok"},"content":"      this.isValidProfileFileType \u003d true;"},{"lineNumber":76,"author":{"gitId":"FergusMok"},"content":"    } else {"},{"lineNumber":77,"author":{"gitId":"FergusMok"},"content":"      this.statusMessageService.showErrorToast(\u0027Please upload an accepted file type!\u0027);"},{"lineNumber":78,"author":{"gitId":"FergusMok"},"content":"      this.isValidProfileFileType \u003d false;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * Saves the latest cropped image."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  imageCropped(event: ImageCroppedEvent): void {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    this.populateFormData(event.file as File);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * Rotates the image in the image cropper to the left."},{"lineNumber":91,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  rotateLeft(): void {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    this.imageCropper.rotateLeft();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   * Rotates the image in the image cropper to the right."},{"lineNumber":98,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  rotateRight(): void {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    this.imageCropper.rotateRight();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   * Flips the image in the image cropper horizontally."},{"lineNumber":105,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  flipHorizontal(): void {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.imageCropper.flipHorizontal();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   * Flips the image in the image cropper vertically."},{"lineNumber":112,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  flipVertical(): void {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    this.imageCropper.flipVertical();"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"FergusMok":11,"-":105}},{"path":"src/web/app/user-join-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv *tmIsLoading\u003d\"isLoading\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card bg-light mx-auto\" style\u003d\"max-width: 800px;\" *ngIf\u003d\"!hasJoined \u0026\u0026 !userId \u0026\u0026 validUrl\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-header bg-warning\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003ch3 style\u003d\"margin-bottom: 0;\"\u003eNot logged in\u003c/h3\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      You are not logged in. Please log in first."},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card bg-light mx-auto\" style\u003d\"max-width: 800px;\" *ngIf\u003d\"userId \u0026\u0026 (!validUrl || hasJoined)\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-header bg-warning\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003ch3 style\u003d\"margin-bottom: 0;\"\u003eInvalid course join link\u003c/h3\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body\" *ngIf\u003d\"!validUrl\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      The course join link is invalid. You may have entered the URL incorrectly or the URL may correspond"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      to a/an {{ entityType }} that does not exist."},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body\" *ngIf\u003d\"hasJoined \u0026\u0026 validUrl\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      The course join link has been used and is no longer valid."},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card bg-light mx-auto\" style\u003d\"max-width: 800px;\" *ngIf\u003d\"!hasJoined \u0026\u0026 userId \u0026\u0026 validUrl\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-header bg-primary text-white\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003ch3 style\u003d\"margin-bottom: 0;\"\u003eConfirm your Google account\u003c/h3\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      You are currently logged in as \u003cstrong id\u003d\"user-id\"\u003e{{ userId }}\u003c/strong\u003e."},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cbr\u003eIf this is not you, please log out and log in using your own Google account."},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cbr\u003eIf this is you, please confirm below to complete your registration.\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"text-center\" style\u003d\"margin-top: 20px;\"\u003e"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        \u003cbutton id\u003d\"btn-confirm\" class\u003d\"btn btn-success\" (click)\u003d\" isCreatingAccount ? createAccount() : joinCourse()\"\u003eRegister for course\u003c/button\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"-":33,"samuelfangjw":2}},{"path":"src/web/app/user-join-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import SpyInstance \u003d jest.SpyInstance;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import { AccountService } from \u0027../services/account.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../services/auth.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../services/course.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../services/navigation.service\u0027;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import { TimezoneService } from \u0027../services/timezone.service\u0027;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import { LoadingSpinnerModule } from \u0027./components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { UserJoinPageComponent } from \u0027./user-join-page.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"describe(\u0027UserJoinPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  let component: UserJoinPageComponent;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cUserJoinPageComponent\u003e;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  let navService: NavigationService;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  let courseService: CourseService;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  let authService: AuthService;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      declarations: [UserJoinPageComponent],"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":26,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        LoadingSpinnerModule,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NavigationService,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        CourseService,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AuthService,"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        AccountService,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          provide: ActivatedRoute,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          useValue: {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            queryParams: of({"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              entitytype: \u0027student\u0027,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              key: \u0027key\u0027,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        .compileComponents();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(UserJoinPageComponent);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  it(\u0027should snap if user is not logged in and has a valid url\u0027, () \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027\u0027;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    component.validUrl \u003d true;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  it(\u0027should snap with invalid course join link\u0027, () \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    component.validUrl \u003d false;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  it(\u0027should snap with valid course join link that has been used\u0027, () \u003d\u003e {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    component.validUrl \u003d true;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    component.hasJoined \u003d true;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  it(\u0027should snap with valid course join link that has not been used\u0027, () \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    component.validUrl \u003d true;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"  it(\u0027should join course when join course button is clicked on\u0027, () \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    const params: string[] \u003d [\u0027key\u0027, \u0027student\u0027];"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    component.key \u003d params[0];"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    component.entityType \u003d params[1];"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    component.validUrl \u003d true;"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const courseSpy: SpyInstance \u003d jest.spyOn(courseService, \u0027joinCourse\u0027).mockReturnValue(of({}));"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    const btn: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-confirm\u0027);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    btn.click();"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    expect(courseSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    expect(courseSpy).toHaveBeenLastCalledWith(...params);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), `/web/${params[1]}`);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  it(\u0027should redirect user to home page if user is logged in and join URL has been used\u0027, () \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of({"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      user: {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        id: \u0027user\u0027,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        isAdmin: false,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        isInstructor: false,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        isStudent: false,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        isMaintainer: false,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      masquerade: false,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    jest.spyOn(courseService, \u0027getJoinCourseStatus\u0027).mockReturnValue(of({"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      hasJoined: true,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    expect(component.hasJoined).toBeTruthy();"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    expect(component.userId).toEqual(\u0027user\u0027);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/home\u0027);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"  it(\u0027should stop loading and show error message if 404 is returned\u0027, () \u003d\u003e {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of({"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      user: {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        id: \u0027user\u0027,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        isAdmin: false,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        isInstructor: false,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        isStudent: false,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        isMaintainer: false,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      masquerade: false,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    jest.spyOn(courseService, \u0027getJoinCourseStatus\u0027).mockReturnValue(throwError({"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      status: 404,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    expect(component.isLoading).toBeFalsy();"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    expect(component.validUrl).toBeFalsy();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"  it(\u0027should stop loading and redirect if user is not logged in\u0027, () \u003d\u003e {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of({"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      masquerade: false,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    jest.spyOn(courseService, \u0027getJoinCourseStatus\u0027).mockReturnValue(of({"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      hasJoined: true,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    expect(component.isLoading).toBeFalsy();"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":189,"author":{"gitId":"-"},"content":"});"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"describe(\u0027UserJoinPageComponent creating account\u0027, () \u003d\u003e {"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"  let component: UserJoinPageComponent;"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"  let fixture: ComponentFixture\u003cUserJoinPageComponent\u003e;"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"  let navService: NavigationService;"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"  let authService: AuthService;"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"  let accountService: AccountService;"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"  let courseService: CourseService;"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"  let timezoneService: TimezoneService;"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"  beforeEach((() \u003d\u003e {"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"    TestBed.resetTestingModule();"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"      declarations: [UserJoinPageComponent],"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"      imports: ["},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"        HttpClientTestingModule,"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"        RouterTestingModule,"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        LoadingSpinnerModule,"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"      ],"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"      providers: ["},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"        NavigationService,"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"        CourseService,"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"        AuthService,"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"        AccountService,"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"        TimezoneService,"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"        {"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"          provide: ActivatedRoute,"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"          useValue: {"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"            queryParams: of({"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"              iscreatingaccount: \u0027true\u0027,"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"              key: \u0027key\u0027,"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"            }),"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"          },"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"        },"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"      ],"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"    }).compileComponents();"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"  }));"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"    fixture \u003d TestBed.createComponent(UserJoinPageComponent);"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"    accountService \u003d TestBed.inject(AccountService);"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"    timezoneService \u003d TestBed.inject(TimezoneService);"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should create account and join course when join course button is clicked on\u0027, () \u003d\u003e {"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"    component.isLoading \u003d false;"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"    component.isCreatingAccount \u003d true;"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"    component.key \u003d \u0027key\u0027;"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"    component.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"    component.validUrl \u003d true;"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"    const accountSpy: SpyInstance \u003d jest.spyOn(accountService, \u0027createAccount\u0027).mockReturnValue(of({"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      message: \u0027test message\u0027,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    jest.spyOn(timezoneService, \u0027guessTimezone\u0027).mockReturnValue(\u0027UTC\u0027);"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"    const btn: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-confirm\u0027);"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":"    btn.click();"},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    expect(accountSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    expect(accountSpy).toHaveBeenLastCalledWith(\u0027key\u0027, \u0027UTC\u0027);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/instructor\u0027);"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should redirect user to home page if user is logged in and URL has been used\u0027, () \u003d\u003e {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of({"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"      user: {"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"        id: \u0027user\u0027,"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"        isAdmin: false,"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"        isInstructor: false,"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"        isStudent: false,"},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"        isMaintainer: false,"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"      masquerade: false,"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    jest.spyOn(courseService, \u0027getJoinCourseStatus\u0027).mockReturnValue(of({"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"      hasJoined: true,"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"    component.ngOnInit();"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.hasJoined).toBeTruthy();"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.userId).toEqual(\u0027user\u0027);"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/instructor/home\u0027);"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should stop loading and show error message if 404 is returned when creating new account\u0027, () \u003d\u003e {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of({"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"      user: {"},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"        id: \u0027user\u0027,"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"        isAdmin: false,"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"        isInstructor: false,"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"        isStudent: false,"},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"        isMaintainer: false,"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"      masquerade: false,"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    jest.spyOn(courseService, \u0027getJoinCourseStatus\u0027).mockReturnValue(throwError({"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"      status: 404,"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":"    component.ngOnInit();"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.entityType).toBe(\u0027instructor\u0027);"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.isCreatingAccount).toBeTruthy();"},{"lineNumber":308,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.isLoading).toBeFalsy();"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.validUrl).toBeFalsy();"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":"});"}],"authorContributionMap":{"-":200,"samuelfangjw":111}},{"path":"src/web/app/user-join-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { environment } from \u0027../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import { AccountService } from \u0027../services/account.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../services/auth.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../services/course.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../services/navigation.service\u0027;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import { TimezoneService } from \u0027../services/timezone.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { AuthInfo, JoinStatus } from \u0027../types/api-output\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027./components/error-report/error-report.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027./error-message-output\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * User join page component."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  selector: \u0027tm-user-join-page\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./user-join-page.component.html\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./user-join-page.component.scss\u0027],"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class UserJoinPageComponent implements OnInit {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  isLoading: boolean \u003d true;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  isCreatingAccount: boolean \u003d false;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  hasJoined: boolean \u003d false;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  validUrl: boolean \u003d true;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  entityType: string \u003d \u0027\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  key: string \u003d \u0027\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  userId: string \u003d \u0027\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"              private accountService: AccountService,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal) {}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      this.entityType \u003d queryParams.entitytype;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      this.key \u003d queryParams.key;"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      this.isCreatingAccount \u003d queryParams.iscreatingaccount \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"      // Create account request can only come from instructor."},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"      if (this.isCreatingAccount) {"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        this.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"      }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search.replace(/\u0026/g, \u0027%26\u0027)}`;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!auth.user) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          this.isLoading \u003d false;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          if (this.entityType \u003d\u003d\u003d \u0027student\u0027) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          } else if (this.entityType \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            window.location.href \u003d `${this.backendUrl}${auth.instructorLoginUrl}`;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.userId \u003d auth.user.id;"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        this.courseService"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"          .getJoinCourseStatus(this.key, this.entityType, this.isCreatingAccount)"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"          .subscribe((resp: JoinStatus) \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            this.hasJoined \u003d resp.hasJoined;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (this.hasJoined) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"              // The regkey has been used; simply redirect the user to their home page,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"              // regardless of whether the regkey matches or not."},{"lineNumber":75,"author":{"gitId":"-"},"content":"              this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"              this.isLoading \u003d false;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              this.validUrl \u003d false;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"              this.isLoading \u003d false;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            modalRef.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            modalRef.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * Joins the course."},{"lineNumber":95,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  joinCourse(): void {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.courseService.joinCourse(this.key, this.entityType).subscribe(() \u003d\u003e {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      this.navigationService.navigateByURL(this.router, `/web/${this.entityType}`);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"   * Creates an account."},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"   * Account is only created after instructor joins for the first time."},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"  createAccount(): void {"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    this.isLoading \u003d true;"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    this.accountService"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"      .createAccount(this.key, this.timezoneService.guessTimezone())"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      .pipe(finalize(() \u003d\u003e {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.isLoading \u003d false;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      }))"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"      .subscribe("},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        () \u003d\u003e {"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"          this.navigationService.navigateByURL(this.router, \u0027/web/instructor\u0027);"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        },"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"          if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"            this.validUrl \u003d false;"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"          } else {"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"            const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"            modalRef.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"            modalRef.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"          }"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        },"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"      );"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":93,"samuelfangjw":40}},{"path":"src/web/app/user-join-page.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import { LoadingSpinnerModule } from \u0027./components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { UserJoinPageComponent } from \u0027./user-join-page.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":8,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    component: UserJoinPageComponent,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":12,"author":{"gitId":"-"},"content":"];"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Module for user join page."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":19,"author":{"gitId":"-"},"content":"    UserJoinPageComponent,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":22,"author":{"gitId":"-"},"content":"    UserJoinPageComponent,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    LoadingSpinnerModule,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":29,"author":{"gitId":"-"},"content":"})"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export class UserJoinPageModule { }"}],"authorContributionMap":{"-":28,"samuelfangjw":2}},{"path":"src/web/services/account.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AccountCreateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AccountService } from \u0027./account.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"describe(\u0027AccountService\u0027, () \u003d\u003e {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  let spyHttpRequestService: any;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  let service: AccountService;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  const id: string \u003d \u0027TestID\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    spyHttpRequestService \u003d {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      get: jest.fn(),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      post: jest.fn(),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      put: jest.fn(),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      delete: jest.fn(),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":22,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":25,"author":{"gitId":"-"},"content":"        { provide: HttpRequestService, useValue: spyHttpRequestService },"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    service \u003d TestBed.inject(AccountService);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  it(\u0027should be created\u0027, () \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    expect(service).toBeTruthy();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET on account endpoint\u0027, () \u003d\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    service.getAccount(id);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should execute GET on accounts endpoint\u0027, () \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    const email \u003d \u0027email@gmail.tmt\u0027;"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    service.getAccounts(email);"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"      useremail: email,"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNTS, paramMap);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should execute POST on account endpoint with timezone string\u0027, () \u003d\u003e {"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    const testKey: string \u003d \u0027testKey\u0027;"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    const testTimezone: string \u003d \u0027UTC\u0027;"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"      key: testKey,"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"      timezone: testTimezone,"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    service.createAccount(testKey, testTimezone);"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should execute POST on account endpoint with empty timezone string\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    const testKey: string \u003d \u0027testKey\u0027;"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"      key: testKey,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    service.createAccount(testKey, \u0027\u0027);"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should execute POST on account request endpoint\u0027, () \u003d\u003e {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    const testRequest: AccountCreateRequest \u003d {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      instructorEmail: \u0027testEmail\u0027,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      instructorInstitution: \u0027testInstitution\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      instructorName: \u0027testName\u0027,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    service.createAccountRequest(testRequest);"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_REQUEST, {}, testRequest);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  it(\u0027should execute DELETE on account endpoint\u0027, () \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    service.deleteAccount(id);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should execute DELETE on account request endpoint\u0027, () \u003d\u003e {"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    service.deleteAccountRequest(\u0027testEmail\u0027, \u0027testInstitution\u0027);"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"      instructoremail: \u0027testEmail\u0027,"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"      instructorinstitution: \u0027testInstitution\u0027,"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_REQUEST, paramMap);"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should execute PUT on account request reset endpoint\u0027, () \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    service.resetAccountRequest(\u0027testEmail\u0027, \u0027testInstitution\u0027);"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"      instructoremail: \u0027testEmail\u0027,"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"      instructorinstitution: \u0027testInstitution\u0027,"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_REQUEST_RESET, paramMap);"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT on account/downgrade endpoint\u0027, () \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    service.downgradeAccount(id);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_DOWNGRADE, paramMap);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT on account/reset endpoint for student\u0027, () \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    service.resetStudentAccount(id, \u0027testStudentEmail\u0027);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      courseid: id,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      studentemail: \u0027testStudentEmail\u0027,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_RESET, paramMap);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT on account/reset endpoint for instructor\u0027, () \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    service.resetInstructorAccount(id, \u0027testInstructorEmail\u0027);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      courseid: id,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      instructoremail: \u0027testInstructorEmail\u0027,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_RESET, paramMap);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":133,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":84,"samuelfangjw":49}},{"path":"src/web/services/account.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import { Account, Accounts, JoinLink, MessageOutput } from \u0027../types/api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AccountCreateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Handles account related logic provision"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class AccountService {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  constructor(private httpRequestService: HttpRequestService) {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   * Creates an account by calling API."},{"lineNumber":20,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"  createAccount(key: string, timezone: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { key };"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    if (timezone) {"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      paramMap.timezone \u003d timezone;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    return this.httpRequestService.post(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"   * Creates an account request by calling API."},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"  createAccountRequest(request: AccountCreateRequest): Observable\u003cJoinLink\u003e {"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    return this.httpRequestService.post(ResourceEndpoints.ACCOUNT_REQUEST, {}, request);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * Downgrades an account from instructor to student by calling API."},{"lineNumber":38,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  downgradeAccount(id: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.ACCOUNT_DOWNGRADE, paramMap);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   * Deletes an account by calling API."},{"lineNumber":48,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  deleteAccount(id: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"   * Deletes an account request by calling API."},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"  deleteAccountRequest(email: string, institute: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"      instructoremail: email,"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"      instructorinstitution: institute,"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.ACCOUNT_REQUEST, paramMap);"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"   * Resets an account request by calling API."},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"  resetAccountRequest(email: string, institute: string): Observable\u003cJoinLink\u003e {"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"      instructoremail: email,"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"      instructorinstitution: institute,"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    return this.httpRequestService.put(ResourceEndpoints.ACCOUNT_REQUEST_RESET, paramMap);"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * Resets a student account by calling API."},{"lineNumber":80,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  resetStudentAccount(courseId: string, studentEmail: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.ACCOUNT_RESET, paramMap);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * Resets an instructor account by calling API."},{"lineNumber":91,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  resetInstructorAccount(courseId: string, instructorEmail: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      instructoremail: instructorEmail,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.ACCOUNT_RESET, paramMap);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * Gets an account by calling API."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  getAccount(googleId: string): Observable\u003cAccount\u003e {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      instructorid: googleId,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"   * Gets accounts by calling API."},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"  getAccounts(email: string): Observable\u003cAccounts\u003e {"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"      useremail: email,"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    return this.httpRequestService.get(ResourceEndpoints.ACCOUNTS, paramMap);"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":74,"samuelfangjw":46}},{"path":"src/web/services/course.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CourseArchiveRequest, CourseCreateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027./course.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"describe(\u0027CourseService\u0027, () \u003d\u003e {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  let spyHttpRequestService: any;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  let service: CourseService;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    spyHttpRequestService \u003d {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      get: jest.fn(),"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      post: jest.fn(),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      put: jest.fn(),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      delete: jest.fn(),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":21,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":24,"author":{"gitId":"-"},"content":"        { provide: HttpRequestService, useValue: spyHttpRequestService },"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    service \u003d TestBed.inject(CourseService);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  it(\u0027should be created\u0027, () \u003d\u003e {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    expect(service).toBeTruthy();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET on courses endpoint with course status as an instructor\u0027, () \u003d\u003e {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    const courseStatus: string \u003d \u0027active\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      coursestatus: courseStatus,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    service.getAllCoursesAsInstructor(courseStatus);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET on course endpoint with course id as an instructor\u0027, () \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    service.getCourseAsInstructor(courseId);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when getting all courses as student\u0027, () \u003d\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    service.getAllCoursesAsStudent();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when getting specific course as student\u0027, () \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    service.getCourseAsStudent(courseId);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  it(\u0027should GET student courses data of a given google id in masquerade mode\u0027, () \u003d\u003e {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    const googleId: string \u003d \u0027test-id\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    service.getStudentCoursesInMasqueradeMode(googleId);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  it(\u0027should GET instructor courses data of a given google id in masquerade mode\u0027, () \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    const googleId: string \u003d \u0027test-id\u0027;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    const activeCoursesParamMap: { [key: string]: string } \u003d {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      coursestatus: \u0027active\u0027,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    const archivedCoursesParamMap: { [key: string]: string } \u003d {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      coursestatus: \u0027archived\u0027,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    service.getInstructorCoursesInMasqueradeMode(googleId);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, activeCoursesParamMap);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, archivedCoursesParamMap);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when getting all active instructor courses\u0027, () \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      coursestatus: \u0027active\u0027,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    service.getInstructorCoursesThatAreActive();"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  it(\u0027should execute POST to create course\u0027, () \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    const request: CourseCreateRequest \u003d {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      courseId: \u0027test-id\u0027,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      courseName: \u0027test-name\u0027,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      timeZone: \u0027test-zone\u0027,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {};"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    service.createCourse(request);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap, request);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT to update course\u0027, () \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    const request: CourseCreateRequest \u003d {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      courseId: courseid,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      courseName: \u0027test-name\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      timeZone: \u0027test-zone\u0027,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    service.updateCourse(courseid, request);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap, request);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  it(\u0027should execute DELETE to delete course\u0027, () \u003d\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    service.deleteCourse(courseid);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT to archive course\u0027, () \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    const request: CourseArchiveRequest \u003d {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      archiveStatus: true,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    service.changeArchiveStatus(courseid, request);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put)"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        .toHaveBeenCalledWith(ResourceEndpoints.COURSE_ARCHIVE, paramMap, request);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT to bin course\u0027, () \u003d\u003e {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    service.binCourse(courseid);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.BIN_COURSE, paramMap);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"  it(\u0027should execute DELETE to restore course\u0027, () \u003d\u003e {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    service.restoreCourse(courseid);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.BIN_COURSE, paramMap);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET to retrieve join course status\u0027, () \u003d\u003e {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    const regKey: string \u003d \u0027ABC\u0027;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    const entityType: string \u003d \u0027instructor\u0027;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      key: regKey,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      entitytype: entityType,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"    service.getJoinCourseStatus(regKey, entityType, false);"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"    paramMap.iscreatingaccount \u003d \u0027true\u0027;"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    service.getJoinCourseStatus(regKey, entityType, true);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT when joining course\u0027, () \u003d\u003e {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      key: \u0027123\u0027,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    service.joinCourse(paramMap.key, paramMap.entitytype);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"  it(\u0027should execute POST to remind unregistered students of a course\u0027, () \u003d\u003e {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    service.remindUnregisteredStudentsForJoin(courseid);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"  it(\u0027should execute POST to remind particular student\u0027, () \u003d\u003e {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    const studentEmail: string \u003d \u0027test@example.com\u0027;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    service.remindStudentForJoin(courseId, studentEmail);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"  it(\u0027should execute POST to remind particular instructor\u0027, () \u003d\u003e {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    const instructorEmail: string \u003d \u0027test@example.com\u0027;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      instructoremail: instructorEmail,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    service.remindInstructorForJoin(courseId, instructorEmail);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET to check responses for course\u0027, () \u003d\u003e {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    service.hasResponsesForCourse(courseId);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.HAS_RESPONSES, paramMap);"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"  it(\u0027should execute DELETE to remove student from course\u0027, () \u003d\u003e {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    const studentEmail: string \u003d \u0027test@example.com\u0027;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    const paramsMap: { [key: string]: string } \u003d {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    service.removeStudentFromCourse(courseId, studentEmail);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.STUDENT, paramsMap);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when getting course section names\u0027, () \u003d\u003e {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      courseid: \u0027CS3281\u0027,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    service.getCourseSectionNames(paramMap.courseid);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSE_SECTIONS, paramMap);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":244,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":239,"samuelfangjw":5}},{"path":"src/web/services/course.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { forkJoin, Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Course, CourseArchive, Courses, HasResponses, JoinStatus, MessageOutput, Student } from \u0027../types/api-output\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { CourseArchiveRequest, CourseCreateRequest, CourseUpdateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * The statistics of a course"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export interface CourseStatistics {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  numOfSections: number;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  numOfTeams: number;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  numOfStudents: number;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Handles course related logic provision."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class CourseService {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  constructor(private httpRequestService: HttpRequestService) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * Gets all course data for an instructor by calling API."},{"lineNumber":31,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  getAllCoursesAsInstructor(courseStatus: string): Observable\u003cCourses\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      coursestatus: courseStatus,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * Get course data by calling API as an instructor."},{"lineNumber":42,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  getCourseAsInstructor(courseId: string): Observable\u003cCourse\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * Gets all course data for a student by calling API."},{"lineNumber":53,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  getAllCoursesAsStudent(): Observable\u003cCourses\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * Get course data by calling API as a student."},{"lineNumber":63,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  getCourseAsStudent(courseId: string): Observable\u003cCourse\u003e {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"   * Get student courses data of a given google id in masquerade mode by calling API."},{"lineNumber":74,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  getStudentCoursesInMasqueradeMode(googleId: string): Observable\u003cCourses\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":84,"author":{"gitId":"-"},"content":"   * Get instructor courses data of a given google id in masquerade mode by calling API."},{"lineNumber":85,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  getInstructorCoursesInMasqueradeMode(googleId: string): Observable\u003cCourses\u003e {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    const activeCoursesParamMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      coursestatus: \u0027active\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    const archivedCoursesParamMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      coursestatus: \u0027archived\u0027,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    return forkJoin(["},{"lineNumber":99,"author":{"gitId":"-"},"content":"      this.httpRequestService.get(ResourceEndpoints.COURSES, activeCoursesParamMap),"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      this.httpRequestService.get(ResourceEndpoints.COURSES, archivedCoursesParamMap),"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ]).pipe("},{"lineNumber":102,"author":{"gitId":"-"},"content":"        map((vals: Courses[]) \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          return {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            courses: vals[0].courses.concat(vals[1].courses),"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   * Get active instructor courses."},{"lineNumber":112,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  getInstructorCoursesThatAreActive(): Observable\u003cCourses\u003e {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSES, {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      coursestatus: \u0027active\u0027,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Creates a course by calling API."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  createCourse(request: CourseCreateRequest): Observable\u003cCourse\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.COURSE, paramMap, request);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * Updates a course by calling API."},{"lineNumber":130,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  updateCourse(courseid: string, request: CourseUpdateRequest): Observable\u003cCourse\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.COURSE, paramMap, request);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Deletes a course by calling API."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  deleteCourse(courseid: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   * Changes the archive status of a course by calling API."},{"lineNumber":146,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  changeArchiveStatus(courseid: string, request: CourseArchiveRequest): Observable\u003cCourseArchive\u003e {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.COURSE_ARCHIVE, paramMap, request);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * Bin (soft-delete) a course by calling API."},{"lineNumber":154,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  binCourse(courseid: string): Observable\u003cCourse\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.BIN_COURSE, paramMap);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":161,"author":{"gitId":"-"},"content":"   * Restore a soft-deleted course by calling API."},{"lineNumber":162,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  restoreCourse(courseid: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.BIN_COURSE, paramMap);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   * Get the status of whether the entity has joined the course by calling API."},{"lineNumber":170,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"  getJoinCourseStatus(regKey: string, entityType: string, isCreatingAccount: boolean): Observable\u003cJoinStatus\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      key: regKey,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      entitytype: entityType,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"    if (isCreatingAccount) {"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"      paramMap.iscreatingaccount \u003d \u0027true\u0027;"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":185,"author":{"gitId":"-"},"content":"   * Join a course by calling API."},{"lineNumber":186,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  joinCourse(regKey: string, entityType: string): Observable\u003cany\u003e {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      key: regKey,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      entitytype: entityType,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   * Send join reminder emails to unregistered students."},{"lineNumber":197,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  remindUnregisteredStudentsForJoin(courseId: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   * Send join reminder email to a student."},{"lineNumber":207,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  remindStudentForJoin(courseId: string, studentEmail: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":217,"author":{"gitId":"-"},"content":"   * Send join reminder email to an instructor."},{"lineNumber":218,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  remindInstructorForJoin(courseId: string, instructorEmail: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      instructoremail: instructorEmail,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":228,"author":{"gitId":"-"},"content":"   * Checks if there are responses for a course (request sent by instructor)."},{"lineNumber":229,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  hasResponsesForCourse(courseId: string): Observable\u003cHasResponses\u003e {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.HAS_RESPONSES, paramMap);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":239,"author":{"gitId":"-"},"content":"   * Removes student from course."},{"lineNumber":240,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  removeStudentFromCourse(courseId: string, studentEmail: string): Observable\u003cany\u003e {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    const paramsMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.STUDENT, paramsMap);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":250,"author":{"gitId":"-"},"content":"   * Gets a list of course section names."},{"lineNumber":251,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  getCourseSectionNames(courseId: string): Observable\u003cany\u003e {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    const paramsMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSE_SECTIONS, paramsMap);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":260,"author":{"gitId":"-"},"content":"   * Calculates the statistics for a course from a list of students in the course"},{"lineNumber":261,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  calculateCourseStatistics(students: Student[]): CourseStatistics {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    const teams: Set\u003cstring\u003e \u003d new Set();"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    const sections: Set\u003cstring\u003e \u003d new Set();"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    students.forEach((student: Student) \u003d\u003e {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      teams.add(student.teamName);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      sections.add(student.sectionName);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      numOfSections: sections.size,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      numOfTeams: teams.size,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      numOfStudents: students.length,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":269,"samuelfangjw":6}},{"path":"src/web/services/feedback-questions.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { default as templateQuestions } from \u0027../data/template-questions.json\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackMsqQuestionDetails,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackQuestionDetails, FeedbackQuestionRecipients, FeedbackQuestions,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  FeedbackRankOptionsQuestionDetails, FeedbackRubricQuestionDetails,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027../types/api-output\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { FeedbackQuestionCreateRequest, FeedbackQuestionUpdateRequest, Intent } from \u0027../types/api-request\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS, DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  DEFAULT_CONTRIBUTION_QUESTION_DETAILS,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  DEFAULT_MCQ_QUESTION_DETAILS,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  DEFAULT_MSQ_QUESTION_DETAILS,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  DEFAULT_NUMSCALE_QUESTION_DETAILS,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  DEFAULT_RANK_OPTIONS_QUESTION_DETAILS,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  DEFAULT_RUBRIC_QUESTION_DETAILS,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  DEFAULT_TEXT_QUESTION_DETAILS,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"} from \u0027../types/default-question-structs\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { NO_VALUE } from \u0027../types/feedback-response-details\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../types/visibility-control\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027./visibility-state-machine\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * A template question."},{"lineNumber":35,"author":{"gitId":"-"},"content":" */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"export interface TemplateQuestion {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  description: string;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  question: FeedbackQuestion;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Handles feedback question logic provision."},{"lineNumber":43,"author":{"gitId":"-"},"content":" */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"})"},{"lineNumber":47,"author":{"gitId":"-"},"content":"export class FeedbackQuestionsService {"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  constructor(private httpRequestService: HttpRequestService) { }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * Gets allowed feedback paths based on question type as some feedback paths does not make"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * sense under certain question."},{"lineNumber":54,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  getAllowedFeedbackPaths(type: FeedbackQuestionType): Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    const paths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    switch (type) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONTRIB:"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.STUDENTS, [FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_RECIPIENTS:"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.SELF,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.STUDENTS, FeedbackParticipantType.STUDENTS_IN_SAME_SECTION,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.TEAMS_IN_SAME_SECTION]);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.STUDENTS,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.STUDENTS, FeedbackParticipantType.STUDENTS_IN_SAME_SECTION,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.TEAMS_IN_SAME_SECTION,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.STUDENTS, FeedbackParticipantType.STUDENTS_IN_SAME_SECTION,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.TEAMS_IN_SAME_SECTION]);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.TEAMS,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.STUDENTS, FeedbackParticipantType.STUDENTS_IN_SAME_SECTION,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.TEAMS_IN_SAME_SECTION,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.TEXT:"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MCQ:"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MSQ:"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.NUMSCALE:"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_OPTIONS:"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RUBRIC:"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_OPTIONS:"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.SELF,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.SELF, FeedbackParticipantType.STUDENTS,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.STUDENTS_IN_SAME_SECTION,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.TEAMS_IN_SAME_SECTION,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM, FeedbackParticipantType.NONE]);"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.STUDENTS,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.SELF, FeedbackParticipantType.STUDENTS,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.STUDENTS_IN_SAME_SECTION,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.TEAMS_IN_SAME_SECTION,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM, FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.NONE]);"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.SELF, FeedbackParticipantType.STUDENTS,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.STUDENTS_IN_SAME_SECTION,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.TEAMS_IN_SAME_SECTION,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM, FeedbackParticipantType.NONE]);"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.TEAMS,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.SELF, FeedbackParticipantType.STUDENTS,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.STUDENTS_IN_SAME_SECTION,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.TEAMS_IN_SAME_SECTION,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.NONE]);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    return paths;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":127,"author":{"gitId":"-"},"content":"   * Gets common feedback paths based on question type."},{"lineNumber":128,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  getCommonFeedbackPaths(type: FeedbackQuestionType): Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    const paths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    switch (type) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONTRIB:"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.STUDENTS, [FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_RECIPIENTS:"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.SELF, [FeedbackParticipantType.INSTRUCTORS]);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.STUDENTS,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.INSTRUCTORS, [FeedbackParticipantType.INSTRUCTORS]);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.TEXT:"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MCQ:"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MSQ:"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.NUMSCALE:"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_OPTIONS:"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RUBRIC:"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_OPTIONS:"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.SELF,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            [FeedbackParticipantType.NONE, FeedbackParticipantType.SELF, FeedbackParticipantType.INSTRUCTORS]);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.STUDENTS,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"          [FeedbackParticipantType.NONE, FeedbackParticipantType.SELF, FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        paths.set(FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            [FeedbackParticipantType.NONE, FeedbackParticipantType.SELF, FeedbackParticipantType.INSTRUCTORS]);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    return paths;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   * Gets a state machine of visibility settings under {@code giverType} and {@code recipientType}."},{"lineNumber":165,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  getNewVisibilityStateMachine(giverType: FeedbackParticipantType,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                               recipientType: FeedbackParticipantType): VisibilityStateMachine {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    return new VisibilityStateMachine(giverType, recipientType);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":172,"author":{"gitId":"-"},"content":"   * Gets common feedback visibility settings under a feedback question type."},{"lineNumber":173,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":174,"author":{"gitId":"-"},"content":"   * @param visibilityStateMachine the state machine with current giverType and recipientType."},{"lineNumber":175,"author":{"gitId":"-"},"content":"   * @param type the feedback question type."},{"lineNumber":176,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  getCommonFeedbackVisibilitySettings(visibilityStateMachine: VisibilityStateMachine,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                                      type: FeedbackQuestionType): CommonVisibilitySetting[] {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    let settings: CommonVisibilitySetting[] \u003d [];"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    switch (type) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONTRIB:"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        settings.push({"},{"lineNumber":183,"author":{"gitId":"-"},"content":"          name: \"Shown anonymously to recipient and giver\u0027s team members, visible to instructors\","},{"lineNumber":184,"author":{"gitId":"-"},"content":"          visibilitySettings: {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"              FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":189,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }, {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"          name: \u0027Visible to instructors only\u0027,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"          visibilitySettings: {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.TEXT:"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MCQ:"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MSQ:"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.NUMSCALE:"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_OPTIONS:"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_RECIPIENTS:"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RUBRIC:"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_OPTIONS:"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        settings.push({"},{"lineNumber":209,"author":{"gitId":"-"},"content":"          name: \u0027Shown anonymously to recipient and instructors\u0027,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"          visibilitySettings: {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            SHOW_GIVER_NAME: [],"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":214,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }, {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          name: \u0027Shown anonymously to recipient, visible to instructors\u0027,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"          visibilitySettings: {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":221,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }, {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"          name: \"Shown anonymously to recipient and giver/recipient\u0027s team members, visible to instructors\","},{"lineNumber":224,"author":{"gitId":"-"},"content":"          visibilitySettings: {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"              FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.RECIPIENT_TEAM_MEMBERS,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            ],"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }, {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"          name: \"Shown anonymously to recipient and giver\u0027s team members, visible to instructors\","},{"lineNumber":233,"author":{"gitId":"-"},"content":"          visibilitySettings: {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"              FeedbackVisibilityType.GIVER_TEAM_MEMBERS,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            ],"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":239,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }, {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"          name: \u0027Visible to instructors only\u0027,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"          visibilitySettings: {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":246,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }, {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"          name: \u0027Visible to recipient and instructors\u0027,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"          visibilitySettings: {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":253,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    // filter common settings based on visibility state"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    // (i.e. some common settings does not make sense under certain state)"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    settings \u003d settings.filter((setting: CommonVisibilitySetting) \u003d\u003e {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      for (const visibilityType of setting.visibilitySettings.SHOW_RESPONSE) {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        if (!visibilityStateMachine.isVisibilityTypeApplicable(visibilityType)) {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"          return false;"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      for (const visibilityType of setting.visibilitySettings.SHOW_GIVER_NAME) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        if (!visibilityStateMachine.isVisibilityTypeApplicable(visibilityType)) {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"          return false;"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      for (const visibilityType of setting.visibilitySettings.SHOW_RECIPIENT_NAME) {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (!visibilityStateMachine.isVisibilityTypeApplicable(visibilityType)) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"          return false;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    return settings;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":284,"author":{"gitId":"-"},"content":"   * Returns whether setting custom feedback visibility is allowed."},{"lineNumber":285,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  isCustomFeedbackVisibilitySettingAllowed(type: FeedbackQuestionType): boolean {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    switch (type) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.TEXT:"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONTRIB:"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MCQ:"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.NUMSCALE:"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MSQ:"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_OPTIONS:"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_RECIPIENTS:"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RUBRIC:"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_OPTIONS:"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        throw new Error(`Unsupported question type: ${type}`);"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":313,"author":{"gitId":"-"},"content":"   * Gets the model (contains default values) for new question."},{"lineNumber":314,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":315,"author":{"gitId":"-"},"content":"  getNewQuestionModel(type: FeedbackQuestionType): NewQuestionModel {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    switch (type) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.TEXT:"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"          questionDetails: DEFAULT_TEXT_QUESTION_DETAILS(),"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":331,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":332,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONTRIB:"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"          questionDetails: DEFAULT_CONTRIBUTION_QUESTION_DETAILS(),"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF,"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"},{"lineNumber":349,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":350,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.NUMSCALE:"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":358,"author":{"gitId":"-"},"content":""},{"lineNumber":359,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"          questionDetails: DEFAULT_NUMSCALE_QUESTION_DETAILS(),"},{"lineNumber":361,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":362,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":367,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":368,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MCQ: {"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        const mcqQuestionDetails: FeedbackMcqQuestionDetails \u003d DEFAULT_MCQ_QUESTION_DETAILS();"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        mcqQuestionDetails.mcqChoices \u003d [\u0027\u0027, \u0027\u0027];"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":381,"author":{"gitId":"-"},"content":"          questionDetails: mcqQuestionDetails,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":383,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"},{"lineNumber":389,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":390,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.MSQ: {"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"        const msqQuestionDetails: FeedbackMsqQuestionDetails \u003d DEFAULT_MSQ_QUESTION_DETAILS();"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        msqQuestionDetails.msqChoices \u003d [\u0027\u0027, \u0027\u0027];"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        msqQuestionDetails.minSelectableChoices \u003d NO_VALUE;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        msqQuestionDetails.maxSelectableChoices \u003d NO_VALUE;"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.MSQ,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"          questionDetails: msqQuestionDetails,"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"},{"lineNumber":415,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":416,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_OPTIONS: {"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"        const rankOptionsQuestionDetails: FeedbackRankOptionsQuestionDetails \u003d DEFAULT_RANK_OPTIONS_QUESTION_DETAILS();"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        rankOptionsQuestionDetails.maxOptionsToBeRanked \u003d NO_VALUE;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        rankOptionsQuestionDetails.minOptionsToBeRanked \u003d NO_VALUE;"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        rankOptionsQuestionDetails.options \u003d [\u0027\u0027, \u0027\u0027];"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.RANK_OPTIONS,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"          questionDetails: rankOptionsQuestionDetails,"},{"lineNumber":433,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":434,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"            FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"},{"lineNumber":440,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":441,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RANK_RECIPIENTS:"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":449,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":452,"author":{"gitId":"-"},"content":"          questionDetails: DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS(),"},{"lineNumber":453,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":459,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":460,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.RUBRIC: {"},{"lineNumber":464,"author":{"gitId":"-"},"content":""},{"lineNumber":465,"author":{"gitId":"-"},"content":"        const rubricQuestionDetails: FeedbackRubricQuestionDetails \u003d DEFAULT_RUBRIC_QUESTION_DETAILS();"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        rubricQuestionDetails.rubricChoices \u003d [\u0027Strongly Disagree\u0027, \u0027Disagree\u0027, \u0027Agree\u0027, \u0027Strongly Agree\u0027];"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        rubricQuestionDetails.rubricSubQuestions \u003d"},{"lineNumber":468,"author":{"gitId":"-"},"content":"            [\u0027This student participates well in online discussions.\u0027, \u0027This student completes assigned tasks on time.\u0027];"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        rubricQuestionDetails.rubricDescriptions \u003d ["},{"lineNumber":470,"author":{"gitId":"-"},"content":"          [\u0027Rarely or never responds.\u0027, \u0027Occasionally responds, but never initiates discussions.\u0027,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"            \u0027Takes part in discussions and sometimes initiates discussions.\u0027,"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            \u0027Initiates discussions frequently, and engages the team.\u0027],"},{"lineNumber":473,"author":{"gitId":"-"},"content":"          [\u0027Rarely or never completes tasks.\u0027, \u0027Often misses deadlines.\u0027, \u0027Occasionally misses deadlines.\u0027,"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            \u0027Tasks are always completed before the deadline.\u0027]];"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"          questionDetails: rubricQuestionDetails,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":488,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":489,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":491,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_OPTIONS:"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":497,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.CONSTSUM_OPTIONS,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"          questionDetails: DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS(),"},{"lineNumber":501,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":503,"author":{"gitId":"-"},"content":""},{"lineNumber":504,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":507,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":508,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":514,"author":{"gitId":"-"},"content":"          questionBrief: \u0027\u0027,"},{"lineNumber":515,"author":{"gitId":"-"},"content":"          questionDescription: \u0027\u0027,"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"          questionType: FeedbackQuestionType.CONSTSUM_RECIPIENTS,"},{"lineNumber":518,"author":{"gitId":"-"},"content":"          questionDetails: DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS(),"},{"lineNumber":519,"author":{"gitId":"-"},"content":"          giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":525,"author":{"gitId":"-"},"content":"          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":526,"author":{"gitId":"-"},"content":"          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        throw new Error(`Unsupported question type ${type}`);"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":532,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":535,"author":{"gitId":"-"},"content":"   * Gets feedback questions."},{"lineNumber":536,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":537,"author":{"gitId":"-"},"content":"  getFeedbackQuestions(queryParams: {"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    courseId: string,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    feedbackSessionName: string,"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    intent: Intent,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    key?: string,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    moderatedPerson?: string,"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    previewAs?: string,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"  }): Observable\u003cFeedbackQuestions\u003e {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":546,"author":{"gitId":"-"},"content":"      intent: queryParams.intent,"},{"lineNumber":547,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      fsname: queryParams.feedbackSessionName,"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"    if (queryParams.key) {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      paramMap.key \u003d queryParams.key;"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"    if (queryParams.moderatedPerson) {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"      paramMap.moderatedperson \u003d queryParams.moderatedPerson;"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"-"},"content":"    if (queryParams.previewAs) {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"      paramMap.previewas \u003d queryParams.previewAs;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":562,"author":{"gitId":"-"},"content":""},{"lineNumber":563,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.QUESTIONS, paramMap);"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":568,"author":{"gitId":"-"},"content":"   * Checks whether the current question is allowed to have participant comment."},{"lineNumber":569,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":570,"author":{"gitId":"-"},"content":"  isAllowedToHaveParticipantComment(questionType: FeedbackQuestionType): boolean {"},{"lineNumber":571,"author":{"gitId":"samuelfangjw"},"content":"    return questionType \u003d\u003d\u003d FeedbackQuestionType.MCQ || questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ;"},{"lineNumber":572,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":575,"author":{"gitId":"-"},"content":"   * Gets template questions."},{"lineNumber":576,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":577,"author":{"gitId":"-"},"content":"  getTemplateQuestions(): TemplateQuestion[] {"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    return templateQuestions as any;"},{"lineNumber":579,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":582,"author":{"gitId":"-"},"content":"   * Creates a feedback question by calling API."},{"lineNumber":583,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":584,"author":{"gitId":"-"},"content":"  createFeedbackQuestion(courseId: string, feedbackSessionName: string,"},{"lineNumber":585,"author":{"gitId":"-"},"content":"                         request: FeedbackQuestionCreateRequest): Observable\u003cFeedbackQuestion\u003e {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      fsname: feedbackSessionName,"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":590,"author":{"gitId":"-"},"content":""},{"lineNumber":591,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.QUESTION, paramMap, request);"},{"lineNumber":592,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":593,"author":{"gitId":"-"},"content":""},{"lineNumber":594,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":595,"author":{"gitId":"-"},"content":"   * Saves a feedback question by calling API."},{"lineNumber":596,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":597,"author":{"gitId":"-"},"content":"  saveFeedbackQuestion(feedbackQuestionId: string, request: FeedbackQuestionUpdateRequest):"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      Observable\u003cFeedbackQuestion\u003e {"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { questionid: feedbackQuestionId };"},{"lineNumber":600,"author":{"gitId":"-"},"content":""},{"lineNumber":601,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.QUESTION, paramMap, request);"},{"lineNumber":602,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":605,"author":{"gitId":"-"},"content":"   * Deletes a feedback question"},{"lineNumber":606,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":607,"author":{"gitId":"-"},"content":"  deleteFeedbackQuestion(feedbackQuestionId: string): Observable\u003cany\u003e {"},{"lineNumber":608,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { questionid: feedbackQuestionId };"},{"lineNumber":609,"author":{"gitId":"-"},"content":""},{"lineNumber":610,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.QUESTION, paramMap);"},{"lineNumber":611,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":612,"author":{"gitId":"-"},"content":""},{"lineNumber":613,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":614,"author":{"gitId":"-"},"content":"   * Get a list of feedback question recipients."},{"lineNumber":615,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":616,"author":{"gitId":"-"},"content":"  loadFeedbackQuestionRecipients(queryParams: {"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    questionId: string,"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    intent: Intent,"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    key: string,"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    moderatedPerson: string,"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    previewAs: string,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"  }): Observable\u003cFeedbackQuestionRecipients\u003e {"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      questionid: queryParams.questionId,"},{"lineNumber":625,"author":{"gitId":"-"},"content":"      intent: queryParams.intent,"},{"lineNumber":626,"author":{"gitId":"-"},"content":"      key: queryParams.key,"},{"lineNumber":627,"author":{"gitId":"-"},"content":"      moderatedperson: queryParams.moderatedPerson,"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      previewas: queryParams.previewAs,"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.QUESTION_RECIPIENTS, paramMap);"},{"lineNumber":631,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":632,"author":{"gitId":"-"},"content":"}"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":635,"author":{"gitId":"-"},"content":" * Type represents the common visibility setting."},{"lineNumber":636,"author":{"gitId":"-"},"content":" */"},{"lineNumber":637,"author":{"gitId":"-"},"content":"export interface CommonVisibilitySetting {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"  name: string;"},{"lineNumber":639,"author":{"gitId":"-"},"content":"  visibilitySettings: { [TKey in VisibilityControl]: FeedbackVisibilityType[] };"},{"lineNumber":640,"author":{"gitId":"-"},"content":"}"},{"lineNumber":641,"author":{"gitId":"-"},"content":""},{"lineNumber":642,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":643,"author":{"gitId":"-"},"content":" * The model for new question."},{"lineNumber":644,"author":{"gitId":"-"},"content":" */"},{"lineNumber":645,"author":{"gitId":"-"},"content":"export interface NewQuestionModel {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"  questionBrief: string;"},{"lineNumber":647,"author":{"gitId":"-"},"content":"  questionDescription: string;"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"  questionDetails: FeedbackQuestionDetails;"},{"lineNumber":651,"author":{"gitId":"-"},"content":""},{"lineNumber":652,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType;"},{"lineNumber":654,"author":{"gitId":"-"},"content":""},{"lineNumber":655,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting;"},{"lineNumber":656,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo?: number;"},{"lineNumber":657,"author":{"gitId":"-"},"content":""},{"lineNumber":658,"author":{"gitId":"-"},"content":"  showResponsesTo: FeedbackVisibilityType[];"},{"lineNumber":659,"author":{"gitId":"-"},"content":"  showGiverNameTo: FeedbackVisibilityType[];"},{"lineNumber":660,"author":{"gitId":"-"},"content":"  showRecipientNameTo: FeedbackVisibilityType[];"},{"lineNumber":661,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":660,"samuelfangjw":1}},{"path":"src/web/services/feedback-sessions.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { forkJoin, Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  InstructorSessionResultSectionType,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../app/pages-instructor/instructor-session-result-page/instructor-session-result-section-type.enum\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { default as templateSessions } from \u0027../data/template-sessions.json\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  FeedbackSessionStats,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmittedGiverSet,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  HasResponses,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  MessageOutput,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  OngoingSessions,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  SessionLinksRecoveryResponse,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  SessionResults,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"} from \u0027../types/api-output\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackSessionCreateRequest,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackSessionRespondentRemindRequest,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackSessionUpdateRequest,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  Intent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"} from \u0027../types/api-request\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { SessionResultCsvService } from \u0027./session-result-csv.service\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027./student.service\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * A template session."},{"lineNumber":36,"author":{"gitId":"-"},"content":" */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"export interface TemplateSession {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  name: string;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  questions: FeedbackQuestion[];"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Handles sessions related logic provision."},{"lineNumber":44,"author":{"gitId":"-"},"content":" */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"})"},{"lineNumber":48,"author":{"gitId":"-"},"content":"export class FeedbackSessionsService {"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  constructor(private httpRequestService: HttpRequestService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              private sessionResultCsvService: SessionResultCsvService,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              private studentService: StudentService) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * Gets template sessions."},{"lineNumber":57,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  getTemplateSessions(): TemplateSession[] {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    return templateSessions as any;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * Retrieves a feedback session by calling API."},{"lineNumber":64,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  getFeedbackSession(queryParams: {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    courseId: string,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    feedbackSessionName: string,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    intent: Intent,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    key?: string,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    moderatedPerson?: string,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    previewAs?: string,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }): Observable\u003cFeedbackSession\u003e {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    // load feedback session"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      intent: queryParams.intent,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      fsname: queryParams.feedbackSessionName,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    if (queryParams.key) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      paramMap.key \u003d queryParams.key;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    if (queryParams.moderatedPerson) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      paramMap.moderatedperson \u003d queryParams.moderatedPerson;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    if (queryParams.previewAs) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      paramMap.previewas \u003d queryParams.previewAs;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SESSION, paramMap);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"   * Creates a feedback session by calling API."},{"lineNumber":97,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  createFeedbackSession(courseId: string, request: FeedbackSessionCreateRequest): Observable\u003cFeedbackSession\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid: courseId };"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.SESSION, paramMap, request);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   * Updates a feedback session by calling API."},{"lineNumber":105,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  updateFeedbackSession(courseId: string, feedbackSessionName: string, request: FeedbackSessionUpdateRequest):"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      Observable\u003cFeedbackSession\u003e {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid: courseId, fsname: feedbackSessionName };"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.SESSION, paramMap, request);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   * Deletes a feedback session by calling API."},{"lineNumber":114,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  deleteFeedbackSession(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSession\u003e {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid: courseId, fsname: feedbackSessionName };"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.SESSION, paramMap);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Gets all ongoing session by calling API."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  getOngoingSessions(startTime: number, endTime: number): Observable\u003cOngoingSessions\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      starttime: String(startTime),"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      endtime: String(endTime),"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SESSIONS_ONGOING, paramMap);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":132,"author":{"gitId":"-"},"content":"   * Gets all sessions for the instructor by calling API."},{"lineNumber":133,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  getFeedbackSessionsForInstructor(courseId?: string): Observable\u003cFeedbackSessions\u003e {"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    let paramMap: Record\u003cstring, string\u003e;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    if (courseId) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      paramMap \u003d {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        entitytype: \u0027instructor\u0027,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        courseid: courseId,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      paramMap \u003d {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        entitytype: \u0027instructor\u0027,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        isinrecyclebin: \u0027false\u0027,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SESSIONS, paramMap);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * Gets all sessions in the recycle bin for the instructor by calling API."},{"lineNumber":154,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  getFeedbackSessionsInRecycleBinForInstructor(): Observable\u003cFeedbackSessions\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      isinrecyclebin: \u0027true\u0027,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SESSIONS, paramMap);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   * Gets all sessions for the student by calling API."},{"lineNumber":167,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  getFeedbackSessionsForStudent(entityType: string, courseId?: string): Observable\u003cFeedbackSessions\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    let paramMap: Record\u003cstring, string\u003e;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    if (courseId) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      paramMap \u003d {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        entitytype: entityType,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        courseid: courseId,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      paramMap \u003d {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        entitytype: entityType,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SESSIONS, paramMap);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"   * Checks if there are responses for a specific question in a feedback session (request sent by instructor)."},{"lineNumber":187,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  hasResponsesForQuestion(questionId: string): Observable\u003cHasResponses\u003e {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      questionid: questionId,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.HAS_RESPONSES, paramMap);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":197,"author":{"gitId":"-"},"content":"   * Checks if there is response of a student for a feedback session (request sent by student)."},{"lineNumber":198,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  hasStudentResponseForFeedbackSession(courseId: string, feedbackSessionName: string): Observable\u003cHasResponses\u003e {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      fsname: feedbackSessionName,"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.HAS_RESPONSES, paramMap);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * Checks if there is response of a student for an array of feedback sessions (request sent by student)."},{"lineNumber":211,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  hasStudentResponseForAllFeedbackSessionsInCourse(courseId: string): Observable\u003cHasResponses\u003e {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.HAS_RESPONSES, paramMap);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents who have not submitted their feedback."},{"lineNumber":223,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  remindFeedbackSessionSubmissionForRespondents("},{"lineNumber":225,"author":{"gitId":"-"},"content":"      courseId: string, feedbackSessionName: string, request: FeedbackSessionRespondentRemindRequest)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      : Observable\u003cMessageOutput\u003e {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      fsname: feedbackSessionName,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.SESSION_REMIND_SUBMISSION, paramMap, request);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":236,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents on the published results link."},{"lineNumber":237,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  remindResultsLinkToRespondents("},{"lineNumber":239,"author":{"gitId":"-"},"content":"      courseId: string, feedbackSessionName: string, request: FeedbackSessionRespondentRemindRequest)"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      : Observable\u003cMessageOutput\u003e {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      fsname: feedbackSessionName,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.SESSION_REMIND_RESULT, paramMap, request);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":250,"author":{"gitId":"-"},"content":"   * Gets a set of givers that has given at least one response in the feedback session."},{"lineNumber":251,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  getFeedbackSessionSubmittedGiverSet(queryParams: { courseId: string, feedbackSessionName: string }):"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      Observable\u003cFeedbackSessionSubmittedGiverSet\u003e {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      fsname: queryParams.feedbackSessionName,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SESSION_SUBMITTED_GIVER_SET, paramMap);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   * Gets a list of students who have not responded to feedback session."},{"lineNumber":263,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  getFeedbackSessionNonSubmitterList(courseId: string, feedbackSessionName: string):"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    Observable\u003cStudent[]\u003e {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    const allStudentsObservable: Observable\u003cStudents\u003e \u003d this.studentService.getStudentsFromCourse({"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      courseId,"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    const studentsWithResponseObservable: Observable\u003cFeedbackSessionSubmittedGiverSet\u003e \u003d"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      this.getFeedbackSessionSubmittedGiverSet({"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        courseId,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        feedbackSessionName,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    return forkJoin(["},{"lineNumber":275,"author":{"gitId":"-"},"content":"      allStudentsObservable,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      studentsWithResponseObservable,"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    ]).pipe(map((result: any[]) \u003d\u003e {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      const allStudents: Student[] \u003d (result[0] as Students).students;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      const studentEmailsWithResponse: string[] \u003d (result[1] as FeedbackSessionSubmittedGiverSet).giverIdentifiers;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      return allStudents.filter((student: Student) \u003d\u003e"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        !studentEmailsWithResponse.includes(student.email));"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    ));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":287,"author":{"gitId":"-"},"content":"   * Downloads list of non-responders."},{"lineNumber":288,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  downloadFeedbackSessionNonSubmitterList(courseId: string, feedbackSessionName: string):"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    Observable\u003cstring\u003e {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    return this.getFeedbackSessionNonSubmitterList(courseId, feedbackSessionName)"},{"lineNumber":292,"author":{"gitId":"-"},"content":"      .pipe(map((students: Student[]) \u003d\u003e"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        this.sessionResultCsvService.getCsvForNonSubmitterList(students),"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      ));"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":298,"author":{"gitId":"-"},"content":"   * publishes a feedback session."},{"lineNumber":299,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  publishFeedbackSession(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSession\u003e {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      fsname: feedbackSessionName,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.SESSION_PUBLISH, paramMap);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":310,"author":{"gitId":"-"},"content":"   * Unpublishes a feedback session."},{"lineNumber":311,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  unpublishFeedbackSession(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSession\u003e {"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      fsname: feedbackSessionName,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.SESSION_PUBLISH, paramMap);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":322,"author":{"gitId":"-"},"content":"   * Load session statistics."},{"lineNumber":323,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  loadSessionStatistics(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSessionStats\u003e {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      fsname: feedbackSessionName,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SESSION_STATS, paramMap);"},{"lineNumber":331,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":334,"author":{"gitId":"-"},"content":"   * Download session results."},{"lineNumber":335,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  downloadSessionResults(courseId: string,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                         feedbackSessionName: string,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                         intent: Intent,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                         indicateMissingResponses: boolean,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                         showStatistics: boolean,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                         questionId?: string,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                         groupBySection?: string,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                         sectionDetail?: InstructorSessionResultSectionType): Observable\u003cstring\u003e {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    return this.getFeedbackSessionResults({"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      courseId,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      feedbackSessionName,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      intent,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      questionId,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      groupBySection,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":351,"author":{"gitId":"-"},"content":"        map((results: SessionResults) \u003d\u003e"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            this.sessionResultCsvService.getCsvForSessionResult("},{"lineNumber":353,"author":{"gitId":"-"},"content":"                results, indicateMissingResponses, showStatistics,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                groupBySection, sectionDetail,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            ),"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        ),"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":361,"author":{"gitId":"-"},"content":"   * Retrieves the results for a feedback session."},{"lineNumber":362,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":363,"author":{"gitId":"-"},"content":"  getFeedbackSessionResults(queryParams: {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    courseId: string,"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    feedbackSessionName: string,"},{"lineNumber":366,"author":{"gitId":"samuelfangjw"},"content":"    intent: Intent,"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    questionId?: string,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    groupBySection?: string,"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    key?: string,"},{"lineNumber":370,"author":{"gitId":"-"},"content":"  }): Observable\u003cSessionResults\u003e {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      fsname: queryParams.feedbackSessionName,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      intent: queryParams.intent,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"    if (queryParams.questionId) {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"      paramMap.questionid \u003d queryParams.questionId;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"    if (queryParams.groupBySection) {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      paramMap.frgroupbysection \u003d queryParams.groupBySection;"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"    if (queryParams.key) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      paramMap.key \u003d queryParams.key;"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.RESULT, paramMap);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":393,"author":{"gitId":"-"},"content":"   * Soft delete a session by moving it to the recycle bin."},{"lineNumber":394,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":395,"author":{"gitId":"-"},"content":"  moveSessionToRecycleBin(courseId: string, feedbackSessionName: string): Observable\u003cany\u003e {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      fsname: feedbackSessionName,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.BIN_SESSION, paramMap);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":405,"author":{"gitId":"-"},"content":"   * Removes a session from the recycle bin."},{"lineNumber":406,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":407,"author":{"gitId":"-"},"content":"  deleteSessionFromRecycleBin(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSession\u003e {"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      fsname: feedbackSessionName,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.BIN_SESSION, paramMap);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"  sendFeedbackSessionLinkToRecoveryEmail(queryParam: {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    sessionLinksRecoveryEmail: string,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    captchaResponse: string,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"  }): Observable\u003cSessionLinksRecoveryResponse\u003e {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      studentemail: queryParam.sessionLinksRecoveryEmail,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      captcharesponse: queryParam.captchaResponse,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.SESSION_LINKS_RECOVERY, paramMap);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   * Checks if a given feedback session is still open."},{"lineNumber":430,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  isFeedbackSessionOpen(feedbackSession: FeedbackSession): boolean {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    const date: number \u003d Date.now();"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    return date \u003e\u003d feedbackSession.submissionStartTimestamp \u0026\u0026 date \u003c feedbackSession.submissionEndTimestamp;"},{"lineNumber":434,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   * Checks if a given feedback session is awaiting."},{"lineNumber":438,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":439,"author":{"gitId":"-"},"content":"  isFeedbackSessionAwaiting(feedbackSession: FeedbackSession): boolean {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    const date: number \u003d Date.now();"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    return date \u003c feedbackSession.submissionStartTimestamp;"},{"lineNumber":442,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   * Checks if a given feedback session is published."},{"lineNumber":446,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":447,"author":{"gitId":"-"},"content":"  isFeedbackSessionPublished(feedbackSession: FeedbackSession): boolean {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    return feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED;"},{"lineNumber":449,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":450,"samuelfangjw":1}},{"path":"src/web/services/link.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Instructor, InstructorPermissionRole, JoinState, Student } from \u0027../types/api-output\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { LinkService } from \u0027./link.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"describe(\u0027Link Service\u0027, () \u003d\u003e {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  let service: LinkService;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    service \u003d TestBed.inject(LinkService);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  const mockStudent: Student \u003d {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    email: \u0027alice.b.tmms@gmail.tmt\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    courseId: \u0027dog.gma-demo\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    name: \u0027Alice Betsy\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    googleId: \u0027alice.b.tmms.sampleData\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    comments: \"This student\u0027s name is Alice Betsy\","},{"lineNumber":19,"author":{"gitId":"-"},"content":"    key: \u0027keyheehee\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    institute: \u0027NUS\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    joinState: JoinState.JOINED,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    teamName: \u0027Team 1\u0027,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    sectionName: \u0027Tutorial Group 1\u0027,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  const mockInstructor: Instructor \u003d {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    googleId: \u0027test@example.com\u0027,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    courseId: \u0027dog.gma-demo\u0027,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    email: \u0027dog@gmail.com\u0027,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    isDisplayedToStudents: true,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    displayedToStudentsAs: \u0027Instructor\u0027,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    name: \u0027Hi\u0027,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    key: \u0027impicklerick\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    joinState: JoinState.JOINED,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  it(\u0027should generate the course join link of the student\u0027, () \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    expect(service.generateCourseJoinLink(mockStudent, \u0027student\u0027))"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      .toBe(`${window.location.origin}/web/join?key\u003dkeyheehee\u0026entitytype\u003dstudent`);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  it(\u0027should generate the course join link for instructors\u0027, () \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    expect(service.generateCourseJoinLink(mockInstructor, \u0027instructor\u0027))"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      .toBe(`${window.location.origin}/web/join?key\u003dimpicklerick\u0026entitytype\u003dinstructor`);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should generate the account registration link of the instructor\u0027, () \u003d\u003e {"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    expect(service.generateAccountRegistrationLink(\u0027keyheehee\u0027))"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"      .toBe(`${window.location.origin}/web/join?iscreatingaccount\u003dtrue\u0026key\u003dkeyheehee`);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  it(\u0027should generate the home page link\u0027, () \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    expect(service.generateHomePageLink(\u0027blahblah\u0027, \u0027/comeseetheopressioninherentinthesystem\u0027))"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      .toBe(\u0027/web/comeseetheopressioninherentinthesystem?user\u003dblahblah\u0027);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  it(\u0027should generate the manage account link\u0027, () \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    expect(service.generateManageAccountLink(\u0027hello there\u0027, \u0027/generalkenobiyouareaboldone\u0027))"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      .toBe(\u0027/web/generalkenobiyouareaboldone?instructorid\u003dhello%20there\u0027);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  it(\u0027should generate the record page link\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    expect(service.generateRecordsPageLink(mockStudent, \u0027from my point of view the jedi are evil\u0027))"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      .toBe(`${window.location.origin}/web/instructor/students/records?courseid\u003ddog.gma-demo\u0026studentemail\u003dalice.`"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            + \u0027b.tmms%40gmail.tmt\u0026user\u003dfrom%20my%20point%20of%20view%20the%20jedi%20are%20evil\u0027);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  it(\u0027should generate the submit url\u0027, () \u003d\u003e {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    expect(service.generateSubmitUrl(mockStudent, \u0027did you ever hear the tragedy of darth plagueis the wise\u0027, false))"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      .toBe(`${window.location.origin}/web/sessions/submission?key\u003dkeyheehee`"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \u0027\u0026fsname\u003ddid%20you%20ever%20hear%20the%20tragedy%20of%20darth%20plagueis%20the%20wise\u0027"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \u0027\u0026courseid\u003ddog.gma-demo\u0027);"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    expect(service.generateSubmitUrl(mockInstructor, \u0027did you ever hear the tragedy of darth plagueis the wise\u0027, true))"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      .toBe(`${window.location.origin}/web/sessions/submission?key\u003dimpicklerick`"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \u0027\u0026fsname\u003ddid%20you%20ever%20hear%20the%20tragedy%20of%20darth%20plagueis%20the%20wise\u0027"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            + \u0027\u0026courseid\u003ddog.gma-demo\u0026entitytype\u003dinstructor\u0027);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  it(\u0027should generate the result url\u0027, () \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    expect(service.generateResultUrl(mockStudent, \u0027another happy landing\u0027, false))"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      .toBe(`${window.location.origin}/web/sessions/result?`"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            + \u0027key\u003dkeyheehee\u0026fsname\u003danother%20happy%20landing\u0026courseid\u003ddog.gma-demo\u0027);"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    expect(service.generateResultUrl(mockInstructor, \u0027another happy landing\u0027, true))"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      .toBe(`${window.location.origin}/web/sessions/result?`"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            + \u0027key\u003dimpicklerick\u0026fsname\u003danother%20happy%20landing\u0026courseid\u003ddog.gma-demo\u0026entitytype\u003dinstructor\u0027);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  it(\u0027filterEmptyParams should filter empty params\u0027, () \u003d\u003e {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    const params: { [key: string]: string } \u003d { courseId: \u0027#123?123\u0027, filterThis: \u0027\u0027 };"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    service.filterEmptyParams(params);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    expect(Object.keys(params).length).toEqual(1);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":96,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":91,"samuelfangjw":5}},{"path":"src/web/services/link.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Instructor, Student } from \u0027../types/api-output\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027./navigation.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Handles the logic for generating links on the client."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class LinkService {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  URI_PREFIX: string \u003d \u0027/web\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  JOIN_PAGE: string \u003d \u0027/join\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  STUDENT_HOME_PAGE: string \u003d \u0027/student/home\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  INSTRUCTOR_HOME_PAGE: string \u003d \u0027/instructor/home\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  ADMIN_ACCOUNTS_PAGE: string \u003d \u0027/admin/accounts\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  INSTRUCTOR_STUDENT_RECORDS_PAGE: string \u003d \u0027/instructor/students/records\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  SESSIONS_SUBMISSION_PAGE: string \u003d \u0027/sessions/submission\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  SESSIONS_RESULT_PAGE: string \u003d \u0027/sessions/result\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  constructor(private navigationService: NavigationService) {}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   * Generates course join link for student/instructor."},{"lineNumber":27,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  generateCourseJoinLink(entity: Student | Instructor, entityType: string): string {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    const frontendUrl: string \u003d window.location.origin;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    const key: string \u003d entity.key || \u0027\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    const params: {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      [key: string]: string,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    } \u003d {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      key,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      entitytype: entityType,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.filterEmptyParams(params);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    const encodedParams: string \u003d this.navigationService.encodeParams(params);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    return `${frontendUrl}${this.URI_PREFIX}${this.JOIN_PAGE}${encodedParams}`;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"   * Generates account registration link for instructor."},{"lineNumber":45,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"  generateAccountRegistrationLink(registrationKey: string): string {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const frontendUrl: string \u003d window.location.origin;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    const params: {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      [key: string]: string,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    } \u003d {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"      iscreatingaccount: \u0027true\u0027,"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"      key: registrationKey,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    const encodedParams: string \u003d this.navigationService.encodeParams(params);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    return `${frontendUrl}${this.URI_PREFIX}${this.JOIN_PAGE}${encodedParams}`;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * Generates home page link."},{"lineNumber":61,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  generateHomePageLink(googleId: string, homePage: string): string {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    const params: { [key: string]: string } \u003d {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.filterEmptyParams(params);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const encodedParams: string \u003d this.navigationService.encodeParams(params);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    return `${this.URI_PREFIX}${homePage}${encodedParams}`;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"   * Generates manage account link."},{"lineNumber":74,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  generateManageAccountLink(googleId: string, accountsPage: string): string {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    const params: {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      [key: string]: string,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    } \u003d {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      instructorid: googleId,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    this.filterEmptyParams(params);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    const encodedParams: string \u003d this.navigationService.encodeParams(params);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    return `${this.URI_PREFIX}${accountsPage}${encodedParams}`;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":88,"author":{"gitId":"-"},"content":"   * Generates record page link."},{"lineNumber":89,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  generateRecordsPageLink(student: Student, instructorGoogleId: string): string {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    const { courseId: courseid, email: studentemail }: Student \u003d student;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    const frontendUrl: string \u003d window.location.origin;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const params: {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      [key: string]: string,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    } \u003d {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      courseid,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      studentemail,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      user: instructorGoogleId,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    this.filterEmptyParams(params);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    const encodedParams: string \u003d this.navigationService.encodeParams(params);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    return `${frontendUrl}${this.URI_PREFIX}${this.INSTRUCTOR_STUDENT_RECORDS_PAGE}${encodedParams}`;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   * Generates submit url for a feedback session."},{"lineNumber":108,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  generateSubmitUrl(entity: Student | Instructor, fsname: string, isInstructor: boolean): string {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    const frontendUrl: string \u003d window.location.origin;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    const courseId: string \u003d entity.courseId;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    const key: string \u003d entity.key || \u0027\u0027;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    const params: {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      [key: string]: string,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    } \u003d {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      key,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      fsname,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    if (isInstructor) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      params.entitytype \u003d \u0027instructor\u0027;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.filterEmptyParams(params);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    const encodedParams: string \u003d this.navigationService.encodeParams(params);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    return `${frontendUrl}${this.URI_PREFIX}${this.SESSIONS_SUBMISSION_PAGE}${encodedParams}`;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":130,"author":{"gitId":"-"},"content":"   * Generates a result url for a feedback session."},{"lineNumber":131,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  generateResultUrl(entity: Student | Instructor, fsname: string, isInstructor: boolean): string {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    const frontendUrl: string \u003d window.location.origin;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    const courseId: string \u003d entity.courseId;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    const key: string \u003d entity.key || \u0027\u0027;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    const params: {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      [key: string]: string,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    } \u003d {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      key,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      fsname,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    if (isInstructor) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      params.entitytype \u003d \u0027instructor\u0027;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    this.filterEmptyParams(params);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    const encodedParams: string \u003d this.navigationService.encodeParams(params);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    return `${frontendUrl}${this.URI_PREFIX}${this.SESSIONS_RESULT_PAGE}${encodedParams}`;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * Removes params keys whose values are the empty string"},{"lineNumber":154,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  filterEmptyParams(params: { [key: string]: string }): void {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    Object.keys(params).forEach((key: string) \u003d\u003e {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      if (params[key] \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        delete params[key];"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":158,"samuelfangjw":4}},{"path":"src/web/services/log.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  ActionClasses,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackSessionLogs,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackSessionLogType,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  GeneralLogs,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  QueryLogsParams,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Handles logging related logic provision."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"})"},{"lineNumber":19,"author":{"gitId":"-"},"content":"export class LogService {"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  constructor(private httpRequestService: HttpRequestService) { }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   * Creates a log for feedback session by calling API."},{"lineNumber":25,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  createFeedbackSessionLog(queryParams: {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    courseId: string,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    feedbackSessionName: string,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    studentEmail: string,"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    logType: FeedbackSessionLogType,"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"  }): Observable\u003cstring\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      fsname: queryParams.feedbackSessionName,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      studentemail: queryParams.studentEmail,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      fsltype: queryParams.logType.toString(),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.SESSION_LOGS, paramMap);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * Searches for feedback session logs."},{"lineNumber":44,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  searchFeedbackSessionLog(queryParams: {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    courseId: string,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    searchFrom: string,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    searchUntil: string,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    studentEmail?: string,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    sessionName?: string,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }): Observable\u003cFeedbackSessionLogs\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      fslstarttime: queryParams.searchFrom,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      fslendtime: queryParams.searchUntil,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    if (queryParams.studentEmail) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      paramMap.studentemail \u003d queryParams.studentEmail;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    if (queryParams.sessionName) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      paramMap.fsname \u003d queryParams.sessionName;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SESSION_LOGS, paramMap);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  searchLogs(queryParams: Partial\u003cQueryLogsParams\u003e): Observable\u003cGeneralLogs\u003e {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      starttime: `${queryParams.startTime || -1}`,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      endtime: `${queryParams.endTime || -1}`,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    if (queryParams.order) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      paramMap.order \u003d queryParams.order;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    if (queryParams.severity) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      paramMap.severity \u003d queryParams.severity;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    if (queryParams.minSeverity) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      paramMap.minseverity \u003d queryParams.minSeverity;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    if (queryParams.logEvent) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      paramMap.logevent \u003d queryParams.logEvent;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    if (queryParams.actionClass) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      paramMap.actionclass \u003d queryParams.actionClass;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    if (queryParams.traceId) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      paramMap.traceid \u003d queryParams.traceId;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    if (queryParams.userInfoParams) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      if (queryParams.userInfoParams.googleId) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        paramMap.googleid \u003d queryParams.userInfoParams.googleId;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"      if (queryParams.userInfoParams.regkey) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        paramMap.key \u003d queryParams.userInfoParams.regkey;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"      if (queryParams.userInfoParams.email) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        paramMap.email \u003d queryParams.userInfoParams.email;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    if (queryParams.sourceLocation) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      if (queryParams.sourceLocation.file) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        paramMap.sourcelocationfile \u003d queryParams.sourceLocation.file;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"      if (queryParams.sourceLocation.function) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        paramMap.sourcelocationfunction \u003d queryParams.sourceLocation.function;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    if (queryParams.exceptionClass) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      paramMap.exceptionclass \u003d queryParams.exceptionClass;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    if (queryParams.latency) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      paramMap.latency \u003d queryParams.latency;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    if (queryParams.status) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      paramMap.status \u003d queryParams.status;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    if (queryParams.version) {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      paramMap.version \u003d queryParams.version;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    if (queryParams.extraFilters) {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      paramMap.extrafilters \u003d queryParams.extraFilters;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.LOGS, paramMap);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  getActionClassList(): Observable\u003cActionClasses\u003e {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.ACTION_CLASS);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":147,"samuelfangjw":2}},{"path":"src/web/services/search.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"  AccountRequest,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  InstructorPermissionRole,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  InstructorPrivilege,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  JoinState,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"} from \u0027../types/api-output\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  AccountRequestSearchResult,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  InstructorAccountSearchResult,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  SearchService,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  StudentAccountSearchResult,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"} from \u0027./search.service\u0027;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import { TimezoneService } from \u0027./timezone.service\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"describe(\u0027SearchService\u0027, () \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  let spyHttpRequestService: any;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  let service: SearchService;"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"  let timezoneService: TimezoneService;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  const mockStudent: Student \u003d {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    email: \u0027alice.b.tmms@gmail.tmt\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    courseId: \u0027dog.gma-demo\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    name: \u0027Alice Betsy\u0027,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    googleId: \u0027alice.b.tmms.sampleData\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    comments: \"This student\u0027s name is Alice Betsy\","},{"lineNumber":38,"author":{"gitId":"-"},"content":"    key: \u0027keyheehee\u0027,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    institute: \u0027NUS\u0027,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    joinState: JoinState.JOINED,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    teamName: \u0027Team 1\u0027,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    sectionName: \u0027Tutorial Group 1\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  const mockInstructor: Instructor \u003d {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    googleId: \u0027test@example.com\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    courseId: \u0027dog.gma-demo\u0027,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    email: \u0027dog@gmail.com\u0027,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    isDisplayedToStudents: true,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    displayedToStudentsAs: \u0027Instructor\u0027,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    name: \u0027Hi\u0027,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    key: \u0027impicklerick\u0027,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    joinState: JoinState.JOINED,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  const mockSessions: FeedbackSession[] \u003d ["},{"lineNumber":58,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      courseId: \u0027dog.gma-demo\u0027,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      feedbackSessionName: \u0027First team feedback session\u0027,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      instructions: \u0027Please give your feedback based on the following questions.\u0027,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      submissionStartTimestamp: 1333295940000,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      submissionEndTimestamp: 1333382340000,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      submissionStatus: FeedbackSessionSubmissionStatus.CLOSED,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      createdAtTimestamp: 1333324740000,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      gracePeriod: 1,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: SessionVisibleSetting.CUSTOM,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: false,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: false,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      courseId: \u0027dog.gma-demo\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      feedbackSessionName: \u0027Second team feedback session\u0027,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      instructions: \u0027Please give your feedback based on the following questions.\u0027,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      submissionStartTimestamp: 1333295940000,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      submissionEndTimestamp: 2122300740000,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      createdAtTimestamp: 1333324740000,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      gracePeriod: 1,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: SessionVisibleSetting.CUSTOM,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: false,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: false,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  const mockPrivileges: InstructorPrivilege[] \u003d [{"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    privileges: {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      courseLevel: {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        canModifyCourse: true,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        canModifySession: true,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        canModifyStudent: true,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        canModifyInstructor: true,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        canViewStudentInSections: true,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        canModifySessionCommentsInSections: true,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        canViewSessionInSections: true,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        canSubmitSessionInSections: true,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      sectionLevel: {},"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      sessionLevel: {},"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    requestId: \u0027checkyourprivilege\u0027,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }];"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  const mockCourse: Course \u003d {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    courseId: \u0027dog.gma-demo\u0027,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    courseName: \u0027Sample Course 101\u0027,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    institute: \u0027Test Institute\u0027,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    creationTimestamp: 1585487897502,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    deletionTimestamp: 0,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    requestId: \u00275e80aa3c00007918934385f5\u0027,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"  const mockAccountRequest: AccountRequest \u003d {"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    registrationKey: \u0027regkey\u0027,"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    createdAt: 1585487897502,"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    name: \u0027Test Instructor\u0027,"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    institute: \u0027Test Institute\u0027,"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    email: \u0027test@example.com\u0027,"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"  };"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    spyHttpRequestService \u003d {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      get: jest.fn(),"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      post: jest.fn(),"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      put: jest.fn(),"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      delete: jest.fn(),"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      imports: [HttpClientTestingModule],"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":138,"author":{"gitId":"-"},"content":"        { provide: HttpRequestService, useValue: spyHttpRequestService },"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    service \u003d TestBed.inject(SearchService);"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    timezoneService \u003d TestBed.inject(TimezoneService);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  it(\u0027should be created\u0027, () \u003d\u003e {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    expect(service).toBeTruthy();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when searching for students\u0027, () \u003d\u003e {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    service.searchStudents(\u0027Alice\u0027, \u0027instructor\u0027);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      searchkey: \u0027Alice\u0027,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith("},{"lineNumber":156,"author":{"gitId":"-"},"content":"      ResourceEndpoints.SEARCH_STUDENTS,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      paramMap,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when searching for instructors\u0027, () \u003d\u003e {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    service.searchInstructors(\u0027YoyoImCoronavirus\u0027);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      searchkey: \u0027YoyoImCoronavirus\u0027,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith("},{"lineNumber":167,"author":{"gitId":"-"},"content":"      ResourceEndpoints.SEARCH_INSTRUCTORS,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      paramMap,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should execute GET when searching for account requests\u0027, () \u003d\u003e {"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"    service.searchAccountRequests(\u0027Account Request\u0027);"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"      searchkey: \u0027Account Request\u0027,"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith("},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"      ResourceEndpoints.SEARCH_ACCOUNT_REQUESTS,"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"      paramMap,"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"    );"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"  it(\u0027should join students accurately when calling as admin\u0027, () \u003d\u003e {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    const result: StudentAccountSearchResult \u003d service.joinAdminStudent("},{"lineNumber":185,"author":{"gitId":"-"},"content":"      mockStudent,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      { instructors: [mockInstructor] },"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      mockCourse,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      { feedbackSessions: mockSessions },"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      mockPrivileges,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    expect(result.comments).toBe(\"This student\u0027s name is Alice Betsy\");"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    expect(result.courseId).toBe(\u0027dog.gma-demo\u0027);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    expect(result.courseJoinLink).toBe(`${window.location.origin}/web/join?key\u003dkeyheehee\u0026entitytype\u003dstudent`);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    expect(result.courseName).toBe(\u0027Sample Course 101\u0027);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    expect(result.email).toBe(\u0027alice.b.tmms@gmail.tmt\u0027);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    expect(result.manageAccountLink).toBe(\u0027/web/admin/accounts?instructorid\u003dalice.b.tmms.sampleData\u0027);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"  it(\u0027should join instructors accurately when calling as admin\u0027, () \u003d\u003e {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    const result: InstructorAccountSearchResult \u003d service"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      .joinAdminInstructor(mockInstructor, mockCourse, { feedbackSessions: mockSessions });"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    expect(result.courseId).toBe(\u0027dog.gma-demo\u0027);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    expect(result.courseJoinLink).toBe(`${window.location.origin}/web/join?key\u003dimpicklerick\u0026entitytype\u003dinstructor`);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    expect(result.courseName).toBe(\u0027Sample Course 101\u0027);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    expect(result.email).toBe(\u0027dog@gmail.com\u0027);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    expect(result.manageAccountLink).toBe(\u0027/web/admin/accounts?instructorid\u003dtest%40example.com\u0027);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    expect(result.homePageLink).toBe(\u0027/web/instructor/home?user\u003dtest%40example.com\u0027);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should join account requests accurately when timezone can be guessed and instructor is registered\u0027, () \u003d\u003e {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    jest.spyOn(timezoneService, \u0027guessTimezone\u0027).mockReturnValue(\u0027Asia/Singapore\u0027);"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"    const accountRequest: AccountRequest \u003d { ...mockAccountRequest, registeredAt: 1685487897502 };"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"    const result: AccountRequestSearchResult \u003d service.joinAdminAccountRequest(accountRequest);"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.email).toBe(\u0027test@example.com\u0027);"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.institute).toBe(\u0027Test Institute\u0027);"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.name).toBe(\u0027Test Instructor\u0027);"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.createdAtText).toBe(\u0027Sun, 29 Mar 2020, 09:18 PM +08:00\u0027);"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.registeredAtText).toBe(\u0027Wed, 31 May 2023, 07:04 AM +08:00\u0027);"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.registrationLink).toBe(`${window.location.origin}/web/join?iscreatingaccount\u003dtrue\u0026key\u003dregkey`);"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should join account requests accurately when timezone cannot be guessed and instructor is not registered\u0027, () \u003d\u003e {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    jest.spyOn(timezoneService, \u0027guessTimezone\u0027).mockReturnValue(\u0027\u0027);"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"    const result: AccountRequestSearchResult \u003d service.joinAdminAccountRequest(mockAccountRequest);"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.email).toBe(\u0027test@example.com\u0027);"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.institute).toBe(\u0027Test Institute\u0027);"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.name).toBe(\u0027Test Instructor\u0027);"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.createdAtText).toBe(\u0027Sun, 29 Mar 2020, 01:18 PM +00:00\u0027);"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.registeredAtText).toBe(null);"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"    expect(result.registrationLink).toBe(`${window.location.origin}/web/join?iscreatingaccount\u003dtrue\u0026key\u003dregkey`);"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":234,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":188,"samuelfangjw":46}},{"path":"src/web/services/search.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map, mergeMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"  AccountRequest,"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  AccountRequests,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Course, FeedbackSession,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  InstructorPermissionRole,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  InstructorPrivilege,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  Instructors,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"} from \u0027../types/api-output\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../types/api-request\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027./course.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027./feedback-sessions.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027./instructor.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { LinkService } from \u0027./link.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027./timezone.service\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Handles the logic for search."},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"})"},{"lineNumber":31,"author":{"gitId":"-"},"content":"export class SearchService {"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private instructorService: InstructorService,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private httpRequestService: HttpRequestService,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private feedbackSessionService: FeedbackSessionsService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private courseService: CourseService,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private linkService: LinkService,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private timezoneService: TimezoneService,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  searchInstructor(searchKey: string): Observable\u003cInstructorSearchResult\u003e {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    return this.searchStudents(searchKey, \u0027instructor\u0027).pipe("},{"lineNumber":44,"author":{"gitId":"-"},"content":"      map((studentsRes: Students) \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          students: studentsRes.students,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          comments: [],"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  searchAdmin(searchKey: string): Observable\u003cAdminSearchResult\u003e {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    return forkJoin(["},{"lineNumber":55,"author":{"gitId":"-"},"content":"      this.searchStudents(searchKey, \u0027admin\u0027),"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      this.searchInstructors(searchKey),"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"      this.searchAccountRequests(searchKey),"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ]).pipe("},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"      map((value: [Students, Instructors, AccountRequests]): [Student[], Instructor[], AccountRequest[]] \u003d\u003e"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        [value[0].students, value[1].instructors, value[2].accountRequests],"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      ),"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      mergeMap((value: [Student[], Instructor[], AccountRequest[]]) \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        const [students, instructors, accountRequests]: [Student[], Instructor[], AccountRequest[]] \u003d value;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return forkJoin(["},{"lineNumber":65,"author":{"gitId":"-"},"content":"          of(students),"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          of(instructors),"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"          of(accountRequests),"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          this.getDistinctFields(students, instructors),"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ]);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"      map((value: [Student[], Instructor[], AccountRequest[], DistinctFields]) \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"          students: this.createStudentAccountSearchResults(value[0], ...value[3]),"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"          instructors: this.createInstructorAccountSearchResults(value[1], value[3][1], value[3][2]),"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"          accountRequests: this.createAccountRequestSearchResults(value[2]),"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  searchStudents(searchKey: string, entityType: string): Observable\u003cStudents\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      searchkey: searchKey,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      entitytype: entityType,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SEARCH_STUDENTS, paramMap);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  searchInstructors(searchKey: string): Observable\u003cInstructors\u003e {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      searchkey: searchKey,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SEARCH_INSTRUCTORS, paramMap);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"  searchAccountRequests(searchKey: string): Observable\u003cAccountRequests\u003e {"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"      searchkey: searchKey,"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SEARCH_ACCOUNT_REQUESTS, paramMap);"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"  createStudentAccountSearchResults("},{"lineNumber":104,"author":{"gitId":"-"},"content":"    students: Student[],"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    distinctInstructorsMap: DistinctInstructorsMap,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    distinctCoursesMap: DistinctCoursesMap,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    distinctFeedbackSessionsMap: DistinctFeedbackSessionsMap,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    distinctInstructorPrivilegesMap: DistinctInstructorPrivilegesMap,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  ): StudentAccountSearchResult[] {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    return students.map((student: Student) \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      const { courseId }: Student \u003d student;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      return this.joinAdminStudent("},{"lineNumber":113,"author":{"gitId":"-"},"content":"        student,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        distinctInstructorsMap[courseId],"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        distinctCoursesMap[courseId],"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        distinctFeedbackSessionsMap[courseId],"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        distinctInstructorPrivilegesMap[courseId],"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  joinAdminStudent("},{"lineNumber":123,"author":{"gitId":"-"},"content":"    student: Student,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    instructors: Instructors,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    course: Course,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    feedbackSessions: FeedbackSessions,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    instructorPrivileges: InstructorPrivilege[],"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  ): StudentAccountSearchResult {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    let studentResult: StudentAccountSearchResult \u003d {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      email: \u0027\u0027,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      name: \u0027\u0027,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      comments: \u0027\u0027,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      team: \u0027\u0027,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      section: \u0027\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      awaitingSessions: {},"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      openSessions: {},"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      notOpenSessions: {},"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      publishedSessions: {},"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      courseId: \u0027\u0027,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      courseName: \u0027\u0027,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      institute: \u0027\u0027,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      manageAccountLink: \u0027\u0027,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      homePageLink: \u0027\u0027,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      recordsPageLink: \u0027\u0027,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027\u0027,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      googleId: \u0027\u0027,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      showLinks: false,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    const {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      email,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      name,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      comments \u003d \u0027\u0027,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      teamName: team,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      sectionName: section,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      googleId \u003d \u0027\u0027,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      institute \u003d \u0027\u0027,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }: Student \u003d student;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    studentResult \u003d { ...studentResult, email, name, comments, team, section, googleId, institute };"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    const { courseId, courseName }: Course \u003d course;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    studentResult \u003d { ...studentResult, courseId, courseName };"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    let masqueradeGoogleId: string \u003d \u0027\u0027;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    for (const instructor of instructors.instructors) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      const instructorPrivilege: InstructorPrivilege | undefined \u003d instructorPrivileges.shift();"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      if (instructor.googleId !\u003d null"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          \u0026\u0026 (instructorPrivilege !\u003d null \u0026\u0026 instructorPrivilege.privileges.courseLevel.canModifyInstructor"},{"lineNumber":168,"author":{"gitId":"-"},"content":"              || instructor.role \u003d\u003d\u003d InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER)) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        masqueradeGoogleId \u003d instructor.googleId;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    // Generate feedback session urls"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    const { awaitingSessions, openSessions, notOpenSessions, publishedSessions }: StudentFeedbackSessions \u003d"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      this.classifyFeedbackSessions(feedbackSessions, student, false);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    studentResult \u003d { ...studentResult, awaitingSessions, openSessions, notOpenSessions, publishedSessions };"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    // Generate links for students"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    studentResult.courseJoinLink \u003d this.linkService.generateCourseJoinLink(student, \u0027student\u0027);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    studentResult.homePageLink \u003d this.linkService"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      .generateHomePageLink(googleId, this.linkService.STUDENT_HOME_PAGE);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    studentResult.recordsPageLink \u003d this.linkService.generateRecordsPageLink(student, masqueradeGoogleId);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    studentResult.manageAccountLink \u003d this.linkService"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      .generateManageAccountLink(googleId, this.linkService.ADMIN_ACCOUNTS_PAGE);"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    return studentResult;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  createInstructorAccountSearchResults("},{"lineNumber":191,"author":{"gitId":"-"},"content":"    instructors: Instructor[],"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    distinctCoursesMap: DistinctCoursesMap,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    distinctFeedbackSessionsMap: DistinctFeedbackSessionsMap,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  ): InstructorAccountSearchResult[] {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    return instructors.map((instructor: Instructor) \u003d\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        this.joinAdminInstructor(instructor, distinctCoursesMap[instructor.courseId],"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            distinctFeedbackSessionsMap[instructor.courseId]));"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"  joinAdminInstructor("},{"lineNumber":201,"author":{"gitId":"-"},"content":"    instructor: Instructor,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    course: Course,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    feedbackSessions: FeedbackSessions,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  ): InstructorAccountSearchResult {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    let instructorResult: InstructorAccountSearchResult \u003d {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      email: \u0027\u0027,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      name: \u0027\u0027,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      courseId: \u0027\u0027,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      courseName: \u0027\u0027,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      institute: \u0027\u0027,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      manageAccountLink: \u0027\u0027,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      homePageLink: \u0027\u0027,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      courseJoinLink: \u0027\u0027,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      googleId: \u0027\u0027,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      showLinks: false,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      awaitingSessions: {},"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      openSessions: {},"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      notOpenSessions: {},"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      publishedSessions: {},"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    const { email, name, googleId \u003d \u0027\u0027, institute \u003d \u0027\u0027 }: Instructor \u003d instructor;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instructorResult \u003d { ...instructorResult, email, name, googleId, institute };"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    const { courseId, courseName }: Course \u003d course;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    instructorResult \u003d { ...instructorResult, courseId, courseName };"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    // Generate feedback session urls"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    const { awaitingSessions, openSessions, notOpenSessions, publishedSessions }: StudentFeedbackSessions \u003d"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        this.classifyFeedbackSessions(feedbackSessions, instructor, true);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    instructorResult \u003d { ...instructorResult, awaitingSessions, openSessions, notOpenSessions, publishedSessions };"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    // Generate links for instructors"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    instructorResult.courseJoinLink \u003d this.linkService.generateCourseJoinLink(instructor, \u0027instructor\u0027);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    instructorResult.homePageLink \u003d this.linkService"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      .generateHomePageLink(googleId, this.linkService.INSTRUCTOR_HOME_PAGE);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    instructorResult.manageAccountLink \u003d this.linkService"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      .generateManageAccountLink(googleId, this.linkService.ADMIN_ACCOUNTS_PAGE);"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    return instructorResult;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"  classifyFeedbackSessions(feedbackSessions: FeedbackSessions, entity: Student | Instructor, isInstructor: boolean):"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      StudentFeedbackSessions {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    const feedbackSessionLinks: StudentFeedbackSessions \u003d {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      awaitingSessions: {},"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      openSessions: {},"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      notOpenSessions: {},"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      publishedSessions: {},"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    for (const feedbackSession of feedbackSessions.feedbackSessions) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      if (this.feedbackSessionService.isFeedbackSessionOpen(feedbackSession)) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        feedbackSessionLinks.openSessions[feedbackSession.feedbackSessionName] \u003d {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"          ...this.formatProperties(feedbackSession),"},{"lineNumber":254,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: this.linkService.generateSubmitUrl("},{"lineNumber":255,"author":{"gitId":"-"},"content":"              entity, feedbackSession.feedbackSessionName, isInstructor),"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      } else if (this.feedbackSessionService.isFeedbackSessionAwaiting(feedbackSession)) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        feedbackSessionLinks.awaitingSessions[feedbackSession.feedbackSessionName] \u003d {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"          ...this.formatProperties(feedbackSession),"},{"lineNumber":260,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: this.linkService.generateSubmitUrl("},{"lineNumber":261,"author":{"gitId":"-"},"content":"              entity, feedbackSession.feedbackSessionName, isInstructor),"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        feedbackSessionLinks.notOpenSessions[feedbackSession.feedbackSessionName] \u003d {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"          ...this.formatProperties(feedbackSession),"},{"lineNumber":266,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: this.linkService.generateSubmitUrl("},{"lineNumber":267,"author":{"gitId":"-"},"content":"              entity, feedbackSession.feedbackSessionName, isInstructor),"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"      if (this.feedbackSessionService.isFeedbackSessionPublished(feedbackSession)) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        feedbackSessionLinks.publishedSessions[feedbackSession.feedbackSessionName] \u003d {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"          ...this.formatProperties(feedbackSession),"},{"lineNumber":274,"author":{"gitId":"-"},"content":"          feedbackSessionUrl: this.linkService.generateResultUrl("},{"lineNumber":275,"author":{"gitId":"-"},"content":"              entity, feedbackSession.feedbackSessionName, isInstructor),"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    return feedbackSessionLinks;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"  createAccountRequestSearchResults("},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"    accountRequests: AccountRequest[],"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"  ): AccountRequestSearchResult[] {"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"    return accountRequests.map((accountRequest: AccountRequest) \u003d\u003e this.joinAdminAccountRequest(accountRequest));"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"  joinAdminAccountRequest(accountRequest: AccountRequest): AccountRequestSearchResult {"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"    let accountRequestResult: AccountRequestSearchResult \u003d {"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"      name: \u0027\u0027,"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"      email: \u0027\u0027,"},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"      institute: \u0027\u0027,"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"      createdAtText: \u0027\u0027,"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"      registeredAtText: \u0027\u0027,"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"      registrationLink: \u0027\u0027,"},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"      showLinks: false,"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"    const { registrationKey, createdAt, registeredAt, name, institute, email }: AccountRequest \u003d accountRequest;"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"    const timezone: string \u003d this.timezoneService.guessTimezone() || \u0027UTC\u0027;"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"    accountRequestResult.createdAtText \u003d this.formatTimestampAsString(createdAt, timezone);"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"    accountRequestResult.registeredAtText \u003d registeredAt ? this.formatTimestampAsString(registeredAt, timezone) : null;"},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"    const registrationLink: string \u003d this.linkService.generateAccountRegistrationLink(registrationKey);"},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"    accountRequestResult \u003d { ...accountRequestResult, name, email, institute, registrationLink };"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":308,"author":{"gitId":"samuelfangjw"},"content":"    return accountRequestResult;"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"  private getDistinctFields(students: Student[], instructors: Instructor[]): Observable\u003cDistinctFields\u003e {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    const distinctCourseIds: string[] \u003d Array.from(new Set(["},{"lineNumber":313,"author":{"gitId":"-"},"content":"      ...students.map((student: Student) \u003d\u003e student.courseId),"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      ...instructors.map((instructor: Instructor) \u003d\u003e instructor.courseId),"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    ]));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    if (distinctCourseIds.length \u003d\u003d\u003d 0) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      return forkJoin([of({}), of({}), of({}), of({})]);"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    return forkJoin(["},{"lineNumber":320,"author":{"gitId":"-"},"content":"      this.getDistinctInstructors(distinctCourseIds),"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      this.getDistinctCourses(distinctCourseIds),"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      this.getDistinctFeedbackSessions(distinctCourseIds),"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    ]).pipe("},{"lineNumber":324,"author":{"gitId":"-"},"content":"      mergeMap((value: ["},{"lineNumber":325,"author":{"gitId":"-"},"content":"        DistinctInstructorsMap,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        DistinctCoursesMap,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        DistinctFeedbackSessionsMap],"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      ) \u003d\u003e {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        return forkJoin(["},{"lineNumber":330,"author":{"gitId":"-"},"content":"          of(value[0]),"},{"lineNumber":331,"author":{"gitId":"-"},"content":"          of(value[1]),"},{"lineNumber":332,"author":{"gitId":"-"},"content":"          of(value[2]),"},{"lineNumber":333,"author":{"gitId":"-"},"content":"          this.getDistinctInstructorPrivileges(value[0]),"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        ]);"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"  private getDistinctInstructors(distinctCourseIds: string[]): Observable\u003cDistinctInstructorsMap\u003e {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    return forkJoin("},{"lineNumber":341,"author":{"gitId":"-"},"content":"      distinctCourseIds.map((courseId: string) \u003d\u003e"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL })),"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":344,"author":{"gitId":"-"},"content":"      map((instructorsArray: Instructors[]) \u003d\u003e {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        const distinctInstructorsMap: DistinctInstructorsMap \u003d {};"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        instructorsArray.forEach((instructors: Instructors, index: number) \u003d\u003e {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"          distinctInstructorsMap[distinctCourseIds[index]] \u003d instructors;"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        return distinctInstructorsMap;"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":352,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"  private getDistinctInstructorPrivileges("},{"lineNumber":355,"author":{"gitId":"-"},"content":"    distinctInstructorsMap: DistinctInstructorsMap,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"  ): Observable\u003cDistinctInstructorPrivilegesMap\u003e {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    const distinctCourseIds: string[] \u003d Object.keys(distinctInstructorsMap);"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    const instructorsArray: Instructors[] \u003d Object.values(distinctInstructorsMap);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    return forkJoin(["},{"lineNumber":360,"author":{"gitId":"-"},"content":"      of(distinctCourseIds),"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      forkJoin(instructorsArray.map((instructors: Instructors) \u003d\u003e {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return forkJoin("},{"lineNumber":363,"author":{"gitId":"-"},"content":"          instructors.instructors.map("},{"lineNumber":364,"author":{"gitId":"-"},"content":"            (instructor: Instructor) \u003d\u003e this.instructorService.loadInstructorPrivilege("},{"lineNumber":365,"author":{"gitId":"-"},"content":"              {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"                courseId: instructor.courseId,"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                instructorEmail: instructor.email,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            ),"},{"lineNumber":370,"author":{"gitId":"-"},"content":"          ),"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      })),"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    ]).pipe("},{"lineNumber":374,"author":{"gitId":"-"},"content":"      map("},{"lineNumber":375,"author":{"gitId":"-"},"content":"        (value: [string[], InstructorPrivilege[][]]) \u003d\u003e {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"          const distinctInstructorPrivilegesMap: DistinctInstructorPrivilegesMap \u003d {};"},{"lineNumber":377,"author":{"gitId":"-"},"content":"          value[1].forEach((instructorPrivilegesArray: InstructorPrivilege[], index: number) \u003d\u003e {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            distinctInstructorPrivilegesMap[value[0][index]] \u003d instructorPrivilegesArray;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":380,"author":{"gitId":"-"},"content":"          return distinctInstructorPrivilegesMap;"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      ),"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"  private getDistinctCourses(distinctCourseIds: string[]): Observable\u003cDistinctCoursesMap\u003e {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    return forkJoin("},{"lineNumber":388,"author":{"gitId":"-"},"content":"      distinctCourseIds.map((id: string) \u003d\u003e this.courseService.getCourseAsInstructor(id)),"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":390,"author":{"gitId":"-"},"content":"      map((courses: Course[]) \u003d\u003e {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        const distinctCoursesMap: DistinctCoursesMap \u003d {};"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        courses.forEach((course: Course, index: number) \u003d\u003e {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"          distinctCoursesMap[distinctCourseIds[index]] \u003d course;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        return distinctCoursesMap;"},{"lineNumber":396,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"  private getDistinctFeedbackSessions(distinctCourseIds: string[]): Observable\u003cDistinctFeedbackSessionsMap\u003e {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    return forkJoin("},{"lineNumber":402,"author":{"gitId":"-"},"content":"      distinctCourseIds.map((id: string) \u003d\u003e"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        this.feedbackSessionService.getFeedbackSessionsForStudent(\u0027admin\u0027, id)),"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    .pipe("},{"lineNumber":406,"author":{"gitId":"-"},"content":"      map((feedbackSessionsArray: FeedbackSessions[]) \u003d\u003e {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        const distinctFeedbackSessionsMap: DistinctFeedbackSessionsMap \u003d {};"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        feedbackSessionsArray.forEach("},{"lineNumber":409,"author":{"gitId":"-"},"content":"          (feedbackSessions: FeedbackSessions, index: number) \u003d\u003e {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            distinctFeedbackSessionsMap[distinctCourseIds[index]] \u003d feedbackSessions;"},{"lineNumber":411,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        return distinctFeedbackSessionsMap;"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":416,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"  private formatProperties(feedbackSession: FeedbackSession): { startTime: string, endTime: string } {"},{"lineNumber":419,"author":{"gitId":"samuelfangjw"},"content":"    const startTime: string \u003d"},{"lineNumber":420,"author":{"gitId":"samuelfangjw"},"content":"        this.formatTimestampAsString(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone);"},{"lineNumber":421,"author":{"gitId":"samuelfangjw"},"content":"    const endTime: string \u003d"},{"lineNumber":422,"author":{"gitId":"samuelfangjw"},"content":"        this.formatTimestampAsString(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone);"},{"lineNumber":423,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"    return { startTime, endTime };"},{"lineNumber":425,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":426,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":427,"author":{"gitId":"samuelfangjw"},"content":"  private formatTimestampAsString(timestamp: number, timezone: string): string {"},{"lineNumber":428,"author":{"gitId":"samuelfangjw"},"content":"    const dateFormatWithZoneInfo: string \u003d \u0027ddd, DD MMM YYYY, hh:mm A Z\u0027;"},{"lineNumber":429,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":430,"author":{"gitId":"samuelfangjw"},"content":"    return this.timezoneService"},{"lineNumber":431,"author":{"gitId":"samuelfangjw"},"content":"        .formatToString(timestamp, timezone, dateFormatWithZoneInfo);"},{"lineNumber":432,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":433,"author":{"gitId":"-"},"content":"}"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":436,"author":{"gitId":"-"},"content":" * The typings for the response object returned by the instructor search service."},{"lineNumber":437,"author":{"gitId":"-"},"content":" */"},{"lineNumber":438,"author":{"gitId":"-"},"content":"export interface InstructorSearchResult {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"  students: Student[];"},{"lineNumber":440,"author":{"gitId":"-"},"content":"}"},{"lineNumber":441,"author":{"gitId":"-"},"content":""},{"lineNumber":442,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":443,"author":{"gitId":"-"},"content":" * The typings for the response object returned by admin search service."},{"lineNumber":444,"author":{"gitId":"-"},"content":" */"},{"lineNumber":445,"author":{"gitId":"-"},"content":"export interface AdminSearchResult {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"  students: StudentAccountSearchResult[];"},{"lineNumber":447,"author":{"gitId":"-"},"content":"  instructors: InstructorAccountSearchResult[];"},{"lineNumber":448,"author":{"gitId":"samuelfangjw"},"content":"  accountRequests: AccountRequestSearchResult[];"},{"lineNumber":449,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":450,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":451,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":452,"author":{"gitId":"samuelfangjw"},"content":" * Search results for account requests from the admin endpoint."},{"lineNumber":453,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":454,"author":{"gitId":"samuelfangjw"},"content":"export interface AccountRequestSearchResult {"},{"lineNumber":455,"author":{"gitId":"samuelfangjw"},"content":"  name: string;"},{"lineNumber":456,"author":{"gitId":"samuelfangjw"},"content":"  email: string;"},{"lineNumber":457,"author":{"gitId":"samuelfangjw"},"content":"  institute: string;"},{"lineNumber":458,"author":{"gitId":"samuelfangjw"},"content":"  createdAtText: string;"},{"lineNumber":459,"author":{"gitId":"samuelfangjw"},"content":"  registeredAtText: string | null;"},{"lineNumber":460,"author":{"gitId":"samuelfangjw"},"content":"  registrationLink: string;"},{"lineNumber":461,"author":{"gitId":"samuelfangjw"},"content":"  showLinks: boolean;"},{"lineNumber":462,"author":{"gitId":"-"},"content":"}"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":465,"author":{"gitId":"-"},"content":" * Search results for instructors for the admin endpoint"},{"lineNumber":466,"author":{"gitId":"-"},"content":" */"},{"lineNumber":467,"author":{"gitId":"-"},"content":"export interface InstructorAccountSearchResult {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"  name: string;"},{"lineNumber":469,"author":{"gitId":"-"},"content":"  email: string;"},{"lineNumber":470,"author":{"gitId":"-"},"content":"  googleId: string;"},{"lineNumber":471,"author":{"gitId":"-"},"content":"  courseId: string;"},{"lineNumber":472,"author":{"gitId":"-"},"content":"  courseName: string;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"  institute: string;"},{"lineNumber":474,"author":{"gitId":"-"},"content":"  courseJoinLink: string;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"  homePageLink: string;"},{"lineNumber":476,"author":{"gitId":"-"},"content":"  manageAccountLink: string;"},{"lineNumber":477,"author":{"gitId":"-"},"content":"  showLinks: boolean;"},{"lineNumber":478,"author":{"gitId":"-"},"content":"  awaitingSessions: FeedbackSessionsGroup;"},{"lineNumber":479,"author":{"gitId":"-"},"content":"  openSessions: FeedbackSessionsGroup;"},{"lineNumber":480,"author":{"gitId":"-"},"content":"  notOpenSessions: FeedbackSessionsGroup;"},{"lineNumber":481,"author":{"gitId":"-"},"content":"  publishedSessions: FeedbackSessionsGroup;"},{"lineNumber":482,"author":{"gitId":"-"},"content":"}"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":485,"author":{"gitId":"-"},"content":" * Search results for students from the Admin endpoint."},{"lineNumber":486,"author":{"gitId":"-"},"content":" */"},{"lineNumber":487,"author":{"gitId":"-"},"content":"export interface StudentAccountSearchResult extends InstructorAccountSearchResult {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"  section: string;"},{"lineNumber":489,"author":{"gitId":"-"},"content":"  team: string;"},{"lineNumber":490,"author":{"gitId":"-"},"content":"  comments: string;"},{"lineNumber":491,"author":{"gitId":"-"},"content":"  recordsPageLink: string;"},{"lineNumber":492,"author":{"gitId":"-"},"content":"}"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":495,"author":{"gitId":"-"},"content":" * Feedback session information for search result."},{"lineNumber":496,"author":{"gitId":"-"},"content":" */"},{"lineNumber":497,"author":{"gitId":"-"},"content":"export interface FeedbackSessionsGroup {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"  [name: string]: {"},{"lineNumber":499,"author":{"gitId":"samuelfangjw"},"content":"    startTime: string,"},{"lineNumber":500,"author":{"gitId":"samuelfangjw"},"content":"    endTime: string,"},{"lineNumber":501,"author":{"gitId":"samuelfangjw"},"content":"    feedbackSessionUrl: string,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":503,"author":{"gitId":"-"},"content":"}"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"interface StudentFeedbackSessions {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"  awaitingSessions: FeedbackSessionsGroup;"},{"lineNumber":507,"author":{"gitId":"-"},"content":"  openSessions: FeedbackSessionsGroup;"},{"lineNumber":508,"author":{"gitId":"-"},"content":"  notOpenSessions: FeedbackSessionsGroup;"},{"lineNumber":509,"author":{"gitId":"-"},"content":"  publishedSessions: FeedbackSessionsGroup;"},{"lineNumber":510,"author":{"gitId":"-"},"content":"}"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"interface DistinctInstructorsMap {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"  [courseId: string]: Instructors;"},{"lineNumber":514,"author":{"gitId":"-"},"content":"}"},{"lineNumber":515,"author":{"gitId":"-"},"content":""},{"lineNumber":516,"author":{"gitId":"-"},"content":"interface DistinctFeedbackSessionsMap {"},{"lineNumber":517,"author":{"gitId":"-"},"content":"  [courseId: string]: FeedbackSessions;"},{"lineNumber":518,"author":{"gitId":"-"},"content":"}"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"interface DistinctCoursesMap {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"  [courseId: string]: Course;"},{"lineNumber":522,"author":{"gitId":"-"},"content":"}"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"interface DistinctInstructorPrivilegesMap {"},{"lineNumber":525,"author":{"gitId":"-"},"content":"  [courseId: string]: InstructorPrivilege[];"},{"lineNumber":526,"author":{"gitId":"-"},"content":"}"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"type DistinctFields \u003d ["},{"lineNumber":529,"author":{"gitId":"-"},"content":"  DistinctInstructorsMap,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"  DistinctCoursesMap,"},{"lineNumber":531,"author":{"gitId":"-"},"content":"  DistinctFeedbackSessionsMap,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"  DistinctInstructorPrivilegesMap,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"];"}],"authorContributionMap":{"-":457,"samuelfangjw":76}},{"path":"src/web/services/session-result-csv.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  InstructorSessionResultSectionType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"} from \u0027../app/pages-instructor/instructor-session-result-page/instructor-session-result-section-type.enum\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  SectionTypeDescriptionPipe,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"} from \u0027../app/pages-instructor/instructor-session-result-page/section-type-description.pipe\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  QuestionOutput,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  ResponseOutput,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  SessionResults,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"} from \u0027../types/api-output\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { FeedbackQuestionDetailsFactory } from \u0027../types/question-details-impl/feedback-question-details-factory\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { FeedbackResponseDetailsFactory } from \u0027../types/response-details-impl/feedback-response-details-factory\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { CsvHelper } from \u0027./csv-helper\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027./feedback-responses.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StringHelper } from \u0027./string-helper\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Service to generate CSV for a feedback session result."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"})"},{"lineNumber":27,"author":{"gitId":"-"},"content":"export class SessionResultCsvService {"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  constructor(private feedbackResponsesService: FeedbackResponsesService) { }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * Generates CSV string for non-responders."},{"lineNumber":33,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  getCsvForNonSubmitterList(noResponseStudents: Student[]): string {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    const csvRows: string[][] \u003d [];"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    if (noResponseStudents.length \u003d\u003d\u003d 0) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      return CsvHelper.convertCsvContentsToCsvString(csvRows);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    csvRows.push([\u0027Participants who have not responded to any question\u0027]);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    this.generateEmptyRow(csvRows);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    const header: string[] \u003d [\u0027Team\u0027, \u0027Name\u0027, \u0027Email\u0027];"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    csvRows.push(header);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    noResponseStudents.forEach((student: Student) \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      csvRows.push([student.teamName, student.name, student.email]);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    return CsvHelper.convertCsvContentsToCsvString(csvRows);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * Generates CSV string for a session result."},{"lineNumber":52,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  getCsvForSessionResult(result: SessionResults,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      isIndicatingMissingResponses: boolean, isShownStats: boolean,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      sectionName?: string, sectionDetail?: InstructorSessionResultSectionType): string {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    const csvRows: string[][] \u003d [];"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    if (sectionName) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      csvRows.push([\u0027Section Name\u0027, sectionName]);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    if (sectionDetail) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      const descriptionPipe: SectionTypeDescriptionPipe \u003d new SectionTypeDescriptionPipe();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      csvRows.push([\u0027Section View Detail\u0027, descriptionPipe.transform(sectionDetail)]);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.generateEmptyRow(csvRows);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.generateEmptyRow(csvRows);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // sort questions by question number"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    result.questions.sort((a: QuestionOutput, b: QuestionOutput) \u003d\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        a.feedbackQuestion.questionNumber - b.feedbackQuestion.questionNumber);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    // filter responses based on settings"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    for (const question of result.questions) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      const currQuestion: QuestionOutput \u003d JSON.parse(JSON.stringify(question));"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      currQuestion.allResponses \u003d currQuestion.allResponses.filter((response: ResponseOutput) \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (sectionName \u0026\u0026 sectionDetail) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          return this.feedbackResponsesService.isFeedbackResponsesDisplayedOnSection("},{"lineNumber":78,"author":{"gitId":"-"},"content":"              response, sectionName, sectionDetail);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      csvRows.push(...this.generateCsvRowsForQuestion(currQuestion, isIndicatingMissingResponses, isShownStats));"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    return CsvHelper.convertCsvContentsToCsvString(csvRows);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":89,"author":{"gitId":"-"},"content":"   * Generates CSV rows for a question."},{"lineNumber":90,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  private generateCsvRowsForQuestion(question: QuestionOutput,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                                      isIndicatingMissingResponses: boolean, isShownStats: boolean): string[][] {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const csvRows: string[][] \u003d [];"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    csvRows.push([`Question ${question.feedbackQuestion.questionNumber}`, question.feedbackQuestion.questionBrief]);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    this.generateEmptyRow(csvRows);"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    // TODO add stats"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    if (isShownStats) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      const statsRows: string[][] \u003d this.getQuestionStats(question);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      if (statsRows.length \u003e 0) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        csvRows.push([\u0027Summary Statistics\u0027]);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        csvRows.push(...statsRows);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.generateEmptyRow(csvRows);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.generateEmptyRow(csvRows);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    if (!isIndicatingMissingResponses) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      // remove missing responses if not to show them"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      question.allResponses \u003d question.allResponses.filter((response: ResponseOutput) \u003d\u003e !response.isMissingResponse);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    const questionSpecificHeaders: string[] \u003d this.getQuestionSpecificHeaders(question.feedbackQuestion);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    const header: string[] \u003d [\u0027Team\u0027, \"Giver\u0027s Name\", \"Giver\u0027s Email\", \"Recipient\u0027s Team\","},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \"Recipient\u0027s Name\", \"Recipient\u0027s Email\","},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"      ...questionSpecificHeaders];"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const isParticipantCommentsOnResponsesAllowed: boolean \u003d"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        this.getIsParticipantCommentsOnResponsesAllowed(question.feedbackQuestion);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    if (isParticipantCommentsOnResponsesAllowed) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      header.push(\"Giver\u0027s Comments\");"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    const isInstructorCommentsOnResponsesAllowed: boolean \u003d"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        this.getIsInstructorCommentsOnResponsesAllowed(question.feedbackQuestion);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    if (isInstructorCommentsOnResponsesAllowed) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      const maxNumOfInstructorComments: number \u003d question.allResponses"},{"lineNumber":129,"author":{"gitId":"-"},"content":"          .map((response: ResponseOutput) \u003d\u003e response.instructorComments.length)"},{"lineNumber":130,"author":{"gitId":"-"},"content":"          .reduce((prev: number, cur: number) \u003d\u003e Math.max(prev, cur), 0);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      for (let i: number \u003d 0; i \u003c maxNumOfInstructorComments; i +\u003d 1) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        header.push(\u0027Comment From\u0027, \u0027Comment\u0027);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    csvRows.push(header);"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    // sort the responses by giver then recipient"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    question.allResponses.sort((responseA: ResponseOutput, responseB: ResponseOutput): number \u003d\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      return responseA.giver.localeCompare(responseB.giver)"},{"lineNumber":141,"author":{"gitId":"-"},"content":"          || responseA.recipient.localeCompare(responseB.recipient);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    for (const response of question.allResponses) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      const giverTeamName: string \u003d StringHelper.removeExtraSpace(response.giverTeam);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      const giverName: string \u003d StringHelper.removeExtraSpace(response.giver);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      const giverEmail: string \u003d response.giverEmail ? StringHelper.removeExtraSpace(response.giverEmail) : \u0027\u0027;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      const recipientTeamName: string \u003d StringHelper.removeExtraSpace(response.recipientTeam);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      const recipientName: string \u003d StringHelper.removeExtraSpace(response.recipient);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      const recipientEmail: string \u003d"},{"lineNumber":151,"author":{"gitId":"-"},"content":"          response.recipientEmail ? StringHelper.removeExtraSpace(response.recipientEmail) : \u0027\u0027;"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"      let responseAnswers: string[][] \u003d [];"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      if (response.isMissingResponse) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        responseAnswers \u003d this.getMissingResponseAnswers(question.feedbackQuestion);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        responseAnswers \u003d this.getResponseAnswers(response, question.feedbackQuestion);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"      // Pad responseAnswers so that responseAnswers and questionSpecificHeaders"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"      // are always the same length."},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"      const responseAnswersPadding: string[] \u003d"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"          Array(questionSpecificHeaders.length - responseAnswers[0].length).fill(\u0027\u0027);"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"      responseAnswers[0] \u003d responseAnswers[0].concat(responseAnswersPadding);"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"      for (const responseAnswer of responseAnswers) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        const currRow: string[] \u003d [giverTeamName, giverName, giverEmail,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          recipientTeamName, recipientName, recipientEmail, ...responseAnswer];"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (isParticipantCommentsOnResponsesAllowed) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"          const participantCommentHtml: string \u003d"},{"lineNumber":172,"author":{"gitId":"-"},"content":"              response.participantComment ? response.participantComment.commentText : \u0027\u0027;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"          const participantComment: string \u003d StringHelper.getTextFromHtml(participantCommentHtml);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          const imgLinks: string \u003d StringHelper.convertImageToLinkInHtml(participantCommentHtml);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          currRow.push(participantComment + imgLinks);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (isInstructorCommentsOnResponsesAllowed) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          for (const commentOutput of response.instructorComments) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            const instructorName: string \u003d commentOutput.commentGiverName ? commentOutput.commentGiverName : \u0027\u0027;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            const instructorCommentHtml: string \u003d commentOutput.commentText;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            const instructorComment: string \u003d StringHelper.getTextFromHtml(instructorCommentHtml);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            const imgLinks: string \u003d StringHelper.convertImageToLinkInHtml(instructorCommentHtml);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            currRow.push(instructorName, instructorComment + imgLinks);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        csvRows.push(currRow);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    this.generateEmptyRow(csvRows);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    this.generateEmptyRow(csvRows);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    return csvRows;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":198,"author":{"gitId":"-"},"content":"   * Gets question stats for a question."},{"lineNumber":199,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  private getQuestionStats(question: QuestionOutput): string[][] {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    return FeedbackQuestionDetailsFactory"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        .fromApiOutput(question.feedbackQuestion.questionDetails)"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        .getQuestionCsvStats(question);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   * Gets answer(s) for a missing response in CSV version."},{"lineNumber":208,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  private getMissingResponseAnswers(question: FeedbackQuestion): string[][] {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return FeedbackQuestionDetailsFactory"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        .fromApiOutput(question.questionDetails)"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        .getMissingResponseCsvAnswers();"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * Gets answer(s) for a response in CSV version."},{"lineNumber":217,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  private getResponseAnswers(response: ResponseOutput, question: FeedbackQuestion): string[][] {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    return FeedbackResponseDetailsFactory"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        .fromApiOutput(response.responseDetails)"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        .getResponseCsvAnswers(question.questionDetails);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":225,"author":{"gitId":"-"},"content":"   * Gets specific header names according to the question."},{"lineNumber":226,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  private getQuestionSpecificHeaders(question: FeedbackQuestion): string[] {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    return FeedbackQuestionDetailsFactory"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        .fromApiOutput(question.questionDetails)"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        .getQuestionCsvHeaders();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":234,"author":{"gitId":"-"},"content":"   * Gets whether a feedback participant can comment on the question"},{"lineNumber":235,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  private getIsParticipantCommentsOnResponsesAllowed(question: FeedbackQuestion): boolean {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    return FeedbackQuestionDetailsFactory"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        .fromApiOutput(question.questionDetails)"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        .isParticipantCommentsOnResponsesAllowed();"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   * Gets whether an instructor can comment on the question"},{"lineNumber":244,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  private getIsInstructorCommentsOnResponsesAllowed(question: FeedbackQuestion): boolean {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    return FeedbackQuestionDetailsFactory"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        .fromApiOutput(question.questionDetails)"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        .isInstructorCommentsOnResponsesAllowed();"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   * Generates an empty row in the {@code csvRows}."},{"lineNumber":253,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  private generateEmptyRow(csvRows: string[][]): void {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    csvRows.push([]);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":248,"samuelfangjw":9}},{"path":"src/web/services/simple-modal.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable, TemplateRef } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"import { NgbModal, NgbModalOptions, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../app/components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { SimpleModalComponent } from \u0027../app/components/simple-modal/simple-modal.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Optional parameters for modal."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"export interface SimpleModalOptions {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // determines if there should be 2 buttons for confirmation or only 1 button to close the modal"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  isInformationOnly?: boolean;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  confirmMessage?: string; // custom text message for confirm button"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  cancelMessage?: string; // custom text message for cancel button"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Service to handle display of confirmation modals."},{"lineNumber":18,"author":{"gitId":"-"},"content":" * For more a complicated use case, use {@link NgbModal} directly."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class SimpleModalService {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  constructor(private ngbModal: NgbModal) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * Opens a confirmation modal."},{"lineNumber":30,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * @param header to be displayed on the modal"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * @param type which determines the look of the modal"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * @param content to be displayed in the body of the modal. content supports HTML tags"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"   * @param simpleModalOptions See {@code SimpleModalOptions}"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"   * @param ngbModalOptions See {@code NgbModalOptions}"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"  private open(header: string, type: SimpleModalType, content: string | TemplateRef\u003cany\u003e,"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"      simpleModalOptions?: SimpleModalOptions, ngbModalOptions?: NgbModalOptions): NgbModalRef {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(SimpleModalComponent, ngbModalOptions);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.header \u003d header;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.content \u003d content;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.type \u003d type;"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    if (simpleModalOptions) {"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      Object.entries(simpleModalOptions).forEach(([key, value]: [string, string | boolean]) \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modalRef.componentInstance[key] \u003d value;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    return modalRef;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"  openConfirmationModal(header: string, type: SimpleModalType, content: string | TemplateRef\u003cany\u003e,"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"      simpleModalOptions?: SimpleModalOptions, ngbModalOptions?: NgbModalOptions): NgbModalRef {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    const modalOptions: SimpleModalOptions \u003d {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      isInformationOnly: false,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      confirmMessage: \u0027Yes\u0027,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      cancelMessage: \u0027No, cancel the operation\u0027,"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"      ...simpleModalOptions,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    return this.open(header, type, content, modalOptions, ngbModalOptions);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"  openInformationModal(header: string, type: SimpleModalType, content: string | TemplateRef\u003cany\u003e,"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"      simpleModalOptions?: SimpleModalOptions, ngbModalOptions?: NgbModalOptions): NgbModalRef {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    const modalOptions: SimpleModalOptions \u003d {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      isInformationOnly: true,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      confirmMessage: \u0027OK\u0027,"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"      ...simpleModalOptions,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    return this.open(header, type, content, modalOptions, ngbModalOptions);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"  openLoadingModal(header: string, type: SimpleModalType, content: string | TemplateRef\u003cany\u003e,"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"      simpleModalOptions?: SimpleModalOptions, ngbModalOptions?: NgbModalOptions): NgbModalRef {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    const modalOptions: SimpleModalOptions \u003d {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      isInformationOnly: true,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      confirmMessage: \u0027Abort\u0027,"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"      ...simpleModalOptions,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    return this.open(header, type, content, modalOptions, ngbModalOptions);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":61,"samuelfangjw":20}},{"path":"src/web/types/question-details-impl/feedback-msq-question-details.impl.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  MsqQuestionStatisticsCalculation,"},{"lineNumber":3,"author":{"gitId":"-"},"content":"} from \u0027../../app/components/question-types/question-statistics/question-statistics-calculation/msq-question-statistics-calculation\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackMsqQuestionDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackQuestionType, QuestionOutput,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"} from \u0027../api-output\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NO_VALUE } from \u0027../feedback-response-details\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { AbstractFeedbackMcqMsqQuestionDetails } from \u0027./abstract-feedback-mcq-msq-question-details\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Concrete implementation of {@link FeedbackMsqQuestionDetails}."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class FeedbackMsqQuestionDetailsImpl extends AbstractFeedbackMcqMsqQuestionDetails"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    implements FeedbackMsqQuestionDetails {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  msqChoices: string[] \u003d [];"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  otherEnabled: boolean \u003d false;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  generateOptionsFor: FeedbackParticipantType \u003d FeedbackParticipantType.NONE;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  maxSelectableChoices: number \u003d NO_VALUE;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  minSelectableChoices: number \u003d NO_VALUE;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  hasAssignedWeights: boolean \u003d false;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  msqWeights: number[] \u003d [];"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  msqOtherWeight: number \u003d 0;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  questionText: string \u003d \u0027\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType \u003d FeedbackQuestionType.MSQ;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  constructor(apiOutput: FeedbackMsqQuestionDetails) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    super();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.msqChoices \u003d apiOutput.msqChoices;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.otherEnabled \u003d apiOutput.otherEnabled;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.generateOptionsFor \u003d apiOutput.generateOptionsFor;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.maxSelectableChoices \u003d apiOutput.maxSelectableChoices;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    this.minSelectableChoices \u003d apiOutput.minSelectableChoices;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    this.hasAssignedWeights \u003d apiOutput.hasAssignedWeights;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    this.msqWeights \u003d apiOutput.msqWeights;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.msqOtherWeight \u003d apiOutput.msqOtherWeight;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    this.questionText \u003d apiOutput.questionText;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  getQuestionCsvHeaders(): string[] {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    return [\u0027Feedback\u0027, ...this.msqChoices];"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  getQuestionCsvStats(question: QuestionOutput): string[][] {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const statsRows: string[][] \u003d [];"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    const statsCalculation: MsqQuestionStatisticsCalculation \u003d new MsqQuestionStatisticsCalculation(this);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    this.populateQuestionStatistics(statsCalculation, question);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    statsCalculation.calculateStatistics();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    if (statsCalculation.responses.length \u003d\u003d\u003d 0 || !statsCalculation.hasAnswers) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      // skip stats for no response"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      return [];"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    statsRows.push(...this.getQuestionCsvStatsFrom(statsCalculation, statsCalculation.question.hasAssignedWeights));"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    return statsRows;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  isParticipantCommentsOnResponsesAllowed(): boolean {"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    return true;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  isInstructorCommentsOnResponsesAllowed(): boolean {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    return true;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":68,"samuelfangjw":1}},{"path":"src/web/types/sort-properties.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Elements that tables are sorted by."},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export enum SortBy {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"-"},"content":"     * Nothing."},{"lineNumber":7,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    NONE,"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Section Name."},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    SECTION_NAME,"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Team name."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    TEAM_NAME,"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Respondent Name (student/instructor)."},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    RESPONDENT_NAME,"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The email of a respondent (student/instructor)."},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    RESPONDENT_EMAIL,"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * The gender of the student."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    STUDENT_GENDER,"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Institution."},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    INSTITUTION,"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Nationality."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    NATIONALITY,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Join status"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     JOIN_STATUS,"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Course ID."},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    COURSE_ID,"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Course Name."},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    COURSE_NAME,"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * The creation time of the course."},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    COURSE_CREATION_DATE,"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The deletion time of the course."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    COURSE_DELETION_DATE,"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Completion status of feedback session."},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    SESSION_COMPLETION_STATUS,"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Feedback session name."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    SESSION_NAME,"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Start time of the feedback session."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    SESSION_START_DATE,"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * End time of the feedback session."},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    SESSION_END_DATE,"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The creation time of the feedback session."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    SESSION_CREATION_DATE,"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The time when the feedback session is moved to recycle bin."},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    SESSION_DELETION_DATE,"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Feedback question type."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    QUESTION_TYPE,"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Feedback question text (brief)."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    QUESTION_TEXT,"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Team of the giver of the feedback response."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    GIVER_TEAM,"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Name of the giver of the feedback response."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    GIVER_NAME,"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Team of the recipient of the feedback response."},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    RECIPIENT_TEAM,"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Name of the recipient of the feedback response."},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    RECIPIENT_NAME,"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Average score of the numerical scale question."},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_AVERAGE,"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Maximum score of the numerical scale question."},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_MAX,"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Minimum score of the numerical scale question."},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_MIN,"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Average score (exclude self-review) of the numerical scale question."},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_AVERAGE_EXCLUDE_SELF,"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Option text"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    MCQ_CHOICE,"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Weight assigned to the option"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    MCQ_WEIGHT,"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Number of selection of that option"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    MCQ_RESPONSE_COUNT,"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Percentage of selection of that option"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    MCQ_PERCENTAGE,"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Weighted percentage of selection of that option"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    MCQ_WEIGHTED_PERCENTAGE,"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Team"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    MCQ_TEAM,"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Name"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    MCQ_RECIPIENT_NAME,"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Number of times option chosen"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    MCQ_OPTION_SELECTED_TIMES,"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Sum of weight of options"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    MCQ_WEIGHT_TOTAL,"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Average of weights"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    MCQ_WEIGHT_AVERAGE,"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Option text"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    MSQ_CHOICE,"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Weight assigned to the option"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    MSQ_WEIGHT,"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Number of selection of that option"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    MSQ_RESPONSE_COUNT,"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Percentage of selection of that option"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    MSQ_PERCENTAGE,"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Weighted percentage of selection of that option"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    MSQ_WEIGHTED_PERCENTAGE,"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Team"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    MSQ_TEAM,"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Name"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    MSQ_RECIPIENT_NAME,"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * Number of times option chosen"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    MSQ_OPTION_SELECTED_TIMES,"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * Sum of weight of options"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    MSQ_WEIGHT_TOTAL,"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * Average of weights"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    MSQ_WEIGHT_AVERAGE,"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Option to rank"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    RANK_OPTIONS_OPTION,"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Overall ranking of the option"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    RANK_OPTIONS_OVERALL_RANK,"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"     * Giver\u0027s / Recipient\u0027s team"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_TEAM,"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * Recipient\u0027s name"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_RECIPIENT,"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * Recipient\u0027s self rank"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_SELF_RANK,"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * Recipient\u0027s overall rank"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_OVERALL_RANK,"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * Recipient\u0027s overall rank excluding self"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_OVERALL_RANK_EXCLUDING_SELF,"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * Recipient\u0027s team rank"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_TEAM_RANK,"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * Recipient\u0027s team rank excluding self"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_TEAM_RANK_EXCLUDING_SELF,"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * Rubric sub question"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    RUBRIC_SUBQUESTION,"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * Frequency of choice"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    RUBRIC_CHOICE,"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     * Weight average."},{"lineNumber":307,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    RUBRIC_WEIGHT_AVERAGE,"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * Total chosen weight."},{"lineNumber":312,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    RUBRIC_TOTAL_CHOSEN_WEIGHT,"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     * Option to constsum options"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    CONSTSUM_OPTIONS_OPTION,"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":321,"author":{"gitId":"samuelfangjw"},"content":"     * Option\u0027s received/total/average points"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    CONSTSUM_OPTIONS_POINTS,"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     * Recipient\u0027s received/total/average/average excluding self points"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    CONSTSUM_RECIPIENTS_POINTS,"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":331,"author":{"gitId":"-"},"content":"     * Team for contribution measurement"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    CONTRIBUTION_TEAM,"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * Contribution recipient\u0027s name"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    CONTRIBUTION_RECIPIENT,"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     * Amount of contribution measured in numbers"},{"lineNumber":342,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    CONTRIBUTION_VALUE,"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * The creation date of a comment"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    COMMENTS_CREATION_DATE,"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":351,"author":{"gitId":"-"},"content":"     * The type of log"},{"lineNumber":352,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    LOG_TYPE,"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * The date of log"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    LOG_DATE,"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * The status of result view"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    RESULT_VIEW_STATUS,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":367,"author":{"gitId":"-"},"content":" * Sort order."},{"lineNumber":368,"author":{"gitId":"-"},"content":" */"},{"lineNumber":369,"author":{"gitId":"-"},"content":"export enum SortOrder {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":371,"author":{"gitId":"-"},"content":"     * Descending sort order."},{"lineNumber":372,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    DESC,"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":376,"author":{"gitId":"-"},"content":"     * Ascending sort order"},{"lineNumber":377,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    ASC,"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":377,"samuelfangjw":2}}]
