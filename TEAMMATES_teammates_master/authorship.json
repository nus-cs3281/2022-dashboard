[{"path":"src/e2e/java/teammates/e2e/cases/AdminHomePageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.AdminHomePage;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#ADMIN_HOME_PAGE}."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AdminHomePageE2ETest extends BaseE2ETestCase {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // no test data used in this test"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.ADMIN_HOME_PAGE);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AdminHomePage homePage \u003d loginAdminToPage(url, AdminHomePage.class);"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        String name \u003d \"AHPUiT Instrúctör WithPlusInEmail\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String email \u003d \"AHPUiT+++_.instr1!@gmail.tmt\";"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String institute \u003d \"TEAMMATES Test Institute 1\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        homePage.queueInstructorForAdding(name, email, institute);"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String singleLineDetails \u003d \"Instructor With Invalid Email | invalidemail | TEAMMATES Test Institute 1\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        homePage.queueInstructorForAdding(singleLineDetails);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        homePage.addAllInstructors();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String successMessage \u003d homePage.getMessageForInstructor(0);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(successMessage.contains("},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \"Instructor \\\"AHPUiT Instrúctör WithPlusInEmail\\\" has been successfully created\"));"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String failureMessage \u003d homePage.getMessageForInstructor(1);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(failureMessage.contains("},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \"\\\"invalidemail\\\" is not acceptable to TEAMMATES as a/an email because it is not in the correct format.\"));"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(BACKDOOR.getAccountRequest(email, institute));"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        BACKDOOR.deleteAccountRequest(email, institute);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":47,"samuelfangjw":2}},{"path":"src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.ITestContext;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterClass;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.exception.HttpRequestFailedException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.AppPage;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.Browser;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.DevServerLoginPage;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.HomePage;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.e2e.util.BackDoor;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.e2e.util.EmailAccount;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCaseWithDatabaseAccess;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.test.FileHelper;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Base class for all browser tests."},{"lineNumber":39,"author":{"gitId":"-"},"content":" *"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis type of test has no knowledge of the workings of the application,"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * and can only communicate via the UI or via {@link BackDoor} to obtain/transmit data."},{"lineNumber":42,"author":{"gitId":"-"},"content":" */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public abstract class BaseE2ETestCase extends BaseTestCaseWithDatabaseAccess {"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    static final BackDoor BACKDOOR \u003d BackDoor.getInstance();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    DataBundle testData;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Browser browser;"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void baseClassSetup() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        prepareTestData();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        prepareBrowser();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Prepares the browser used for the current test."},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    protected void prepareBrowser() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        browser \u003d new Browser();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Prepares the test data used for the current test."},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    protected abstract void prepareTestData();"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Contains all the tests for the page."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThis approach is chosen so that setup and teardown are only needed once per test page,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * thereby saving time. While it necessitates failed tests to be restarted from the beginning,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * test failures are rare and thus not causing significant overhead."},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    protected abstract void testAll();"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    protected String getTestDataFolder() {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return TestProperties.TEST_DATA_FOLDER;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void baseClassTearDown(ITestContext context) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (browser \u003d\u003d null) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        boolean isSuccess \u003d context.getFailedTests().getAllMethods()"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .noneMatch(method -\u003e method.getConstructorOrMethod().getMethod().getDeclaringClass() \u003d\u003d this.getClass());"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isSuccess || TestProperties.CLOSE_BROWSER_ON_FAILURE) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            browser.close();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Creates an {@link AppUrl} for the supplied {@code relativeUrl} parameter."},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The base URL will be the value of test.app.frontend.url in test.properties."},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code relativeUrl} must start with a \"/\"."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    protected static AppUrl createFrontendUrl(String relativeUrl) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new AppUrl(TestProperties.TEAMMATES_FRONTEND_URL + relativeUrl);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Creates an {@link AppUrl} for the supplied {@code relativeUrl} parameter."},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The base URL will be the value of test.app.backend.url in test.properties."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code relativeUrl} must start with a \"/\"."},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected static AppUrl createBackendUrl(String relativeUrl) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new AppUrl(TestProperties.TEAMMATES_BACKEND_URL + relativeUrl);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Logs in to a page using the given credentials."},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    protected \u003cT extends AppPage\u003e T loginToPage(AppUrl url, Class\u003cT\u003e typeOfPage, String userId) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // When not using dev server, Google blocks log in by automation."},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // To work around that, we inject the user cookie directly into the browser session."},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!TestProperties.isDevServer()) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            // In order for the cookie injection to work, we need to be in the domain."},{"lineNumber":121,"author":{"gitId":"-"},"content":"            // Use the home page to minimize the page load time."},{"lineNumber":122,"author":{"gitId":"-"},"content":"            browser.goToUrl(TestProperties.TEAMMATES_FRONTEND_URL);"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String cookieValue \u003d BACKDOOR.getUserCookie(userId);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            browser.addCookie(Const.SecurityConfig.AUTH_COOKIE_NAME, cookieValue, true, true);"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return getNewPageInstance(url, typeOfPage);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // This will be redirected to the dev server login page."},{"lineNumber":131,"author":{"gitId":"-"},"content":"        browser.goToUrl(url.toAbsoluteString());"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        DevServerLoginPage loginPage \u003d AppPage.getNewPageInstance(browser, DevServerLoginPage.class);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        loginPage.loginAsUser(userId);"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return getNewPageInstance(url, typeOfPage);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Logs in to a page using admin credentials."},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected \u003cT extends AppPage\u003e T loginAdminToPage(AppUrl url, Class\u003cT\u003e typeOfPage) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return loginToPage(url, typeOfPage, TestProperties.TEST_ADMIN);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Equivalent to clicking the \u0027logout\u0027 link in the top menu of the page."},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    protected void logout() {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        browser.goToUrl(createBackendUrl(Const.WebPageURIs.LOGOUT).toAbsoluteString());"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        AppPage.getNewPageInstance(browser, HomePage.class).waitForPageToLoad();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Deletes file with fileName from the downloads folder."},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    protected void deleteDownloadsFile(String fileName) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String filePath \u003d TestProperties.TEST_DOWNLOADS_FOLDER + fileName;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        FileHelper.deleteFile(filePath);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Verifies downloaded file has correct fileName and contains expected content."},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected void verifyDownloadedFile(String expectedFileName, List\u003cString\u003e expectedContent) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String filePath \u003d TestProperties.TEST_DOWNLOADS_FOLDER + expectedFileName;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        int retryLimit \u003d TestProperties.TEST_TIMEOUT;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        boolean actual \u003d Files.exists(Paths.get(filePath));"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        while (!actual \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            actual \u003d Files.exists(Paths.get(filePath));"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(actual);"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            String actualContent \u003d FileHelper.readFile(filePath);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            for (String content : expectedContent) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                assertTrue(actualContent.contains(content));"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Visits the URL and gets the page object representation of the visited web page in the browser."},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    protected \u003cT extends AppPage\u003e T getNewPageInstance(AppUrl url, Class\u003cT\u003e typeOfPage) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        browser.goToUrl(url.toAbsoluteString());"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return AppPage.getNewPageInstance(browser, typeOfPage);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Verifies that email with subject is found in inbox."},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Email used must be an authentic gmail account."},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    protected void verifyEmailSent(String email, String subject) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        if (TestProperties.isDevServer() || !TestProperties.INCLUDE_EMAIL_VERIFICATION) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!TestProperties.TEST_EMAIL.equals(email)) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            fail(\"Email verification is allowed only on preset test email.\");"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EmailAccount emailAccount \u003d new EmailAccount(email);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            emailAccount.getUserAuthenticated();"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            int retryLimit \u003d 5;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            boolean actual \u003d emailAccount.isRecentEmailWithSubjectPresent(subject, TestProperties.TEST_SENDER_EMAIL);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            while (!actual \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                retryLimit--;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                ThreadHelper.waitFor(1000);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                actual \u003d emailAccount.isRecentEmailWithSubjectPresent(subject, TestProperties.TEST_SENDER_EMAIL);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            assertTrue(actual);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            fail(\"Failed to verify email sent:\" + e);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    AccountAttributes getAccount(String googleId) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return BACKDOOR.getAccount(googleId);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    protected AccountAttributes getAccount(AccountAttributes account) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        return getAccount(account.getGoogleId());"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @SuppressWarnings(\"PMD.EmptyMethodInAbstractClassShouldBeAbstract\")"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    protected StudentProfileAttributes getStudentProfile(StudentProfileAttributes studentProfileAttributes) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        return null; // BACKDOOR.getStudentProfile(studentProfileAttributes.googleId);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    CourseAttributes getCourse(String courseId) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return BACKDOOR.getCourse(courseId);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    protected CourseAttributes getCourse(CourseAttributes course) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return getCourse(course.getId());"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    CourseAttributes getArchivedCourse(String instructorId, String courseId) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return BACKDOOR.getArchivedCourse(instructorId, courseId);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    FeedbackQuestionAttributes getFeedbackQuestion(String courseId, String feedbackSessionName, int qnNumber) {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackQuestion(courseId, feedbackSessionName, qnNumber);"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    protected FeedbackQuestionAttributes getFeedbackQuestion(FeedbackQuestionAttributes fq) {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        return getFeedbackQuestion(fq.getCourseId(), fq.getFeedbackSessionName(), fq.getQuestionNumber());"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"    FeedbackResponseCommentAttributes getFeedbackResponseComment(String feedbackResponseId) {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackResponseComment(feedbackResponseId);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    protected FeedbackResponseCommentAttributes getFeedbackResponseComment(FeedbackResponseCommentAttributes frc) {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return getFeedbackResponseComment(frc.getFeedbackResponseId());"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"    FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId, String giver, String recipient) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackResponse(feedbackQuestionId, giver, recipient);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    protected FeedbackResponseAttributes getFeedbackResponse(FeedbackResponseAttributes fr) {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        return getFeedbackResponse(fr.getFeedbackQuestionId(), fr.getGiver(), fr.getRecipient());"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"    FeedbackSessionAttributes getFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackSession(courseId, feedbackSessionName);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    protected FeedbackSessionAttributes getFeedbackSession(FeedbackSessionAttributes fs) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        return getFeedbackSession(fs.getCourseId(), fs.getFeedbackSessionName());"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    FeedbackSessionAttributes getSoftDeletedSession(String feedbackSessionName, String instructorId) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return BACKDOOR.getSoftDeletedSession(feedbackSessionName, instructorId);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"    InstructorAttributes getInstructor(String courseId, String instructorEmail) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        return BACKDOOR.getInstructor(courseId, instructorEmail);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    protected InstructorAttributes getInstructor(InstructorAttributes instructor) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        return getInstructor(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    String getKeyForInstructor(String courseId, String instructorEmail) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        return getInstructor(courseId, instructorEmail).getKey();"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    protected StudentAttributes getStudent(StudentAttributes student) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return BACKDOOR.getStudent(student.getCourse(), student.getEmail());"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"    String getKeyForStudent(StudentAttributes student) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        return getStudent(student).getKey();"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":312,"author":{"gitId":"samuelfangjw"},"content":"    protected AccountRequestAttributes getAccountRequest(AccountRequestAttributes accountRequest) {"},{"lineNumber":313,"author":{"gitId":"samuelfangjw"},"content":"        return BACKDOOR.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":314,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    protected boolean doRemoveAndRestoreDataBundle(DataBundle testData) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            BACKDOOR.removeAndRestoreDataBundle(testData);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        } catch (HttpRequestFailedException e) {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    protected boolean doPutDocuments(DataBundle testData) {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            BACKDOOR.putDocuments(testData);"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        } catch (HttpRequestFailedException e) {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":332,"samuelfangjw":6}},{"path":"src/e2e/java/teammates/e2e/cases/InstructorCourseJoinConfirmationPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.CourseJoinConfirmationPage;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorHomePage;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#JOIN_PAGE}."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class InstructorCourseJoinConfirmationPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    InstructorAttributes newInstructor;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorCourseJoinConfirmationPageE2ETest.json\");"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"        newInstructor \u003d testData.instructors.get(\"ICJoinConf.instr.CS1101\");"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        newInstructor.setGoogleId(\"tm.e2e.ICJoinConf.instr2\");"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ______TS(\"Click join link: invalid key\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String invalidKey \u003d \"invalidKey\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AppUrl joinLink \u003d createFrontendUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                .withRegistrationKey(invalidKey)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        CourseJoinConfirmationPage confirmationPage \u003d loginToPage("},{"lineNumber":35,"author":{"gitId":"-"},"content":"                joinLink, CourseJoinConfirmationPage.class, newInstructor.getGoogleId());"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        confirmationPage.verifyDisplayedMessage(\"The course join link is invalid. You may have \""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \"entered the URL incorrectly or the URL may correspond to a/an instructor that does not exist.\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ______TS(\"Click join link: valid key\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String courseId \u003d testData.courses.get(\"ICJoinConf.CS1101\").getId();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String instructorEmail \u003d newInstructor.getEmail();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        joinLink \u003d createFrontendUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .withRegistrationKey(getKeyForInstructor(courseId, instructorEmail))"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        confirmationPage \u003d getNewPageInstance(joinLink, CourseJoinConfirmationPage.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        confirmationPage.verifyJoiningUser(newInstructor.getGoogleId());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        confirmationPage.confirmJoinCourse(InstructorHomePage.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ______TS(\"Already joined, no confirmation page\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"        getNewPageInstance(joinLink, InstructorHomePage.class);"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        logout();"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Click join link: invalid key\");"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        joinLink \u003d createFrontendUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                .withIsCreatingAccount(\"true\")"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                .withRegistrationKey(invalidKey);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage \u003d loginToPage(joinLink, CourseJoinConfirmationPage.class, \"ICJoinConf.newinstr\");"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage.verifyDisplayedMessage(\"The course join link is invalid. You may have \""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"                + \"entered the URL incorrectly or the URL may correspond to a/an instructor that does not exist.\");"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Click join link: valid account request key\");"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        String regKey \u003d BACKDOOR"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                .getRegKeyForAccountRequest(\"ICJoinConf.newinstr@gmail.tmt\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        joinLink \u003d createFrontendUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                .withIsCreatingAccount(\"true\")"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                .withRegistrationKey(regKey);"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage \u003d getNewPageInstance(joinLink, CourseJoinConfirmationPage.class);"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage.verifyJoiningUser(\"ICJoinConf.newinstr\");"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        confirmationPage.confirmJoinCourse(InstructorHomePage.class);"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Regkey for account request used, no confirmation page\");"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        getNewPageInstance(joinLink, InstructorHomePage.class);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":55,"samuelfangjw":28}},{"path":"src/main/java/teammates/common/datatransfer/DataBundle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Holds a bundle of *Attributes data transfer objects."},{"lineNumber":19,"author":{"gitId":"-"},"content":" *"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis class is mainly used for serializing JSON strings."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// CHECKSTYLE.OFF:JavadocVariable each field represents different entity types"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DataBundle {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Map\u003cString, AccountAttributes\u003e accounts \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public Map\u003cString, AccountRequestAttributes\u003e accountRequests \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Map\u003cString, CourseAttributes\u003e courses \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Map\u003cString, InstructorAttributes\u003e instructors \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Map\u003cString, StudentAttributes\u003e students \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackSessionAttributes\u003e feedbackSessions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackQuestionAttributes\u003e feedbackQuestions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackResponseAttributes\u003e feedbackResponses \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackResponseCommentAttributes\u003e feedbackResponseComments \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Map\u003cString, StudentProfileAttributes\u003e profiles \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":32,"samuelfangjw":2}},{"path":"src/main/java/teammates/common/datatransfer/attributes/AccountRequestAttributes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Config;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * The data transfer object for {@link AccountRequest} entities."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestAttributes extends EntityAttributes\u003cAccountRequest\u003e {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private String email;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private String name;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private String institute;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private Instant registeredAt;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private Instant createdAt;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private transient String registrationKey;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequestAttributes(String email, String institute, String name) {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        this.email \u003d email;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        this.institute \u003d institute;"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        this.name \u003d name;"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        this.registrationKey \u003d null;"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        this.registeredAt \u003d null;"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.createdAt \u003d null;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Gets the {@link AccountRequestAttributes} instance of the given {@link AccountRequest}."},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public static AccountRequestAttributes valueOf(AccountRequest accountRequest) {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d new AccountRequestAttributes(accountRequest.getEmail(),"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                accountRequest.getInstitute(), accountRequest.getName());"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestAttributes.registrationKey \u003d accountRequest.getRegistrationKey();"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestAttributes.registeredAt \u003d accountRequest.getRegisteredAt();"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestAttributes.createdAt \u003d accountRequest.getCreatedAt();"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestAttributes;"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a builder for {@link AccountRequestAttributes}."},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public static Builder builder(String email, String institute, String name) {"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        return new Builder(email, institute, name);"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegistrationKey() {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return registrationKey;"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public String getName() {"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return name;"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public String getEmail() {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        return email;"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public String getInstitute() {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return institute;"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    public Instant getRegisteredAt() {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        return registeredAt;"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    public Instant getCreatedAt() {"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        return createdAt;"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegistrationUrl() {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        return Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"                .withIsCreatingAccount(\"true\")"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"                .withRegistrationKey(this.getRegistrationKey())"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                .toAbsoluteString();"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cString\u003e getInvalidityInfo() {"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForEmail(getEmail()), errors);"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForPersonName(getName()), errors);"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForInstituteName(getInstitute()), errors);"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        return errors;"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequest toEntity() {"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(getEmail(), getName(), getInstitute());"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        if (this.getRegistrationKey() !\u003d null) {"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"            accountRequest.setRegistrationKey(this.getRegistrationKey());"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        if (this.getCreatedAt() !\u003d null) {"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"            accountRequest.setCreatedAt(this.getCreatedAt());"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegisteredAt(this.getRegisteredAt());"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequest;"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        return \"[\" + AccountRequestAttributes.class.getSimpleName() + \"] email: \""},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"                + getEmail() + \" name: \" + getName() + \" institute: \" + getInstitute();"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        return (this.email + this.name + this.institute).hashCode();"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d null) {"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"            return false;"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        } else if (this \u003d\u003d other) {"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"            return true;"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        } else if (this.getClass() \u003d\u003d other.getClass()) {"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes otherAccountRequest \u003d (AccountRequestAttributes) other;"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            return Objects.equals(this.email, otherAccountRequest.email)"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"                    \u0026\u0026 Objects.equals(this.institute, otherAccountRequest.institute)"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"                    \u0026\u0026 Objects.equals(this.name, otherAccountRequest.name);"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        } else {"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"            return false;"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    public void sanitizeForSaving() {"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        this.institute \u003d SanitizationHelper.sanitizeTitle(institute);"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        this.name \u003d SanitizationHelper.sanitizeName(name);"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        this.email \u003d SanitizationHelper.sanitizeEmail(email);"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"     * Updates with {@link UpdateOptions}."},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"    public void update(UpdateOptions updateOptions) {"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        updateOptions.registeredAtOption.ifPresent(s -\u003e registeredAt \u003d s);"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a {@link UpdateOptions.Builder} to build {@link UpdateOptions} for an account request."},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(String email, String institute) {"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        return new UpdateOptions.Builder(email, institute);"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"     * A builder for {@link AccountRequestAttributes}."},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"    public static class Builder extends BasicBuilder\u003cAccountRequestAttributes, Builder\u003e {"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"        private final AccountRequestAttributes accountRequestAttributes;"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"        private Builder(String email, String institute, String name) {"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"            super(new UpdateOptions(email, institute));"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"            thisBuilder \u003d this;"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestAttributes \u003d new AccountRequestAttributes(email, institute, name);"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        @Override"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"        public AccountRequestAttributes build() {"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestAttributes.update(updateOptions);"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"            return accountRequestAttributes;"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"     * Helper class to specify the fields to update in {@link AccountRequestAttributes}."},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"    public static class UpdateOptions {"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"        private String email;"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        private String institute;"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"        private UpdateOption\u003cInstant\u003e registeredAtOption \u003d UpdateOption.empty();"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"        private UpdateOptions(String email, String institute) {"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"            assert email !\u003d null;"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"            assert institute !\u003d null;"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"            this.email \u003d email;"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"            this.institute \u003d institute;"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"        public String getEmail() {"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"            return email;"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"        public String getInstitute() {"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"            return institute;"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"        @Override"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"        public String toString() {"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"            return \"AccountRequestAttributes.UpdateOptions [\""},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"                    + \", email \u003d \" + email"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"                    + \", institute \u003d \" + institute"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"                    + \", registeredAt \u003d \" + registeredAtOption"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"                    + \"]\";"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"        /**"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"         * Builder class to build {@link UpdateOptions}."},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"         */"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"        public static class Builder extends BasicBuilder\u003cUpdateOptions, Builder\u003e {"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"            private Builder(String email, String institute) {"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"                super(new UpdateOptions(email, institute));"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"                thisBuilder \u003d this;"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"            @Override"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"            public UpdateOptions build() {"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"                return updateOptions;"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"     * Basic builder to build {@link AccountRequestAttributes} related classes."},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"     * @param \u003cT\u003e type to be built"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"     * @param \u003cB\u003e type of the builder"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"    private abstract static class BasicBuilder\u003cT, B extends BasicBuilder\u003cT, B\u003e\u003e {"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"        UpdateOptions updateOptions;"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"        B thisBuilder;"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"        BasicBuilder(UpdateOptions updateOptions) {"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"            this.updateOptions \u003d updateOptions;"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"        public B withRegisteredAt(Instant registeredAt) {"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"            assert registeredAt !\u003d null;"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"            updateOptions.registeredAtOption \u003d UpdateOption.of(registeredAt);"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"            return thisBuilder;"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"        public abstract T build();"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":261}},{"path":"src/main/java/teammates/common/datatransfer/questions/FeedbackConstantSumQuestionDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Contains specific structure and processing logic for constant sum feedback questions."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FeedbackConstantSumQuestionDetails extends FeedbackQuestionDetails {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    static final String QUESTION_TYPE_NAME_OPTION \u003d \"Distribute points (among options) question\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    static final String QUESTION_TYPE_NAME_RECIPIENT \u003d \"Distribute points (among recipients) question\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    static final int CONST_SUM_MIN_NUM_OF_OPTIONS \u003d 2;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    static final int CONST_SUM_MIN_NUM_OF_POINTS \u003d 1;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS \u003d"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \"Too little options for \" + QUESTION_TYPE_NAME_OPTION + \". Minimum number of options is: \";"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_DUPLICATE_OPTIONS \u003d \"Duplicate options are not allowed.\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_NOT_ENOUGH_POINTS \u003d"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \"Too little points for \" + QUESTION_TYPE_NAME_RECIPIENT + \". Minimum number of points is: \";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_MISMATCH \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"Please distribute all the points for distribution questions. \""},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    + \"To skip a distribution question, leave the boxes blank.\";"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"    static final String CONST_SUM_ERROR_NEGATIVE \u003d \"Points cannot be negative.\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_UNIQUE \u003d \"Every option must be given a different number of points.\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_SOME_UNIQUE \u003d"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"At least some options must be given a different number of points.\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ANSWER_OPTIONS_NOT_MATCH \u003d \"The answers are inconsistent with the options\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ANSWER_RECIPIENT_NOT_MATCH \u003d \"The answer is inconsistent with the recipient\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e constSumOptions;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private boolean distributeToRecipients;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private boolean pointsPerOption;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private boolean forceUnevenDistribution;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private String distributePointsFor;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private int points;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public FeedbackConstantSumQuestionDetails() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(null);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public FeedbackConstantSumQuestionDetails(String questionText) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FeedbackQuestionType.CONSTSUM, questionText);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.constSumOptions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.distributeToRecipients \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.pointsPerOption \u003d false;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.points \u003d 100;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.forceUnevenDistribution \u003d false;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.distributePointsFor \u003d FeedbackConstantSumDistributePointsType.NONE.getDisplayedOption();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean shouldChangesRequireResponseDeletion("},{"lineNumber":58,"author":{"gitId":"-"},"content":"            FeedbackQuestionDetails newDetails) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FeedbackConstantSumQuestionDetails newConstSumDetails \u003d (FeedbackConstantSumQuestionDetails) newDetails;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!this.constSumOptions.containsAll(newConstSumDetails.constSumOptions)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || !newConstSumDetails.constSumOptions.containsAll(this.constSumOptions)) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (this.distributeToRecipients !\u003d newConstSumDetails.distributeToRecipients) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (this.points !\u003d newConstSumDetails.points) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (this.pointsPerOption !\u003d newConstSumDetails.pointsPerOption) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (this.forceUnevenDistribution !\u003d newConstSumDetails.forceUnevenDistribution) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return !this.distributePointsFor.equals(newConstSumDetails.distributePointsFor);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateQuestionDetails() {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!distributeToRecipients \u0026\u0026 constSumOptions.size() \u003c CONST_SUM_MIN_NUM_OF_OPTIONS) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                       + CONST_SUM_MIN_NUM_OF_OPTIONS + \".\");"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (points \u003c CONST_SUM_MIN_NUM_OF_POINTS) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_NOT_ENOUGH_POINTS"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                       + CONST_SUM_MIN_NUM_OF_POINTS + \".\");"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!FieldValidator.areElementsUnique(constSumOptions)) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_DUPLICATE_OPTIONS);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateResponsesDetails(List\u003cFeedbackResponseDetails\u003e responses, int numRecipients) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors;"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        int numOptions \u003d distributeToRecipients ? numRecipients : constSumOptions.size();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        int totalPoints \u003d pointsPerOption ? points * numOptions : points;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (distributeToRecipients) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            errors \u003d getErrorsForConstSumRecipients(responses, totalPoints);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            errors \u003d getErrorsForConstSumOptions(responses, totalPoints);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrorsForConstSumOptions(List\u003cFeedbackResponseDetails\u003e responses, int totalPoints) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (FeedbackResponseDetails response : responses) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"            FeedbackConstantSumResponseDetails details \u003d (FeedbackConstantSumResponseDetails) response;"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (details.getAnswers().size() !\u003d constSumOptions.size()) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ANSWER_OPTIONS_NOT_MATCH);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"            List\u003cInteger\u003e givenPoints \u003d details.getAnswers();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            errors \u003d getErrors(givenPoints, totalPoints);"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"            // Return an error if any response is erroneous"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (!errors.isEmpty()) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrorsForConstSumRecipients(List\u003cFeedbackResponseDetails\u003e responses, int totalPoints) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cInteger\u003e givenPoints \u003d new ArrayList\u003c\u003e();"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (FeedbackResponseDetails response : responses) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            FeedbackConstantSumResponseDetails details \u003d (FeedbackConstantSumResponseDetails) response;"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"            List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (details.getAnswers().size() !\u003d 1) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                // Distribute to recipient must have array size one"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ANSWER_RECIPIENT_NOT_MATCH);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"            // Return an error if any response is erroneous"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (!errors.isEmpty()) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"            int givenPoint \u003d details.getAnswers().get(0);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            givenPoints.add(givenPoint);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return getErrors(givenPoints, totalPoints);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrors(List\u003cInteger\u003e givenPoints, int totalPoints) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Check that all points are \u003e\u003d 0"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        int sum \u003d 0;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        for (int i : givenPoints) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            if (i \u003c 0) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ERROR_NEGATIVE);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"            sum +\u003d i;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // Check that points sum up properly"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (sum !\u003d totalPoints) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_MISMATCH);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return errors;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // Check that points are given unevenly for all/at least some options as per the question settings"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Set\u003cInteger\u003e answerSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (distributePointsFor.equals("},{"lineNumber":191,"author":{"gitId":"-"},"content":"                FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY.getDisplayedOption())) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            boolean hasDifferentPoints \u003d false;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            for (int i : givenPoints) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                if (!answerSet.isEmpty() \u0026\u0026 !answerSet.contains(i)) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    hasDifferentPoints \u003d true;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                answerSet.add(i);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (!hasDifferentPoints) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ERROR_SOME_UNIQUE);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } else if (forceUnevenDistribution || distributePointsFor.equals("},{"lineNumber":206,"author":{"gitId":"-"},"content":"                FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY.getDisplayedOption())) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            for (int i : givenPoints) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                if (answerSet.contains(i)) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    errors.add(CONST_SUM_ERROR_UNIQUE);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                    return errors;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                answerSet.add(i);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public boolean isFeedbackParticipantCommentsOnResponsesAllowed() {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public String validateGiverRecipientVisibility(FeedbackQuestionAttributes feedbackQuestionAttributes) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public int getNumOfConstSumOptions() {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return constSumOptions.size();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getConstSumOptions() {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return constSumOptions;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void setConstSumOptions(List\u003cString\u003e constSumOptions) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        this.constSumOptions \u003d constSumOptions;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public boolean isDistributeToRecipients() {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return distributeToRecipients;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void setDistributeToRecipients(boolean distributeToRecipients) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        this.distributeToRecipients \u003d distributeToRecipients;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public boolean isPointsPerOption() {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return pointsPerOption;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void setPointsPerOption(boolean pointsPerOption) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        this.pointsPerOption \u003d pointsPerOption;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public boolean isForceUnevenDistribution() {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        return forceUnevenDistribution;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void setForceUnevenDistribution(boolean forceUnevenDistribution) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        this.forceUnevenDistribution \u003d forceUnevenDistribution;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public String getDistributePointsFor() {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return distributePointsFor;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void setDistributePointsFor(String distributePointsFor) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        this.distributePointsFor \u003d distributePointsFor;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public int getPoints() {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        return points;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void setPoints(int points) {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        this.points \u003d points;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":1,"-":279}},{"path":"src/main/java/teammates/common/util/AppUrl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A specific implementation of {@link Url} used to encapsulate URLs of the application."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class AppUrl extends Url {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public AppUrl(String url) {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(url);"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assert url.startsWith(\"http\"); // must either be http or https"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public AppUrl withUserId(String userId) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.USER_ID, userId);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public AppUrl withRegistrationKey(String key) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.REGKEY, key);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public AppUrl withIsCreatingAccount(String isCreatingAccount) {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return withParam(Const.ParamsNames.IS_CREATING_ACCOUNT, isCreatingAccount);"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public AppUrl withCourseId(String courseId) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public AppUrl withSessionName(String feedbackSessionName) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AppUrl withStudentEmail(String email) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.STUDENT_EMAIL, email);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AppUrl withEntityType(String entityType) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return withParam(Const.ParamsNames.ENTITY_TYPE, entityType);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":37,"samuelfangjw":4}},{"path":"src/main/java/teammates/common/util/Const.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Stores constants that are widely used across classes."},{"lineNumber":8,"author":{"gitId":"-"},"content":" * this class contains several nested classes, each containing a specific"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * category of constants."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public final class Const {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // This section holds constants that are defined as constants primarily because they are repeated in many places."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String USER_NOBODY_TEXT \u003d \"-\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String USER_TEAM_FOR_INSTRUCTOR \u003d \"Instructors\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_DISPLAY_NAME_FOR_INSTRUCTOR \u003d \"Instructor\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT \u003d \"Anonymous\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final int SECTION_SIZE_LIMIT \u003d 100;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_SECTION \u003d \"None\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String UNKNOWN_INSTITUTION \u003d \"Unknown Institution\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_TIME_ZONE \u003d \"UTC\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String ENCODING \u003d \"UTF8\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Duration FEEDBACK_SESSIONS_SEARCH_WINDOW \u003d Duration.ofDays(30);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Duration LOGS_RETENTION_PERIOD \u003d Duration.ofDays(30);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final int SEARCH_QUERY_SIZE_LIMIT \u003d 50;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // These constants are used as variable values to mean that the variable is in a \u0027special\u0027 state."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final int INT_UNINITIALIZED \u003d -9999;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final int MAX_POSSIBLE_RECIPIENTS \u003d -100;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final int POINTS_EQUAL_SHARE \u003d 100;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SURE \u003d -101;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SUBMITTED \u003d -999;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final int POINTS_NO_VALUE \u003d Integer.MIN_VALUE;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String GENERAL_QUESTION \u003d \"%GENERAL%\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_OPENING;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_VISIBLE;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_LATER;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_NOW;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_DEFAULT_TIMESTAMP;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_OPENING \u003d TimeHelper.parseInstant(\"1970-12-31T00:00:00Z\");"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_VISIBLE \u003d TimeHelper.parseInstant(\"1970-06-22T00:00:00Z\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_LATER \u003d TimeHelper.parseInstant(\"1970-01-01T00:00:00Z\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_NOW \u003d TimeHelper.parseInstant(\"1970-02-14T00:00:00Z\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_DEFAULT_TIMESTAMP \u003d TimeHelper.parseInstant(\"2011-01-01T00:00:00Z\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TEST_EMAIL_DOMAIN \u003d \"@gmail.tmt\";"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // Other Constants"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private Const() {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Utility class containing constants"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents role names for instructors based on their permission settings."},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static class InstructorPermissionRoleNames {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_COOWNER \u003d \"Co-owner\";"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_MANAGER \u003d \"Manager\";"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_OBSERVER \u003d \"Observer\";"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_TUTOR \u003d \"Tutor\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_CUSTOM \u003d \"Custom\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Represents atomic permission for instructors."},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static class InstructorPermissions {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_COURSE \u003d \"canmodifycourse\";"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_INSTRUCTOR \u003d \"canmodifyinstructor\";"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION \u003d \"canmodifysession\";"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_STUDENT \u003d \"canmodifystudent\";"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_STUDENT_IN_SECTIONS \u003d \"canviewstudentinsection\";"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_SESSION_IN_SECTIONS \u003d \"canviewsessioninsection\";"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public static final String CAN_SUBMIT_SESSION_IN_SECTIONS \u003d \"cansubmitsessioninsection\";"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION_COMMENT_IN_SECTIONS \u003d \"canmodifysessioncommentinsection\";"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Represents keys for HTTP requests to the API layer."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static class ParamsNames {"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public static final String IS_IN_RECYCLE_BIN \u003d \"isinrecyclebin\";"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public static final String IS_STUDENT_REJOINING \u003d \"isstudentrejoining\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public static final String IS_INSTRUCTOR_REJOINING \u003d \"isinstructorrejoining\";"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public static final String COURSE_ID \u003d \"courseid\";"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public static final String COURSE_STATUS \u003d \"coursestatus\";"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_ID \u003d \"instructorid\";"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_EMAIL \u003d \"instructoremail\";"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        public static final String INSTRUCTOR_INSTITUTION \u003d \"instructorinstitution\";"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        public static final String IS_CREATING_ACCOUNT \u003d \"iscreatingaccount\";"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_NAME \u003d \"fsname\";"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_STARTTIME \u003d \"starttime\";"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_ENDTIME \u003d \"endtime\";"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_MODERATED_PERSON \u003d \"moderatedperson\";"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_TYPE \u003d \"fsltype\";"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_STARTTIME \u003d \"fslstarttime\";"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_ENDTIME \u003d \"fslendtime\";"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_QUESTION_ID \u003d \"questionid\";"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_ID \u003d \"responseid\";"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_COMMENT_ID \u003d \"responsecommentid\";"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESULTS_GROUPBYSECTION \u003d \"frgroupbysection\";"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public static final String PREVIEWAS \u003d \"previewas\";"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public static final String STUDENT_ID \u003d \"googleid\";"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public static final String INVITER_ID \u003d \"invitergoogleid\";"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public static final String REGKEY \u003d \"key\";"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public static final String STUDENT_EMAIL \u003d \"studentemail\";"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public static final String SECTION_NAME \u003d \"sectionname\";"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public static final String TEAM_NAME \u003d \"teamname\";"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public static final String ERROR \u003d \"error\";"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public static final String USER_ID \u003d \"user\";"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public static final String SEARCH_KEY \u003d \"searchkey\";"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public static final String USER_CAPTCHA_RESPONSE \u003d \"captcharesponse\";"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public static final String EMAIL_TYPE \u003d \"emailtype\";"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public static final String ENTITY_TYPE \u003d \"entitytype\";"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public static final String INTENT \u003d \"intent\";"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_STARTTIME \u003d \"starttime\";"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ENDTIME \u003d \"endtime\";"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SEVERITY \u003d \"severity\";"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_MIN_SEVERITY \u003d \"minseverity\";"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_TRACE \u003d \"traceid\";"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ACTION_CLASS \u003d \"actionclass\";"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EMAIL \u003d \"email\";"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EVENT \u003d \"logevent\";"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SOURCE_LOCATION_FILE \u003d \"sourcelocationfile\";"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SOURCE_LOCATION_FUNCTION \u003d \"sourcelocationfunction\";"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EXCEPTION_CLASS \u003d \"exceptionclass\";"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_LATENCY \u003d \"latency\";"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_STATUS \u003d \"status\";"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_VERSION \u003d \"version\";"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EXTRA_FILTERS \u003d \"extrafilters\";"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ORDER \u003d \"order\";"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Represents custom header names used by the system."},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static class HeaderNames {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public static final String BACKDOOR_KEY \u003d \"Backdoor-Key\";"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public static final String CSRF_KEY \u003d \"CSRF-Key\";"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public static final String WEB_VERSION \u003d \"X-WEB-VERSION\";"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public static final String CSRF_TOKEN \u003d \"X-CSRF-TOKEN\";"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * The course status respect to the instructor\u0027s point of view."},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * This parameter is used to get a course list for instructor."},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static class CourseStatus {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public static final String ACTIVE \u003d \"active\";"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public static final String ARCHIVED \u003d \"archived\";"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public static final String SOFT_DELETED \u003d \"softDeleted\";"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Represents user types."},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static class EntityType {"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d \"student\";"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d \"instructor\";"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public static final String ADMIN \u003d \"admin\";"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public static final String MAINTAINER \u003d \"maintainer\";"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Represents security-related configuration."},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public static class SecurityConfig {"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public static final String CSRF_COOKIE_NAME \u003d \"CSRF-TOKEN\";"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public static final String AUTH_COOKIE_NAME \u003d \"AUTH-TOKEN\";"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Represents URIs of accessible pages in the front-end in past versions (V6 and before)."},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Deprecated"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public static class LegacyURIs {"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN \u003d \"/page/instructorCourseJoin\";"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN \u003d \"/page/studentCourseJoin\";"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_NEW \u003d \"/page/studentCourseJoinAuthentication\";"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d \"/page/instructorHomePage\";"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d \"/page/studentHomePage\";"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/studentFeedbackSubmissionEditPage\";"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_RESULTS_PAGE \u003d \"/page/studentFeedbackResultsPage\";"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/instructorFeedbackSubmissionEditPage\";"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * Represents URIs of accessible pages in the front-end."},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public static class WebPageURIs {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public static final String LOGIN \u003d \"/login\";"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public static final String LOGOUT \u003d \"/logout\";"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/web\";"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"        private static final String STUDENT_PAGE \u003d URI_PREFIX + \"/\" + EntityType.STUDENT;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        private static final String INSTRUCTOR_PAGE \u003d URI_PREFIX + \"/\" + EntityType.INSTRUCTOR;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        private static final String ADMIN_PAGE \u003d URI_PREFIX + \"/\" + EntityType.ADMIN;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        private static final String MAINTAINER_PAGE \u003d URI_PREFIX + \"/\" + EntityType.MAINTAINER;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        private static final String FRONT_PAGE \u003d URI_PREFIX + \"/front\";"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public static final String JOIN_PAGE \u003d URI_PREFIX + \"/join\";"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public static final String ADMIN_HOME_PAGE \u003d ADMIN_PAGE + \"/home\";"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public static final String ADMIN_ACCOUNTS_PAGE \u003d ADMIN_PAGE + \"/accounts\";"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SEARCH_PAGE \u003d ADMIN_PAGE + \"/search\";"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SESSIONS_PAGE \u003d ADMIN_PAGE + \"/sessions\";"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public static final String ADMIN_TIMEZONE_PAGE \u003d ADMIN_PAGE + \"/timezone\";"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public static final String ADMIN_LOGS_PAGE \u003d ADMIN_PAGE + \"/logs\";"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public static final String MAINTAINER_HOME_PAGE \u003d MAINTAINER_PAGE + \"/home\";"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d INSTRUCTOR_PAGE + \"/home\";"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SEARCH_PAGE \u003d INSTRUCTOR_PAGE + \"/search\";"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSIONS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions\";"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_SUBMISSION_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/submission\";"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/edit\";"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_RESULTS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/result\";"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_REPORT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/report\";"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSES_PAGE \u003d INSTRUCTOR_PAGE + \"/courses\";"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/details\";"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/edit\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_ENROLL_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/enroll\";"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/details\";"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/edit\";"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_LIST_PAGE \u003d INSTRUCTOR_PAGE + \"/students\";"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_RECORDS_PAGE \u003d INSTRUCTOR_PAGE + \"/students/records\";"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_AUDIT_LOGS_PAGE \u003d INSTRUCTOR_PAGE + \"/logs\";"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d STUDENT_PAGE + \"/home\";"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_DETAILS_PAGE \u003d STUDENT_PAGE + \"/course\";"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PAGE \u003d STUDENT_PAGE + \"/profile\";"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_SUBMISSION_PAGE \u003d STUDENT_PAGE + \"/sessions/submission\";"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_RESULTS_PAGE \u003d STUDENT_PAGE + \"/sessions/result\";"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public static final String SESSION_RESULTS_PAGE \u003d URI_PREFIX + \"/sessions/result\";"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMISSION_PAGE \u003d URI_PREFIX + \"/sessions/submission\";"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_LINK_RECOVERY_PAGE \u003d FRONT_PAGE + \"/help/session-links-recovery\";"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * Represents URIs of resource endpoints."},{"lineNumber":287,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    public static class ResourceURIs {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/webapi\";"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE \u003d URI_PREFIX + \"/databundle\";"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE_DOCUMENTS \u003d URI_PREFIX + \"/databundle/documents\";"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        public static final String EXCEPTION \u003d URI_PREFIX + \"/exception\";"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        public static final String ERROR_REPORT \u003d URI_PREFIX + \"/errorreport\";"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        public static final String AUTH \u003d URI_PREFIX + \"/auth\";"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        public static final String AUTH_REGKEY \u003d URI_PREFIX + \"/auth/regkey\";"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT \u003d URI_PREFIX + \"/account\";"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_RESET \u003d URI_PREFIX + \"/account/reset\";"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_DOWNGRADE \u003d URI_PREFIX + \"/account/downgrade\";"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"        public static final String ACCOUNT_REQUEST \u003d URI_PREFIX + \"/account/request\";"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public static final String RESPONSE_COMMENT \u003d URI_PREFIX + \"/responsecomment\";"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public static final String COURSE \u003d URI_PREFIX + \"/course\";"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public static final String COURSE_ARCHIVE \u003d URI_PREFIX + \"/course/archive\";"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        public static final String BIN_COURSE \u003d URI_PREFIX + \"/bin/course\";"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        public static final String COURSE_SECTIONS \u003d URI_PREFIX + \"/course/sections\";"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public static final String COURSES \u003d URI_PREFIX + \"/courses\";"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTORS \u003d URI_PREFIX + \"/instructors\";"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d URI_PREFIX + \"/instructor\";"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PRIVILEGE \u003d URI_PREFIX + \"/instructor/privilege\";"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_KEY \u003d URI_PREFIX + \"/instructor/key\";"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        public static final String RESULT \u003d URI_PREFIX + \"/result\";"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public static final String STUDENTS \u003d URI_PREFIX + \"/students\";"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d URI_PREFIX + \"/student\";"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        public static final String STUDENT_KEY \u003d URI_PREFIX + \"/student/key\";"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_ONGOING \u003d URI_PREFIX + \"/sessions/ongoing\";"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        public static final String SESSION \u003d URI_PREFIX + \"/session\";"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        public static final String SESSION_PUBLISH \u003d URI_PREFIX + \"/session/publish\";"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_SUBMISSION \u003d URI_PREFIX + \"/session/remind/submission\";"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_RESULT \u003d URI_PREFIX + \"/session/remind/result\";"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        public static final String SESSION_STATS \u003d URI_PREFIX + \"/session/stats\";"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMITTED_GIVER_SET \u003d URI_PREFIX + \"/session/submitted/giverset\";"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        public static final String SESSIONS \u003d URI_PREFIX + \"/sessions\";"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        public static final String SEARCH_INSTRUCTORS \u003d URI_PREFIX + \"/search/instructors\";"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        public static final String SEARCH_STUDENTS \u003d URI_PREFIX + \"/search/students\";"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        public static final String BIN_SESSION \u003d URI_PREFIX + \"/bin/session\";"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        public static final String QUESTIONS \u003d URI_PREFIX + \"/questions\";"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public static final String QUESTION \u003d URI_PREFIX + \"/question\";"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        public static final String QUESTION_RECIPIENTS \u003d URI_PREFIX + \"/question/recipients\";"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        public static final String RESPONSES \u003d URI_PREFIX + \"/responses\";"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public static final String HAS_RESPONSES \u003d URI_PREFIX + \"/hasResponses\";"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        public static final String JOIN \u003d URI_PREFIX + \"/join\";"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        public static final String JOIN_REMIND \u003d URI_PREFIX + \"/join/remind\";"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        public static final String TIMEZONE \u003d URI_PREFIX + \"/timezone\";"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        public static final String SESSION_LINKS_RECOVERY \u003d URI_PREFIX + \"/sessionlinksrecovery\";"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        public static final String NATIONALITIES \u003d URI_PREFIX + \"/nationalities\";"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        public static final String EMAIL \u003d URI_PREFIX + \"/email\";"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        public static final String SESSION_LOGS \u003d URI_PREFIX + \"/logs/session\";"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        public static final String LOGS \u003d URI_PREFIX + \"/logs/query\";"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public static final String ACTION_CLASS \u003d URI_PREFIX + \"/actionclass\";"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        public static final String USER_COOKIE \u003d URI_PREFIX + \"/cookie\";"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PICTURE \u003d URI_PREFIX + \"/student/profilePic\";"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE \u003d URI_PREFIX + \"/student/profile\";"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * Represents URIs of endpoints used by cron jobs."},{"lineNumber":348,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public static class CronJobURIs {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/auto\";"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_LOG_COMPILATION \u003d URI_PREFIX + \"/compileLogs\";"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_DATASTORE_BACKUP \u003d URI_PREFIX + \"/datastoreBackup\";"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_OPENING_SOON_REMINDERS \u003d"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionOpeningSoonReminders\";"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_OPENING_REMINDERS \u003d"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionOpeningReminders\";"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSED_REMINDERS \u003d"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosedReminders\";"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSING_REMINDERS \u003d"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosingReminders\";"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS \u003d"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedReminders\";"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":367,"author":{"gitId":"-"},"content":"     * Configurations for task queue."},{"lineNumber":368,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    public static class TaskQueue {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        public static final String URI_PREFIX \u003d \"/worker\";"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                \"feedback-session-published-email-queue\";"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedEmail\";"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                \"feedback-session-resend-published-email-queue\";"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":380,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionResendPublishedEmail\";"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME \u003d \"feedback-session-remind-email-queue\";"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/feedbackSessionRemindEmail\";"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                \"feedback-session-remind-particular-users-email-queue\";"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL \u003d"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionRemindParticularUsersEmail\";"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                \"feedback-session-unpublished-email-queue\";"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":393,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionUnpublishedEmail\";"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"instructor-course-join-email-queue\";"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/instructorCourseJoinEmail\";"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_QUEUE_NAME \u003d \"send-email-queue\";"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/sendEmail\";"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"student-course-join-email-queue\";"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/studentCourseJoinEmail\";"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"        public static final String SEARCH_INDEXING_QUEUE_NAME \u003d \"search-indexing-queue\";"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SEARCH_INDEXING_WORKER_URL \u003d URI_PREFIX + \"/instructorSearchIndexing\";"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SEARCH_INDEXING_WORKER_URL \u003d URI_PREFIX + \"/studentSearchIndexing\";"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":406,"samuelfangjw":3}},{"path":"src/main/java/teammates/logic/api/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.annotation.Nullable;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.SessionResultsBundle;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.exception.EnrollException;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.exception.InstructorUpdateException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"import teammates.logic.core.AccountRequestsLogic;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.logic.core.AccountsLogic;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.logic.core.CoursesLogic;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.logic.core.DataBundleLogic;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackQuestionsLogic;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackResponseCommentsLogic;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackResponsesLogic;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackSessionsLogic;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.logic.core.InstructorsLogic;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.logic.core.ProfilesLogic;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import teammates.logic.core.StudentsLogic;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Provides the business logic for production usage of the system."},{"lineNumber":42,"author":{"gitId":"-"},"content":" *"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis is a Facade class which simply forwards the method to internal classes."},{"lineNumber":44,"author":{"gitId":"-"},"content":" */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class Logic {"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logic instance \u003d new Logic();"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    final AccountRequestsLogic accountRequestsLogic \u003d AccountRequestsLogic.inst();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    final FeedbackSessionsLogic feedbackSessionsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    final FeedbackQuestionsLogic feedbackQuestionsLogic \u003d FeedbackQuestionsLogic.inst();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    final FeedbackResponsesLogic feedbackResponsesLogic \u003d FeedbackResponsesLogic.inst();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    final FeedbackResponseCommentsLogic feedbackResponseCommentsLogic \u003d FeedbackResponseCommentsLogic.inst();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    final DataBundleLogic dataBundleLogic \u003d DataBundleLogic.inst();"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    Logic() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Logic inst() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public AccountAttributes getAccount(String googleId) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return accountsLogic.getAccount(googleId);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String getCourseInstitute(String courseId) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return coursesLogic.getCourseInstitute(courseId);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates/Creates the profile using {@link StudentProfileAttributes.UpdateOptions}."},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @return updated student profile"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes updateOrCreateStudentProfile(StudentProfileAttributes.UpdateOptions updateOptions)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return profilesLogic.updateOrCreateStudentProfile(updateOptions);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Deletes both instructor and student privileges, as long as the account and associated student profile."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * \u003cul\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * \u003cli\u003eFails silently if no such account.\u003c/li\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void deleteAccountCascade(String googleId) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(googleId);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Creates an instructor."},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @return the created instructor"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the instructor is not valid"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the instructor already exists in the database"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public InstructorAttributes createInstructor(InstructorAttributes instructor)"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assert instructor !\u003d null;"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return instructorsLogic.createInstructor(instructor);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * This method should be used by admin only since the searching does not restrict the"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * search instructors in the whole system."},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e searchInstructorsInWholeSystem(String queryString)"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return instructorsLogic.searchInstructorsInWholeSystem(queryString);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given instructor."},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see InstructorsLogic#putDocument(InstructorAttributes)"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void putInstructorDocument(InstructorAttributes instructor) throws SearchServiceException {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        instructorsLogic.putDocument(instructor);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Update instructor being edited to ensure validity of instructors for the course."},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @see InstructorsLogic#updateToEnsureValidityOfInstructorsForTheCourse(String, InstructorAttributes)"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void updateToEnsureValidityOfInstructorsForTheCourse(String courseId, InstructorAttributes instructorToEdit) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assert instructorToEdit !\u003d null;"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        instructorsLogic.updateToEnsureValidityOfInstructorsForTheCourse(courseId, instructorToEdit);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForEmail(String courseId, String email) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForEmail(courseId, email);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorById(String courseId, String email) {"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorById(courseId, email);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForGoogleId(String courseId, String googleId) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForGoogleId(courseId, googleId);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForRegistrationKey(String registrationKey) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForRegistrationKey(registrationKey);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForGoogleId(googleId);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId, boolean omitArchived) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForCourse(String courseId) {"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForCourse(courseId);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getAllOngoingSessions(Instant rangeStart, Instant rangeEnd) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getAllOngoingSessions(rangeStart, rangeEnd);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithGoogleId}."},{"lineNumber":258,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade update the comments and responses given by the instructor."},{"lineNumber":260,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":263,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * @return updated instructor"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor cannot be found"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public InstructorAttributes updateInstructorCascade(InstructorAttributes.UpdateOptionsWithGoogleId updateOptions)"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            throws InstructorUpdateException, InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"        return instructorsLogic.updateInstructorByGoogleIdCascade(updateOptions);"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithEmail}."},{"lineNumber":277,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":280,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * @return updated instructor"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor cannot be found"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public InstructorAttributes updateInstructor(InstructorAttributes.UpdateOptionsWithEmail updateOptions)"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            throws InstructorUpdateException, InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"        return instructorsLogic.updateInstructorByEmail(updateOptions);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Make the instructor join the course, i.e. associate the Google ID to the instructor.\u003cbr\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * Creates an account for the instructor if there is no existing account for him."},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * * Parameters regkey and googleId are non-null."},{"lineNumber":297,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    public InstructorAttributes joinCourseForInstructor(String regkey, String googleId)"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assert regkey !\u003d null;"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return accountsLogic.joinCourseForInstructor(regkey, googleId);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":308,"author":{"gitId":"-"},"content":"     * Downgrades an instructor account to student account."},{"lineNumber":309,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":310,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade deletes all instructors associated with the account."},{"lineNumber":311,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":314,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    public void downgradeInstructorToStudentCascade(String googleId) throws EntityDoesNotExistException {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"        accountsLogic.downgradeInstructorToStudentCascade(googleId);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     * Deletes an instructor cascade its associated feedback responses and comments."},{"lineNumber":323,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":324,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if the student does not exist."},{"lineNumber":325,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":328,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    public void deleteInstructorCascade(String courseId, String email) {"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"        instructorsLogic.deleteInstructorCascade(courseId, email);"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     * Creates a course and an associated instructor for the course."},{"lineNumber":339,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     * * All parameters are non-null. \u003cbr/\u003e"},{"lineNumber":342,"author":{"gitId":"-"},"content":"     * * {@code instructorGoogleId} already has an account and instructor privileges."},{"lineNumber":343,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    public void createCourseAndInstructor(String instructorGoogleId, CourseAttributes courseAttributes)"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        assert instructorGoogleId !\u003d null;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        assert courseAttributes !\u003d null;"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        coursesLogic.createCourseAndInstructor(instructorGoogleId, courseAttributes);"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":353,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    public CourseAttributes getCourse(String courseId) {"},{"lineNumber":358,"author":{"gitId":"-"},"content":""},{"lineNumber":359,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"        return coursesLogic.getCourse(courseId);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":365,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":366,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":367,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getCoursesForStudentAccount(String googleId) {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        return coursesLogic.getCoursesForStudentAccount(googleId);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":374,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":375,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":376,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":377,"author":{"gitId":"-"},"content":"     * @return Courses the given instructors is in except for courses in Recycle Bin."},{"lineNumber":378,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getCoursesForInstructor(List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        return coursesLogic.getCoursesForInstructor(instructorList);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":386,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":387,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":388,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":389,"author":{"gitId":"-"},"content":"     * @return Courses in Recycle Bin that the given instructors is in."},{"lineNumber":390,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getSoftDeletedCoursesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        return coursesLogic.getSoftDeletedCoursesForInstructors(instructorList);"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":398,"author":{"gitId":"-"},"content":"     * Updates a course by {@link CourseAttributes.UpdateOptions}."},{"lineNumber":399,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":400,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf the {@code timezone} of the course is changed, cascade the change to its corresponding feedback sessions."},{"lineNumber":401,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":402,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":403,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":404,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":405,"author":{"gitId":"-"},"content":"     * @return updated course"},{"lineNumber":406,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":407,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the course cannot be found"},{"lineNumber":408,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    public CourseAttributes updateCourseCascade(CourseAttributes.UpdateOptions updateOptions)"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"        return coursesLogic.updateCourseCascade(updateOptions);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":417,"author":{"gitId":"-"},"content":"     * Changes the archive status of a course for an instructor."},{"lineNumber":418,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":419,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":420,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":421,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":422,"author":{"gitId":"-"},"content":"     * @param courseId The course of which the archive status is to be changed"},{"lineNumber":423,"author":{"gitId":"-"},"content":"     * @param archiveStatus The archive status to be set"},{"lineNumber":424,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"    public void setArchiveStatusOfInstructor(String googleId, String courseId, boolean archiveStatus)"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"        instructorsLogic.setArchiveStatusOfInstructor(googleId, courseId, archiveStatus);"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":436,"author":{"gitId":"-"},"content":"     * Deletes a course cascade its students, instructors, sessions, responses and comments."},{"lineNumber":437,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":438,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if no such course."},{"lineNumber":439,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":440,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":441,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":442,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    public void deleteCourseCascade(String courseId) {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        coursesLogic.deleteCourseCascade(courseId);"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":449,"author":{"gitId":"-"},"content":"     * Moves a course to Recycle Bin by its given corresponding ID."},{"lineNumber":450,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":451,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":452,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":453,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":454,"author":{"gitId":"-"},"content":"     * @return the deletion timestamp assigned to the course."},{"lineNumber":455,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    public Instant moveCourseToRecycleBin(String courseId) throws EntityDoesNotExistException {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        return coursesLogic.moveCourseToRecycleBin(courseId);"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":462,"author":{"gitId":"-"},"content":"     * Restores a course and all data related to the course from Recycle Bin by"},{"lineNumber":463,"author":{"gitId":"-"},"content":"     * its given corresponding ID."},{"lineNumber":464,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":465,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":466,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":467,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    public void restoreCourseFromRecycleBin(String courseId)"},{"lineNumber":469,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"        coursesLogic.restoreCourseFromRecycleBin(courseId);"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":476,"author":{"gitId":"-"},"content":"     * Search for students. Preconditions: all parameters are non-null."},{"lineNumber":477,"author":{"gitId":"-"},"content":"     * @param instructors   a list of InstructorAttributes associated to a googleId,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"     *                      used for filtering of search result"},{"lineNumber":479,"author":{"gitId":"-"},"content":"     * @return Null if no match found"},{"lineNumber":480,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e searchStudents(String queryString, List\u003cInstructorAttributes\u003e instructors)"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        assert instructors !\u003d null;"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        return studentsLogic.searchStudents(queryString, instructors);"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":487,"author":{"gitId":"-"},"content":""},{"lineNumber":488,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":489,"author":{"gitId":"-"},"content":"     * This method should be used by admin only since the searching does not restrict the"},{"lineNumber":490,"author":{"gitId":"-"},"content":"     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"},{"lineNumber":491,"author":{"gitId":"-"},"content":"     * search students in the whole system."},{"lineNumber":492,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":493,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e searchStudentsInWholeSystem(String queryString)"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"        return studentsLogic.searchStudentsInWholeSystem(queryString);"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":502,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":503,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":504,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":505,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":506,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForRegistrationKey(String registrationKey) {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForRegistrationKey(registrationKey);"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":513,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":514,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":515,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":516,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":517,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForEmail(String courseId, String email) {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForEmail(courseId, email);"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":526,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":527,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":528,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":529,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":530,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForGoogleId(String courseId, String googleId) {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForCourseIdAndGoogleId(courseId, googleId);"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":539,"author":{"gitId":"-"},"content":"     * Gets student profile associated with the {@code googleId}."},{"lineNumber":540,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":541,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":542,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":543,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":544,"author":{"gitId":"-"},"content":"     * @return null if no match found."},{"lineNumber":545,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes getStudentProfile(String googleId) {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        return profilesLogic.getStudentProfile(googleId);"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":552,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":553,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":554,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":555,"author":{"gitId":"-"},"content":"     * @return Empty list if no match found."},{"lineNumber":556,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForGoogleId(String googleId) {"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForGoogleId(googleId);"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":563,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":564,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":565,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":566,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForCourse(String courseId) {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForCourse(courseId);"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":573,"author":{"gitId":"-"},"content":"     * Returns a list of section names for the course with ID courseId."},{"lineNumber":574,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":575,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":576,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":577,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":578,"author":{"gitId":"-"},"content":"     * @see CoursesLogic#getSectionsNameForCourse(String)"},{"lineNumber":579,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getSectionNamesForCourse(String courseId) throws EntityDoesNotExistException {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        return coursesLogic.getSectionsNameForCourse(courseId);"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":586,"author":{"gitId":"-"},"content":"     * Populates fields that need dynamic generation in a question."},{"lineNumber":587,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":588,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCurrently, only MCQ/MSQ needs to generate choices dynamically.\u003c/p\u003e"},{"lineNumber":589,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":590,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":591,"author":{"gitId":"-"},"content":"     * * All parameters except \u003ccode\u003eteamOfEntityDoingQuestion\u003c/code\u003e are non-null."},{"lineNumber":592,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":593,"author":{"gitId":"-"},"content":"     * @param feedbackQuestionAttributes the question to populate"},{"lineNumber":594,"author":{"gitId":"-"},"content":"     * @param emailOfEntityDoingQuestion the email of the entity doing the question"},{"lineNumber":595,"author":{"gitId":"-"},"content":"     * @param teamOfEntityDoingQuestion the team of the entity doing the question. If the entity is an instructor,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"     *                                  it can be {@code null}."},{"lineNumber":597,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    public void populateFieldsToGenerateInQuestion(FeedbackQuestionAttributes feedbackQuestionAttributes,"},{"lineNumber":599,"author":{"gitId":"-"},"content":"            String emailOfEntityDoingQuestion, String teamOfEntityDoingQuestion) {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        assert feedbackQuestionAttributes !\u003d null;"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        assert emailOfEntityDoingQuestion !\u003d null;"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"        feedbackQuestionsLogic.populateFieldsToGenerateInQuestion("},{"lineNumber":604,"author":{"gitId":"-"},"content":"                feedbackQuestionAttributes, emailOfEntityDoingQuestion, teamOfEntityDoingQuestion);"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":608,"author":{"gitId":"-"},"content":"     * Resets the googleId associated with the student."},{"lineNumber":609,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":610,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":611,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":612,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    public void resetStudentGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        assert originalEmail !\u003d null;"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"        studentsLogic.resetStudentGoogleId(originalEmail, courseId);"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":619,"author":{"gitId":"-"},"content":""},{"lineNumber":620,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":621,"author":{"gitId":"-"},"content":"     * Regenerates the registration key for the instructor with email address {@code email} in course {@code courseId}."},{"lineNumber":622,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":623,"author":{"gitId":"-"},"content":"     * @return the instructor attributes with the new registration key."},{"lineNumber":624,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the newly generated instructor has the same registration key as the"},{"lineNumber":625,"author":{"gitId":"-"},"content":"     *          original one."},{"lineNumber":626,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor does not exist."},{"lineNumber":627,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    public InstructorAttributes regenerateInstructorRegistrationKey(String courseId, String email)"},{"lineNumber":629,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"        return instructorsLogic.regenerateInstructorRegistrationKey(courseId, email);"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":638,"author":{"gitId":"-"},"content":"     * Regenerates the registration key for the student with email address {@code email} in course {@code courseId}."},{"lineNumber":639,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":640,"author":{"gitId":"-"},"content":"     * @return the student attributes with the new registration key."},{"lineNumber":641,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the newly generated course student has the same registration key as the"},{"lineNumber":642,"author":{"gitId":"-"},"content":"     *          original one."},{"lineNumber":643,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the student does not exist."},{"lineNumber":644,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    public StudentAttributes regenerateStudentRegistrationKey(String courseId, String email)"},{"lineNumber":646,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":647,"author":{"gitId":"-"},"content":""},{"lineNumber":648,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"        return studentsLogic.regenerateStudentRegistrationKey(courseId, email);"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":653,"author":{"gitId":"-"},"content":""},{"lineNumber":654,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":655,"author":{"gitId":"-"},"content":"     * Resets the associated googleId of an instructor."},{"lineNumber":656,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":657,"author":{"gitId":"-"},"content":"    public void resetInstructorGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        assert originalEmail !\u003d null;"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"-"},"content":"        instructorsLogic.resetInstructorGoogleId(originalEmail, courseId);"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":663,"author":{"gitId":"-"},"content":""},{"lineNumber":664,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":665,"author":{"gitId":"-"},"content":"     * Creates a student."},{"lineNumber":666,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":667,"author":{"gitId":"-"},"content":"     * @return the created student."},{"lineNumber":668,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the student is not valid."},{"lineNumber":669,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the student already exists in the database."},{"lineNumber":670,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    public StudentAttributes createStudent(StudentAttributes student)"},{"lineNumber":672,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        assert student.getCourse() !\u003d null;"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        assert student.getEmail() !\u003d null;"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"-"},"content":"        return studentsLogic.createStudent(student);"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":678,"author":{"gitId":"-"},"content":""},{"lineNumber":679,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":680,"author":{"gitId":"-"},"content":"     * Updates a student by {@link StudentAttributes.UpdateOptions}."},{"lineNumber":681,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":682,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf email changed, update by recreating the student and cascade update all responses the student gives/receives."},{"lineNumber":683,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":684,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf team changed, cascade delete all responses the student gives/receives within that team."},{"lineNumber":685,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":686,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf section changed, cascade update all responses the student gives/receives."},{"lineNumber":687,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":688,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":689,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":690,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":691,"author":{"gitId":"-"},"content":"     * @return updated student"},{"lineNumber":692,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":693,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the student cannot be found"},{"lineNumber":694,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the student cannot be updated"},{"lineNumber":695,"author":{"gitId":"-"},"content":"     *         by recreation because of an existent student"},{"lineNumber":696,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":697,"author":{"gitId":"-"},"content":"    public StudentAttributes updateStudentCascade(StudentAttributes.UpdateOptions updateOptions)"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":701,"author":{"gitId":"-"},"content":""},{"lineNumber":702,"author":{"gitId":"-"},"content":"        return studentsLogic.updateStudentCascade(updateOptions);"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":704,"author":{"gitId":"-"},"content":""},{"lineNumber":705,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":706,"author":{"gitId":"-"},"content":"     * Make the student join the course, i.e. associate the Google ID to the student.\u003cbr\u003e"},{"lineNumber":707,"author":{"gitId":"-"},"content":"     * Create an account for the student if there is no account exist for him."},{"lineNumber":708,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":709,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":710,"author":{"gitId":"-"},"content":"     * @param key the registration key"},{"lineNumber":711,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    public StudentAttributes joinCourseForStudent(String key, String googleId)"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":714,"author":{"gitId":"-"},"content":""},{"lineNumber":715,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":716,"author":{"gitId":"-"},"content":"        assert key !\u003d null;"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"-"},"content":"        return accountsLogic.joinCourseForStudent(key, googleId);"},{"lineNumber":719,"author":{"gitId":"-"},"content":""},{"lineNumber":720,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":721,"author":{"gitId":"-"},"content":""},{"lineNumber":722,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getUnregisteredStudentsForCourse(String courseId) {"},{"lineNumber":723,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        return studentsLogic.getUnregisteredStudentsForCourse(courseId);"},{"lineNumber":725,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":726,"author":{"gitId":"-"},"content":""},{"lineNumber":727,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":728,"author":{"gitId":"-"},"content":"     * Checks whether an instructor has completed a feedback session."},{"lineNumber":729,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":730,"author":{"gitId":"-"},"content":"     * \u003cp\u003e If there is no question for instructors, the feedback session is completed\u003c/p\u003e"},{"lineNumber":731,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":732,"author":{"gitId":"-"},"content":"    public boolean isFeedbackSessionCompletedByInstructor(FeedbackSessionAttributes fsa, String userEmail)"},{"lineNumber":733,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":734,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":735,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.isFeedbackSessionCompletedByInstructor(fsa, userEmail);"},{"lineNumber":737,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":738,"author":{"gitId":"-"},"content":""},{"lineNumber":739,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":740,"author":{"gitId":"-"},"content":"     * Checks whether a student has completed a feedback session."},{"lineNumber":741,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":742,"author":{"gitId":"-"},"content":"     * \u003cp\u003e If there is no question for students, the feedback session is completed\u003c/p\u003e"},{"lineNumber":743,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":744,"author":{"gitId":"-"},"content":"    public boolean isFeedbackSessionCompletedByStudent(FeedbackSessionAttributes fsa, String userEmail, String userTeam) {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":746,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":747,"author":{"gitId":"-"},"content":"        assert userTeam !\u003d null;"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, userEmail, userTeam);"},{"lineNumber":749,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":750,"author":{"gitId":"-"},"content":""},{"lineNumber":751,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":752,"author":{"gitId":"-"},"content":"     * Deletes a student cascade its associated feedback responses and comments."},{"lineNumber":753,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":754,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if the student does not exist."},{"lineNumber":755,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":756,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":757,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":758,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":759,"author":{"gitId":"-"},"content":"    public void deleteStudentCascade(String courseId, String studentEmail) {"},{"lineNumber":760,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":761,"author":{"gitId":"-"},"content":"        assert studentEmail !\u003d null;"},{"lineNumber":762,"author":{"gitId":"-"},"content":""},{"lineNumber":763,"author":{"gitId":"-"},"content":"        studentsLogic.deleteStudentCascade(courseId, studentEmail);"},{"lineNumber":764,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":765,"author":{"gitId":"-"},"content":""},{"lineNumber":766,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":767,"author":{"gitId":"-"},"content":"     * Deletes all the students in the course cascade their associated responses and comments."},{"lineNumber":768,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":769,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":770,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":771,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":772,"author":{"gitId":"-"},"content":"    public void deleteStudentsInCourseCascade(String courseId) {"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":774,"author":{"gitId":"-"},"content":""},{"lineNumber":775,"author":{"gitId":"-"},"content":"        studentsLogic.deleteStudentsInCourseCascade(courseId);"},{"lineNumber":776,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":777,"author":{"gitId":"-"},"content":""},{"lineNumber":778,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":779,"author":{"gitId":"-"},"content":"     * Validates sections for any limit violations and teams for any team name violations."},{"lineNumber":780,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":781,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":782,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":783,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":784,"author":{"gitId":"-"},"content":"     * @see StudentsLogic#validateSectionsAndTeams(List, String)"},{"lineNumber":785,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":786,"author":{"gitId":"-"},"content":"    public void validateSectionsAndTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"},{"lineNumber":787,"author":{"gitId":"-"},"content":""},{"lineNumber":788,"author":{"gitId":"-"},"content":"        assert studentList !\u003d null;"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":790,"author":{"gitId":"-"},"content":""},{"lineNumber":791,"author":{"gitId":"-"},"content":"        studentsLogic.validateSectionsAndTeams(studentList, courseId);"},{"lineNumber":792,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":793,"author":{"gitId":"-"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":795,"author":{"gitId":"-"},"content":"     * Gets all students of a team."},{"lineNumber":796,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":797,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForTeam(String teamName, String courseId) {"},{"lineNumber":798,"author":{"gitId":"-"},"content":"        assert teamName !\u003d null;"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":800,"author":{"gitId":"-"},"content":""},{"lineNumber":801,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForTeam(teamName, courseId);"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":803,"author":{"gitId":"-"},"content":""},{"lineNumber":804,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":805,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given student."},{"lineNumber":806,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":807,"author":{"gitId":"-"},"content":"     * @see StudentsLogic#putDocument(StudentAttributes)"},{"lineNumber":808,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":809,"author":{"gitId":"-"},"content":"    public void putStudentDocument(StudentAttributes student) throws SearchServiceException {"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        studentsLogic.putDocument(student);"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":814,"author":{"gitId":"-"},"content":"     * Creates a feedback session."},{"lineNumber":815,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":816,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":817,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":818,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":819,"author":{"gitId":"-"},"content":"     * @return created feedback session"},{"lineNumber":820,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the session is not valid"},{"lineNumber":821,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the session already exist"},{"lineNumber":822,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes createFeedbackSession(FeedbackSessionAttributes feedbackSession)"},{"lineNumber":824,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        assert feedbackSession !\u003d null;"},{"lineNumber":826,"author":{"gitId":"-"},"content":""},{"lineNumber":827,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.createFeedbackSession(feedbackSession);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":829,"author":{"gitId":"-"},"content":""},{"lineNumber":830,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":831,"author":{"gitId":"-"},"content":"     * Gets a feedback session from the data storage."},{"lineNumber":832,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":833,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":834,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":835,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":836,"author":{"gitId":"-"},"content":"     * @return null if not found or in recycle bin."},{"lineNumber":837,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":838,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"},{"lineNumber":839,"author":{"gitId":"-"},"content":""},{"lineNumber":840,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":841,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":842,"author":{"gitId":"-"},"content":""},{"lineNumber":843,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":844,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":845,"author":{"gitId":"-"},"content":""},{"lineNumber":846,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":847,"author":{"gitId":"-"},"content":"     * Gets a feedback session from the recycle bin."},{"lineNumber":848,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":849,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":850,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":851,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":852,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":853,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId) {"},{"lineNumber":855,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":856,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":859,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":860,"author":{"gitId":"-"},"content":""},{"lineNumber":861,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":862,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":863,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":864,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":865,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse(String courseId) {"},{"lineNumber":866,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":867,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsForCourse(courseId);"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":869,"author":{"gitId":"-"},"content":""},{"lineNumber":870,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":871,"author":{"gitId":"-"},"content":"     * Gets the expected number of submissions for a feedback session."},{"lineNumber":872,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":873,"author":{"gitId":"-"},"content":"     * \u003cbr\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":874,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":875,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":876,"author":{"gitId":"-"},"content":"    public int getExpectedTotalSubmission(FeedbackSessionAttributes fsa) {"},{"lineNumber":877,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":878,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getExpectedTotalSubmission(fsa);"},{"lineNumber":879,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":880,"author":{"gitId":"-"},"content":""},{"lineNumber":881,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":882,"author":{"gitId":"-"},"content":"     * Gets the actual number of submissions for a feedback session."},{"lineNumber":883,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":884,"author":{"gitId":"-"},"content":"     * \u003cbr\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":885,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":886,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":887,"author":{"gitId":"-"},"content":"    public int getActualTotalSubmission(FeedbackSessionAttributes fsa) {"},{"lineNumber":888,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":889,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getActualTotalSubmission(fsa);"},{"lineNumber":890,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":891,"author":{"gitId":"-"},"content":""},{"lineNumber":892,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":893,"author":{"gitId":"-"},"content":"     * Gets a list of feedback sessions for instructors."},{"lineNumber":894,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":895,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("},{"lineNumber":896,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":897,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":898,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(instructorList);"},{"lineNumber":899,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":900,"author":{"gitId":"-"},"content":""},{"lineNumber":901,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":902,"author":{"gitId":"-"},"content":"     * Returns a {@code List} of feedback sessions in the Recycle Bin for the instructors."},{"lineNumber":903,"author":{"gitId":"-"},"content":"     * \u003cbr\u003e"},{"lineNumber":904,"author":{"gitId":"-"},"content":"     * Omits sessions if the corresponding courses are archived or in Recycle Bin"},{"lineNumber":905,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":906,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructors("},{"lineNumber":907,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":908,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":909,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructors(instructorList);"},{"lineNumber":910,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":911,"author":{"gitId":"-"},"content":""},{"lineNumber":912,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":913,"author":{"gitId":"-"},"content":"     * Gets the recipients of a feedback question for student."},{"lineNumber":914,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":915,"author":{"gitId":"-"},"content":"     * @see FeedbackQuestionsLogic#getRecipientsOfQuestion"},{"lineNumber":916,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":917,"author":{"gitId":"-"},"content":"    public Map\u003cString, String\u003e getRecipientsOfQuestion("},{"lineNumber":918,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question,"},{"lineNumber":919,"author":{"gitId":"-"},"content":"            @Nullable InstructorAttributes instructorGiver, @Nullable StudentAttributes studentGiver) {"},{"lineNumber":920,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":921,"author":{"gitId":"-"},"content":""},{"lineNumber":922,"author":{"gitId":"-"},"content":"        // we do not supply course roster here"},{"lineNumber":923,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getRecipientsOfQuestion(question, instructorGiver, studentGiver, null);"},{"lineNumber":924,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":925,"author":{"gitId":"-"},"content":""},{"lineNumber":926,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":927,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":928,"author":{"gitId":"-"},"content":"     * * All parameters are non-null. \u003cbr\u003e"},{"lineNumber":929,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":930,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":931,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackQuestionId) {"},{"lineNumber":932,"author":{"gitId":"-"},"content":"        assert feedbackQuestionId !\u003d null;"},{"lineNumber":933,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackQuestionId);"},{"lineNumber":934,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":935,"author":{"gitId":"-"},"content":""},{"lineNumber":936,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":937,"author":{"gitId":"-"},"content":"     * Gets a list of all questions for the given session that"},{"lineNumber":938,"author":{"gitId":"-"},"content":"     * students can view/submit."},{"lineNumber":939,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":940,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForStudents("},{"lineNumber":941,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId) {"},{"lineNumber":942,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":944,"author":{"gitId":"-"},"content":""},{"lineNumber":945,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForStudents(feedbackSessionName, courseId);"},{"lineNumber":946,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":947,"author":{"gitId":"-"},"content":""},{"lineNumber":948,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":949,"author":{"gitId":"-"},"content":"     * Gets a {@code List} of all questions for the given session that"},{"lineNumber":950,"author":{"gitId":"-"},"content":"     * instructor can view/submit."},{"lineNumber":951,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":952,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForInstructors("},{"lineNumber":953,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String instructorEmail) throws EntityDoesNotExistException {"},{"lineNumber":954,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":956,"author":{"gitId":"-"},"content":""},{"lineNumber":957,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForInstructor(feedbackSessionName, courseId, instructorEmail);"},{"lineNumber":958,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":959,"author":{"gitId":"-"},"content":""},{"lineNumber":960,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":961,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":962,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":963,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":964,"author":{"gitId":"-"},"content":"    public boolean hasStudentSubmittedFeedback(FeedbackSessionAttributes fsa, String studentEmail, String studentTeam) {"},{"lineNumber":965,"author":{"gitId":"-"},"content":""},{"lineNumber":966,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":967,"author":{"gitId":"-"},"content":"        assert studentEmail !\u003d null;"},{"lineNumber":968,"author":{"gitId":"-"},"content":""},{"lineNumber":969,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, studentEmail, studentTeam);"},{"lineNumber":970,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":971,"author":{"gitId":"-"},"content":""},{"lineNumber":972,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":973,"author":{"gitId":"-"},"content":"     * Updates the details of a feedback session by {@link FeedbackSessionAttributes.UpdateOptions}."},{"lineNumber":974,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":975,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAdjust email sending status if necessary."},{"lineNumber":976,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":977,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":978,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":979,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":980,"author":{"gitId":"-"},"content":"     * @return updated feedback session"},{"lineNumber":981,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":982,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":983,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":984,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes updateFeedbackSession(FeedbackSessionAttributes.UpdateOptions updateOptions)"},{"lineNumber":985,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":986,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":987,"author":{"gitId":"-"},"content":""},{"lineNumber":988,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.updateFeedbackSession(updateOptions);"},{"lineNumber":989,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":990,"author":{"gitId":"-"},"content":""},{"lineNumber":991,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":992,"author":{"gitId":"-"},"content":"     * Publishes a feedback session."},{"lineNumber":993,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":994,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":995,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":996,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":997,"author":{"gitId":"-"},"content":"     * @return the published feedback session"},{"lineNumber":998,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":999,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if session is already published"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes publishFeedbackSession(String feedbackSessionName, String courseId)"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1003,"author":{"gitId":"-"},"content":""},{"lineNumber":1004,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1006,"author":{"gitId":"-"},"content":""},{"lineNumber":1007,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.publishFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1009,"author":{"gitId":"-"},"content":""},{"lineNumber":1010,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"     * Unpublishes a feedback session."},{"lineNumber":1012,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1015,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"     * @return the unpublished feedback session"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"     *             if the feedback session is not ready to be unpublished."},{"lineNumber":1020,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes unpublishFeedbackSession(String feedbackSessionName, String courseId)"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1023,"author":{"gitId":"-"},"content":""},{"lineNumber":1024,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1026,"author":{"gitId":"-"},"content":""},{"lineNumber":1027,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.unpublishFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1029,"author":{"gitId":"-"},"content":""},{"lineNumber":1030,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"     * Deletes a feedback session cascade to its associated questions, responses and comments."},{"lineNumber":1032,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1035,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"    public void deleteFeedbackSessionCascade(String feedbackSessionName, String courseId) {"},{"lineNumber":1037,"author":{"gitId":"-"},"content":""},{"lineNumber":1038,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1040,"author":{"gitId":"-"},"content":""},{"lineNumber":1041,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.deleteFeedbackSessionCascade(feedbackSessionName, courseId);"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1043,"author":{"gitId":"-"},"content":""},{"lineNumber":1044,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"     * Soft-deletes a specific session to Recycle Bin."},{"lineNumber":1046,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"    public void moveFeedbackSessionToRecycleBin(String feedbackSessionName, String courseId)"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":1049,"author":{"gitId":"-"},"content":""},{"lineNumber":1050,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1052,"author":{"gitId":"-"},"content":""},{"lineNumber":1053,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1055,"author":{"gitId":"-"},"content":""},{"lineNumber":1056,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"     * Restores a specific session from Recycle Bin to feedback sessions table."},{"lineNumber":1058,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"    public void restoreFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId)"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":1061,"author":{"gitId":"-"},"content":""},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1064,"author":{"gitId":"-"},"content":""},{"lineNumber":1065,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.restoreFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1067,"author":{"gitId":"-"},"content":""},{"lineNumber":1068,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"     * Creates a new feedback question."},{"lineNumber":1070,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1073,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"     * @return the created question"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the question is invalid"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes createFeedbackQuestion(FeedbackQuestionAttributes feedbackQuestion)"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"        assert feedbackQuestion !\u003d null;"},{"lineNumber":1080,"author":{"gitId":"-"},"content":""},{"lineNumber":1081,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.createFeedbackQuestion(feedbackQuestion);"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1083,"author":{"gitId":"-"},"content":""},{"lineNumber":1084,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"     * Updates a feedback question by {@code FeedbackQuestionAttributes.UpdateOptions}."},{"lineNumber":1086,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the question number of questions in the same session."},{"lineNumber":1088,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the existing response of the question."},{"lineNumber":1090,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1093,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"     * @return updated feedback question"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback question cannot be found"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes updateFeedbackQuestionCascade(FeedbackQuestionAttributes.UpdateOptions updateOptions)"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1101,"author":{"gitId":"-"},"content":""},{"lineNumber":1102,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.updateFeedbackQuestionCascade(updateOptions);"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1104,"author":{"gitId":"-"},"content":""},{"lineNumber":1105,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"     * Deletes a feedback question cascade its responses and comments."},{"lineNumber":1107,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"     * \u003cp\u003eSilently fail if question does not exist."},{"lineNumber":1109,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1112,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"    public void deleteFeedbackQuestionCascade(String questionId) {"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"        assert questionId !\u003d null;"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"        feedbackQuestionsLogic.deleteFeedbackQuestionCascade(questionId);"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1117,"author":{"gitId":"-"},"content":""},{"lineNumber":1118,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"     * Checks whether there are responses for a question."},{"lineNumber":1120,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1123,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.areThereResponsesForQuestion(feedbackQuestionId);"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1127,"author":{"gitId":"-"},"content":""},{"lineNumber":1128,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"     * Gets all questions for a feedback session.\u003cbr\u003e"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"     * Returns an empty list if they are no questions"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"     * for the session."},{"lineNumber":1132,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1134,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForSession(String feedbackSessionName, String courseId) {"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1138,"author":{"gitId":"-"},"content":""},{"lineNumber":1139,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1141,"author":{"gitId":"-"},"content":""},{"lineNumber":1142,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"     * Gets a set of giver identifiers that has at least one response under a feedback session."},{"lineNumber":1144,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1148,"author":{"gitId":"-"},"content":""},{"lineNumber":1149,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName);"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1151,"author":{"gitId":"-"},"content":""},{"lineNumber":1152,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session."},{"lineNumber":1154,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"     * @see FeedbackResponsesLogic#getSessionResultsForCourse(String, String, String, String, String)"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForCourse("},{"lineNumber":1158,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail,"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"            @Nullable String questionId, @Nullable String section) {"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1163,"author":{"gitId":"-"},"content":""},{"lineNumber":1164,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getSessionResultsForCourse("},{"lineNumber":1165,"author":{"gitId":"-"},"content":"                feedbackSessionName, courseId, userEmail, questionId, section);"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1167,"author":{"gitId":"-"},"content":""},{"lineNumber":1168,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session for the given user."},{"lineNumber":1170,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"     * @see FeedbackResponsesLogic#getSessionResultsForUser(String, String, String, boolean, String)"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForUser("},{"lineNumber":1174,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail, boolean isInstructor,"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"            @Nullable String questionId) {"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1179,"author":{"gitId":"-"},"content":""},{"lineNumber":1180,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getSessionResultsForUser("},{"lineNumber":1181,"author":{"gitId":"-"},"content":"                feedbackSessionName, courseId, userEmail, isInstructor, questionId);"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1183,"author":{"gitId":"-"},"content":""},{"lineNumber":1184,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"     * Get existing feedback responses from student or his team for the given question."},{"lineNumber":1186,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromStudentOrTeamForQuestion("},{"lineNumber":1188,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, StudentAttributes student) {"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"        assert student !\u003d null;"},{"lineNumber":1191,"author":{"gitId":"-"},"content":""},{"lineNumber":1192,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponsesFromStudentOrTeamForQuestion(question, student);"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1194,"author":{"gitId":"-"},"content":""},{"lineNumber":1195,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"     * Get existing feedback responses from instructor for the given question."},{"lineNumber":1197,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromInstructorForQuestion("},{"lineNumber":1199,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, InstructorAttributes instructorAttributes) {"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"        assert instructorAttributes !\u003d null;"},{"lineNumber":1202,"author":{"gitId":"-"},"content":""},{"lineNumber":1203,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":1204,"author":{"gitId":"-"},"content":"                question.getFeedbackQuestionId(), instructorAttributes.getEmail());"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1206,"author":{"gitId":"-"},"content":""},{"lineNumber":1207,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes getFeedbackResponse(String feedbackResponseId) {"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"        assert feedbackResponseId !\u003d null;"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponse(feedbackResponseId);"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1211,"author":{"gitId":"-"},"content":""},{"lineNumber":1212,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"     * Creates a feedback response."},{"lineNumber":1214,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1217,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"     * @return created feedback response"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the response is not valid"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response already exist"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes createFeedbackResponse(FeedbackResponseAttributes feedbackResponse)"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"        assert feedbackResponse !\u003d null;"},{"lineNumber":1225,"author":{"gitId":"-"},"content":""},{"lineNumber":1226,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.createFeedbackResponse(feedbackResponse);"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1228,"author":{"gitId":"-"},"content":""},{"lineNumber":1229,"author":{"gitId":"-"},"content":"    public boolean hasResponsesForCourse(String courseId) {"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.hasResponsesForCourse(courseId);"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1232,"author":{"gitId":"-"},"content":""},{"lineNumber":1233,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"     * Updates a feedback response by {@link FeedbackResponseAttributes.UpdateOptions}."},{"lineNumber":1235,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1236,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade updates its associated feedback response comment"},{"lineNumber":1237,"author":{"gitId":"-"},"content":"     * (e.g. associated response ID, giverSection and recipientSection)."},{"lineNumber":1238,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"     * as question-giver-recipient is the primary key."},{"lineNumber":1241,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1244,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"     * @return updated feedback response"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the comment cannot be found"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response cannot be updated"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"     *         by recreation because of an existent response"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes updateFeedbackResponseCascade(FeedbackResponseAttributes.UpdateOptions updateOptions)"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1254,"author":{"gitId":"-"},"content":""},{"lineNumber":1255,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.updateFeedbackResponseCascade(updateOptions);"},{"lineNumber":1256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1257,"author":{"gitId":"-"},"content":""},{"lineNumber":1258,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"     * Deletes a feedback response cascade its associated comments."},{"lineNumber":1260,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1263,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponseCascade(String responseId) {"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"        assert responseId !\u003d null;"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"        feedbackResponsesLogic.deleteFeedbackResponseCascade(responseId);"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1268,"author":{"gitId":"-"},"content":""},{"lineNumber":1269,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1270,"author":{"gitId":"-"},"content":"     * Create a feedback response comment, and return the created comment."},{"lineNumber":1271,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1274,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes createFeedbackResponseComment("},{"lineNumber":1276,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes feedbackResponseComment)"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"        assert feedbackResponseComment !\u003d null;"},{"lineNumber":1279,"author":{"gitId":"-"},"content":""},{"lineNumber":1280,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.createFeedbackResponseComment(feedbackResponseComment);"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1282,"author":{"gitId":"-"},"content":""},{"lineNumber":1283,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseComment(Long feedbackResponseCommentId) {"},{"lineNumber":1284,"author":{"gitId":"-"},"content":"        assert feedbackResponseCommentId !\u003d null;"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.getFeedbackResponseComment(feedbackResponseCommentId);"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1287,"author":{"gitId":"-"},"content":""},{"lineNumber":1288,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"     * Gets comment associated with the response."},{"lineNumber":1290,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThe comment is given by a feedback participant to explain the response\u003c/p\u003e"},{"lineNumber":1292,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1293,"author":{"gitId":"-"},"content":"     * @param feedbackResponseId the response id"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseCommentForResponseFromParticipant("},{"lineNumber":1296,"author":{"gitId":"-"},"content":"            String feedbackResponseId) {"},{"lineNumber":1297,"author":{"gitId":"-"},"content":"        assert feedbackResponseId !\u003d null;"},{"lineNumber":1298,"author":{"gitId":"-"},"content":""},{"lineNumber":1299,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.getFeedbackResponseCommentForResponseFromParticipant(feedbackResponseId);"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1301,"author":{"gitId":"-"},"content":""},{"lineNumber":1302,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"     * Updates a feedback response comment by {@link FeedbackResponseCommentAttributes.UpdateOptions}."},{"lineNumber":1304,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1305,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1307,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"     * @return updated comment"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the comment cannot be found"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1312,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes updateFeedbackResponseComment("},{"lineNumber":1313,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes.UpdateOptions updateOptions)"},{"lineNumber":1314,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1316,"author":{"gitId":"-"},"content":""},{"lineNumber":1317,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.updateFeedbackResponseComment(updateOptions);"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1319,"author":{"gitId":"-"},"content":""},{"lineNumber":1320,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1321,"author":{"gitId":"-"},"content":"     * Deletes a comment."},{"lineNumber":1322,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1323,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponseComment(long commentId) {"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"        feedbackResponseCommentsLogic.deleteFeedbackResponseComment(commentId);"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1326,"author":{"gitId":"-"},"content":""},{"lineNumber":1327,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"     * Returns returns a list of sessions that were closed within past hour."},{"lineNumber":1329,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"     * @see FeedbackSessionsLogic#getFeedbackSessionsClosedWithinThePastHour()"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsClosedWithinThePastHour();"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1335,"author":{"gitId":"-"},"content":""},{"lineNumber":1336,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"},{"lineNumber":1337,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsClosingWithinTimeLimit();"},{"lineNumber":1338,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1339,"author":{"gitId":"-"},"content":""},{"lineNumber":1340,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsOpeningWithinTimeLimit() {"},{"lineNumber":1341,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsOpeningWithinTimeLimit();"},{"lineNumber":1342,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1343,"author":{"gitId":"-"},"content":""},{"lineNumber":1344,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"     * Returns a list of sessions that require automated emails to be sent as they are published."},{"lineNumber":1346,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"     * @see FeedbackSessionsLogic#getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent()"},{"lineNumber":1348,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1352,"author":{"gitId":"-"},"content":""},{"lineNumber":1353,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1356,"author":{"gitId":"-"},"content":""},{"lineNumber":1357,"author":{"gitId":"-"},"content":"    public String getSectionForTeam(String courseId, String teamName) {"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"        assert teamName !\u003d null;"},{"lineNumber":1360,"author":{"gitId":"-"},"content":"        return studentsLogic.getSectionForTeam(courseId, teamName);"},{"lineNumber":1361,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1362,"author":{"gitId":"-"},"content":""},{"lineNumber":1363,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1364,"author":{"gitId":"-"},"content":"     * Persists the given data bundle to the database."},{"lineNumber":1365,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#persistDataBundle(DataBundle)"},{"lineNumber":1367,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1368,"author":{"gitId":"-"},"content":"    public DataBundle persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"},{"lineNumber":1369,"author":{"gitId":"-"},"content":"        return dataBundleLogic.persistDataBundle(dataBundle);"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1371,"author":{"gitId":"-"},"content":""},{"lineNumber":1372,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"     * Removes the given data bundle from the database."},{"lineNumber":1374,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1375,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#removeDataBundle(DataBundle)"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":1378,"author":{"gitId":"-"},"content":"        dataBundleLogic.removeDataBundle(dataBundle);"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1380,"author":{"gitId":"-"},"content":""},{"lineNumber":1381,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"     * Puts searchable documents from the data bundle to the database."},{"lineNumber":1383,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1384,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#putDocuments(DataBundle)"},{"lineNumber":1385,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"    public void putDocuments(DataBundle dataBundle) throws SearchServiceException {"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"        dataBundleLogic.putDocuments(dataBundle);"},{"lineNumber":1388,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1389,"author":{"gitId":"-"},"content":""},{"lineNumber":1390,"author":{"gitId":"-"},"content":"    public boolean isStudentsInSameTeam(String courseId, String student1Email, String student2Email) {"},{"lineNumber":1391,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"        assert student1Email !\u003d null;"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"        assert student2Email !\u003d null;"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"        return studentsLogic.isStudentsInSameTeam(courseId, student1Email, student2Email);"},{"lineNumber":1395,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1396,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1397,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1398,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an account request."},{"lineNumber":1399,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1400,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1401,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1402,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1403,"author":{"gitId":"samuelfangjw"},"content":"     * @return the created account request"},{"lineNumber":1404,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":1405,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityAlreadyExistsException if the account request already exists"},{"lineNumber":1406,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1407,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes createAccountRequest(AccountRequestAttributes accountRequest)"},{"lineNumber":1408,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":1409,"author":{"gitId":"samuelfangjw"},"content":"        assert accountRequest !\u003d null;"},{"lineNumber":1410,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1411,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsLogic.createAccountRequest(accountRequest);"},{"lineNumber":1412,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1413,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1414,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1415,"author":{"gitId":"samuelfangjw"},"content":"     * Updates an account request."},{"lineNumber":1416,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1417,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1418,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1419,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1420,"author":{"gitId":"samuelfangjw"},"content":"     * @return the updated account request"},{"lineNumber":1421,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":1422,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityDoesNotExistException if the account request does not exist"},{"lineNumber":1423,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1424,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes updateAccountRequest(AccountRequestAttributes.UpdateOptions updateOptions)"},{"lineNumber":1425,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1426,"author":{"gitId":"samuelfangjw"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1427,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1428,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsLogic.updateAccountRequest(updateOptions);"},{"lineNumber":1429,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1430,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1431,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1432,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes an account request."},{"lineNumber":1433,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1434,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1435,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1436,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1437,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":1438,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":1439,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1440,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(email, institute);"},{"lineNumber":1441,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1442,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1443,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1444,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by unique constraint {@code registrationKey}."},{"lineNumber":1445,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1446,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1447,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1448,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1449,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request"},{"lineNumber":1450,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1451,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequestForRegistrationKey(String registrationKey) {"},{"lineNumber":1452,"author":{"gitId":"samuelfangjw"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":1453,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1454,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsLogic.getAccountRequestForRegistrationKey(registrationKey);"},{"lineNumber":1455,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1456,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1457,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":1458,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by email address and institute."},{"lineNumber":1459,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1460,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1461,"author":{"gitId":"samuelfangjw"},"content":"     * * All parameters are non-null."},{"lineNumber":1462,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":1463,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request"},{"lineNumber":1464,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":1465,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":1466,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":1467,"author":{"gitId":"samuelfangjw"},"content":"        assert institute !\u003d null;"},{"lineNumber":1468,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1469,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsLogic.getAccountRequest(email, institute);"},{"lineNumber":1470,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":1471,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":1472,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":1393,"samuelfangjw":79}},{"path":"src/main/java/teammates/logic/core/AccountRequestsLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.api.AccountRequestsDb;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * Handles the logic related to account requests."},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public final class AccountRequestsLogic {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final AccountRequestsLogic instance \u003d new AccountRequestsLogic();"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsDb accountRequestsDb \u003d AccountRequestsDb.inst();"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequestsLogic() {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        // prevent initialization"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public static AccountRequestsLogic inst() {"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        return instance;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    void initLogicDependencies() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        // No dependency to other logic class"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * Updates an account request."},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * @return the updated account request"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityDoesNotExistException if the account request to create does not exist"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes updateAccountRequest(AccountRequestAttributes.UpdateOptions updateOptions)"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.updateAccountRequest(updateOptions);"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an account request."},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * @return the created account request"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityAlreadyExistsException if the account request to create already exists"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes createAccountRequest(AccountRequestAttributes accountRequest)"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.createEntity(accountRequest);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes the account request associated with the email address and institute."},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     * \u003cp\u003eFails silently if the account request doesn\u0027t exist.\u003c/p\u003e"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(email, institute);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by email address and institute."},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.getAccountRequest(email, institute);"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by unique constraint {@code registrationKey}."},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequestForRegistrationKey(String registrationKey) {"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequestsDb.getAccountRequestForRegistrationKey(registrationKey);"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":81}},{"path":"src/main/java/teammates/logic/core/DataBundleLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collection;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.AttributesDeletionQuery;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.InstructorPrivileges;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.EntityAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.api.AccountRequestsDb;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.storage.api.AccountsDb;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.storage.api.CoursesDb;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackQuestionsDb;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackResponseCommentsDb;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackResponsesDb;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackSessionsDb;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.storage.api.InstructorsDb;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.storage.api.ProfilesDb;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.storage.api.StudentsDb;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Handles operations related to data bundles."},{"lineNumber":41,"author":{"gitId":"-"},"content":" *"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * @see DataBundle"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public final class DataBundleLogic {"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final DataBundleLogic instance \u003d new DataBundleLogic();"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final AccountsDb accountsDb \u003d AccountsDb.inst();"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsDb accountRequestsDb \u003d AccountRequestsDb.inst();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final ProfilesDb profilesDb \u003d ProfilesDb.inst();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final CoursesDb coursesDb \u003d CoursesDb.inst();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final StudentsDb studentsDb \u003d StudentsDb.inst();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final InstructorsDb instructorsDb \u003d InstructorsDb.inst();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final FeedbackSessionsDb fbDb \u003d FeedbackSessionsDb.inst();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final FeedbackQuestionsDb fqDb \u003d FeedbackQuestionsDb.inst();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final FeedbackResponsesDb frDb \u003d FeedbackResponsesDb.inst();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final FeedbackResponseCommentsDb fcDb \u003d FeedbackResponseCommentsDb.inst();"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private DataBundleLogic() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static DataBundleLogic inst() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Persists data in the given {@link DataBundle} to the database, including"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * accounts, courses, instructors, students, sessions, questions, responses, and comments."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAccounts are generated for students and instructors with Google IDs"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if the corresponding accounts are not found in the data bundle."},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * For question ID injection in responses and comments to work properly, all questions"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * referenced by responses and comments must be included in the data bundle."},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if invalid data is encountered."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public DataBundle persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (dataBundle \u003d\u003d null) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new InvalidParametersException(\"Null data bundle\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cAccountAttributes\u003e accounts \u003d dataBundle.accounts.values();"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        Collection\u003cAccountRequestAttributes\u003e accountRequests \u003d dataBundle.accountRequests.values();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Collection\u003cStudentProfileAttributes\u003e profiles \u003d dataBundle.profiles.values();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cCourseAttributes\u003e courses \u003d dataBundle.courses.values();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Collection\u003cInstructorAttributes\u003e instructors \u003d dataBundle.instructors.values();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cStudentAttributes\u003e students \u003d dataBundle.students.values();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackSessionAttributes\u003e sessions \u003d dataBundle.feedbackSessions.values();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackQuestionAttributes\u003e questions \u003d dataBundle.feedbackQuestions.values();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackResponseAttributes\u003e responses \u003d dataBundle.feedbackResponses.values();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackResponseCommentAttributes\u003e responseComments \u003d dataBundle.feedbackResponseComments.values();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // For ensuring only one account per Google ID is created"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Map\u003cString, AccountAttributes\u003e googleIdAccountMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        for (AccountAttributes account : accounts) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            googleIdAccountMap.put(account.getGoogleId(), account);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        processInstructors(instructors, googleIdAccountMap);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        processStudents(students, googleIdAccountMap);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        processQuestions(questions);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cAccountAttributes\u003e newAccounts \u003d accountsDb.putEntities(googleIdAccountMap.values());"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountRequestAttributes\u003e newAccountRequests \u003d accountRequestsDb.putEntities(accountRequests);"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cStudentProfileAttributes\u003e newProfiles \u003d profilesDb.putEntities(profiles);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cCourseAttributes\u003e newCourses \u003d coursesDb.putEntities(courses);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e newInstructors \u003d instructorsDb.putEntities(instructors);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e newStudents \u003d studentsDb.putEntities(students);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e newFeedbackSessions \u003d fbDb.putEntities(sessions);"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e createdQuestions \u003d fqDb.putEntities(questions);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        injectRealIds(responses, responseComments, createdQuestions);"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e newFeedbackResponses \u003d frDb.putEntities(responses);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseCommentAttributes\u003e newFeedbackResponseComments \u003d fcDb.putEntities(responseComments);"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newAccounts, dataBundle.accounts);"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        updateDataBundleValue(newAccountRequests, dataBundle.accountRequests);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newProfiles, dataBundle.profiles);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newCourses, dataBundle.courses);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newInstructors, dataBundle.instructors);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newStudents, dataBundle.students);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newFeedbackSessions, dataBundle.feedbackSessions);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        updateDataBundleValue(createdQuestions, dataBundle.feedbackQuestions);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newFeedbackResponses, dataBundle.feedbackResponses);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newFeedbackResponseComments, dataBundle.feedbackResponseComments);"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return dataBundle;"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private \u003cT extends EntityAttributes\u003c?\u003e\u003e void updateDataBundleValue(List\u003cT\u003e newValues, Map\u003cString, T\u003e oldValues) {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Map\u003cT, Integer\u003e newValuesMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Map\u003cString, T\u003e values \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c newValues.size(); i++) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            newValuesMap.put(newValues.get(i), i);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, T\u003e entry : oldValues.entrySet()) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String key \u003d entry.getKey();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            T value \u003d entry.getValue();"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"            if (newValuesMap.containsKey(value)) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                int index \u003d newValuesMap.get(value);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                values.put(key, newValues.get(index));"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        oldValues.clear();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        oldValues.putAll(values);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Creates document for entities that have document, i.e. searchable."},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void putDocuments(DataBundle dataBundle) throws SearchServiceException {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // query the entity in db first to get the actual data and create document for actual entity"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Map\u003cString, StudentAttributes\u003e students \u003d dataBundle.students;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students.values()) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            StudentAttributes studentInDb \u003d studentsDb.getStudentForEmail(student.getCourse(), student.getEmail());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            studentsDb.putDocument(studentInDb);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Map\u003cString, InstructorAttributes\u003e instructors \u003d dataBundle.instructors;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors.values()) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            InstructorAttributes instructorInDb \u003d"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    instructorsDb.getInstructorForEmail(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            instructorsDb.putDocument(instructorInDb);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void processInstructors("},{"lineNumber":177,"author":{"gitId":"-"},"content":"            Collection\u003cInstructorAttributes\u003e instructors, Map\u003cString, AccountAttributes\u003e googleIdAccountMap) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            validateInstructorPrivileges(instructor);"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"            // create adhoc account to maintain data integrity"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (!StringHelper.isEmpty(instructor.getGoogleId())) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                googleIdAccountMap.putIfAbsent(instructor.getGoogleId(), makeAccount(instructor));"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void processStudents("},{"lineNumber":189,"author":{"gitId":"-"},"content":"            Collection\u003cStudentAttributes\u003e students, Map\u003cString, AccountAttributes\u003e googleIdAccountMap) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            populateNullSection(student);"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"            // create adhoc account to maintain data integrity"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (!StringHelper.isEmpty(student.getGoogleId())) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                googleIdAccountMap.putIfAbsent(student.getGoogleId(), makeAccount(student));"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private void processQuestions(Collection\u003cFeedbackQuestionAttributes\u003e questions) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes question : questions) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            question.removeIrrelevantVisibilityOptions();"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void injectRealIds("},{"lineNumber":207,"author":{"gitId":"-"},"content":"            Collection\u003cFeedbackResponseAttributes\u003e responses, Collection\u003cFeedbackResponseCommentAttributes\u003e responseComments,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            List\u003cFeedbackQuestionAttributes\u003e createdQuestions) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e questionIdMap \u003d makeQuestionIdMap(createdQuestions);"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        injectRealIdsIntoResponses(responses, questionIdMap);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        injectRealIdsIntoResponseComments(responseComments, questionIdMap);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private Map\u003cString, String\u003e makeQuestionIdMap(List\u003cFeedbackQuestionAttributes\u003e createdQuestions) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e questionIdMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes createdQuestion : createdQuestions) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            String sessionKey \u003d makeSessionKey(createdQuestion.getFeedbackSessionName(), createdQuestion.getCourseId());"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            String questionKey \u003d makeQuestionKey(sessionKey, createdQuestion.getQuestionNumber());"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            questionIdMap.put(questionKey, createdQuestion.getId());"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return questionIdMap;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * This method is necessary to generate the feedbackQuestionId of the"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * question the response is for.\u003cbr\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Normally, the ID is already generated on creation,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * but the json file does not contain the actual response ID. \u003cbr\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * Therefore the question number corresponding to the created response"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * should be inserted in the json file in place of the actual response ID.\u003cbr\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * This method will then generate the correct ID and replace the field."},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    private void injectRealIdsIntoResponses(Collection\u003cFeedbackResponseAttributes\u003e responses,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            Map\u003cString, String\u003e questionIdMap) {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responses) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            int questionNumber;"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                questionNumber \u003d Integer.parseInt(response.getFeedbackQuestionId());"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                // question ID already injected"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            String sessionKey \u003d makeSessionKey(response.getFeedbackSessionName(), response.getCourseId());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            String questionKey \u003d makeQuestionKey(sessionKey, questionNumber);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            response.setFeedbackQuestionId(questionIdMap.get(questionKey));"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * This method is necessary to generate the feedbackQuestionId"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * and feedbackResponseId of the question and response the comment is for.\u003cbr\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Normally, the ID is already generated on creation,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * but the json file does not contain the actual response ID. \u003cbr\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * Therefore the question number and questionNumber%giverEmail%recipient"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * corresponding to the created comment should be inserted in the json"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * file in place of the actual ID.\u003cbr\u003e"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * This method will then generate the correct ID and replace the field."},{"lineNumber":259,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    private void injectRealIdsIntoResponseComments(Collection\u003cFeedbackResponseCommentAttributes\u003e responseComments,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            Map\u003cString, String\u003e questionIdMap) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        for (FeedbackResponseCommentAttributes comment : responseComments) {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            int questionNumber;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                questionNumber \u003d Integer.parseInt(comment.getFeedbackQuestionId());"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                // question ID already injected"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            String sessionKey \u003d makeSessionKey(comment.getFeedbackSessionName(), comment.getCourseId());"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            String questionKey \u003d makeQuestionKey(sessionKey, questionNumber);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            comment.setFeedbackQuestionId(questionIdMap.get(questionKey));"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"            // format of feedbackResponseId: questionNumber%giverEmail%recipient"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            String[] responseIdParam \u003d comment.getFeedbackResponseId().split(\"%\", 3);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            comment.setFeedbackResponseId(comment.getFeedbackQuestionId() + \"%\" + responseIdParam[1]"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    + \"%\" + responseIdParam[2]);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     * Checks if the role of {@code instructor} matches its privileges."},{"lineNumber":283,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * @param instructor"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     *            the {@link InstructorAttributes} of an instructor, cannot be"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     *            {@code null}"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    private void validateInstructorPrivileges(InstructorAttributes instructor) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"        if (instructor.getRole() \u003d\u003d null) {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"        InstructorPrivileges privileges \u003d instructor.getPrivileges();"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"        switch (instructor.getRole()) {"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER:"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            assert privileges.hasCoownerPrivileges();"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_MANAGER:"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            assert privileges.hasManagerPrivileges();"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_OBSERVER:"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            assert privileges.hasObserverPrivileges();"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_TUTOR:"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            assert privileges.hasTutorPrivileges();"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_CUSTOM:"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            assert false : \"Invalid instructor permission role name\";"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    private void populateNullSection(StudentAttributes student) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        student.setSection(student.getSection() \u003d\u003d null ? \"None\" : student.getSection());"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    private AccountAttributes makeAccount(InstructorAttributes instructor) {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return AccountAttributes.builder(instructor.getGoogleId())"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                .withName(instructor.getName())"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                .withEmail(instructor.getEmail())"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                .withInstitute(\"TEAMMATES Test Institute 1\")"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                .withIsInstructor(true)"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"    private AccountAttributes makeAccount(StudentAttributes student) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        return AccountAttributes.builder(student.getGoogleId())"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                .withName(student.getName())"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                .withEmail(student.getEmail())"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                .withInstitute(\"TEAMMATES Test Institute 1\")"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                .withIsInstructor(false)"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    private String makeSessionKey(String feedbackSessionName, String courseId) {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        return feedbackSessionName + \"%\" + courseId;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"    private String makeQuestionKey(String sessionKey, int questionNumber) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return makeQuestionKey(sessionKey, String.valueOf(questionNumber));"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"    private String makeQuestionKey(String sessionKey, String questionNumber) {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return sessionKey + \"%\" + questionNumber;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":356,"author":{"gitId":"-"},"content":""},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Removes the items in the data bundle from the database."},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"        // Questions and responses will be deleted automatically."},{"lineNumber":363,"author":{"gitId":"-"},"content":"        // We don\u0027t attempt to delete them again, to save time."},{"lineNumber":364,"author":{"gitId":"-"},"content":"        deleteCourses(dataBundle.courses.values());"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"        dataBundle.accounts.values().forEach(account -\u003e {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            accountsDb.deleteAccount(account.getGoogleId());"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        dataBundle.profiles.values().forEach(profile -\u003e {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            profilesDb.deleteStudentProfile(profile.getGoogleId());"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":372,"author":{"gitId":"samuelfangjw"},"content":"        dataBundle.accountRequests.values().forEach(accountRequest -\u003e {"},{"lineNumber":373,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestsDb.deleteAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":374,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"    private void deleteCourses(Collection\u003cCourseAttributes\u003e courses) {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        List\u003cString\u003e courseIds \u003d new ArrayList\u003c\u003e();"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        for (CourseAttributes course : courses) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            courseIds.add(course.getId());"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        if (!courseIds.isEmpty()) {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"            courseIds.forEach(courseId -\u003e {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                AttributesDeletionQuery query \u003d AttributesDeletionQuery.builder()"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                        .withCourseId(courseId)"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                fcDb.deleteFeedbackResponseComments(query);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                frDb.deleteFeedbackResponses(query);"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                fqDb.deleteFeedbackQuestions(query);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"                fbDb.deleteFeedbackSessions(query);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                studentsDb.deleteStudents(query);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                instructorsDb.deleteInstructors(query);"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"                coursesDb.deleteCourse(courseId);"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":390,"samuelfangjw":9}},{"path":"src/main/java/teammates/storage/api/AccountRequestsDb.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static com.googlecode.objectify.ObjectifyService.ofy;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.Key;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.cmd.LoadType;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Handles CRUD operations for account requests."},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" *"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * @see AccountRequest"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" * @see AccountRequestAttributes"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"public final class AccountRequestsDb extends EntitiesDb\u003cAccountRequest, AccountRequestAttributes\u003e {"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private static final AccountRequestsDb instance \u003d new AccountRequestsDb();"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequestsDb() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        // prevent initialization"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public static AccountRequestsDb inst() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        return instance;"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by email and institute."},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assert institute !\u003d null;"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        return makeAttributesOrNull(getAccountRequestEntity(AccountRequest.generateId(email, institute)));"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * Updates an account request."},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * @return the updated account request"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * @throws EntityDoesNotExistException if the account request cannot be found"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes updateAccountRequest(AccountRequestAttributes.UpdateOptions updateOptions)"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d getAccountRequest(updateOptions.getEmail(), updateOptions.getInstitute());"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequest \u003d\u003d null) {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            throw new EntityDoesNotExistException(ERROR_UPDATE_NON_EXISTENT + updateOptions);"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.update(updateOptions);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.sanitizeForSaving();"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        if (!accountRequest.isValid()) {"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidParametersException(accountRequest.getInvalidityInfo());"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        saveEntity(accountRequest.toEntity());"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return accountRequest;"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request by unique constraint {@code registrationKey}."},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     * @return the account request or null if no match found"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequestForRegistrationKey(String registrationKey) {"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cAccountRequest\u003e accountRequestList \u003d load().filter(\"registrationKey \u003d\", registrationKey).list();"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestList.size() \u003e 1) {"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"            log.severe(\"Duplicate registration keys detected for: \""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                    + accountRequestList.stream().map(i -\u003e i.getId()).collect(Collectors.joining(\", \")));"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestList.isEmpty()) {"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            return null;"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        return makeAttributes(accountRequestList.get(0));"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequest getAccountRequestEntity(String id) {"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        return load().id(id).now();"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes an accountRequest."},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        assert email !\u003d null;"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        assert institute !\u003d null;"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        deleteEntity(Key.create(AccountRequest.class, AccountRequest.generateId(email, institute)));"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    LoadType\u003cAccountRequest\u003e load() {"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        return ofy().load().type(AccountRequest.class);"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    boolean hasExistingEntities(AccountRequestAttributes entityToCreate) {"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        Key\u003cAccountRequest\u003e keyToFind \u003d Key.create(AccountRequest.class,"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"                AccountRequest.generateId(entityToCreate.getEmail(), entityToCreate.getInstitute()));"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        return !load().filterKey(keyToFind).keys().list().isEmpty();"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    AccountRequestAttributes makeAttributes(AccountRequest entity) {"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        assert entity !\u003d null;"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        return AccountRequestAttributes.valueOf(entity);"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":127}},{"path":"src/main/java/teammates/storage/api/OfyHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextEvent;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextListener;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.DatastoreOptions;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyFactory;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyService;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Account;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.storage.entity.BaseEntity;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Course;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.storage.entity.CourseStudent;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackQuestion;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackResponse;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackResponseComment;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackSession;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Instructor;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.storage.entity.StudentProfile;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Setup in web.xml to register Objectify at application startup."},{"lineNumber":25,"author":{"gitId":"-"},"content":" **/"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class OfyHelper implements ServletContextListener {"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static void initializeDatastore() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        DatastoreOptions.Builder builder \u003d DatastoreOptions.newBuilder().setProjectId(Config.APP_ID);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            builder.setHost(\"http://localhost:\" + Config.APP_LOCALDATASTORE_PORT);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ObjectifyService.init(new ObjectifyFactory(builder.build().getService()));"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Register entity classes in Objectify service."},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void registerEntityClasses() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Account.class);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Course.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ObjectifyService.register(CourseStudent.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackQuestion.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackResponse.class);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackResponseComment.class);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackSession.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Instructor.class);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ObjectifyService.register(StudentProfile.class);"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        ObjectifyService.register(AccountRequest.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // enable the ability to use java.time.Instant to issue query"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ObjectifyService.factory().getTranslators().add(new BaseEntity.InstantTranslatorFactory());"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void contextInitialized(ServletContextEvent event) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Invoked by Jetty at application startup."},{"lineNumber":57,"author":{"gitId":"-"},"content":"        initializeDatastore();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        registerEntityClasses();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void contextDestroyed(ServletContextEvent event) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Nothing to do"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":63,"samuelfangjw":2}},{"path":"src/main/java/teammates/storage/entity/AccountRequest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.storage.entity;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.security.SecureRandom;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.annotation.Entity;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.annotation.Index;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import com.googlecode.objectify.annotation.Translate;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Represents an AccountRequest entity."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"@Entity"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"@Index"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequest extends BaseEntity {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Id"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private String id;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private String registrationKey;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private String email;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private String name;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private String institute;"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private Instant registeredAt;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    private Instant createdAt;"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    @SuppressWarnings(\"unused\")"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    private AccountRequest() {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        // required by Objectify"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequest(String email, String name, String institute) {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        this.setEmail(email);"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        this.setName(name);"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        this.setInstitute(institute);"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        this.setId(generateId(email, institute));"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        this.setRegistrationKey(generateRegistrationKey());"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        this.setCreatedAt(Instant.now());"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        this.setRegisteredAt(null);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        return id;"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public void setId(String id) {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        this.id \u003d id.trim();"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegistrationKey() {"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return registrationKey;"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public void setRegistrationKey(String registrationKey) {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        this.registrationKey \u003d registrationKey.trim();"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public String getName() {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return name;"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    public void setName(String name) {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        this.name \u003d name.trim();"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    public String getEmail() {"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        return email;"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public void setEmail(String email) {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        this.email \u003d email.trim();"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    public String getInstitute() {"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        return institute;"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    public void setInstitute(String institute) {"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        this.institute \u003d institute.trim();"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    public Instant getRegisteredAt() {"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        return registeredAt;"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    public void setRegisteredAt(Instant registeredAt) {"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        this.registeredAt \u003d registeredAt;"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    public Instant getCreatedAt() {"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        return createdAt;"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    public void setCreatedAt(Instant createdAt) {"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        this.createdAt \u003d createdAt;"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"     * Generates an unique ID for the account request."},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    public static String generateId(String email, String institute) {"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        // Format: email%institute e.g., adam@gmail.com%TEAMMATES_TEST_INSTITUTE"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        return email + \u0027%\u0027 + institute;"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"     * Generate unique registration key for the account request."},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"     * The key contains random elements to avoid being guessed."},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    private String generateRegistrationKey() {"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        String uniqueId \u003d getId();"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        SecureRandom prng \u003d new SecureRandom();"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        return StringHelper.encrypt(uniqueId + prng.nextInt());"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":126}},{"path":"src/main/java/teammates/ui/constants/ResourceEndpoints.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.constants;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * API endpoints for resources."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public enum ResourceEndpoints {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.OFF:JavadocVariable"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    ERROR_REPORT(ResourceURIs.ERROR_REPORT),"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    AUTH(ResourceURIs.AUTH),"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    AUTH_REGKEY(ResourceURIs.AUTH_REGKEY),"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ACCOUNT(ResourceURIs.ACCOUNT),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ACCOUNT_RESET(ResourceURIs.ACCOUNT_RESET),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ACCOUNT_DOWNGRADE(ResourceURIs.ACCOUNT_DOWNGRADE),"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    ACCOUNT_REQUEST(ResourceURIs.ACCOUNT_REQUEST),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    RESPONSE_COMMENT(ResourceURIs.RESPONSE_COMMENT),"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    COURSE(ResourceURIs.COURSE),"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    COURSE_ARCHIVE(ResourceURIs.COURSE_ARCHIVE),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    BIN_COURSE(ResourceURIs.BIN_COURSE),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    COURSE_SECTIONS(ResourceURIs.COURSE_SECTIONS),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    COURSES(ResourceURIs.COURSES),"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    INSTRUCTORS(ResourceURIs.INSTRUCTORS),"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    INSTRUCTOR(ResourceURIs.INSTRUCTOR),"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    INSTRUCTOR_PRIVILEGE(ResourceURIs.INSTRUCTOR_PRIVILEGE),"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    INSTRUCTOR_KEY(ResourceURIs.INSTRUCTOR_KEY),"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    RESULT(ResourceURIs.RESULT),"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    STUDENTS(ResourceURIs.STUDENTS),"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    STUDENT(ResourceURIs.STUDENT),"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    STUDENT_KEY(ResourceURIs.STUDENT_KEY),"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    SESSIONS_ONGOING(ResourceURIs.SESSIONS_ONGOING),"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    SESSION(ResourceURIs.SESSION),"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    SESSION_LOGS(ResourceURIs.SESSION_LOGS),"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    SESSION_PUBLISH(ResourceURIs.SESSION_PUBLISH),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    SESSION_REMIND_SUBMISSION(ResourceURIs.SESSION_REMIND_SUBMISSION),"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    SESSION_REMIND_RESULT(ResourceURIs.SESSION_REMIND_RESULT),"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    SESSION_STATS(ResourceURIs.SESSION_STATS),"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    SESSION_SUBMITTED_GIVER_SET(ResourceURIs.SESSION_SUBMITTED_GIVER_SET),"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    SESSIONS(ResourceURIs.SESSIONS),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BIN_SESSION(ResourceURIs.BIN_SESSION),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    QUESTIONS(ResourceURIs.QUESTIONS),"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    QUESTION(ResourceURIs.QUESTION),"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    QUESTION_RECIPIENTS(ResourceURIs.QUESTION_RECIPIENTS),"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    RESPONSES(ResourceURIs.RESPONSES),"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    HAS_RESPONSES(ResourceURIs.HAS_RESPONSES),"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    JOIN(ResourceURIs.JOIN),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    JOIN_REMIND(ResourceURIs.JOIN_REMIND),"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    TIMEZONE(ResourceURIs.TIMEZONE),"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    SESSION_LINKS_RECOVERY(ResourceURIs.SESSION_LINKS_RECOVERY),"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    NATIONALITIES(ResourceURIs.NATIONALITIES),"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    EMAIL(ResourceURIs.EMAIL),"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE_PICTURE(ResourceURIs.STUDENT_PROFILE_PICTURE),"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE(ResourceURIs.STUDENT_PROFILE),"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    SEARCH_INSTRUCTORS(ResourceURIs.SEARCH_INSTRUCTORS),"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    SEARCH_STUDENTS(ResourceURIs.SEARCH_STUDENTS),"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    LOGS(ResourceURIs.LOGS),"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ACTION_CLASS(ResourceURIs.ACTION_CLASS);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final String url;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    ResourceEndpoints(String s) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.url \u003d s;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @JsonValue"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String getUrl() {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return url;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":71,"samuelfangjw":1}},{"path":"src/main/java/teammates/ui/output/AccountRequestData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" * Output format of account request data."},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestData extends ApiOutput {"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    private final String email;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    private final String name;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private final String institute;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private final String registrationKey;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private final Long registeredAt;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private final long createdAt;"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestData(AccountRequestAttributes accountRequestInfo) {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        this.name \u003d accountRequestInfo.getName();"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        this.email \u003d accountRequestInfo.getEmail();"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        this.institute \u003d accountRequestInfo.getInstitute();"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        this.registrationKey \u003d accountRequestInfo.getRegistrationKey();"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        this.createdAt \u003d accountRequestInfo.getCreatedAt().toEpochMilli();"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestInfo.getRegisteredAt() \u003d\u003d null) {"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            this.registeredAt \u003d null;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            this.registeredAt \u003d accountRequestInfo.getRegisteredAt().toEpochMilli();"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public String getInstitute() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        return institute;"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public String getEmail() {"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        return email;"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public String getName() {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        return name;"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegistrationKey() {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return registrationKey;"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public Long getRegisteredAt() {"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        return registeredAt;"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public long getCreatedAt() {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        return createdAt;"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":54}},{"path":"src/main/java/teammates/ui/servlets/AuthServlet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.servlets;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javax.servlet.http.Cookie;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServlet;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletRequest;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.api.client.auth.oauth2.AuthorizationCodeFlow;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.api.client.http.GenericUrl;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.api.client.http.HttpTransport;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.google.api.client.http.javanet.NetHttpTransport;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.google.api.client.json.JsonFactory;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.api.client.json.jackson2.JacksonFactory;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.google.api.client.util.store.MemoryDataStoreFactory;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.UserInfoCookie;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Common servlet class that serves user authentication-related functions."},{"lineNumber":28,"author":{"gitId":"-"},"content":" */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"abstract class AuthServlet extends HttpServlet {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final MemoryDataStoreFactory DATA_STORE_FACTORY \u003d MemoryDataStoreFactory.getDefaultInstance();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final HttpTransport HTTP_TRANSPORT \u003d new NetHttpTransport();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final JsonFactory JSON_FACTORY \u003d JacksonFactory.getDefaultInstance();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SCOPES \u003d Arrays.asList(\"https://www.googleapis.com/auth/userinfo.email\");"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Gets the authorization code flow to be used across all HTTP servlet requests."},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    AuthorizationCodeFlow getAuthorizationFlow() throws IOException {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new GoogleAuthorizationCodeFlow.Builder("},{"lineNumber":41,"author":{"gitId":"-"},"content":"                HTTP_TRANSPORT, JSON_FACTORY, Config.OAUTH2_CLIENT_ID, Config.OAUTH2_CLIENT_SECRET, SCOPES)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .setDataStoreFactory(DATA_STORE_FACTORY)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .setAccessType(\"offline\")"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the redirect URI for the given HTTP servlet request."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String getRedirectUri(HttpServletRequest req) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        GenericUrl url \u003d new GenericUrl(req.getRequestURL().toString().replaceFirst(\"^http://\", \"https://\"));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        url.setRawPath(\"/oauth2callback\");"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        url.set(\"ngsw-bypass\", \"true\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return url.build();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    Cookie getLoginInvalidationCookie() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Cookie cookie \u003d new Cookie(Const.SecurityConfig.AUTH_COOKIE_NAME, \"\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        cookie.setPath(\"/\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        cookie.setSecure(!Config.isDevServer());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        cookie.setHttpOnly(true);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        cookie.setMaxAge(0);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return cookie;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    Cookie getLoginCookie(UserInfoCookie uic) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Cookie cookie \u003d new Cookie(Const.SecurityConfig.AUTH_COOKIE_NAME,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                StringHelper.encrypt(JsonUtils.toCompactJson(uic)));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        cookie.setPath(\"/\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        cookie.setSecure(!Config.isDevServer());"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        cookie.setHttpOnly(true);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        cookie.setMaxAge(7 * 24 * 60 * 60); // one week"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return cookie;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Represents the state object to be persisted during the callback."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static class AuthState {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        private final String nextUrl;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        private final String sessionId;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AuthState(String nextUrl, String sessionId) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            this.nextUrl \u003d nextUrl;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            this.sessionId \u003d sessionId;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String getNextUrl() {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return nextUrl;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public String getSessionId() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return sessionId;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":1,"-":96}},{"path":"src/main/java/teammates/ui/webapi/ActionFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletRequest;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpDelete;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPut;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.CronJobURIs;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.TaskQueue;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Generates the matching {@link Action} for a given URI and request method."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public final class ActionFactory {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    static final Map\u003cString, Map\u003cString, Class\u003c? extends Action\u003e\u003e\u003e ACTION_MAPPINGS \u003d new HashMap\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String GET \u003d HttpGet.METHOD_NAME;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String POST \u003d HttpPost.METHOD_NAME;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String PUT \u003d HttpPut.METHOD_NAME;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DELETE \u003d HttpDelete.METHOD_NAME;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, POST, PutDataBundleAction.class);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Even though this is a DELETE action, PUT is used as DELETE does not allow usage of response body"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, PUT, DeleteDataBundleAction.class);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE_DOCUMENTS, PUT, PutDataBundleDocumentsAction.class);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EXCEPTION, GET, AdminExceptionTestAction.class);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Even though this is a GET action, POST is used in order to get extra protection from CSRF"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        map(ResourceURIs.USER_COOKIE, POST, GetUserCookieAction.class);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ERROR_REPORT, POST, SendErrorReportAction.class);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        map(ResourceURIs.TIMEZONE, GET, GetTimeZonesAction.class);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        map(ResourceURIs.NATIONALITIES, GET, GetNationalitiesAction.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH, GET, GetAuthInfoAction.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH_REGKEY, GET, GetRegkeyValidityAction.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, GET, GetAccountAction.class);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, POST, CreateAccountAction.class);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, DELETE, DeleteAccountAction.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_DOWNGRADE, PUT, DowngradeAccountAction.class);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_RESET, PUT, ResetAccountAction.class);"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, GET, GetAccountRequestAction.class);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, POST, CreateAccountRequestAction.class);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, DELETE, DeleteAccountRequestAction.class);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, GET, GetCourseAction.class);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, DELETE, DeleteCourseAction.class);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, POST, CreateCourseAction.class);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, PUT, UpdateCourseAction.class);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_ARCHIVE, PUT, ArchiveCourseAction.class);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, PUT, BinCourseAction.class);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, DELETE, RestoreCourseAction.class);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSES, GET, GetCoursesAction.class);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_SECTIONS, GET, GetCourseSectionNamesAction.class);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTORS, GET, GetInstructorsAction.class);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, GET, GetInstructorAction.class);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, DELETE, DeleteInstructorAction.class);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, GET, GetInstructorPrivilegeAction.class);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, PUT, UpdateInstructorPrivilegeAction.class);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, POST, CreateFeedbackResponseCommentAction.class);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, GET, GetFeedbackResponseCommentAction.class);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, PUT, UpdateFeedbackResponseCommentAction.class);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, DELETE, DeleteFeedbackResponseCommentAction.class);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESULT, GET, GetSessionResultsAction.class);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        //STUDENTS APIs"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, GET, GetStudentsAction.class);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, PUT, EnrollStudentsAction.class);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, DELETE, DeleteStudentsAction.class);"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        //STUDENT APIs"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, DELETE, DeleteStudentAction.class);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, GET, GetStudentAction.class);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, PUT, UpdateStudentAction.class);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        //SEARCH APIs"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_INSTRUCTORS, GET, SearchInstructorsAction.class);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_STUDENTS, GET, SearchStudentsAction.class);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EMAIL, GET, GenerateEmailAction.class);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS_ONGOING, GET, GetOngoingSessionsAction.class);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_STATS, GET, GetSessionResponseStatsAction.class);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, GET, GetFeedbackSessionAction.class);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, PUT, UpdateFeedbackSessionAction.class);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, POST, CreateFeedbackSessionAction.class);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, DELETE, DeleteFeedbackSessionAction.class);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, POST, PublishFeedbackSessionAction.class);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, DELETE, UnpublishFeedbackSessionAction.class);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_SUBMITTED_GIVER_SET, GET, GetFeedbackSessionSubmittedGiverSetAction.class);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_SUBMISSION, POST, RemindFeedbackSessionSubmissionAction.class);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_RESULT, POST, RemindFeedbackSessionResultAction.class);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS, GET, GetFeedbackSessionsAction.class);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, PUT, BinFeedbackSessionAction.class);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, DELETE, RestoreFeedbackSessionAction.class);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_KEY, POST, RegenerateInstructorKeyAction.class);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_KEY, POST, RegenerateStudentKeyAction.class);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTIONS, GET, GetFeedbackQuestionsAction.class);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, POST, CreateFeedbackQuestionAction.class);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, PUT, UpdateFeedbackQuestionAction.class);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, DELETE, DeleteFeedbackQuestionAction.class);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION_RECIPIENTS, GET, GetFeedbackQuestionRecipientsAction.class);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, GET, GetFeedbackResponsesAction.class);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, PUT, SubmitFeedbackResponsesAction.class);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        map(ResourceURIs.HAS_RESPONSES, GET, GetHasResponsesAction.class);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LINKS_RECOVERY, POST, SessionLinksRecoveryAction.class);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, GET, GetCourseJoinStatusAction.class);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, PUT, JoinCourseAction.class);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN_REMIND, POST, SendJoinReminderEmailAction.class);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, GET, GetStudentProfileAction.class);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, PUT, UpdateStudentProfileAction.class);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, GET, GetStudentProfilePictureAction.class);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, POST, PostStudentProfilePictureAction.class);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, DELETE, DeleteStudentProfilePictureAction.class);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, PUT, UpdateInstructorAction.class);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, POST, CreateInstructorAction.class);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Logging and tracking"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LOGS, POST, CreateFeedbackSessionLogAction.class);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LOGS, GET, GetFeedbackSessionLogsAction.class);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        map(ResourceURIs.LOGS, GET, QueryLogsAction.class);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACTION_CLASS, GET, GetActionClassesAction.class);"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // Cron jobs; use GET request"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/appengine/docs/standard/java11/scheduling-jobs-with-cron-yaml"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_LOG_COMPILATION, GET, CompileLogsAction.class);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_DATASTORE_BACKUP, GET, DatastoreBackupAction.class);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_OPENING_REMINDERS, GET, FeedbackSessionOpeningRemindersAction.class);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSED_REMINDERS, GET, FeedbackSessionClosedRemindersAction.class);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSING_REMINDERS, GET, FeedbackSessionClosingRemindersAction.class);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS, GET, FeedbackSessionPublishedRemindersAction.class);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_OPENING_SOON_REMINDERS, GET,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningSoonRemindersAction.class);"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // Task queue workers; use POST request"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/tasks/docs/creating-appengine-tasks"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL, POST, FeedbackSessionPublishedEmailWorkerAction.class);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                FeedbackSessionResendPublishedEmailWorkerAction.class);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL, POST, FeedbackSessionRemindEmailWorkerAction.class);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL, POST,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindParticularUsersEmailWorkerAction.class);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                FeedbackSessionUnpublishedEmailWorkerAction.class);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        map(TaskQueue.INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL, POST, InstructorCourseJoinEmailWorkerAction.class);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        map(TaskQueue.SEND_EMAIL_WORKER_URL, POST, SendEmailWorkerAction.class);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        map(TaskQueue.STUDENT_COURSE_JOIN_EMAIL_WORKER_URL, POST, StudentCourseJoinEmailWorkerAction.class);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        map(TaskQueue.INSTRUCTOR_SEARCH_INDEXING_WORKER_URL, POST, InstructorSearchIndexingWorkerAction.class);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        map(TaskQueue.STUDENT_SEARCH_INDEXING_WORKER_URL, POST, StudentSearchIndexingWorkerAction.class);"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private ActionFactory() {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private static void map(String uri, String method, Class\u003c? extends Action\u003e actionClass) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        ACTION_MAPPINGS.computeIfAbsent(uri, k -\u003e new HashMap\u003c\u003e()).put(method, actionClass);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Returns the matching {@link Action} object for the URI and method in {@code req}."},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public static Action getAction(HttpServletRequest req, String method) throws ActionMappingException {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String uri \u003d req.getRequestURI();"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (uri.contains(\";\")) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            uri \u003d uri.split(\";\")[0];"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return getAction(uri, method);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private static Action getAction(String uri, String method) throws ActionMappingException {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (!ACTION_MAPPINGS.containsKey(uri)) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Resource with URI \" + uri + \" is not found.\", HttpStatus.SC_NOT_FOUND);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Class\u003c? extends Action\u003e controllerClass \u003d"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                ACTION_MAPPINGS.getOrDefault(uri, new HashMap\u003c\u003e()).get(method);"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (controllerClass \u003d\u003d null) {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Method [\" + method + \"] is not allowed for URI \" + uri + \".\","},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    HttpStatus.SC_METHOD_NOT_ALLOWED);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return controllerClass.newInstance();"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            assert false : \"Could not create the action for \" + uri;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":197,"samuelfangjw":3}},{"path":"src/main/java/teammates/ui/webapi/CreateAccountAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.Templates;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Creates a new instructor account with sample courses."},{"lineNumber":25,"author":{"gitId":"-"},"content":" */"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"class CreateAccountAction extends Action {"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        return AuthType.LOGGED_IN;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    void checkSpecificAccessControl() {"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        // Any user can create instructor account as long as the registration key is valid."},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() throws InvalidHttpRequestBodyException, InvalidOperationException {"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        String registrationKey \u003d getNonNullRequestParamValue(Const.ParamsNames.REGKEY);"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d logic.getAccountRequestForRegistrationKey(registrationKey);"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestAttributes \u003d\u003d null) {"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            throw new EntityNotFoundException(\"Account request with registration key \""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"                    + registrationKey + \" could not be found\");"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestAttributes.getRegisteredAt() !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidOperationException(\"The registration key \" + registrationKey + \" has already been used.\");"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        String instructorEmail \u003d accountRequestAttributes.getEmail();"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        String instructorName \u003d accountRequestAttributes.getName();"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        String instructorInstitution \u003d accountRequestAttributes.getInstitute();"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String courseId;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            courseId \u003d importDemoData(instructorEmail, instructorName, instructorInstitution);"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        } catch (InvalidParametersException ipe) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            // There should not be any invalid parameter here"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"            log.severe(\"Unexpected error\", ipe);"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            return new JsonResult(ipe.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cInstructorAttributes\u003e instructorList \u003d logic.getInstructorsForCourse(courseId);"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        assert !instructorList.isEmpty();"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            logic.joinCourseForInstructor(instructorList.get(0).getKey(), userInfo.id);"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        } catch (EntityDoesNotExistException | EntityAlreadyExistsException | InvalidParametersException e) {"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"            // EntityDoesNotExistException should not be thrown as all entities should exist in demo course."},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            // EntityAlreadyExistsException should not be thrown as updated entities should not have"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"            // conflict with generated entities in new demo course."},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            // InvalidParametersException should not be thrown as as there should not be any invalid parameters."},{"lineNumber":80,"author":{"gitId":"-"},"content":"            log.severe(\"Unexpected error\", e);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"            logic.updateAccountRequest(AccountRequestAttributes"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                    .updateOptionsBuilder(instructorEmail, instructorInstitution)"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"                    .withRegisteredAt(Instant.now())"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"                    .build());"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        } catch (EntityDoesNotExistException | InvalidParametersException e) {"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"            // EntityDoesNotExistException should not be thrown as existence of account request has been validated before."},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"            // InvalidParametersException should not be thrown as there should not be any invalid parameters."},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"            log.severe(\"Unexpected error\", e);"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(\"Account successfully created\", HttpStatus.SC_OK);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Imports demo course for the new instructor."},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return the ID of demo course"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private String importDemoData(String instructorEmail, String instructorName, String instructorInstitute)"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String courseId \u003d generateDemoCourseId(instructorEmail);"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String jsonString \u003d Templates.populateTemplate(Templates.INSTRUCTOR_SAMPLE_DATA,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                // replace email"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \"teammates.demo.instructor@demo.course\", instructorEmail,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                // replace name"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \"Demo_Instructor\", instructorName,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                // replace course"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \"demo.course\", courseId,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                // replace institute"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \"demo.institute\", instructorInstitute);"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        DataBundle data \u003d JsonUtils.fromJson(jsonString, DataBundle.class);"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        logic.persistDataBundle(data);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d logic.getStudentsForCourse(courseId);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d logic.getInstructorsForCourse(courseId);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students) {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            taskQueuer.scheduleStudentForSearchIndexing(student.getCourse(), student.getEmail());"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            taskQueuer.scheduleInstructorForSearchIndexing(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return courseId;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    // Strategy to Generate New Demo Course Id:"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    // a. keep the part of email before \"@\""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    //    replace \"@\" with \".\""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    //    replace email host with their first 3 chars. eg, gmail.com -\u003e gma"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //    append \"-demo\""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    //    to sum up: lebron@gmail.com -\u003e lebron.gma-demo"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    // b. if the generated courseId already exists, create another one by appending a integer to the previous courseId."},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //    if the newly generate id still exists, increment the id, until we find a feasible one"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    //    eg."},{"lineNumber":147,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo  // already exists!"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo0 // already exists!"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo1 // already exists!"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    //    ..."},{"lineNumber":151,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo99 // already exists!"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    //    lebron@gmail.com -\u003e lebron.gma-demo100 // found! a feasible id"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    //"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    // c. in any cases(a or b), if generated Id is longer than FieldValidator.COURSE_ID_MAX_LENGTH, shorten the part"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    //    before \"@\" of the initial input email, by continuously removing its last character"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Generate a course ID for demo course, and if the generated id already exists, try another one."},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param instructorEmail is the instructor email."},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @return generated course id"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private String generateDemoCourseId(String instructorEmail) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String proposedCourseId \u003d generateNextDemoCourseId(instructorEmail, FieldValidator.COURSE_ID_MAX_LENGTH);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        while (logic.getCourse(proposedCourseId) !\u003d null) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            proposedCourseId \u003d generateNextDemoCourseId(proposedCourseId, FieldValidator.COURSE_ID_MAX_LENGTH);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return proposedCourseId;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Generate a course ID for demo course from a given email."},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @param instructorEmail is the instructor email."},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @return the first proposed course id. eg.lebron@gmail.com -\u003e lebron.gma-demo"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private String getDemoCourseIdRoot(String instructorEmail) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String[] emailSplit \u003d instructorEmail.split(\"@\");"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String username \u003d emailSplit[0];"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String host \u003d emailSplit[1];"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String head \u003d StringHelper.replaceIllegalChars(username, FieldValidator.REGEX_COURSE_ID, \u0027_\u0027);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String hostAbbreviation \u003d host.substring(0, Math.min(host.length(), 3));"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return head + \".\" + hostAbbreviation + \"-demo\";"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Generate a course ID for demo course from a given email or a generated course Id."},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * \u003cp\u003eHere we check the input string is an email or course Id and handle them accordingly;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * check the resulting course id, and if bigger than maximumIdLength, cut it so that it equals maximumIdLength."},{"lineNumber":194,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * @param instructorEmailOrProposedCourseId is the instructor email or a proposed course id that already exists."},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * @param maximumIdLength is the maximum resulting id length allowed, above which we will cut the part before \"@\""},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * @return the proposed course id, e.g.:"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     *         \u003cul\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     *         \u003cli\u003elebron@gmail.com -\u003e lebron.gma-demo\u003c/li\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     *         \u003cli\u003elebron.gma-demo -\u003e lebron.gma-demo0\u003c/li\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *         \u003cli\u003elebron.gma-demo0 -\u003e lebron.gma-demo1\u003c/li\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e012345678901234567890123456789.gma-demo9 -\u003e 01234567890123456789012345678.gma-demo10 (being cut)\u003c/li\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     *         \u003c/ul\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    String generateNextDemoCourseId(String instructorEmailOrProposedCourseId, int maximumIdLength) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        boolean isFirstCourseId \u003d instructorEmailOrProposedCourseId.contains(\"@\");"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (isFirstCourseId) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return StringHelper.truncateHead(getDemoCourseIdRoot(instructorEmailOrProposedCourseId), maximumIdLength);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        boolean isFirstTimeDuplicate \u003d instructorEmailOrProposedCourseId.endsWith(\"-demo\");"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (isFirstTimeDuplicate) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return StringHelper.truncateHead(instructorEmailOrProposedCourseId + \"0\", maximumIdLength);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        int lastIndexOfDemo \u003d instructorEmailOrProposedCourseId.lastIndexOf(\"-demo\");"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        String root \u003d instructorEmailOrProposedCourseId.substring(0, lastIndexOfDemo);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        int previousDedupSuffix \u003d Integer.parseInt(instructorEmailOrProposedCourseId.substring(lastIndexOfDemo + 5));"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return StringHelper.truncateHead(root + \"-demo\" + (previousDedupSuffix + 1), maximumIdLength);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":161,"samuelfangjw":62}},{"path":"src/main/java/teammates/ui/webapi/CreateAccountRequestAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.JoinLinkData;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.request.AccountCreateRequest;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Creates a new account request."},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"class CreateAccountRequestAction extends AdminOnlyAction {"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() throws InvalidHttpRequestBodyException, InvalidOperationException {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        AccountCreateRequest createRequest \u003d getAndValidateRequestBody(AccountCreateRequest.class);"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        String instructorName \u003d createRequest.getInstructorName().trim();"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        String instructorEmail \u003d createRequest.getInstructorEmail().trim();"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        String instructorInstitution \u003d createRequest.getInstructorInstitution().trim();"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestToCreate \u003d AccountRequestAttributes"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"                .builder(instructorEmail, instructorInstitution, instructorName)"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes;"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestAttributes \u003d logic.createAccountRequest(accountRequestToCreate);"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        } catch (InvalidParametersException ipe) {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidHttpRequestBodyException(ipe);"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        } catch (EntityAlreadyExistsException eaee) {"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            // Use existing account request"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestAttributes \u003d logic.getAccountRequest(instructorEmail, instructorInstitution);"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assert accountRequestAttributes !\u003d null;"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        String joinLink \u003d accountRequestAttributes.getRegistrationUrl();"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        EmailWrapper email \u003d emailGenerator.generateNewInstructorAccountJoinEmail("},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"                instructorEmail, instructorName, joinLink);"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        emailSender.sendEmail(email);"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        JoinLinkData output \u003d new JoinLinkData(joinLink);"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(output);"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":50}},{"path":"src/main/java/teammates/ui/webapi/DeleteAccountRequestAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" * Deletes an existing account request."},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"class DeleteAccountRequestAction extends AdminOnlyAction {"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() {"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_EMAIL);"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_INSTITUTION);"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        logic.deleteAccountRequest(email, institute);"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(\"Account request successfully deleted.\");"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":18}},{"path":"src/main/java/teammates/ui/webapi/GetAccountRequestAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountRequestData;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Gets account request information."},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"class GetAccountRequestAction extends AdminOnlyAction {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public JsonResult execute() {"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_EMAIL);"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d getNonNullRequestParamValue(Const.ParamsNames.INSTRUCTOR_INSTITUTION);"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestInfo \u003d logic.getAccountRequest(email, institute);"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        if (accountRequestInfo \u003d\u003d null) {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            throw new EntityNotFoundException(\"Account request for email: \""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"                    + email + \" and institute: \" + institute + \" not found.\");"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestData output \u003d new AccountRequestData(accountRequestInfo);"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonResult(output);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":28}},{"path":"src/main/java/teammates/ui/webapi/GetCourseJoinStatusAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.ui.output.JoinStatus;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Get the join status of a course."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class GetCourseJoinStatusAction extends Action {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return AuthType.LOGGED_IN;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void checkSpecificAccessControl() {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // Any user can use a join link as long as its parameters are valid"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public JsonResult execute() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String regkey \u003d getNonNullRequestParamValue(Const.ParamsNames.REGKEY);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String entityType \u003d getNonNullRequestParamValue(Const.ParamsNames.ENTITY_TYPE);"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        String isCreatingAccount \u003d getRequestParamValue(Const.ParamsNames.IS_CREATING_ACCOUNT);"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        switch (entityType) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        case Const.EntityType.STUDENT:"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return getStudentJoinStatus(regkey);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        case Const.EntityType.INSTRUCTOR:"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            return getInstructorJoinStatus(regkey, \"true\".equals(isCreatingAccount));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new InvalidHttpParameterException(\"Error: invalid entity type\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private JsonResult getStudentJoinStatus(String regkey) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d logic.getStudentForRegistrationKey(regkey);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (student \u003d\u003d null) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new EntityNotFoundException(\"No student with given registration key: \" + regkey);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return getJoinStatusResult(student.isRegistered());"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    private JsonResult getInstructorJoinStatus(String regkey, boolean isCreatingAccount) {"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        if (isCreatingAccount) {"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes accountRequest \u003d logic.getAccountRequestForRegistrationKey(regkey);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            if (accountRequest \u003d\u003d null) {"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                throw new EntityNotFoundException(\"No account request with given registration key: \" + regkey);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            return getJoinStatusResult(accountRequest.getRegisteredAt() !\u003d null);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d logic.getInstructorForRegistrationKey(regkey);"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (instructor \u003d\u003d null) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new EntityNotFoundException(\"No instructor with given registration key: \" + regkey);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return getJoinStatusResult(instructor.isRegistered());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private JsonResult getJoinStatusResult(boolean hasJoined) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JoinStatus result \u003d new JoinStatus(hasJoined);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new JsonResult(result);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":55,"samuelfangjw":15}},{"path":"src/test/java/teammates/common/datatransfer/attributes/AccountRequestAttributesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link AccountRequestAttributes}."},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestAttributesTest extends BaseTestCase {"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void testValueOf_withTypicalData_shouldGenerateAttributesCorrectly() {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"                new AccountRequest(\"valid@test.com\", \"Valid Name\", \"Valid Institute\");"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d AccountRequestAttributes.valueOf(accountRequest);"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(accountRequestAttributes.getRegistrationKey());"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Valid Name\", accountRequestAttributes.getName());"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"valid@test.com\", accountRequestAttributes.getEmail());"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Valid Institute\", accountRequestAttributes.getInstitute());"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestAttributes.getRegisteredAt());"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public void testValueOf_registeredWithTypicalData_shouldGenerateAttributesCorrectly() {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"                new AccountRequest(\"valid@test.com\", \"Valid Name\", \"Valid Institute\");"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegisteredAt(Const.TIME_REPRESENTS_NOW);"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d AccountRequestAttributes.valueOf(accountRequest);"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Const.TIME_REPRESENTS_NOW, accountRequestAttributes.getRegisteredAt());"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public void testBuilder_withTypicalData_shouldBuildCorrectAttributes() {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        String validEmail \u003d \"valid@test.com\";"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        String validInstitute \u003d \"validInstitute\";"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        String validName \u003d \"valid name\";"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d AccountRequestAttributes"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"                .builder(validEmail, validInstitute, validName)"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Const.TIME_REPRESENTS_NOW, accountRequestAttributes.getRegisteredAt());"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(validEmail, accountRequestAttributes.getEmail());"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(validInstitute, accountRequestAttributes.getInstitute());"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(validName, accountRequestAttributes.getName());"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public void testBuilder_buildNothing_shouldUseDefaultValues() {"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"                AccountRequestAttributes.builder(\"valid@test.com\", \"valid institute\", \"valid name\").build();"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"valid@test.com\", accountRequestAttributes.getEmail());"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"valid institute\", accountRequestAttributes.getInstitute());"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"valid name\", accountRequestAttributes.getName());"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestAttributes.getRegistrationKey());"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestAttributes.getRegisteredAt());"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    public void testBuilder_withNullArguments_shouldThrowException() {"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"                    .builder(null, null, null)"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                    .build();"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"                    .builder(\"valid@test.com\", \"valid institute\", \"valid name\")"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"                    .withRegisteredAt(null)"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"                    .build();"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    public void testValidate() throws Exception {"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes validAccountRequest \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(\"valid value\", validAccountRequest.isValid());"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        String invalidEmail \u003d \"invalid-email\";"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        String emptyName \u003d \"\";"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes invalidAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"                .builder(invalidEmail, \"institute\", emptyName)"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(\"invalid value\", invalidAccountRequest.isValid());"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        String errorMessage \u003d"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"                getPopulatedErrorMessage("},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"                    FieldValidator.EMAIL_ERROR_MESSAGE, invalidAccountRequest.getEmail(),"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"                    FieldValidator.EMAIL_FIELD_NAME, FieldValidator.REASON_INCORRECT_FORMAT,"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"                    FieldValidator.EMAIL_MAX_LENGTH) + System.lineSeparator()"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"                + getPopulatedEmptyStringErrorMessage("},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"                      FieldValidator.SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING,"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"                      FieldValidator.PERSON_NAME_FIELD_NAME, FieldValidator.PERSON_NAME_MAX_LENGTH);"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"invalid value\", errorMessage, StringHelper.toString(invalidAccountRequest.getInvalidityInfo()));"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetValidityInfo() {"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        // already tested in testValidate() above"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    public void testIsValid() {"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        // already tested in testValidate() above"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    public void testToString() {"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes a \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"[AccountRequestAttributes] email: valid@test.com \""},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"                + \"name: valid-name institute: valid-institute\", a.toString());"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    public void testEquals() {"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        // When the two account requests have same values"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes similarAccountRequest \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(accountRequest.equals(similarAccountRequest));"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        // When the two account requests are different"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes differentAccountRequest \u003d"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"                AccountRequestAttributes.builder(\"test@test.com\", \"test-institute\", \"Another Name\").build();"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(accountRequest.equals(differentAccountRequest));"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        // When the other object is of different class"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(accountRequest.equals(3));"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"    public void testHashCode() {"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"        // When the two account requests have same values, they should have the same hash code"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestSimilar \u003d getValidAccountRequestAttributesObject();"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(accountRequest.hashCode() \u003d\u003d accountRequestSimilar.hashCode());"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        // When the two account requests are different, they should have different hash code"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestDifferent \u003d"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"                AccountRequestAttributes.builder(\"test@test.com\", \"test-institute\", \"Another Name\").build();"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(accountRequest.hashCode() \u003d\u003d accountRequestDifferent.hashCode());"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"    private static AccountRequestAttributes getValidAccountRequestAttributesObject() {"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(\"valid@test.com\", \"valid-name\", \"valid-institute\");"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegistrationKey(\"valid123\");"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"        return AccountRequestAttributes.valueOf(accountRequest);"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":169}},{"path":"src/test/java/teammates/logic/core/AccountRequestsLogicTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.BeforeMethod;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link AccountRequestsLogic}."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestsLogicTest extends BaseLogicTest {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsLogic accountRequestsLogic \u003d AccountRequestsLogic.inst();"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    protected void prepareTestData() {"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        // test data is refreshed before each test case"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeMethod"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public void refreshTestData() {"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        removeAndRestoreTypicalDataBundle();"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void testCreateAccountRequest() throws Exception {"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d AccountRequestAttributes"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes createdAccountRequest \u003d"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsLogic.createAccountRequest(accountRequest);"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        verifyPresentInDatabase(createdAccountRequest);"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getEmail(), createdAccountRequest.getEmail());"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getName(), createdAccountRequest.getName());"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(accountRequest.getInstitute(), createdAccountRequest.getInstitute());"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(createdAccountRequest.getRegistrationKey());"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(createdAccountRequest.getCreatedAt());"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: duplicate account request\");"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes duplicateAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(EntityAlreadyExistsException.class, () -\u003e {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestsLogic.createAccountRequest(duplicateAccountRequest);"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(\"valid@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure case: invalid parameter\");"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes invalidAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"invalid email\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.createAccountRequest(invalidAccountRequest));"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        AssertHelper.assertContains("},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                getPopulatedErrorMessage("},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_ERROR_MESSAGE, \"invalid email\","},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_FIELD_NAME, FieldValidator.REASON_INCORRECT_FORMAT,"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_MAX_LENGTH),"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                ipe.getMessage());"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class, () -\u003e accountRequestsLogic.createAccountRequest(null));"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    public void testUpdateAccountRequest() throws Exception {"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.createAccountRequest(AccountRequestAttributes"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                .build());"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes.UpdateOptions updateOptions \u003d AccountRequestAttributes"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                .updateOptionsBuilder(\"valid@test.com\", \"TEAMMATES Test Institute 1\")"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.updateAccountRequest(updateOptions);"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d accountRequestsLogic"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                .getAccountRequest(\"valid@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Const.TIME_REPRESENTS_NOW, accountRequest.getRegisteredAt());"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: account request not found\");"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes.UpdateOptions updateOptionsNotFound \u003d AccountRequestAttributes"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"                .updateOptionsBuilder(\"not_found@test.com\", \"Unknown Test Institute 1\")"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.updateAccountRequest(updateOptionsNotFound));"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    public void testDeleteAccountRequest() throws Exception {"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes a \u003d dataBundle.accountRequests.get(\"unregisteredInstructor1\");"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"silent deletion of non-existent account request\");"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(\"not_exist\", \"not_exist\");"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        verifyPresentInDatabase(a);"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(a.getEmail(), a.getInstitute());"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        verifyAbsentInDatabase(a);"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"silent deletion of same account request\");"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsLogic.deleteAccountRequest(a.getEmail(), a.getInstitute());"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.deleteAccountRequest(null, null));"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountRequestForRegistrationKey() throws Exception {"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes a \u003d"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsLogic.getAccountRequest(\"unregisteredinstructor1@gmail.tmt\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsLogic.getAccountRequestForRegistrationKey(a.getRegistrationKey());"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(a, accountRequestAttributes);"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request not found\");"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestsLogic.getAccountRequestForRegistrationKey(\"not-found\"));"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.getAccountRequestForRegistrationKey(null));"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountRequest() {"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes a \u003d dataBundle.accountRequests.get(\"unregisteredInstructor1\");"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsLogic.getAccountRequest(a.getEmail(), a.getInstitute());"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(a, accountRequestAttributes);"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request not found\");"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequestsLogic.getAccountRequest(\"not-found@test.com\", \"not-found\"));"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsLogic.getAccountRequest(null, null));"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":176}},{"path":"src/test/java/teammates/storage/api/AccountRequestsDbTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import teammates.test.BaseTestCaseWithLocalDatabaseAccess;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link AccountRequestsDb}."},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class AccountRequestsDbTest extends BaseTestCaseWithLocalDatabaseAccess {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final AccountRequestsDb accountRequestsDb \u003d AccountRequestsDb.inst();"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void testCreateAccountRequest() throws Exception {"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d AccountRequestAttributes"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest \u003d accountRequestsDb.createEntity(accountRequest);"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        verifyPresentInDatabase(accountRequest);"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: duplicate account request\");"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes duplicateAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(EntityAlreadyExistsException.class, () -\u003e {"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            accountRequestsDb.createEntity(duplicateAccountRequest);"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        });"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(\"valid@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure case: invalid parameter\");"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes invalidAccountRequest \u003d AccountRequestAttributes"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"invalid email\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.createEntity(invalidAccountRequest));"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        AssertHelper.assertContains("},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"                getPopulatedErrorMessage("},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_ERROR_MESSAGE, \"invalid email\","},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_FIELD_NAME, FieldValidator.REASON_INCORRECT_FORMAT,"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"                        FieldValidator.EMAIL_MAX_LENGTH),"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                ipe.getMessage());"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class, () -\u003e accountRequestsDb.createEntity(null));"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    public void testUpdateAccountRequest() throws Exception {"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.createEntity(AccountRequestAttributes"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"                .builder(\"valid@test.com\", \"TEAMMATES Test Institute 1\", \"Test account Name\")"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                .build());"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes.UpdateOptions updateOptions \u003d AccountRequestAttributes"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                .updateOptionsBuilder(\"valid@test.com\", \"TEAMMATES Test Institute 1\")"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.updateAccountRequest(updateOptions);"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d accountRequestsDb"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"                .getAccountRequest(\"valid@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Const.TIME_REPRESENTS_NOW, accountRequest.getRegisteredAt());"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure: account request not found\");"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes.UpdateOptions updateOptionsNotFound \u003d AccountRequestAttributes"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                .updateOptionsBuilder(\"not_found@test.com\", \"Unknown Test Institute 1\")"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                .withRegisteredAt(Const.TIME_REPRESENTS_NOW)"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.updateAccountRequest(updateOptionsNotFound));"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    public void testDeleteAccountRequest() {"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(\"valid2@test.com\","},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                        \"Test account Name\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegistrationKey(\"2-123456\");"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.saveEntity(accountRequest);"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"silent deletion of non-existent account request\");"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(\"not_exist\", \"not_exist\");"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        verifyPresentInDatabase(AccountRequestAttributes.valueOf(accountRequest));"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(\"valid2@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        verifyAbsentInDatabase(AccountRequestAttributes.valueOf(accountRequest));"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"silent deletion of same account request\");"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.deleteAccountRequest(\"valid2@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.deleteAccountRequest(null, null));"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountRequestForRegistrationKey() {"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(\"valid3@test.com\","},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"                        \"Test account Name\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegistrationKey(\"3-123456\");"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.saveEntity(accountRequest);"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsDb.getAccountRequestForRegistrationKey(\"3-123456\");"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(AccountRequestAttributes.valueOf(accountRequest), accountRequestAttributes);"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request not found\");"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes notFoundRequestAttributes \u003d"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsDb.getAccountRequestForRegistrationKey(\"not-found\");"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(notFoundRequestAttributes);"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.getAccountRequestForRegistrationKey(null));"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    public void testGetAccountRequest() {"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequest accountRequest \u003d new AccountRequest(\"valid4@test.com\","},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"                        \"Test account Name\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        accountRequest.setRegistrationKey(\"4-123456\");"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        accountRequestsDb.saveEntity(accountRequest);"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsDb.getAccountRequest(\"valid4@test.com\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(AccountRequestAttributes.valueOf(accountRequest), accountRequestAttributes);"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request not found\");"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes notFoundRequestAttributes \u003d"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"                accountRequestsDb.getAccountRequest(\"not-found@test.com\", \"not found\");"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(notFoundRequestAttributes);"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"failure null parameter\");"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"                () -\u003e accountRequestsDb.getAccountRequest(null, null));"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":172}},{"path":"src/test/java/teammates/test/AbstractBackDoor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.InputStreamReader;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URI;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.charset.Charset;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.apache.http.HttpEntity;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.apache.http.NameValuePair;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.CloseableHttpResponse;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpDelete;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPut;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpRequestBase;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.apache.http.client.utils.URIBuilder;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.apache.http.entity.StringEntity;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.CloseableHttpClient;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.HttpClients;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.apache.http.message.BasicNameValuePair;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import teammates.common.exception.HttpRequestFailedException;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import teammates.ui.output.AccountData;"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountRequestData;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import teammates.ui.output.CourseData;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import teammates.ui.output.CoursesData;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackQuestionData;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackQuestionsData;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponseCommentData;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponseData;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponsesData;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackSessionData;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackSessionsData;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackVisibilityType;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import teammates.ui.output.InstructorData;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import teammates.ui.output.InstructorsData;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import teammates.ui.output.MessageOutput;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import teammates.ui.output.NumberOfEntitiesToGiveFeedbackToSetting;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import teammates.ui.output.ResponseVisibleSetting;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import teammates.ui.output.SessionVisibleSetting;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"import teammates.ui.output.StudentData;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"import teammates.ui.request.Intent;"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":69,"author":{"gitId":"-"},"content":" * Used to create API calls to the back-end without going through the UI."},{"lineNumber":70,"author":{"gitId":"-"},"content":" */"},{"lineNumber":71,"author":{"gitId":"-"},"content":"public abstract class AbstractBackDoor {"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Gets the URL of the back-end."},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    protected abstract String getAppUrl();"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Gets the backdoor key used to authenticate with the back-end."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    protected abstract String getBackdoorKey();"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Gets the CSRF key used to authenticate with the back-end."},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    protected abstract String getCsrfKey();"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes GET request with the given {@code relativeUrl}."},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executeGetRequest(String relativeUrl, Map\u003cString, String\u003e params) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return executeRequest(HttpGet.METHOD_NAME, relativeUrl, params, null);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes POST request with the given {@code relativeUrl}."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executePostRequest(String relativeUrl, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return executeRequest(HttpPost.METHOD_NAME, relativeUrl, params, body);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes PUT request with the given {@code relativeUrl}."},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executePutRequest(String relativeUrl, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return executeRequest(HttpPut.METHOD_NAME, relativeUrl, params, body);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes DELETE request with the given {@code relativeUrl}."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executeDeleteRequest(String relativeUrl, Map\u003cString, String\u003e params) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return executeRequest(HttpDelete.METHOD_NAME, relativeUrl, params, null);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes HTTP request with the given {@code method} and {@code relativeUrl}."},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @return The content of the HTTP response"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private ResponseBodyAndCode executeRequest("},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String method, String relativeUrl, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String url \u003d getAppUrl() + relativeUrl;"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        HttpRequestBase request;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        switch (method) {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        case HttpGet.METHOD_NAME:"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            request \u003d createGetRequest(url, params);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        case HttpPost.METHOD_NAME:"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            request \u003d createPostRequest(url, params, body);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        case HttpPut.METHOD_NAME:"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            request \u003d createPutRequest(url, params, body);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        case HttpDelete.METHOD_NAME:"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            request \u003d createDeleteRequest(url, params);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Unaccepted HTTP method: \" + method);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        addAuthKeys(request);"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try (CloseableHttpClient httpClient \u003d HttpClients.createDefault();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                CloseableHttpResponse response \u003d httpClient.execute(request)) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"            String responseBody \u003d null;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            HttpEntity entity \u003d response.getEntity();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            if (entity !\u003d null) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                try (BufferedReader br \u003d new BufferedReader(new InputStreamReader(entity.getContent()))) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    responseBody \u003d br.lines().collect(Collectors.joining(System.lineSeparator()));"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return new ResponseBodyAndCode(responseBody, response.getStatusLine().getStatusCode());"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes GET request with the given {@code relativeUrl}."},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @return The content of the HTTP response"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private static HttpGet createGetRequest(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return new HttpGet(createBasicUri(url, params));"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private static HttpPost createPostRequest(String url, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        HttpPost post \u003d new HttpPost(createBasicUri(url, params));"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (body !\u003d null) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            StringEntity entity \u003d new StringEntity(body, Charset.forName(Const.ENCODING));"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            post.setEntity(entity);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return post;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private static HttpPut createPutRequest(String url, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        HttpPut put \u003d new HttpPut(createBasicUri(url, params));"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (body !\u003d null) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            StringEntity entity \u003d new StringEntity(body, Charset.forName(Const.ENCODING));"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            put.setEntity(entity);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return put;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private static HttpDelete createDeleteRequest(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return new HttpDelete(createBasicUri(url, params));"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private static URI createBasicUri(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        List\u003cNameValuePair\u003e postParameters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (params !\u003d null) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            params.forEach((key, value) -\u003e postParameters.add(new BasicNameValuePair(key, value)));"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            URIBuilder uriBuilder \u003d new URIBuilder(url);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            uriBuilder.addParameters(postParameters);"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return uriBuilder.build();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (URISyntaxException e) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private void addAuthKeys(HttpRequestBase request) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        request.addHeader(Const.HeaderNames.BACKDOOR_KEY, getBackdoorKey());"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        request.addHeader(Const.HeaderNames.CSRF_KEY, getCsrfKey());"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * Removes and restores given data in the database. This method is to be called on test startup."},{"lineNumber":228,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * \u003cp\u003eNote:  The data associated with the test accounts have to be \u003cstrong\u003emanually\u003c/strong\u003e removed by removing the data"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * bundle when a test ends because the test accounts are shared across tests."},{"lineNumber":231,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * \u003cp\u003eTest data should never be cleared after test in order to prevent incurring additional database costs because the"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * test\u0027s data may not be accessed in another test. Also although unlikely in normal conditions, when a test fail to"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * remove data bundle on teardown, another test should have no reason to fail."},{"lineNumber":235,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAnother reason not to remove associated data after a test is that in case of test failures, it helps to have the"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * associated data in the database to debug the failure."},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThis means that removing the data bundle on startup is not always sufficient because a test only knows how"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * to remove its associated data."},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * This is why some tests would fail when they use the same account and use different data."},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Extending this method to remove data outside its associated data would introduce"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * unnecessary complications such as extra costs and knowing exactly how much data to remove. Removing too much data"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * would not just incur higher database costs but we can make tests unexpectedly pass(fail) when the data is expected to"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * be not present(present) in another test."},{"lineNumber":246,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * \u003cp\u003eTODO: Hence, we need to explicitly remove the data bundle in tests on teardown to avoid instability of tests."},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * However, removing the data bundle on teardown manually is not a perfect solution because two tests can concurrently"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * access the same account and their data may get mixed up in the process. This is a major problem we need to address."},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public String removeAndRestoreDataBundle(DataBundle dataBundle) throws HttpRequestFailedException {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        removeDataBundle(dataBundle);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode putRequestOutput \u003d"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                executePostRequest(Const.ResourceURIs.DATABUNDLE, null, JsonUtils.toJson(dataBundle));"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        if (putRequestOutput.responseCode !\u003d HttpStatus.SC_OK) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            throw new HttpRequestFailedException(\"Request failed: [\" + putRequestOutput.responseCode + \"] \""},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    + putRequestOutput.responseBody);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        return putRequestOutput.responseBody;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * Removes given data from the database."},{"lineNumber":264,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf given entities have already been deleted, it fails silently."},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        executePutRequest(Const.ResourceURIs.DATABUNDLE, null, JsonUtils.toJson(dataBundle));"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Gets the cookie format for the given user ID."},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public String getUserCookie(String userId) {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.USER_ID, userId);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executePostRequest(Const.ResourceURIs.USER_COOKIE, params, null);"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"        MessageOutput output \u003d JsonUtils.fromJson(response.responseBody, MessageOutput.class);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return output.getMessage();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * Puts searchable documents in data bundle into the database."},{"lineNumber":285,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public String putDocuments(DataBundle dataBundle) throws HttpRequestFailedException {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode putRequestOutput \u003d"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                executePutRequest(Const.ResourceURIs.DATABUNDLE_DOCUMENTS, null, JsonUtils.toJson(dataBundle));"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        if (putRequestOutput.responseCode !\u003d HttpStatus.SC_OK) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            throw new HttpRequestFailedException(\"Request failed: [\" + putRequestOutput.responseCode + \"] \""},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    + putRequestOutput.responseBody);"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        return putRequestOutput.responseBody;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * Gets an account from the database."},{"lineNumber":298,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public AccountAttributes getAccount(String googleId) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_ID, googleId);"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.ACCOUNT, params);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"        AccountData accountData \u003d JsonUtils.fromJson(response.responseBody, AccountData.class);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        return AccountAttributes.builder(accountData.getGoogleId())"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                .withName(accountData.getName())"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                .withEmail(accountData.getEmail())"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                .withInstitute(accountData.getInstitute())"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                .withIsInstructor(accountData.isInstructor())"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * Gets course data from the database."},{"lineNumber":318,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public CourseData getCourseData(String courseId) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT);"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.COURSE, params);"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, CourseData.class);"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     * Gets a course from the database."},{"lineNumber":333,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public CourseAttributes getCourse(String courseId) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d getCourseData(courseId);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        return CourseAttributes.builder(courseData.getCourseId())"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                .withName(courseData.getCourseName())"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                .withTimezone(courseData.getTimeZone())"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                .withInstitute(courseData.getInstitute())"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * Gets archived course data from the database."},{"lineNumber":348,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public CourseData getArchivedCourseData(String instructorId, String courseId) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.USER_ID, instructorId);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_STATUS, Const.CourseStatus.ARCHIVED);"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.COURSES, params);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"        CoursesData coursesData \u003d JsonUtils.fromJson(response.responseBody, CoursesData.class);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d coursesData.getCourses()"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                .filter(cd -\u003e cd.getCourseId().equals(courseId))"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":366,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"        return courseData;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":376,"author":{"gitId":"-"},"content":"     * Gets a archived course from the database."},{"lineNumber":377,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    public CourseAttributes getArchivedCourse(String instructorId, String courseId) {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d getArchivedCourseData(instructorId, courseId);"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        return CourseAttributes.builder(courseData.getCourseId())"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                .withName(courseData.getCourseName())"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                .withTimezone(courseData.getTimeZone())"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                .withInstitute(courseData.getInstitute())"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":391,"author":{"gitId":"-"},"content":"     * Returns true if the course exists and is in recycle bin."},{"lineNumber":392,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    public boolean isCourseInRecycleBin(String courseId) {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d getCourseData(courseId);"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        return courseData.getDeletionTimestamp() !\u003d 0;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":402,"author":{"gitId":"-"},"content":"     * Gets instructor data from the database."},{"lineNumber":403,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    public InstructorData getInstructorData(String courseId, String email) {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString());"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.INSTRUCTORS, params);"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"        InstructorsData instructorsData \u003d JsonUtils.fromJson(response.responseBody, InstructorsData.class);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        InstructorData instructorData \u003d instructorsData.getInstructors()"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":416,"author":{"gitId":"-"},"content":"                .filter(instructor -\u003e instructor.getEmail().equals(email))"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"        if (instructorData \u003d\u003d null) {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"        return instructorData;"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":428,"author":{"gitId":"-"},"content":"     * Get instructor from database. Does not include certain fields like InstructorPrivileges."},{"lineNumber":429,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructor(String courseId, String instructorEmail) {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        InstructorData instructorData \u003d getInstructorData(courseId, instructorEmail);"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        if (instructorData \u003d\u003d null) {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        InstructorAttributes.Builder instructor \u003d InstructorAttributes.builder(instructorData.getCourseId(),"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                instructorData.getEmail());"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        if (instructorData.getGoogleId() !\u003d null) {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            instructor.withGoogleId(instructorData.getGoogleId());"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        if (instructorData.getName() !\u003d null) {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            instructor.withName(instructorData.getName());"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        if (instructorData.getRole() !\u003d null) {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"            instructor.withRole(instructorData.getRole().getRoleName());"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        if (instructorData.getIsDisplayedToStudents() !\u003d null) {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"            instructor.withIsDisplayedToStudents(instructorData.getIsDisplayedToStudents());"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        if (instructorData.getDisplayedToStudentsAs() !\u003d null) {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            instructor.withDisplayedName(instructorData.getDisplayedToStudentsAs());"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        InstructorAttributes instructorAttributes \u003d instructor.build();"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        if (instructorData.getKey() !\u003d null) {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"            instructorAttributes.setKey(instructorData.getKey());"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        return instructorAttributes;"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":460,"author":{"gitId":"-"},"content":"     * Gets student data from the database."},{"lineNumber":461,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    public StudentData getStudentData(String courseId, String studentEmail) {"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.STUDENT_EMAIL, studentEmail);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.STUDENT, params);"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, StudentData.class);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":474,"author":{"gitId":"-"},"content":"     * Get student from database."},{"lineNumber":475,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudent(String courseId, String studentEmail) {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        StudentData studentData \u003d getStudentData(courseId, studentEmail);"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        if (studentData \u003d\u003d null) {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        StudentAttributes.Builder builder \u003d StudentAttributes.builder(studentData.getCourseId(),"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                studentData.getEmail());"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        if (studentData.getGoogleId() !\u003d null) {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            builder.withGoogleId(studentData.getGoogleId());"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        if (studentData.getName() !\u003d null) {"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            builder.withName(studentData.getName());"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        if (studentData.getSectionName() !\u003d null) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            builder.withSectionName(studentData.getSectionName());"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        if (studentData.getTeamName() !\u003d null) {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            builder.withTeamName(studentData.getTeamName());"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        if (studentData.getComments() !\u003d null) {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            builder.withComment(studentData.getComments());"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d builder.build();"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        if (studentData.getKey() !\u003d null) {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"            student.setKey(studentData.getKey());"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        return student;"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":506,"author":{"gitId":"-"},"content":"     * Get feedback session data from database."},{"lineNumber":507,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    public FeedbackSessionData getFeedbackSessionData(String courseId, String feedbackSessionName) {"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString());"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.SESSION, params);"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, FeedbackSessionData.class);"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":521,"author":{"gitId":"-"},"content":"     * Get feedback session from database."},{"lineNumber":522,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        FeedbackSessionData sessionData \u003d getFeedbackSessionData(courseId, feedbackSessionName);"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        if (sessionData \u003d\u003d null) {"},{"lineNumber":526,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes sessionAttributes \u003d FeedbackSessionAttributes"},{"lineNumber":530,"author":{"gitId":"-"},"content":"                .builder(sessionData.getFeedbackSessionName(), sessionData.getCourseId())"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                .withInstructions(sessionData.getInstructions())"},{"lineNumber":532,"author":{"gitId":"-"},"content":"                .withStartTime(Instant.ofEpochMilli(sessionData.getSubmissionStartTimestamp()))"},{"lineNumber":533,"author":{"gitId":"-"},"content":"                .withEndTime(Instant.ofEpochMilli(sessionData.getSubmissionEndTimestamp()))"},{"lineNumber":534,"author":{"gitId":"-"},"content":"                .withTimeZone(sessionData.getTimeZone())"},{"lineNumber":535,"author":{"gitId":"-"},"content":"                .withGracePeriod(Duration.ofMinutes(sessionData.getGracePeriod()))"},{"lineNumber":536,"author":{"gitId":"-"},"content":"                .withIsClosingEmailEnabled(sessionData.getIsClosingEmailEnabled())"},{"lineNumber":537,"author":{"gitId":"-"},"content":"                .withIsPublishedEmailEnabled(sessionData.getIsPublishedEmailEnabled())"},{"lineNumber":538,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":539,"author":{"gitId":"-"},"content":""},{"lineNumber":540,"author":{"gitId":"-"},"content":"        sessionAttributes.setCreatedTime(Instant.ofEpochMilli(sessionData.getCreatedAtTimestamp()));"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"        if (sessionData.getSessionVisibleSetting().equals(SessionVisibleSetting.AT_OPEN)) {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"            sessionAttributes.setSessionVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_OPENING);"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"            sessionAttributes.setSessionVisibleFromTime(Instant.ofEpochMilli("},{"lineNumber":546,"author":{"gitId":"-"},"content":"                    sessionData.getCustomSessionVisibleTimestamp()));"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":"        if (sessionData.getResponseVisibleSetting().equals(ResponseVisibleSetting.AT_VISIBLE)) {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            sessionAttributes.setResultsVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_VISIBLE);"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        } else if (sessionData.getResponseVisibleSetting().equals(ResponseVisibleSetting.LATER)) {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"            sessionAttributes.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            sessionAttributes.setResultsVisibleFromTime(Instant.ofEpochMilli("},{"lineNumber":555,"author":{"gitId":"-"},"content":"                    sessionData.getCustomResponseVisibleTimestamp()));"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"        return sessionAttributes;"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":562,"author":{"gitId":"-"},"content":"     * Get soft deleted feedback session from database."},{"lineNumber":563,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getSoftDeletedSession(String feedbackSessionName, String instructorId) {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.IS_IN_RECYCLE_BIN, \"true\");"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.USER_ID, instructorId);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.SESSIONS, params);"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"        FeedbackSessionsData sessionsData \u003d JsonUtils.fromJson(response.responseBody, FeedbackSessionsData.class);"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        FeedbackSessionData feedbackSession \u003d sessionsData.getFeedbackSessions()"},{"lineNumber":576,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":577,"author":{"gitId":"-"},"content":"                .filter(fs -\u003e fs.getFeedbackSessionName().equals(feedbackSessionName))"},{"lineNumber":578,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":579,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"        if (feedbackSession \u003d\u003d null) {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"        return FeedbackSessionAttributes"},{"lineNumber":586,"author":{"gitId":"-"},"content":"                .builder(feedbackSession.getCourseId(), feedbackSession.getFeedbackSessionName())"},{"lineNumber":587,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":591,"author":{"gitId":"-"},"content":"     * Get feedback question from database."},{"lineNumber":592,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes getFeedbackQuestion(String courseId, String feedbackSessionName,"},{"lineNumber":594,"author":{"gitId":"-"},"content":"                                                                 int qnNumber) {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString());"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.QUESTIONS, params);"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":601,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"        FeedbackQuestionsData questionsData \u003d JsonUtils.fromJson(response.responseBody, FeedbackQuestionsData.class);"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        FeedbackQuestionData question \u003d questionsData.getQuestions()"},{"lineNumber":606,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":607,"author":{"gitId":"-"},"content":"                .filter(fq -\u003e fq.getQuestionNumber() \u003d\u003d qnNumber)"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":609,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"        if (question \u003d\u003d null) {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionAttr \u003d FeedbackQuestionAttributes.builder()"},{"lineNumber":616,"author":{"gitId":"-"},"content":"                .withCourseId(courseId)"},{"lineNumber":617,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(feedbackSessionName)"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                .withQuestionDetails(question.getQuestionDetails())"},{"lineNumber":619,"author":{"gitId":"-"},"content":"                .withQuestionDescription(question.getQuestionDescription())"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                .withQuestionNumber(question.getQuestionNumber())"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                .withGiverType(question.getGiverType())"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                .withRecipientType(question.getRecipientType())"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                .withNumberOfEntitiesToGiveFeedbackTo(question.getNumberOfEntitiesToGiveFeedbackToSetting()"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                        .equals(NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED)"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                        ? Const.MAX_POSSIBLE_RECIPIENTS"},{"lineNumber":626,"author":{"gitId":"-"},"content":"                        : question.getCustomNumberOfEntitiesToGiveFeedbackTo())"},{"lineNumber":627,"author":{"gitId":"-"},"content":"                .withShowResponsesTo(convertToFeedbackParticipantType(question.getShowResponsesTo()))"},{"lineNumber":628,"author":{"gitId":"-"},"content":"                .withShowGiverNameTo(convertToFeedbackParticipantType(question.getShowGiverNameTo()))"},{"lineNumber":629,"author":{"gitId":"-"},"content":"                .withShowRecipientNameTo(convertToFeedbackParticipantType(question.getShowRecipientNameTo()))"},{"lineNumber":630,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        if (question.getFeedbackQuestionId() !\u003d null) {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"            questionAttr.setId(question.getFeedbackQuestionId());"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        return questionAttr;"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":638,"author":{"gitId":"-"},"content":"     * Converts List of FeedbackParticipantType to sorted List of FeedbackVisibilityType."},{"lineNumber":639,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    private static List\u003cFeedbackParticipantType\u003e convertToFeedbackParticipantType("},{"lineNumber":641,"author":{"gitId":"-"},"content":"            List\u003cFeedbackVisibilityType\u003e feedbackVisibilityTypeList) {"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e feedbackParticipantTypeList \u003d feedbackVisibilityTypeList.stream()"},{"lineNumber":643,"author":{"gitId":"-"},"content":"                .map(feedbackParticipantType -\u003e {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"                    switch (feedbackParticipantType) {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"                    case STUDENTS:"},{"lineNumber":646,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.STUDENTS;"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                    case INSTRUCTORS:"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.INSTRUCTORS;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"                    case RECIPIENT:"},{"lineNumber":650,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.RECEIVER;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                    case GIVER_TEAM_MEMBERS:"},{"lineNumber":652,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.OWN_TEAM_MEMBERS;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"                    case RECIPIENT_TEAM_MEMBERS:"},{"lineNumber":654,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.RECEIVER_TEAM_MEMBERS;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"                    default:"},{"lineNumber":656,"author":{"gitId":"-"},"content":"                        throw new RuntimeException(\"Unknown FeedbackVisibilityType \" + feedbackParticipantType);"},{"lineNumber":657,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":658,"author":{"gitId":"-"},"content":"                }).collect(Collectors.toList());"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        Collections.sort(feedbackParticipantTypeList);"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        return feedbackParticipantTypeList;"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":664,"author":{"gitId":"-"},"content":"     * Get feedback response from database."},{"lineNumber":665,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId, String giver,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"                                                                 String recipient) {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_QUESTION_ID, feedbackQuestionId);"},{"lineNumber":670,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString());"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, giver);"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.RESPONSES, params);"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":674,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"-"},"content":"        FeedbackResponsesData responsesData \u003d JsonUtils.fromJson(response.responseBody, FeedbackResponsesData.class);"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        FeedbackResponseData fr \u003d responsesData.getResponses()"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":680,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.getGiverIdentifier().equals(giver) \u0026\u0026 r.getRecipientIdentifier().equals(recipient))"},{"lineNumber":681,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":682,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":683,"author":{"gitId":"-"},"content":""},{"lineNumber":684,"author":{"gitId":"-"},"content":"        if (fr \u003d\u003d null) {"},{"lineNumber":685,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":687,"author":{"gitId":"-"},"content":""},{"lineNumber":688,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes responseAttr \u003d FeedbackResponseAttributes"},{"lineNumber":689,"author":{"gitId":"-"},"content":"                .builder(feedbackQuestionId, fr.getGiverIdentifier(), fr.getRecipientIdentifier())"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                .withResponseDetails(fr.getResponseDetails())"},{"lineNumber":691,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        if (fr.getFeedbackResponseId() !\u003d null) {"},{"lineNumber":693,"author":{"gitId":"-"},"content":"            responseAttr.setId(fr.getFeedbackResponseId());"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        return responseAttr;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":699,"author":{"gitId":"-"},"content":"     * Get feedback response comment from database."},{"lineNumber":700,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":701,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseComment(String feedbackResponseId) {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_RESPONSE_ID, feedbackResponseId);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString());"},{"lineNumber":705,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.RESPONSE_COMMENT, params);"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":707,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"-"},"content":"        FeedbackResponseCommentData frc \u003d JsonUtils.fromJson(response.responseBody, FeedbackResponseCommentData.class);"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"        if (frc \u003d\u003d null) {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":714,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"        return FeedbackResponseCommentAttributes.builder()"},{"lineNumber":717,"author":{"gitId":"-"},"content":"                .withCommentGiver(frc.getCommentGiver())"},{"lineNumber":718,"author":{"gitId":"-"},"content":"                .withCommentText(frc.getCommentText())"},{"lineNumber":719,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":721,"author":{"gitId":"-"},"content":""},{"lineNumber":722,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":723,"author":{"gitId":"-"},"content":"     * Deletes a course from the database."},{"lineNumber":724,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":725,"author":{"gitId":"-"},"content":"    public void deleteCourse(String courseId) {"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        executeDeleteRequest(Const.ResourceURIs.COURSE, params);"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":732,"author":{"gitId":"samuelfangjw"},"content":"     * Gets an account request from the database."},{"lineNumber":733,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":734,"author":{"gitId":"samuelfangjw"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":735,"author":{"gitId":"samuelfangjw"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":736,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":737,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":738,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":739,"author":{"gitId":"samuelfangjw"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.ACCOUNT_REQUEST, params);"},{"lineNumber":740,"author":{"gitId":"samuelfangjw"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":741,"author":{"gitId":"samuelfangjw"},"content":"            return null;"},{"lineNumber":742,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":743,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":744,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestData accountRequestData \u003d JsonUtils.fromJson(response.responseBody, AccountRequestData.class);"},{"lineNumber":745,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":746,"author":{"gitId":"samuelfangjw"},"content":"        return AccountRequestAttributes"},{"lineNumber":747,"author":{"gitId":"samuelfangjw"},"content":"                .builder(accountRequestData.getEmail(), accountRequestData.getInstitute(), accountRequestData.getName())"},{"lineNumber":748,"author":{"gitId":"samuelfangjw"},"content":"                .build();"},{"lineNumber":749,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":750,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":751,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":752,"author":{"gitId":"samuelfangjw"},"content":"     * Gets registration key of an account request from the database."},{"lineNumber":753,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":754,"author":{"gitId":"samuelfangjw"},"content":"    public String getRegKeyForAccountRequest(String email, String institute) {"},{"lineNumber":755,"author":{"gitId":"samuelfangjw"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":756,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":757,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":758,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":759,"author":{"gitId":"samuelfangjw"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.ACCOUNT_REQUEST, params);"},{"lineNumber":760,"author":{"gitId":"samuelfangjw"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":761,"author":{"gitId":"samuelfangjw"},"content":"            return null;"},{"lineNumber":762,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":763,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":764,"author":{"gitId":"samuelfangjw"},"content":"        return JsonUtils.fromJson(response.responseBody, AccountRequestData.class).getRegistrationKey();"},{"lineNumber":765,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":766,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":767,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":768,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes an account request from the database."},{"lineNumber":769,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":770,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":771,"author":{"gitId":"samuelfangjw"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":772,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":773,"author":{"gitId":"samuelfangjw"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":774,"author":{"gitId":"samuelfangjw"},"content":"        executeDeleteRequest(Const.ResourceURIs.ACCOUNT_REQUEST, params);"},{"lineNumber":775,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":776,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"    private static final class ResponseBodyAndCode {"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"        String responseBody;"},{"lineNumber":780,"author":{"gitId":"-"},"content":"        int responseCode;"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode(String responseBody, int responseCode) {"},{"lineNumber":783,"author":{"gitId":"-"},"content":"            this.responseBody \u003d responseBody;"},{"lineNumber":784,"author":{"gitId":"-"},"content":"            this.responseCode \u003d responseCode;"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":786,"author":{"gitId":"-"},"content":""},{"lineNumber":787,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":788,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":740,"samuelfangjw":48}},{"path":"src/test/java/teammates/test/BaseTestCaseWithDatabaseAccess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.EntityAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Base class for all test cases which are allowed to access the database."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public abstract class BaseTestCaseWithDatabaseAccess extends BaseTestCase {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int VERIFICATION_RETRY_COUNT \u003d 5;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final int VERIFICATION_RETRY_DELAY_IN_MS \u003d 1000;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final int OPERATION_RETRY_COUNT \u003d 5;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final int OPERATION_RETRY_DELAY_IN_MS \u003d 1000;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    protected void verifyPresentInDatabase(DataBundle data) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        data.accounts.values().forEach(this::verifyPresentInDatabase);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        data.instructors.values().forEach(this::verifyPresentInDatabase);"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        data.courses.values().stream()"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                .filter(course -\u003e !course.isCourseDeleted())"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                .forEach(this::verifyPresentInDatabase);"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        data.students.values().forEach(this::verifyPresentInDatabase);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected void verifyPresentInDatabase(EntityAttributes\u003c?\u003e expected) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        int retryLimit \u003d VERIFICATION_RETRY_COUNT;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EntityAttributes\u003c?\u003e actual \u003d getEntity(expected);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        while (actual \u003d\u003d null \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(VERIFICATION_RETRY_DELAY_IN_MS);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            actual \u003d getEntity(expected);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        verifyEquals(expected, actual);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private EntityAttributes\u003c?\u003e getEntity(EntityAttributes\u003c?\u003e expected) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (expected instanceof AccountAttributes) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return getAccount((AccountAttributes) expected);"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentProfileAttributes) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return getStudentProfile((StudentProfileAttributes) expected);"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } else if (expected instanceof CourseAttributes) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return getCourse((CourseAttributes) expected);"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackQuestionAttributes) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return getFeedbackQuestion((FeedbackQuestionAttributes) expected);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseCommentAttributes) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return getFeedbackResponseComment((FeedbackResponseCommentAttributes) expected);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseAttributes) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return getFeedbackResponse((FeedbackResponseAttributes) expected);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackSessionAttributes) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return getFeedbackSession((FeedbackSessionAttributes) expected);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } else if (expected instanceof InstructorAttributes) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return getInstructor((InstructorAttributes) expected);"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentAttributes) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return getStudent((StudentAttributes) expected);"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        } else if (expected instanceof AccountRequestAttributes) {"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            return getAccountRequest((AccountRequestAttributes) expected);"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Unknown entity type!\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    protected void verifyAbsentInDatabase(EntityAttributes\u003c?\u003e entity) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        int retryLimit \u003d VERIFICATION_RETRY_COUNT;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EntityAttributes\u003c?\u003e actual \u003d getEntity(entity);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        while (actual !\u003d null \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(VERIFICATION_RETRY_DELAY_IN_MS);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            actual \u003d getEntity(entity);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertNull(actual);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void verifyEquals(EntityAttributes\u003c?\u003e expected, EntityAttributes\u003c?\u003e actual) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (expected instanceof AccountAttributes) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            AccountAttributes expectedAccount \u003d ((AccountAttributes) expected).getCopy();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            AccountAttributes actualAccount \u003d (AccountAttributes) actual;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedAccount, actualAccount);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedAccount), JsonUtils.toJson(actualAccount));"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentProfileAttributes) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            StudentProfileAttributes expectedProfile \u003d ((StudentProfileAttributes) expected).getCopy();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            StudentProfileAttributes actualProfile \u003d (StudentProfileAttributes) actual;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedProfile, actualProfile);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedProfile), JsonUtils.toJson(actualProfile));"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } else if (expected instanceof CourseAttributes) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            CourseAttributes expectedCourse \u003d (CourseAttributes) expected;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            CourseAttributes actualCourse \u003d (CourseAttributes) actual;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedCourse, actualCourse);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedCourse), JsonUtils.toJson(actualCourse));"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackQuestionAttributes) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes expectedFq \u003d (FeedbackQuestionAttributes) expected;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes actualFq \u003d (FeedbackQuestionAttributes) actual;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedFq, actualFq);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedFq), JsonUtils.toJson(actualFq));"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseCommentAttributes) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes expectedFrc \u003d (FeedbackResponseCommentAttributes) expected;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes actualFrc \u003d (FeedbackResponseCommentAttributes) actual;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getCourseId(), actualFrc.getCourseId());"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getCommentGiver(), actualFrc.getCommentGiver());"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getFeedbackSessionName(), actualFrc.getFeedbackSessionName());"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getCommentText(), actualFrc.getCommentText());"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseAttributes) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            FeedbackResponseAttributes expectedFr \u003d (FeedbackResponseAttributes) expected;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            FeedbackResponseAttributes actualFr \u003d (FeedbackResponseAttributes) actual;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedFr, actualFr);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedFr), JsonUtils.toJson(actualFr));"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackSessionAttributes) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes expectedFs \u003d ((FeedbackSessionAttributes) expected).getCopy();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes actualFs \u003d (FeedbackSessionAttributes) actual;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedFs, actualFs);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedFs), JsonUtils.toJson(actualFs));"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } else if (expected instanceof InstructorAttributes) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            InstructorAttributes expectedInstructor \u003d ((InstructorAttributes) expected).getCopy();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            InstructorAttributes actualInstructor \u003d (InstructorAttributes) actual;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedInstructor, actualInstructor);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedInstructor), JsonUtils.toJson(actualInstructor));"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentAttributes) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            StudentAttributes expectedStudent \u003d ((StudentAttributes) expected).getCopy();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            StudentAttributes actualStudent \u003d (StudentAttributes) actual;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedStudent, actualStudent);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedStudent), JsonUtils.toJson(actualStudent));"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        } else if (expected instanceof AccountRequestAttributes) {"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes expectedAccountRequest \u003d (AccountRequestAttributes) expected;"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"            AccountRequestAttributes actualAccountRequest \u003d (AccountRequestAttributes) actual;"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"            assertEquals(JsonUtils.toJson(expectedAccountRequest), JsonUtils.toJson(actualAccountRequest));"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Unknown entity type!\");"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    protected abstract AccountAttributes getAccount(AccountAttributes account);"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(AccountAttributes expected, AccountAttributes actual) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Ignore time field as it is stamped at the time of creation in testing"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expected.setCreatedAt(actual.getCreatedAt());"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(StudentProfileAttributes expected, StudentProfileAttributes actual) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expected.setModifiedDate(actual.getModifiedDate());"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(CourseAttributes expected, CourseAttributes actual) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // Ignore time field as it is stamped at the time of creation in testing"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expected.setCreatedAt(actual.getCreatedAt());"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(FeedbackQuestionAttributes expected, FeedbackQuestionAttributes actual) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expected.setId(actual.getId());"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(FeedbackResponseAttributes expected, FeedbackResponseAttributes actual) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expected.setId(actual.getId());"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(FeedbackSessionAttributes expected, FeedbackSessionAttributes actual) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        expected.setCreatedTime(actual.getCreatedTime());"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // Not available in FeedbackSessionData and thus ignored"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        expected.setCreatorEmail(actual.getCreatorEmail());"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(InstructorAttributes expected, InstructorAttributes actual) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // pretend keys match because the key is generated only before storing into database"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (actual.getKey() !\u003d null) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            expected.setKey(actual.getKey());"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(StudentAttributes expected, StudentAttributes actual) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // For these fields, we consider null and \"\" equivalent."},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (expected.getGoogleId() \u003d\u003d null \u0026\u0026 actual.getGoogleId().isEmpty()) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            expected.setGoogleId(\"\");"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (expected.getTeam() \u003d\u003d null \u0026\u0026 actual.getTeam().isEmpty()) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            expected.setTeam(\"\");"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (expected.getComments() \u003d\u003d null \u0026\u0026 actual.getComments().isEmpty()) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            expected.setComments(\"\");"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // pretend keys match because the key is generated only before storing into database"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (actual.getKey() !\u003d null) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            expected.setKey(actual.getKey());"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    protected abstract StudentProfileAttributes getStudentProfile(StudentProfileAttributes studentProfileAttributes);"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    protected abstract CourseAttributes getCourse(CourseAttributes course);"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    protected abstract FeedbackQuestionAttributes getFeedbackQuestion(FeedbackQuestionAttributes fq);"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    protected abstract FeedbackResponseCommentAttributes getFeedbackResponseComment(FeedbackResponseCommentAttributes frc);"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    protected abstract FeedbackResponseAttributes getFeedbackResponse(FeedbackResponseAttributes fr);"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    protected abstract FeedbackSessionAttributes getFeedbackSession(FeedbackSessionAttributes fs);"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    protected abstract InstructorAttributes getInstructor(InstructorAttributes instructor);"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    protected abstract StudentAttributes getStudent(StudentAttributes student);"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"    protected abstract AccountRequestAttributes getAccountRequest(AccountRequestAttributes accountRequest);"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    protected void removeAndRestoreDataBundle(DataBundle testData) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        int retryLimit \u003d OPERATION_RETRY_COUNT;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        boolean isOperationSuccess \u003d doRemoveAndRestoreDataBundle(testData);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        while (!isOperationSuccess \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            print(\"Re-trying removeAndRestoreDataBundle\");"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(OPERATION_RETRY_DELAY_IN_MS);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            isOperationSuccess \u003d doRemoveAndRestoreDataBundle(testData);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertTrue(isOperationSuccess);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    protected abstract boolean doRemoveAndRestoreDataBundle(DataBundle testData);"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    protected void putDocuments(DataBundle testData) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        int retryLimit \u003d OPERATION_RETRY_COUNT;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        boolean isOperationSuccess \u003d doPutDocuments(testData);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        while (!isOperationSuccess \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            print(\"Re-trying putDocuments\");"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(OPERATION_RETRY_DELAY_IN_MS);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            isOperationSuccess \u003d doPutDocuments(testData);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertTrue(isOperationSuccess);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"    protected abstract boolean doPutDocuments(DataBundle testData);"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":254,"samuelfangjw":11}},{"path":"src/test/java/teammates/test/BaseTestCaseWithLocalDatabaseAccess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterClass;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterSuite;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeSuite;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.DatastoreOptions;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.testing.LocalDatastoreHelper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyFactory;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyService;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.util.Closeable;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.logic.api.LogicExtension;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.logic.core.LogicStarter;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.storage.api.OfyHelper;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.storage.search.InstructorSearchManager;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.storage.search.SearchManagerFactory;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.storage.search.StudentSearchManager;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Base class for all tests which require access to a locally run database."},{"lineNumber":35,"author":{"gitId":"-"},"content":" *"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * \u003cp\u003eAs all tests are run against a single DB instance and we use shared test data for most tests,"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * the tests need to be run in a single thread to prevent test data contamination across different tests."},{"lineNumber":38,"author":{"gitId":"-"},"content":" */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@Test(singleThreaded \u003d true)"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public abstract class BaseTestCaseWithLocalDatabaseAccess extends BaseTestCaseWithDatabaseAccess {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final LocalDatastoreHelper LOCAL_DATASTORE_HELPER \u003d LocalDatastoreHelper.newBuilder()"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .setConsistency(1.0)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .setPort(TestProperties.TEST_LOCALDATASTORE_PORT)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .setStoreOnDisk(false)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .build();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final LogicExtension logic \u003d new LogicExtension();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Closeable closeable;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeSuite"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setupDbLayer() throws Exception {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        LOCAL_DATASTORE_HELPER.start();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DatastoreOptions options \u003d LOCAL_DATASTORE_HELPER.getOptions();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ObjectifyService.init(new ObjectifyFactory("},{"lineNumber":54,"author":{"gitId":"-"},"content":"                options.getService()"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        OfyHelper.registerEntityClasses();"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        SearchManagerFactory.registerInstructorSearchManager("},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new InstructorSearchManager(TestProperties.SEARCH_SERVICE_HOST, true));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        SearchManagerFactory.registerStudentSearchManager("},{"lineNumber":61,"author":{"gitId":"-"},"content":"                new StudentSearchManager(TestProperties.SEARCH_SERVICE_HOST, true));"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        LogicStarter.initializeDependencies();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setupObjectify() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        closeable \u003d ObjectifyService.begin();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void tearDownObjectify() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        closeable.close();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void resetDbLayer() throws Exception {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        SearchManagerFactory.getInstructorSearchManager().resetCollections();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        SearchManagerFactory.getStudentSearchManager().resetCollections();"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        LOCAL_DATASTORE_HELPER.reset();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @AfterSuite"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void tearDownLocalDatastoreHelper() throws Exception {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        LOCAL_DATASTORE_HELPER.stop();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    protected AccountAttributes getAccount(AccountAttributes account) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return logic.getAccount(account.getGoogleId());"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    protected StudentProfileAttributes getStudentProfile(StudentProfileAttributes studentProfileAttributes) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return logic.getStudentProfile(studentProfileAttributes.getGoogleId());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    protected CourseAttributes getCourse(CourseAttributes course) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return logic.getCourse(course.getId());"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected FeedbackQuestionAttributes getFeedbackQuestion(FeedbackQuestionAttributes fq) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return logic.getFeedbackQuestion(fq.getFeedbackSessionName(), fq.getCourseId(), fq.getQuestionNumber());"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    protected FeedbackResponseCommentAttributes getFeedbackResponseComment(FeedbackResponseCommentAttributes frc) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return logic.getFeedbackResponseComment(frc.getFeedbackResponseId(), frc.getCommentGiver(), frc.getCreatedAt());"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    protected FeedbackResponseAttributes getFeedbackResponse(FeedbackResponseAttributes fr) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return logic.getFeedbackResponse(fr.getFeedbackQuestionId(), fr.getGiver(), fr.getRecipient());"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    protected FeedbackSessionAttributes getFeedbackSession(FeedbackSessionAttributes fs) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return logic.getFeedbackSession(fs.getFeedbackSessionName(), fs.getCourseId());"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    protected InstructorAttributes getInstructor(InstructorAttributes instructor) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return instructor.getGoogleId() \u003d\u003d null"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                ? logic.getInstructorForEmail(instructor.getCourseId(), instructor.getEmail())"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                : logic.getInstructorForGoogleId(instructor.getCourseId(), instructor.getGoogleId());"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    protected StudentAttributes getStudent(StudentAttributes student) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return logic.getStudentForEmail(student.getCourse(), student.getEmail());"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"    protected AccountRequestAttributes getAccountRequest(AccountRequestAttributes accountRequest) {"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        return logic.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected void removeAndRestoreTypicalDataBundle() {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        DataBundle dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(dataBundle);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    protected boolean doRemoveAndRestoreDataBundle(DataBundle dataBundle) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logic.removeDataBundle(dataBundle);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logic.persistDataBundle(dataBundle);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected boolean doPutDocuments(DataBundle dataBundle) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logic.putDocuments(dataBundle);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":163,"samuelfangjw":6}},{"path":"src/test/java/teammates/ui/webapi/CreateAccountActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelperExtension;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * SUT: {@link CreateAccountAction}."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CreateAccountActionTest extends BaseActionTest\u003cCreateAccountAction\u003e {"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.ACCOUNT;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return POST;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    protected void testExecute() {"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        String name \u003d \"Typical Instructor Name\";"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d \"unregisteredinstructor1@gmail.tmt\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String institute \u003d \"TEAMMATES Test Institute 1\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Null parameters\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        String[] nullParams \u003d new String[] { Const.ParamsNames.REGKEY, null, };"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        InvalidHttpParameterException ex \u003d verifyHttpParameterFailure(nullParams);"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"The [key] HTTP parameter is null.\", ex.getMessage());"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        verifyNoTasksAdded();"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ______TS(\"Normal case\");"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d logic.getAccountRequest(email, institute);"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        String[] params \u003d new String[] { Const.ParamsNames.REGKEY, accountRequest.getRegistrationKey(), };"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        CreateAccountAction a \u003d getAction(params);"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        getJsonResult(a);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String courseId \u003d generateNextDemoCourseId(email, FieldValidator.COURSE_ID_MAX_LENGTH);"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d logic.getCourse(courseId);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNotNull(course);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(\"Sample Course 101\", course.getName());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(institute, course.getInstitute());"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d logic.getInstructorForEmail(courseId, email);"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(email, instructor.getEmail());"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(name, instructor.getName());"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e studentList \u003d logic.getStudentsForCourse(courseId);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructorList \u003d logic.getInstructorsForCourse(courseId);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        verifySpecifiedTasksAdded(Const.TaskQueue.SEARCH_INDEXING_QUEUE_NAME,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                studentList.size() + instructorList.size());"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Error: registration key already used\");"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        verifyInvalidOperation(params);"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        verifyNoTasksAdded();"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Error: account request not found\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] { Const.ParamsNames.REGKEY, \"unknownregkey\", };"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        verifyEntityNotFound(params);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        verifyNoTasksAdded();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    protected void testAccessControl() {"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        verifyAnyLoggedInUserCanAccess();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void testGenerateNextDemoCourseId() {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        testGenerateNextDemoCourseIdForLengthLimit(40);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        testGenerateNextDemoCourseIdForLengthLimit(20);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void testGenerateNextDemoCourseIdForLengthLimit(int maximumIdLength) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String normalIdSuffix \u003d \".gma-demo\";"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String atEmail \u003d \"@gmail.tmt\";"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        int normalIdSuffixLength \u003d normalIdSuffix.length(); // 9"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String strShortWithWordDemo \u003d"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                StringHelperExtension.generateStringOfLength((maximumIdLength - normalIdSuffixLength) / 2) + \"-demo\";"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String strWayShorterThanMaximum \u003d"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                StringHelperExtension.generateStringOfLength((maximumIdLength - normalIdSuffixLength) / 2);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String strOneCharShorterThanMaximum \u003d"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                StringHelperExtension.generateStringOfLength(maximumIdLength - normalIdSuffixLength);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String strOneCharLongerThanMaximum \u003d"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                StringHelperExtension.generateStringOfLength(maximumIdLength - normalIdSuffixLength + 1);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(strShortWithWordDemo + normalIdSuffix,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strShortWithWordDemo + atEmail, maximumIdLength));"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(strShortWithWordDemo + normalIdSuffix + \"0\","},{"lineNumber":110,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strShortWithWordDemo + normalIdSuffix, maximumIdLength));"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(strShortWithWordDemo + normalIdSuffix + \"1\","},{"lineNumber":112,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strShortWithWordDemo + normalIdSuffix + \"0\", maximumIdLength));"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(strWayShorterThanMaximum + normalIdSuffix,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strWayShorterThanMaximum + atEmail, maximumIdLength));"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(strOneCharShorterThanMaximum + normalIdSuffix,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strOneCharShorterThanMaximum + atEmail, maximumIdLength));"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(strOneCharLongerThanMaximum.substring(1) + normalIdSuffix,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strOneCharLongerThanMaximum + atEmail, maximumIdLength));"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(strWayShorterThanMaximum + normalIdSuffix + \"0\","},{"lineNumber":120,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strWayShorterThanMaximum + normalIdSuffix, maximumIdLength));"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(strWayShorterThanMaximum + normalIdSuffix + \"1\","},{"lineNumber":122,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strWayShorterThanMaximum + normalIdSuffix + \"0\", maximumIdLength));"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(strWayShorterThanMaximum + normalIdSuffix + \"10\","},{"lineNumber":124,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strWayShorterThanMaximum + normalIdSuffix + \"9\", maximumIdLength));"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(strOneCharShorterThanMaximum.substring(2) + normalIdSuffix + \"10\","},{"lineNumber":126,"author":{"gitId":"-"},"content":"                generateNextDemoCourseId(strOneCharShorterThanMaximum.substring(1) + normalIdSuffix + \"9\","},{"lineNumber":127,"author":{"gitId":"-"},"content":"                        maximumIdLength));"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private String generateNextDemoCourseId(String instructorEmailOrProposedCourseId, int maximumIdLength) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CreateAccountAction a \u003d new CreateAccountAction();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return a.generateNextDemoCourseId(instructorEmailOrProposedCourseId, maximumIdLength);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":114,"samuelfangjw":21}},{"path":"src/test/java/teammates/ui/webapi/CreateAccountRequestActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.JoinLinkData;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.request.AccountCreateRequest;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link CreateAccountRequestAction}."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class CreateAccountRequestActionTest extends BaseActionTest\u003cCreateAccountRequestAction\u003e {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        return Const.ResourceURIs.ACCOUNT_REQUEST;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        return POST;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        String name \u003d \"JamesBond\";"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        String email \u003d \"jamesbond89@gmail.tmt\";"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        String institute \u003d \"TEAMMATES Test Institute 1\";"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Null parameters\");"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        InvalidHttpRequestBodyException ex \u003d verifyHttpRequestBodyFailure(buildCreateRequest(null, institute, email));"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"name cannot be null\", ex.getMessage());"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ex \u003d verifyHttpRequestBodyFailure(buildCreateRequest(name, null, email));"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"institute cannot be null\", ex.getMessage());"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        ex \u003d verifyHttpRequestBodyFailure(buildCreateRequest(name, institute, null));"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"email cannot be null\", ex.getMessage());"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        verifyNoTasksAdded();"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Normal case\");"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        String nameWithSpaces \u003d \"   \" + name + \"   \";"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        String emailWithSpaces \u003d \"   \" + email + \"   \";"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        String instituteWithSpaces \u003d \"   \" + institute + \"   \";"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        AccountCreateRequest req \u003d buildCreateRequest(nameWithSpaces, instituteWithSpaces, emailWithSpaces);"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        CreateAccountRequestAction a \u003d getAction(req);"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult r \u003d getJsonResult(a);"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequestAttributes \u003d logic.getAccountRequest(email, institute);"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(name, accountRequestAttributes.getName());"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(email, accountRequestAttributes.getEmail());"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(institute, accountRequestAttributes.getInstitute());"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(accountRequestAttributes.getRegistrationKey());"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        String joinLink \u003d accountRequestAttributes.getRegistrationUrl();"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        JoinLinkData output \u003d (JoinLinkData) r.getOutput();"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(joinLink, output.getJoinLink());"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        verifyNumberOfEmailsSent(1);"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        EmailWrapper emailSent \u003d mockEmailSender.getEmailsSent().get(0);"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(), name),"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                emailSent.getSubject());"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(email, emailSent.getRecipient());"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Error: invalid parameter\");"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        String invalidName \u003d \"James%20Bond99\";"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        req \u003d buildCreateRequest(invalidName, institute, emailWithSpaces);"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req);"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"\\\"\" + invalidName + \"\\\" is not acceptable to TEAMMATES as a/an person name because \""},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                + \"it contains invalid characters. A/An person name must start with an \""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"                + \"alphanumeric character, and cannot contain any vertical bar (|) or percent sign (%).\","},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"                ex.getMessage());"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        verifyNoEmailsSent();"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        verifyNoTasksAdded();"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    private AccountCreateRequest buildCreateRequest(String name, String institution, String email) {"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        AccountCreateRequest req \u003d new AccountCreateRequest();"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        req.setInstructorName(name);"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        req.setInstructorInstitution(institution);"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        req.setInstructorEmail(email);"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        return req;"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":110}},{"path":"src/test/java/teammates/ui/webapi/DeleteAccountRequestActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.MessageOutput;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link DeleteAccountRequestAction}."},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class DeleteAccountRequestActionTest extends BaseActionTest\u003cDeleteAccountRequestAction\u003e {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        return Const.ResourceURIs.ACCOUNT_REQUEST;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        return DELETE;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d typicalBundle.accountRequests.get(\"unregisteredInstructor1\");"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Typical case, delete an existing account request\");"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        String[] submissionParams \u003d new String[] {"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, accountRequest.getEmail(),"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, accountRequest.getInstitute(),"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        DeleteAccountRequestAction action \u003d getAction(submissionParams);"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        MessageOutput msg \u003d (MessageOutput) result.getOutput();"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(msg.getMessage(), \"Account request successfully deleted.\");"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(logic.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute()));"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Typical case, delete non-existing account request\");"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        action \u003d getAction(submissionParams);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        result \u003d getJsonResult(action);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        msg \u003d (MessageOutput) result.getOutput();"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        // should fail silently."},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(msg.getMessage(), \"Account request successfully deleted.\");"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":66}},{"path":"src/test/java/teammates/ui/webapi/GetAccountRequestActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import teammates.ui.output.AccountRequestData;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * SUT: {@link GetAccountRequestAction}."},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class GetAccountRequestActionTest extends BaseActionTest\u003cGetAccountRequestAction\u003e {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    protected String getActionUri() {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        return Const.ResourceURIs.ACCOUNT_REQUEST;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    protected String getRequestMethod() {"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        return GET;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    protected void testExecute() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestAttributes accountRequest \u003d"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                logic.getAccountRequest(\"unregisteredinstructor1@gmail.tmt\", \"TEAMMATES Test Institute 1\");"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        loginAsAdmin();"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"account request does not exist\");"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        String[] nonExistParams \u003d {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, \"non-existent@email\","},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, \"non existent institute\","},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        EntityNotFoundException enfe \u003d verifyEntityNotFound(nonExistParams);"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"Account request for email: non-existent@email and institute: non existent institute not found.\","},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                enfe.getMessage());"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        String[] params \u003d new String[] {"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_EMAIL, accountRequest.getEmail(),"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.INSTRUCTOR_INSTITUTION, accountRequest.getInstitute(),"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        GetAccountRequestAction a \u003d getAction(params);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        JsonResult r \u003d getJsonResult(a);"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        AccountRequestData response \u003d (AccountRequestData) r.getOutput();"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(response.getName(), accountRequest.getName());"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(response.getEmail(), accountRequest.getEmail());"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(response.getRegistrationKey(), accountRequest.getRegistrationKey());"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(response.getInstitute(), accountRequest.getInstitute());"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(accountRequest.getRegisteredAt());"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    protected void testAccessControl() {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":72}},{"path":"src/test/java/teammates/ui/webapi/GetActionClassesActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.ui.output.ActionClasses;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * SUT: {@link GetActionClassesAction}."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GetActionClassesActionTest extends BaseActionTest\u003cGetActionClassesAction\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.ACTION_CLASS;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return GET;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    protected void testExecute() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cClass\u003c? extends Action\u003e\u003e expectedActionClasses \u003d Arrays.asList("},{"lineNumber":32,"author":{"gitId":"-"},"content":"                DeleteFeedbackResponseCommentAction.class,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                CreateFeedbackResponseCommentAction.class,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                GetFeedbackResponseCommentAction.class,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                UpdateFeedbackResponseCommentAction.class,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                RestoreFeedbackSessionAction.class,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                BinFeedbackSessionAction.class,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                GetCoursesAction.class,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                GetRegkeyValidityAction.class,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                PutDataBundleAction.class,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                DeleteDataBundleAction.class,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                CreateFeedbackSessionLogAction.class,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                GetFeedbackSessionLogsAction.class,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                GetInstructorPrivilegeAction.class,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                UpdateInstructorPrivilegeAction.class,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                GetFeedbackSessionsAction.class,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                GenerateEmailAction.class,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                GetFeedbackQuestionsAction.class,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                GetOngoingSessionsAction.class,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                GetStudentProfileAction.class,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                UpdateStudentProfileAction.class,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                GetNationalitiesAction.class,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                AdminExceptionTestAction.class,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                GetUserCookieAction.class,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                RemindFeedbackSessionResultAction.class,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteInstructorAction.class,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                CreateInstructorAction.class,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                GetInstructorAction.class,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                UpdateInstructorAction.class,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                ArchiveCourseAction.class,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                InstructorCourseJoinEmailWorkerAction.class,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteStudentAction.class,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                GetStudentAction.class,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                UpdateStudentAction.class,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                SearchStudentsAction.class,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindEmailWorkerAction.class,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                DeleteStudentProfilePictureAction.class,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                PostStudentProfilePictureAction.class,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                GetStudentProfilePictureAction.class,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                DeleteFeedbackSessionAction.class,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                CreateFeedbackSessionAction.class,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                GetFeedbackSessionAction.class,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                UpdateFeedbackSessionAction.class,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                FeedbackSessionClosingRemindersAction.class,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                GetTimeZonesAction.class,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindParticularUsersEmailWorkerAction.class,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                GetFeedbackResponsesAction.class,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                SubmitFeedbackResponsesAction.class,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FeedbackSessionPublishedEmailWorkerAction.class,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                FeedbackSessionClosedRemindersAction.class,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                SendErrorReportAction.class,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                GetActionClassesAction.class,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                UnpublishFeedbackSessionAction.class,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                PublishFeedbackSessionAction.class,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                GetSessionResultsAction.class,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                GetHasResponsesAction.class,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                DatastoreBackupAction.class,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                RestoreCourseAction.class,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                BinCourseAction.class,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                DeleteAccountAction.class,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                CreateAccountAction.class,"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"                CreateAccountRequestAction.class,"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"                GetAccountRequestAction.class,"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"                DeleteAccountRequestAction.class,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                GetAccountAction.class,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                FeedbackSessionPublishedRemindersAction.class,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                QueryLogsAction.class,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                SessionLinksRecoveryAction.class,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                SendJoinReminderEmailAction.class,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                RegenerateInstructorKeyAction.class,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                RegenerateStudentKeyAction.class,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                CompileLogsAction.class,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                GetAuthInfoAction.class,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                GetFeedbackSessionSubmittedGiverSetAction.class,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                GetCourseJoinStatusAction.class,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                JoinCourseAction.class,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                GetSessionResponseStatsAction.class,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                DeleteCourseAction.class,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                CreateCourseAction.class,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                GetCourseAction.class,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                UpdateCourseAction.class,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                GetFeedbackQuestionRecipientsAction.class,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                DowngradeAccountAction.class,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                RemindFeedbackSessionSubmissionAction.class,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                FeedbackSessionUnpublishedEmailWorkerAction.class,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                SendEmailWorkerAction.class,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                GetInstructorsAction.class,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                PutDataBundleDocumentsAction.class,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                FeedbackSessionResendPublishedEmailWorkerAction.class,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                StudentCourseJoinEmailWorkerAction.class,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                SearchInstructorsAction.class,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                GetCourseSectionNamesAction.class,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                ResetAccountAction.class,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningRemindersAction.class,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningSoonRemindersAction.class,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                DeleteStudentsAction.class,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                GetStudentsAction.class,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                EnrollStudentsAction.class,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                DeleteFeedbackQuestionAction.class,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                CreateFeedbackQuestionAction.class,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                UpdateFeedbackQuestionAction.class,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                InstructorSearchIndexingWorkerAction.class,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                StudentSearchIndexingWorkerAction.class"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedActionClassesNames \u003d expectedActionClasses.stream()"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .map(Class::getSimpleName)"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .sorted()"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        GetActionClassesAction action \u003d getAction();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        ActionClasses data \u003d (ActionClasses) result.getOutput();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cString\u003e actualActionClasses \u003d data.getActionClasses();"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Collections.sort(actualActionClasses);"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedActionClassesNames, actualActionClasses);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    protected void testAccessControl() {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        verifyAccessibleForAdmin();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        verifyAccessibleForMaintainers();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        verifyInaccessibleForStudents();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        verifyInaccessibleForInstructors();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        verifyInaccessibleWithoutLogin();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        verifyInaccessibleForUnregisteredUsers();"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":158,"samuelfangjw":3}},{"path":"src/test/java/teammates/ui/webapi/GetCourseJoinStatusActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.ui.output.JoinStatus;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * SUT: {@link GetCourseJoinStatusAction}."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GetCourseJoinStatusActionTest extends BaseActionTest\u003cGetCourseJoinStatusAction\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.JOIN;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return GET;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    protected void testExecute() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loginAsUnregistered(\"unreg.user\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        verifyHttpParameterFailure("},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, \"regkey\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        verifyHttpParameterFailure("},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ______TS(\"Normal case: student is already registered\");"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String registeredStudentKey \u003d"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                logic.getStudentForEmail(\"idOfTypicalCourse1\", \"student1InCourse1@gmail.tmt\").getKey();"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String[] params \u003d new String[] {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, registeredStudentKey,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        GetCourseJoinStatusAction getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonResult result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JoinStatus output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(output.getHasJoined());"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ______TS(\"Normal case: student is not registered\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String unregisteredStudentKey \u003d"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                logic.getStudentForEmail(\"idOfUnregisteredCourse\", \"student1InUnregisteredCourse@gmail.tmt\").getKey();"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, unregisteredStudentKey,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(output.getHasJoined());"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ______TS(\"Failure case: regkey is not valid for student\");"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, \"ANXKJZNZXNJCZXKJDNKSDA\","},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        verifyEntityNotFound(params);"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ______TS(\"Normal case: instructor is already registered\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String registeredInstructorKey \u003d"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logic.getInstructorForEmail(\"idOfTypicalCourse1\", \"instructor1@course1.tmt\").getKey();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, registeredInstructorKey,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(output.getHasJoined());"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ______TS(\"Normal case: instructor is not registered\");"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String unregisteredInstructorKey \u003d"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                logic.getInstructorForEmail(\"idOfTypicalCourse1\", \"instructorNotYetJoinedCourse1@email.tmt\").getKey();"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, unregisteredInstructorKey,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(output.getHasJoined());"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ______TS(\"Failure case: regkey is not valid for instructor\");"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, \"ANXKJZNZXNJCZXKJDNKSDA\","},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        verifyEntityNotFound(params);"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Normal case: account request not used, instructor has not joined course\");"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        String accountRequestNotUsedKey \u003d logic.getAccountRequest(\"unregisteredinstructor1@gmail.tmt\","},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"                \"TEAMMATES Test Institute 1\").getRegistrationKey();"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.REGKEY, accountRequestNotUsedKey,"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.IS_CREATING_ACCOUNT, \"true\","},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(output.getHasJoined());"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Normal case: account request already used, instructor has joined course\");"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        String accountRequestUsedKey \u003d"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"                logic.getAccountRequest(\"instr1@course1.tmt\", \"TEAMMATES Test Institute 1\").getRegistrationKey();"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.REGKEY, accountRequestUsedKey,"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.IS_CREATING_ACCOUNT, \"true\","},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        getCourseJoinStatusAction \u003d getAction(params);"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        result \u003d getJsonResult(getCourseJoinStatusAction);"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        output \u003d (JoinStatus) result.getOutput();"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(output.getHasJoined());"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        ______TS(\"Failure case: account request regkey is not valid\");"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        params \u003d new String[] {"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.REGKEY, \"invalid-registration-key\","},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"                Const.ParamsNames.IS_CREATING_ACCOUNT, \"true\","},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"        };"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        verifyEntityNotFound(params);"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        ______TS(\"Failure case: invalid entity type\");"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        params \u003d new String[] {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                Const.ParamsNames.REGKEY, unregisteredStudentKey,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                Const.ParamsNames.ENTITY_TYPE, \"unknown\","},{"lineNumber":170,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        verifyHttpParameterFailure(params);"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    protected void testAccessControl() {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        verifyAnyLoggedInUserCanAccess();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":138,"samuelfangjw":44}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"question-submission-form\" class\u003d\"card\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-header bg-primary text-white question-header\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cspan id\u003d\"question-details\"\u003e\u003cb\u003eQuestion {{ model.questionNumber }}: \u003c/b\u003e{{ model.questionBrief }}\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card mb-3\" *ngIf\u003d\"model.questionDescription\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-header\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003cb\u003eMore details\u003c/b\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"question-description\" class\u003d\"card-body\" [innerHTML]\u003d\"model.questionDescription | safeHtml\"\u003e\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body visibility-card\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cp class\u003d\"text-secondary\"\u003eOnly the following persons can see your responses: \u003c/p\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cul id\u003d\"visibility-list\" class\u003d\"text-secondary\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.SELF\"\u003eYou can see your own feedback in the results page later on.\u003c/li\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cng-container *ngFor\u003d\"let visibilityType of FeedbackVisibilityType | enumToArray\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cli *ngIf\u003d\"visibilityStateMachine.isVisibilityTypeApplicable(visibilityType) \u0026\u0026 visibilityStateMachine.hasAnyVisibilityControl(visibilityType)\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            {{ visibilityType | visibilityEntityName:model.recipientType:model.numberOfEntitiesToGiveFeedbackToSetting:model.customNumberOfEntitiesToGiveFeedbackTo }} {{ visibilityStateMachine.getVisibilityControlUnderVisibilityType(visibilityType) | visibilityCapability }}"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"!visibilityStateMachine.hasAnyVisibilityControlForAll()\"\u003eNo-one can see your responses\u003c/li\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003ctm-contribution-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\"\u003e\u003c/tm-contribution-question-instruction\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-instruction\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-instruction\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003ctm-contribution-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\"\u003e\u003c/tm-contribution-question-constraint\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-constraint\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-constraint\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003ctm-rank-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-options-question-instruction\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003ctm-msq-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-msq-question-constraint\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003ctm-rank-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-recipients-question-instruction\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-constsum-options-question-instruction\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                                 [questionDetails]\u003d\"model.questionDetails\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-constsum-recipients-question-instruction\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.NONE \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.SELF\" class\u003d\"margin-top-30px margin-bottom-0px\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"ngb-tooltip-class font-bold\" ngbTooltip\u003d\"The party being evaluated or given feedback to\"\u003eEvaluee/Recipient\u003c/span\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\" *ngIf\u003d\"model.giverType \u003d\u003d\u003d FeedbackParticipantType.TEAMS\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      Please note that you are submitting this response on behalf of your team."},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"evaluee-col col-12\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row\" *ngFor\u003d\"let recipientSubmissionFormModel of model.recipientSubmissionForms; let i \u003d index; trackBy: trackRecipientSubmissionFormByFn\"\u003e"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"col-md-5 col-xs-12 margin-top-20px\" *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.SELF \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.NONE\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"recipient-name-{{ i }}\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cb\u003e{{ getRecipientName(recipientSubmissionFormModel.recipientIdentifier) }} \u003c/b\u003e \u003cspan\u003e({{ model.recipientType | recipientTypeName:model.giverType }})\u003c/span\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row evaluee-select align-items-center\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003cselect id\u003d\"recipient-dropdown\" class\u003d\"form-control font-weight-bold col\" [ngModel]\u003d\"recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                      (ngModelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027recipientIdentifier\u0027, $event)\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003coption value\u003d\"\"\u003e\u003c/option\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003cng-container *ngFor\u003d\"let recipient of model.recipientList\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                  \u003coption *ngIf\u003d\"!isRecipientSelected(recipient) || recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier\" [ngValue]\u003d\"recipient.recipientIdentifier\"\u003e{{ recipient.recipientName }}\u003c/option\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"              \u003cdiv class\u003d\"col-auto text-left\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                ({{ model.recipientType | recipientTypeName: model.giverType }})"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"col margin-top-20px\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003ctm-contribution-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                                      [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                                                      [shouldShowHelpLink]\u003d\"i \u003d\u003d\u003d 0\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                                                      (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                                      [isDisabled]\u003d\"isDisabled\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-contribution-question-edit-answer-form\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003ctm-text-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isDisabled\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-text-question-edit-answer-form\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003ctm-rank-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                                       [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                                       (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                                       [isDisabled]\u003d\"isDisabled\"\u003e\u003c/tm-rank-options-question-edit-answer-form\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003ctm-rank-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                                          [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                                                          (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                                                          [isDisabled]\u003d\"isDisabled\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-rank-recipients-question-edit-answer-form\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003ctm-num-scale-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isDisabled\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-num-scale-question-edit-answer-form\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003ctm-mcq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MCQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isDisabled\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                                    [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-mcq-question-edit-answer-form\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003ctm-msq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isDisabled\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-msq-question-edit-answer-form\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003ctm-rubric-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RUBRIC\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                                 [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                                 (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                                 [isDisabled]\u003d\"isDisabled\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                                 [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\"\u003e\u003c/tm-rubric-question-edit-answer-form\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003c/tm-constsum-options-question-edit-answer-form\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isDisabled\"\u003e\u003c/tm-constsum-recipients-question-edit-answer-form\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"comment-section\" *ngIf\u003d\"allowedToHaveParticipantComment\" class\u003d\"col-12 margin-bottom-20px margin-top-10px indent\"\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver \u0026\u0026 recipientSubmissionFormModel.commentByGiver.originalComment else newComment\"\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              \u003ctm-comment-row [mode]\u003d\"CommentRowMode.EDIT\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"                              [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":125,"author":{"gitId":"-"},"content":"                              (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":126,"author":{"gitId":"-"},"content":"                              [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                              [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"                              [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                              (deleteCommentEvent)\u003d\"triggerDeleteCommentEvent(i)\""},{"lineNumber":130,"author":{"gitId":"-"},"content":"                              (closeEditingEvent)\u003d\"discardEditedParticipantComment(i)\""},{"lineNumber":131,"author":{"gitId":"-"},"content":"                              [isDisabled]\u003d\"isDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u003cng-template #newComment\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"              \u003cdiv style\u003d\"display: inline-block;\" [ngbTooltip]\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails) ? \u0027Give a valid response in order to comment\u0027 : \u0027\u0027\"\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-add-comment\" *ngIf\u003d\"!recipientSubmissionFormModel.commentByGiver\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        (click)\u003d\"addNewParticipantCommentToResponse(i)\""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"isDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-comment\"\u003e\u003c/i\u003e [Optional] Comment on your response"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver\"\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u003ctm-comment-row [mode]\u003d\"CommentRowMode.ADD\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                                [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                                [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                                (closeEditingEvent)\u003d\"cancelAddingNewParticipantComment(i)\""},{"lineNumber":152,"author":{"gitId":"-"},"content":"                                [isDisabled]\u003d\"isDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                  You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 constraint-margins\"\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003ctm-rank-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\""},{"lineNumber":165,"author":{"gitId":"-"},"content":"                                              [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":166,"author":{"gitId":"-"},"content":"                                              [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":167,"author":{"gitId":"-"},"content":"                                              (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-rank-recipients-question-constraint\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      \u003ctm-constsum-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":170,"author":{"gitId":"-"},"content":"                                                  [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                                                  [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                                                  (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":173,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-constsum-recipients-question-constraint\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"model.recipientList.length \u003d\u003d\u003d 0\"\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS\"\u003eThis question is for team members and you don\u0027t have any team members. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS\"\u003eThis question is for other teams in this course and this course doesn\u0027t have any other team. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS\"\u003eThis question is for other students in this course and this course doesn\u0027t have any other student. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":3,"-":179}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import {"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackNumericalScaleResponseDetails,"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackParticipantType,"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackQuestionType,"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackVisibilityType,"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { CommentBoxModule } from \u0027../comment-box/comment-box.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { QuestionConstraintModule } from \u0027../question-types/question-constraint/question-constraint.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  QuestionEditAnswerFormModule,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"} from \u0027../question-types/question-edit-answer-form/question-edit-answer-form.module\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { QuestionInstructionModule } from \u0027../question-types/question-instruction/question-instruction.module\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { VisibilityMessagesModule } from \u0027../visibility-messages/visibility-messages.module\u0027;"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"import { FeedbackResponseRecipientSubmissionFormModel, QuestionSubmissionFormModel } from \u0027./question-submission-form-model\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { QuestionSubmissionFormComponent } from \u0027./question-submission-form.component\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { RecipientTypeNamePipe } from \u0027./recipient-type-name.pipe\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"const formResponse1: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-1\u0027,"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027hans-charlie-id\u0027,"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"    answer: 5,"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"const formResponse2: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-2\u0027,"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027harris-barry-id\u0027,"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"    answer: 4,"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"const formResponse3: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-3\u0027,"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027rogers-alan-id\u0027,"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":49,"author":{"gitId":"Nicolascwy"},"content":"    answer: 3,"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":52,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"const formResponse4: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-4\u0027,"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027buck-arthur-id\u0027,"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"    answer: 2,"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"const testNumscaleQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"  feedbackQuestionId: \u0027feedback-question-id-numscale\u0027,"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"  questionNumber: 1,"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":"  questionBrief: \u0027numerical scale question\u0027,"},{"lineNumber":67,"author":{"gitId":"Nicolascwy"},"content":"  questionDescription: \u0027question description\u0027,"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"  questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":69,"author":{"gitId":"Nicolascwy"},"content":"  questionDetails: {"},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":"    minScale: 1,"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"    maxScale: 10,"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"    step: 1,"},{"lineNumber":73,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":74,"author":{"gitId":"Nicolascwy"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":75,"author":{"gitId":"Nicolascwy"},"content":"  recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":76,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":77,"author":{"gitId":"Nicolascwy"},"content":"  recipientList: [{ recipientName: \u0027Alan Rogers\u0027, recipientIdentifier: \u0027rogers-alan-id\u0027 },"},{"lineNumber":78,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Arthur Buck\u0027, recipientIdentifier: \u0027buck-arthur-id\u0027 },"},{"lineNumber":79,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027harris-barry-id\u0027 },"},{"lineNumber":80,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Charlie Hans\u0027, recipientIdentifier: \u0027hans-charlie-id\u0027 }],"},{"lineNumber":81,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":82,"author":{"gitId":"Nicolascwy"},"content":"  recipientSubmissionForms: [formResponse1, formResponse2, formResponse3, formResponse4],"},{"lineNumber":83,"author":{"gitId":"Nicolascwy"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM,"},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 4,"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":"  showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"  showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"describe(\u0027QuestionSubmissionFormComponent\u0027, () \u003d\u003e {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  let component: QuestionSubmissionFormComponent;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cQuestionSubmissionFormComponent\u003e;"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      declarations: ["},{"lineNumber":97,"author":{"gitId":"-"},"content":"        QuestionSubmissionFormComponent,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        RecipientTypeNamePipe,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":101,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        VisibilityMessagesModule,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        QuestionInstructionModule,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        QuestionConstraintModule,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        QuestionEditAnswerFormModule,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        RichTextEditorModule,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommentBoxModule,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        NgbModule,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(QuestionSubmissionFormComponent);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":125,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":126,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should set model\u0027, () \u003d\u003e {"},{"lineNumber":127,"author":{"gitId":"Nicolascwy"},"content":"    const model: QuestionSubmissionFormModel \u003d testNumscaleQuestionSubmissionForm;"},{"lineNumber":128,"author":{"gitId":"Nicolascwy"},"content":"    component.formModel \u003d model;"},{"lineNumber":129,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":130,"author":{"gitId":"Nicolascwy"},"content":"    expect(component.model).toBe(model);"},{"lineNumber":131,"author":{"gitId":"Nicolascwy"},"content":"  });"},{"lineNumber":132,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should arrange recipients according to alphabetical order of name after ngOnInit (Sorted recipient list)\u0027, () \u003d\u003e {"},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":"    const model: QuestionSubmissionFormModel \u003d JSON.parse(JSON.stringify(testNumscaleQuestionSubmissionForm));"},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":136,"author":{"gitId":"Nicolascwy"},"content":"    component.formModel \u003d model;"},{"lineNumber":137,"author":{"gitId":"Nicolascwy"},"content":"    component.ngOnInit();"},{"lineNumber":138,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":139,"author":{"gitId":"Nicolascwy"},"content":"    expect(model.recipientSubmissionForms).toEqual([formResponse3, formResponse4, formResponse2, formResponse1]);"},{"lineNumber":140,"author":{"gitId":"Nicolascwy"},"content":"  });"},{"lineNumber":141,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":142,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should arrange recipients according to alphabetical order of name after ngOnInit (Unsorted recipient list)\u0027,"},{"lineNumber":143,"author":{"gitId":"Nicolascwy"},"content":"    () \u003d\u003e {"},{"lineNumber":144,"author":{"gitId":"Nicolascwy"},"content":"      const model: QuestionSubmissionFormModel \u003d JSON.parse(JSON.stringify(testNumscaleQuestionSubmissionForm));"},{"lineNumber":145,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":146,"author":{"gitId":"Nicolascwy"},"content":"      // Change recipient list to unsorted"},{"lineNumber":147,"author":{"gitId":"Nicolascwy"},"content":"      model.recipientList \u003d [{ recipientName: \u0027Charlie Hans\u0027, recipientIdentifier: \u0027hans-charlie-id\u0027 },"},{"lineNumber":148,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Alan Rogers\u0027, recipientIdentifier: \u0027rogers-alan-id\u0027 },"},{"lineNumber":149,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027harris-barry-id\u0027 },"},{"lineNumber":150,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Arthur Buck\u0027, recipientIdentifier: \u0027buck-arthur-id\u0027 },"},{"lineNumber":151,"author":{"gitId":"Nicolascwy"},"content":"      ];"},{"lineNumber":152,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":153,"author":{"gitId":"Nicolascwy"},"content":"      component.formModel \u003d model;"},{"lineNumber":154,"author":{"gitId":"Nicolascwy"},"content":"      component.ngOnInit();"},{"lineNumber":155,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":156,"author":{"gitId":"Nicolascwy"},"content":"      expect(model.recipientSubmissionForms).toEqual([formResponse3, formResponse4, formResponse2, formResponse1]);"},{"lineNumber":157,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":158,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":53,"Nicolascwy":105}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackQuestionType, FeedbackResponseDetails, FeedbackTextQuestionDetails,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { CommentRowMode, CommentRowModel } from \u0027../comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"} from \u0027./question-submission-form-model\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The question submission form for a question."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  selector: \u0027tm-question-submission-form\u0027,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./question-submission-form.component.html\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./question-submission-form.component.scss\u0027],"},{"lineNumber":27,"author":{"gitId":"-"},"content":"})"},{"lineNumber":28,"author":{"gitId":"-"},"content":"export class QuestionSubmissionFormComponent implements OnInit {"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode: typeof QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackParticipantType: typeof FeedbackParticipantType \u003d FeedbackParticipantType;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType: typeof FeedbackVisibilityType \u003d FeedbackVisibilityType;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  CommentRowMode: typeof CommentRowMode \u003d CommentRowMode;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  formMode: QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  isDisabled: boolean \u003d false;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  set formModel(model: QuestionSubmissionFormModel) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    this.model \u003d model;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine(model.giverType, model.recipientType);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    const visibilitySetting: {[TKey in VisibilityControl]: FeedbackVisibilityType[]} \u003d {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      SHOW_RESPONSE: model.showResponsesTo,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      SHOW_GIVER_NAME: model.showGiverNameTo,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      SHOW_RECIPIENT_NAME: model.showRecipientNameTo,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    this.allowedToHaveParticipantComment \u003d"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.isAllowedToHaveParticipantComment(this.model.questionType);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  formModelChange: EventEmitter\u003cQuestionSubmissionFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [],"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  deleteCommentEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  visibilityStateMachine: VisibilityStateMachine;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  allowedToHaveParticipantComment: boolean \u003d false;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  constructor(private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"              private feedbackResponseService: FeedbackResponsesService) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":97,"author":{"gitId":"-"},"content":"            this.model.giverType, this.model.recipientType);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":101,"author":{"gitId":"Nicolascwy"},"content":"    this.sortRecipientsByName();"},{"lineNumber":102,"author":{"gitId":"Nicolascwy"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":104,"author":{"gitId":"Nicolascwy"},"content":"  /**"},{"lineNumber":105,"author":{"gitId":"Nicolascwy"},"content":"   * Sorts recipients of feedback by their name."},{"lineNumber":106,"author":{"gitId":"Nicolascwy"},"content":"   */"},{"lineNumber":107,"author":{"gitId":"Nicolascwy"},"content":"  private sortRecipientsByName(): void {"},{"lineNumber":108,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientList.sort((firstRecipient: FeedbackResponseRecipient,"},{"lineNumber":109,"author":{"gitId":"Nicolascwy"},"content":"      secondRecipient: FeedbackResponseRecipient) \u003d\u003e"},{"lineNumber":110,"author":{"gitId":"Nicolascwy"},"content":"      firstRecipient.recipientName.localeCompare(secondRecipient.recipientName));"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":112,"author":{"gitId":"Nicolascwy"},"content":"    const indexes: Map\u003cString, number\u003e \u003d new Map();"},{"lineNumber":113,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientList.forEach((recipient: FeedbackResponseRecipient, index: number) \u003d\u003e {"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"      indexes.set(recipient.recipientIdentifier, index);"},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":117,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientSubmissionForms.sort((firstRecipient: FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":118,"author":{"gitId":"Nicolascwy"},"content":"      secondRecipient: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":"      const firstRecipientIndex: number \u003d indexes.get(firstRecipient.recipientIdentifier) || 0;"},{"lineNumber":120,"author":{"gitId":"Nicolascwy"},"content":"      const secondRecipientIndex: number \u003d indexes.get(secondRecipient.recipientIdentifier) || 0;"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":"      return firstRecipientIndex - secondRecipientIndex;"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":127,"author":{"gitId":"-"},"content":"   * Tracks submission form for each recipient by the index in the array."},{"lineNumber":128,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":130,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  trackRecipientSubmissionFormByFn(index: number): any {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    return index;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   * Gets recipient name in {@code FIXED_RECIPIENT} mode."},{"lineNumber":137,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  getRecipientName(recipientIdentifier: string): string {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    const recipient: FeedbackResponseRecipient | undefined \u003d"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        this.model.recipientList.find("},{"lineNumber":141,"author":{"gitId":"-"},"content":"            (r: FeedbackResponseRecipient) \u003d\u003e r.recipientIdentifier \u003d\u003d\u003d recipientIdentifier);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    return recipient ? recipient.recipientName : \u0027Unknown\u0027;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   * Checks whether the recipient is already selected in {@code FLEXIBLE_RECIPIENT} mode."},{"lineNumber":147,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  isRecipientSelected(recipient: FeedbackResponseRecipient): boolean {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    return this.model.recipientSubmissionForms.some("},{"lineNumber":150,"author":{"gitId":"-"},"content":"        (recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   * Triggers the change of the recipient submission form."},{"lineNumber":156,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  triggerRecipientSubmissionFormChange(index: number, field: string, data: any): void {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice();"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    recipientSubmissionForms[index] \u003d {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      ...recipientSubmissionForms[index],"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      [field]: data,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":172,"author":{"gitId":"-"},"content":"   * Triggers deletion of a participant comment associated with the response."},{"lineNumber":173,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  triggerDeleteCommentEvent(index: number): void {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    this.deleteCommentEvent.emit(index);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":179,"author":{"gitId":"-"},"content":"   * Add new participant comment to response with index."},{"lineNumber":180,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  addNewParticipantCommentToResponse(index: number): void {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"      isEditing: true,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":192,"author":{"gitId":"-"},"content":"   * Cancel adding new participant comment."},{"lineNumber":193,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  cancelAddingNewParticipantComment(index: number): void {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, null);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":199,"author":{"gitId":"-"},"content":"   * Discards the current editing and restore the original comment."},{"lineNumber":200,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  discardEditedParticipantComment(index: number): void {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    const commentModel: CommentRowModel | undefined \u003d this.model.recipientSubmissionForms[index].commentByGiver;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    if (!commentModel || !commentModel.originalComment) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Object.assign({}, commentModel, {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"          commentEditFormModel: {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            commentText: commentModel.originalComment.commentText,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":211,"author":{"gitId":"-"},"content":"          isEditing: false,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }));"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * Checks whether the response is empty or not."},{"lineNumber":217,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  isFeedbackResponseDetailsEmpty(responseDetails: FeedbackResponseDetails): boolean {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    return this.feedbackResponseService.isFeedbackResponseDetailsEmpty("},{"lineNumber":220,"author":{"gitId":"-"},"content":"        this.model.questionType, responseDetails);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":224,"author":{"gitId":"-"},"content":"   * Updates validity of all responses in a question."},{"lineNumber":225,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  updateValidity(isValid: boolean): void {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    if (this.model.recipientSubmissionForms.length \u003d\u003d\u003d 0) { return; }"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice().map("},{"lineNumber":230,"author":{"gitId":"-"},"content":"            (model: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e Object.assign({}, model, { isValid }));"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":213,"Nicolascwy":23}},{"path":"src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"!isAllFormsNotAnswered\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isInsufficientPointsDistributed\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Distribute the remaining {{ totalRequiredPoints - totalAnsweredPoints }} points.\u003c/p\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isPointsOverAllocated\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Remove the extra  {{ totalAnsweredPoints - totalRequiredPoints }} points allocated.\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isAllPointsDistributed\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      All points distributed!\u003c/p\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"    \u003cp *ngIf\u003d\"isAnyPointsNegative\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"      Points cannot be negative!\u003c/p\u003e"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isWronglyAllUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      Multiple recipients are given same points!\u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isCorrectlyAllUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      All allocated points are different!\u003c/p\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isWronglySomeUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      All recipients are given {{ allAnswers[0] }} points. Please allocate different points to at least one recipient.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isCorrectlySomeUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      At least one recipient has been allocated different number of points.\u003c/p\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":3,"-":24}},{"path":"src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { QuestionConstraintComponent } from \u0027./question-constraint.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Constraint of constsum recipients question."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  selector: \u0027tm-constsum-recipients-question-constraint\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./constsum-recipients-question-constraint.component.html\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./constsum-recipients-question-constraint.component.scss\u0027],"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class ConstsumRecipientsQuestionConstraintComponent"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    extends QuestionConstraintComponent\u003cFeedbackConstantSumQuestionDetails\u003e {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType: typeof FeedbackConstantSumDistributePointsType \u003d"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      FeedbackConstantSumDistributePointsType;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    super(DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS());"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * Checks if all forms are not answered."},{"lineNumber":36,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  get isAllFormsNotAnswered(): boolean {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    return this.recipientSubmissionForms.every((form: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      const details: FeedbackConstantSumResponseDetails \u003d form.responseDetails as FeedbackConstantSumResponseDetails;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      return details.answers.length \u003d\u003d\u003d 0;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   * Gets total required points."},{"lineNumber":46,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  get totalRequiredPoints(): number {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (this.questionDetails.pointsPerOption) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return this.questionDetails.points * this.recipientSubmissionForms.length;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    return this.questionDetails.points;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * Get answers for the recipients."},{"lineNumber":56,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  get allAnswers(): number[] {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    return this.recipientSubmissionForms.map("},{"lineNumber":59,"author":{"gitId":"-"},"content":"        (form: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          const details: FeedbackConstantSumResponseDetails \u003d"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              form.responseDetails as FeedbackConstantSumResponseDetails;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          if (details.answers.length \u003d\u003d\u003d 0) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          return details.answers[0];"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * Gets total answer points."},{"lineNumber":71,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  get totalAnsweredPoints(): number {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    return this.allAnswers.reduce((total: number, curr: number) \u003d\u003e total + curr, 0);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * Checks if all points are distributed unevenly."},{"lineNumber":78,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  get isAllPointsUneven(): boolean {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    this.allAnswers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    return set.size \u003d\u003d\u003d this.allAnswers.length;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * Checks if some points are distributed unevenly."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  get isSomePointsUneven(): boolean {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    if (this.allAnswers.length \u003d\u003d\u003d 1) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.allAnswers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    return set.size !\u003d\u003d 1;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * Checks if all points have been distributed."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  get isAllPointsDistributed(): boolean {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003d\u003d\u003d this.totalRequiredPoints;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * Checks if the points have been insufficiently distributed."},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  get isInsufficientPointsDistributed(): boolean {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003c this.totalRequiredPoints;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Checks if the points have been over allocated."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  get isPointsOverAllocated(): boolean {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003e this.totalRequiredPoints;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":"   * Checks if any of the points are negative."},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":124,"author":{"gitId":"zhaojj2209"},"content":"  get isAnyPointsNegative(): boolean {"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":"    return this.allAnswers.reduce((isNegative: boolean, curr: number) \u003d\u003e isNegative || (curr \u003c 0), false);"},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * Returns true if the question requires uneven distribution but the points are not unevenly distributed."},{"lineNumber":130,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  get isWronglyAllUneven(): boolean {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        \u0026\u0026 !this.isAllPointsUneven;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Returns true if the question requires uneven distribution and the points are unevenly distributed."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  get isCorrectlyAllUneven(): boolean {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u0026\u0026 this.isAllPointsUneven;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   * Returns true if the question requires some uneven distribution but points are not unevenly distributed for some."},{"lineNumber":146,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  get isWronglySomeUneven(): boolean {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u0026\u0026 !this.isSomePointsUneven;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * Returns true if the question requires some uneven distribution and points are unevenly distributed for some."},{"lineNumber":154,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  get isCorrectlySomeUneven(): boolean {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        \u0026\u0026 this.isSomePointsUneven;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  get isValid(): boolean {"},{"lineNumber":161,"author":{"gitId":"zhaojj2209"},"content":"    return this.isAllPointsDistributed \u0026\u0026 !this.isAnyPointsNegative \u0026\u0026"},{"lineNumber":162,"author":{"gitId":"zhaojj2209"},"content":"        (this.isCorrectlyAllUneven || this.isCorrectlySomeUneven"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        || this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.NONE);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":9,"-":156}},{"path":"src/web/app/components/question-types/question-constraint/rank-recipients-question-constraint.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"!questionDetails.areDuplicatesAllowed \u0026\u0026 isSameRanksAssigned\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"    The same rank should not be given multiple times.\u003c/p\u003e"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isNoRecipientRanked\" class\u003d\"text-info\"\u003e\u003cspan class\u003d\"fa fa-info-circle\"\u003e\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"    Please rank the above recipients.\u003c/p\u003e"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMinRecipientsEnabled \u0026\u0026 isRecipientsRankedLessThanMin\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"    Rank at least {{ questionDetails.minOptionsToBeRanked }} recipients.\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMaxRecipientsEnabled \u0026\u0026 isRecipientsRankedMoreThanMax\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"    Rank no more than {{questionDetails.maxOptionsToBeRanked}} recipients.\u003c/p\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":8,"-":2}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-options-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row text-left\" *ngFor\u003d\"let option of questionDetails.constSumOptions; let i \u003d index;\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-5 col-xs-12 text-md-right col-form-label\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cstrong\u003e{{ option }}\u003c/strong\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-7 col-xs-12 text-md-left\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cinput type\u003d\"number\" class\u003d\"form-control\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"           [ngModel]\u003d\"i \u003c responseDetails.answers.length ? responseDetails.answers[i] : \u0027\u0027\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"           (ngModelChange)\u003d\"triggerResponse(i, $event)\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"           [disabled]\u003d\"isDisabled\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"           min\u003d\"0\" step\u003d\"1\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row\" *ngIf\u003d\"responseDetails.answers.length !\u003d\u003d 0\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12 col-sm-5 offset-sm-2\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" (click)\u003d\"triggerResponseDetailsChange(\u0027answers\u0027, [])\" [disabled]\u003d\"isDisabled\"\u003eClear Points\u003c/button\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"responseDetails.answers.length !\u003d\u003d 0\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003c totalRequiredPoints\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Distribute the remaining {{ totalRequiredPoints - totalAnsweredPoints }} points.\u003c/p\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003e totalRequiredPoints\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Remove the extra  {{ totalAnsweredPoints - totalRequiredPoints }} points allocated.\u003c/p\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003d\u003d\u003d totalRequiredPoints\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      All points distributed!\u003c/p\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"zhaojj2209"},"content":"    \u003cp *ngIf\u003d\"isAnyPointsNegative\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"      Points cannot be negative!\u003c/p\u003e"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY \u0026\u0026 !isAllPointsUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      Multiple options are given same points!\u003c/p\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY \u0026\u0026 isAllPointsUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      All allocated points are different!\u003c/p\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY \u0026\u0026 !isSomePointsUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      All options are given {{ responseDetails.answers[0] }} points. Please allocate different points to at least one option.\u003c/p\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY \u0026\u0026 isSomePointsUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      At least one option has been allocated different number of points.\u003c/p\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":3,"fsgmhoward":2,"-":39}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-options-question-edit-answer-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_RESPONSE_DETAILS,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { QuestionEditAnswerFormComponent } from \u0027./question-edit-answer-form\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The constsum question options submission form for a recipient."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027tm-constsum-options-question-edit-answer-form\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./constsum-options-question-edit-answer-form.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./constsum-options-question-edit-answer-form.component.scss\u0027],"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class ConstsumOptionsQuestionEditAnswerFormComponent"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    extends QuestionEditAnswerFormComponent\u003cFeedbackConstantSumQuestionDetails, FeedbackConstantSumResponseDetails\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType: typeof FeedbackConstantSumDistributePointsType \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      FeedbackConstantSumDistributePointsType;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    super(DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS(), DEFAULT_CONSTSUM_RESPONSE_DETAILS());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * Assigns a point to the option specified by index."},{"lineNumber":34,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  triggerResponse(index: number, event: number): void {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    let newAnswers: number[] \u003d this.responseDetails.answers.slice();"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    if (newAnswers.length !\u003d\u003d this.questionDetails.constSumOptions.length) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      // initialize answers array on the fly"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      newAnswers \u003d Array(this.questionDetails.constSumOptions.length).fill(0);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    newAnswers[index] \u003d event ? Math.ceil(event) : 0;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.triggerResponseDetailsChange(\u0027answers\u0027, newAnswers);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * Gets total required points."},{"lineNumber":49,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  get totalRequiredPoints(): number {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    if (this.questionDetails.pointsPerOption) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      return this.questionDetails.points * this.questionDetails.constSumOptions.length;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    return this.questionDetails.points;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Gets total answer points."},{"lineNumber":59,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  get totalAnsweredPoints(): number {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    return this.responseDetails.answers.reduce((total: number, curr: number) \u003d\u003e total + curr, 0);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * Checks if all points are distributed unevenly."},{"lineNumber":66,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  get isAllPointsUneven(): boolean {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.responseDetails.answers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    return set.size \u003d\u003d\u003d this.responseDetails.answers.length;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * Checks if some points are distributed unevenly."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  get isSomePointsUneven(): boolean {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    if (this.responseDetails.answers.length \u003d\u003d\u003d 1) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    this.responseDetails.answers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    return set.size !\u003d\u003d 1;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":"   * Checks if any of the points are negative."},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":"  get isAnyPointsNegative(): boolean {"},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"    return this.responseDetails.answers.reduce((isNegative: boolean, curr: number) \u003d\u003e isNegative || (curr \u003c 0), false);"},{"lineNumber":93,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":7,"-":88}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-recipients-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"      \u003cinput type\u003d\"number\" class\u003d\"form-control\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"             [ngModel]\u003d\"responseDetails.answers.length \u003d\u003d 1 ? responseDetails.answers[0] : \u0027\u0027\""},{"lineNumber":5,"author":{"gitId":"-"},"content":"             (ngModelChange)\u003d\"triggerResponse($event)\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"             [disabled]\u003d\"isDisabled\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"             min\u003d\"0\" step\u003d\"1\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":2,"-":7}},{"path":"src/web/app/components/question-types/question-edit-answer-form/rank-options-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row text-left\" *ngFor\u003d\"let num of questionDetails.options; let i \u003d index;\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-5 col-xs-12 text-md-right col-form-label\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cstrong\u003e{{ questionDetails.options[i] }}\u003c/strong\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-7 col-xs-12 text-md-left\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"responseDetails.answers[i]\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"            (ngModelChange)\u003d\"triggerResponse(i, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003coption [ngValue]\u003d\"RANK_OPTIONS_ANSWER_NOT_SUBMITTED\"\u003e\u003c/option\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003coption *ngFor\u003d\"let rank of ranksToBeAssigned\" [ngValue]\u003d\"rank\"\u003e{{ rank }}\u003c/option\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/select\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv\u003e"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"!questionDetails.areDuplicatesAllowed \u0026\u0026 isSameRanksAssigned\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"    The same rank should not be given multiple times.\u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isNoOptionRanked\" class\u003d\"text-info\"\u003e\u003cspan class\u003d\"fa fa-info-circle\"\u003e\u003c/span\u003e"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"    Please rank the above options.\u003c/p\u003e"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMinOptionsEnabled \u0026\u0026 isOptionsRankedLessThanMin\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"    You need to rank at least {{ questionDetails.minOptionsToBeRanked }} options.\u003c/p\u003e"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMaxOptionsEnabled \u0026\u0026 isOptionsRankedMoreThanMax\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    Rank no more than {{questionDetails.maxOptionsToBeRanked}} options.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":11,"-":12}},{"path":"src/web/app/components/question-types/question-edit-answer-form/rank-recipients-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv class\u003d\"margin-bottom-15px\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"responseDetails.answer\""},{"lineNumber":3,"author":{"gitId":"-"},"content":"          (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003coption [ngValue]\u003d\"RANK_RECIPIENTS_ANSWER_NOT_SUBMITTED\"\u003e\u003c/option\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003coption *ngFor\u003d\"let rank of ranksToBeAssigned\" [ngValue]\u003d\"rank\"\u003e{{ rank }}\u003c/option\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/select\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":6}},{"path":"src/web/app/pages-admin/admin-home-page/admin-home-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AccountService } from \u0027../../../services/account.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AdminHomePageComponent } from \u0027./admin-home-page.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"describe(\u0027AdminHomePageComponent\u0027, () \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  let component: AdminHomePageComponent;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cAdminHomePageComponent\u003e;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  let service: AccountService;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      declarations: [AdminHomePageComponent],"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":19,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      providers: [AccountService],"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(AdminHomePageComponent);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    service \u003d TestBed.inject(AccountService);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  it(\u0027should add one instructor to list if all fields are filled\u0027, () \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    component.instructorName \u003d \u0027Instructor Name\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    component.instructorEmail \u003d \u0027instructor@example.com\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    component.instructorInstitution \u003d \u0027Instructor Institution\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor\u0027);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    expect(component.instructorName).toEqual(\u0027\u0027);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    expect(component.instructorEmail).toEqual(\u0027\u0027);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    expect(component.instructorInstitution).toEqual(\u0027\u0027);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(1);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0]).toEqual({"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      email: \u0027instructor@example.com\u0027,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      institution: \u0027Instructor Institution\u0027,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      name: \u0027Instructor Name\u0027,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  it(\u0027should not add one instructor to list if some fields are empty\u0027, () \u003d\u003e {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    component.instructorName \u003d \u0027Instructor Name\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    component.instructorEmail \u003d \u0027\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    component.instructorInstitution \u003d \u0027Instructor Institution\u0027;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor\u0027);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    expect(component.instructorName).toEqual(\u0027Instructor Name\u0027);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    expect(component.instructorEmail).toEqual(\u0027\u0027);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    expect(component.instructorInstitution).toEqual(\u0027Instructor Institution\u0027);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(0);"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    component.instructorName \u003d \u0027\u0027;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    component.instructorEmail \u003d \u0027instructor@example.com\u0027;"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    expect(component.instructorName).toEqual(\u0027\u0027);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    expect(component.instructorEmail).toEqual(\u0027instructor@example.com\u0027);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    expect(component.instructorInstitution).toEqual(\u0027Instructor Institution\u0027);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(0);"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    component.instructorName \u003d \u0027Instructor Name\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    component.instructorInstitution \u003d \u0027\u0027;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    expect(component.instructorName).toEqual(\u0027Instructor Name\u0027);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    expect(component.instructorEmail).toEqual(\u0027instructor@example.com\u0027);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    expect(component.instructorInstitution).toEqual(\u0027\u0027);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(0);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  it(\u0027should only add valid instructor details in the single line field\u0027, () \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    component.instructorDetails \u003d ["},{"lineNumber":98,"author":{"gitId":"-"},"content":"        \u0027Instructor A | instructora@example.com | Institution A\u0027,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u0027Instructor B | instructorb@example.com\u0027,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        \u0027Instructor C | | instructorc@example.com\u0027,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        \u0027Instructor D | instructord@example.com | Institution D\u0027,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        \u0027| instructore@example.com | Institution E\u0027,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    ].join(\u0027\\n\u0027);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor-single-line\u0027);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    expect(component.instructorDetails).toEqual(["},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u0027Instructor B | instructorb@example.com\u0027,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u0027Instructor C | | instructorc@example.com\u0027,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      \u0027| instructore@example.com | Institution E\u0027,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    ].join(\u0027\\r\\n\u0027));"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(2);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0]).toEqual({"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      email: \u0027instructora@example.com\u0027,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      institution: \u0027Institution A\u0027,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      name: \u0027Instructor A\u0027,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[1]).toEqual({"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      email: \u0027instructord@example.com\u0027,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      institution: \u0027Institution D\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      name: \u0027Instructor D\u0027,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"  it(\u0027should remove instructor out of queue if CANCEL is requested\u0027, () \u003d\u003e {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":131,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#cancel-instructor-0\u0027);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(0);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"  it(\u0027should add instructor and update field when successful\u0027, () \u003d\u003e {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":150,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"    spyOn(service, \u0027createAccountRequest\u0027).and.returnValue(of({"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      joinLink: \u0027http://localhost:4200/web/join\u0027,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor-0\u0027);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0].status).toEqual(\u0027SUCCESS\u0027);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0].joinLink).toEqual(\u0027http://localhost:4200/web/join\u0027);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    expect(component.activeRequests).toEqual(0);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  it(\u0027should not add instructor and update field when failure\u0027, () \u003d\u003e {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":174,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"    spyOn(service, \u0027createAccountRequest\u0027).and.returnValue(throwError({"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      error: {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        message: \u0027This is the error message\u0027,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor-0\u0027);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0].status).toEqual(\u0027FAIL\u0027);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0].message).toEqual(\u0027This is the error message\u0027);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    expect(component.activeRequests).toEqual(0);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  it(\u0027should add all instructors when prompted\u0027, () \u003d\u003e {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":200,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        status: \u0027SUCCESS\u0027,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        joinLink: \u0027http://localhost:4200/web/join\u0027,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        name: \u0027Instructor C\u0027,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        email: \u0027instructorc@example.com\u0027,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution C\u0027,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        message: \u0027The instructor cannot be added for some reason\u0027,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    // No need to spy here as this test only tests the number of active requests added"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    // Testing of adding individual instructors have been done before"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-all-instructors\u0027);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0].status).toEqual(\u0027ADDING\u0027);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[1].status).toEqual(\u0027SUCCESS\u0027);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[2].status).toEqual(\u0027ADDING\u0027);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    expect(component.activeRequests).toEqual(2);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default view\u0027, () \u003d\u003e {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"  it(\u0027should snap with some instructors details\u0027, () \u003d\u003e {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":244,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        status: \u0027SUCCESS\u0027,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        joinLink: \u0027http://localhost:4200/web/join\u0027,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        name: \u0027Instructor C\u0027,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        email: \u0027instructorc@example.com\u0027,"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution C\u0027,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        status: \u0027FAIL\u0027,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        message: \u0027The instructor cannot be added for some reason\u0027,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"  it(\u0027should snap with disabled adding instructor button if there are active requests\u0027, () \u003d\u003e {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    component.instructorsConsolidated \u003d ["},{"lineNumber":275,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        status: \u0027ADDING\u0027,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        joinLink: \u0027This should not be displayed\u0027,"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        message: \u0027This should not be displayed\u0027,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    component.activeRequests \u003d 1;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    component.isAddingInstructors \u003d true;"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"  it(\u0027should add multiple instructors split by tabs\u0027, () \u003d\u003e {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    component.instructorDetails \u003d `Instructor A   \\t  instructora@example.com \\t  Sample Institution A\\n"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     Instructor B \\t instructorb@example.com \\t Sample Institution B`;"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor-single-line\u0027);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(2);"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0]).toEqual("},{"lineNumber":310,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[1]).toEqual("},{"lineNumber":318,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"  it(\u0027should add multiple instructors split by vertical bars\u0027, () \u003d\u003e {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    component.instructorDetails \u003d `Instructor A | instructora@example.com | Sample Institution A\\n"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        Instructor B | instructorb@example.com | Sample Institution B`;"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-instructor-single-line\u0027);"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    button.click();"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated.length).toEqual(2);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[0]).toEqual("},{"lineNumber":338,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        name: \u0027Instructor A\u0027,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        email: \u0027instructora@example.com\u0027,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution A\u0027,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    expect(component.instructorsConsolidated[1]).toEqual("},{"lineNumber":346,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        name: \u0027Instructor B\u0027,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        email: \u0027instructorb@example.com\u0027,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        institution: \u0027Sample Institution B\u0027,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":353,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":354,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":352,"samuelfangjw":2}},{"path":"src/web/app/pages-admin/admin-home-page/admin-home-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AccountService } from \u0027../../../services/account.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { JoinLink } from \u0027../../../types/api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"interface InstructorData {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  name: string;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  email: string;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  institution: string;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  status: string;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  joinLink?: string;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  message?: string;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Admin home page."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  selector: \u0027tm-admin-home-page\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./admin-home-page.component.html\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./admin-home-page.component.scss\u0027],"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class AdminHomePageComponent {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  instructorDetails: string \u003d \u0027\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  instructorName: string \u003d \u0027\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  instructorEmail: string \u003d \u0027\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  instructorInstitution: string \u003d \u0027\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  instructorsConsolidated: InstructorData[] \u003d [];"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  activeRequests: number \u003d 0;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  isAddingInstructors: boolean \u003d false;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  constructor(private accountService: AccountService) {}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * Validates and adds the instructor details filled with first form."},{"lineNumber":40,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  validateAndAddInstructorDetails(): void {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    const invalidLines: string[] \u003d [];"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    for (const instructorDetail of this.instructorDetails.split(/\\r?\\n/)) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      const instructorDetailSplit: string[] \u003d instructorDetail.split(/[|\\t]/).map((item: string) \u003d\u003e item.trim());"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      if (instructorDetailSplit.length \u003c 3) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // TODO handle error"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        invalidLines.push(instructorDetail);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        continue;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      if (!instructorDetailSplit[0] || !instructorDetailSplit[1] || !instructorDetailSplit[2]) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // TODO handle error"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        invalidLines.push(instructorDetail);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        continue;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      this.instructorsConsolidated.push({"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name: instructorDetailSplit[0],"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email: instructorDetailSplit[1],"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        institution: instructorDetailSplit[2],"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        status: \u0027PENDING\u0027,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.instructorDetails \u003d invalidLines.join(\u0027\\r\\n\u0027);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * Validates and adds the instructor detail filled with second form."},{"lineNumber":67,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  validateAndAddInstructorDetail(): void {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    if (!this.instructorName || !this.instructorEmail || !this.instructorInstitution) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      // TODO handle error"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    this.instructorsConsolidated.push({"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      name: this.instructorName,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      email: this.instructorEmail,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      institution: this.instructorInstitution,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      status: \u0027PENDING\u0027,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    this.instructorName \u003d \u0027\u0027;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    this.instructorEmail \u003d \u0027\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    this.instructorInstitution \u003d \u0027\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":85,"author":{"gitId":"-"},"content":"   * Adds the instructor at the i-th index."},{"lineNumber":86,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  addInstructor(i: number): void {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const instructor: InstructorData \u003d this.instructorsConsolidated[i];"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    if (instructor.status !\u003d\u003d \u0027PENDING\u0027 \u0026\u0026 instructor.status !\u003d\u003d \u0027FAIL\u0027) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    this.activeRequests +\u003d 1;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    instructor.status \u003d \u0027ADDING\u0027;"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.isAddingInstructors \u003d true;"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    this.accountService.createAccountRequest({"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      instructorEmail: instructor.email,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      instructorName: instructor.name,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      instructorInstitution: instructor.institution,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isAddingInstructors \u003d false))"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        .subscribe((resp: JoinLink) \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          instructor.status \u003d \u0027SUCCESS\u0027;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          instructor.joinLink \u003d resp.joinLink;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          this.activeRequests -\u003d 1;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          instructor.status \u003d \u0027FAIL\u0027;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          instructor.message \u003d resp.error.message;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"          this.activeRequests -\u003d 1;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   * Cancels the instructor at the i-th index."},{"lineNumber":115,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  cancelInstructor(i: number): void {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    this.instructorsConsolidated.splice(i, 1);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Adds all the pending and failed-to-add instructors."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  addAllInstructors(): void {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 0; i \u003c this.instructorsConsolidated.length; i +\u003d 1) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      this.addInstructor(i);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":128,"samuelfangjw":1}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { NgxPageScrollCoreModule } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  CommentVisibilityType,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackContributionQuestionDetails,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackContributionResponseDetails,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackMcqResponseDetails,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackMsqQuestionDetails,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackMsqResponseDetails,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackNumericalScaleResponseDetails,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  FeedbackRankOptionsQuestionDetails,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  FeedbackRankOptionsResponseDetails,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  FeedbackRubricQuestionDetails,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  FeedbackRubricResponseDetails,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  FeedbackTextResponseDetails,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  JoinState,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModule,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form.module\u0027;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"import { SessionSubmissionPageComponent } from \u0027./session-submission-page.component\u0027;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"import Spy \u003d jasmine.Spy;"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"describe(\u0027SessionSubmissionPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  const deepCopy: \u003cT\u003e(obj: T) \u003d\u003e T \u003d \u003cT\u003e(obj: T) \u003d\u003e JSON.parse(JSON.stringify(obj));"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  const testStudent: Student \u003d {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    email: \u0027alice@tmms.com\u0027,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    courseId: \u0027course-id\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    name: \u0027Alice Betsy\u0027,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    teamName: \u0027Team 1\u0027,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    sectionName: \u0027Section 1\u0027,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"  const testInstructor: Instructor \u003d {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    courseId: \u0027course-id\u0027,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    email: \u0027test@example.com\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    name: \u0027Instructor Ho\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    joinState: JoinState.JOINED,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  const testOpenFeedbackSession: FeedbackSession \u003d {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    instructions: \u0027Instructions\u0027,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 1000000000000,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: Date.now() + 10 * 60 * 1000,  // 10 minutes before closing"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"  const testComment: FeedbackResponseComment \u003d {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    commentGiver: \u0027comment giver\u0027,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    lastEditorEmail: \u0027last-editor@email.com\u0027,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    feedbackResponseCommentId: 1,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    commentText: \u0027comment text\u0027,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    createdAt: 10000000,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    lastEditedAt: 20000000,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    isVisibilityFollowingFeedbackQuestion: true,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-1\u0027,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text here\u0027,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm2: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-2\u0027,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027recipient-identifier\u0027,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"  const testTextRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-3\u0027,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    } as FeedbackTextResponseDetails,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text here\u0027,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm3: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-4\u0027,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      answer: \u0027barry-harris-answer\u0027,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm4: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-5\u0027,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      answer: \u0027gene-harris-answer\u0027,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"  const testMsqRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-6\u0027,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      answers: [\u0027answer 1\u0027, \u0027answer 2\u0027],"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      isOther: false,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      otherFieldContent: \u0027other field content\u0027,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MSQ,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    } as FeedbackMsqResponseDetails,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"  const testNumscaleRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-7\u0027,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"  const testConstsumRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-8\u0027,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      answers: [7, 13],"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"  const testContribRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-9\u0027,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      answer: 20,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"  const testRubricRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-10\u0027,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      answer: [3, 4],"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"  const testRankOptionsRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-11\u0027,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      answers: [2, 1],"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    } as FeedbackRankOptionsResponseDetails,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"  const testRankRecipientsRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-12\u0027,"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      minOptionsToBeRanked: 1,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      maxOptionsToBeRanked: 2,"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      areDuplicatesAllowed: false,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"  const testResponse1: FeedbackResponse \u003d {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    feedbackResponseId: \u0027response-id-4\u0027,"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    giverIdentifier: \u0027giver-identifier\u0027,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      answer: \u0027barry-harris-answer\u0027,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"  const testResponse2: FeedbackResponse \u003d {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    feedbackResponseId: \u0027response-id-5\u0027,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    giverIdentifier: \u0027giver-identifier\u0027,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      answer: \u0027gene-harris-answer\u0027,"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"  const testMcqQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-mcq\u0027,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    questionNumber: 1,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMcqRecipientSubmissionForm],"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.STUDENTS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"  const testMcqQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-mcq-2\u0027,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    questionNumber: 2,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.TEAMS,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    recipientList: ["},{"lineNumber":324,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        recipientName: \u0027Barry Harris\u0027,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        recipientName: \u0027Gene Harris\u0027,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMcqRecipientSubmissionForm3, testMcqRecipientSubmissionForm4],"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"  const testTextQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-text\u0027,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    questionNumber: 3,"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testTextRecipientSubmissionForm],"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"  const testMsqQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-msq\u0027,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    questionNumber: 4,"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    questionBrief: \u0027MSQ question\u0027,"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MSQ,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"      msqChoices: [\u0027first\u0027, \u0027second\u0027 , \u0027third\u0027],"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      otherEnabled: false,"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      hasAssignedWeights: true,"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      msqWeights: [1, 2, 3],"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      maxSelectableChoices: 2,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      minSelectableChoices: 1,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    } as FeedbackMsqQuestionDetails,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMsqRecipientSubmissionForm],"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":385,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"  const testNumscaleQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-numscale\u0027,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    questionNumber: 5,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    questionBrief: \u0027numerical scale question\u0027,"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      minScale: 1,"},{"lineNumber":395,"author":{"gitId":"-"},"content":"      maxScale: 10,"},{"lineNumber":396,"author":{"gitId":"-"},"content":"      step: 1,"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testNumscaleRecipientSubmissionForm],"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":407,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"  const testConstsumQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-constsum\u0027,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    questionNumber: 6,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    questionBrief: \u0027constant sum question\u0027,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONSTSUM_RECIPIENTS,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      constSumOptions: [\u0027option 1\u0027, \u0027option 2\u0027],"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      distributeToRecipients: true,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      pointsPerOption: true,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      forceUnevenDistribution: false,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"      distributePointsFor: \u0027distribute points for\u0027,"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      points: 20,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumQuestionDetails,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testConstsumRecipientSubmissionForm],"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"  const testContribQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-contrib\u0027,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    questionNumber: 7,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    questionBrief: \u0027contribution question\u0027,"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      isNotSureAllowed: false,"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    } as FeedbackContributionQuestionDetails,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testContribRecipientSubmissionForm],"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":452,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"  const testRubricQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rubric\u0027,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    questionNumber: 8,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      hasAssignedWeights: false,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      rubricWeightsForEachCell: [[1, 2], [2, 1]],"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      rubricChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027],"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      rubricSubQuestions: [\u0027subquestion 1\u0027, \u0027subquestion 2\u0027],"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      rubricDescriptions: [[\u0027description 1\u0027, \u0027description 2\u0027], [\u0027description 3\u0027, \u0027description 4\u0027]],"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    } as FeedbackRubricQuestionDetails,"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRubricRecipientSubmissionForm],"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":476,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"  const testRankOptionsQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rank-options\u0027,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    questionNumber: 9,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RANK_OPTIONS,"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      options: [\u0027option 1\u0027, \u0027option 2\u0027],"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    } as FeedbackRankOptionsQuestionDetails,"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRankOptionsRecipientSubmissionForm],"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":496,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"  const testRankRecipientsQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rank-recipients\u0027,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    questionNumber: 10,"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      minOptionsToBeRanked: 1,"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      maxOptionsToBeRanked: 2,"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      areDuplicatesAllowed: false,"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRankRecipientsRecipientSubmissionForm],"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":514,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":518,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"  const testInfo: AuthInfo \u003d {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    masquerade: false,"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    user: {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      id: \u0027user-id\u0027,"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      isAdmin: false,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"      isInstructor: false,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      isStudent: true,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      isMaintainer: false,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":529,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"  const testQueryParams: any \u003d {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    courseid: \u0027CS3281\u0027,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    fsname: \u0027Feedback Session Name\u0027,"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    key: \u0027reg-key\u0027,"},{"lineNumber":535,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"  const getFeedbackSessionArgs: any \u003d {"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    courseId: testQueryParams.courseid,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    feedbackSessionName: testQueryParams.fsname,"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    intent: Intent.STUDENT_SUBMISSION,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    key: testQueryParams.key,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    moderatedPerson: \u0027\u0027,"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    previewAs: \u0027\u0027,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":545,"author":{"gitId":"-"},"content":""},{"lineNumber":546,"author":{"gitId":"-"},"content":"  let component: SessionSubmissionPageComponent;"},{"lineNumber":547,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cSessionSubmissionPageComponent\u003e;"},{"lineNumber":548,"author":{"gitId":"-"},"content":"  let authService: AuthService;"},{"lineNumber":549,"author":{"gitId":"-"},"content":"  let navService: NavigationService;"},{"lineNumber":550,"author":{"gitId":"-"},"content":"  let studentService: StudentService;"},{"lineNumber":551,"author":{"gitId":"-"},"content":"  let instructorService: InstructorService;"},{"lineNumber":552,"author":{"gitId":"-"},"content":"  let feedbackSessionsService: FeedbackSessionsService;"},{"lineNumber":553,"author":{"gitId":"-"},"content":"  let feedbackResponsesService: FeedbackResponsesService;"},{"lineNumber":554,"author":{"gitId":"-"},"content":"  let feedbackResponseCommentService: FeedbackResponseCommentService;"},{"lineNumber":555,"author":{"gitId":"-"},"content":"  let feedbackQuestionsService: FeedbackQuestionsService;"},{"lineNumber":556,"author":{"gitId":"-"},"content":"  let simpleModalService: SimpleModalService;"},{"lineNumber":557,"author":{"gitId":"-"},"content":"  let ngbModal: NgbModal;"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":561,"author":{"gitId":"-"},"content":"      declarations: [SessionSubmissionPageComponent, SavingCompleteModalComponent],"},{"lineNumber":562,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":563,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        NgxPageScrollCoreModule,"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        QuestionSubmissionFormModule,"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":574,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":575,"author":{"gitId":"-"},"content":"          provide: ActivatedRoute,"},{"lineNumber":576,"author":{"gitId":"-"},"content":"          useValue: {"},{"lineNumber":577,"author":{"gitId":"-"},"content":"            data: {"},{"lineNumber":578,"author":{"gitId":"-"},"content":"              intent: Intent.STUDENT_SUBMISSION,"},{"lineNumber":579,"author":{"gitId":"-"},"content":"              pipe: () \u003d\u003e {"},{"lineNumber":580,"author":{"gitId":"-"},"content":"                return {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"                  subscribe: (fn: (value: any) \u003d\u003e void) \u003d\u003e fn(testQueryParams),"},{"lineNumber":582,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":583,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":584,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":585,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":590,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":591,"author":{"gitId":"-"},"content":""},{"lineNumber":592,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(SessionSubmissionPageComponent);"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":595,"author":{"gitId":"-"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    instructorService \u003d TestBed.inject(InstructorService);"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    feedbackQuestionsService \u003d TestBed.inject(FeedbackQuestionsService);"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    feedbackResponsesService \u003d TestBed.inject(FeedbackResponsesService);"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    feedbackResponseCommentService \u003d TestBed.inject(FeedbackResponseCommentService);"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    feedbackSessionsService \u003d TestBed.inject(FeedbackSessionsService);"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    simpleModalService \u003d TestBed.inject(SimpleModalService);"},{"lineNumber":603,"author":{"gitId":"-"},"content":"    ngbModal \u003d TestBed.inject(NgbModal);"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":606,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":610,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":611,"author":{"gitId":"-"},"content":""},{"lineNumber":612,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":614,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":615,"author":{"gitId":"-"},"content":""},{"lineNumber":616,"author":{"gitId":"-"},"content":"  it(\u0027should snap when feedback session questions have failed to load\u0027, () \u003d\u003e {"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    component.retryAttempts \u003d 0;"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    component.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":621,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"  it(\u0027should snap when saving responses\u0027, () \u003d\u003e {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    component.isSavingResponses \u003d true;"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":627,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027alice\u0027;"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":633,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":634,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":635,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is not logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":639,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027\u0027;"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":641,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":643,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":644,"author":{"gitId":"-"},"content":""},{"lineNumber":645,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session and user details\u0027, () \u003d\u003e {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"    component.courseId \u003d \u0027test.exa-demo\u0027;"},{"lineNumber":647,"author":{"gitId":"-"},"content":"    component.feedbackSessionName \u003d \u0027First team feedback session\u0027;"},{"lineNumber":648,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027logged-in-user\u0027;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027person name\u0027;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    component.personEmail \u003d \u0027person@email.com\u0027;"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    component.formattedSessionOpeningTime \u003d \u0027Sun, 01 Apr, 2012, 11:59 PM +08\u0027;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    component.formattedSessionClosingTime \u003d \u0027Mon, 02 Apr, 2012, 11:59 PM +08\u0027;"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    component.feedbackSessionInstructions \u003d \u0027Please give your feedback based on the following questions.\u0027;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":657,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":658,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":659,"author":{"gitId":"-"},"content":""},{"lineNumber":660,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session question submission forms\u0027, () \u003d\u003e {"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d ["},{"lineNumber":662,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm,"},{"lineNumber":663,"author":{"gitId":"-"},"content":"      testTextQuestionSubmissionForm,"},{"lineNumber":664,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm2,"},{"lineNumber":665,"author":{"gitId":"-"},"content":"      testMsqQuestionSubmissionForm,"},{"lineNumber":666,"author":{"gitId":"-"},"content":"      testNumscaleQuestionSubmissionForm,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      testConstsumQuestionSubmissionForm,"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      testContribQuestionSubmissionForm,"},{"lineNumber":669,"author":{"gitId":"-"},"content":"      testRubricQuestionSubmissionForm,"},{"lineNumber":670,"author":{"gitId":"-"},"content":"      testRankOptionsQuestionSubmissionForm,"},{"lineNumber":671,"author":{"gitId":"-"},"content":"      testRankRecipientsQuestionSubmissionForm,"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionResponsesLoading \u003d false;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":678,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session question submission forms when disabled\u0027, () \u003d\u003e {"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d ["},{"lineNumber":682,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm,"},{"lineNumber":683,"author":{"gitId":"-"},"content":"      testTextQuestionSubmissionForm,"},{"lineNumber":684,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm2,"},{"lineNumber":685,"author":{"gitId":"-"},"content":"      testMsqQuestionSubmissionForm,"},{"lineNumber":686,"author":{"gitId":"-"},"content":"      testNumscaleQuestionSubmissionForm,"},{"lineNumber":687,"author":{"gitId":"-"},"content":"      testConstsumQuestionSubmissionForm,"},{"lineNumber":688,"author":{"gitId":"-"},"content":"      testContribQuestionSubmissionForm,"},{"lineNumber":689,"author":{"gitId":"-"},"content":"      testRubricQuestionSubmissionForm,"},{"lineNumber":690,"author":{"gitId":"-"},"content":"      testRankOptionsQuestionSubmissionForm,"},{"lineNumber":691,"author":{"gitId":"-"},"content":"      testRankRecipientsQuestionSubmissionForm,"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":693,"author":{"gitId":"-"},"content":"    component.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":694,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionResponsesLoading \u003d false;"},{"lineNumber":697,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":698,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":699,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":700,"author":{"gitId":"-"},"content":""},{"lineNumber":701,"author":{"gitId":"-"},"content":"  it(\u0027should fetch auth info on init\u0027, () \u003d\u003e {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":704,"author":{"gitId":"-"},"content":"    expect(component.intent).toEqual(Intent.STUDENT_SUBMISSION);"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    expect(component.courseId).toEqual(testQueryParams.courseid);"},{"lineNumber":706,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionName).toEqual(testQueryParams.fsname);"},{"lineNumber":707,"author":{"gitId":"-"},"content":"    expect(component.regKey).toEqual(testQueryParams.key);"},{"lineNumber":708,"author":{"gitId":"-"},"content":"    expect(component.loggedInUser).toEqual(testInfo.user?.id);"},{"lineNumber":709,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":710,"author":{"gitId":"-"},"content":""},{"lineNumber":711,"author":{"gitId":"-"},"content":"  it(\u0027should verify allowed access with used reg key\u0027, () \u003d\u003e {"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":714,"author":{"gitId":"-"},"content":"      isUsed: true,"},{"lineNumber":715,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":716,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":718,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthRegkeyValidity\u0027).and.returnValue(of(testValidity));"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURLWithParamEncoding\u0027);"},{"lineNumber":720,"author":{"gitId":"-"},"content":""},{"lineNumber":721,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":722,"author":{"gitId":"-"},"content":""},{"lineNumber":723,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":724,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/student/sessions/submission\u0027);"},{"lineNumber":725,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":726,"author":{"gitId":"-"},"content":""},{"lineNumber":727,"author":{"gitId":"-"},"content":"  it(\u0027should deny unallowed access with valid reg key for logged in user\u0027, () \u003d\u003e {"},{"lineNumber":728,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":729,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":730,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":731,"author":{"gitId":"-"},"content":"      isValid: true,"},{"lineNumber":732,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":733,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":734,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthRegkeyValidity\u0027).and.returnValue(of(testValidity));"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateWithErrorMessage\u0027);"},{"lineNumber":736,"author":{"gitId":"-"},"content":""},{"lineNumber":737,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":738,"author":{"gitId":"-"},"content":""},{"lineNumber":739,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/front\u0027);"},{"lineNumber":741,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[2]).toEqual("},{"lineNumber":742,"author":{"gitId":"-"},"content":"        `You are trying to access TEAMMATES using the Google account user-id, which"},{"lineNumber":743,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":744,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":747,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"  it(\u0027should deny unallowed access with invalid reg key\u0027, () \u003d\u003e {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":751,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":752,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":753,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":754,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":755,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":756,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthRegkeyValidity\u0027).and.returnValue(of(testValidity));"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateWithErrorMessage\u0027);"},{"lineNumber":758,"author":{"gitId":"-"},"content":""},{"lineNumber":759,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":760,"author":{"gitId":"-"},"content":""},{"lineNumber":761,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/front\u0027);"},{"lineNumber":763,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"  it(\u0027should load a student name\u0027, () \u003d\u003e {"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    component.intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":767,"author":{"gitId":"-"},"content":"    spyOn(studentService, \u0027getStudent\u0027).and.returnValue(of(testStudent));"},{"lineNumber":768,"author":{"gitId":"-"},"content":"    component.loadPersonName();"},{"lineNumber":769,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(testStudent.name);"},{"lineNumber":770,"author":{"gitId":"-"},"content":"    expect(component.personEmail).toEqual(testStudent.email);"},{"lineNumber":771,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":772,"author":{"gitId":"-"},"content":""},{"lineNumber":773,"author":{"gitId":"-"},"content":"  it(\u0027should load an instructor name\u0027, () \u003d\u003e {"},{"lineNumber":774,"author":{"gitId":"-"},"content":"    component.intent \u003d Intent.INSTRUCTOR_SUBMISSION;"},{"lineNumber":775,"author":{"gitId":"-"},"content":"    spyOn(instructorService, \u0027getInstructor\u0027).and.returnValue(of(testInstructor));"},{"lineNumber":776,"author":{"gitId":"-"},"content":"    component.loadPersonName();"},{"lineNumber":777,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(testInstructor.name);"},{"lineNumber":778,"author":{"gitId":"-"},"content":"    expect(component.personEmail).toEqual(testInstructor.email);"},{"lineNumber":779,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":780,"author":{"gitId":"-"},"content":""},{"lineNumber":781,"author":{"gitId":"-"},"content":"  it(\u0027should join course for unregistered student\u0027, () \u003d\u003e {"},{"lineNumber":782,"author":{"gitId":"-"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":783,"author":{"gitId":"-"},"content":"    component.joinCourseForUnregisteredEntity();"},{"lineNumber":784,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":785,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/join\u0027);"},{"lineNumber":786,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[2]).toEqual({ entitytype: \u0027student\u0027, key: testQueryParams.key });"},{"lineNumber":787,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"-"},"content":"  it(\u0027should load an open feedback session\u0027, () \u003d\u003e {"},{"lineNumber":790,"author":{"gitId":"-"},"content":"    const fsSpy: Spy \u003d spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        .and.returnValue(of(testOpenFeedbackSession));"},{"lineNumber":792,"author":{"gitId":"-"},"content":"    const modalSpy: Spy \u003d spyOn(simpleModalService, \u0027openInformationModal\u0027);"},{"lineNumber":793,"author":{"gitId":"-"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":795,"author":{"gitId":"-"},"content":""},{"lineNumber":796,"author":{"gitId":"-"},"content":"    expect(fsSpy.calls.count()).toEqual(1);"},{"lineNumber":797,"author":{"gitId":"-"},"content":"    expect(fsSpy.calls.mostRecent().args[0]).toEqual(getFeedbackSessionArgs);"},{"lineNumber":798,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.count()).toEqual(1);"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.mostRecent().args[0]).toEqual(\u0027Feedback Session Will Be Closing Soon!\u0027);"},{"lineNumber":800,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testOpenFeedbackSession.instructions);"},{"lineNumber":801,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testOpenFeedbackSession.submissionStatus);"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testOpenFeedbackSession.timeZone);"},{"lineNumber":803,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(false);"},{"lineNumber":804,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":805,"author":{"gitId":"-"},"content":""},{"lineNumber":806,"author":{"gitId":"-"},"content":"  it(\u0027should load a closed feedback session\u0027, () \u003d\u003e {"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    const testClosedFeedbackSession: FeedbackSession \u003d deepCopy(testOpenFeedbackSession);"},{"lineNumber":808,"author":{"gitId":"-"},"content":"    testClosedFeedbackSession.submissionStatus \u003d FeedbackSessionSubmissionStatus.CLOSED;"},{"lineNumber":809,"author":{"gitId":"-"},"content":"    const fsSpy: Spy \u003d spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        .and.returnValue(of(testClosedFeedbackSession));"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    const modalSpy: Spy \u003d spyOn(simpleModalService, \u0027openInformationModal\u0027);"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":814,"author":{"gitId":"-"},"content":""},{"lineNumber":815,"author":{"gitId":"-"},"content":"    expect(fsSpy.calls.count()).toEqual(1);"},{"lineNumber":816,"author":{"gitId":"-"},"content":"    expect(fsSpy.calls.mostRecent().args[0]).toEqual(getFeedbackSessionArgs);"},{"lineNumber":817,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.count()).toEqual(1);"},{"lineNumber":818,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.mostRecent().args[0]).toEqual(\u0027Feedback Session Closed\u0027);"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testClosedFeedbackSession.instructions);"},{"lineNumber":820,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testClosedFeedbackSession.submissionStatus);"},{"lineNumber":821,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testClosedFeedbackSession.timeZone);"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(true);"},{"lineNumber":823,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":824,"author":{"gitId":"-"},"content":""},{"lineNumber":825,"author":{"gitId":"-"},"content":"  it(\u0027should load a visible not open feedback session\u0027, () \u003d\u003e {"},{"lineNumber":826,"author":{"gitId":"-"},"content":"    const testVisibleNotOpenFeedbackSession: FeedbackSession \u003d deepCopy(testOpenFeedbackSession);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    testVisibleNotOpenFeedbackSession.submissionStatus \u003d FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN;"},{"lineNumber":828,"author":{"gitId":"-"},"content":"    const fsSpy: Spy \u003d spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":829,"author":{"gitId":"-"},"content":"        .and.returnValue(of(testVisibleNotOpenFeedbackSession));"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    const modalSpy: Spy \u003d spyOn(simpleModalService, \u0027openInformationModal\u0027);"},{"lineNumber":831,"author":{"gitId":"-"},"content":""},{"lineNumber":832,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":833,"author":{"gitId":"-"},"content":""},{"lineNumber":834,"author":{"gitId":"-"},"content":"    expect(fsSpy.calls.count()).toEqual(1);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    expect(fsSpy.calls.mostRecent().args[0]).toEqual(getFeedbackSessionArgs);"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.count()).toEqual(1);"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.mostRecent().args[0]).toEqual(\u0027Feedback Session Not Open\u0027);"},{"lineNumber":838,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testVisibleNotOpenFeedbackSession.instructions);"},{"lineNumber":839,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testVisibleNotOpenFeedbackSession.submissionStatus);"},{"lineNumber":840,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testVisibleNotOpenFeedbackSession.timeZone);"},{"lineNumber":841,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(true);"},{"lineNumber":842,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":843,"author":{"gitId":"-"},"content":""},{"lineNumber":844,"author":{"gitId":"-"},"content":"  it(\u0027should redirect when loading non-existent feedback session\u0027, () \u003d\u003e {"},{"lineNumber":845,"author":{"gitId":"-"},"content":"    spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027).and.returnValue(throwError({"},{"lineNumber":846,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is an error\u0027 },"},{"lineNumber":847,"author":{"gitId":"-"},"content":"      status: 404,"},{"lineNumber":848,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":849,"author":{"gitId":"-"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":850,"author":{"gitId":"-"},"content":"    const modalSpy: Spy \u003d spyOn(simpleModalService, \u0027openInformationModal\u0027);"},{"lineNumber":851,"author":{"gitId":"-"},"content":""},{"lineNumber":852,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":853,"author":{"gitId":"-"},"content":""},{"lineNumber":854,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.count()).toEqual(1);"},{"lineNumber":855,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.mostRecent().args[0]).toEqual(\u0027Feedback Session Does Not Exist!\u0027);"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":857,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/student/home\u0027);"},{"lineNumber":858,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":859,"author":{"gitId":"-"},"content":""},{"lineNumber":860,"author":{"gitId":"-"},"content":"  it(\u0027should redirect when loading non-viewable feedback session\u0027, () \u003d\u003e {"},{"lineNumber":861,"author":{"gitId":"-"},"content":"    spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027).and.returnValue(throwError({"},{"lineNumber":862,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is an error\u0027 },"},{"lineNumber":863,"author":{"gitId":"-"},"content":"      status: 403,"},{"lineNumber":864,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":865,"author":{"gitId":"-"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":866,"author":{"gitId":"-"},"content":"    const modalSpy: Spy \u003d spyOn(simpleModalService, \u0027openInformationModal\u0027);"},{"lineNumber":867,"author":{"gitId":"-"},"content":""},{"lineNumber":868,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":869,"author":{"gitId":"-"},"content":""},{"lineNumber":870,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.count()).toEqual(1);"},{"lineNumber":871,"author":{"gitId":"-"},"content":"    expect(modalSpy.calls.mostRecent().args[0]).toEqual(\u0027Not Authorised To Access!\u0027);"},{"lineNumber":872,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":873,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/student/home\u0027);"},{"lineNumber":874,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":875,"author":{"gitId":"-"},"content":""},{"lineNumber":876,"author":{"gitId":"-"},"content":"  it(\u0027should load feedback questions and recipients and responses\u0027, () \u003d\u003e {"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    const testFeedbackQuestions: FeedbackQuestions \u003d {"},{"lineNumber":878,"author":{"gitId":"-"},"content":"      questions: ["},{"lineNumber":879,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":880,"author":{"gitId":"-"},"content":"          feedbackQuestionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":881,"author":{"gitId":"-"},"content":"          questionNumber: testMcqQuestionSubmissionForm2.questionNumber,"},{"lineNumber":882,"author":{"gitId":"-"},"content":"          questionBrief: testMcqQuestionSubmissionForm2.questionBrief,"},{"lineNumber":883,"author":{"gitId":"-"},"content":"          questionDescription: testMcqQuestionSubmissionForm2.questionDescription,"},{"lineNumber":884,"author":{"gitId":"-"},"content":"          questionDetails: testMcqQuestionSubmissionForm2.questionDetails,"},{"lineNumber":885,"author":{"gitId":"-"},"content":"          questionType: testMcqQuestionSubmissionForm2.questionType,"},{"lineNumber":886,"author":{"gitId":"-"},"content":"          giverType: testMcqQuestionSubmissionForm2.giverType,"},{"lineNumber":887,"author":{"gitId":"-"},"content":"          recipientType: testMcqQuestionSubmissionForm2.recipientType,"},{"lineNumber":888,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting:"},{"lineNumber":889,"author":{"gitId":"-"},"content":"            testMcqQuestionSubmissionForm2.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":890,"author":{"gitId":"-"},"content":"          customNumberOfEntitiesToGiveFeedbackTo: testMcqQuestionSubmissionForm2.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":891,"author":{"gitId":"-"},"content":"          showResponsesTo: testMcqQuestionSubmissionForm2.showResponsesTo,"},{"lineNumber":892,"author":{"gitId":"-"},"content":"          showGiverNameTo: testMcqQuestionSubmissionForm2.showGiverNameTo,"},{"lineNumber":893,"author":{"gitId":"-"},"content":"          showRecipientNameTo: testMcqQuestionSubmissionForm2.showRecipientNameTo,"},{"lineNumber":894,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":895,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":896,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":897,"author":{"gitId":"-"},"content":"    const testFeedbackQuestionRecipients: FeedbackQuestionRecipients \u003d {"},{"lineNumber":898,"author":{"gitId":"-"},"content":"      recipients: ["},{"lineNumber":899,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":900,"author":{"gitId":"-"},"content":"          name: \u0027Barry Harris\u0027,"},{"lineNumber":901,"author":{"gitId":"-"},"content":"          identifier: \u0027barry-harris-id\u0027,"},{"lineNumber":902,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":903,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":904,"author":{"gitId":"-"},"content":"          name: \u0027Gene Harris\u0027,"},{"lineNumber":905,"author":{"gitId":"-"},"content":"          identifier: \u0027gene-harris-id\u0027,"},{"lineNumber":906,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":907,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":908,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":909,"author":{"gitId":"-"},"content":"    const testExistingResponses: FeedbackResponses \u003d {"},{"lineNumber":910,"author":{"gitId":"-"},"content":"      responses: [testResponse1, testResponse2],"},{"lineNumber":911,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":912,"author":{"gitId":"-"},"content":""},{"lineNumber":913,"author":{"gitId":"-"},"content":"    const getQuestionsSpy: Spy \u003d spyOn(feedbackQuestionsService, \u0027getFeedbackQuestions\u0027)"},{"lineNumber":914,"author":{"gitId":"-"},"content":"        .and.returnValue(of(testFeedbackQuestions));"},{"lineNumber":915,"author":{"gitId":"-"},"content":"    const loadRecipientsSpy: Spy \u003d spyOn(feedbackQuestionsService, \u0027loadFeedbackQuestionRecipients\u0027)"},{"lineNumber":916,"author":{"gitId":"-"},"content":"        .and.returnValue(of(testFeedbackQuestionRecipients));"},{"lineNumber":917,"author":{"gitId":"-"},"content":"    const getResponseSpy: Spy \u003d spyOn(feedbackResponsesService, \u0027getFeedbackResponse\u0027)"},{"lineNumber":918,"author":{"gitId":"-"},"content":"        .and.returnValue(of(testExistingResponses));"},{"lineNumber":919,"author":{"gitId":"-"},"content":""},{"lineNumber":920,"author":{"gitId":"-"},"content":"    component.loadFeedbackQuestions();"},{"lineNumber":921,"author":{"gitId":"-"},"content":""},{"lineNumber":922,"author":{"gitId":"-"},"content":"    expect(getQuestionsSpy.calls.mostRecent().args[0]).toEqual(getFeedbackSessionArgs);"},{"lineNumber":923,"author":{"gitId":"-"},"content":"    expect(loadRecipientsSpy.calls.mostRecent().args[0].questionId)"},{"lineNumber":924,"author":{"gitId":"-"},"content":"        .toEqual(testMcqQuestionSubmissionForm2.feedbackQuestionId);"},{"lineNumber":925,"author":{"gitId":"-"},"content":"    expect(getResponseSpy.calls.mostRecent().args[0].questionId)"},{"lineNumber":926,"author":{"gitId":"-"},"content":"        .toEqual(testMcqQuestionSubmissionForm2.feedbackQuestionId);"},{"lineNumber":927,"author":{"gitId":"-"},"content":"    expect(component.questionSubmissionForms.length).toEqual(1);"},{"lineNumber":928,"author":{"gitId":"-"},"content":"    expect(component.questionSubmissionForms[0]).toEqual(testMcqQuestionSubmissionForm2);"},{"lineNumber":929,"author":{"gitId":"-"},"content":"    expect(component.hasAnyResponseToSubmit).toEqual(true);"},{"lineNumber":930,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":931,"author":{"gitId":"-"},"content":""},{"lineNumber":932,"author":{"gitId":"-"},"content":"  it(\u0027should check that there are no responses to submit\u0027, () \u003d\u003e {"},{"lineNumber":933,"author":{"gitId":"-"},"content":"    const testSubmissionForm: QuestionSubmissionFormModel \u003d deepCopy(testTextQuestionSubmissionForm);"},{"lineNumber":934,"author":{"gitId":"-"},"content":"    testSubmissionForm.recipientSubmissionForms \u003d [];"},{"lineNumber":935,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testSubmissionForm];"},{"lineNumber":936,"author":{"gitId":"-"},"content":"    expect(component.hasAnyResponseToSubmit).toEqual(false);"},{"lineNumber":937,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":938,"author":{"gitId":"-"},"content":""},{"lineNumber":939,"author":{"gitId":"-"},"content":"  it(\u0027should save feedback responses\u0027, () \u003d\u003e {"},{"lineNumber":940,"author":{"gitId":"-"},"content":"    const mockModalRef: any \u003d { componentInstance: {} };"},{"lineNumber":941,"author":{"gitId":"-"},"content":"    const testResponseDetails1: any \u003d deepCopy(testMcqRecipientSubmissionForm.responseDetails);"},{"lineNumber":942,"author":{"gitId":"-"},"content":"    // leave question unanswered"},{"lineNumber":943,"author":{"gitId":"-"},"content":"    const testResponseDetails2: FeedbackTextResponseDetails \u003d { answer: \u0027\u0027, questionType: FeedbackQuestionType.TEXT };"},{"lineNumber":944,"author":{"gitId":"-"},"content":"    const testQuestionSubmissionForm1: QuestionSubmissionFormModel \u003d deepCopy(testMcqQuestionSubmissionForm);"},{"lineNumber":945,"author":{"gitId":"-"},"content":"    const testQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d deepCopy(testTextQuestionSubmissionForm);"},{"lineNumber":946,"author":{"gitId":"-"},"content":"    testQuestionSubmissionForm1.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails1;"},{"lineNumber":947,"author":{"gitId":"-"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails2;"},{"lineNumber":948,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testQuestionSubmissionForm1, testQuestionSubmissionForm2];"},{"lineNumber":949,"author":{"gitId":"-"},"content":""},{"lineNumber":950,"author":{"gitId":"-"},"content":"    const responseSpy: Spy \u003d spyOn(feedbackResponsesService, \u0027submitFeedbackResponses\u0027).and.callFake((id: string) \u003d\u003e {"},{"lineNumber":951,"author":{"gitId":"-"},"content":"      if (id \u003d\u003d\u003d testQuestionSubmissionForm1.feedbackQuestionId) {"},{"lineNumber":952,"author":{"gitId":"-"},"content":"        return of({ responses: [testResponse1], requestId: \u002710\u0027 });"},{"lineNumber":953,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":954,"author":{"gitId":"-"},"content":"      return of({ responses: [testResponse2], requestId: \u002720\u0027 });"},{"lineNumber":955,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":956,"author":{"gitId":"-"},"content":"    spyOn(feedbackResponseCommentService, \u0027createComment\u0027).and.returnValue(of({}));"},{"lineNumber":957,"author":{"gitId":"-"},"content":"    spyOn(feedbackResponseCommentService, \u0027updateComment\u0027).and.returnValue(of({}));"},{"lineNumber":958,"author":{"gitId":"-"},"content":"    spyOn(ngbModal, \u0027open\u0027).and.returnValue(mockModalRef);"},{"lineNumber":959,"author":{"gitId":"-"},"content":""},{"lineNumber":960,"author":{"gitId":"-"},"content":"    component.saveFeedbackResponses();"},{"lineNumber":961,"author":{"gitId":"-"},"content":""},{"lineNumber":962,"author":{"gitId":"-"},"content":"    expect(responseSpy).toBeCalledTimes(2);"},{"lineNumber":963,"author":{"gitId":"-"},"content":"    expect(responseSpy.calls.first().args[0]).toEqual(\u0027feedback-question-id-mcq\u0027);"},{"lineNumber":964,"author":{"gitId":"-"},"content":"    expect(responseSpy.calls.first().args[2].responses[0].responseDetails).toEqual(testResponseDetails1);"},{"lineNumber":965,"author":{"gitId":"-"},"content":"    expect(responseSpy.calls.mostRecent().args[0]).toEqual(\u0027feedback-question-id-text\u0027);"},{"lineNumber":966,"author":{"gitId":"-"},"content":"    expect(responseSpy.calls.mostRecent().args[2].responses).toEqual([]);  // do not call for empty response details"},{"lineNumber":967,"author":{"gitId":"-"},"content":""},{"lineNumber":968,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.requestIds).toEqual({"},{"lineNumber":969,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-mcq\u0027: \u002710\u0027,"},{"lineNumber":970,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-text\u0027: \u002720\u0027,"},{"lineNumber":971,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":972,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.questions).toEqual(["},{"lineNumber":973,"author":{"gitId":"-"},"content":"      testQuestionSubmissionForm1,"},{"lineNumber":974,"author":{"gitId":"-"},"content":"      testQuestionSubmissionForm2,"},{"lineNumber":975,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":976,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.answers).toEqual({"},{"lineNumber":977,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-mcq\u0027: [testResponse1],"},{"lineNumber":978,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-text\u0027: [testResponse2],"},{"lineNumber":979,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":980,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.notYetAnsweredQuestions).toHaveLength(1);"},{"lineNumber":981,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.failToSaveQuestions).toEqual({});"},{"lineNumber":982,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":983,"author":{"gitId":"-"},"content":""},{"lineNumber":984,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should not save invalid feedback responses\u0027, () \u003d\u003e {"},{"lineNumber":985,"author":{"gitId":"zhaojj2209"},"content":"    const mockModalRef: any \u003d { componentInstance: {} };"},{"lineNumber":986,"author":{"gitId":"zhaojj2209"},"content":"    const testResponseDetails1: any \u003d deepCopy(testMcqRecipientSubmissionForm.responseDetails);"},{"lineNumber":987,"author":{"gitId":"zhaojj2209"},"content":"    const testResponseDetails2: any \u003d deepCopy(testConstsumRecipientSubmissionForm.responseDetails);"},{"lineNumber":988,"author":{"gitId":"zhaojj2209"},"content":"    const testQuestionSubmissionForm1: QuestionSubmissionFormModel \u003d deepCopy(testMcqQuestionSubmissionForm);"},{"lineNumber":989,"author":{"gitId":"zhaojj2209"},"content":"    const testQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d deepCopy(testConstsumQuestionSubmissionForm);"},{"lineNumber":990,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm1.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails1;"},{"lineNumber":991,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails2;"},{"lineNumber":992,"author":{"gitId":"zhaojj2209"},"content":"    // invalid response"},{"lineNumber":993,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].isValid \u003d false;"},{"lineNumber":994,"author":{"gitId":"zhaojj2209"},"content":"    component.questionSubmissionForms \u003d [testQuestionSubmissionForm1, testQuestionSubmissionForm2];"},{"lineNumber":995,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":996,"author":{"gitId":"zhaojj2209"},"content":"    const responseSpy: Spy \u003d spyOn(feedbackResponsesService, \u0027submitFeedbackResponses\u0027).and.callFake(() \u003d\u003e {"},{"lineNumber":997,"author":{"gitId":"zhaojj2209"},"content":"      return of({ responses: [testResponse1], requestId: \u002710\u0027 });"},{"lineNumber":998,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":999,"author":{"gitId":"zhaojj2209"},"content":"    spyOn(feedbackResponseCommentService, \u0027createComment\u0027).and.returnValue(of({}));"},{"lineNumber":1000,"author":{"gitId":"zhaojj2209"},"content":"    spyOn(feedbackResponseCommentService, \u0027updateComment\u0027).and.returnValue(of({}));"},{"lineNumber":1001,"author":{"gitId":"zhaojj2209"},"content":"    spyOn(ngbModal, \u0027open\u0027).and.returnValue(mockModalRef);"},{"lineNumber":1002,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1003,"author":{"gitId":"zhaojj2209"},"content":"    component.saveFeedbackResponses();"},{"lineNumber":1004,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1005,"author":{"gitId":"zhaojj2209"},"content":"    expect(responseSpy).toBeCalledTimes(1);"},{"lineNumber":1006,"author":{"gitId":"zhaojj2209"},"content":"    expect(responseSpy.calls.first().args[0]).toEqual(testQuestionSubmissionForm1.feedbackQuestionId);"},{"lineNumber":1007,"author":{"gitId":"zhaojj2209"},"content":"    expect(responseSpy.calls.first().args[2].responses[0].responseDetails).toEqual(testResponseDetails1);"},{"lineNumber":1008,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1009,"author":{"gitId":"zhaojj2209"},"content":"    // only the valid response is saved"},{"lineNumber":1010,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.requestIds).toEqual({"},{"lineNumber":1011,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm1.feedbackQuestionId]: \u002710\u0027,"},{"lineNumber":1012,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1013,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.questions).toEqual(["},{"lineNumber":1014,"author":{"gitId":"zhaojj2209"},"content":"      testQuestionSubmissionForm1,"},{"lineNumber":1015,"author":{"gitId":"zhaojj2209"},"content":"      testQuestionSubmissionForm2,"},{"lineNumber":1016,"author":{"gitId":"zhaojj2209"},"content":"    ]);"},{"lineNumber":1017,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.answers).toEqual({"},{"lineNumber":1018,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm1.feedbackQuestionId]: [testResponse1],"},{"lineNumber":1019,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1020,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.failToSaveQuestions).toEqual({"},{"lineNumber":1021,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm2.questionNumber]: \u0027Invalid responses provided. Please check question constraints.\u0027,"},{"lineNumber":1022,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1023,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":1024,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1025,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to create new comment when submission form has no original comment\u0027, () \u003d\u003e {"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testTextRecipientSubmissionForm);"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"    const commentSpy: Spy \u003d spyOn(feedbackResponseCommentService, \u0027createComment\u0027).and.returnValue(of(testComment));"},{"lineNumber":1028,"author":{"gitId":"-"},"content":""},{"lineNumber":1029,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual(component.getCommentModel(testComment));"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1032,"author":{"gitId":"-"},"content":""},{"lineNumber":1033,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.count()).toEqual(1);"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[0]).toEqual({"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[1]).toEqual(testTextRecipientSubmissionForm.responseId);"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[2]).toEqual(Intent.STUDENT_SUBMISSION);"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[3]).toEqual({ key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1043,"author":{"gitId":"-"},"content":""},{"lineNumber":1044,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to update existing comment when submission form has original comment\u0027, () \u003d\u003e {"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm);"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMcqRecipientSubmissionForm.commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"    const commentSpy: Spy \u003d spyOn(feedbackResponseCommentService, \u0027updateComment\u0027).and.returnValue(of(testComment));"},{"lineNumber":1048,"author":{"gitId":"-"},"content":""},{"lineNumber":1049,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual(component.getCommentModel(testComment));"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1052,"author":{"gitId":"-"},"content":""},{"lineNumber":1053,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.count()).toEqual(1);"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[0]).toEqual({"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[1]).toEqual(expectedId);"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[2]).toEqual(Intent.STUDENT_SUBMISSION);"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[3]).toEqual({ key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1063,"author":{"gitId":"-"},"content":""},{"lineNumber":1064,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to delete existing comment when new comment text is empty\u0027, () \u003d\u003e {"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm2);"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMcqRecipientSubmissionForm2.commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"    const commentSpy: Spy \u003d spyOn(feedbackResponseCommentService, \u0027deleteComment\u0027).and.returnValue(of({}));"},{"lineNumber":1068,"author":{"gitId":"-"},"content":""},{"lineNumber":1069,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual(undefined);"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1072,"author":{"gitId":"-"},"content":""},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.count()).toEqual(1);"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[0]).toEqual(expectedId);"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[1]).toEqual(Intent.STUDENT_SUBMISSION);"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[2]).toEqual({ key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1078,"author":{"gitId":"-"},"content":""},{"lineNumber":1079,"author":{"gitId":"-"},"content":"  it(\u0027should delete participant comment\u0027, () \u003d\u003e {"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"    const testSubmissionForm: QuestionSubmissionFormModel \u003d deepCopy(testMcqQuestionSubmissionForm);"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMcqQuestionSubmissionForm.recipientSubmissionForms[0]"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"        .commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"    const commentSpy: Spy \u003d spyOn(feedbackResponseCommentService, \u0027deleteComment\u0027).and.returnValue(of(true));"},{"lineNumber":1084,"author":{"gitId":"-"},"content":""},{"lineNumber":1085,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testSubmissionForm];"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"    component.deleteParticipantComment(0, 0);"},{"lineNumber":1087,"author":{"gitId":"-"},"content":""},{"lineNumber":1088,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.count()).toEqual(1);"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[0]).toEqual(expectedId);"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[1]).toEqual(Intent.STUDENT_SUBMISSION);"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"    expect(commentSpy.calls.mostRecent().args[2]).toEqual({ key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":41,"-":1052}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DOCUMENT } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PageScrollService } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipient,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSessionLogType,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { FeedbackResponseRequest, Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import { DEFAULT_NUMBER_OF_RETRY_ATTEMPTS } from \u0027../../../types/default-retry-attempts\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../../components/comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027../../components/error-report/error-report.component\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"interface FeedbackQuestionsResponse {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  questions: FeedbackQuestion[];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":57,"author":{"gitId":"-"},"content":" * A collection of feedback responses."},{"lineNumber":58,"author":{"gitId":"-"},"content":" */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"export interface FeedbackResponsesResponse {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  responses: FeedbackResponse[];"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Feedback session submission page."},{"lineNumber":65,"author":{"gitId":"-"},"content":" */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-submission-page\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-submission-page.component.html\u0027,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-submission-page.component.scss\u0027],"},{"lineNumber":70,"author":{"gitId":"-"},"content":"})"},{"lineNumber":71,"author":{"gitId":"-"},"content":"export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  Intent: typeof Intent \u003d Intent;"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  regKey: string \u003d \u0027\u0027;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  entityType: string \u003d \u0027student\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  loggedInUser: string \u003d \u0027\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  moderatedPerson: string \u003d \u0027\u0027;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  previewAsPerson: string \u003d \u0027\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  // the name of the person involved"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  // (e.g. the student name for unregistered student, the name of instructor being moderated)"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  personName: string \u003d \u0027\u0027;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  personEmail: string \u003d \u0027\u0027;"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  feedbackSessionInstructions: string \u003d \u0027\u0027;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  feedbackSessionTimezone: string \u003d \u0027\u0027;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  feedbackSessionSubmissionStatus: FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus.OPEN;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  intent: Intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  questionSubmissionForms: QuestionSubmissionFormModel[] \u003d [];"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  isSavingResponses: boolean \u003d false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  isSubmissionFormsDisabled: boolean \u003d false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"  isModerationHintExpanded: boolean \u003d false;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  moderatedQuestionId: string \u003d \u0027\u0027;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  isFeedbackSessionLoading: boolean \u003d true;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  isFeedbackSessionQuestionsLoading: boolean \u003d true;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  hasFeedbackSessionQuestionsLoadingFailed: boolean \u003d false;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  isFeedbackSessionQuestionResponsesLoading: boolean \u003d true;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  retryAttempts: number \u003d DEFAULT_NUMBER_OF_RETRY_ATTEMPTS;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"              private feedbackResponsesService: FeedbackResponsesService,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"              private pageScrollService: PageScrollService,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"              private commentService: FeedbackResponseCommentService,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"              private logService: LogService,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"              @Inject(DOCUMENT) private document: any) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    this.route.data.pipe("},{"lineNumber":136,"author":{"gitId":"-"},"content":"        tap((data: any) \u003d\u003e {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"          this.intent \u003d data.intent;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        switchMap(() \u003d\u003e this.route.queryParams),"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    ).subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      this.regKey \u003d queryParams.key ? queryParams.key : \u0027\u0027;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      this.moderatedPerson \u003d queryParams.moderatedperson ? queryParams.moderatedperson : \u0027\u0027;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      this.previewAsPerson \u003d queryParams.previewas ? queryParams.previewas : \u0027\u0027;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      if (queryParams.entitytype \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        this.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        this.intent \u003d Intent.INSTRUCTOR_SUBMISSION;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      this.moderatedQuestionId \u003d queryParams.moderatedquestionId ? queryParams.moderatedquestionId : \u0027\u0027;"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // disable submission in the preview mode"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search.replace(/\u0026/g, \u0027%26\u0027)}`;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) \u003d\u003e {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        const isPreviewOrModeration: boolean \u003d !!(auth.user \u0026\u0026 (this.moderatedPerson || this.previewAsPerson));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (auth.user) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"          this.loggedInUser \u003d auth.user.id;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (this.regKey \u0026\u0026 !isPreviewOrModeration) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"          this.authService.getAuthRegkeyValidity(this.regKey, this.intent).subscribe((resp: RegkeyValidity) \u003d\u003e {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            if (resp.isAllowedAccess) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"              if (resp.isUsed) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                // The logged in user matches the registration key; redirect to the logged in URL"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"                this.navigationService.navigateByURLWithParamEncoding(this.router, `/web/${this.entityType}/sessions/submission`,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":171,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                // Valid, unused registration key; load information based on the key"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                this.loadPersonName();"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                this.loadFeedbackSession();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            } else if (resp.isValid) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"              // At this point, registration key must already be used, otherwise access would be granted"},{"lineNumber":178,"author":{"gitId":"-"},"content":"              if (this.loggedInUser) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                // Registration key belongs to another user who is not the logged in user"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    `You are trying to access TEAMMATES using the Google account ${this.loggedInUser}, which"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                // There is no logged in user for a valid, used registration key, redirect to login page"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                if (this.entityType \u003d\u003d\u003d \u0027student\u0027) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                } else if (this.entityType \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.instructorLoginUrl}`;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"              // The registration key is invalid"},{"lineNumber":196,"author":{"gitId":"-"},"content":"              this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                  \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } else if (this.loggedInUser) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"          // Load information based on logged in user"},{"lineNumber":205,"author":{"gitId":"-"},"content":"          // This will also cover moderation/preview cases"},{"lineNumber":206,"author":{"gitId":"-"},"content":"          this.loadPersonName();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"          this.loadFeedbackSession();"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"              \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      }, () \u003d\u003e {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"  // Solution for checking partial element visibility adapted from"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  // https://stackoverflow.com/questions/30943662/check-if-element-is-partially-in-viewport"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   * Checks if a given element is in view."},{"lineNumber":223,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":224,"author":{"gitId":"-"},"content":"   * @params e element to perform check for"},{"lineNumber":225,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  isInViewport(e: HTMLElement): boolean {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    const rect: ClientRect \u003d e.getBoundingClientRect();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    const windowHeight: number \u003d (window.innerHeight || document.documentElement.clientHeight);"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    return !("},{"lineNumber":231,"author":{"gitId":"-"},"content":"      Math.floor(100 - (((rect.top \u003e\u003d 0 ? 0 : rect.top) / +-rect.height) * 100)) \u003c 1 ||"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      Math.floor(100 - ((rect.bottom - windowHeight) / rect.height) * 100) \u003c 1"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":237,"author":{"gitId":"-"},"content":"   * Scrolls to the question based on its given question id."},{"lineNumber":238,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  scrollToQuestion(): void {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    const div: HTMLElement | null \u003d document.getElementById(this.moderatedQuestionId);"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    // continue scrolling as long as the element to scroll to is yet to be found or not in view"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    if (div \u003d\u003d null || !(this.isInViewport(div))) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      setTimeout(() \u003d\u003e {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        this.pageScrollService.scroll({"},{"lineNumber":246,"author":{"gitId":"-"},"content":"          document: this.document,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"          scrollTarget: `#${this.moderatedQuestionId}`,"},{"lineNumber":248,"author":{"gitId":"-"},"content":"          scrollOffset: 70,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        this.scrollToQuestion();"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      }, 500);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    if (!this.moderatedQuestionId) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    this.scrollToQuestion();"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":263,"author":{"gitId":"-"},"content":"   * Loads the name of the person involved in the submission."},{"lineNumber":264,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  loadPersonName(): void {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    switch (this.intent) {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      case Intent.STUDENT_SUBMISSION:"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        this.studentService.getStudent("},{"lineNumber":269,"author":{"gitId":"-"},"content":"            this.courseId,"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            this.moderatedPerson || this.previewAsPerson,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            this.regKey,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        ).subscribe((student: Student) \u003d\u003e {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"          this.personName \u003d student.name;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"          this.personEmail \u003d student.email;"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"          this.logService.createFeedbackSessionLog({"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            courseId: this.courseId,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            studentEmail: this.personEmail,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            logType: FeedbackSessionLogType.ACCESS,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"          }).subscribe(() \u003d\u003e {"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            this.statusMessageService.showWarningToast(\u0027Failed to log feedback session access\u0027);"},{"lineNumber":285,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      case Intent.INSTRUCTOR_SUBMISSION:"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        this.instructorService.getInstructor({"},{"lineNumber":291,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"          feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"          intent: this.intent,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"          moderatedPerson: this.moderatedPerson,"},{"lineNumber":296,"author":{"gitId":"-"},"content":"          previewAs: this.previewAsPerson,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"          this.personName \u003d instructor.name;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"          this.personEmail \u003d instructor.email;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":304,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":307,"author":{"gitId":"-"},"content":"   * Redirects to join course link for unregistered student/instructor."},{"lineNumber":308,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  joinCourseForUnregisteredEntity(): void {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/join\u0027, { entitytype: this.entityType, key: this.regKey });"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":314,"author":{"gitId":"-"},"content":"   * Loads the feedback session information."},{"lineNumber":315,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":316,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionLoading \u003d true;"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e this.isFeedbackSessionLoading \u003d false))"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        this.feedbackSessionInstructions \u003d feedbackSession.instructions;"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":330,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"        this.formattedSessionClosingTime \u003d this.timezoneService"},{"lineNumber":333,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"        this.feedbackSessionSubmissionStatus \u003d feedbackSession.submissionStatus;"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        this.feedbackSessionTimezone \u003d feedbackSession.timeZone;"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"        // don\u0027t show alert modal in moderation"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (!this.moderatedPerson) {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"          let modalContent: string;"},{"lineNumber":341,"author":{"gitId":"-"},"content":"          switch (feedbackSession.submissionStatus) {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN:"},{"lineNumber":343,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":344,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eThe feedback session is currently not open for submissions.\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":348,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Not Open\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.OPEN:"},{"lineNumber":351,"author":{"gitId":"-"},"content":"              // closing in 15 minutes"},{"lineNumber":352,"author":{"gitId":"-"},"content":"              if (feedbackSession.submissionEndTimestamp - Date.now() \u003c 15 * 60 * 1000) {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                modalContent \u003d \u0027Warning: you have less than 15 minutes before the submission deadline expires!\u0027;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                this.simpleModalService.openInformationModal("},{"lineNumber":355,"author":{"gitId":"-"},"content":"                  \u0027Feedback Session Will Be Closing Soon!\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":357,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.CLOSED:"},{"lineNumber":359,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":360,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eFeedback Session is Closed\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":363,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":364,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Closed\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.GRACE_PERIOD:"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":368,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"        this.loadFeedbackQuestions();"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        // Display note on submission on mobile device"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        const mobileDeviceWidth: number \u003d 768;"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        if (this.feedbackSessionSubmissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN"},{"lineNumber":376,"author":{"gitId":"-"},"content":"          \u0026\u0026 window.innerWidth \u003c mobileDeviceWidth) {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"          const modalContent: string \u003d `Note that you can use the Submit button to save responses already entered, and continue to"},{"lineNumber":378,"author":{"gitId":"-"},"content":"answer remaining questions after that. You may also edit your submission any number of times before the closing time of"},{"lineNumber":379,"author":{"gitId":"-"},"content":"this session.`;"},{"lineNumber":380,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal("},{"lineNumber":381,"author":{"gitId":"-"},"content":"              \u0027Note On Submission\u0027, SimpleModalType.INFO, modalContent);"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal(\u0027Feedback Session Does Not Exist!\u0027, SimpleModalType.DANGER,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"              \u0027The session does not exist (most likely deleted by the instructor after the submission link was sent).\u0027);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"          this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        } else if (resp.status \u003d\u003d\u003d 403) {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal(\u0027Not Authorised To Access!\u0027, SimpleModalType.DANGER,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"              resp.error.message);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"          this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage("},{"lineNumber":394,"author":{"gitId":"-"},"content":"              this.router, `/web/${this.entityType}/home`, resp.error.message);"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":396,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":400,"author":{"gitId":"-"},"content":"   * Loads feedback questions to submit."},{"lineNumber":401,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionQuestionsLoading \u003d true;"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    this.questionSubmissionForms \u003d [];"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e this.isFeedbackSessionQuestionsLoading \u003d false))"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackQuestionsResponse) \u003d\u003e {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"          this.isFeedbackSessionQuestionResponsesLoading \u003d response.questions.length !\u003d\u003d 0;"},{"lineNumber":415,"author":{"gitId":"-"},"content":"          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            const model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"              feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"              questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"              questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":421,"author":{"gitId":"-"},"content":"              questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"              giverType: feedbackQuestion.giverType,"},{"lineNumber":424,"author":{"gitId":"-"},"content":"              recipientType: feedbackQuestion.recipientType,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"              recipientList: [],"},{"lineNumber":426,"author":{"gitId":"-"},"content":"              recipientSubmissionForms: [],"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"              questionType: feedbackQuestion.questionType,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"              questionDetails: feedbackQuestion.questionDetails,"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":433,"author":{"gitId":"-"},"content":"                      ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 0,"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"              showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"              showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"              showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":439,"author":{"gitId":"-"},"content":"            this.questionSubmissionForms.push(model);"},{"lineNumber":440,"author":{"gitId":"-"},"content":"            this.loadFeedbackQuestionRecipientsForQuestion(model);"},{"lineNumber":441,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"          this.handleError(resp);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":445,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   * Tracks the question submission form by feedback question id."},{"lineNumber":449,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":452,"author":{"gitId":"-"},"content":"  trackQuestionSubmissionFormByFn(_: any, item: QuestionSubmissionFormModel): any {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   * Loads the feedback question recipients for the question."},{"lineNumber":458,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":459,"author":{"gitId":"-"},"content":"  loadFeedbackQuestionRecipientsForQuestion(model: QuestionSubmissionFormModel): void {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.loadFeedbackQuestionRecipients({"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    }).subscribe((response: FeedbackQuestionRecipients) \u003d\u003e {"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      response.recipients.forEach((recipient: FeedbackQuestionRecipient) \u003d\u003e {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        model.recipientList.push({"},{"lineNumber":469,"author":{"gitId":"-"},"content":"          recipientIdentifier: recipient.identifier,"},{"lineNumber":470,"author":{"gitId":"-"},"content":"          recipientName: recipient.name,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        // don\u0027t load responses in preview mode"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        // generate a list of empty response box"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        const formMode: QuestionSubmissionFormMode \u003d this.getQuestionSubmissionFormMode(model);"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"          if (formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT \u0026\u0026"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.length \u003e\u003d"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            model.customNumberOfEntitiesToGiveFeedbackTo) {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":483,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"          let recipientIdentifier: string \u003d \u0027\u0027;"},{"lineNumber":486,"author":{"gitId":"-"},"content":"          if (formMode !\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            recipientIdentifier \u003d recipient.recipientIdentifier;"},{"lineNumber":488,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":489,"author":{"gitId":"-"},"content":""},{"lineNumber":490,"author":{"gitId":"-"},"content":"          model.recipientSubmissionForms.push({"},{"lineNumber":491,"author":{"gitId":"-"},"content":"            recipientIdentifier,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"            responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            responseId: \u0027\u0027,"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            isValid: true,"},{"lineNumber":495,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        this.isFeedbackSessionQuestionResponsesLoading \u003d false;"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        this.loadFeedbackResponses(model);"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":502,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":503,"author":{"gitId":"-"},"content":""},{"lineNumber":504,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   * Gets the form mode of the question submission form."},{"lineNumber":506,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":507,"author":{"gitId":"-"},"content":"  getQuestionSubmissionFormMode(model: QuestionSubmissionFormModel): QuestionSubmissionFormMode {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    const isNumberOfEntitiesToGiveFeedbackToSettingLimited: boolean"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        \u003d (model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS_IN_SAME_SECTION"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS_IN_SAME_SECTION"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.numberOfEntitiesToGiveFeedbackToSetting \u003d\u003d\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.recipientList.length \u003e model.customNumberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"    return isNumberOfEntitiesToGiveFeedbackToSettingLimited"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        ? QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT : QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":519,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   * Loads the responses of the feedback question to {@recipientSubmissionForms} in the model."},{"lineNumber":523,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":524,"author":{"gitId":"-"},"content":"  loadFeedbackResponses(model: QuestionSubmissionFormModel): void {"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionQuestionResponsesLoading \u003d true;"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    this.feedbackResponsesService.getFeedbackResponse({"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e this.isFeedbackSessionQuestionResponsesLoading \u003d false))"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      .subscribe((existingResponses: FeedbackResponsesResponse) \u003d\u003e {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT) {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"          // need to generate a full list of submission forms"},{"lineNumber":535,"author":{"gitId":"-"},"content":"          model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            const matchedExistingResponse: FeedbackResponse | undefined \u003d"},{"lineNumber":537,"author":{"gitId":"-"},"content":"              existingResponses.responses.find("},{"lineNumber":538,"author":{"gitId":"-"},"content":"                  (response: FeedbackResponse) \u003d\u003e response.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            const submissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"              recipientIdentifier: recipient.recipientIdentifier,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"              responseDetails: matchedExistingResponse"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                ? matchedExistingResponse.responseDetails"},{"lineNumber":543,"author":{"gitId":"-"},"content":"                : this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":544,"author":{"gitId":"-"},"content":"              responseId: matchedExistingResponse ? matchedExistingResponse.feedbackResponseId : \u0027\u0027,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            if (matchedExistingResponse \u0026\u0026 matchedExistingResponse.giverComment) {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"              submissionForm.commentByGiver \u003d this.getCommentModel(matchedExistingResponse.giverComment);"},{"lineNumber":549,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push(submissionForm);"},{"lineNumber":551,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":553,"author":{"gitId":"-"},"content":""},{"lineNumber":554,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"          // need to generate limited number of submission forms"},{"lineNumber":556,"author":{"gitId":"-"},"content":"          let numberOfRecipientSubmissionFormsNeeded: number \u003d"},{"lineNumber":557,"author":{"gitId":"-"},"content":"            model.customNumberOfEntitiesToGiveFeedbackTo - existingResponses.responses.length;"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"-"},"content":"          existingResponses.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push({"},{"lineNumber":561,"author":{"gitId":"-"},"content":"              recipientIdentifier: response.recipientIdentifier,"},{"lineNumber":562,"author":{"gitId":"-"},"content":"              responseDetails: response.responseDetails,"},{"lineNumber":563,"author":{"gitId":"-"},"content":"              responseId: response.feedbackResponseId,"},{"lineNumber":564,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":566,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":567,"author":{"gitId":"-"},"content":""},{"lineNumber":568,"author":{"gitId":"-"},"content":"          // generate empty submission forms"},{"lineNumber":569,"author":{"gitId":"-"},"content":"          while (numberOfRecipientSubmissionFormsNeeded \u003e 0) {"},{"lineNumber":570,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push({"},{"lineNumber":571,"author":{"gitId":"-"},"content":"              recipientIdentifier: \u0027\u0027,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"              responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":573,"author":{"gitId":"-"},"content":"              responseId: \u0027\u0027,"},{"lineNumber":574,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":575,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":576,"author":{"gitId":"-"},"content":"            numberOfRecipientSubmissionFormsNeeded -\u003d 1;"},{"lineNumber":577,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":580,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":583,"author":{"gitId":"-"},"content":"   * Gets the comment model for a given comment."},{"lineNumber":584,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":585,"author":{"gitId":"-"},"content":"  getCommentModel(comment: FeedbackResponseComment): CommentRowModel {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      originalComment: comment,"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        commentText: comment.commentText,"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        // the participant comment shall not use custom visibilities"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":595,"author":{"gitId":"-"},"content":"      timezone: this.feedbackSessionTimezone,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":598,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":599,"author":{"gitId":"-"},"content":""},{"lineNumber":600,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":601,"author":{"gitId":"-"},"content":"   * Checks whether there is any submission forms in the current page."},{"lineNumber":602,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":603,"author":{"gitId":"-"},"content":"  get hasAnyResponseToSubmit(): boolean {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    return this.questionSubmissionForms"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        .some((model: QuestionSubmissionFormModel) \u003d\u003e model.recipientSubmissionForms.length !\u003d\u003d 0);"},{"lineNumber":606,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   * Saves all feedback response."},{"lineNumber":610,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   * \u003cp\u003eAll empty feedback response will be deleted; For non-empty responses, update/create them if necessary."},{"lineNumber":612,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":613,"author":{"gitId":"-"},"content":"  saveFeedbackResponses(): void {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    const notYetAnsweredQuestions: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    const requestIds: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    const answers: Record\u003cstring, FeedbackResponse[]\u003e \u003d {};"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    const failToSaveQuestions: Record\u003cnumber, string\u003e \u003d {}; // Map of question number to error message"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    const savingRequests: Observable\u003cany\u003e[] \u003d [];"},{"lineNumber":619,"author":{"gitId":"-"},"content":""},{"lineNumber":620,"author":{"gitId":"-"},"content":"    this.logService.createFeedbackSessionLog({"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":623,"author":{"gitId":"-"},"content":"      studentEmail: this.personEmail,"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      logType: FeedbackSessionLogType.SUBMISSION,"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    }).subscribe(() \u003d\u003e {"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      this.statusMessageService.showWarningToast(\u0027Failed to log feedback session submission\u0027);"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"    this.questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) \u003d\u003e {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"      let isQuestionFullyAnswered: boolean \u003d true;"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"      const responses: FeedbackResponseRequest[] \u003d [];"},{"lineNumber":635,"author":{"gitId":"-"},"content":""},{"lineNumber":636,"author":{"gitId":"-"},"content":"      questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":637,"author":{"gitId":"-"},"content":"          .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"            if (!recipientSubmissionFormModel.isValid) {"},{"lineNumber":639,"author":{"gitId":"-"},"content":"              failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d"},{"lineNumber":640,"author":{"gitId":"-"},"content":"                  \u0027Invalid responses provided. Please check question constraints.\u0027;"},{"lineNumber":641,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":642,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":643,"author":{"gitId":"-"},"content":"            const isFeedbackResponseDetailsEmpty: boolean \u003d"},{"lineNumber":644,"author":{"gitId":"-"},"content":"                this.feedbackResponsesService.isFeedbackResponseDetailsEmpty("},{"lineNumber":645,"author":{"gitId":"-"},"content":"                    questionSubmissionFormModel.questionType, recipientSubmissionFormModel.responseDetails);"},{"lineNumber":646,"author":{"gitId":"-"},"content":"            isQuestionFullyAnswered \u003d isQuestionFullyAnswered \u0026\u0026 !isFeedbackResponseDetailsEmpty;"},{"lineNumber":647,"author":{"gitId":"-"},"content":""},{"lineNumber":648,"author":{"gitId":"-"},"content":"            if (!isFeedbackResponseDetailsEmpty) {"},{"lineNumber":649,"author":{"gitId":"-"},"content":"              responses.push({"},{"lineNumber":650,"author":{"gitId":"-"},"content":"                recipient: recipientSubmissionFormModel.recipientIdentifier,"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                responseDetails: recipientSubmissionFormModel.responseDetails,"},{"lineNumber":652,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":654,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"zhaojj2209"},"content":"      if (!failToSaveQuestions[questionSubmissionFormModel.questionNumber]) {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        savingRequests.push("},{"lineNumber":658,"author":{"gitId":"-"},"content":"            this.feedbackResponsesService.submitFeedbackResponses(questionSubmissionFormModel.feedbackQuestionId, {"},{"lineNumber":659,"author":{"gitId":"-"},"content":"              intent: this.intent,"},{"lineNumber":660,"author":{"gitId":"-"},"content":"              key: this.regKey,"},{"lineNumber":661,"author":{"gitId":"-"},"content":"              moderatedperson: this.moderatedPerson,"},{"lineNumber":662,"author":{"gitId":"-"},"content":"            }, {"},{"lineNumber":663,"author":{"gitId":"-"},"content":"              responses,"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            }).pipe("},{"lineNumber":665,"author":{"gitId":"-"},"content":"                tap((resp: FeedbackResponses) \u003d\u003e {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"                  const responsesMap: Record\u003cstring, FeedbackResponse\u003e \u003d {};"},{"lineNumber":667,"author":{"gitId":"-"},"content":"                  resp.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"                    responsesMap[response.recipientIdentifier] \u003d response;"},{"lineNumber":669,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId] \u003d"},{"lineNumber":670,"author":{"gitId":"-"},"content":"                        answers[questionSubmissionFormModel.feedbackQuestionId] || [];"},{"lineNumber":671,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId].push(response);"},{"lineNumber":672,"author":{"gitId":"-"},"content":"                  });"},{"lineNumber":673,"author":{"gitId":"-"},"content":"                  requestIds[questionSubmissionFormModel.feedbackQuestionId] \u003d resp.requestId || \u0027\u0027;"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"                  questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":676,"author":{"gitId":"-"},"content":"                      .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":677,"author":{"gitId":"-"},"content":"                        if (responsesMap[recipientSubmissionFormModel.recipientIdentifier]) {"},{"lineNumber":678,"author":{"gitId":"-"},"content":"                          const correspondingResp: FeedbackResponse \u003d"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                              responsesMap[recipientSubmissionFormModel.recipientIdentifier];"},{"lineNumber":680,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d correspondingResp.feedbackResponseId;"},{"lineNumber":681,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseDetails \u003d correspondingResp.responseDetails;"},{"lineNumber":682,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.recipientIdentifier \u003d correspondingResp.recipientIdentifier;"},{"lineNumber":683,"author":{"gitId":"-"},"content":"                        } else {"},{"lineNumber":684,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d \u0027\u0027;"},{"lineNumber":685,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":686,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":687,"author":{"gitId":"-"},"content":"                      });"},{"lineNumber":688,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":689,"author":{"gitId":"-"},"content":"                switchMap(() \u003d\u003e"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                    forkJoin(questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":691,"author":{"gitId":"-"},"content":"                        .map((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":692,"author":{"gitId":"-"},"content":"                            this.createCommentRequest(recipientSubmissionFormModel))),"},{"lineNumber":693,"author":{"gitId":"-"},"content":"                ),"},{"lineNumber":694,"author":{"gitId":"-"},"content":"                catchError((error: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"                  failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d error.error.message;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"                  return of(error);"},{"lineNumber":697,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            ),"},{"lineNumber":699,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":700,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":701,"author":{"gitId":"-"},"content":""},{"lineNumber":702,"author":{"gitId":"-"},"content":"      if (!isQuestionFullyAnswered) {"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        notYetAnsweredQuestions.add(questionSubmissionFormModel.questionNumber);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":706,"author":{"gitId":"-"},"content":""},{"lineNumber":707,"author":{"gitId":"-"},"content":"    this.isSavingResponses \u003d true;"},{"lineNumber":708,"author":{"gitId":"-"},"content":"    forkJoin(savingRequests).pipe("},{"lineNumber":709,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":710,"author":{"gitId":"-"},"content":"          this.isSavingResponses \u003d false;"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"          const modalRef: NgbModalRef \u003d this.ngbModal.open(SavingCompleteModalComponent);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.requestIds \u003d requestIds;"},{"lineNumber":714,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.courseId \u003d this.courseId;"},{"lineNumber":715,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":716,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionTimezone \u003d this.feedbackSessionTimezone;"},{"lineNumber":717,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personEmail \u003d this.personEmail;"},{"lineNumber":718,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personName \u003d this.personName;"},{"lineNumber":719,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.questions \u003d this.questionSubmissionForms;"},{"lineNumber":720,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.answers \u003d answers;"},{"lineNumber":721,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.notYetAnsweredQuestions \u003d Array.from(notYetAnsweredQuestions.values());"},{"lineNumber":722,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.failToSaveQuestions \u003d failToSaveQuestions;"},{"lineNumber":723,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":724,"author":{"gitId":"-"},"content":"    ).subscribe();"},{"lineNumber":725,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":726,"author":{"gitId":"-"},"content":""},{"lineNumber":727,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":728,"author":{"gitId":"-"},"content":"   * Creates comment request."},{"lineNumber":729,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":730,"author":{"gitId":"-"},"content":"  createCommentRequest(recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel): Observable\u003cany\u003e {"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.responseId) {"},{"lineNumber":732,"author":{"gitId":"-"},"content":"      // responseId not set, cannot set comment"},{"lineNumber":733,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":734,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver) {"},{"lineNumber":736,"author":{"gitId":"-"},"content":"      // comment not given, do nothing"},{"lineNumber":737,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":738,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver.originalComment) {"},{"lineNumber":741,"author":{"gitId":"-"},"content":"      // comment is new"},{"lineNumber":742,"author":{"gitId":"-"},"content":""},{"lineNumber":743,"author":{"gitId":"-"},"content":"      if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        // new comment is empty"},{"lineNumber":745,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":746,"author":{"gitId":"-"},"content":"        return of({});"},{"lineNumber":747,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"      // create new comment"},{"lineNumber":750,"author":{"gitId":"-"},"content":"      return this.commentService.createComment({"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        // we ignore the fields in comment edit model as participant comment"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        // will follow visibilities from question by design"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":756,"author":{"gitId":"-"},"content":"      }, recipientSubmissionFormModel.responseId, this.intent, {"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        key: this.regKey,"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        moderatedperson: this.moderatedPerson,"},{"lineNumber":759,"author":{"gitId":"-"},"content":"      }).pipe("},{"lineNumber":760,"author":{"gitId":"-"},"content":"          tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":761,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel(comment);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":763,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":764,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":765,"author":{"gitId":"-"},"content":""},{"lineNumber":766,"author":{"gitId":"-"},"content":"    // existing comment"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"    if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":769,"author":{"gitId":"-"},"content":"      // comment is empty, create delete request"},{"lineNumber":770,"author":{"gitId":"-"},"content":"      return this.commentService.deleteComment("},{"lineNumber":771,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":772,"author":{"gitId":"-"},"content":"            key: this.regKey,"},{"lineNumber":773,"author":{"gitId":"-"},"content":"            moderatedperson: this.moderatedPerson,"},{"lineNumber":774,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":775,"author":{"gitId":"-"},"content":"          .pipe("},{"lineNumber":776,"author":{"gitId":"-"},"content":"              tap(() \u003d\u003e {"},{"lineNumber":777,"author":{"gitId":"-"},"content":"                recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":778,"author":{"gitId":"-"},"content":"              }));"},{"lineNumber":779,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":780,"author":{"gitId":"-"},"content":""},{"lineNumber":781,"author":{"gitId":"-"},"content":"    // update comment"},{"lineNumber":782,"author":{"gitId":"-"},"content":"    return this.commentService.updateComment({"},{"lineNumber":783,"author":{"gitId":"-"},"content":"      commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":784,"author":{"gitId":"-"},"content":"      // we ignore the fields in comment edit model as participant comment"},{"lineNumber":785,"author":{"gitId":"-"},"content":"      // will follow visibilities from question by design"},{"lineNumber":786,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":787,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":788,"author":{"gitId":"-"},"content":"    }, recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":789,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":790,"author":{"gitId":"-"},"content":"      moderatedperson: this.moderatedPerson,"},{"lineNumber":791,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":792,"author":{"gitId":"-"},"content":"        tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":793,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel(comment);"},{"lineNumber":794,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":795,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":796,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":799,"author":{"gitId":"-"},"content":"   * Deletes a comment by participants."},{"lineNumber":800,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":801,"author":{"gitId":"-"},"content":"  deleteParticipantComment(questionIndex: number, responseIdx: number): void {"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    const recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel \u003d"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        this.questionSubmissionForms[questionIndex].recipientSubmissionForms[responseIdx];"},{"lineNumber":804,"author":{"gitId":"-"},"content":""},{"lineNumber":805,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver || !recipientSubmissionFormModel.commentByGiver.originalComment) {"},{"lineNumber":806,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":808,"author":{"gitId":"-"},"content":""},{"lineNumber":809,"author":{"gitId":"-"},"content":"    this.commentService.deleteComment("},{"lineNumber":810,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":811,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":812,"author":{"gitId":"-"},"content":"          moderatedperson: this.moderatedPerson,"},{"lineNumber":813,"author":{"gitId":"-"},"content":"        }).subscribe(() \u003d\u003e {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":815,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027Your comment has been deleted!\u0027);"},{"lineNumber":816,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":817,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":819,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"  retryLoadingFeedbackSessionQuestions(): void {"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d false;"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003e\u003d 0) {"},{"lineNumber":824,"author":{"gitId":"-"},"content":"      this.retryAttempts -\u003d 1;"},{"lineNumber":825,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":826,"author":{"gitId":"-"},"content":"    this.loadFeedbackQuestions();"},{"lineNumber":827,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":828,"author":{"gitId":"-"},"content":""},{"lineNumber":829,"author":{"gitId":"-"},"content":"  handleError(resp: ErrorMessageOutput): void {"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003c 0) {"},{"lineNumber":832,"author":{"gitId":"-"},"content":"      const report: NgbModalRef \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":833,"author":{"gitId":"-"},"content":"      report.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":834,"author":{"gitId":"-"},"content":"      report.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":836,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":838,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":839,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":2,"-":837}},{"path":"src/web/app/pages-student/student-profile-page/student-profile-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasLoadingStudentProfileFailed\" [message]\u003d\"\u0027Failed to load profile\u0027\" (retryEvent)\u003d\"loadStudentProfile()\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isLoadingStudentProfile\" class\u003d\"text-center text-sm-left\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003ch1\u003eStudent Profile\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"student\" class\u003d\"card\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body fill-plain\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003ch1\u003e{{ name }}\u003c/h1\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row profile-pic-row\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col cursor-pointer\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u003cimg"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                src\u003d\"{{ profilePicLink }}\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                class\u003d\"profile-pic\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                (click)\u003d\"onUploadEdit()\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                (error)\u003d\"setDefaultPic()\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row profile-pic-row\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-12 cursor-pointer\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cbutton"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                class\u003d\"btn btn-primary upload-edit-photo btn-margin-right\""},{"lineNumber":20,"author":{"gitId":"FergusMok"},"content":"                ngbTooltip\u003d\".jpg, .png, .gif or .svg, max size 5 MB\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"                (click)\u003d\"onUploadEdit()\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              Upload/Edit Photo"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cbutton *ngIf\u003d\"this.profilePicLink !\u003d this.defaultPictureLink\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                id\u003d\"profile-delete-photo\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"                class\u003d\"btn btn-danger\""},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"                (click)\u003d\"onDelete()\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"              Delete Photo"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cform [formGroup]\u003d\"editForm\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"              (ngSubmit)\u003d\"onSubmit()\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003clabel\u003eThe name you prefer to be called by instructors\u003c/label\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cinput"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                id\u003d\"studentshortname\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentshortname\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003clabel\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              Long-term Contact Email"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003cem class\u003d\"font-weight-normal emphasis text-muted small\"\u003e- only visible to your instructors\u003c/em\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003c/label\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cinput"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                id\u003d\"studentprofileemail\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentprofileemail\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003clabel\u003eInstitute\u003c/label\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cinput"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"                id\u003d\"studentprofileinstitute\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentprofileinstitute\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003clabel\u003eNationality\u003c/label\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cselect"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"                id\u003d\"studentnationality\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentnationality\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003coption"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                  *ngFor\u003d\"let n of nationalities\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"                  [value]\u003d\"n\"\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                {{n}}"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              \u003c/option\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003c/select\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          \u003clabel\u003eGender\u003c/label\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"custom-control-inline\" *ngFor\u003d\"let gender of Gender | enumToArray\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"              \u003cinput"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                  class\u003d\"student-gender-radio\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                  type\u003d\"radio\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                  formControlName\u003d\"studentgender\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                  [value]\u003d\"gender\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"student-gender-label mt-1\"\u003e{{ gender | genderFormat }}\u003c/label\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"You may specify miscellaneous info about yourself e.g. links to home page, online CV, portfolio etc\"\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"              More Information about Yourself\u003c/label\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003ctextarea"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                class\u003d\"form-control\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                id\u003d\"studentprofilemoreinfo\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                rows\u003d\"4\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                formControlName\u003d\"studentprofilemoreinfo\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                placeholder\u003d\"You may specify miscellaneous info about yourself e.g. links to home page, online CV, portfolio etc.\"\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u003c/textarea\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"text-center\"\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cbutton"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                type\u003d\"submit\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                class\u003d\"btn btn-primary student-save-profile\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                [disabled]\u003d\"isSavingProfileEdit\"\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"              \u003ctm-ajax-loading *ngIf\u003d\"isSavingProfileEdit\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"              Save Profile"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"whisper\"\u003eThis profile will be visible to all your instructors and coursemates.\u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003c/form\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"FergusMok":1,"-":107}},{"path":"src/web/app/pages-student/student-profile-page/upload-edit-profile-picture-modal/upload-edit-profile-picture-modal.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-header\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch4 class\u003d\"modal-title\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    Upload/Edit Photo"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/h4\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003cbutton (click)\u003d\"activeModal.dismiss()\" type\u003d\"button\" class\u003d\"close\" data-dismiss\u003d\"modal\" aria-hidden\u003d\"true\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    ×"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-body align-center\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col sm-5\"\u003e"},{"lineNumber":13,"author":{"gitId":"FergusMok"},"content":"      \u003cp\u003ePlease upload an image file \u003cb\u003e(ending with .jpg, .png, .gif or .svg)\u003c/b\u003e from your computer."},{"lineNumber":14,"author":{"gitId":"FergusMok"},"content":"      Once a picture is uploaded, you will be able to edit it using the buttons below."},{"lineNumber":15,"author":{"gitId":"FergusMok"},"content":"      Cropping is available by adjusting the box size."},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":22,"author":{"gitId":"FergusMok"},"content":"      \u003cinput class\u003d\"row col student-photo\" type\u003d\"file\" accept\u003d\"{{ validProfileFileTypes }}\" (change)\u003d\"fileChangeEvent($event)\"/\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003csmall\u003eMax Size: 5MB\u003c/small\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-md-8 pl-md-5\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary btn-space\" (click)\u003d\"flipHorizontal()\" ngbTooltip\u003d\"Flip Horizontally\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"fas fa-angle-double-left\"\u003e\u003c/i\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary btn-space\" (click)\u003d\"flipVertical()\" ngbTooltip\u003d\"Flip Vertically\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"fas fa-angle-double-up\"\u003e\u003c/i\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary btn-space\" (click)\u003d\"rotateLeft()\" ngbTooltip\u003d\"Rotate Anti-clockwise\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"fas fa-redo-alt fa-flip-horizontal\"\u003e\u003c/i\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-primary btn-space\" (click)\u003d\"rotateRight()\" ngbTooltip\u003d\"Rotate Clockwise\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"fas fa-redo-alt\"\u003e\u003c/i\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003cimage-cropper"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      [imageChangedEvent]\u003d\"imageChangedEvent\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"      [maintainAspectRatio]\u003d\"false\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"      (imageCropped)\u003d\"imageCropped($event)\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003e\u003c/image-cropper\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-footer\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cdiv\u003e"},{"lineNumber":55,"author":{"gitId":"FergusMok"},"content":"    \u003cbutton class\u003d\"btn btn-success btn-lg profile-upload-picture-submit\" (click)\u003d\"uploadPicture()\" [disabled]\u003d\"!isValidProfileFileType\"\u003eUpload Image\u003c/button\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"FergusMok":5,"-":52}},{"path":"src/web/app/pages-student/student-profile-page/upload-edit-profile-picture-modal/upload-edit-profile-picture-modal.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ImageCroppedEvent, ImageCropperComponent } from \u0027ngx-image-cropper\u0027;"},{"lineNumber":4,"author":{"gitId":"FergusMok"},"content":"import { StatusMessageService } from \u0027../../../../services/status-message.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Student profile page\u0027s modal to upload/edit photo."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027tm-upload-edit-profile-picture-modal\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./upload-edit-profile-picture-modal.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./upload-edit-profile-picture-modal.component.scss\u0027],"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class UploadEditProfilePictureModalComponent implements OnInit {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  imageChangedEvent: any \u003d \u0027\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  formData?: FormData;"},{"lineNumber":17,"author":{"gitId":"FergusMok"},"content":"  isValidProfileFileType: boolean \u003d false;"},{"lineNumber":18,"author":{"gitId":"FergusMok"},"content":"  readonly validProfileFileTypes: string[] \u003d [\u0027image/gif\u0027, \u0027image/jpeg\u0027, \u0027image/png\u0027, \u0027image/svg+xml\u0027];"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  @ViewChild(ImageCropperComponent) imageCropper!: ImageCropperComponent;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Input() image!: Blob | null;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"FergusMok"},"content":"  constructor(public activeModal: NgbActiveModal,"},{"lineNumber":25,"author":{"gitId":"FergusMok"},"content":"    private statusMessageService: StatusMessageService,"},{"lineNumber":26,"author":{"gitId":"FergusMok"},"content":"    ) { }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    if (this.image \u003d\u003d null) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.blobToBase64Image(this.image);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * Converts the blob image into a base64 string to be shown in the image cropper."},{"lineNumber":37,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  blobToBase64Image(image: Blob): void {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    const reader: FileReader \u003d new FileReader();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    reader.addEventListener(\u0027load\u0027, () \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      if (reader.result) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.imageCropper.imageBase64 \u003d reader.result as string;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }, false);"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    if (image) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      reader.readAsDataURL(image);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * Populates form data with the image blob."},{"lineNumber":53,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  populateFormData(file: File): void {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    this.formData \u003d new FormData();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.formData.append(\u0027studentprofilephoto\u0027, file, file.name);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * Uploads the picture that has been newly uploaded/edited."},{"lineNumber":61,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  uploadPicture(): void {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.activeModal.close(this.formData);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * Handles event(s) when a file is selected from the user\u0027s file browser."},{"lineNumber":68,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  fileChangeEvent(event: any): void {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.imageChangedEvent \u003d event;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const file: File \u003d event.target.files[0];"},{"lineNumber":73,"author":{"gitId":"FergusMok"},"content":"    if (this.validProfileFileTypes.includes(file.type)) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.populateFormData(file);"},{"lineNumber":75,"author":{"gitId":"FergusMok"},"content":"      this.isValidProfileFileType \u003d true;"},{"lineNumber":76,"author":{"gitId":"FergusMok"},"content":"    } else {"},{"lineNumber":77,"author":{"gitId":"FergusMok"},"content":"      this.statusMessageService.showErrorToast(\u0027Please upload an accepted file type!\u0027);"},{"lineNumber":78,"author":{"gitId":"FergusMok"},"content":"      this.isValidProfileFileType \u003d false;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * Saves the latest cropped image."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  imageCropped(event: ImageCroppedEvent): void {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    this.populateFormData(event.file as File);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * Rotates the image in the image cropper to the left."},{"lineNumber":91,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  rotateLeft(): void {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    this.imageCropper.rotateLeft();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   * Rotates the image in the image cropper to the right."},{"lineNumber":98,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  rotateRight(): void {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    this.imageCropper.rotateRight();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   * Flips the image in the image cropper horizontally."},{"lineNumber":105,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  flipHorizontal(): void {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.imageCropper.flipHorizontal();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   * Flips the image in the image cropper vertically."},{"lineNumber":112,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  flipVertical(): void {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    this.imageCropper.flipVertical();"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"FergusMok":11,"-":105}},{"path":"src/web/app/user-join-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv *tmIsLoading\u003d\"isLoading\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card bg-light mx-auto\" style\u003d\"max-width: 800px;\" *ngIf\u003d\"!hasJoined \u0026\u0026 !userId \u0026\u0026 validUrl\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-header bg-warning\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003ch3 style\u003d\"margin-bottom: 0;\"\u003eNot logged in\u003c/h3\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      You are not logged in. Please log in first."},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card bg-light mx-auto\" style\u003d\"max-width: 800px;\" *ngIf\u003d\"userId \u0026\u0026 (!validUrl || hasJoined)\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-header bg-warning\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003ch3 style\u003d\"margin-bottom: 0;\"\u003eInvalid course join link\u003c/h3\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body\" *ngIf\u003d\"!validUrl\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      The course join link is invalid. You may have entered the URL incorrectly or the URL may correspond"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      to a/an {{ entityType }} that does not exist."},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body\" *ngIf\u003d\"hasJoined \u0026\u0026 validUrl\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      The course join link has been used and is no longer valid."},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card bg-light mx-auto\" style\u003d\"max-width: 800px;\" *ngIf\u003d\"!hasJoined \u0026\u0026 userId \u0026\u0026 validUrl\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-header bg-primary text-white\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003ch3 style\u003d\"margin-bottom: 0;\"\u003eConfirm your Google account\u003c/h3\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      You are currently logged in as \u003cstrong id\u003d\"user-id\"\u003e{{ userId }}\u003c/strong\u003e."},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cbr\u003eIf this is not you, please log out and log in using your own Google account."},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cbr\u003eIf this is you, please confirm below to complete your registration.\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"text-center\" style\u003d\"margin-top: 20px;\"\u003e"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        \u003cbutton id\u003d\"btn-confirm\" class\u003d\"btn btn-success\" (click)\u003d\" isCreatingAccount ? createAccount() : joinCourse()\"\u003eRegister for course\u003c/button\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"-":33,"samuelfangjw":2}},{"path":"src/web/app/user-join-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import { AccountService } from \u0027../services/account.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../services/auth.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../services/course.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../services/navigation.service\u0027;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import { LoadingSpinnerModule } from \u0027./components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { UserJoinPageComponent } from \u0027./user-join-page.component\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import Spy \u003d jasmine.Spy;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"describe(\u0027UserJoinPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  let component: UserJoinPageComponent;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cUserJoinPageComponent\u003e;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  let navService: NavigationService;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  let courseService: CourseService;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  let authService: AuthService;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      declarations: [UserJoinPageComponent],"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":25,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        LoadingSpinnerModule,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NavigationService,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        CourseService,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AuthService,"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        AccountService,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          provide: ActivatedRoute,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          useValue: {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            queryParams: of({"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              entitytype: \u0027student\u0027,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              key: \u0027key\u0027,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        .compileComponents();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(UserJoinPageComponent);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  it(\u0027should snap if user is not logged in and has a valid url\u0027, () \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027\u0027;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    component.validUrl \u003d true;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  it(\u0027should snap with invalid course join link\u0027, () \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    component.validUrl \u003d false;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  it(\u0027should snap with valid course join link that has been used\u0027, () \u003d\u003e {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    component.validUrl \u003d true;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    component.hasJoined \u003d true;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  it(\u0027should snap with valid course join link that has not been used\u0027, () \u003d\u003e {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    component.validUrl \u003d true;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  it(\u0027should join course when join course button is clicked on\u0027, () \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    const params: string[] \u003d [\u0027key\u0027, \u0027student\u0027];"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    component.key \u003d params[0];"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    component.entityType \u003d params[1];"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    component.validUrl \u003d true;"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    const courseSpy: Spy \u003d spyOn(courseService, \u0027joinCourse\u0027).and.returnValue(of({}));"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    const btn: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-confirm\u0027);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    btn.click();"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    expect(courseSpy.calls.count()).toEqual(1);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    expect(courseSpy.calls.mostRecent().args).toEqual(params);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(`/web/${params[1]}`);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  it(\u0027should redirect user to home page if user is logged in and join URL has been used\u0027, () \u003d\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of({"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      user: {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        id: \u0027user\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        isAdmin: false,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        isInstructor: false,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        isStudent: false,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        isMaintainer: false,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      masquerade: false,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    spyOn(courseService, \u0027getJoinCourseStatus\u0027).and.returnValue(of({"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      hasJoined: true,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    expect(component.hasJoined).toBeTruthy();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    expect(component.userId).toEqual(\u0027user\u0027);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/student/home\u0027);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  it(\u0027should stop loading and show error message if 404 is returned\u0027, () \u003d\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of({"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      user: {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        id: \u0027user\u0027,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        isAdmin: false,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        isInstructor: false,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        isStudent: false,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        isMaintainer: false,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      masquerade: false,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    spyOn(courseService, \u0027getJoinCourseStatus\u0027).and.returnValue(throwError({"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      status: 404,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    expect(component.isLoading).toBeFalsy();"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    expect(component.validUrl).toBeFalsy();"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"  it(\u0027should stop loading and redirect if user is not logged in\u0027, () \u003d\u003e {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of({"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      masquerade: false,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    spyOn(courseService, \u0027getJoinCourseStatus\u0027).and.returnValue(of({"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      hasJoined: true,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    expect(component.isLoading).toBeFalsy();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":188,"author":{"gitId":"-"},"content":"});"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"describe(\u0027UserJoinPageComponent creating account\u0027, () \u003d\u003e {"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"  let component: UserJoinPageComponent;"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"  let fixture: ComponentFixture\u003cUserJoinPageComponent\u003e;"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"  let navService: NavigationService;"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"  let authService: AuthService;"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"  let accountService: AccountService;"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"  let courseService: CourseService;"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"  beforeEach((() \u003d\u003e {"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"    TestBed.resetTestingModule();"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"      declarations: [UserJoinPageComponent],"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"      imports: ["},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"        HttpClientTestingModule,"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"        RouterTestingModule,"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"        LoadingSpinnerModule,"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"      ],"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"      providers: ["},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"        NavigationService,"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"        CourseService,"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"        AuthService,"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"        AccountService,"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"        {"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"          provide: ActivatedRoute,"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"          useValue: {"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"            queryParams: of({"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"              iscreatingaccount: \u0027true\u0027,"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"              key: \u0027key\u0027,"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"            }),"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"          },"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"        },"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"      ],"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"    }).compileComponents();"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"  }));"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"    fixture \u003d TestBed.createComponent(UserJoinPageComponent);"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"    accountService \u003d TestBed.inject(AccountService);"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should create account and join course when join course button is clicked on\u0027, () \u003d\u003e {"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"    const params: string[] \u003d [\u0027key\u0027];"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"    component.isLoading \u003d false;"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"    component.isCreatingAccount \u003d true;"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"    component.key \u003d \u0027key\u0027;"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"    component.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"    component.validUrl \u003d true;"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"    const accountSpy: Spy \u003d spyOn(accountService, \u0027createAccount\u0027).and.returnValue(of({}));"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"    fixture.detectChanges();"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"    const btn: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-confirm\u0027);"},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"    btn.click();"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"    expect(accountSpy.calls.count()).toEqual(1);"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"    expect(accountSpy.calls.mostRecent().args).toEqual(params);"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/instructor\u0027);"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should redirect user to home page if user is logged in and URL has been used\u0027, () \u003d\u003e {"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of({"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"      user: {"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"        id: \u0027user\u0027,"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"        isAdmin: false,"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"        isInstructor: false,"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"        isStudent: false,"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"        isMaintainer: false,"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"      masquerade: false,"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"    spyOn(courseService, \u0027getJoinCourseStatus\u0027).and.returnValue(of({"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"      hasJoined: true,"},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"    component.ngOnInit();"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.hasJoined).toBeTruthy();"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.userId).toEqual(\u0027user\u0027);"},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/instructor/home\u0027);"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should stop loading and show error message if 404 is returned when creating new account\u0027, () \u003d\u003e {"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of({"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"      user: {"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"        id: \u0027user\u0027,"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":"        isAdmin: false,"},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"        isInstructor: false,"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"        isStudent: false,"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"        isMaintainer: false,"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"      },"},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"      masquerade: false,"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"    spyOn(courseService, \u0027getJoinCourseStatus\u0027).and.returnValue(throwError({"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"      status: 404,"},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"    }));"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"    component.ngOnInit();"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.entityType).toBe(\u0027instructor\u0027);"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.isCreatingAccount).toBeTruthy();"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.isLoading).toBeFalsy();"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"    expect(component.validUrl).toBeFalsy();"},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"});"}],"authorContributionMap":{"-":184,"samuelfangjw":121}},{"path":"src/web/app/user-join-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { environment } from \u0027../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import { AccountService } from \u0027../services/account.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../services/auth.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../services/course.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../services/navigation.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { AuthInfo, JoinStatus } from \u0027../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027./components/error-report/error-report.component\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027./error-message-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * User join page component."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  selector: \u0027tm-user-join-page\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./user-join-page.component.html\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./user-join-page.component.scss\u0027],"},{"lineNumber":21,"author":{"gitId":"-"},"content":"})"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export class UserJoinPageComponent implements OnInit {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  isLoading: boolean \u003d true;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"  isCreatingAccount: boolean \u003d false;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  hasJoined: boolean \u003d false;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  validUrl: boolean \u003d true;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  entityType: string \u003d \u0027\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  key: string \u003d \u0027\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  userId: string \u003d \u0027\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"              private accountService: AccountService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal) {}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      this.entityType \u003d queryParams.entitytype;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      this.key \u003d queryParams.key;"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"      this.isCreatingAccount \u003d queryParams.iscreatingaccount \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      // Create account request can only come from instructor."},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"      if (this.isCreatingAccount) {"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        this.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"      }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search.replace(/\u0026/g, \u0027%26\u0027)}`;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) \u003d\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!auth.user) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          this.isLoading \u003d false;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          if (this.entityType \u003d\u003d\u003d \u0027student\u0027) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          } else if (this.entityType \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            window.location.href \u003d `${this.backendUrl}${auth.instructorLoginUrl}`;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.userId \u003d auth.user.id;"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        this.courseService"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"          .getJoinCourseStatus(this.key, this.entityType, this.isCreatingAccount)"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"          .subscribe((resp: JoinStatus) \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            this.hasJoined \u003d resp.hasJoined;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            if (this.hasJoined) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"              // The regkey has been used; simply redirect the user to their home page,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"              // regardless of whether the regkey matches or not."},{"lineNumber":73,"author":{"gitId":"-"},"content":"              this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"              this.isLoading \u003d false;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"              this.validUrl \u003d false;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              this.isLoading \u003d false;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            modalRef.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            modalRef.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":92,"author":{"gitId":"-"},"content":"   * Joins the course."},{"lineNumber":93,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  joinCourse(): void {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.courseService.joinCourse(this.key, this.entityType).subscribe(() \u003d\u003e {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      this.navigationService.navigateByURL(this.router, `/web/${this.entityType}`);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"   * Creates an account."},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"   * Account is only created after instructor joins for the first time."},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"  createAccount(): void {"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    this.isLoading \u003d true;"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    this.accountService"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"      .createAccount(this.key)"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"      .pipe(finalize(() \u003d\u003e (this.isLoading \u003d false)))"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"      .subscribe("},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        () \u003d\u003e {"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"          this.navigationService.navigateByURL(this.router, \u0027/web/instructor\u0027);"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        },"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"          if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"            this.validUrl \u003d false;"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"          } else {"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"            const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"            modalRef.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"            modalRef.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"          }"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        },"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"      );"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":90,"samuelfangjw":39}},{"path":"src/web/app/user-join-page.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import { LoadingSpinnerModule } from \u0027./components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { UserJoinPageComponent } from \u0027./user-join-page.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":8,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    component: UserJoinPageComponent,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":12,"author":{"gitId":"-"},"content":"];"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Module for user join page."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":19,"author":{"gitId":"-"},"content":"    UserJoinPageComponent,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":22,"author":{"gitId":"-"},"content":"    UserJoinPageComponent,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    LoadingSpinnerModule,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":29,"author":{"gitId":"-"},"content":"})"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export class UserJoinPageModule { }"}],"authorContributionMap":{"-":28,"samuelfangjw":2}},{"path":"src/web/services/account.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AccountCreateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AccountService } from \u0027./account.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"describe(\u0027AccountService\u0027, () \u003d\u003e {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  let spyHttpRequestService: any;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  let service: AccountService;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  const id: string \u003d \u0027TestID\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    spyHttpRequestService \u003d {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      get: jest.fn(),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      post: jest.fn(),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      put: jest.fn(),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      delete: jest.fn(),"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":23,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":26,"author":{"gitId":"-"},"content":"        { provide: HttpRequestService, useValue: spyHttpRequestService },"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    service \u003d TestBed.inject(AccountService);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  it(\u0027should be created\u0027, () \u003d\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    expect(service).toBeTruthy();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET on account endpoint\u0027, () \u003d\u003e {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    service.getAccount(id);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  it(\u0027should execute POST on account endpoint\u0027, () \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    const testKey: string \u003d \u0027testKey\u0027;"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"      key: testKey,"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    };"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    service.createAccount(testKey);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"  });"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"  it(\u0027should execute POST on account request endpoint\u0027, () \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    const testRequest: AccountCreateRequest \u003d new class implements AccountCreateRequest {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      instructorEmail: string \u003d \u0027testEmail\u0027;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      instructorInstitution: string \u003d \u0027testInstitution\u0027;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      instructorName: string \u003d \u0027testName\u0027;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    service.createAccountRequest(testRequest);"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_REQUEST, {}, testRequest);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  it(\u0027should execute DELETE on account endpoint\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    service.deleteAccount(id);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT on account/downgrade endpoint\u0027, () \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    service.downgradeAccount(id);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_DOWNGRADE, paramMap);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT on account/reset endpoint for student\u0027, () \u003d\u003e {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    service.resetStudentAccount(id, \u0027testStudentEmail\u0027);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      courseid: id,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      studentemail: \u0027testStudentEmail\u0027,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_RESET, paramMap);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT on account/reset endpoint for instructor\u0027, () \u003d\u003e {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    service.resetInstructorAccount(id, \u0027testInstructorEmail\u0027);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      courseid: id,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      instructoremail: \u0027testInstructorEmail\u0027,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.ACCOUNT_RESET, paramMap);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":96,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":85,"samuelfangjw":11}},{"path":"src/web/services/account.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Account, JoinLink, MessageOutput } from \u0027../types/api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AccountCreateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Handles account related logic provision"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class AccountService {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  constructor(private httpRequestService: HttpRequestService) {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   * Creates an account by calling API."},{"lineNumber":20,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"  createAccount(key: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { key };"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    return this.httpRequestService.post(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"  }"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  /**"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"   * Creates an account request by calling API."},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"   */"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  createAccountRequest(request: AccountCreateRequest): Observable\u003cJoinLink\u003e {"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    return this.httpRequestService.post(ResourceEndpoints.ACCOUNT_REQUEST, {}, request);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * Downgrades an account from instructor to student by calling API."},{"lineNumber":35,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  downgradeAccount(id: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.ACCOUNT_DOWNGRADE, paramMap);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * Deletes an account by calling API."},{"lineNumber":45,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  deleteAccount(id: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      instructorid: id,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * Resets a student account by calling API."},{"lineNumber":55,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  resetStudentAccount(courseId: string, studentEmail: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.ACCOUNT_RESET, paramMap);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * Resets an instructor account by calling API."},{"lineNumber":66,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  resetInstructorAccount(courseId: string, instructorEmail: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      instructoremail: instructorEmail,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.ACCOUNT_RESET, paramMap);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   * Gets an account by calling API."},{"lineNumber":77,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  getAccount(googleId: string): Observable\u003cAccount\u003e {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      instructorid: googleId,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.ACCOUNT, paramMap);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":75,"samuelfangjw":10}},{"path":"src/web/services/course.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { CourseArchiveRequest, CourseCreateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027./course.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"describe(\u0027CourseService\u0027, () \u003d\u003e {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  let spyHttpRequestService: any;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  let service: CourseService;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    spyHttpRequestService \u003d {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      get: jest.fn(),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      post: jest.fn(),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      put: jest.fn(),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      delete: jest.fn(),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":22,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":25,"author":{"gitId":"-"},"content":"        { provide: HttpRequestService, useValue: spyHttpRequestService },"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    service \u003d TestBed.inject(CourseService);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  it(\u0027should be created\u0027, () \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    expect(service).toBeTruthy();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET on courses endpoint with course status as an instructor\u0027, () \u003d\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    const courseStatus: string \u003d \u0027active\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      coursestatus: courseStatus,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    service.getAllCoursesAsInstructor(courseStatus);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET on course endpoint with course id as an instructor\u0027, () \u003d\u003e {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    service.getCourseAsInstructor(courseId);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when getting all courses as student\u0027, () \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    service.getAllCoursesAsStudent();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when getting specific course as student\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    service.getCourseAsStudent(courseId);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  it(\u0027should GET student courses data of a given google id in masquerade mode\u0027, () \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    const googleId: string \u003d \u0027test-id\u0027;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    service.getStudentCoursesInMasqueradeMode(googleId);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  it(\u0027should GET instructor courses data of a given google id in masquerade mode\u0027, () \u003d\u003e {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    const googleId: string \u003d \u0027test-id\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    const activeCoursesParamMap: { [key: string]: string } \u003d {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      coursestatus: \u0027active\u0027,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const archivedCoursesParamMap: { [key: string]: string } \u003d {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      coursestatus: \u0027archived\u0027,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    service.getInstructorCoursesInMasqueradeMode(googleId);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, activeCoursesParamMap);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, archivedCoursesParamMap);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when getting all active instructor courses\u0027, () \u003d\u003e {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      coursestatus: \u0027active\u0027,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    service.getInstructorCoursesThatAreActive();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"  it(\u0027should execute POST to create course\u0027, () \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    const request: CourseCreateRequest \u003d new class implements CourseCreateRequest {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      courseName: string \u003d \u0027test-name\u0027;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      timeZone: string \u003d \u0027test-zone\u0027;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {};"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    service.createCourse(request);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap, request);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT to update course\u0027, () \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    const request: CourseCreateRequest \u003d new class implements CourseCreateRequest {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      courseId: string \u003d courseid;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      courseName: string \u003d \u0027test-name\u0027;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      timeZone: string \u003d \u0027test-zone\u0027;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    service.updateCourse(courseid, request);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap, request);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  it(\u0027should execute DELETE to delete course\u0027, () \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    service.deleteCourse(courseid);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT to archive course\u0027, () \u003d\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    const request: CourseArchiveRequest \u003d new class implements CourseArchiveRequest {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      archiveStatus: boolean \u003d true;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      courseId: string \u003d courseid;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      courseName: string \u003d \u0027test-name\u0027;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      timeZone: string \u003d \u0027test-zone\u0027;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    service.changeArchiveStatus(courseid, request);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put)"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        .toHaveBeenCalledWith(ResourceEndpoints.COURSE_ARCHIVE, paramMap, request);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT to bin course\u0027, () \u003d\u003e {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    service.binCourse(courseid);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.BIN_COURSE, paramMap);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  it(\u0027should execute DELETE to restore course\u0027, () \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    service.restoreCourse(courseid);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.BIN_COURSE, paramMap);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET to retrieve join course status\u0027, () \u003d\u003e {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    const regKey: string \u003d \u0027ABC\u0027;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    const entityType: string \u003d \u0027instructor\u0027;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      key: regKey,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      entitytype: entityType,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    service.getJoinCourseStatus(regKey, entityType, false);"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"    paramMap.iscreatingaccount \u003d \u0027true\u0027;"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"    service.getJoinCourseStatus(regKey, entityType, true);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"  it(\u0027should execute PUT when joining course\u0027, () \u003d\u003e {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      key: \u0027123\u0027,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    service.joinCourse(paramMap.key, paramMap.entitytype);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  it(\u0027should execute POST to remind unregistered students of a course\u0027, () \u003d\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    const courseid: string \u003d \u0027test-id\u0027;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d { courseid };"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    service.remindUnregisteredStudentsForJoin(courseid);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  it(\u0027should execute POST to remind particular student\u0027, () \u003d\u003e {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    const studentEmail: string \u003d \u0027test@example.com\u0027;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    service.remindStudentForJoin(courseId, studentEmail);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"  it(\u0027should execute POST to remind particular instructor\u0027, () \u003d\u003e {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    const instructorEmail: string \u003d \u0027test@example.com\u0027;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      instructoremail: instructorEmail,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    service.remindInstructorForJoin(courseId, instructorEmail);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET to check responses for course\u0027, () \u003d\u003e {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    const paramMap: { [key: string]: string } \u003d {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    service.hasResponsesForCourse(courseId);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.HAS_RESPONSES, paramMap);"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"  it(\u0027should execute DELETE to remove student from course\u0027, () \u003d\u003e {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    const courseId: string \u003d \u0027test-id\u0027;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    const studentEmail: string \u003d \u0027test@example.com\u0027;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    const paramsMap: { [key: string]: string } \u003d {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    service.removeStudentFromCourse(courseId, studentEmail);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.STUDENT, paramsMap);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"  it(\u0027should execute GET when getting course section names\u0027, () \u003d\u003e {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      courseid: \u0027CS3281\u0027,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    service.getCourseSectionNames(paramMap.courseid);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSE_SECTIONS, paramMap);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":248,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":243,"samuelfangjw":5}},{"path":"src/web/services/course.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { forkJoin, Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Course, CourseArchive, Courses, HasResponses, JoinStatus, MessageOutput, Student } from \u0027../types/api-output\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { CourseArchiveRequest, CourseCreateRequest, CourseUpdateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * The statistics of a course"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export interface CourseStatistics {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  numOfSections: number;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  numOfTeams: number;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  numOfStudents: number;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Handles course related logic provision."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class CourseService {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  constructor(private httpRequestService: HttpRequestService) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * Gets all course data for an instructor by calling API."},{"lineNumber":31,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  getAllCoursesAsInstructor(courseStatus: string): Observable\u003cCourses\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      coursestatus: courseStatus,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * Get course data by calling API as an instructor."},{"lineNumber":42,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  getCourseAsInstructor(courseId: string): Observable\u003cCourse\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * Gets all course data for a student by calling API."},{"lineNumber":53,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  getAllCoursesAsStudent(): Observable\u003cCourses\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * Get course data by calling API as a student."},{"lineNumber":63,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  getCourseAsStudent(courseId: string): Observable\u003cCourse\u003e {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"   * Get student courses data of a given google id in masquerade mode by calling API."},{"lineNumber":74,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  getStudentCoursesInMasqueradeMode(googleId: string): Observable\u003cCourses\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      entitytype: \u0027student\u0027,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":84,"author":{"gitId":"-"},"content":"   * Get instructor courses data of a given google id in masquerade mode by calling API."},{"lineNumber":85,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  getInstructorCoursesInMasqueradeMode(googleId: string): Observable\u003cCourses\u003e {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    const activeCoursesParamMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      coursestatus: \u0027active\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    const archivedCoursesParamMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      coursestatus: \u0027archived\u0027,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      user: googleId,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    return forkJoin(["},{"lineNumber":99,"author":{"gitId":"-"},"content":"      this.httpRequestService.get(ResourceEndpoints.COURSES, activeCoursesParamMap),"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      this.httpRequestService.get(ResourceEndpoints.COURSES, archivedCoursesParamMap),"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ]).pipe("},{"lineNumber":102,"author":{"gitId":"-"},"content":"        map((vals: Courses[]) \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          return {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            courses: vals[0].courses.concat(vals[1].courses),"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   * Get active instructor courses."},{"lineNumber":112,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  getInstructorCoursesThatAreActive(): Observable\u003cCourses\u003e {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSES, {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      coursestatus: \u0027active\u0027,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Creates a course by calling API."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  createCourse(request: CourseCreateRequest): Observable\u003cCourse\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.COURSE, paramMap, request);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * Updates a course by calling API."},{"lineNumber":130,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  updateCourse(courseid: string, request: CourseUpdateRequest): Observable\u003cCourse\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.COURSE, paramMap, request);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Deletes a course by calling API."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  deleteCourse(courseid: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.COURSE, paramMap);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   * Changes the archive status of a course by calling API."},{"lineNumber":146,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  changeArchiveStatus(courseid: string, request: CourseArchiveRequest): Observable\u003cCourseArchive\u003e {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.COURSE_ARCHIVE, paramMap, request);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * Bin (soft-delete) a course by calling API."},{"lineNumber":154,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  binCourse(courseid: string): Observable\u003cCourse\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.BIN_COURSE, paramMap);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":161,"author":{"gitId":"-"},"content":"   * Restore a soft-deleted course by calling API."},{"lineNumber":162,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  restoreCourse(courseid: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d { courseid };"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.BIN_COURSE, paramMap);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   * Get the status of whether the entity has joined the course by calling API."},{"lineNumber":170,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"  getJoinCourseStatus(regKey: string, entityType: string, isCreatingAccount: boolean): Observable\u003cJoinStatus\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      key: regKey,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      entitytype: entityType,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"    if (isCreatingAccount) {"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"      paramMap.iscreatingaccount \u003d \u0027true\u0027;"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":185,"author":{"gitId":"-"},"content":"   * Join a course by calling API."},{"lineNumber":186,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  joinCourse(regKey: string, entityType: string): Observable\u003cany\u003e {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      key: regKey,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      entitytype: entityType,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.JOIN, paramMap);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   * Send join reminder emails to unregistered students."},{"lineNumber":197,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  remindUnregisteredStudentsForJoin(courseId: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   * Send join reminder email to a student."},{"lineNumber":207,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  remindStudentForJoin(courseId: string, studentEmail: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":217,"author":{"gitId":"-"},"content":"   * Send join reminder email to an instructor."},{"lineNumber":218,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  remindInstructorForJoin(courseId: string, instructorEmail: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      instructoremail: instructorEmail,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":228,"author":{"gitId":"-"},"content":"   * Checks if there are responses for a course (request sent by instructor)."},{"lineNumber":229,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  hasResponsesForCourse(courseId: string): Observable\u003cHasResponses\u003e {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      entitytype: \u0027instructor\u0027,"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.HAS_RESPONSES, paramMap);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":239,"author":{"gitId":"-"},"content":"   * Removes student from course."},{"lineNumber":240,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  removeStudentFromCourse(courseId: string, studentEmail: string): Observable\u003cany\u003e {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    const paramsMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.STUDENT, paramsMap);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":250,"author":{"gitId":"-"},"content":"   * Gets a list of course section names."},{"lineNumber":251,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  getCourseSectionNames(courseId: string): Observable\u003cany\u003e {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    const paramsMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.COURSE_SECTIONS, paramsMap);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":260,"author":{"gitId":"-"},"content":"   * Calculates the statistics for a course from a list of students in the course"},{"lineNumber":261,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  calculateCourseStatistics(students: Student[]): CourseStatistics {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    const teams: Set\u003cstring\u003e \u003d new Set();"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    const sections: Set\u003cstring\u003e \u003d new Set();"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    students.forEach((student: Student) \u003d\u003e {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      teams.add(student.teamName);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      sections.add(student.sectionName);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      numOfSections: sections.size,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      numOfTeams: teams.size,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      numOfStudents: students.length,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":269,"samuelfangjw":6}}]
