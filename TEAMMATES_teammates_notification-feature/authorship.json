[{"path":"src/e2e/java/teammates/e2e/cases/InstructorFeedbackSessionsPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorFeedbackSessionsPage;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SESSIONS_PAGE}."},{"lineNumber":26,"author":{"gitId":"-"},"content":" */"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class InstructorFeedbackSessionsPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private InstructorAttributes instructor;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private CourseAttributes course;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private CourseAttributes copiedCourse;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private StudentAttributes studentToEmail;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes openSession;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes closedSession;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes newSession;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private String fileName;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorFeedbackSessionsPageE2ETest.json\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        studentToEmail \u003d testData.students.get(\"charlie.tmms@IFSess.CS1101\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        studentToEmail.setEmail(TestProperties.TEST_EMAIL);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        instructor \u003d testData.instructors.get(\"instructor\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        course \u003d testData.courses.get(\"course\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        copiedCourse \u003d testData.courses.get(\"course2\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        openSession \u003d testData.feedbackSessions.get(\"openSession\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        closedSession \u003d testData.feedbackSessions.get(\"closedSession\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        newSession \u003d FeedbackSessionAttributes"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .builder(\"New Session\", course.getId())"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .withCreatorEmail(instructor.getEmail())"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .withStartTime(TimeHelper.parseInstant(\"2035-04-01T22:00:00Z\"))"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .withEndTime(TimeHelper.parseInstant(\"2035-04-30T20:00:00Z\"))"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .withSessionVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_OPENING)"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER)"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withGracePeriod(Duration.ZERO)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withInstructions(\"\u003cp\u003ePlease fill in the new feedback session.\u003c/p\u003e\")"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTimeZone(course.getTimeZone())"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withIsClosingEmailEnabled(true)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withIsPublishedEmailEnabled(true)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        fileName \u003d \"/\" + openSession.getCourseId() + \"_\" + openSession.getFeedbackSessionName()"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + \"_result.csv\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void classSetup() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        deleteDownloadsFile(fileName);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_SESSIONS_PAGE);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        InstructorFeedbackSessionsPage feedbackSessionsPage \u003d"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                loginToPage(url, InstructorFeedbackSessionsPage.class, instructor.getGoogleId());"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ______TS(\"verify loaded data\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] loadedSessions \u003d { openSession, closedSession };"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortByCourseId();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(loadedSessions);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ______TS(\"verify response rate\");"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyResponseRate(closedSession, getExpectedResponseRate(closedSession));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyResponseRate(openSession, getExpectedResponseRate(openSession));"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ______TS(\"add new session\");"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForAdded \u003d { closedSession, newSession, openSession };"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.addFeedbackSession(newSession, true);"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been added.\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                + \"Click the \\\"Add New Question\\\" button below to begin adding questions for the feedback session.\");"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        feedbackSessionsPage \u003d getNewPageInstance(url,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                InstructorFeedbackSessionsPage.class);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForAdded);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(newSession);"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ______TS(\"add new copied session\");"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String newName \u003d \"Copied Name\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes copiedSession \u003d openSession.getCopy();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        copiedSession.setCourseId(course.getId());"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        copiedSession.setFeedbackSessionName(newName);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        copiedSession.setCreatedTime(Instant.now());"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.addCopyOfSession(openSession, course, newName);"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                        + \"Please modify settings/questions as necessary.\");"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        feedbackSessionsPage \u003d getNewPageInstance(url,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                InstructorFeedbackSessionsPage.class);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(copiedSession);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(copiedSession);"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        ______TS(\"copy session\");"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        newName \u003d \"Copied Name 2\";"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes copiedSession2 \u003d openSession.getCopy();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        copiedSession2.setCourseId(course.getId());"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        copiedSession2.setFeedbackSessionName(newName);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        copiedSession2.setCreatedTime(Instant.now());"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.copySession(openSession, course, newName);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \"Please modify settings/questions as necessary.\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        feedbackSessionsPage \u003d getNewPageInstance(url,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                InstructorFeedbackSessionsPage.class);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(copiedSession2);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(copiedSession2);"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        ______TS(\"publish results\");"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        openSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_NOW);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.publishSessionResults(openSession);"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been published. \""},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + \"Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(openSession);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(openSession, true);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to selected student\");"},{"lineNumber":146,"author":{"gitId":"Nicolascwy"},"content":"        feedbackSessionsPage.sendReminderEmailToSelectedStudent(openSession, studentToEmail);"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to all student non-submitters\");"},{"lineNumber":155,"author":{"gitId":"Nicolascwy"},"content":"        feedbackSessionsPage.sendReminderEmailToNonSubmitters(openSession);"},{"lineNumber":156,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":157,"author":{"gitId":"Nicolascwy"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":158,"author":{"gitId":"Nicolascwy"},"content":"                        + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":159,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":160,"author":{"gitId":"Nicolascwy"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":162,"author":{"gitId":"Nicolascwy"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":163,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        ______TS(\"resend results link\");"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.resendResultsLink(openSession, studentToEmail);"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"Session published notification emails have been resent\""},{"lineNumber":168,"author":{"gitId":"-"},"content":"                + \" to those students and instructors. Please allow up to 1 hour for all the notification emails to be\""},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + \" sent out.\");"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ______TS(\"unpublish results\");"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        openSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.unpublishSessionResults(openSession);"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been unpublished.\");"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(openSession);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(openSession, false);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results unpublished\""},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ______TS(\"download results\");"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.downloadResults(openSession);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedContent \u003d Arrays.asList(\"Course,tm.e2e.IFSess.CS1101\","},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \"Session Name,Second Session\", \"Question 1,Testing question text\");"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        verifyDownloadedFile(fileName, expectedContent);"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ______TS(\"soft delete session\");"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        closedSession.setDeletedTime(Instant.now());"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForSoftDelete \u003d { copiedSession, copiedSession2, newSession, openSession };"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] softDeletedSessions \u003d { closedSession };"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(closedSession);"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been deleted. \""},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + \"You can restore it from the deleted sessions table below.\");"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForSoftDelete);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySoftDeletedSessionsTable(softDeletedSessions);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertNotNull(getSoftDeletedSession(closedSession.getFeedbackSessionName(),"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ______TS(\"restore session\");"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForRestore \u003d { openSession, newSession, closedSession, copiedSession2,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                copiedSession };"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.restoreSession(closedSession);"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been restored.\");"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForRestore);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertNull(getSoftDeletedSession(closedSession.getFeedbackSessionName(),"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        ______TS(\"permanently delete session\");"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForDelete \u003d { copiedSession, copiedSession2, closedSession,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                openSession };"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(newSession);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.deleteSession(newSession);"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been permanently deleted.\");"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForDelete);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(newSession);"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        ______TS(\"restore all session\");"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForRestoreAll \u003d { openSession, closedSession, copiedSession2,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                copiedSession };"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession2);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.restoreAllSessions();"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"All sessions have been restored.\");"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForRestoreAll);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertNull(getSoftDeletedSession(copiedSession.getFeedbackSessionName(),"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertNull(getSoftDeletedSession(copiedSession2.getFeedbackSessionName(),"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        ______TS(\"delete all session\");"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession2);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForDeleteAll \u003d { closedSession, openSession };"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.deleteAllSessions();"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"All sessions have been permanently deleted.\");"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForDeleteAll);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(copiedSession);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(copiedSession2);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    private String getExpectedResponseRate(FeedbackSessionAttributes session) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        String sessionName \u003d session.getFeedbackSessionName();"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        boolean hasQuestion \u003d testData.feedbackQuestions.values()"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                .anyMatch(q -\u003e q.getFeedbackSessionName().equals(sessionName));"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!hasQuestion) {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return \"0 / 0\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"        long numStudents \u003d testData.students.values()"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                .filter(s -\u003e s.getCourse().equals(session.getCourseId()))"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                .count();"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e uniqueGivers \u003d new HashSet\u003c\u003e();"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        testData.feedbackResponses.values()"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.getFeedbackSessionName().equals(sessionName))"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                .forEach(r -\u003e uniqueGivers.add(r.getGiver()));"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        int numResponses \u003d uniqueGivers.size();"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        return numResponses + \" / \" + numStudents;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"    private void verifySessionPublishedState(FeedbackSessionAttributes feedbackSession, boolean state) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                feedbackSession.getFeedbackSessionName());"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        while (actual.isPublished() \u003d\u003d state \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    feedbackSession.getFeedbackSessionName());"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertEquals(actual.isPublished(), state);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":284,"Nicolascwy":12}},{"path":"src/e2e/java/teammates/e2e/cases/InstructorHomePageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorHomePage;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#INSTRUCTOR_HOME_PAGE}."},{"lineNumber":24,"author":{"gitId":"-"},"content":" */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class InstructorHomePageE2ETest extends BaseE2ETestCase {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private InstructorAttributes instructor;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private StudentAttributes studentToEmail;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private CourseAttributes course;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private CourseAttributes otherCourse;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionAwaiting;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionOpen;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionClosed;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionPublished;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes otherCourseSession;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private String fileName;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorHomePageE2ETest.json\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        studentToEmail \u003d testData.students.get(\"IHome.charlie.d.tmms@IHome.CS2104\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        studentToEmail.setEmail(TestProperties.TEST_EMAIL);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        putDocuments(testData);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        instructor \u003d testData.instructors.get(\"IHome.instr.CS2104\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        course \u003d testData.courses.get(\"IHome.CS2104\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        otherCourse \u003d testData.courses.get(\"IHome.CS1101\");"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        feedbackSessionAwaiting \u003d testData.feedbackSessions.get(\"Second Feedback Session\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        feedbackSessionOpen \u003d testData.feedbackSessions.get(\"First Feedback Session\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        feedbackSessionClosed \u003d testData.feedbackSessions.get(\"Third Feedback Session\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        feedbackSessionPublished \u003d testData.feedbackSessions.get(\"Fourth Feedback Session\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        otherCourseSession \u003d testData.feedbackSessions.get(\"CS1101 Session\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        fileName \u003d \"/\" + feedbackSessionOpen.getCourseId() + \"_\" + feedbackSessionOpen.getFeedbackSessionName()"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + \"_result.csv\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void classSetup() {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        deleteDownloadsFile(fileName);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        InstructorHomePage homePage \u003d loginToPage(url, InstructorHomePage.class, instructor.getGoogleId());"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ______TS(\"verify loaded data\");"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        homePage.sortCoursesById();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int courseIndex \u003d 1;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int otherCourseIndex \u003d 0;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // by default, sessions are sorted by end date in descending order"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] courseSessions \u003d { feedbackSessionOpen, feedbackSessionAwaiting,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                feedbackSessionClosed, feedbackSessionPublished };"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] otherCourseSessions \u003d { otherCourseSession };"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // use course index instead of searching for course in table to test sorted order of courses"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(otherCourseIndex, otherCourse, otherCourseSessions);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(courseIndex, course, courseSessions);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ______TS(\"verify response rate\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c courseSessions.length; i++) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            homePage.verifyResponseRate(courseIndex, i, getExpectedResponseRate(courseSessions[i]));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ______TS(\"copy session\");"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        int sessionIndex \u003d 1;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String newName \u003d \"Copied Name\";"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes copiedSession \u003d feedbackSessionAwaiting.getCopy();"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        copiedSession.setCourseId(otherCourse.getId());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        copiedSession.setFeedbackSessionName(newName);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        copiedSession.setCreatedTime(Instant.now());"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        copiedSession.setTimeZone(otherCourse.getTimeZone());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        homePage.copySession(courseIndex, sessionIndex, otherCourse, newName);"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + \"Please modify settings/questions as necessary.\");"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        homePage \u003d getNewPageInstance(url, InstructorHomePage.class);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        homePage.sortCoursesByName();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // flip index after sorting"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        courseIndex \u003d 0;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        otherCourseIndex \u003d 1;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] otherCourseSessionsWithCopy \u003d { copiedSession, otherCourseSession };"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(otherCourseIndex, otherCourse, otherCourseSessionsWithCopy);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(copiedSession);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ______TS(\"publish results\");"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        sessionIndex \u003d 0;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        feedbackSessionOpen.setResultsVisibleFromTime(Const.TIME_REPRESENTS_NOW);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        homePage.publishSessionResults(courseIndex, sessionIndex);"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been published. \""},{"lineNumber":116,"author":{"gitId":"-"},"content":"                + \"Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        homePage.verifySessionDetails(courseIndex, sessionIndex, feedbackSessionOpen);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(feedbackSessionOpen, true);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to selected student\");"},{"lineNumber":124,"author":{"gitId":"Nicolascwy"},"content":"        homePage.sendReminderEmailToSelectedStudent(courseIndex, sessionIndex, studentToEmail);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":130,"author":{"gitId":"Nicolascwy"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":131,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":132,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to all student non-submitters\");"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":"        homePage.sendReminderEmailToNonSubmitters(courseIndex, sessionIndex);"},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"        homePage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":136,"author":{"gitId":"Nicolascwy"},"content":"                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":137,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":138,"author":{"gitId":"Nicolascwy"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":139,"author":{"gitId":"Nicolascwy"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ______TS(\"resend results link\");"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        homePage.resendResultsLink(courseIndex, sessionIndex, studentToEmail);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"Session published notification emails have been resent\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + \" to those students and instructors. Please allow up to 1 hour for all the notification emails to be\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + \" sent out.\");"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ______TS(\"unpublish results\");"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        feedbackSessionOpen.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        homePage.unpublishSessionResults(courseIndex, sessionIndex);"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been unpublished.\");"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        homePage.verifySessionDetails(courseIndex, sessionIndex, feedbackSessionOpen);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(feedbackSessionOpen, false);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results unpublished\""},{"lineNumber":160,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"        ______TS(\"download results\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        homePage.downloadResults(courseIndex, sessionIndex);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedContent \u003d Arrays.asList(\"Course,tm.e2e.IHome.CS2104\","},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \"Session Name,First Feedback Session\", \"Question 1,Rate 5 other students\u0027 products\");"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        verifyDownloadedFile(fileName, expectedContent);"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ______TS(\"soft delete session\");"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        copiedSession.setDeletedTime(Instant.now());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        homePage.deleteSession(otherCourseIndex, sessionIndex);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been deleted. \""},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + \"You can restore it from the \u0027Sessions\u0027 tab.\");"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        homePage.sortCoursesByCreationDate();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        courseIndex \u003d 1;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        otherCourseIndex \u003d 0;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(otherCourseIndex, otherCourse, otherCourseSessions);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertNotNull(getSoftDeletedSession(copiedSession.getFeedbackSessionName(),"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ______TS(\"archive course\");"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        homePage.archiveCourse(courseIndex);"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The course \" + course.getId() + \" has been archived. \""},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + \"You can retrieve it from the Courses page.\");"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        homePage.verifyNumCourses(1);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        verifyCourseArchivedInDatabase(instructor.getGoogleId(), course);"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ______TS(\"delete course\");"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        otherCourseIndex \u003d 0;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        homePage.deleteCourse(otherCourseIndex);"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The course \" + otherCourse.getId() + \" has been deleted. \""},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + \"You can restore it from the Recycle Bin manually.\");"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        homePage.verifyNumCourses(0);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(BACKDOOR.isCourseInRecycleBin(otherCourse.getId()));"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private String getExpectedResponseRate(FeedbackSessionAttributes session) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String sessionName \u003d session.getFeedbackSessionName();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        boolean hasQuestion \u003d testData.feedbackQuestions.values()"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .anyMatch(q -\u003e q.getFeedbackSessionName().equals(sessionName));"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (!hasQuestion) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return \"0 / 0\";"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        long numStudents \u003d testData.students.values()"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .filter(s -\u003e s.getCourse().equals(session.getCourseId()))"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .count();"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e uniqueGivers \u003d new HashSet\u003c\u003e();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        testData.feedbackResponses.values()"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.getFeedbackSessionName().equals(sessionName))"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .forEach(r -\u003e uniqueGivers.add(r.getGiver()));"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        int numResponses \u003d uniqueGivers.size();"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return numResponses + \" / \" + numStudents;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private void verifySessionPublishedState(FeedbackSessionAttributes feedbackSession, boolean state) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                feedbackSession.getFeedbackSessionName());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        while (actual.isPublished() \u003d\u003d state \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    feedbackSession.getFeedbackSessionName());"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(actual.isPublished(), state);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private void verifyCourseArchivedInDatabase(String instructorId, CourseAttributes course) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        CourseAttributes actual \u003d getArchivedCourse(instructorId, course.getId());"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        while (actual \u003d\u003d null \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            actual \u003d getArchivedCourse(instructorId, course.getId());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertEquals(actual, course);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":236,"Nicolascwy":12}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorFeedbackSessionsPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the \"Sessions\" page for Instructors."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class InstructorFeedbackSessionsPage extends AppPage {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-add-session\")"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private WebElement addSessionButton;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-type\")"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private WebElement sessionTypeDropdown;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"add-course-id\")"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private WebElement courseIdDropdown;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"add-session-name\")"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private WebElement sessionNameTextBox;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"instructions\")"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private WebElement instructionsEditor;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-date\")"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private WebElement startDateBox;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-time\")"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private WebElement startTimeDropdown;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-date\")"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private WebElement endDateBox;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-time\")"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private WebElement endTimeDropdown;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"grace-period\")"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private WebElement gracePeriodDropdown;"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-visibility\")"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private WebElement changeVisibilityButton;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-custom\")"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private WebElement customSessionVisibleTimeButton;"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-date\")"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityDateBox;"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-time\")"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityTimeDropdown;"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-at-open\")"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private WebElement openSessionVisibleTimeButton;"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-custom\")"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private WebElement customResponseVisibleTimeButton;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-date\")"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityDateBox;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-time\")"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityTimeDropdown;"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-immediately\")"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private WebElement immediateResponseVisibleTimeButton;"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-manually\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private WebElement manualResponseVisibleTimeButton;"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-email\")"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private WebElement changeEmailButton;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-opening\")"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private WebElement openingSessionEmailCheckbox;"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-closing\")"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private WebElement closingSessionEmailCheckbox;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-published\")"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private WebElement publishedSessionEmailCheckbox;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-create-session\")"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private WebElement createSessionButton;"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"sessions-table\")"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private WebElement sessionsTable;"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"deleted-sessions-heading\")"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private WebElement deleteTableHeading;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-restore-all\")"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private WebElement restoreAllButton;"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-delete-all\")"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private WebElement deleteAllButton;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"deleted-sessions-table\")"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private WebElement deletedSessionsTable;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public InstructorFeedbackSessionsPage(Browser browser) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Feedback Sessions\");"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void verifySessionsTable(FeedbackSessionAttributes[] sessions) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][4];"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getSessionDetails(sessions[i]);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(sessionsTable, expectedValues);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String[] expectedValues \u003d getSessionDetails(session);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        verifyTableRowValues(sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId), expectedValues);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void verifySoftDeletedSessionsTable(FeedbackSessionAttributes[] sessions) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][4];"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getSoftDeletedSessionDetails(sessions[i]);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(deletedSessionsTable, expectedValues);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void verifyNumSoftDeleted(int expected) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(getNumSoftDeletedFeedbackSessions(), expected);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void verifyResponseRate(FeedbackSessionAttributes session, String expectedResponseRate) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedResponseRate, getResponseRate(rowId));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void addFeedbackSession(FeedbackSessionAttributes newSession, boolean isUsingTemplate) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        clickAddSessionButton();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.cssSelector(\"#instructions iframe\"));"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (isUsingTemplate) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(sessionTypeDropdown, \"session using template: team peer evaluation\");"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(sessionTypeDropdown, \"session with my own questions\");"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(courseIdDropdown, newSession.getCourseId());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        fillTextBox(sessionNameTextBox, newSession.getFeedbackSessionName());"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        setInstructions(newSession.getInstructions());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        setSessionStartDateTime(newSession.getStartTime(), newSession.getTimeZone());"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        setSessionEndDateTime(newSession.getEndTime(), newSession.getTimeZone());"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        selectGracePeriod(newSession.getGracePeriodMinutes());"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        setVisibilitySettings(newSession);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        setEmailSettings(newSession);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        clickCreateSessionButton();"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        waitForSessionEditPage();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void addCopyOfSession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                                 String newSessionName) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        clickAddSessionButton();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-copy-session\")));"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        selectCourseToCopy(copyToCourse.getId());"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        fillTextBox(browser.driver.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        selectSessionToCopy(sessionToCopy.getCourseId(), sessionToCopy.getFeedbackSessionName());"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"        clickConfirmCopySessionButton();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        waitForSessionEditPage();"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void copySession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                            String newSessionName) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String copyFromCourse \u003d sessionToCopy.getCourseId();"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String sessionName \u003d sessionToCopy.getFeedbackSessionName();"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d clickCopyButtonInTable(copyFromCourse, sessionName);"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        selectCourseToCopyToInModal(copyFsModal, copyToCourse.getId());"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void moveToRecycleBin(FeedbackSessionAttributes sessionToDelete) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToDelete.getCourseId(), sessionToDelete.getFeedbackSessionName());"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        clickAndConfirm(browser.driver.findElement(By.id(\"btn-soft-delete-\" + rowId)));"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void restoreSession(FeedbackSessionAttributes sessionToRestore) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        int rowId \u003d getSoftDeletedFeedbackSessionRowId(sessionToRestore.getCourseId(),"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                sessionToRestore.getFeedbackSessionName());"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-restore-\" + rowId)));"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void deleteSession(FeedbackSessionAttributes sessionToRestore) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        int rowId \u003d getSoftDeletedFeedbackSessionRowId(sessionToRestore.getCourseId(),"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                sessionToRestore.getFeedbackSessionName());"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        clickAndConfirm(browser.driver.findElement(By.id(\"btn-delete-\" + rowId)));"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void restoreAllSessions() {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        click(restoreAllButton);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void deleteAllSessions() {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        clickAndConfirm(deleteAllButton);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void showDeleteTable() {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        if (!isElementVisible(By.id(\"sort-deleted-course-id\"))) {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            click(deleteTableHeading);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            waitUntilAnimationFinish();"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToSelectedStudent(FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-remind-\" + rowId)));"},{"lineNumber":245,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-selected-\" + rowId)));"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":248,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":250,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToNonSubmitters(FeedbackSessionAttributes session) {"},{"lineNumber":251,"author":{"gitId":"Nicolascwy"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":252,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":253,"author":{"gitId":"Nicolascwy"},"content":"        click(browser.driver.findElement(By.id(\"btn-remind-\" + rowId)));"},{"lineNumber":254,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-all-\" + rowId)));"},{"lineNumber":255,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public void resendResultsLink(FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-resend-\" + rowId)));"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-resend-results\")));"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void publishSessionResults(FeedbackSessionAttributes sessionToPublish) {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToPublish.getCourseId(), sessionToPublish.getFeedbackSessionName());"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-publish-\" + rowId)));"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public void unpublishSessionResults(FeedbackSessionAttributes sessionToPublish) {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToPublish.getCourseId(), sessionToPublish.getFeedbackSessionName());"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-unpublish-\" + rowId)));"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public void downloadResults(FeedbackSessionAttributes session) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-download-\" + rowId)));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public void sortBySessionsName() {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"sort-session-name\")));"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public void sortByCourseId() {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"sort-course-id\")));"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"    private String[] getSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[4];"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getCourseId();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        details[1] \u003d session.getFeedbackSessionName();"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        if (session.isClosed()) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Closed\";"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        } else if (session.isVisible() \u0026\u0026 (session.isOpened() || session.isInGracePeriod())) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Open\";"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Awaiting\";"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        details[3] \u003d session.isPublished() ? \"Published\" : \"Not Published\";"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"    private String[] getSoftDeletedSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[4];"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getCourseId();"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        details[1] \u003d session.getFeedbackSessionName();"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        details[2] \u003d getSimpleDateString(session.getCreatedTime(), session.getTimeZone());"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        details[3] \u003d getSimpleDateString(session.getDeletedTime(), session.getTimeZone());"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, String timeZone) {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"EE, dd MMM, yyyy\");"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"    private String getSimpleDateString(Instant instant, String timeZone) {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"dd MMM, yyyy\");"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"    private String getTimeString(Instant instant, String timeZone) {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        ZonedDateTime dateTime \u003d instant.atZone(ZoneId.of(timeZone));"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        if (dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0) {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            return \"23:59H\";"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"HH:00\") + \"H\";"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    private String getResponseRate(int rowId) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        By showButtonId \u003d By.id(\"show-response-rate-\" + rowId);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        if (isElementPresent(showButtonId)) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            click(showButtonId);"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"response-rate-\" + rowId)).getText();"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"    private void clickAddSessionButton() {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        click(addSessionButton);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    private void setInstructions(String newInstructions) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(instructionsEditor, newInstructions);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"    private void setSessionStartDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        setDateTime(startDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                startTimeDropdown, startInstant, timeZone);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"    private void setSessionEndDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        setDateTime(endDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                endTimeDropdown, endInstant, timeZone);"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private void setVisibilityDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        setDateTime(sessionVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                sessionVisibilityTimeDropdown, startInstant, timeZone);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"    private void setResponseDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        setDateTime(responseVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                responseVisibilityTimeDropdown, endInstant, timeZone);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"    private void setDateTime(WebElement dateBox, WebElement timeBox, Instant startInstant, String timeZone) {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        fillTextBox(dateBox, getDateString(startInstant, timeZone));"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(timeBox.findElement(By.tagName(\"select\")), getTimeString(startInstant, timeZone));"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"    private void selectGracePeriod(long gracePeriodMinutes) {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(gracePeriodDropdown, gracePeriodMinutes + \" min\");"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    private void setVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        showVisibilitySettings();"},{"lineNumber":382,"author":{"gitId":"-"},"content":""},{"lineNumber":383,"author":{"gitId":"-"},"content":"        setSessionVisibilitySettings(newFeedbackSession);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        setResponseVisibilitySettings(newFeedbackSession);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"    private void setSessionVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        Instant sessionDateTime \u003d newFeedbackSession.getSessionVisibleFromTime();"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        if (sessionDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            click(openSessionVisibleTimeButton);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            click(customSessionVisibleTimeButton);"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            setVisibilityDateTime(sessionDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"    private void setResponseVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        Instant responseDateTime \u003d newFeedbackSession.getResultsVisibleFromTime();"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        if (responseDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            click(immediateResponseVisibleTimeButton);"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        } else if (responseDateTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            click(manualResponseVisibleTimeButton);"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"            click(customResponseVisibleTimeButton);"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            setResponseDateTime(responseDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"    private void setEmailSettings(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        showEmailSettings();"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isOpeningEmailEnabled() !\u003d openingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            click(openingSessionEmailCheckbox);"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isClosingEmailEnabled() !\u003d closingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            click(closingSessionEmailCheckbox);"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isPublishedEmailEnabled() !\u003d publishedSessionEmailCheckbox.isSelected()) {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            click(publishedSessionEmailCheckbox);"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"    private void showVisibilitySettings() {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-visibility\"))) {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"            click(changeVisibilityButton);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"    private void showEmailSettings() {"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-email\"))) {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            click(changeEmailButton);"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"    private void clickCreateSessionButton() {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        click(createSessionButton);"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"    private void selectCourseToCopy(String courseToCopyId) {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        WebElement courseIdDropdown \u003d waitForElementPresence(By.id(\"copy-course-id\"));"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(courseIdDropdown, courseToCopyId);"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"    private void selectSessionToCopy(String copyFromCourse, String sessionNameToCopy) {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        WebElement table \u003d browser.driver.findElement(By.id(\"copy-selection-table\"));"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.tagName(\"td\"));"},{"lineNumber":449,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":451,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            if (cells.get(1).getText().equals(copyFromCourse) \u0026\u0026 cells.get(2).getText().equals(sessionNameToCopy)) {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":454,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":455,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"    private void clickConfirmCopySessionButton() {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy\")));"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"    private WebElement clickCopyButtonInTable(String courseId, String sessionName) {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(courseId, sessionName);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-copy-\" + rowId)));"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":468,"author":{"gitId":"-"},"content":""},{"lineNumber":469,"author":{"gitId":"-"},"content":"    private void selectCourseToCopyToInModal(WebElement copyFsModal, String courseToCopyId) {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            if (courseId.equals(courseToCopyId)) {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":476,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"    private void selectStudentToEmail(String studentEmail) {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        WebElement studentList \u003d waitForElementPresence(By.id(\"student-list-table\"));"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d studentList.findElements(By.tagName(\"tr\"));"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":485,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.cssSelector(\"td\"));"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":487,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            if (cells.get(4).getText().equals(studentEmail)) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":492,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"    private int getFeedbackSessionRowId(String courseId, String sessionName) {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        int i \u003d 0;"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        while (i \u003c getNumFeedbackSessions()) {"},{"lineNumber":499,"author":{"gitId":"-"},"content":"            if (getFeedbackSessionCourseId(i).equals(courseId)"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getFeedbackSessionName(i).equals(sessionName)) {"},{"lineNumber":501,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":503,"author":{"gitId":"-"},"content":"            i++;"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":"    private int getSoftDeletedFeedbackSessionRowId(String courseId, String sessionName) {"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        int i \u003d 0;"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"        while (i \u003c getNumSoftDeletedFeedbackSessions()) {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"            if (getSoftDeletedFeedbackSessionCourseId(i).equals(courseId)"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getSoftDeletedFeedbackSessionName(i).equals(sessionName)) {"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":515,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            i++;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"    private int getNumFeedbackSessions() {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"        return sessionsTable.findElements(By.cssSelector(\"tbody tr\")).size();"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"    private int getNumSoftDeletedFeedbackSessions() {"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        if (!isElementPresent(By.id(\"deleted-sessions-table\"))) {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        return deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).size();"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionCourseId(int rowId) {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        WebElement row \u003d sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(0).getText();"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"    private String getSoftDeletedFeedbackSessionCourseId(int rowId) {"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        WebElement row \u003d deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(0).getText();"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionName(int rowId) {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        WebElement row \u003d sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(1).getText();"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"    private String getSoftDeletedFeedbackSessionName(int rowId) {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        WebElement row \u003d deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(1).getText();"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":551,"author":{"gitId":"-"},"content":""},{"lineNumber":552,"author":{"gitId":"-"},"content":"    private void waitForSessionEditPage() {"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"btn-fs-edit\"));"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":555,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":545,"Nicolascwy":10}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorHomePage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.openqa.selenium.NoSuchElementException;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the instructor home page."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class InstructorHomePage extends AppPage {"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public InstructorHomePage(Browser browser) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Home\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void verifyCourseTabDetails(int courseTabIndex, CourseAttributes course, FeedbackSessionAttributes[] sessions) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String expectedDetails \u003d \"[\" + course.getId() + \"]: \" + course.getName();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(getCourseDetails(courseTabIndex), expectedDetails);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][5];"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getExpectedSessionDetails(sessions[i]);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(getSessionsTable(courseTabIndex), expectedValues);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(int courseTabIndex, int sessionIndex, FeedbackSessionAttributes session) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String[] expectedValues \u003d getExpectedSessionDetails(session);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        WebElement sessionRow \u003d getSessionsTable(courseTabIndex).findElements(By.cssSelector(\"tbody tr\")).get(sessionIndex);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        verifyTableRowValues(sessionRow, expectedValues);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void verifyNumCourses(int expectedNum) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(getNumCourses(), expectedNum);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void verifyResponseRate(int courseTabIndex, int sessionIndex, String expectedResponseRate) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(expectedResponseRate, getResponseRate(courseTabIndex, sessionIndex));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void copySession(int courseTabIndex, int sessionIndex, CourseAttributes copyToCourse, String newSessionName) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d clickCopyButtonInTable(courseTabIndex, sessionIndex);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        selectCourseToCopyToInModal(copyFsModal, copyToCourse.getId());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void publishSessionResults(int courseTabIndex, int sessionIndex) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e publishButtons \u003d browser.driver.findElements(By.id(\"btn-publish-\" + sessionIndex));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        clickAndConfirm(publishButtons.get(publishButtons.size() - 1));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void unpublishSessionResults(int courseTabIndex, int sessionIndex) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e unpublishButtons \u003d browser.driver.findElements(By.id(\"btn-unpublish-\" + sessionIndex));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        clickAndConfirm(unpublishButtons.get(unpublishButtons.size() - 1));"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToSelectedStudent(int courseTabIndex, int sessionIndex, StudentAttributes student) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-remind-\" + sessionIndex)));"},{"lineNumber":79,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-selected-\" + sessionIndex)));"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToNonSubmitters(int courseTabIndex, int sessionIndex) {"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"        click(courseTab.findElement(By.id(\"btn-remind-\" + sessionIndex)));"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-all-\" + sessionIndex)));"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void resendResultsLink(int courseTabIndex, int sessionIndex, StudentAttributes student) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-resend-\" + sessionIndex)));"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-resend-results\")));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void downloadResults(int courseTabIndex, int sessionIndex) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-download-\" + sessionIndex)));"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void deleteSession(int courseTabIndex, int sessionIndex) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        clickAndConfirm(courseTab.findElement(By.id(\"btn-soft-delete-\" + sessionIndex)));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void archiveCourse(int courseTabIndex) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-course\")));"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        clickAndConfirm(courseTab.findElement(By.id(\"btn-archive-course\")));"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void deleteCourse(int courseTabIndex) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-course\")));"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        clickAndConfirm(courseTab.findElement(By.id(\"btn-delete-course\")));"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void sortCoursesById() {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"sort-course-id\")));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void sortCoursesByName() {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"sort-course-name\")));"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void sortCoursesByCreationDate() {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"sort-course-date\")));"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private int getNumCourses() {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.id(\"course-tab\")).size();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private WebElement getCourseTab(int courseTabIndex) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.id(\"course-tab\")).get(courseTabIndex);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private String getCourseDetails(int courseTabIndex) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return courseTab.findElement(By.id(\"course-details\")).getText();"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private WebElement getSessionsTable(int courseTabIndex) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return getCourseTab(courseTabIndex).findElement(By.id(\"sessions-table\"));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, String timeZone) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"d MMM h:mm a\");"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private String[] getExpectedSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[5];"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getFeedbackSessionName();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        details[1] \u003d getDateString(session.getStartTime(), session.getTimeZone());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        details[2] \u003d getDateString(session.getEndTime(), session.getTimeZone());"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (session.isClosed()) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            details[3] \u003d \"Closed\";"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } else if (session.isVisible() \u0026\u0026 (session.isOpened() || session.isInGracePeriod())) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            details[3] \u003d \"Open\";"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            details[3] \u003d \"Awaiting\";"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        details[4] \u003d session.isPublished() ? \"Published\" : \"Not Published\";"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private String getResponseRate(int courseTabIndex, int sessionIndex) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        WebElement showButton \u003d null;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            showButton \u003d getCourseTab(courseTabIndex).findElement(By.id(\"show-response-rate-\" + sessionIndex));"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            // continue"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (showButton !\u003d null) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            click(showButton);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"response-rate-\" + sessionIndex)).getText();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private WebElement clickCopyButtonInTable(int courseTabIndex, int sessionIndex) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        click(getCourseTab(courseTabIndex).findElement(By.id(\"btn-copy-\" + sessionIndex)));"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private void selectCourseToCopyToInModal(WebElement copyFsModal, String courseToCopyId) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (courseId.equals(courseToCopyId)) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private void selectStudentToEmail(String studentEmail) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        WebElement studentList \u003d waitForElementPresence(By.id(\"student-list-table\"));"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d studentList.findElements(By.tagName(\"tr\"));"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.cssSelector(\"td\"));"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (cells.get(4).getText().equals(studentEmail)) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":213,"Nicolascwy":9}},{"path":"src/main/java/teammates/common/datatransfer/NotificationTargetUser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents the type of target user groups for notifications."},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public enum NotificationTargetUser {"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     * Target users are students only."},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    STUDENT,"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"     * Target users are instructors only."},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    INSTRUCTOR,"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * Target users are both instructors and students."},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    GENERAL"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":22}},{"path":"src/main/java/teammates/common/datatransfer/NotificationType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents the types of notifications."},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public enum NotificationType {"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     * Notes for maintenance."},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    MAINTENANCE,"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"     * Notes for version release."},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    VERSION_NOTE,"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * Notes for deprecation."},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    DEPRECATION,"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     * Usage tips."},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    TIPS"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":27}},{"path":"src/main/java/teammates/common/datatransfer/UserInfoCookie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents user credential info to be persisted within cookies."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserInfoCookie {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private String userId;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private String verificationCode;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"    private long expiryTime;"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserInfoCookie(String userId) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.userId \u003d userId;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.verificationCode \u003d StringHelper.generateSignature(userId);"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"        this.expiryTime \u003d Instant.now().plus(Const.COOKIE_VALIDITY_PERIOD).toEpochMilli();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Gets a {@link UserInfoCookie} object from cookie string."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static UserInfoCookie fromCookie(String cookie) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (cookie \u003d\u003d null) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            String decryptedCookie \u003d StringHelper.decrypt(cookie);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return JsonUtils.fromJson(decryptedCookie, UserInfoCookie.class);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (InvalidParametersException | JsonSyntaxException e) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getUserId() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userId;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserId(String userId) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userId \u003d userId;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getVerificationCode() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return verificationCode;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setVerificationCode(String verificationCode) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.verificationCode \u003d verificationCode;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"    public long getExpiryTime() {"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"        return expiryTime;"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"    public void setExpiryTime(long expiryTime) {"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"        this.expiryTime \u003d expiryTime;"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"     * Returns true if the object represents a valid user info and the object has not expired."},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isValid() {"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"        return StringHelper.isCorrectSignature(userId, verificationCode)"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"            \u0026\u0026 Instant.now().isBefore(Instant.ofEpochMilli(expiryTime));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":58,"Nicolascwy":17}},{"path":"src/main/java/teammates/common/datatransfer/attributes/NotificationAttributes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import java.util.Comparator;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"import java.util.Objects;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationType;"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.storage.entity.Notification;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":" * The data transfer object for the notification."},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"public class NotificationAttributes extends EntityAttributes\u003cNotification\u003e {"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    private String notificationId;"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    private Instant startTime;"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"    private Instant endTime;"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    private NotificationType type;"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    private NotificationTargetUser targetUser;"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"    private String title;"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    private String message;"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"    private boolean shown;"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"    private Instant createdAt;"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"    private Instant updatedAt;"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationAttributes(String notificationId) {"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"        this.notificationId \u003d notificationId;"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"     * Gets the {@link NotificationAttributes} instance of the given {@link Notification}."},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"    public static NotificationAttributes valueOf(Notification n) {"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes notificationAttributes \u003d new NotificationAttributes(n.getNotificationId());"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.startTime \u003d n.getStartTime();"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.endTime \u003d n.getEndTime();"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.type \u003d n.getType();"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.targetUser \u003d n.getTargetUser();"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.title \u003d n.getTitle();"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.message \u003d n.getMessage();"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.createdAt \u003d n.getCreatedAt();"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.updatedAt \u003d n.getUpdatedAt();"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.shown \u003d n.isShown();"},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"        return notificationAttributes;"},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":"     * Returns a builder for {@link NotificationAttributes}."},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"    public static Builder builder(String notificationId) {"},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"        return new Builder(notificationId);"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"     * Gets a deep copy of this object."},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes getCopy() {"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes notificationAttributes \u003d new NotificationAttributes(this.notificationId);"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.startTime \u003d this.startTime;"},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.endTime \u003d this.endTime;"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.type \u003d this.type;"},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.targetUser \u003d this.targetUser;"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.title \u003d this.title;"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.message \u003d this.message;"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.createdAt \u003d this.createdAt;"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.updatedAt \u003d this.updatedAt;"},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.shown \u003d this.shown;"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":"        return notificationAttributes;"},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"    public String getNotificationId() {"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"        return notificationId;"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getStartTime() {"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"        return startTime;"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":"    public void setStartTime(Instant startTime) {"},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":92,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":94,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getEndTime() {"},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"        return endTime;"},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":98,"author":{"gitId":"fsgmhoward"},"content":"    public void setEndTime(Instant endTime) {"},{"lineNumber":99,"author":{"gitId":"fsgmhoward"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"    public NotificationType getType() {"},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":"        return type;"},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"    public void setType(NotificationType type) {"},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":"        this.type \u003d type;"},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"    public NotificationTargetUser getTargetUser() {"},{"lineNumber":111,"author":{"gitId":"fsgmhoward"},"content":"        return targetUser;"},{"lineNumber":112,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":114,"author":{"gitId":"ziqing26"},"content":"    public void setTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":115,"author":{"gitId":"fsgmhoward"},"content":"        this.targetUser \u003d targetUser;"},{"lineNumber":116,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":118,"author":{"gitId":"fsgmhoward"},"content":"    public String getTitle() {"},{"lineNumber":119,"author":{"gitId":"fsgmhoward"},"content":"        return title;"},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":122,"author":{"gitId":"fsgmhoward"},"content":"    public void setTitle(String title) {"},{"lineNumber":123,"author":{"gitId":"fsgmhoward"},"content":"        this.title \u003d title;"},{"lineNumber":124,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"    public String getMessage() {"},{"lineNumber":127,"author":{"gitId":"fsgmhoward"},"content":"        return message;"},{"lineNumber":128,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"    public void setMessage(String message) {"},{"lineNumber":131,"author":{"gitId":"fsgmhoward"},"content":"        this.message \u003d message;"},{"lineNumber":132,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":134,"author":{"gitId":"fsgmhoward"},"content":"    public boolean isShown() {"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"        return shown;"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"     * Sets the notification as shown to the user."},{"lineNumber":140,"author":{"gitId":"fsgmhoward"},"content":"     * Only allowed to change value from false to true."},{"lineNumber":141,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"fsgmhoward"},"content":"    public void setShown() {"},{"lineNumber":143,"author":{"gitId":"fsgmhoward"},"content":"        this.shown \u003d true;"},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":146,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getCreatedAt() {"},{"lineNumber":147,"author":{"gitId":"fsgmhoward"},"content":"        return createdAt;"},{"lineNumber":148,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":150,"author":{"gitId":"fsgmhoward"},"content":"    public void setCreatedAt(Instant createdAt) {"},{"lineNumber":151,"author":{"gitId":"fsgmhoward"},"content":"        this.createdAt \u003d createdAt;"},{"lineNumber":152,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":154,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getUpdatedAt() {"},{"lineNumber":155,"author":{"gitId":"fsgmhoward"},"content":"        return updatedAt;"},{"lineNumber":156,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":158,"author":{"gitId":"fsgmhoward"},"content":"    public void setUpdatedAt(Instant updatedAt) {"},{"lineNumber":159,"author":{"gitId":"fsgmhoward"},"content":"        this.updatedAt \u003d updatedAt;"},{"lineNumber":160,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":162,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"ziqing26"},"content":"     * Sorts the list of notifications by the start time."},{"lineNumber":164,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"ziqing26"},"content":"    public static void sortByStartTime(List\u003cNotificationAttributes\u003e notifications) {"},{"lineNumber":166,"author":{"gitId":"ziqing26"},"content":"        notifications.sort(Comparator.comparing(NotificationAttributes::getStartTime));"},{"lineNumber":167,"author":{"gitId":"ziqing26"},"content":"        Collections.reverse(notifications);"},{"lineNumber":168,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":170,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":171,"author":{"gitId":"fsgmhoward"},"content":"    public List\u003cString\u003e getInvalidityInfo() {"},{"lineNumber":172,"author":{"gitId":"Nicolascwy"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":173,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":174,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"notification visible time\", startTime), errors);"},{"lineNumber":175,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":176,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"notification expiry time\", endTime), errors);"},{"lineNumber":177,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":178,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForNotificationStartAndEnd(startTime, endTime), errors);"},{"lineNumber":179,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":180,"author":{"gitId":"ziqing26"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForNotificationType(type.name()), errors);"},{"lineNumber":181,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":182,"author":{"gitId":"ziqing26"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForNotificationTargetUser(targetUser.name()), errors);"},{"lineNumber":183,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":184,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForNotificationTitle(title), errors);"},{"lineNumber":185,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":186,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForNotificationBody(message), errors);"},{"lineNumber":187,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":188,"author":{"gitId":"Nicolascwy"},"content":"        return errors;"},{"lineNumber":189,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":191,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":192,"author":{"gitId":"fsgmhoward"},"content":"    public Notification toEntity() {"},{"lineNumber":193,"author":{"gitId":"fsgmhoward"},"content":"        return new Notification(notificationId, startTime, endTime, type,"},{"lineNumber":194,"author":{"gitId":"fsgmhoward"},"content":"                targetUser, title, message, shown, createdAt, updatedAt);"},{"lineNumber":195,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":197,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":198,"author":{"gitId":"fsgmhoward"},"content":"    public String toString() {"},{"lineNumber":199,"author":{"gitId":"fsgmhoward"},"content":"        return JsonUtils.toJson(this, NotificationAttributes.class);"},{"lineNumber":200,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":202,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":203,"author":{"gitId":"fsgmhoward"},"content":"    public int hashCode() {"},{"lineNumber":204,"author":{"gitId":"fsgmhoward"},"content":"        // Notification ID uniquely identifies a notification."},{"lineNumber":205,"author":{"gitId":"fsgmhoward"},"content":"        return this.getNotificationId().hashCode();"},{"lineNumber":206,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":208,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":209,"author":{"gitId":"fsgmhoward"},"content":"    public boolean equals(Object other) {"},{"lineNumber":210,"author":{"gitId":"fsgmhoward"},"content":"        if (other \u003d\u003d null) {"},{"lineNumber":211,"author":{"gitId":"fsgmhoward"},"content":"            return false;"},{"lineNumber":212,"author":{"gitId":"fsgmhoward"},"content":"        } else if (this \u003d\u003d other) {"},{"lineNumber":213,"author":{"gitId":"fsgmhoward"},"content":"            return true;"},{"lineNumber":214,"author":{"gitId":"fsgmhoward"},"content":"        } else if (this.getClass() \u003d\u003d other.getClass()) {"},{"lineNumber":215,"author":{"gitId":"fsgmhoward"},"content":"            NotificationAttributes otherNotification \u003d (NotificationAttributes) other;"},{"lineNumber":216,"author":{"gitId":"fsgmhoward"},"content":"            return Objects.equals(this.notificationId, otherNotification.notificationId);"},{"lineNumber":217,"author":{"gitId":"fsgmhoward"},"content":"        } else {"},{"lineNumber":218,"author":{"gitId":"fsgmhoward"},"content":"            return false;"},{"lineNumber":219,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":220,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":222,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":223,"author":{"gitId":"fsgmhoward"},"content":"    public void sanitizeForSaving() {"},{"lineNumber":224,"author":{"gitId":"fsgmhoward"},"content":"        this.title \u003d SanitizationHelper.sanitizeTitle(title);"},{"lineNumber":225,"author":{"gitId":"fsgmhoward"},"content":"        this.message \u003d SanitizationHelper.sanitizeForRichText(message);"},{"lineNumber":226,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":228,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":229,"author":{"gitId":"fsgmhoward"},"content":"     * Updates with {@link UpdateOptions}."},{"lineNumber":230,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":231,"author":{"gitId":"fsgmhoward"},"content":"    public void update(UpdateOptions updateOptions) {"},{"lineNumber":232,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.startTimeOption.ifPresent(s -\u003e startTime \u003d s);"},{"lineNumber":233,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.endTimeOption.ifPresent(e -\u003e endTime \u003d e);"},{"lineNumber":234,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.typeOption.ifPresent(t -\u003e type \u003d t);"},{"lineNumber":235,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.targetUserOption.ifPresent(u -\u003e targetUser \u003d u);"},{"lineNumber":236,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.titleOption.ifPresent(t -\u003e title \u003d t);"},{"lineNumber":237,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.messageOption.ifPresent(m -\u003e message \u003d m);"},{"lineNumber":238,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.shownOption.ifPresent(s -\u003e shown \u003d s);"},{"lineNumber":239,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":241,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":242,"author":{"gitId":"fsgmhoward"},"content":"     * Returns a {@link UpdateOptions.Builder} to build {@link UpdateOptions} for a notification."},{"lineNumber":243,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":244,"author":{"gitId":"fsgmhoward"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(String notificationId) {"},{"lineNumber":245,"author":{"gitId":"fsgmhoward"},"content":"        return new UpdateOptions.Builder(notificationId);"},{"lineNumber":246,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":248,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":249,"author":{"gitId":"fsgmhoward"},"content":"     * Returns a {@link UpdateOptions.Builder} to build on top of {@code updateOptions}."},{"lineNumber":250,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":251,"author":{"gitId":"fsgmhoward"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(UpdateOptions updateOptions) {"},{"lineNumber":252,"author":{"gitId":"fsgmhoward"},"content":"        return new UpdateOptions.Builder(updateOptions);"},{"lineNumber":253,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":255,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":256,"author":{"gitId":"fsgmhoward"},"content":"     * A builder for {@link NotificationAttributes}."},{"lineNumber":257,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":258,"author":{"gitId":"fsgmhoward"},"content":"    public static class Builder extends BasicBuilder\u003cNotificationAttributes, Builder\u003e {"},{"lineNumber":259,"author":{"gitId":"fsgmhoward"},"content":"        private final NotificationAttributes notificationAttributes;"},{"lineNumber":260,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":261,"author":{"gitId":"fsgmhoward"},"content":"        private Builder(String notificationId) {"},{"lineNumber":262,"author":{"gitId":"fsgmhoward"},"content":"            super(new UpdateOptions(notificationId));"},{"lineNumber":263,"author":{"gitId":"fsgmhoward"},"content":"            thisBuilder \u003d this;"},{"lineNumber":264,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":265,"author":{"gitId":"fsgmhoward"},"content":"            notificationAttributes \u003d new NotificationAttributes(notificationId);"},{"lineNumber":266,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":268,"author":{"gitId":"fsgmhoward"},"content":"        @Override"},{"lineNumber":269,"author":{"gitId":"fsgmhoward"},"content":"        public NotificationAttributes build() {"},{"lineNumber":270,"author":{"gitId":"fsgmhoward"},"content":"            notificationAttributes.update(updateOptions);"},{"lineNumber":271,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":272,"author":{"gitId":"fsgmhoward"},"content":"            return notificationAttributes;"},{"lineNumber":273,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":274,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":276,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":277,"author":{"gitId":"fsgmhoward"},"content":"     * Helper class to specific the fields to update in {@link NotificationAttributes}."},{"lineNumber":278,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":279,"author":{"gitId":"fsgmhoward"},"content":"    public static class UpdateOptions {"},{"lineNumber":280,"author":{"gitId":"fsgmhoward"},"content":"        private String notificationId;"},{"lineNumber":281,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":282,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cInstant\u003e startTimeOption \u003d UpdateOption.empty();"},{"lineNumber":283,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cInstant\u003e endTimeOption \u003d UpdateOption.empty();"},{"lineNumber":284,"author":{"gitId":"ziqing26"},"content":"        private UpdateOption\u003cNotificationType\u003e typeOption \u003d UpdateOption.empty();"},{"lineNumber":285,"author":{"gitId":"ziqing26"},"content":"        private UpdateOption\u003cNotificationTargetUser\u003e targetUserOption \u003d UpdateOption.empty();"},{"lineNumber":286,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cString\u003e titleOption \u003d UpdateOption.empty();"},{"lineNumber":287,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cString\u003e messageOption \u003d UpdateOption.empty();"},{"lineNumber":288,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cBoolean\u003e shownOption \u003d UpdateOption.empty();"},{"lineNumber":289,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":290,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOptions(String notificationId) {"},{"lineNumber":291,"author":{"gitId":"fsgmhoward"},"content":"            assert notificationId !\u003d null;"},{"lineNumber":292,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":293,"author":{"gitId":"fsgmhoward"},"content":"            this.notificationId \u003d notificationId;"},{"lineNumber":294,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":295,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":296,"author":{"gitId":"fsgmhoward"},"content":"        public String getNotificationId() {"},{"lineNumber":297,"author":{"gitId":"fsgmhoward"},"content":"            return notificationId;"},{"lineNumber":298,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":299,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":300,"author":{"gitId":"fsgmhoward"},"content":"        @Override"},{"lineNumber":301,"author":{"gitId":"fsgmhoward"},"content":"        public String toString() {"},{"lineNumber":302,"author":{"gitId":"fsgmhoward"},"content":"            return \"NotificationAttributes.UpdateOptions [\""},{"lineNumber":303,"author":{"gitId":"fsgmhoward"},"content":"                    + \"startTime \u003d \" + startTimeOption"},{"lineNumber":304,"author":{"gitId":"fsgmhoward"},"content":"                    + \", endTime \u003d \" + endTimeOption"},{"lineNumber":305,"author":{"gitId":"fsgmhoward"},"content":"                    + \", type \u003d \" + typeOption"},{"lineNumber":306,"author":{"gitId":"fsgmhoward"},"content":"                    + \", targetUser \u003d \" + targetUserOption"},{"lineNumber":307,"author":{"gitId":"fsgmhoward"},"content":"                    + \", title \u003d \" + titleOption"},{"lineNumber":308,"author":{"gitId":"fsgmhoward"},"content":"                    + \", message \u003d \" + messageOption"},{"lineNumber":309,"author":{"gitId":"fsgmhoward"},"content":"                    + \", shown \u003d \" + shownOption"},{"lineNumber":310,"author":{"gitId":"fsgmhoward"},"content":"                    + \"]\";"},{"lineNumber":311,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":312,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":313,"author":{"gitId":"fsgmhoward"},"content":"        /**"},{"lineNumber":314,"author":{"gitId":"fsgmhoward"},"content":"         * Builder class to build {@link UpdateOptions}."},{"lineNumber":315,"author":{"gitId":"fsgmhoward"},"content":"         */"},{"lineNumber":316,"author":{"gitId":"fsgmhoward"},"content":"        public static class Builder extends BasicBuilder\u003cUpdateOptions, Builder\u003e {"},{"lineNumber":317,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":318,"author":{"gitId":"fsgmhoward"},"content":"            private Builder(UpdateOptions updateOptions) {"},{"lineNumber":319,"author":{"gitId":"fsgmhoward"},"content":"                super(updateOptions);"},{"lineNumber":320,"author":{"gitId":"fsgmhoward"},"content":"                assert updateOptions !\u003d null;"},{"lineNumber":321,"author":{"gitId":"fsgmhoward"},"content":"                thisBuilder \u003d this;"},{"lineNumber":322,"author":{"gitId":"fsgmhoward"},"content":"            }"},{"lineNumber":323,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":324,"author":{"gitId":"fsgmhoward"},"content":"            private Builder(String notificationId) {"},{"lineNumber":325,"author":{"gitId":"fsgmhoward"},"content":"                super(new UpdateOptions(notificationId));"},{"lineNumber":326,"author":{"gitId":"fsgmhoward"},"content":"                thisBuilder \u003d this;"},{"lineNumber":327,"author":{"gitId":"fsgmhoward"},"content":"            }"},{"lineNumber":328,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":329,"author":{"gitId":"fsgmhoward"},"content":"            @Override"},{"lineNumber":330,"author":{"gitId":"fsgmhoward"},"content":"            public UpdateOptions build() {"},{"lineNumber":331,"author":{"gitId":"fsgmhoward"},"content":"                return updateOptions;"},{"lineNumber":332,"author":{"gitId":"fsgmhoward"},"content":"            }"},{"lineNumber":333,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":334,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":335,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":336,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":337,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":338,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":339,"author":{"gitId":"fsgmhoward"},"content":"     * Basic builder to build {@link NotificationAttributes} related classes."},{"lineNumber":340,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":341,"author":{"gitId":"fsgmhoward"},"content":"     * @param \u003cT\u003e type to be built"},{"lineNumber":342,"author":{"gitId":"fsgmhoward"},"content":"     * @param \u003cB\u003e type of the builder"},{"lineNumber":343,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":344,"author":{"gitId":"fsgmhoward"},"content":"    private abstract static class BasicBuilder\u003cT, B extends BasicBuilder\u003cT, B\u003e\u003e {"},{"lineNumber":345,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":346,"author":{"gitId":"fsgmhoward"},"content":"        UpdateOptions updateOptions;"},{"lineNumber":347,"author":{"gitId":"fsgmhoward"},"content":"        B thisBuilder;"},{"lineNumber":348,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":349,"author":{"gitId":"fsgmhoward"},"content":"        BasicBuilder(UpdateOptions updateOptions) {"},{"lineNumber":350,"author":{"gitId":"fsgmhoward"},"content":"            this.updateOptions \u003d updateOptions;"},{"lineNumber":351,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":352,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":353,"author":{"gitId":"fsgmhoward"},"content":"        public B withStartTime(Instant startTime) {"},{"lineNumber":354,"author":{"gitId":"fsgmhoward"},"content":"            assert startTime !\u003d null;"},{"lineNumber":355,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":356,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.startTimeOption \u003d UpdateOption.of(startTime);"},{"lineNumber":357,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":358,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":359,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":360,"author":{"gitId":"fsgmhoward"},"content":"        public B withEndTime(Instant endTime) {"},{"lineNumber":361,"author":{"gitId":"fsgmhoward"},"content":"            assert endTime !\u003d null;"},{"lineNumber":362,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":363,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.endTimeOption \u003d UpdateOption.of(endTime);"},{"lineNumber":364,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":365,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":366,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":367,"author":{"gitId":"ziqing26"},"content":"        public B withType(NotificationType type) {"},{"lineNumber":368,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.typeOption \u003d UpdateOption.of(type);"},{"lineNumber":369,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":370,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":371,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":372,"author":{"gitId":"ziqing26"},"content":"        public B withTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":373,"author":{"gitId":"fsgmhoward"},"content":"            assert targetUser !\u003d null;"},{"lineNumber":374,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":375,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.targetUserOption \u003d UpdateOption.of(targetUser);"},{"lineNumber":376,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":377,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":378,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":379,"author":{"gitId":"fsgmhoward"},"content":"        public B withTitle(String title) {"},{"lineNumber":380,"author":{"gitId":"fsgmhoward"},"content":"            assert title !\u003d null;"},{"lineNumber":381,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":382,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.titleOption \u003d UpdateOption.of(title);"},{"lineNumber":383,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":384,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":385,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":386,"author":{"gitId":"fsgmhoward"},"content":"        public B withMessage(String message) {"},{"lineNumber":387,"author":{"gitId":"fsgmhoward"},"content":"            assert message !\u003d null;"},{"lineNumber":388,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":389,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.messageOption \u003d UpdateOption.of(message);"},{"lineNumber":390,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":391,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":393,"author":{"gitId":"fsgmhoward"},"content":"        public B withShown() {"},{"lineNumber":394,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.shownOption \u003d UpdateOption.of(true);"},{"lineNumber":395,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":396,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":397,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":398,"author":{"gitId":"fsgmhoward"},"content":"        public abstract T build();"},{"lineNumber":399,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":400,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":401,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"ziqing26":24,"fsgmhoward":363,"Nicolascwy":14}},{"path":"src/main/java/teammates/common/datatransfer/questions/FeedbackConstantSumQuestionDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Contains specific structure and processing logic for constant sum feedback questions."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FeedbackConstantSumQuestionDetails extends FeedbackQuestionDetails {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    static final String QUESTION_TYPE_NAME_OPTION \u003d \"Distribute points (among options) question\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    static final String QUESTION_TYPE_NAME_RECIPIENT \u003d \"Distribute points (among recipients) question\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    static final int CONST_SUM_MIN_NUM_OF_OPTIONS \u003d 2;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    static final int CONST_SUM_MIN_NUM_OF_POINTS \u003d 1;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS \u003d"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \"Too little options for \" + QUESTION_TYPE_NAME_OPTION + \". Minimum number of options is: \";"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_DUPLICATE_OPTIONS \u003d \"Duplicate options are not allowed.\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_NOT_ENOUGH_POINTS \u003d"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \"Too little points for \" + QUESTION_TYPE_NAME_RECIPIENT + \". Minimum number of points is: \";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_MISMATCH \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"Please distribute all the points for distribution questions. \""},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    + \"To skip a distribution question, leave the boxes blank.\";"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"    static final String CONST_SUM_ERROR_NEGATIVE \u003d \"Points cannot be negative.\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_UNIQUE \u003d \"Every option must be given a different number of points.\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_SOME_UNIQUE \u003d"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"At least some options must be given a different number of points.\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ANSWER_OPTIONS_NOT_MATCH \u003d \"The answers are inconsistent with the options\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ANSWER_RECIPIENT_NOT_MATCH \u003d \"The answer is inconsistent with the recipient\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e constSumOptions;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private boolean distributeToRecipients;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private boolean pointsPerOption;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private boolean forceUnevenDistribution;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private String distributePointsFor;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private int points;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public FeedbackConstantSumQuestionDetails() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(null);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public FeedbackConstantSumQuestionDetails(String questionText) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FeedbackQuestionType.CONSTSUM, questionText);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.constSumOptions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.distributeToRecipients \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.pointsPerOption \u003d false;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.points \u003d 100;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.forceUnevenDistribution \u003d false;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.distributePointsFor \u003d FeedbackConstantSumDistributePointsType.NONE.getDisplayedOption();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean shouldChangesRequireResponseDeletion("},{"lineNumber":58,"author":{"gitId":"-"},"content":"            FeedbackQuestionDetails newDetails) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FeedbackConstantSumQuestionDetails newConstSumDetails \u003d (FeedbackConstantSumQuestionDetails) newDetails;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!this.constSumOptions.containsAll(newConstSumDetails.constSumOptions)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || !newConstSumDetails.constSumOptions.containsAll(this.constSumOptions)) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (this.distributeToRecipients !\u003d newConstSumDetails.distributeToRecipients) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (this.points !\u003d newConstSumDetails.points) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (this.pointsPerOption !\u003d newConstSumDetails.pointsPerOption) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (this.forceUnevenDistribution !\u003d newConstSumDetails.forceUnevenDistribution) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return !this.distributePointsFor.equals(newConstSumDetails.distributePointsFor);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateQuestionDetails() {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!distributeToRecipients \u0026\u0026 constSumOptions.size() \u003c CONST_SUM_MIN_NUM_OF_OPTIONS) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                       + CONST_SUM_MIN_NUM_OF_OPTIONS + \".\");"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (points \u003c CONST_SUM_MIN_NUM_OF_POINTS) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_NOT_ENOUGH_POINTS"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                       + CONST_SUM_MIN_NUM_OF_POINTS + \".\");"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!FieldValidator.areElementsUnique(constSumOptions)) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_DUPLICATE_OPTIONS);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateResponsesDetails(List\u003cFeedbackResponseDetails\u003e responses, int numRecipients) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors;"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        int numOptions \u003d distributeToRecipients ? numRecipients : constSumOptions.size();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        int totalPoints \u003d pointsPerOption ? points * numOptions : points;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (distributeToRecipients) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            errors \u003d getErrorsForConstSumRecipients(responses, totalPoints);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            errors \u003d getErrorsForConstSumOptions(responses, totalPoints);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrorsForConstSumOptions(List\u003cFeedbackResponseDetails\u003e responses, int totalPoints) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (FeedbackResponseDetails response : responses) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"            FeedbackConstantSumResponseDetails details \u003d (FeedbackConstantSumResponseDetails) response;"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (details.getAnswers().size() !\u003d constSumOptions.size()) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ANSWER_OPTIONS_NOT_MATCH);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"            List\u003cInteger\u003e givenPoints \u003d details.getAnswers();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            errors \u003d getErrors(givenPoints, totalPoints);"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"            // Return an error if any response is erroneous"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (!errors.isEmpty()) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrorsForConstSumRecipients(List\u003cFeedbackResponseDetails\u003e responses, int totalPoints) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cInteger\u003e givenPoints \u003d new ArrayList\u003c\u003e();"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (FeedbackResponseDetails response : responses) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            FeedbackConstantSumResponseDetails details \u003d (FeedbackConstantSumResponseDetails) response;"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"            List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (details.getAnswers().size() !\u003d 1) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                // Distribute to recipient must have array size one"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ANSWER_RECIPIENT_NOT_MATCH);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"            // Return an error if any response is erroneous"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (!errors.isEmpty()) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"            int givenPoint \u003d details.getAnswers().get(0);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            givenPoints.add(givenPoint);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return getErrors(givenPoints, totalPoints);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrors(List\u003cInteger\u003e givenPoints, int totalPoints) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Check that all points are \u003e\u003d 0"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        int sum \u003d 0;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        for (int i : givenPoints) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            if (i \u003c 0) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ERROR_NEGATIVE);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"            sum +\u003d i;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // Check that points sum up properly"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (sum !\u003d totalPoints) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_MISMATCH);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return errors;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // Check that points are given unevenly for all/at least some options as per the question settings"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Set\u003cInteger\u003e answerSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (distributePointsFor.equals("},{"lineNumber":191,"author":{"gitId":"-"},"content":"                FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY.getDisplayedOption())) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            boolean hasDifferentPoints \u003d false;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            for (int i : givenPoints) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                if (!answerSet.isEmpty() \u0026\u0026 !answerSet.contains(i)) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    hasDifferentPoints \u003d true;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                answerSet.add(i);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (!hasDifferentPoints) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ERROR_SOME_UNIQUE);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } else if (forceUnevenDistribution || distributePointsFor.equals("},{"lineNumber":206,"author":{"gitId":"-"},"content":"                FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY.getDisplayedOption())) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            for (int i : givenPoints) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                if (answerSet.contains(i)) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    errors.add(CONST_SUM_ERROR_UNIQUE);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                    return errors;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                answerSet.add(i);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public boolean isFeedbackParticipantCommentsOnResponsesAllowed() {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public String validateGiverRecipientVisibility(FeedbackQuestionAttributes feedbackQuestionAttributes) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public int getNumOfConstSumOptions() {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return constSumOptions.size();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getConstSumOptions() {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return constSumOptions;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void setConstSumOptions(List\u003cString\u003e constSumOptions) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        this.constSumOptions \u003d constSumOptions;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public boolean isDistributeToRecipients() {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return distributeToRecipients;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void setDistributeToRecipients(boolean distributeToRecipients) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        this.distributeToRecipients \u003d distributeToRecipients;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public boolean isPointsPerOption() {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return pointsPerOption;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void setPointsPerOption(boolean pointsPerOption) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        this.pointsPerOption \u003d pointsPerOption;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public boolean isForceUnevenDistribution() {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        return forceUnevenDistribution;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void setForceUnevenDistribution(boolean forceUnevenDistribution) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        this.forceUnevenDistribution \u003d forceUnevenDistribution;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public String getDistributePointsFor() {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return distributePointsFor;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void setDistributePointsFor(String distributePointsFor) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        this.distributePointsFor \u003d distributePointsFor;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public int getPoints() {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        return points;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void setPoints(int points) {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        this.points \u003d points;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":1,"-":279}},{"path":"src/main/java/teammates/common/util/Const.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.charset.Charset;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Stores constants that are widely used across classes."},{"lineNumber":10,"author":{"gitId":"-"},"content":" * this class contains several nested classes, each containing a specific"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * category of constants."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public final class Const {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // This section holds constants that are defined as constants primarily because they are repeated in many places."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String USER_NOBODY_TEXT \u003d \"-\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String USER_TEAM_FOR_INSTRUCTOR \u003d \"Instructors\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_DISPLAY_NAME_FOR_INSTRUCTOR \u003d \"Instructor\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT \u003d \"Anonymous\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final int SECTION_SIZE_LIMIT \u003d 100;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_SECTION \u003d \"None\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String UNKNOWN_INSTITUTION \u003d \"Unknown Institution\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_TIME_ZONE \u003d \"UTC\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Charset ENCODING \u003d StandardCharsets.UTF_8;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Duration FEEDBACK_SESSIONS_SEARCH_WINDOW \u003d Duration.ofDays(30);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Duration LOGS_RETENTION_PERIOD \u003d Duration.ofDays(30);"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"    public static final Duration COOKIE_VALIDITY_PERIOD \u003d Duration.ofDays(7);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final int SEARCH_QUERY_SIZE_LIMIT \u003d 50;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // These constants are used as variable values to mean that the variable is in a \u0027special\u0027 state."},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final int INT_UNINITIALIZED \u003d -9999;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final int MAX_POSSIBLE_RECIPIENTS \u003d -100;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final int POINTS_EQUAL_SHARE \u003d 100;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SURE \u003d -101;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SUBMITTED \u003d -999;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final int POINTS_NO_VALUE \u003d Integer.MIN_VALUE;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String GENERAL_QUESTION \u003d \"%GENERAL%\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_OPENING;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_VISIBLE;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_LATER;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_NOW;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_DEFAULT_TIMESTAMP;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_OPENING \u003d TimeHelper.parseInstant(\"1970-12-31T00:00:00Z\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_VISIBLE \u003d TimeHelper.parseInstant(\"1970-06-22T00:00:00Z\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_LATER \u003d TimeHelper.parseInstant(\"1970-01-01T00:00:00Z\");"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_NOW \u003d TimeHelper.parseInstant(\"1970-02-14T00:00:00Z\");"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_DEFAULT_TIMESTAMP \u003d TimeHelper.parseInstant(\"2011-01-01T00:00:00Z\");"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TEST_EMAIL_DOMAIN \u003d \"@gmail.tmt\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Other Constants"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Const() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Utility class containing constants"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Represents role names for instructors based on their permission settings."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static class InstructorPermissionRoleNames {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_COOWNER \u003d \"Co-owner\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_MANAGER \u003d \"Manager\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_OBSERVER \u003d \"Observer\";"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_TUTOR \u003d \"Tutor\";"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_CUSTOM \u003d \"Custom\";"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Represents atomic permission for instructors."},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static class InstructorPermissions {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_COURSE \u003d \"canmodifycourse\";"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_INSTRUCTOR \u003d \"canmodifyinstructor\";"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION \u003d \"canmodifysession\";"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_STUDENT \u003d \"canmodifystudent\";"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_STUDENT_IN_SECTIONS \u003d \"canviewstudentinsection\";"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_SESSION_IN_SECTIONS \u003d \"canviewsessioninsection\";"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public static final String CAN_SUBMIT_SESSION_IN_SECTIONS \u003d \"cansubmitsessioninsection\";"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION_COMMENT_IN_SECTIONS \u003d \"canmodifysessioncommentinsection\";"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Represents keys for HTTP requests to the API layer."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static class ParamsNames {"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public static final String IS_IN_RECYCLE_BIN \u003d \"isinrecyclebin\";"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public static final String IS_STUDENT_REJOINING \u003d \"isstudentrejoining\";"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public static final String IS_INSTRUCTOR_REJOINING \u003d \"isinstructorrejoining\";"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public static final String COURSE_ID \u003d \"courseid\";"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public static final String COURSE_STATUS \u003d \"coursestatus\";"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_ID \u003d \"instructorid\";"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_EMAIL \u003d \"instructoremail\";"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_INSTITUTION \u003d \"instructorinstitution\";"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public static final String IS_CREATING_ACCOUNT \u003d \"iscreatingaccount\";"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_NAME \u003d \"fsname\";"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_STARTTIME \u003d \"starttime\";"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_ENDTIME \u003d \"endtime\";"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_MODERATED_PERSON \u003d \"moderatedperson\";"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_TYPE \u003d \"fsltype\";"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_STARTTIME \u003d \"fslstarttime\";"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_ENDTIME \u003d \"fslendtime\";"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_QUESTION_ID \u003d \"questionid\";"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_ID \u003d \"responseid\";"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_COMMENT_ID \u003d \"responsecommentid\";"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESULTS_GROUPBYSECTION \u003d \"frgroupbysection\";"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public static final String PREVIEWAS \u003d \"previewas\";"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public static final String STUDENT_ID \u003d \"googleid\";"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public static final String INVITER_ID \u003d \"invitergoogleid\";"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public static final String REGKEY \u003d \"key\";"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public static final String STUDENT_EMAIL \u003d \"studentemail\";"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public static final String SECTION_NAME \u003d \"sectionname\";"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public static final String TEAM_NAME \u003d \"teamname\";"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public static final String ERROR \u003d \"error\";"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public static final String USER_ID \u003d \"user\";"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public static final String SEARCH_KEY \u003d \"searchkey\";"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public static final String USER_CAPTCHA_RESPONSE \u003d \"captcharesponse\";"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public static final String EMAIL_TYPE \u003d \"emailtype\";"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public static final String ENTITY_TYPE \u003d \"entitytype\";"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public static final String INTENT \u003d \"intent\";"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public static final String TIMEZONE \u003d \"timezone\";"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_STARTTIME \u003d \"starttime\";"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ENDTIME \u003d \"endtime\";"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SEVERITY \u003d \"severity\";"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_MIN_SEVERITY \u003d \"minseverity\";"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_TRACE \u003d \"traceid\";"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ACTION_CLASS \u003d \"actionclass\";"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EMAIL \u003d \"email\";"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EVENT \u003d \"logevent\";"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SOURCE_LOCATION_FILE \u003d \"sourcelocationfile\";"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SOURCE_LOCATION_FUNCTION \u003d \"sourcelocationfunction\";"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EXCEPTION_CLASS \u003d \"exceptionclass\";"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_LATENCY \u003d \"latency\";"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_STATUS \u003d \"status\";"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_VERSION \u003d \"version\";"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EXTRA_FILTERS \u003d \"extrafilters\";"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ORDER \u003d \"order\";"},{"lineNumber":176,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":177,"author":{"gitId":"ziqing26"},"content":"        public static final String NOTIFICATION_TARGET_USER \u003d \"usertype\";"},{"lineNumber":178,"author":{"gitId":"ziqing26"},"content":"        public static final String NOTIFICATION_IS_FETCHING_ALL \u003d \"isfetchingall\";"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Represents custom header names used by the system."},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static class HeaderNames {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public static final String BACKDOOR_KEY \u003d \"Backdoor-Key\";"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public static final String CSRF_KEY \u003d \"CSRF-Key\";"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public static final String WEB_VERSION \u003d \"X-WEB-VERSION\";"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public static final String CSRF_TOKEN \u003d \"X-CSRF-TOKEN\";"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * The course status respect to the instructor\u0027s point of view."},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * This parameter is used to get a course list for instructor."},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public static class CourseStatus {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public static final String ACTIVE \u003d \"active\";"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public static final String ARCHIVED \u003d \"archived\";"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public static final String SOFT_DELETED \u003d \"softDeleted\";"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Represents user types."},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public static class EntityType {"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d \"student\";"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d \"instructor\";"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public static final String ADMIN \u003d \"admin\";"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public static final String MAINTAINER \u003d \"maintainer\";"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Represents security-related configuration."},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public static class SecurityConfig {"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public static final String CSRF_COOKIE_NAME \u003d \"CSRF-TOKEN\";"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public static final String AUTH_COOKIE_NAME \u003d \"AUTH-TOKEN\";"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Represents URIs of accessible pages in the front-end in past versions (V6 and before)."},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Deprecated"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public static class LegacyURIs {"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN \u003d \"/page/instructorCourseJoin\";"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN \u003d \"/page/studentCourseJoin\";"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_NEW \u003d \"/page/studentCourseJoinAuthentication\";"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d \"/page/instructorHomePage\";"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d \"/page/studentHomePage\";"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/studentFeedbackSubmissionEditPage\";"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_RESULTS_PAGE \u003d \"/page/studentFeedbackResultsPage\";"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/instructorFeedbackSubmissionEditPage\";"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Represents URIs of accessible pages in the front-end."},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public static class WebPageURIs {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public static final String LOGIN \u003d \"/login\";"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public static final String LOGOUT \u003d \"/logout\";"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/web\";"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"        private static final String STUDENT_PAGE \u003d URI_PREFIX + \"/\" + EntityType.STUDENT;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        private static final String INSTRUCTOR_PAGE \u003d URI_PREFIX + \"/\" + EntityType.INSTRUCTOR;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        private static final String ADMIN_PAGE \u003d URI_PREFIX + \"/\" + EntityType.ADMIN;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        private static final String MAINTAINER_PAGE \u003d URI_PREFIX + \"/\" + EntityType.MAINTAINER;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        private static final String FRONT_PAGE \u003d URI_PREFIX + \"/front\";"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public static final String JOIN_PAGE \u003d URI_PREFIX + \"/join\";"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public static final String ADMIN_HOME_PAGE \u003d ADMIN_PAGE + \"/home\";"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public static final String ADMIN_ACCOUNTS_PAGE \u003d ADMIN_PAGE + \"/accounts\";"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SEARCH_PAGE \u003d ADMIN_PAGE + \"/search\";"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SESSIONS_PAGE \u003d ADMIN_PAGE + \"/sessions\";"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public static final String ADMIN_TIMEZONE_PAGE \u003d ADMIN_PAGE + \"/timezone\";"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public static final String ADMIN_LOGS_PAGE \u003d ADMIN_PAGE + \"/logs\";"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public static final String MAINTAINER_HOME_PAGE \u003d MAINTAINER_PAGE + \"/home\";"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d INSTRUCTOR_PAGE + \"/home\";"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SEARCH_PAGE \u003d INSTRUCTOR_PAGE + \"/search\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSIONS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions\";"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_SUBMISSION_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/submission\";"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/edit\";"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_RESULTS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/result\";"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_REPORT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/report\";"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSES_PAGE \u003d INSTRUCTOR_PAGE + \"/courses\";"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/details\";"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/edit\";"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_ENROLL_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/enroll\";"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/details\";"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/edit\";"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_LIST_PAGE \u003d INSTRUCTOR_PAGE + \"/students\";"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_RECORDS_PAGE \u003d INSTRUCTOR_PAGE + \"/students/records\";"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_AUDIT_LOGS_PAGE \u003d INSTRUCTOR_PAGE + \"/logs\";"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d STUDENT_PAGE + \"/home\";"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_DETAILS_PAGE \u003d STUDENT_PAGE + \"/course\";"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PAGE \u003d STUDENT_PAGE + \"/profile\";"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_SUBMISSION_PAGE \u003d STUDENT_PAGE + \"/sessions/submission\";"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_RESULTS_PAGE \u003d STUDENT_PAGE + \"/sessions/result\";"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"        public static final String SESSION_RESULTS_PAGE \u003d URI_PREFIX + \"/sessions/result\";"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMISSION_PAGE \u003d URI_PREFIX + \"/sessions/submission\";"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_LINK_RECOVERY_PAGE \u003d FRONT_PAGE + \"/help/session-links-recovery\";"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * Represents URIs of resource endpoints."},{"lineNumber":295,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public static class ResourceURIs {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/webapi\";"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE \u003d URI_PREFIX + \"/databundle\";"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE_DOCUMENTS \u003d URI_PREFIX + \"/databundle/documents\";"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public static final String EXCEPTION \u003d URI_PREFIX + \"/exception\";"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public static final String ERROR_REPORT \u003d URI_PREFIX + \"/errorreport\";"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public static final String AUTH \u003d URI_PREFIX + \"/auth\";"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        public static final String AUTH_REGKEY \u003d URI_PREFIX + \"/auth/regkey\";"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT \u003d URI_PREFIX + \"/account\";"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_RESET \u003d URI_PREFIX + \"/account/reset\";"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_DOWNGRADE \u003d URI_PREFIX + \"/account/downgrade\";"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_REQUEST \u003d URI_PREFIX + \"/account/request\";"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        public static final String RESPONSE_COMMENT \u003d URI_PREFIX + \"/responsecomment\";"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        public static final String COURSE \u003d URI_PREFIX + \"/course\";"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        public static final String COURSE_ARCHIVE \u003d URI_PREFIX + \"/course/archive\";"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public static final String BIN_COURSE \u003d URI_PREFIX + \"/bin/course\";"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        public static final String COURSE_SECTIONS \u003d URI_PREFIX + \"/course/sections\";"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        public static final String COURSES \u003d URI_PREFIX + \"/courses\";"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTORS \u003d URI_PREFIX + \"/instructors\";"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d URI_PREFIX + \"/instructor\";"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PRIVILEGE \u003d URI_PREFIX + \"/instructor/privilege\";"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_KEY \u003d URI_PREFIX + \"/instructor/key\";"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        public static final String RESULT \u003d URI_PREFIX + \"/result\";"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        public static final String STUDENTS \u003d URI_PREFIX + \"/students\";"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d URI_PREFIX + \"/student\";"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        public static final String STUDENT_KEY \u003d URI_PREFIX + \"/student/key\";"},{"lineNumber":323,"author":{"gitId":"Nicolascwy"},"content":"        public static final String NOTIFICATION \u003d URI_PREFIX + \"/notification\";"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_ONGOING \u003d URI_PREFIX + \"/sessions/ongoing\";"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        public static final String SESSION \u003d URI_PREFIX + \"/session\";"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        public static final String SESSION_PUBLISH \u003d URI_PREFIX + \"/session/publish\";"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_SUBMISSION \u003d URI_PREFIX + \"/session/remind/submission\";"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_RESULT \u003d URI_PREFIX + \"/session/remind/result\";"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        public static final String SESSION_STATS \u003d URI_PREFIX + \"/session/stats\";"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMITTED_GIVER_SET \u003d URI_PREFIX + \"/session/submitted/giverset\";"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        public static final String SESSIONS \u003d URI_PREFIX + \"/sessions\";"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        public static final String SEARCH_ACCOUNT_REQUESTS \u003d URI_PREFIX + \"/search/accountrequests\";"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        public static final String SEARCH_INSTRUCTORS \u003d URI_PREFIX + \"/search/instructors\";"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        public static final String SEARCH_STUDENTS \u003d URI_PREFIX + \"/search/students\";"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        public static final String BIN_SESSION \u003d URI_PREFIX + \"/bin/session\";"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        public static final String QUESTIONS \u003d URI_PREFIX + \"/questions\";"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        public static final String QUESTION \u003d URI_PREFIX + \"/question\";"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        public static final String QUESTION_RECIPIENTS \u003d URI_PREFIX + \"/question/recipients\";"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public static final String RESPONSES \u003d URI_PREFIX + \"/responses\";"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        public static final String HAS_RESPONSES \u003d URI_PREFIX + \"/hasResponses\";"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        public static final String JOIN \u003d URI_PREFIX + \"/join\";"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        public static final String JOIN_REMIND \u003d URI_PREFIX + \"/join/remind\";"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        public static final String TIMEZONE \u003d URI_PREFIX + \"/timezone\";"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public static final String SESSION_LINKS_RECOVERY \u003d URI_PREFIX + \"/sessionlinksrecovery\";"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        public static final String NATIONALITIES \u003d URI_PREFIX + \"/nationalities\";"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        public static final String EMAIL \u003d URI_PREFIX + \"/email\";"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        public static final String SESSION_LOGS \u003d URI_PREFIX + \"/logs/session\";"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        public static final String LOGS \u003d URI_PREFIX + \"/logs/query\";"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        public static final String ACTION_CLASS \u003d URI_PREFIX + \"/actionclass\";"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        public static final String USER_COOKIE \u003d URI_PREFIX + \"/cookie\";"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PICTURE \u003d URI_PREFIX + \"/student/profilePic\";"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE \u003d URI_PREFIX + \"/student/profile\";"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * Represents URIs of endpoints used by cron jobs."},{"lineNumber":358,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    public static class CronJobURIs {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/auto\";"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_LOG_COMPILATION \u003d URI_PREFIX + \"/compileLogs\";"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_DATASTORE_BACKUP \u003d URI_PREFIX + \"/datastoreBackup\";"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_OPENING_SOON_REMINDERS \u003d"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionOpeningSoonReminders\";"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_OPENING_REMINDERS \u003d"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionOpeningReminders\";"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSED_REMINDERS \u003d"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosedReminders\";"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSING_REMINDERS \u003d"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosingReminders\";"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS \u003d"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedReminders\";"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":377,"author":{"gitId":"-"},"content":"     * Configurations for task queue."},{"lineNumber":378,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public static class TaskQueue {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        public static final String URI_PREFIX \u003d \"/worker\";"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                \"feedback-session-published-email-queue\";"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedEmail\";"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                \"feedback-session-resend-published-email-queue\";"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":390,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionResendPublishedEmail\";"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME \u003d \"feedback-session-remind-email-queue\";"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/feedbackSessionRemindEmail\";"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                \"feedback-session-remind-particular-users-email-queue\";"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL \u003d"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionRemindParticularUsersEmail\";"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":401,"author":{"gitId":"-"},"content":"                \"feedback-session-unpublished-email-queue\";"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionUnpublishedEmail\";"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"instructor-course-join-email-queue\";"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/instructorCourseJoinEmail\";"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_QUEUE_NAME \u003d \"send-email-queue\";"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/sendEmail\";"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"student-course-join-email-queue\";"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/studentCourseJoinEmail\";"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"        public static final String SEARCH_INDEXING_QUEUE_NAME \u003d \"search-indexing-queue\";"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SEARCH_INDEXING_WORKER_URL \u003d URI_PREFIX + \"/instructorSearchIndexing\";"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_REQUEST_SEARCH_INDEXING_WORKER_URL \u003d"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/accountRequestSearchIndexing\";"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SEARCH_INDEXING_WORKER_URL \u003d URI_PREFIX + \"/studentSearchIndexing\";"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":3,"-":416,"Nicolascwy":2}},{"path":"src/main/java/teammates/common/util/FieldValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.LinkedList;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"import java.util.stream.Collectors;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationType;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Used to handle the data validation aspect e.g. validate emails, names, etc."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public final class FieldValidator {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /////////////////"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // FIELD TYPES //"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /////////////////"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // name-related"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String PERSON_NAME_FIELD_NAME \u003d \"person name\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final int PERSON_NAME_MAX_LENGTH \u003d 100;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String NATIONALITY_FIELD_NAME \u003d \"nationality\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COURSE_NAME_FIELD_NAME \u003d \"course name\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final int COURSE_NAME_MAX_LENGTH \u003d 80;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String FEEDBACK_SESSION_NAME_FIELD_NAME \u003d \"feedback session name\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final int FEEDBACK_SESSION_NAME_MAX_LENGTH \u003d 64;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String TEAM_NAME_FIELD_NAME \u003d \"team name\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final int TEAM_NAME_MAX_LENGTH \u003d 60;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String SECTION_NAME_FIELD_NAME \u003d \"section name\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final int SECTION_NAME_MAX_LENGTH \u003d 60;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String INSTITUTE_NAME_FIELD_NAME \u003d \"institute name\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final int INSTITUTE_NAME_MAX_LENGTH \u003d 64;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // email-related"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_FIELD_NAME \u003d \"email\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final int EMAIL_MAX_LENGTH \u003d 254;"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":"    // notification-related"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"    // TODO: Change max length of title and message according to frontend"},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_TITLE_FIELD_NAME \u003d \"notification title\";"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":"    public static final int NOTIFICATION_TITLE_MAX_LENGTH \u003d 80;"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_MESSAGE_FIELD_NAME \u003d \"notification message\";"},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"    public static final int NOTIFICATION_MESSAGE_MAX_LENGTH \u003d 500;"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_VISIBLE_TIME_FIELD_NAME \u003d \"time when the notification will be visible\";"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_EXPIRY_TIME_FIELD_NAME \u003d \"time when the notification will expire\";"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_TYPE_FIELD_NAME \u003d \"notification type\";"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":"    public static final List\u003cString\u003e NOTIFICATION_TYPE_ACCEPTED_VALUES \u003d"},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"            Collections.unmodifiableList("},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"                    Arrays.stream("},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"                            NotificationType.values())"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"                            .map(NotificationType::toString)"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"                            .collect(Collectors.toList())"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"            );"},{"lineNumber":69,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_TARGET_USER_FIELD_NAME \u003d \"notification target user\";"},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":"    public static final List\u003cString\u003e NOTIFICATION_TARGET_USER_ACCEPTED_VALUES \u003d"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"            Collections.unmodifiableList("},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"                    Arrays.stream("},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"                            NotificationTargetUser.values())"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"                            .map(NotificationTargetUser::toString)"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"                            .collect(Collectors.toList())"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"            );"},{"lineNumber":77,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    // others"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String STUDENT_ROLE_COMMENTS_FIELD_NAME \u003d \"comments about a student enrolled in a course\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final int STUDENT_ROLE_COMMENTS_MAX_LENGTH \u003d 500;"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Field: Course ID"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Unique: system-wide, not just among the course of that instructor."},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Technically, we can get rid of CourseID field and enforce users to use"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * CourseName as a unique ID. In that case, we have to enforce CourseName"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * must be unique across the full system. However, users expect names to be"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * non-unique and more tolerant of enforcing uniqueness on an ID. Whenever"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * possible, must be displayed in the same case as user entered. This is"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * because the case of the letters can mean something. Furthermore,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * converting to same case can reduce readability."},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Course ID is necessary because the course name is not unique enough to"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * distinguish between courses because the same course can be offered"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * multiple times and courses can be shared between instructors and many"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * students. Allowing same Course ID among different instructors could be"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * problematic if we allow multiple instructors for a single course."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * TODO: make case insensitive"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String COURSE_ID_FIELD_NAME \u003d \"course ID\";"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final int COURSE_ID_MAX_LENGTH \u003d 64;"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final String SESSION_START_TIME_FIELD_NAME \u003d \"start time\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String SESSION_END_TIME_FIELD_NAME \u003d \"end time\";"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static final String TIME_ZONE_FIELD_NAME \u003d \"time zone\";"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final String GOOGLE_ID_FIELD_NAME \u003d \"Google ID\";"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final int GOOGLE_ID_MAX_LENGTH \u003d 254;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final String ROLE_FIELD_NAME \u003d \"access-level\";"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final List\u003cString\u003e ROLE_ACCEPTED_VALUES \u003d"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Collections.unmodifiableList("},{"lineNumber":114,"author":{"gitId":"-"},"content":"                    Arrays.asList(Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_MANAGER,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_OBSERVER,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_TUTOR,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_CUSTOM));"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static final String GIVER_TYPE_NAME \u003d \"feedback giver\";"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static final String RECIPIENT_TYPE_NAME \u003d \"feedback recipient\";"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static final String VIEWER_TYPE_NAME \u003d \"feedback viewer\";"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    ////////////////////"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    // ERROR MESSAGES //"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ////////////////////"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static final String REASON_TOO_LONG \u003d \"is too long\";"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static final String REASON_INCORRECT_FORMAT \u003d \"is not in the correct format\";"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static final String REASON_CONTAINS_INVALID_CHAR \u003d \"contains invalid characters\";"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static final String REASON_START_WITH_NON_ALPHANUMERIC_CHAR \u003d \"starts with a non-alphanumeric character\";"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static final String REASON_UNAVAILABLE_AS_CHOICE \u003d \"is not available as a choice\";"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    // error message components"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static final String EMPTY_STRING_ERROR_INFO \u003d"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \"The field \u0027${fieldName}\u0027 is empty.\";"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static final String ERROR_INFO \u003d"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            \"\\\"${userInput}\\\" is not acceptable to TEAMMATES as a/an ${fieldName} because it ${reason}.\";"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_POSSIBLY_EMPTY \u003d"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            \"The value of a/an ${fieldName} should be no longer than ${maxLength} characters.\";"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY \u003d"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_POSSIBLY_EMPTY + \" It should not be empty.\";"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY_NO_SPACES \u003d"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            \"It cannot be longer than ${maxLength} characters, cannot be empty and cannot contain spaces.\";"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_FOR_INVALID_NAME \u003d"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            \"A/An ${fieldName} must start with an alphanumeric character, and cannot contain any vertical bar \""},{"lineNumber":147,"author":{"gitId":"-"},"content":"            + \"(|) or percent sign (%).\";"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    // generic (i.e., not specific to any field) error messages"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static final String SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE \u003d"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static final String SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING \u003d"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            EMPTY_STRING_ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static final String SIZE_CAPPED_POSSIBLY_EMPTY_STRING_ERROR_MESSAGE \u003d"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_POSSIBLY_EMPTY;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static final String SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING_FOR_SESSION_NAME \u003d"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \"The field \u0027${fieldName}\u0027 should not be empty.\" + \" \""},{"lineNumber":158,"author":{"gitId":"-"},"content":"            + \"The value of \u0027${fieldName}\u0027 field should be no longer than ${maxLength} characters.\";"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_ERROR_MESSAGE \u003d"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_FOR_INVALID_NAME;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static final String TEAM_NAME_IS_VALID_EMAIL_ERROR_MESSAGE \u003d"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            \"The field \" + TEAM_NAME_FIELD_NAME + \" is not acceptable to TEAMMATES as the suggested value for \""},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    + TEAM_NAME_FIELD_NAME + \" can be mis-interpreted as an email.\";"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static final String WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE \u003d"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            \"The provided ${fieldName} is not acceptable to TEAMMATES as it contains only whitespace \""},{"lineNumber":167,"author":{"gitId":"-"},"content":"            + \"or contains extra spaces at the beginning or at the end of the text.\";"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static final String NON_HTML_FIELD_ERROR_MESSAGE \u003d"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            \"The provided ${fieldName} is not acceptable to TEAMMATES \""},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    + \"as it cannot contain the following special html characters\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    + \" in brackets: (\u003c \u003e \\\" / \u0027 \u0026)\";"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static final String NON_NULL_FIELD_ERROR_MESSAGE \u003d"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            \"The provided ${fieldName} is not acceptable to TEAMMATES as it cannot be empty.\";"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    // field-specific error messages"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_EMAIL \u003d"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            \"An email address contains some text followed by one \u0027@\u0027 sign followed by some more text, and should end \""},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    + \"with a top level domain address like .com. \""},{"lineNumber":179,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY_NO_SPACES;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static final String EMAIL_ERROR_MESSAGE \u003d"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_EMAIL;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static final String EMAIL_ERROR_MESSAGE_EMPTY_STRING \u003d"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            EMPTY_STRING_ERROR_INFO + \" \" + HINT_FOR_CORRECT_EMAIL;"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_COURSE_ID \u003d"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            \"A course ID can contain letters, numbers, fullstops, hyphens, underscores, and dollar signs. \""},{"lineNumber":187,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY_NO_SPACES;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public static final String COURSE_ID_ERROR_MESSAGE \u003d"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_COURSE_ID;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static final String COURSE_ID_ERROR_MESSAGE_EMPTY_STRING \u003d"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            EMPTY_STRING_ERROR_INFO + \" \" + HINT_FOR_CORRECT_COURSE_ID;"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_OF_GOOGLE_ID \u003d"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            \"A Google ID must be a valid id already registered with Google. \""},{"lineNumber":195,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY_NO_SPACES;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static final String GOOGLE_ID_ERROR_MESSAGE \u003d"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_OF_GOOGLE_ID;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public static final String GOOGLE_ID_ERROR_MESSAGE_EMPTY_STRING \u003d"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            EMPTY_STRING_ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_OF_GOOGLE_ID;"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_TIME_ZONE \u003d"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            \"The value must be one of the values from the time zone dropdown selector.\";"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public static final String TIME_ZONE_ERROR_MESSAGE \u003d"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_TIME_ZONE;"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_GRACE_PERIOD \u003d"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            \"The value must be one of the options in the grace period dropdown selector.\";"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public static final String GRACE_PERIOD_NEGATIVE_ERROR_MESSAGE \u003d \"Grace period should not be negative.\" + \" \""},{"lineNumber":209,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_GRACE_PERIOD;"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_NATIONALITY \u003d"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            \"The value must be one of the values from the nationality dropdown selector.\";"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public static final String NATIONALITY_ERROR_MESSAGE \u003d"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            \"\\\"%s\\\" is not an accepted \" + NATIONALITY_FIELD_NAME + \" to TEAMMATES. \""},{"lineNumber":215,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_NATIONALITY;"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public static final String ROLE_ERROR_MESSAGE \u003d"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            \"\\\"%s\\\" is not an accepted \" + ROLE_FIELD_NAME + \" to TEAMMATES. \";"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_TYPE_ERROR_MESSAGE \u003d"},{"lineNumber":221,"author":{"gitId":"Nicolascwy"},"content":"            \"\\\"%s\\\" is not an accepted \" + NOTIFICATION_TYPE_FIELD_NAME + \" to TEAMMATES. \";"},{"lineNumber":222,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":223,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_TARGET_USER_ERROR_MESSAGE \u003d"},{"lineNumber":224,"author":{"gitId":"Nicolascwy"},"content":"            \"\\\"%s\\\" is not an accepted \" + NOTIFICATION_TARGET_USER_FIELD_NAME + \" to TEAMMATES. \";"},{"lineNumber":225,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public static final String SESSION_VISIBLE_TIME_FIELD_NAME \u003d \"time when the session will be visible\";"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public static final String RESULTS_VISIBLE_TIME_FIELD_NAME \u003d \"time when the results will be visible\";"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public static final String TIME_FRAME_ERROR_MESSAGE \u003d"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                \"The %s for this feedback session cannot be earlier than the %s.\";"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public static final String PARTICIPANT_TYPE_ERROR_MESSAGE \u003d \"%s is not a valid %s.\";"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public static final String PARTICIPANT_TYPE_TEAM_ERROR_MESSAGE \u003d"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            \"The feedback recipients cannot be \\\"%s\\\" when the feedback giver is \\\"%s\\\". \""},{"lineNumber":234,"author":{"gitId":"-"},"content":"            + \"Did you mean to use \\\"Self\\\" instead?\";"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    ///////////////////////////////////////"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    // VALIDATION REGEX FOR INTERNAL USE //"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    ///////////////////////////////////////"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * Must start with alphanumeric character, cannot contain vertical bar(|) or percent sign(%)."},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public static final String REGEX_NAME \u003d \"^[\\\\p{IsL}\\\\p{IsN}][^|%]*+$\";"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * Allows English alphabet, numbers, underscore,  dot, dollar sign and hyphen."},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public static final String REGEX_COURSE_ID \u003d \"[a-zA-Z0-9_.$-]+\";"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Local part:"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * \u003cli\u003eCan only start with letters, digits, hyphen or plus sign;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * \u003cli\u003eSpecial characters allowed are ! # $ % \u0026 \u0027 * + - / \u003d ? ^ _ ` { } ~"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * \u003cli\u003eDot can only appear between any 2 characters and cannot appear continuously\u003cbr\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * Domain part:"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * \u003cli\u003eOnly allow letters, digits, hyphen and dot; Must end with letters; Must have TLD"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public static final String REGEX_EMAIL \u003d \"^[\\\\w+-][\\\\w+!#$%\u0026\u0027*/\u003d?^_`{}~-]*+(\\\\.[\\\\w+!#$%\u0026\u0027*/\u003d?^_`{}~-]+)*+\""},{"lineNumber":259,"author":{"gitId":"-"},"content":"                                            + \"@([A-Za-z0-9-]+\\\\.)+[A-Za-z]+$\";"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * Allows English alphabet, numbers, underscore,  dot and hyphen."},{"lineNumber":263,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public static final String REGEX_GOOGLE_ID_NON_EMAIL \u003d \"[a-zA-Z0-9_.-]+\";"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"    private FieldValidator() {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        // utility class"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // Intentional private constructor to prevent instantiation."},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /////////////////////////////////////////"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    // VALIDATION METHODS FOR EXTERNAL USE //"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /////////////////////////////////////////"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * Checks if {@code email} is not null, not empty, not longer than {@code EMAIL_MAX_LENGTH}, and is a"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * valid email address according to {@code REGEX_EMAIL}."},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code email} is not acceptable."},{"lineNumber":279,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code email} is acceptable."},{"lineNumber":280,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForEmail(String email) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"        if (email.isEmpty()) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return getPopulatedEmptyStringErrorMessage(EMAIL_ERROR_MESSAGE_EMPTY_STRING, EMAIL_FIELD_NAME,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                                            EMAIL_MAX_LENGTH);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        } else if (isUntrimmed(email)) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\", EMAIL_FIELD_NAME);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        } else if (email.length() \u003e EMAIL_MAX_LENGTH) {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(EMAIL_ERROR_MESSAGE, email, EMAIL_FIELD_NAME,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                                            REASON_TOO_LONG, EMAIL_MAX_LENGTH);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        } else if (!isValidEmailAddress(email)) {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(EMAIL_ERROR_MESSAGE, email, EMAIL_FIELD_NAME,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                                            REASON_INCORRECT_FORMAT, EMAIL_MAX_LENGTH);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * Checks if {@code gracePeriod} is not negative."},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * @return An explanation why the {@code gracePeriod} is not acceptable."},{"lineNumber":303,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code gracePeriod} is acceptable."},{"lineNumber":304,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForGracePeriod(Duration gracePeriod) {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        if (gracePeriod.isNegative()) {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            return GRACE_PERIOD_NEGATIVE_ERROR_MESSAGE;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":313,"author":{"gitId":"-"},"content":"     * Checks if {@code googleId} is not null, not empty, not longer than {@code GOOGLE_ID_MAX_LENGTH}, does"},{"lineNumber":314,"author":{"gitId":"-"},"content":"     * not contain any invalid characters (| or %), AND is either a Google username (without the \"@gmail.com\")"},{"lineNumber":315,"author":{"gitId":"-"},"content":"     * or a valid email address that does not end in \"@gmail.com\"."},{"lineNumber":316,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code googleId} is not acceptable."},{"lineNumber":317,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code googleId} is acceptable."},{"lineNumber":318,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForGoogleId(String googleId) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        assert !googleId.toLowerCase().endsWith(\"@gmail.com\")"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                : \"\\\"\" + googleId + \"\\\"\" + \"is not expected to be a gmail address.\";"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"        boolean isValidFullEmail \u003d isValidEmailAddress(googleId);"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        boolean isValidEmailWithoutDomain \u003d StringHelper.isMatching(googleId, REGEX_GOOGLE_ID_NON_EMAIL);"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        if (googleId.isEmpty()) {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            return getPopulatedEmptyStringErrorMessage(GOOGLE_ID_ERROR_MESSAGE_EMPTY_STRING,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                                            GOOGLE_ID_FIELD_NAME, GOOGLE_ID_MAX_LENGTH);"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        } else if (isUntrimmed(googleId)) {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\", GOOGLE_ID_FIELD_NAME);"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        } else if (googleId.length() \u003e GOOGLE_ID_MAX_LENGTH) {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(GOOGLE_ID_ERROR_MESSAGE, googleId, GOOGLE_ID_FIELD_NAME,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                                            REASON_TOO_LONG, GOOGLE_ID_MAX_LENGTH);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        } else if (!(isValidFullEmail || isValidEmailWithoutDomain)) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(GOOGLE_ID_ERROR_MESSAGE, googleId, GOOGLE_ID_FIELD_NAME,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                                            REASON_INCORRECT_FORMAT, GOOGLE_ID_MAX_LENGTH);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":344,"author":{"gitId":"-"},"content":"     * Checks if {@code courseId} is not null, not empty, has no surrounding whitespaces, not longer than"},{"lineNumber":345,"author":{"gitId":"-"},"content":"     * {@code COURSE_ID_MAX_LENGTH}, is sanitized for HTML, and match the REGEX {@code REGEX_COURSE_ID}."},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code courseId} is not acceptable."},{"lineNumber":347,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code courseId} is acceptable."},{"lineNumber":348,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForCourseId(String courseId) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"        if (courseId.isEmpty()) {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            return getPopulatedEmptyStringErrorMessage(COURSE_ID_ERROR_MESSAGE_EMPTY_STRING,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                                            COURSE_ID_FIELD_NAME, COURSE_ID_MAX_LENGTH);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        if (isUntrimmed(courseId)) {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\","},{"lineNumber":359,"author":{"gitId":"-"},"content":"                    COURSE_NAME_FIELD_NAME);"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        if (courseId.length() \u003e COURSE_ID_MAX_LENGTH) {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(COURSE_ID_ERROR_MESSAGE, courseId, COURSE_ID_FIELD_NAME,"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                                            REASON_TOO_LONG, COURSE_ID_MAX_LENGTH);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        if (!StringHelper.isMatching(courseId, REGEX_COURSE_ID)) {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(COURSE_ID_ERROR_MESSAGE, courseId, COURSE_ID_FIELD_NAME,"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                                            REASON_INCORRECT_FORMAT, COURSE_ID_MAX_LENGTH);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":373,"author":{"gitId":"-"},"content":"     * Checks if {@code sectionName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":374,"author":{"gitId":"-"},"content":"     * {@code SECTION_NAME_MAX_LENGTH}, and also does not contain any invalid characters (| or %)."},{"lineNumber":375,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code sectionName} is not acceptable."},{"lineNumber":376,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code sectionName} is acceptable."},{"lineNumber":377,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForSectionName(String sectionName) {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(SECTION_NAME_FIELD_NAME, SECTION_NAME_MAX_LENGTH, sectionName);"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":383,"author":{"gitId":"-"},"content":"     * Checks if {@code teamName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":384,"author":{"gitId":"-"},"content":"     * {@code TEAM_NAME_MAX_LENGTH}, does not contain any invalid characters (| or %) and is not a valid email."},{"lineNumber":385,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code teamName} is not acceptable."},{"lineNumber":386,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code teamName} is acceptable."},{"lineNumber":387,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTeamName(String teamName) {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        boolean isValidEmail \u003d isValidEmailAddress(teamName);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        if (isValidEmail) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            return TEAM_NAME_IS_VALID_EMAIL_ERROR_MESSAGE;"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(TEAM_NAME_FIELD_NAME, TEAM_NAME_MAX_LENGTH, teamName);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":397,"author":{"gitId":"-"},"content":"     * Checks if the given studentRoleComments is a non-null string no longer than"},{"lineNumber":398,"author":{"gitId":"-"},"content":"     * the specified length {@code STUDENT_ROLE_COMMENTS_MAX_LENGTH}. However, this string can be empty."},{"lineNumber":399,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code studentRoleComments} is not acceptable."},{"lineNumber":400,"author":{"gitId":"-"},"content":"     *         Returns an empty string \"\" if the {@code studentRoleComments} is acceptable."},{"lineNumber":401,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForStudentRoleComments(String studentRoleComments) {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        return getValidityInfoForSizeCappedPossiblyEmptyString(STUDENT_ROLE_COMMENTS_FIELD_NAME,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                                                               STUDENT_ROLE_COMMENTS_MAX_LENGTH,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                                                               studentRoleComments);"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":409,"author":{"gitId":"-"},"content":"     * Checks if {@code feedbackSessionName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":410,"author":{"gitId":"-"},"content":"     * {@code FEEDBACK_SESSION_NAME_MAX_LENGTH}, does not contain any invalid characters (| or %), and has no"},{"lineNumber":411,"author":{"gitId":"-"},"content":"     * unsanitized HTML characters."},{"lineNumber":412,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code feedbackSessionName} is not acceptable."},{"lineNumber":413,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code feedbackSessionName} is acceptable."},{"lineNumber":414,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForFeedbackSessionName(String feedbackSessionName) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        String errorsFromAllowedNameValidation \u003d getValidityInfoForAllowedName("},{"lineNumber":417,"author":{"gitId":"-"},"content":"                FEEDBACK_SESSION_NAME_FIELD_NAME, FEEDBACK_SESSION_NAME_MAX_LENGTH, feedbackSessionName);"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"        // return early if error already exists because session name is too long etc."},{"lineNumber":420,"author":{"gitId":"-"},"content":"        if (!errorsFromAllowedNameValidation.isEmpty()) {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            return errorsFromAllowedNameValidation;"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"        // checks for unsanitized HTML characters"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        return getValidityInfoForNonHtmlField(FEEDBACK_SESSION_NAME_FIELD_NAME, feedbackSessionName);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":429,"author":{"gitId":"-"},"content":"     * Checks if {@code courseName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":430,"author":{"gitId":"-"},"content":"     * {@code COURSE_NAME_MAX_LENGTH}, and also does not contain any invalid characters (| or %)."},{"lineNumber":431,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code courseName} is not acceptable."},{"lineNumber":432,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code courseName} is acceptable."},{"lineNumber":433,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForCourseName(String courseName) {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(COURSE_NAME_FIELD_NAME, COURSE_NAME_MAX_LENGTH, courseName);"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":439,"author":{"gitId":"-"},"content":"     * Checks if {@code nationality} is a non-null non-empty string contained in the {@link NationalityHelper}\u0027s"},{"lineNumber":440,"author":{"gitId":"-"},"content":"     * list of nationalities."},{"lineNumber":441,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code nationality} is not acceptable."},{"lineNumber":442,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code nationality} is acceptable."},{"lineNumber":443,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForNationality(String nationality) {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        assert nationality !\u003d null;"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        if (!NationalityHelper.getNationalities().contains(nationality)) {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"            return String.format(NATIONALITY_ERROR_MESSAGE, nationality);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":453,"author":{"gitId":"-"},"content":"     * Checks if {@code instituteName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":454,"author":{"gitId":"-"},"content":"     * {@code INSTITUTE_NAME_MAX_LENGTH}, and also does not contain any invalid characters (| or %)."},{"lineNumber":455,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code instituteName} is not acceptable."},{"lineNumber":456,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code instituteName} is acceptable."},{"lineNumber":457,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForInstituteName(String instituteName) {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(INSTITUTE_NAME_FIELD_NAME, INSTITUTE_NAME_MAX_LENGTH,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"                                             instituteName);"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":464,"author":{"gitId":"-"},"content":"     * Checks if {@code personName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":465,"author":{"gitId":"-"},"content":"     * {@code PERSON_NAME_MAX_LENGTH}, and also does not contain any invalid characters (| or %)."},{"lineNumber":466,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code personName} is not acceptable."},{"lineNumber":467,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code personName} is acceptable."},{"lineNumber":468,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForPersonName(String personName) {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(PERSON_NAME_FIELD_NAME, PERSON_NAME_MAX_LENGTH, personName);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":474,"author":{"gitId":"-"},"content":"     * Checks if the given string is a non-null string contained in Java\u0027s list of"},{"lineNumber":475,"author":{"gitId":"-"},"content":"     * regional time zone IDs."},{"lineNumber":476,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code timeZoneValue} is not acceptable."},{"lineNumber":477,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code timeZoneValue} is acceptable."},{"lineNumber":478,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTimeZone(String timeZoneValue) {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        assert timeZoneValue !\u003d null;"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        if (!ZoneId.getAvailableZoneIds().contains(timeZoneValue)) {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(TIME_ZONE_ERROR_MESSAGE,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"                    timeZoneValue, TIME_ZONE_FIELD_NAME, REASON_UNAVAILABLE_AS_CHOICE);"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":487,"author":{"gitId":"-"},"content":""},{"lineNumber":488,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":489,"author":{"gitId":"-"},"content":"     * Checks if {@code role} is one of the recognized roles {@link #ROLE_ACCEPTED_VALUES}."},{"lineNumber":490,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":491,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code role} is not acceptable."},{"lineNumber":492,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code role} is acceptable."},{"lineNumber":493,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForRole(String role) {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        assert role !\u003d null;"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"        if (!ROLE_ACCEPTED_VALUES.contains(role)) {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"            return String.format(ROLE_ERROR_MESSAGE, role);"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":504,"author":{"gitId":"-"},"content":"     * Checks if the given name (including person name, institute name, course name, feedback session and team name)"},{"lineNumber":505,"author":{"gitId":"-"},"content":"     * is a non-null non-empty string no longer than the specified length {@code maxLength},"},{"lineNumber":506,"author":{"gitId":"-"},"content":"     * and also does not contain any invalid characters (| or %)."},{"lineNumber":507,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":508,"author":{"gitId":"-"},"content":"     * @param fieldName"},{"lineNumber":509,"author":{"gitId":"-"},"content":"     *            A descriptive name of the field e.g., \"student name\", to be"},{"lineNumber":510,"author":{"gitId":"-"},"content":"     *            used in the return value to make the explanation more"},{"lineNumber":511,"author":{"gitId":"-"},"content":"     *            descriptive."},{"lineNumber":512,"author":{"gitId":"-"},"content":"     * @param value"},{"lineNumber":513,"author":{"gitId":"-"},"content":"     *            The string to be checked."},{"lineNumber":514,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code value} is not acceptable."},{"lineNumber":515,"author":{"gitId":"-"},"content":"     *         Returns an empty string \"\" if the {@code value} is acceptable."},{"lineNumber":516,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    static String getValidityInfoForAllowedName(String fieldName, int maxLength, String value) {"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"        assert value !\u003d null : \"Non-null value expected for \" + fieldName;"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"        if (value.isEmpty()) {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"            if (FEEDBACK_SESSION_NAME_FIELD_NAME.equals(fieldName)) {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"                return getPopulatedEmptyStringErrorMessage("},{"lineNumber":524,"author":{"gitId":"-"},"content":"                        SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING_FOR_SESSION_NAME,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"                        fieldName, maxLength);"},{"lineNumber":526,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"                return getPopulatedEmptyStringErrorMessage(SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"                        fieldName, maxLength);"},{"lineNumber":529,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        if (isUntrimmed(value)) {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\", fieldName);"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        if (value.length() \u003e maxLength) {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE, value,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"                                            fieldName, REASON_TOO_LONG, maxLength);"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        if (!Character.isLetterOrDigit(value.codePointAt(0))) {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            boolean hasStartingBrace \u003d value.charAt(0) \u003d\u003d \u0027{\u0027 \u0026\u0026 value.contains(\"}\");"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            if (!hasStartingBrace) {"},{"lineNumber":541,"author":{"gitId":"-"},"content":"                return getPopulatedErrorMessage(INVALID_NAME_ERROR_MESSAGE, value,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                                                fieldName, REASON_START_WITH_NON_ALPHANUMERIC_CHAR);"},{"lineNumber":543,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":544,"author":{"gitId":"-"},"content":"            if (!StringHelper.isMatching(value.substring(1), REGEX_NAME)) {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                return getPopulatedErrorMessage(INVALID_NAME_ERROR_MESSAGE, value, fieldName,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"                                                REASON_CONTAINS_INVALID_CHAR);"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":548,"author":{"gitId":"-"},"content":"            return \"\";"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        if (!StringHelper.isMatching(value, REGEX_NAME)) {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(INVALID_NAME_ERROR_MESSAGE, value, fieldName,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"                                            REASON_CONTAINS_INVALID_CHAR);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":558,"author":{"gitId":"Nicolascwy"},"content":"     * Checks if the notification title is a non-null non-empty string."},{"lineNumber":559,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":560,"author":{"gitId":"Nicolascwy"},"content":"     * @param notificationTitle The title of the notification."},{"lineNumber":561,"author":{"gitId":"Nicolascwy"},"content":"     * @return An explanation of why the {@code notificationTitle} is not acceptable."},{"lineNumber":562,"author":{"gitId":"Nicolascwy"},"content":"     *         Returns an empty string \"\" if the {@code notificationTitle} is acceptable."},{"lineNumber":563,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":564,"author":{"gitId":"Nicolascwy"},"content":"    public static String getInvalidityInfoForNotificationTitle(String notificationTitle) {"},{"lineNumber":565,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":566,"author":{"gitId":"Nicolascwy"},"content":"        assert notificationTitle !\u003d null : \"Non-null value expected for notification title\";"},{"lineNumber":567,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":568,"author":{"gitId":"Nicolascwy"},"content":"        if (notificationTitle.isEmpty()) {"},{"lineNumber":569,"author":{"gitId":"Nicolascwy"},"content":"            return getPopulatedEmptyStringErrorMessage(EMPTY_STRING_ERROR_INFO,"},{"lineNumber":570,"author":{"gitId":"Nicolascwy"},"content":"                NOTIFICATION_TITLE_FIELD_NAME, NOTIFICATION_TITLE_MAX_LENGTH);"},{"lineNumber":571,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":572,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":573,"author":{"gitId":"Nicolascwy"},"content":"        return \"\";"},{"lineNumber":574,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":575,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":576,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":577,"author":{"gitId":"Nicolascwy"},"content":"     * Checks if the notification message is a non-null non-empty string."},{"lineNumber":578,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":579,"author":{"gitId":"Nicolascwy"},"content":"     * @param notificationMessage The notification message."},{"lineNumber":580,"author":{"gitId":"Nicolascwy"},"content":"     * @return An explanation of why the {@code notificationMessage} is not acceptable."},{"lineNumber":581,"author":{"gitId":"Nicolascwy"},"content":"     *         Returns an empty string \"\" if the {@code notificationMessage} is acceptable."},{"lineNumber":582,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":583,"author":{"gitId":"Nicolascwy"},"content":"    public static String getInvalidityInfoForNotificationBody(String notificationMessage) {"},{"lineNumber":584,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":585,"author":{"gitId":"Nicolascwy"},"content":"        assert notificationMessage !\u003d null : \"Non-null value expected for notification message\";"},{"lineNumber":586,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":587,"author":{"gitId":"Nicolascwy"},"content":"        if (notificationMessage.isEmpty()) {"},{"lineNumber":588,"author":{"gitId":"Nicolascwy"},"content":"            return getPopulatedEmptyStringErrorMessage(EMPTY_STRING_ERROR_INFO, NOTIFICATION_MESSAGE_FIELD_NAME,"},{"lineNumber":589,"author":{"gitId":"Nicolascwy"},"content":"                    NOTIFICATION_MESSAGE_MAX_LENGTH);"},{"lineNumber":590,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":591,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":592,"author":{"gitId":"Nicolascwy"},"content":"        return \"\";"},{"lineNumber":593,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":594,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":595,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":596,"author":{"gitId":"Nicolascwy"},"content":"     * Checks if {@code type} is one of the recognized notification type {@link #NOTIFICATION_TYPE_ACCEPTED_VALUES}."},{"lineNumber":597,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":598,"author":{"gitId":"Nicolascwy"},"content":"     * @return An explanation of why the {@code type} is not acceptable."},{"lineNumber":599,"author":{"gitId":"Nicolascwy"},"content":"     *         Returns an empty string if the {@code type} is acceptable."},{"lineNumber":600,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":601,"author":{"gitId":"Nicolascwy"},"content":"    public static String getInvalidityInfoForNotificationType(String type) {"},{"lineNumber":602,"author":{"gitId":"Nicolascwy"},"content":"        assert type !\u003d null;"},{"lineNumber":603,"author":{"gitId":"ziqing26"},"content":"        try {"},{"lineNumber":604,"author":{"gitId":"ziqing26"},"content":"            NotificationType.valueOf(type);"},{"lineNumber":605,"author":{"gitId":"ziqing26"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":606,"author":{"gitId":"Nicolascwy"},"content":"            return String.format(NOTIFICATION_TYPE_ERROR_MESSAGE, type);"},{"lineNumber":607,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":608,"author":{"gitId":"Nicolascwy"},"content":"        return \"\";"},{"lineNumber":609,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":610,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":611,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":612,"author":{"gitId":"Nicolascwy"},"content":"     * Checks if {@code targetUser} is one of the"},{"lineNumber":613,"author":{"gitId":"Nicolascwy"},"content":"     * recognized notification target user groups {@link #NOTIFICATION_TARGET_USER_ACCEPTED_VALUES}."},{"lineNumber":614,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":615,"author":{"gitId":"Nicolascwy"},"content":"     * @return An explanation of why the {@code targetUser} is not acceptable."},{"lineNumber":616,"author":{"gitId":"Nicolascwy"},"content":"     *         Returns an empty string if the {@code targetUser} is acceptable."},{"lineNumber":617,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":618,"author":{"gitId":"Nicolascwy"},"content":"    public static String getInvalidityInfoForNotificationTargetUser(String targetUser) {"},{"lineNumber":619,"author":{"gitId":"Nicolascwy"},"content":"        assert targetUser !\u003d null;"},{"lineNumber":620,"author":{"gitId":"ziqing26"},"content":"        try {"},{"lineNumber":621,"author":{"gitId":"ziqing26"},"content":"            NotificationTargetUser.valueOf(targetUser);"},{"lineNumber":622,"author":{"gitId":"ziqing26"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":623,"author":{"gitId":"Nicolascwy"},"content":"            return String.format(NOTIFICATION_TARGET_USER_ERROR_MESSAGE, targetUser);"},{"lineNumber":624,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":625,"author":{"gitId":"Nicolascwy"},"content":"        return \"\";"},{"lineNumber":626,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":627,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":628,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":629,"author":{"gitId":"-"},"content":"     * Checks if the given string is a non-null string no longer than"},{"lineNumber":630,"author":{"gitId":"-"},"content":"     * the specified length {@code maxLength}. However, this string can be empty."},{"lineNumber":631,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":632,"author":{"gitId":"-"},"content":"     * @param fieldName"},{"lineNumber":633,"author":{"gitId":"-"},"content":"     *            A descriptive name of the field e.g., \"student name\", to be"},{"lineNumber":634,"author":{"gitId":"-"},"content":"     *            used in the return value to make the explanation more"},{"lineNumber":635,"author":{"gitId":"-"},"content":"     *            descriptive."},{"lineNumber":636,"author":{"gitId":"-"},"content":"     * @param value"},{"lineNumber":637,"author":{"gitId":"-"},"content":"     *            The string to be checked."},{"lineNumber":638,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code value} is not acceptable."},{"lineNumber":639,"author":{"gitId":"-"},"content":"     *         Returns an empty string \"\" if the {@code value} is acceptable."},{"lineNumber":640,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":641,"author":{"gitId":"-"},"content":"    static String getValidityInfoForSizeCappedPossiblyEmptyString(String fieldName, int maxLength, String value) {"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        assert value !\u003d null : \"Non-null value expected for \" + fieldName;"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"        if (isUntrimmed(value)) {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\", fieldName);"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        if (value.length() \u003e maxLength) {"},{"lineNumber":648,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(SIZE_CAPPED_POSSIBLY_EMPTY_STRING_ERROR_MESSAGE, value,"},{"lineNumber":649,"author":{"gitId":"-"},"content":"                                            fieldName, REASON_TOO_LONG, maxLength);"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":651,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":653,"author":{"gitId":"-"},"content":""},{"lineNumber":654,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":655,"author":{"gitId":"-"},"content":"     * Checks if Session Start Time is before Session End Time."},{"lineNumber":656,"author":{"gitId":"-"},"content":"     * @return Error string if {@code sessionStart} is before {@code sessionEnd}"},{"lineNumber":657,"author":{"gitId":"-"},"content":"     *         Empty string if {@code sessionStart} is after {@code sessionEnd}"},{"lineNumber":658,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTimeForSessionStartAndEnd(Instant sessionStart, Instant sessionEnd) {"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        return getInvalidityInfoForFirstTimeIsBeforeSecondTime("},{"lineNumber":661,"author":{"gitId":"-"},"content":"                sessionStart, sessionEnd, SESSION_START_TIME_FIELD_NAME, SESSION_END_TIME_FIELD_NAME);"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":663,"author":{"gitId":"-"},"content":""},{"lineNumber":664,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":665,"author":{"gitId":"-"},"content":"     * Checks if Session Visibility Start Time is before Session Start Time."},{"lineNumber":666,"author":{"gitId":"-"},"content":"     * @return Error string if {@code visibilityStart} is before {@code sessionStart}"},{"lineNumber":667,"author":{"gitId":"-"},"content":"     *         Empty string if {@code visibilityStart} is after {@code sessionStart}"},{"lineNumber":668,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTimeForVisibilityStartAndSessionStart("},{"lineNumber":670,"author":{"gitId":"-"},"content":"            Instant visibilityStart, Instant sessionStart) {"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        return getInvalidityInfoForFirstTimeIsBeforeSecondTime("},{"lineNumber":672,"author":{"gitId":"-"},"content":"                visibilityStart, sessionStart, SESSION_VISIBLE_TIME_FIELD_NAME, SESSION_START_TIME_FIELD_NAME);"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":676,"author":{"gitId":"-"},"content":"     * Checks if Visibility Start Time is before Results Publish Time."},{"lineNumber":677,"author":{"gitId":"-"},"content":"     * @return Error string if {@code visibilityStart} is before {@code resultsPublish}"},{"lineNumber":678,"author":{"gitId":"-"},"content":"     *         Empty string if {@code visibilityStart} is after {@code resultsPublish}"},{"lineNumber":679,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":680,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTimeForVisibilityStartAndResultsPublish("},{"lineNumber":681,"author":{"gitId":"-"},"content":"            Instant visibilityStart, Instant resultsPublish) {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"        return getInvalidityInfoForFirstTimeIsBeforeSecondTime(visibilityStart, resultsPublish,"},{"lineNumber":683,"author":{"gitId":"-"},"content":"                SESSION_VISIBLE_TIME_FIELD_NAME, RESULTS_VISIBLE_TIME_FIELD_NAME);"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":685,"author":{"gitId":"-"},"content":""},{"lineNumber":686,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":687,"author":{"gitId":"Nicolascwy"},"content":"     * Checks if Notification Start Time is before Notification End Time."},{"lineNumber":688,"author":{"gitId":"Nicolascwy"},"content":"     * @return Error string if {@code notificationStart} is before {@code notificationEnd}"},{"lineNumber":689,"author":{"gitId":"Nicolascwy"},"content":"     *         Empty string if {@code notificationStart} is after {@code notificationEnd}"},{"lineNumber":690,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":691,"author":{"gitId":"Nicolascwy"},"content":"    public static String getInvalidityInfoForTimeForNotificationStartAndEnd("},{"lineNumber":692,"author":{"gitId":"Nicolascwy"},"content":"            Instant notificationStart, Instant notificationExpiry) {"},{"lineNumber":693,"author":{"gitId":"Nicolascwy"},"content":"        return getInvalidityInfoForFirstTimeIsBeforeSecondTime(notificationStart, notificationExpiry,"},{"lineNumber":694,"author":{"gitId":"Nicolascwy"},"content":"            NOTIFICATION_VISIBLE_TIME_FIELD_NAME, NOTIFICATION_EXPIRY_TIME_FIELD_NAME);"},{"lineNumber":695,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":696,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":697,"author":{"gitId":"-"},"content":"    private static String getInvalidityInfoForFirstTimeIsBeforeSecondTime("},{"lineNumber":698,"author":{"gitId":"-"},"content":"            Instant earlierTime, Instant laterTime, String earlierTimeFieldName, String laterTimeFieldName) {"},{"lineNumber":699,"author":{"gitId":"-"},"content":"        assert earlierTime !\u003d null;"},{"lineNumber":700,"author":{"gitId":"-"},"content":"        assert laterTime !\u003d null;"},{"lineNumber":701,"author":{"gitId":"-"},"content":"        if (TimeHelper.isSpecialTime(earlierTime) || TimeHelper.isSpecialTime(laterTime)) {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"            return \"\";"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        if (laterTime.isBefore(earlierTime)) {"},{"lineNumber":705,"author":{"gitId":"-"},"content":"            return String.format(TIME_FRAME_ERROR_MESSAGE, laterTimeFieldName, earlierTimeFieldName);"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":708,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":711,"author":{"gitId":"-"},"content":"     * Checks if both the giver type and recipient type for the feedback question is valid."},{"lineNumber":712,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":713,"author":{"gitId":"-"},"content":"     * @param giverType feedback question giver type to be checked."},{"lineNumber":714,"author":{"gitId":"-"},"content":"     * @param recipientType feedback question recipient type to be checked."},{"lineNumber":715,"author":{"gitId":"-"},"content":"     * @return Error string if either type is invalid, otherwise empty string."},{"lineNumber":716,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e getValidityInfoForFeedbackParticipantType("},{"lineNumber":718,"author":{"gitId":"-"},"content":"            FeedbackParticipantType giverType, FeedbackParticipantType recipientType) {"},{"lineNumber":719,"author":{"gitId":"-"},"content":""},{"lineNumber":720,"author":{"gitId":"-"},"content":"        assert giverType !\u003d null;"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        assert recipientType !\u003d null;"},{"lineNumber":722,"author":{"gitId":"-"},"content":""},{"lineNumber":723,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new LinkedList\u003c\u003e();"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        if (!giverType.isValidGiver()) {"},{"lineNumber":725,"author":{"gitId":"-"},"content":"            errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE, giverType.toString(), GIVER_TYPE_NAME));"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        if (!recipientType.isValidRecipient()) {"},{"lineNumber":728,"author":{"gitId":"-"},"content":"            errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE, recipientType.toString(), RECIPIENT_TYPE_NAME));"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":730,"author":{"gitId":"-"},"content":"        if (giverType \u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":731,"author":{"gitId":"-"},"content":"                \u0026\u0026 (recipientType \u003d\u003d FeedbackParticipantType.OWN_TEAM"},{"lineNumber":732,"author":{"gitId":"-"},"content":"                        || recipientType \u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS)) {"},{"lineNumber":733,"author":{"gitId":"-"},"content":"            String displayRecipientName \u003d recipientType \u003d\u003d FeedbackParticipantType.OWN_TEAM"},{"lineNumber":734,"author":{"gitId":"-"},"content":"                    ? \"Giver\u0027s team\" : \"Giver\u0027s team members\";"},{"lineNumber":735,"author":{"gitId":"-"},"content":"            errors.add(String.format(PARTICIPANT_TYPE_TEAM_ERROR_MESSAGE,"},{"lineNumber":736,"author":{"gitId":"-"},"content":"                    displayRecipientName,"},{"lineNumber":737,"author":{"gitId":"-"},"content":"                    \"Teams in this course\"));"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":741,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":742,"author":{"gitId":"-"},"content":""},{"lineNumber":743,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":744,"author":{"gitId":"-"},"content":"     * Checks if comment giver type is either instructor, student or team."},{"lineNumber":745,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":746,"author":{"gitId":"-"},"content":"     * @param commentGiverType comment giver type to be checked."},{"lineNumber":747,"author":{"gitId":"-"},"content":"     * @return Error string if type is invalid, otherwise empty string."},{"lineNumber":748,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":749,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForCommentGiverType(FeedbackParticipantType commentGiverType) {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        assert commentGiverType !\u003d null;"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        if (!commentGiverType.equals(FeedbackParticipantType.STUDENTS)"},{"lineNumber":752,"author":{"gitId":"-"},"content":"                   \u0026\u0026 !commentGiverType.equals(FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":753,"author":{"gitId":"-"},"content":"                   \u0026\u0026 !commentGiverType.equals(FeedbackParticipantType.TEAMS)) {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"            return \"Invalid comment giver type: \" + commentGiverType;"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":758,"author":{"gitId":"-"},"content":""},{"lineNumber":759,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":760,"author":{"gitId":"-"},"content":"     * Checks if visibility of comment is following question when comment is from a feedback participant."},{"lineNumber":761,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":762,"author":{"gitId":"-"},"content":"     * @param isCommentFromFeedbackParticipant true if comment is from feedback participant."},{"lineNumber":763,"author":{"gitId":"-"},"content":"     * @param isVisibilityFollowingFeedbackQuestion true if visibility of comment follows question."},{"lineNumber":764,"author":{"gitId":"-"},"content":"     * @return Error string if condition is not met, otherwise empty string."},{"lineNumber":765,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForVisibilityOfFeedbackParticipantComments("},{"lineNumber":767,"author":{"gitId":"-"},"content":"            boolean isCommentFromFeedbackParticipant,"},{"lineNumber":768,"author":{"gitId":"-"},"content":"            boolean isVisibilityFollowingFeedbackQuestion) {"},{"lineNumber":769,"author":{"gitId":"-"},"content":"        if (isCommentFromFeedbackParticipant \u0026\u0026 !isVisibilityFollowingFeedbackQuestion) {"},{"lineNumber":770,"author":{"gitId":"-"},"content":"            return \"Comment by feedback participant not following visibility setting of the question.\";"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":773,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":774,"author":{"gitId":"-"},"content":""},{"lineNumber":775,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":776,"author":{"gitId":"-"},"content":"     * Checks if all the given participant types are valid for the purpose of"},{"lineNumber":777,"author":{"gitId":"-"},"content":"     * showing different fields of a feedback response."},{"lineNumber":778,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":779,"author":{"gitId":"-"},"content":"     * @param showResponsesTo the list of participant types to whom responses can be shown"},{"lineNumber":780,"author":{"gitId":"-"},"content":"     * @param showGiverNameTo the list of participant types to whom giver name can be shown"},{"lineNumber":781,"author":{"gitId":"-"},"content":"     * @param showRecipientNameTo the list of participant types to whom recipient name can be shown"},{"lineNumber":782,"author":{"gitId":"-"},"content":"     * @return Error string if any type in any list is invalid, otherwise empty string."},{"lineNumber":783,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":784,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e getValidityInfoForFeedbackResponseVisibility("},{"lineNumber":785,"author":{"gitId":"-"},"content":"            List\u003cFeedbackParticipantType\u003e showResponsesTo,"},{"lineNumber":786,"author":{"gitId":"-"},"content":"            List\u003cFeedbackParticipantType\u003e showGiverNameTo,"},{"lineNumber":787,"author":{"gitId":"-"},"content":"            List\u003cFeedbackParticipantType\u003e showRecipientNameTo) {"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"-"},"content":"        assert showResponsesTo !\u003d null;"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        assert showGiverNameTo !\u003d null;"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        assert showRecipientNameTo !\u003d null;"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        assert !showResponsesTo.contains(null);"},{"lineNumber":793,"author":{"gitId":"-"},"content":"        assert !showGiverNameTo.contains(null);"},{"lineNumber":794,"author":{"gitId":"-"},"content":"        assert !showRecipientNameTo.contains(null);"},{"lineNumber":795,"author":{"gitId":"-"},"content":""},{"lineNumber":796,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new LinkedList\u003c\u003e();"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType type : showGiverNameTo) {"},{"lineNumber":799,"author":{"gitId":"-"},"content":"            if (!type.isValidViewer()) {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"                errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE,"},{"lineNumber":801,"author":{"gitId":"-"},"content":"                        type.toString(), VIEWER_TYPE_NAME));"},{"lineNumber":802,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":803,"author":{"gitId":"-"},"content":"            if (!showResponsesTo.contains(type)) {"},{"lineNumber":804,"author":{"gitId":"-"},"content":"                errors.add(\"Trying to show giver name to \""},{"lineNumber":805,"author":{"gitId":"-"},"content":"                        + type.toString()"},{"lineNumber":806,"author":{"gitId":"-"},"content":"                        + \" without showing response first.\");"},{"lineNumber":807,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":808,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType type : showRecipientNameTo) {"},{"lineNumber":811,"author":{"gitId":"-"},"content":"            if (!type.isValidViewer()) {"},{"lineNumber":812,"author":{"gitId":"-"},"content":"                errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE,"},{"lineNumber":813,"author":{"gitId":"-"},"content":"                        type.toString(), VIEWER_TYPE_NAME));"},{"lineNumber":814,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":815,"author":{"gitId":"-"},"content":"            if (!showResponsesTo.contains(type)) {"},{"lineNumber":816,"author":{"gitId":"-"},"content":"                errors.add(\"Trying to show recipient name to \""},{"lineNumber":817,"author":{"gitId":"-"},"content":"                        + type.toString()"},{"lineNumber":818,"author":{"gitId":"-"},"content":"                        + \" without showing response first.\");"},{"lineNumber":819,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":821,"author":{"gitId":"-"},"content":""},{"lineNumber":822,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType type : showResponsesTo) {"},{"lineNumber":823,"author":{"gitId":"-"},"content":"            if (!type.isValidViewer()) {"},{"lineNumber":824,"author":{"gitId":"-"},"content":"                errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE,"},{"lineNumber":825,"author":{"gitId":"-"},"content":"                        type.toString(), VIEWER_TYPE_NAME));"},{"lineNumber":826,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":827,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":828,"author":{"gitId":"-"},"content":""},{"lineNumber":829,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":831,"author":{"gitId":"-"},"content":""},{"lineNumber":832,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":833,"author":{"gitId":"-"},"content":"     * Checks if the given {@code value} has no HTML code."},{"lineNumber":834,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    static String getValidityInfoForNonHtmlField(String fieldName, String value) {"},{"lineNumber":836,"author":{"gitId":"-"},"content":"        String sanitizedValue \u003d SanitizationHelper.sanitizeForHtml(value);"},{"lineNumber":837,"author":{"gitId":"-"},"content":"        //Fails if sanitized value is not same as value"},{"lineNumber":838,"author":{"gitId":"-"},"content":"        return value.equals(sanitizedValue) ? \"\" : NON_HTML_FIELD_ERROR_MESSAGE.replace(\"${fieldName}\", fieldName);"},{"lineNumber":839,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":840,"author":{"gitId":"-"},"content":""},{"lineNumber":841,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":842,"author":{"gitId":"-"},"content":"     * Checks if the given {@code value} is not null."},{"lineNumber":843,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":844,"author":{"gitId":"-"},"content":"    public static String getValidityInfoForNonNullField(String fieldName, Object value) {"},{"lineNumber":845,"author":{"gitId":"-"},"content":"        return value \u003d\u003d null ? NON_NULL_FIELD_ERROR_MESSAGE.replace(\"${fieldName}\", fieldName) : \"\";"},{"lineNumber":846,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":847,"author":{"gitId":"-"},"content":""},{"lineNumber":848,"author":{"gitId":"-"},"content":"    private static boolean isUntrimmed(String value) {"},{"lineNumber":849,"author":{"gitId":"-"},"content":"        return value.length() !\u003d value.trim().length();"},{"lineNumber":850,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":851,"author":{"gitId":"-"},"content":""},{"lineNumber":852,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":853,"author":{"gitId":"-"},"content":"     * Checks whether a given text input represents a format of a valid email address."},{"lineNumber":854,"author":{"gitId":"-"},"content":"     * @param email text input which needs the validation"},{"lineNumber":855,"author":{"gitId":"-"},"content":"     * @return true if it is a valid email address, else false."},{"lineNumber":856,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":857,"author":{"gitId":"-"},"content":"    private static boolean isValidEmailAddress(String email) {"},{"lineNumber":858,"author":{"gitId":"-"},"content":"        return StringHelper.isMatching(email, REGEX_EMAIL);"},{"lineNumber":859,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":860,"author":{"gitId":"-"},"content":""},{"lineNumber":861,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":862,"author":{"gitId":"-"},"content":"     * Checks whether all the elements in a Collection are unique."},{"lineNumber":863,"author":{"gitId":"-"},"content":"     * @param elements The Collection of elements to be checked."},{"lineNumber":864,"author":{"gitId":"-"},"content":"     * @return true if all elements are unique, else false."},{"lineNumber":865,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":866,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e boolean areElementsUnique(Collection\u003cT\u003e elements) {"},{"lineNumber":867,"author":{"gitId":"-"},"content":"        Set\u003cT\u003e uniqueElements \u003d new HashSet\u003c\u003e(elements);"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        return uniqueElements.size() \u003d\u003d elements.size();"},{"lineNumber":869,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":870,"author":{"gitId":"-"},"content":""},{"lineNumber":871,"author":{"gitId":"-"},"content":"    private static String getPopulatedErrorMessage("},{"lineNumber":872,"author":{"gitId":"-"},"content":"            String messageTemplate, String userInput, String fieldName, String errorReason, int maxLength) {"},{"lineNumber":873,"author":{"gitId":"-"},"content":"        return getPopulatedErrorMessage(messageTemplate, userInput, fieldName, errorReason)"},{"lineNumber":874,"author":{"gitId":"-"},"content":"                   .replace(\"${maxLength}\", String.valueOf(maxLength));"},{"lineNumber":875,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":876,"author":{"gitId":"-"},"content":""},{"lineNumber":877,"author":{"gitId":"-"},"content":"    private static String getPopulatedErrorMessage("},{"lineNumber":878,"author":{"gitId":"-"},"content":"            String messageTemplate, String userInput, String fieldName, String errorReason) {"},{"lineNumber":879,"author":{"gitId":"-"},"content":"        return messageTemplate.replace(\"${userInput}\", userInput)"},{"lineNumber":880,"author":{"gitId":"-"},"content":"                              .replace(\"${fieldName}\", fieldName)"},{"lineNumber":881,"author":{"gitId":"-"},"content":"                              .replace(\"${reason}\", errorReason);"},{"lineNumber":882,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":883,"author":{"gitId":"-"},"content":""},{"lineNumber":884,"author":{"gitId":"-"},"content":"    private static String getPopulatedEmptyStringErrorMessage(String messageTemplate,"},{"lineNumber":885,"author":{"gitId":"-"},"content":"            String fieldName, int maxLength) {"},{"lineNumber":886,"author":{"gitId":"-"},"content":"        return messageTemplate.replace(\"${fieldName}\", fieldName)"},{"lineNumber":887,"author":{"gitId":"-"},"content":"                              .replace(\"${maxLength}\", String.valueOf(maxLength));"},{"lineNumber":888,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":889,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":19,"-":773,"Nicolascwy":97}},{"path":"src/main/java/teammates/logic/api/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.annotation.Nullable;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.SessionResultsBundle;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.exception.EnrollException;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.exception.InstructorUpdateException;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.logic.core.AccountRequestsLogic;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.logic.core.AccountsLogic;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.logic.core.CoursesLogic;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.logic.core.DataBundleLogic;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackQuestionsLogic;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackResponseCommentsLogic;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackResponsesLogic;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackSessionsLogic;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import teammates.logic.core.InstructorsLogic;"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"import teammates.logic.core.NotificationsLogic;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import teammates.logic.core.ProfilesLogic;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import teammates.logic.core.StudentsLogic;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Provides the business logic for production usage of the system."},{"lineNumber":45,"author":{"gitId":"-"},"content":" *"},{"lineNumber":46,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis is a Facade class which simply forwards the method to internal classes."},{"lineNumber":47,"author":{"gitId":"-"},"content":" */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class Logic {"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Logic instance \u003d new Logic();"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    final AccountRequestsLogic accountRequestsLogic \u003d AccountRequestsLogic.inst();"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"    final NotificationsLogic notificationsLogic \u003d NotificationsLogic.inst();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    final FeedbackSessionsLogic feedbackSessionsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    final FeedbackQuestionsLogic feedbackQuestionsLogic \u003d FeedbackQuestionsLogic.inst();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    final FeedbackResponsesLogic feedbackResponsesLogic \u003d FeedbackResponsesLogic.inst();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    final FeedbackResponseCommentsLogic feedbackResponseCommentsLogic \u003d FeedbackResponseCommentsLogic.inst();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    final DataBundleLogic dataBundleLogic \u003d DataBundleLogic.inst();"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    Logic() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Logic inst() {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public AccountAttributes getAccount(String googleId) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return accountsLogic.getAccount(googleId);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String getCourseInstitute(String courseId) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return coursesLogic.getCourseInstitute(courseId);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getActiveNotificationsByTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"        return notificationsLogic.getActiveNotificationsByTargetUser(targetUser);"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getAllNotifications() {"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"        return notificationsLogic.getAllNotifications();"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":95,"author":{"gitId":"Nicolascwy"},"content":"    public NotificationAttributes createNotification(NotificationAttributes notification) throws"},{"lineNumber":96,"author":{"gitId":"Nicolascwy"},"content":"            InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":97,"author":{"gitId":"Nicolascwy"},"content":"        return notificationsLogic.createNotification(notification);"},{"lineNumber":98,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Updates/Creates the profile using {@link StudentProfileAttributes.UpdateOptions}."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @return updated student profile"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes updateOrCreateStudentProfile(StudentProfileAttributes.UpdateOptions updateOptions)"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return profilesLogic.updateOrCreateStudentProfile(updateOptions);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Deletes both instructor and student privileges, as long as the account and associated student profile."},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * \u003cul\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * \u003cli\u003eFails silently if no such account.\u003c/li\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void deleteAccountCascade(String googleId) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(googleId);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Creates an instructor."},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @return the created instructor"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the instructor is not valid"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the instructor already exists in the database"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public InstructorAttributes createInstructor(InstructorAttributes instructor)"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assert instructor !\u003d null;"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return instructorsLogic.createInstructor(instructor);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * This method should be used by admin only since the searching does not restrict the"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * search instructors in the whole system."},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e searchInstructorsInWholeSystem(String queryString)"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return instructorsLogic.searchInstructorsInWholeSystem(queryString);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given instructor."},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @see InstructorsLogic#putDocument(InstructorAttributes)"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void putInstructorDocument(InstructorAttributes instructor) throws SearchServiceException {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        instructorsLogic.putDocument(instructor);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Update instructor being edited to ensure validity of instructors for the course."},{"lineNumber":175,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @see InstructorsLogic#updateToEnsureValidityOfInstructorsForTheCourse(String, InstructorAttributes)"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void updateToEnsureValidityOfInstructorsForTheCourse(String courseId, InstructorAttributes instructorToEdit) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assert instructorToEdit !\u003d null;"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        instructorsLogic.updateToEnsureValidityOfInstructorsForTheCourse(courseId, instructorToEdit);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForEmail(String courseId, String email) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForEmail(courseId, email);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorById(String courseId, String email) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorById(courseId, email);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForGoogleId(String courseId, String googleId) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForGoogleId(courseId, googleId);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForRegistrationKey(String registrationKey) {"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForRegistrationKey(registrationKey);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForGoogleId(googleId);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId, boolean omitArchived) {"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":260,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForCourse(String courseId) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForCourse(courseId);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getAllOngoingSessions(Instant rangeStart, Instant rangeEnd) {"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getAllOngoingSessions(rangeStart, rangeEnd);"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithGoogleId}."},{"lineNumber":275,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade update the comments and responses given by the instructor."},{"lineNumber":277,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":280,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * @return updated instructor"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor cannot be found"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public InstructorAttributes updateInstructorCascade(InstructorAttributes.UpdateOptionsWithGoogleId updateOptions)"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            throws InstructorUpdateException, InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"        return instructorsLogic.updateInstructorByGoogleIdCascade(updateOptions);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithEmail}."},{"lineNumber":294,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":297,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":298,"author":{"gitId":"-"},"content":"     * @return updated instructor"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor cannot be found"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    public InstructorAttributes updateInstructor(InstructorAttributes.UpdateOptionsWithEmail updateOptions)"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            throws InstructorUpdateException, InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"        return instructorsLogic.updateInstructorByEmail(updateOptions);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":310,"author":{"gitId":"-"},"content":"     * Make the instructor join the course, i.e. associate the Google ID to the instructor.\u003cbr\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * Creates an account for the instructor if there is no existing account for him."},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"     * * Parameters regkey and googleId are non-null."},{"lineNumber":314,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    public InstructorAttributes joinCourseForInstructor(String regkey, String googleId)"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        assert regkey !\u003d null;"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        return accountsLogic.joinCourseForInstructor(regkey, googleId);"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     * Downgrades an instructor account to student account."},{"lineNumber":326,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade deletes all instructors associated with the account."},{"lineNumber":328,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":329,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":330,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":331,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public void downgradeInstructorToStudentCascade(String googleId) throws EntityDoesNotExistException {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"        accountsLogic.downgradeInstructorToStudentCascade(googleId);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * Deletes an instructor cascade its associated feedback responses and comments."},{"lineNumber":340,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if the student does not exist."},{"lineNumber":342,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":343,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":344,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":345,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    public void deleteInstructorCascade(String courseId, String email) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"        instructorsLogic.deleteInstructorCascade(courseId, email);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * Creates a course and an associated instructor for the course."},{"lineNumber":356,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * * All parameters are non-null. \u003cbr/\u003e"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * * {@code instructorGoogleId} already has an account and instructor privileges."},{"lineNumber":360,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    public void createCourseAndInstructor(String instructorGoogleId, CourseAttributes courseAttributes)"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        assert instructorGoogleId !\u003d null;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        assert courseAttributes !\u003d null;"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"        coursesLogic.createCourseAndInstructor(instructorGoogleId, courseAttributes);"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":370,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":371,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":372,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":373,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    public CourseAttributes getCourse(String courseId) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"        return coursesLogic.getCourse(courseId);"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":382,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":383,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":384,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getCoursesForStudentAccount(String googleId) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        return coursesLogic.getCoursesForStudentAccount(googleId);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":391,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":392,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":393,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":394,"author":{"gitId":"-"},"content":"     * @return Courses the given instructors is in except for courses in Recycle Bin."},{"lineNumber":395,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getCoursesForInstructor(List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        return coursesLogic.getCoursesForInstructor(instructorList);"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":403,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":404,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":405,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":406,"author":{"gitId":"-"},"content":"     * @return Courses in Recycle Bin that the given instructors is in."},{"lineNumber":407,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getSoftDeletedCoursesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        return coursesLogic.getSoftDeletedCoursesForInstructors(instructorList);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":415,"author":{"gitId":"-"},"content":"     * Updates a course by {@link CourseAttributes.UpdateOptions}."},{"lineNumber":416,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":417,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf the {@code timezone} of the course is changed, cascade the change to its corresponding feedback sessions."},{"lineNumber":418,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":419,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":420,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":421,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":422,"author":{"gitId":"-"},"content":"     * @return updated course"},{"lineNumber":423,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":424,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the course cannot be found"},{"lineNumber":425,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    public CourseAttributes updateCourseCascade(CourseAttributes.UpdateOptions updateOptions)"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"        return coursesLogic.updateCourseCascade(updateOptions);"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":434,"author":{"gitId":"-"},"content":"     * Changes the archive status of a course for an instructor."},{"lineNumber":435,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":436,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":437,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":438,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":439,"author":{"gitId":"-"},"content":"     * @param courseId The course of which the archive status is to be changed"},{"lineNumber":440,"author":{"gitId":"-"},"content":"     * @param archiveStatus The archive status to be set"},{"lineNumber":441,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"    public void setArchiveStatusOfInstructor(String googleId, String courseId, boolean archiveStatus)"},{"lineNumber":444,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"        instructorsLogic.setArchiveStatusOfInstructor(googleId, courseId, archiveStatus);"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":453,"author":{"gitId":"-"},"content":"     * Deletes a course cascade its students, instructors, sessions, responses and comments."},{"lineNumber":454,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":455,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if no such course."},{"lineNumber":456,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":457,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":458,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":459,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    public void deleteCourseCascade(String courseId) {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        coursesLogic.deleteCourseCascade(courseId);"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":464,"author":{"gitId":"-"},"content":""},{"lineNumber":465,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":466,"author":{"gitId":"-"},"content":"     * Moves a course to Recycle Bin by its given corresponding ID."},{"lineNumber":467,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":468,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":469,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":470,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":471,"author":{"gitId":"-"},"content":"     * @return the deletion timestamp assigned to the course."},{"lineNumber":472,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    public Instant moveCourseToRecycleBin(String courseId) throws EntityDoesNotExistException {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        return coursesLogic.moveCourseToRecycleBin(courseId);"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":479,"author":{"gitId":"-"},"content":"     * Restores a course and all data related to the course from Recycle Bin by"},{"lineNumber":480,"author":{"gitId":"-"},"content":"     * its given corresponding ID."},{"lineNumber":481,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":482,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":483,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":484,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    public void restoreCourseFromRecycleBin(String courseId)"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"        coursesLogic.restoreCourseFromRecycleBin(courseId);"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":491,"author":{"gitId":"-"},"content":""},{"lineNumber":492,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":493,"author":{"gitId":"-"},"content":"     * Search for students. Preconditions: all parameters are non-null."},{"lineNumber":494,"author":{"gitId":"-"},"content":"     * @param instructors   a list of InstructorAttributes associated to a googleId,"},{"lineNumber":495,"author":{"gitId":"-"},"content":"     *                      used for filtering of search result"},{"lineNumber":496,"author":{"gitId":"-"},"content":"     * @return Null if no match found"},{"lineNumber":497,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e searchStudents(String queryString, List\u003cInstructorAttributes\u003e instructors)"},{"lineNumber":499,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        assert instructors !\u003d null;"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        return studentsLogic.searchStudents(queryString, instructors);"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":506,"author":{"gitId":"-"},"content":"     * This method should be used by admin only since the searching does not restrict the"},{"lineNumber":507,"author":{"gitId":"-"},"content":"     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"},{"lineNumber":508,"author":{"gitId":"-"},"content":"     * search students in the whole system."},{"lineNumber":509,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":510,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e searchStudentsInWholeSystem(String queryString)"},{"lineNumber":512,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"        return studentsLogic.searchStudentsInWholeSystem(queryString);"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":519,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":520,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":521,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":522,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":523,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForRegistrationKey(String registrationKey) {"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForRegistrationKey(registrationKey);"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":530,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":531,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":532,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":533,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":534,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForEmail(String courseId, String email) {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForEmail(courseId, email);"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":543,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":544,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":545,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":546,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":547,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForGoogleId(String courseId, String googleId) {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":551,"author":{"gitId":"-"},"content":""},{"lineNumber":552,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForCourseIdAndGoogleId(courseId, googleId);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":556,"author":{"gitId":"-"},"content":"     * Gets student profile associated with the {@code googleId}."},{"lineNumber":557,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":558,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":559,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":560,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":561,"author":{"gitId":"-"},"content":"     * @return null if no match found."},{"lineNumber":562,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes getStudentProfile(String googleId) {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        return profilesLogic.getStudentProfile(googleId);"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":567,"author":{"gitId":"-"},"content":""},{"lineNumber":568,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":569,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":570,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":571,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":572,"author":{"gitId":"-"},"content":"     * @return Empty list if no match found."},{"lineNumber":573,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":574,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForGoogleId(String googleId) {"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForGoogleId(googleId);"},{"lineNumber":577,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":578,"author":{"gitId":"-"},"content":""},{"lineNumber":579,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":580,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":581,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":582,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":583,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForCourse(String courseId) {"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForCourse(courseId);"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":590,"author":{"gitId":"-"},"content":"     * Returns a list of section names for the course with ID courseId."},{"lineNumber":591,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":592,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":593,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":594,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":595,"author":{"gitId":"-"},"content":"     * @see CoursesLogic#getSectionsNameForCourse(String)"},{"lineNumber":596,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getSectionNamesForCourse(String courseId) throws EntityDoesNotExistException {"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        return coursesLogic.getSectionsNameForCourse(courseId);"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":601,"author":{"gitId":"-"},"content":""},{"lineNumber":602,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":603,"author":{"gitId":"-"},"content":"     * Populates fields that need dynamic generation in a question."},{"lineNumber":604,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":605,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCurrently, only MCQ/MSQ needs to generate choices dynamically.\u003c/p\u003e"},{"lineNumber":606,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":607,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":608,"author":{"gitId":"-"},"content":"     * * All parameters except \u003ccode\u003eteamOfEntityDoingQuestion\u003c/code\u003e are non-null."},{"lineNumber":609,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":610,"author":{"gitId":"-"},"content":"     * @param feedbackQuestionAttributes the question to populate"},{"lineNumber":611,"author":{"gitId":"-"},"content":"     * @param emailOfEntityDoingQuestion the email of the entity doing the question"},{"lineNumber":612,"author":{"gitId":"-"},"content":"     * @param teamOfEntityDoingQuestion the team of the entity doing the question. If the entity is an instructor,"},{"lineNumber":613,"author":{"gitId":"-"},"content":"     *                                  it can be {@code null}."},{"lineNumber":614,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    public void populateFieldsToGenerateInQuestion(FeedbackQuestionAttributes feedbackQuestionAttributes,"},{"lineNumber":616,"author":{"gitId":"-"},"content":"            String emailOfEntityDoingQuestion, String teamOfEntityDoingQuestion) {"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        assert feedbackQuestionAttributes !\u003d null;"},{"lineNumber":618,"author":{"gitId":"-"},"content":"        assert emailOfEntityDoingQuestion !\u003d null;"},{"lineNumber":619,"author":{"gitId":"-"},"content":""},{"lineNumber":620,"author":{"gitId":"-"},"content":"        feedbackQuestionsLogic.populateFieldsToGenerateInQuestion("},{"lineNumber":621,"author":{"gitId":"-"},"content":"                feedbackQuestionAttributes, emailOfEntityDoingQuestion, teamOfEntityDoingQuestion);"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":623,"author":{"gitId":"-"},"content":""},{"lineNumber":624,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":625,"author":{"gitId":"-"},"content":"     * Resets the googleId associated with the student."},{"lineNumber":626,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":627,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":628,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":629,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    public void resetStudentGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        assert originalEmail !\u003d null;"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"        studentsLogic.resetStudentGoogleId(originalEmail, courseId);"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":638,"author":{"gitId":"-"},"content":"     * Regenerates the registration key for the instructor with email address {@code email} in course {@code courseId}."},{"lineNumber":639,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":640,"author":{"gitId":"-"},"content":"     * @return the instructor attributes with the new registration key."},{"lineNumber":641,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the newly generated instructor has the same registration key as the"},{"lineNumber":642,"author":{"gitId":"-"},"content":"     *          original one."},{"lineNumber":643,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor does not exist."},{"lineNumber":644,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    public InstructorAttributes regenerateInstructorRegistrationKey(String courseId, String email)"},{"lineNumber":646,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":647,"author":{"gitId":"-"},"content":""},{"lineNumber":648,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"        return instructorsLogic.regenerateInstructorRegistrationKey(courseId, email);"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":653,"author":{"gitId":"-"},"content":""},{"lineNumber":654,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":655,"author":{"gitId":"-"},"content":"     * Regenerates the registration key for the student with email address {@code email} in course {@code courseId}."},{"lineNumber":656,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":657,"author":{"gitId":"-"},"content":"     * @return the student attributes with the new registration key."},{"lineNumber":658,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the newly generated course student has the same registration key as the"},{"lineNumber":659,"author":{"gitId":"-"},"content":"     *          original one."},{"lineNumber":660,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the student does not exist."},{"lineNumber":661,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    public StudentAttributes regenerateStudentRegistrationKey(String courseId, String email)"},{"lineNumber":663,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":664,"author":{"gitId":"-"},"content":""},{"lineNumber":665,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":667,"author":{"gitId":"-"},"content":""},{"lineNumber":668,"author":{"gitId":"-"},"content":"        return studentsLogic.regenerateStudentRegistrationKey(courseId, email);"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":672,"author":{"gitId":"-"},"content":"     * Resets the associated googleId of an instructor."},{"lineNumber":673,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    public void resetInstructorGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        assert originalEmail !\u003d null;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":677,"author":{"gitId":"-"},"content":""},{"lineNumber":678,"author":{"gitId":"-"},"content":"        instructorsLogic.resetInstructorGoogleId(originalEmail, courseId);"},{"lineNumber":679,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":680,"author":{"gitId":"-"},"content":""},{"lineNumber":681,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":682,"author":{"gitId":"-"},"content":"     * Creates a student."},{"lineNumber":683,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":684,"author":{"gitId":"-"},"content":"     * @return the created student."},{"lineNumber":685,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the student is not valid."},{"lineNumber":686,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the student already exists in the database."},{"lineNumber":687,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    public StudentAttributes createStudent(StudentAttributes student)"},{"lineNumber":689,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":690,"author":{"gitId":"-"},"content":"        assert student.getCourse() !\u003d null;"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        assert student.getEmail() !\u003d null;"},{"lineNumber":692,"author":{"gitId":"-"},"content":""},{"lineNumber":693,"author":{"gitId":"-"},"content":"        return studentsLogic.createStudent(student);"},{"lineNumber":694,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":695,"author":{"gitId":"-"},"content":""},{"lineNumber":696,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":697,"author":{"gitId":"-"},"content":"     * Updates a student by {@link StudentAttributes.UpdateOptions}."},{"lineNumber":698,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":699,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf email changed, update by recreating the student and cascade update all responses the student gives/receives."},{"lineNumber":700,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":701,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf team changed, cascade delete all responses the student gives/receives within that team."},{"lineNumber":702,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":703,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf section changed, cascade update all responses the student gives/receives."},{"lineNumber":704,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":705,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":706,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":707,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":708,"author":{"gitId":"-"},"content":"     * @return updated student"},{"lineNumber":709,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":710,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the student cannot be found"},{"lineNumber":711,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the student cannot be updated"},{"lineNumber":712,"author":{"gitId":"-"},"content":"     *         by recreation because of an existent student"},{"lineNumber":713,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":714,"author":{"gitId":"-"},"content":"    public StudentAttributes updateStudentCascade(StudentAttributes.UpdateOptions updateOptions)"},{"lineNumber":715,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":716,"author":{"gitId":"-"},"content":""},{"lineNumber":717,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"        return studentsLogic.updateStudentCascade(updateOptions);"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":721,"author":{"gitId":"-"},"content":""},{"lineNumber":722,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":723,"author":{"gitId":"-"},"content":"     * Make the student join the course, i.e. associate the Google ID to the student.\u003cbr\u003e"},{"lineNumber":724,"author":{"gitId":"-"},"content":"     * Create an account for the student if there is no account exist for him."},{"lineNumber":725,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":726,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":727,"author":{"gitId":"-"},"content":"     * @param key the registration key"},{"lineNumber":728,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    public StudentAttributes joinCourseForStudent(String key, String googleId)"},{"lineNumber":730,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":731,"author":{"gitId":"-"},"content":""},{"lineNumber":732,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":733,"author":{"gitId":"-"},"content":"        assert key !\u003d null;"},{"lineNumber":734,"author":{"gitId":"-"},"content":""},{"lineNumber":735,"author":{"gitId":"-"},"content":"        return accountsLogic.joinCourseForStudent(key, googleId);"},{"lineNumber":736,"author":{"gitId":"-"},"content":""},{"lineNumber":737,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":738,"author":{"gitId":"-"},"content":""},{"lineNumber":739,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getUnregisteredStudentsForCourse(String courseId) {"},{"lineNumber":740,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":741,"author":{"gitId":"-"},"content":"        return studentsLogic.getUnregisteredStudentsForCourse(courseId);"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":745,"author":{"gitId":"-"},"content":"     * Checks whether an instructor has attempted a feedback session."},{"lineNumber":746,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":747,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf there is no question for instructors, the feedback session is considered as attempted.\u003c/p\u003e"},{"lineNumber":748,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":749,"author":{"gitId":"-"},"content":"    public boolean isFeedbackSessionAttemptedByInstructor(FeedbackSessionAttributes fsa, String userEmail) {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.isFeedbackSessionAttemptedByInstructor(fsa, userEmail);"},{"lineNumber":753,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":754,"author":{"gitId":"-"},"content":""},{"lineNumber":755,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":756,"author":{"gitId":"-"},"content":"     * Checks whether a student has attempted a feedback session."},{"lineNumber":757,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":758,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf there is no question for students, the feedback session is considered as attempted.\u003c/p\u003e"},{"lineNumber":759,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":760,"author":{"gitId":"-"},"content":"    public boolean isFeedbackSessionAttemptedByStudent(FeedbackSessionAttributes fsa, String userEmail, String userTeam) {"},{"lineNumber":761,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":763,"author":{"gitId":"-"},"content":"        assert userTeam !\u003d null;"},{"lineNumber":764,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.isFeedbackSessionAttemptedByStudent(fsa, userEmail, userTeam);"},{"lineNumber":765,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":766,"author":{"gitId":"-"},"content":""},{"lineNumber":767,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":768,"author":{"gitId":"-"},"content":"     * Deletes a student cascade its associated feedback responses and comments."},{"lineNumber":769,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":770,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if the student does not exist."},{"lineNumber":771,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":772,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":773,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":774,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":775,"author":{"gitId":"-"},"content":"    public void deleteStudentCascade(String courseId, String studentEmail) {"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        assert studentEmail !\u003d null;"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"        studentsLogic.deleteStudentCascade(courseId, studentEmail);"},{"lineNumber":780,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":783,"author":{"gitId":"-"},"content":"     * Deletes all the students in the course cascade their associated responses and comments."},{"lineNumber":784,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":785,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":786,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":787,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":788,"author":{"gitId":"-"},"content":"    public void deleteStudentsInCourseCascade(String courseId) {"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":790,"author":{"gitId":"-"},"content":""},{"lineNumber":791,"author":{"gitId":"-"},"content":"        studentsLogic.deleteStudentsInCourseCascade(courseId);"},{"lineNumber":792,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":793,"author":{"gitId":"-"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":795,"author":{"gitId":"-"},"content":"     * Validates sections for any limit violations and teams for any team name violations."},{"lineNumber":796,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":797,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":798,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":799,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":800,"author":{"gitId":"-"},"content":"     * @see StudentsLogic#validateSectionsAndTeams(List, String)"},{"lineNumber":801,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    public void validateSectionsAndTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"},{"lineNumber":803,"author":{"gitId":"-"},"content":""},{"lineNumber":804,"author":{"gitId":"-"},"content":"        assert studentList !\u003d null;"},{"lineNumber":805,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":806,"author":{"gitId":"-"},"content":""},{"lineNumber":807,"author":{"gitId":"-"},"content":"        studentsLogic.validateSectionsAndTeams(studentList, courseId);"},{"lineNumber":808,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":811,"author":{"gitId":"-"},"content":"     * Gets all students of a team."},{"lineNumber":812,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":813,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForTeam(String teamName, String courseId) {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        assert teamName !\u003d null;"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":816,"author":{"gitId":"-"},"content":""},{"lineNumber":817,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForTeam(teamName, courseId);"},{"lineNumber":818,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":819,"author":{"gitId":"-"},"content":""},{"lineNumber":820,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":821,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given student."},{"lineNumber":822,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":823,"author":{"gitId":"-"},"content":"     * @see StudentsLogic#putDocument(StudentAttributes)"},{"lineNumber":824,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":825,"author":{"gitId":"-"},"content":"    public void putStudentDocument(StudentAttributes student) throws SearchServiceException {"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        studentsLogic.putDocument(student);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":828,"author":{"gitId":"-"},"content":""},{"lineNumber":829,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":830,"author":{"gitId":"-"},"content":"     * Creates a feedback session."},{"lineNumber":831,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":832,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":833,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":834,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":835,"author":{"gitId":"-"},"content":"     * @return created feedback session"},{"lineNumber":836,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the session is not valid"},{"lineNumber":837,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the session already exist"},{"lineNumber":838,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":839,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes createFeedbackSession(FeedbackSessionAttributes feedbackSession)"},{"lineNumber":840,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":841,"author":{"gitId":"-"},"content":"        assert feedbackSession !\u003d null;"},{"lineNumber":842,"author":{"gitId":"-"},"content":""},{"lineNumber":843,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.createFeedbackSession(feedbackSession);"},{"lineNumber":844,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":845,"author":{"gitId":"-"},"content":""},{"lineNumber":846,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":847,"author":{"gitId":"-"},"content":"     * Gets a feedback session from the data storage."},{"lineNumber":848,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":849,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":850,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":851,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":852,"author":{"gitId":"-"},"content":"     * @return null if not found or in recycle bin."},{"lineNumber":853,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"},{"lineNumber":855,"author":{"gitId":"-"},"content":""},{"lineNumber":856,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":857,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":860,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":861,"author":{"gitId":"-"},"content":""},{"lineNumber":862,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":863,"author":{"gitId":"-"},"content":"     * Gets a feedback session from the recycle bin."},{"lineNumber":864,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":865,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":866,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":867,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":868,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":869,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":870,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId) {"},{"lineNumber":871,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":872,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":873,"author":{"gitId":"-"},"content":""},{"lineNumber":874,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":875,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":876,"author":{"gitId":"-"},"content":""},{"lineNumber":877,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":878,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":879,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":880,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":881,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse(String courseId) {"},{"lineNumber":882,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":883,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsForCourse(courseId);"},{"lineNumber":884,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":885,"author":{"gitId":"-"},"content":""},{"lineNumber":886,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":887,"author":{"gitId":"-"},"content":"     * Gets the expected number of submissions for a feedback session."},{"lineNumber":888,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":889,"author":{"gitId":"-"},"content":"     * \u003cbr\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":890,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":891,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":892,"author":{"gitId":"-"},"content":"    public int getExpectedTotalSubmission(FeedbackSessionAttributes fsa) {"},{"lineNumber":893,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":894,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getExpectedTotalSubmission(fsa);"},{"lineNumber":895,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":896,"author":{"gitId":"-"},"content":""},{"lineNumber":897,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":898,"author":{"gitId":"-"},"content":"     * Gets the actual number of submissions for a feedback session."},{"lineNumber":899,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":900,"author":{"gitId":"-"},"content":"     * \u003cbr\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":901,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":902,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":903,"author":{"gitId":"-"},"content":"    public int getActualTotalSubmission(FeedbackSessionAttributes fsa) {"},{"lineNumber":904,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":905,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getActualTotalSubmission(fsa);"},{"lineNumber":906,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":907,"author":{"gitId":"-"},"content":""},{"lineNumber":908,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":909,"author":{"gitId":"-"},"content":"     * Gets a list of feedback sessions for instructors."},{"lineNumber":910,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":911,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("},{"lineNumber":912,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":913,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":914,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(instructorList);"},{"lineNumber":915,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":916,"author":{"gitId":"-"},"content":""},{"lineNumber":917,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":918,"author":{"gitId":"-"},"content":"     * Returns a {@code List} of feedback sessions in the Recycle Bin for the instructors."},{"lineNumber":919,"author":{"gitId":"-"},"content":"     * \u003cbr\u003e"},{"lineNumber":920,"author":{"gitId":"-"},"content":"     * Omits sessions if the corresponding courses are archived or in Recycle Bin"},{"lineNumber":921,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructors("},{"lineNumber":923,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":924,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":925,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructors(instructorList);"},{"lineNumber":926,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":927,"author":{"gitId":"-"},"content":""},{"lineNumber":928,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":929,"author":{"gitId":"-"},"content":"     * Gets the recipients of a feedback question for student."},{"lineNumber":930,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":931,"author":{"gitId":"-"},"content":"     * @see FeedbackQuestionsLogic#getRecipientsOfQuestion"},{"lineNumber":932,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":933,"author":{"gitId":"-"},"content":"    public Map\u003cString, String\u003e getRecipientsOfQuestion("},{"lineNumber":934,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question,"},{"lineNumber":935,"author":{"gitId":"-"},"content":"            @Nullable InstructorAttributes instructorGiver, @Nullable StudentAttributes studentGiver) {"},{"lineNumber":936,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":937,"author":{"gitId":"-"},"content":""},{"lineNumber":938,"author":{"gitId":"-"},"content":"        // we do not supply course roster here"},{"lineNumber":939,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getRecipientsOfQuestion(question, instructorGiver, studentGiver, null);"},{"lineNumber":940,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":941,"author":{"gitId":"-"},"content":""},{"lineNumber":942,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":943,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":944,"author":{"gitId":"-"},"content":"     * * All parameters are non-null. \u003cbr\u003e"},{"lineNumber":945,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":946,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":947,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackQuestionId) {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"        assert feedbackQuestionId !\u003d null;"},{"lineNumber":949,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackQuestionId);"},{"lineNumber":950,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":951,"author":{"gitId":"-"},"content":""},{"lineNumber":952,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":953,"author":{"gitId":"-"},"content":"     * Gets a list of all questions for the given session that"},{"lineNumber":954,"author":{"gitId":"-"},"content":"     * students can view/submit."},{"lineNumber":955,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":956,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForStudents("},{"lineNumber":957,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId) {"},{"lineNumber":958,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":959,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":960,"author":{"gitId":"-"},"content":""},{"lineNumber":961,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForStudents(feedbackSessionName, courseId);"},{"lineNumber":962,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":963,"author":{"gitId":"-"},"content":""},{"lineNumber":964,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":965,"author":{"gitId":"-"},"content":"     * Gets a {@code List} of all questions for the given session that"},{"lineNumber":966,"author":{"gitId":"-"},"content":"     * instructor can view/submit."},{"lineNumber":967,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":968,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForInstructors("},{"lineNumber":969,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String instructorEmail) {"},{"lineNumber":970,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":971,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":972,"author":{"gitId":"-"},"content":""},{"lineNumber":973,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForInstructors(feedbackSessionName, courseId, instructorEmail);"},{"lineNumber":974,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":975,"author":{"gitId":"-"},"content":""},{"lineNumber":976,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":977,"author":{"gitId":"-"},"content":"     * Updates the details of a feedback session by {@link FeedbackSessionAttributes.UpdateOptions}."},{"lineNumber":978,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":979,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAdjust email sending status if necessary."},{"lineNumber":980,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":981,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":982,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":983,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":984,"author":{"gitId":"-"},"content":"     * @return updated feedback session"},{"lineNumber":985,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":986,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":987,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":988,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes updateFeedbackSession(FeedbackSessionAttributes.UpdateOptions updateOptions)"},{"lineNumber":989,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":990,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":991,"author":{"gitId":"-"},"content":""},{"lineNumber":992,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.updateFeedbackSession(updateOptions);"},{"lineNumber":993,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":994,"author":{"gitId":"-"},"content":""},{"lineNumber":995,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":996,"author":{"gitId":"-"},"content":"     * Publishes a feedback session."},{"lineNumber":997,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":998,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":999,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1000,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"     * @return the published feedback session"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if session is already published"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes publishFeedbackSession(String feedbackSessionName, String courseId)"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1007,"author":{"gitId":"-"},"content":""},{"lineNumber":1008,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1010,"author":{"gitId":"-"},"content":""},{"lineNumber":1011,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.publishFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1013,"author":{"gitId":"-"},"content":""},{"lineNumber":1014,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"     * Unpublishes a feedback session."},{"lineNumber":1016,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1019,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"     * @return the unpublished feedback session"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"     *             if the feedback session is not ready to be unpublished."},{"lineNumber":1024,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes unpublishFeedbackSession(String feedbackSessionName, String courseId)"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1027,"author":{"gitId":"-"},"content":""},{"lineNumber":1028,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1030,"author":{"gitId":"-"},"content":""},{"lineNumber":1031,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.unpublishFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1033,"author":{"gitId":"-"},"content":""},{"lineNumber":1034,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"     * Deletes a feedback session cascade to its associated questions, responses and comments."},{"lineNumber":1036,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1039,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"    public void deleteFeedbackSessionCascade(String feedbackSessionName, String courseId) {"},{"lineNumber":1041,"author":{"gitId":"-"},"content":""},{"lineNumber":1042,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1044,"author":{"gitId":"-"},"content":""},{"lineNumber":1045,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.deleteFeedbackSessionCascade(feedbackSessionName, courseId);"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1047,"author":{"gitId":"-"},"content":""},{"lineNumber":1048,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"     * Soft-deletes a specific session to Recycle Bin."},{"lineNumber":1050,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"    public void moveFeedbackSessionToRecycleBin(String feedbackSessionName, String courseId)"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":1053,"author":{"gitId":"-"},"content":""},{"lineNumber":1054,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1056,"author":{"gitId":"-"},"content":""},{"lineNumber":1057,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1059,"author":{"gitId":"-"},"content":""},{"lineNumber":1060,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"     * Restores a specific session from Recycle Bin to feedback sessions table."},{"lineNumber":1062,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"    public void restoreFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId)"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":1065,"author":{"gitId":"-"},"content":""},{"lineNumber":1066,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1068,"author":{"gitId":"-"},"content":""},{"lineNumber":1069,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.restoreFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1071,"author":{"gitId":"-"},"content":""},{"lineNumber":1072,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"     * Creates a new feedback question."},{"lineNumber":1074,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1077,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"     * @return the created question"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the question is invalid"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes createFeedbackQuestion(FeedbackQuestionAttributes feedbackQuestion)"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"        assert feedbackQuestion !\u003d null;"},{"lineNumber":1084,"author":{"gitId":"-"},"content":""},{"lineNumber":1085,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.createFeedbackQuestion(feedbackQuestion);"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1087,"author":{"gitId":"-"},"content":""},{"lineNumber":1088,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"     * Updates a feedback question by {@code FeedbackQuestionAttributes.UpdateOptions}."},{"lineNumber":1090,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the question number of questions in the same session."},{"lineNumber":1092,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the existing response of the question."},{"lineNumber":1094,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1097,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"     * @return updated feedback question"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback question cannot be found"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes updateFeedbackQuestionCascade(FeedbackQuestionAttributes.UpdateOptions updateOptions)"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1105,"author":{"gitId":"-"},"content":""},{"lineNumber":1106,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.updateFeedbackQuestionCascade(updateOptions);"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1108,"author":{"gitId":"-"},"content":""},{"lineNumber":1109,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"     * Deletes a feedback question cascade its responses and comments."},{"lineNumber":1111,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"     * \u003cp\u003eSilently fail if question does not exist."},{"lineNumber":1113,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1116,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"    public void deleteFeedbackQuestionCascade(String questionId) {"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"        assert questionId !\u003d null;"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"        feedbackQuestionsLogic.deleteFeedbackQuestionCascade(questionId);"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1121,"author":{"gitId":"-"},"content":""},{"lineNumber":1122,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"     * Checks whether there are responses for a question."},{"lineNumber":1124,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1127,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.areThereResponsesForQuestion(feedbackQuestionId);"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1131,"author":{"gitId":"-"},"content":""},{"lineNumber":1132,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"     * Gets all questions for a feedback session.\u003cbr\u003e"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"     * Returns an empty list if they are no questions"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"     * for the session."},{"lineNumber":1136,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1138,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForSession(String feedbackSessionName, String courseId) {"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1142,"author":{"gitId":"-"},"content":""},{"lineNumber":1143,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1145,"author":{"gitId":"-"},"content":""},{"lineNumber":1146,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"     * Gets a set of giver identifiers that has at least one response under a feedback session."},{"lineNumber":1148,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1152,"author":{"gitId":"-"},"content":""},{"lineNumber":1153,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName);"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1155,"author":{"gitId":"-"},"content":""},{"lineNumber":1156,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session."},{"lineNumber":1158,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"     * @see FeedbackResponsesLogic#getSessionResultsForCourse(String, String, String, String, String)"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForCourse("},{"lineNumber":1162,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail,"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"            @Nullable String questionId, @Nullable String section) {"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1167,"author":{"gitId":"-"},"content":""},{"lineNumber":1168,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getSessionResultsForCourse("},{"lineNumber":1169,"author":{"gitId":"-"},"content":"                feedbackSessionName, courseId, userEmail, questionId, section);"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1171,"author":{"gitId":"-"},"content":""},{"lineNumber":1172,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session for the given user."},{"lineNumber":1174,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"     * @see FeedbackResponsesLogic#getSessionResultsForUser(String, String, String, boolean, String)"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForUser("},{"lineNumber":1178,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail, boolean isInstructor,"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"            @Nullable String questionId) {"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1183,"author":{"gitId":"-"},"content":""},{"lineNumber":1184,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getSessionResultsForUser("},{"lineNumber":1185,"author":{"gitId":"-"},"content":"                feedbackSessionName, courseId, userEmail, isInstructor, questionId);"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1187,"author":{"gitId":"-"},"content":""},{"lineNumber":1188,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"     * Get existing feedback responses from student or his team for the given question."},{"lineNumber":1190,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromStudentOrTeamForQuestion("},{"lineNumber":1192,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, StudentAttributes student) {"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"        assert student !\u003d null;"},{"lineNumber":1195,"author":{"gitId":"-"},"content":""},{"lineNumber":1196,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponsesFromStudentOrTeamForQuestion(question, student);"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1198,"author":{"gitId":"-"},"content":""},{"lineNumber":1199,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"     * Get existing feedback responses from instructor for the given question."},{"lineNumber":1201,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromInstructorForQuestion("},{"lineNumber":1203,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, InstructorAttributes instructorAttributes) {"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"        assert instructorAttributes !\u003d null;"},{"lineNumber":1206,"author":{"gitId":"-"},"content":""},{"lineNumber":1207,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":1208,"author":{"gitId":"-"},"content":"                question.getFeedbackQuestionId(), instructorAttributes.getEmail());"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1210,"author":{"gitId":"-"},"content":""},{"lineNumber":1211,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes getFeedbackResponse(String feedbackResponseId) {"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"        assert feedbackResponseId !\u003d null;"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponse(feedbackResponseId);"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1215,"author":{"gitId":"-"},"content":""},{"lineNumber":1216,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"     * Creates a feedback response."},{"lineNumber":1218,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1221,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"     * @return created feedback response"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the response is not valid"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response already exist"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1226,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes createFeedbackResponse(FeedbackResponseAttributes feedbackResponse)"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"        assert feedbackResponse !\u003d null;"},{"lineNumber":1229,"author":{"gitId":"-"},"content":""},{"lineNumber":1230,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.createFeedbackResponse(feedbackResponse);"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1232,"author":{"gitId":"-"},"content":""},{"lineNumber":1233,"author":{"gitId":"-"},"content":"    public boolean hasResponsesForCourse(String courseId) {"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.hasResponsesForCourse(courseId);"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1236,"author":{"gitId":"-"},"content":""},{"lineNumber":1237,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"     * Updates a feedback response by {@link FeedbackResponseAttributes.UpdateOptions}."},{"lineNumber":1239,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade updates its associated feedback response comment"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"     * (e.g. associated response ID, giverSection and recipientSection)."},{"lineNumber":1242,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"     * as question-giver-recipient is the primary key."},{"lineNumber":1245,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1248,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"     * @return updated feedback response"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the comment cannot be found"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response cannot be updated"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"     *         by recreation because of an existent response"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1255,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes updateFeedbackResponseCascade(FeedbackResponseAttributes.UpdateOptions updateOptions)"},{"lineNumber":1256,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1258,"author":{"gitId":"-"},"content":""},{"lineNumber":1259,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.updateFeedbackResponseCascade(updateOptions);"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1261,"author":{"gitId":"-"},"content":""},{"lineNumber":1262,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"     * Deletes a feedback response cascade its associated comments."},{"lineNumber":1264,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1267,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponseCascade(String responseId) {"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"        assert responseId !\u003d null;"},{"lineNumber":1270,"author":{"gitId":"-"},"content":"        feedbackResponsesLogic.deleteFeedbackResponseCascade(responseId);"},{"lineNumber":1271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1272,"author":{"gitId":"-"},"content":""},{"lineNumber":1273,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"     * Create a feedback response comment, and return the created comment."},{"lineNumber":1275,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1278,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes createFeedbackResponseComment("},{"lineNumber":1280,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes feedbackResponseComment)"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":1282,"author":{"gitId":"-"},"content":"        assert feedbackResponseComment !\u003d null;"},{"lineNumber":1283,"author":{"gitId":"-"},"content":""},{"lineNumber":1284,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.createFeedbackResponseComment(feedbackResponseComment);"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1286,"author":{"gitId":"-"},"content":""},{"lineNumber":1287,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseComment(Long feedbackResponseCommentId) {"},{"lineNumber":1288,"author":{"gitId":"-"},"content":"        assert feedbackResponseCommentId !\u003d null;"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.getFeedbackResponseComment(feedbackResponseCommentId);"},{"lineNumber":1290,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1291,"author":{"gitId":"-"},"content":""},{"lineNumber":1292,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1293,"author":{"gitId":"-"},"content":"     * Gets comment associated with the response."},{"lineNumber":1294,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThe comment is given by a feedback participant to explain the response\u003c/p\u003e"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1297,"author":{"gitId":"-"},"content":"     * @param feedbackResponseId the response id"},{"lineNumber":1298,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1299,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseCommentForResponseFromParticipant("},{"lineNumber":1300,"author":{"gitId":"-"},"content":"            String feedbackResponseId) {"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"        assert feedbackResponseId !\u003d null;"},{"lineNumber":1302,"author":{"gitId":"-"},"content":""},{"lineNumber":1303,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.getFeedbackResponseCommentForResponseFromParticipant(feedbackResponseId);"},{"lineNumber":1304,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1305,"author":{"gitId":"-"},"content":""},{"lineNumber":1306,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1307,"author":{"gitId":"-"},"content":"     * Updates a feedback response comment by {@link FeedbackResponseCommentAttributes.UpdateOptions}."},{"lineNumber":1308,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1311,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1312,"author":{"gitId":"-"},"content":"     * @return updated comment"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1314,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the comment cannot be found"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes updateFeedbackResponseComment("},{"lineNumber":1317,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes.UpdateOptions updateOptions)"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1320,"author":{"gitId":"-"},"content":""},{"lineNumber":1321,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.updateFeedbackResponseComment(updateOptions);"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1323,"author":{"gitId":"-"},"content":""},{"lineNumber":1324,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"     * Deletes a comment."},{"lineNumber":1326,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1327,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponseComment(long commentId) {"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"        feedbackResponseCommentsLogic.deleteFeedbackResponseComment(commentId);"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1330,"author":{"gitId":"-"},"content":""},{"lineNumber":1331,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"     * Returns returns a list of sessions that were closed within past hour."},{"lineNumber":1333,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"     * @see FeedbackSessionsLogic#getFeedbackSessionsClosedWithinThePastHour()"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1336,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"},{"lineNumber":1337,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsClosedWithinThePastHour();"},{"lineNumber":1338,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1339,"author":{"gitId":"-"},"content":""},{"lineNumber":1340,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"},{"lineNumber":1341,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsClosingWithinTimeLimit();"},{"lineNumber":1342,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1343,"author":{"gitId":"-"},"content":""},{"lineNumber":1344,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsOpeningWithinTimeLimit() {"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsOpeningWithinTimeLimit();"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1347,"author":{"gitId":"-"},"content":""},{"lineNumber":1348,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"     * Returns a list of sessions that require automated emails to be sent as they are published."},{"lineNumber":1350,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"     * @see FeedbackSessionsLogic#getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent()"},{"lineNumber":1352,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1353,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1356,"author":{"gitId":"-"},"content":""},{"lineNumber":1357,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1360,"author":{"gitId":"-"},"content":""},{"lineNumber":1361,"author":{"gitId":"-"},"content":"    public String getSectionForTeam(String courseId, String teamName) {"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1363,"author":{"gitId":"-"},"content":"        assert teamName !\u003d null;"},{"lineNumber":1364,"author":{"gitId":"-"},"content":"        return studentsLogic.getSectionForTeam(courseId, teamName);"},{"lineNumber":1365,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1366,"author":{"gitId":"-"},"content":""},{"lineNumber":1367,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1368,"author":{"gitId":"-"},"content":"     * Persists the given data bundle to the database."},{"lineNumber":1369,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#persistDataBundle(DataBundle)"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1372,"author":{"gitId":"-"},"content":"    public DataBundle persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"        return dataBundleLogic.persistDataBundle(dataBundle);"},{"lineNumber":1374,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1375,"author":{"gitId":"-"},"content":""},{"lineNumber":1376,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"     * Removes the given data bundle from the database."},{"lineNumber":1378,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#removeDataBundle(DataBundle)"},{"lineNumber":1380,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1381,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"        dataBundleLogic.removeDataBundle(dataBundle);"},{"lineNumber":1383,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1384,"author":{"gitId":"-"},"content":""},{"lineNumber":1385,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"     * Puts searchable documents from the data bundle to the database."},{"lineNumber":1387,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1388,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#putDocuments(DataBundle)"},{"lineNumber":1389,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1390,"author":{"gitId":"-"},"content":"    public void putDocuments(DataBundle dataBundle) throws SearchServiceException {"},{"lineNumber":1391,"author":{"gitId":"-"},"content":"        dataBundleLogic.putDocuments(dataBundle);"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1393,"author":{"gitId":"-"},"content":""},{"lineNumber":1394,"author":{"gitId":"-"},"content":"    public boolean isStudentsInSameTeam(String courseId, String student1Email, String student2Email) {"},{"lineNumber":1395,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1396,"author":{"gitId":"-"},"content":"        assert student1Email !\u003d null;"},{"lineNumber":1397,"author":{"gitId":"-"},"content":"        assert student2Email !\u003d null;"},{"lineNumber":1398,"author":{"gitId":"-"},"content":"        return studentsLogic.isStudentsInSameTeam(courseId, student1Email, student2Email);"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1400,"author":{"gitId":"-"},"content":""},{"lineNumber":1401,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1402,"author":{"gitId":"-"},"content":"     * Creates an account request."},{"lineNumber":1403,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1404,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1405,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1406,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1407,"author":{"gitId":"-"},"content":"     * @return the created account request"},{"lineNumber":1408,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":1409,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the account request already exists"},{"lineNumber":1410,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1411,"author":{"gitId":"-"},"content":"    public AccountRequestAttributes createAccountRequest(AccountRequestAttributes accountRequest)"},{"lineNumber":1412,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":1413,"author":{"gitId":"-"},"content":"        assert accountRequest !\u003d null;"},{"lineNumber":1414,"author":{"gitId":"-"},"content":""},{"lineNumber":1415,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.createAccountRequest(accountRequest);"},{"lineNumber":1416,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1417,"author":{"gitId":"-"},"content":""},{"lineNumber":1418,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1419,"author":{"gitId":"-"},"content":"     * Updates an account request."},{"lineNumber":1420,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1421,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1422,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1423,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1424,"author":{"gitId":"-"},"content":"     * @return the updated account request"},{"lineNumber":1425,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":1426,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the account request does not exist"},{"lineNumber":1427,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1428,"author":{"gitId":"-"},"content":"    public AccountRequestAttributes updateAccountRequest(AccountRequestAttributes.UpdateOptions updateOptions)"},{"lineNumber":1429,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1430,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1431,"author":{"gitId":"-"},"content":""},{"lineNumber":1432,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.updateAccountRequest(updateOptions);"},{"lineNumber":1433,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1434,"author":{"gitId":"-"},"content":""},{"lineNumber":1435,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1436,"author":{"gitId":"-"},"content":"     * Deletes an account request."},{"lineNumber":1437,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1438,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1439,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1440,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1441,"author":{"gitId":"-"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":1442,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":1443,"author":{"gitId":"-"},"content":""},{"lineNumber":1444,"author":{"gitId":"-"},"content":"        accountRequestsLogic.deleteAccountRequest(email, institute);"},{"lineNumber":1445,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1446,"author":{"gitId":"-"},"content":""},{"lineNumber":1447,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1448,"author":{"gitId":"-"},"content":"     * Gets an account request by unique constraint {@code registrationKey}."},{"lineNumber":1449,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1450,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1451,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1452,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1453,"author":{"gitId":"-"},"content":"     * @return the account request"},{"lineNumber":1454,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1455,"author":{"gitId":"-"},"content":"    public AccountRequestAttributes getAccountRequestForRegistrationKey(String registrationKey) {"},{"lineNumber":1456,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":1457,"author":{"gitId":"-"},"content":""},{"lineNumber":1458,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.getAccountRequestForRegistrationKey(registrationKey);"},{"lineNumber":1459,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1460,"author":{"gitId":"-"},"content":""},{"lineNumber":1461,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1462,"author":{"gitId":"-"},"content":"     * Gets an account request by email address and institute."},{"lineNumber":1463,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1464,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1465,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1466,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1467,"author":{"gitId":"-"},"content":"     * @return the account request"},{"lineNumber":1468,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1469,"author":{"gitId":"-"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":1470,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":1471,"author":{"gitId":"-"},"content":"        assert institute !\u003d null;"},{"lineNumber":1472,"author":{"gitId":"-"},"content":""},{"lineNumber":1473,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.getAccountRequest(email, institute);"},{"lineNumber":1474,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1475,"author":{"gitId":"-"},"content":""},{"lineNumber":1476,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1477,"author":{"gitId":"-"},"content":"     * This is used by admin to search account requests in the whole system."},{"lineNumber":1478,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1479,"author":{"gitId":"-"},"content":"     * @return A list of {@link AccountRequestAttributes} or {@code null} if no match found."},{"lineNumber":1480,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1481,"author":{"gitId":"-"},"content":"    public List\u003cAccountRequestAttributes\u003e searchAccountRequestsInWholeSystem(String queryString)"},{"lineNumber":1482,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":1483,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":1484,"author":{"gitId":"-"},"content":""},{"lineNumber":1485,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.searchAccountRequestsInWholeSystem(queryString);"},{"lineNumber":1486,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1487,"author":{"gitId":"-"},"content":""},{"lineNumber":1488,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1489,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given account request."},{"lineNumber":1490,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1491,"author":{"gitId":"-"},"content":"     * @see AccountRequestsLogic#putDocument(AccountRequestAttributes)"},{"lineNumber":1492,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1493,"author":{"gitId":"-"},"content":"    public void putAccountRequestDocument(AccountRequestAttributes accountRequest) throws SearchServiceException {"},{"lineNumber":1494,"author":{"gitId":"-"},"content":"        accountRequestsLogic.putDocument(accountRequest);"},{"lineNumber":1495,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1496,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":9,"-":1479,"Nicolascwy":8}},{"path":"src/main/java/teammates/logic/core/LogicStarter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextEvent;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextListener;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Setup in web.xml to register logic classes at application startup."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class LogicStarter implements ServletContextListener {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Registers dependencies between different logic classes."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void initializeDependencies() {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        AccountsLogic accountsLogic \u003d AccountsLogic.inst();"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        FeedbackQuestionsLogic fqLogic \u003d FeedbackQuestionsLogic.inst();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        FeedbackResponsesLogic frLogic \u003d FeedbackResponsesLogic.inst();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        FeedbackResponseCommentsLogic frcLogic \u003d FeedbackResponseCommentsLogic.inst();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"        NotificationsLogic notificationsLogic \u003d NotificationsLogic.inst();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        accountsLogic.initLogicDependencies();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        coursesLogic.initLogicDependencies();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fqLogic.initLogicDependencies();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        frLogic.initLogicDependencies();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        frcLogic.initLogicDependencies();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        fsLogic.initLogicDependencies();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        instructorsLogic.initLogicDependencies();"},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"        notificationsLogic.initLogicDependencies();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        studentsLogic.initLogicDependencies();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        profilesLogic.initLogicDependencies();"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        log.info(\"Initialized dependencies between logic classes\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void contextInitialized(ServletContextEvent event) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Invoked by Jetty at application startup."},{"lineNumber":47,"author":{"gitId":"-"},"content":"        initializeDependencies();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void contextDestroyed(ServletContextEvent event) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Nothing to do"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":53}},{"path":"src/main/java/teammates/logic/core/NotificationsLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import teammates.storage.api.NotificationsDb;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":" * Handles the logic related to notifications."},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"public final class NotificationsLogic {"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"    private static final NotificationsLogic instance \u003d new NotificationsLogic();"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"    private final NotificationsDb notificationsDb \u003d NotificationsDb.inst();"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationsLogic() {"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"        // prevent initialization"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"    public static NotificationsLogic inst() {"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"        return instance;"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"    void initLogicDependencies() {"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"        // No dependency to other logic class"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"     * Gets notification associated with the {@code notificationId}."},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"     * @return null if no match found."},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes getNotification(String notificationId) {"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"        return notificationsDb.getNotification(notificationId);"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"     * Gets all notifications."},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getAllNotifications() {"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"        return notificationsDb.getAllNotifications();"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"     * Gets a list of notifications."},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"     * @return a list of notifications with the specified {@code targetUser}."},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getActiveNotificationsByTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        return notificationsDb.getActiveNotificationsByTargetUser(targetUser);"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"     * Creates a notification."},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":"     * @return the created notification"},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":"     * @throws InvalidParametersException if the notification is not valid"},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"     * @throws EntityAlreadyExistsException if the notification already exists in the database."},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"    public NotificationAttributes createNotification(NotificationAttributes notification)"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"        return notificationsDb.createEntity(notification);"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":"     * Updates/Creates the notification using {@link NotificationAttributes.UpdateOptions}."},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"     * @return updated notification"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"     * @throws EntityDoesNotExistException if notification cannot be found with given Id"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes updateNotification(NotificationAttributes.UpdateOptions updateOptions)"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":"        return notificationsDb.updateNotification(updateOptions);"},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"     * Deletes notification associated with the {@code notificationId}."},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"     * \u003cp\u003eFails silently if the notification doesn\u0027t exist.\u003c/p\u003e"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"    public void deleteNotification(String notificationId) {"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"        notificationsDb.deleteNotification(notificationId);"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"ziqing26":19,"fsgmhoward":71,"Nicolascwy":1}},{"path":"src/main/java/teammates/storage/api/NotificationsDb.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import static com.googlecode.objectify.ObjectifyService.ofy;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import java.util.stream.Collectors;"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.Key;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.cmd.LoadType;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"import teammates.storage.entity.Notification;"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":" * Handles CRUD operations for notifications."},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":" *"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":" * @see Notification"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":" * @see NotificationAttributes"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"public final class NotificationsDb extends EntitiesDb\u003cNotification, NotificationAttributes\u003e {"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"    private static final NotificationsDb instance \u003d new NotificationsDb();"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationsDb() {"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"        // prevent initialization"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"    public static NotificationsDb inst() {"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"        return instance;"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"     * Gets a notification by its unique ID."},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes getNotification(String notificationId) {"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"        assert notificationId !\u003d null;"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"        return notificationId.isEmpty() ? null : makeAttributesOrNull(getNotificationEntity(notificationId));"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"     * Gets all notifications."},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getAllNotifications() {"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotification\u003e notifications \u003d load().list();"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationAttributes\u003e notificationAttributes \u003d makeAttributes(notifications);"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes.sortByStartTime(notificationAttributes);"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"        return notificationAttributes;"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"     * Gets notifications by {@code targetUser}."},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"     * @return a list of notifications for the specified targetUser."},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getActiveNotificationsByTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"        assert targetUser !\u003d null;"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotification\u003e endEntities \u003d load()"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"                .filter(\"targetUser\", targetUser)"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"                .filter(\"endTime \u003e\", Instant.now())"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"                .list();"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"        endEntities.addAll(load()"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"                .filter(\"targetUser\", NotificationTargetUser.GENERAL)"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"                .filter(\"endTime \u003e\", Instant.now())"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"                .list());"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotification\u003e ongoingNotifications \u003d endEntities.stream()"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"                .filter(notification -\u003e"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"                   notification.getStartTime().isBefore(Instant.now()))"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"                .collect(Collectors.toList());"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationAttributes\u003e notificationAttributes \u003d makeAttributes(ongoingNotifications);"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes.sortByStartTime(notificationAttributes);"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"        return notificationAttributes;"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"     * Updates a notification with {@link NotificationAttributes.UpdateOptions}."},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"     * @return updated notification"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"     * @throws EntityDoesNotExistException if notification cannot be found"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes updateNotification(NotificationAttributes.UpdateOptions updateOptions)"},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":92,"author":{"gitId":"fsgmhoward"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":94,"author":{"gitId":"fsgmhoward"},"content":"        Notification notification \u003d getNotificationEntity(updateOptions.getNotificationId());"},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"        if (notification \u003d\u003d null) {"},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"            throw new EntityDoesNotExistException(ERROR_UPDATE_NON_EXISTENT + updateOptions);"},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":99,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes newAttributes \u003d makeAttributes(notification);"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"        newAttributes.update(updateOptions);"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":102,"author":{"gitId":"fsgmhoward"},"content":"        newAttributes.sanitizeForSaving();"},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":"        if (!newAttributes.isValid()) {"},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"            throw new InvalidParametersException(newAttributes.getInvalidityInfo());"},{"lineNumber":105,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":"        saveEntity(notification);"},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":109,"author":{"gitId":"fsgmhoward"},"content":"        return makeAttributes(notification);"},{"lineNumber":110,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":112,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"fsgmhoward"},"content":"     * Deletes a notification by its unique ID."},{"lineNumber":114,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"fsgmhoward"},"content":"     * \u003cp\u003eFails silently if there is no such notification."},{"lineNumber":116,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"fsgmhoward"},"content":"    public void deleteNotification(String notificationId) {"},{"lineNumber":118,"author":{"gitId":"fsgmhoward"},"content":"        assert notificationId !\u003d null;"},{"lineNumber":119,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"        deleteEntity(Key.create(Notification.class, notificationId));"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":123,"author":{"gitId":"fsgmhoward"},"content":"    private Notification getNotificationEntity(String notificationId) {"},{"lineNumber":124,"author":{"gitId":"fsgmhoward"},"content":"        Notification notification \u003d load().id(notificationId).now();"},{"lineNumber":125,"author":{"gitId":"fsgmhoward"},"content":"        if (notification \u003d\u003d null) {"},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"            return null;"},{"lineNumber":127,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":129,"author":{"gitId":"fsgmhoward"},"content":"        return notification;"},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":132,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":133,"author":{"gitId":"fsgmhoward"},"content":"    LoadType\u003cNotification\u003e load() {"},{"lineNumber":134,"author":{"gitId":"fsgmhoward"},"content":"        return ofy().load().type(Notification.class);"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"    boolean hasExistingEntities(NotificationAttributes entityToCreate) {"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"        Key\u003cNotification\u003e keyToFind \u003d Key.create(Notification.class, entityToCreate.getNotificationId());"},{"lineNumber":140,"author":{"gitId":"fsgmhoward"},"content":"        return !load().filterKey(keyToFind).keys().list().isEmpty();"},{"lineNumber":141,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":143,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"    NotificationAttributes makeAttributes(Notification entity) {"},{"lineNumber":145,"author":{"gitId":"fsgmhoward"},"content":"        assert entity !\u003d null;"},{"lineNumber":146,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":147,"author":{"gitId":"fsgmhoward"},"content":"        return NotificationAttributes.valueOf(entity);"},{"lineNumber":148,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"ziqing26":43,"fsgmhoward":106}},{"path":"src/main/java/teammates/storage/api/OfyHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextEvent;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextListener;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.DatastoreOptions;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyFactory;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyService;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Account;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.storage.entity.BaseEntity;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Course;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.storage.entity.CourseStudent;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackQuestion;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackResponse;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackResponseComment;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackSession;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Instructor;"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"import teammates.storage.entity.Notification;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.storage.entity.StudentProfile;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Setup in web.xml to register Objectify at application startup."},{"lineNumber":26,"author":{"gitId":"-"},"content":" **/"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class OfyHelper implements ServletContextListener {"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static void initializeDatastore() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        DatastoreOptions.Builder builder \u003d DatastoreOptions.newBuilder().setProjectId(Config.APP_ID);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            builder.setHost(\"http://localhost:\" + Config.APP_LOCALDATASTORE_PORT);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ObjectifyService.init(new ObjectifyFactory(builder.build().getService()));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Register entity classes in Objectify service."},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void registerEntityClasses() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Account.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Course.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ObjectifyService.register(CourseStudent.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackQuestion.class);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackResponse.class);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackResponseComment.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackSession.class);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Instructor.class);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ObjectifyService.register(StudentProfile.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ObjectifyService.register(AccountRequest.class);"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"        ObjectifyService.register(Notification.class);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // enable the ability to use java.time.Instant to issue query"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ObjectifyService.factory().getTranslators().add(new BaseEntity.InstantTranslatorFactory());"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void contextInitialized(ServletContextEvent event) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Invoked by Jetty at application startup."},{"lineNumber":59,"author":{"gitId":"-"},"content":"        initializeDatastore();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        registerEntityClasses();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void contextDestroyed(ServletContextEvent event) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Nothing to do"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":65}},{"path":"src/main/java/teammates/storage/entity/Notification.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.storage.entity;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import java.util.UUID;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.Entity;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.Index;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.OnSave;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.Translate;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationType;"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":" * Represents a unique notification in the system."},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"@Entity"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"@Index"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"public class Notification extends BaseEntity {"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    @Id"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    private String notificationId;"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"    private Instant startTime;"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"    private Instant endTime;"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"    private NotificationType type;"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"    private NotificationTargetUser targetUser;"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"    private String title;"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"    private String message;"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"    private boolean shown;"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"    private Instant createdAt;"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"    private Instant updatedAt;"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"    @SuppressWarnings(\"unused\")"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"    private Notification() {"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"        // required by Objectify"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"     * Instantiates a new notification, with ID randomly generated and time fields filled automatically."},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":"     * @param startTime start time for the notification to be shown to users"},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"     * @param endTime notifications are hidden from users after endTime"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":"     * @param type type of the notification (e.g. maintainance, depreciation, etc.)"},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"     * @param targetUser student or instructor"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"     * @param title title of the notification"},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"     * @param message message body of the notification"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"    public Notification(Instant startTime, Instant endTime, NotificationType type, NotificationTargetUser targetUser,"},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"            String title, String message) {"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"        this.setStartTime(startTime);"},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"        this.setEndTime(endTime);"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"        this.setType(type);"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"        this.setTargetUser(targetUser);"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":"        this.setTitle(title);"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"        this.setMessage(message);"},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"        this.setCreatedAt(Instant.now());"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"        UUID uuid \u003d UUID.randomUUID();"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"        this.notificationId \u003d uuid.toString();"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"        this.shown \u003d false;"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":"     * Instantiates a new notification, with all fields passed in as parameters."},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":"     * This is mainly for conversion from attributes to entity."},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"    public Notification(String notificationId, Instant startTime, Instant endTime,"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"                        NotificationType type, NotificationTargetUser targetUser,"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"                        String title, String message, boolean shown, Instant createdAt, Instant updatedAt) {"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"        this.setStartTime(startTime);"},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"        this.setEndTime(endTime);"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"        this.setType(type);"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"        this.setTargetUser(targetUser);"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"        this.setTitle(title);"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"        this.setMessage(message);"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"        if (createdAt \u003d\u003d null) {"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"            this.setCreatedAt(Instant.now());"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"        } else {"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":"            this.setCreatedAt(createdAt);"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"        this.setUpdatedAt(updatedAt);"},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"        this.notificationId \u003d notificationId;"},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":"        this.shown \u003d shown;"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"        assert this.createdAt !\u003d null;"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":102,"author":{"gitId":"fsgmhoward"},"content":"    public String getNotificationId() {"},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":"        return notificationId;"},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":106,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getStartTime() {"},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":"        return startTime;"},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":110,"author":{"gitId":"fsgmhoward"},"content":"    public void setStartTime(Instant startTime) {"},{"lineNumber":111,"author":{"gitId":"fsgmhoward"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":112,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":114,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getEndTime() {"},{"lineNumber":115,"author":{"gitId":"fsgmhoward"},"content":"        return endTime;"},{"lineNumber":116,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":118,"author":{"gitId":"fsgmhoward"},"content":"    public void setEndTime(Instant endTime) {"},{"lineNumber":119,"author":{"gitId":"fsgmhoward"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":122,"author":{"gitId":"ziqing26"},"content":"    public NotificationType getType() {"},{"lineNumber":123,"author":{"gitId":"fsgmhoward"},"content":"        return type;"},{"lineNumber":124,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":126,"author":{"gitId":"ziqing26"},"content":"    public void setType(NotificationType type) {"},{"lineNumber":127,"author":{"gitId":"fsgmhoward"},"content":"        this.type \u003d type;"},{"lineNumber":128,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":"    public NotificationTargetUser getTargetUser() {"},{"lineNumber":131,"author":{"gitId":"fsgmhoward"},"content":"        return targetUser;"},{"lineNumber":132,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":134,"author":{"gitId":"ziqing26"},"content":"    public void setTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"        this.targetUser \u003d targetUser;"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"    public String getTitle() {"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"        return title;"},{"lineNumber":140,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":142,"author":{"gitId":"fsgmhoward"},"content":"    public void setTitle(String title) {"},{"lineNumber":143,"author":{"gitId":"fsgmhoward"},"content":"        this.title \u003d title;"},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":146,"author":{"gitId":"fsgmhoward"},"content":"    public String getMessage() {"},{"lineNumber":147,"author":{"gitId":"fsgmhoward"},"content":"        return message;"},{"lineNumber":148,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":150,"author":{"gitId":"fsgmhoward"},"content":"    public void setMessage(String message) {"},{"lineNumber":151,"author":{"gitId":"fsgmhoward"},"content":"        this.message \u003d message;"},{"lineNumber":152,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":154,"author":{"gitId":"fsgmhoward"},"content":"    public boolean isShown() {"},{"lineNumber":155,"author":{"gitId":"fsgmhoward"},"content":"        return shown;"},{"lineNumber":156,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":158,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"fsgmhoward"},"content":"     * Sets the notification as shown to the user."},{"lineNumber":160,"author":{"gitId":"fsgmhoward"},"content":"     * Only allowed to change value from false to true."},{"lineNumber":161,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"fsgmhoward"},"content":"    public void setShown() {"},{"lineNumber":163,"author":{"gitId":"fsgmhoward"},"content":"        this.shown \u003d true;"},{"lineNumber":164,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":166,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getCreatedAt() {"},{"lineNumber":167,"author":{"gitId":"fsgmhoward"},"content":"        return createdAt;"},{"lineNumber":168,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":170,"author":{"gitId":"fsgmhoward"},"content":"    public void setCreatedAt(Instant createdAt) {"},{"lineNumber":171,"author":{"gitId":"fsgmhoward"},"content":"        this.createdAt \u003d createdAt;"},{"lineNumber":172,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":174,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getUpdatedAt() {"},{"lineNumber":175,"author":{"gitId":"fsgmhoward"},"content":"        return updatedAt;"},{"lineNumber":176,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":178,"author":{"gitId":"fsgmhoward"},"content":"    public void setUpdatedAt(Instant updatedAt) {"},{"lineNumber":179,"author":{"gitId":"fsgmhoward"},"content":"        this.updatedAt \u003d updatedAt;"},{"lineNumber":180,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":182,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"fsgmhoward"},"content":"     * Updates the updatedAt timestamp when saving."},{"lineNumber":184,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"fsgmhoward"},"content":"    @OnSave"},{"lineNumber":186,"author":{"gitId":"fsgmhoward"},"content":"    public void updateLastUpdateTimestamp() {"},{"lineNumber":187,"author":{"gitId":"fsgmhoward"},"content":"        this.setUpdatedAt(Instant.now());"},{"lineNumber":188,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"ziqing26":18,"fsgmhoward":171}},{"path":"src/main/java/teammates/ui/constants/ResourceEndpoints.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.constants;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * API endpoints for resources."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public enum ResourceEndpoints {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.OFF:JavadocVariable"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    ERROR_REPORT(ResourceURIs.ERROR_REPORT),"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    AUTH(ResourceURIs.AUTH),"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    AUTH_REGKEY(ResourceURIs.AUTH_REGKEY),"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ACCOUNT(ResourceURIs.ACCOUNT),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ACCOUNT_RESET(ResourceURIs.ACCOUNT_RESET),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ACCOUNT_DOWNGRADE(ResourceURIs.ACCOUNT_DOWNGRADE),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ACCOUNT_REQUEST(ResourceURIs.ACCOUNT_REQUEST),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    RESPONSE_COMMENT(ResourceURIs.RESPONSE_COMMENT),"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    COURSE(ResourceURIs.COURSE),"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    COURSE_ARCHIVE(ResourceURIs.COURSE_ARCHIVE),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    BIN_COURSE(ResourceURIs.BIN_COURSE),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    COURSE_SECTIONS(ResourceURIs.COURSE_SECTIONS),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    COURSES(ResourceURIs.COURSES),"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    INSTRUCTORS(ResourceURIs.INSTRUCTORS),"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    INSTRUCTOR(ResourceURIs.INSTRUCTOR),"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    INSTRUCTOR_PRIVILEGE(ResourceURIs.INSTRUCTOR_PRIVILEGE),"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    INSTRUCTOR_KEY(ResourceURIs.INSTRUCTOR_KEY),"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    RESULT(ResourceURIs.RESULT),"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    STUDENTS(ResourceURIs.STUDENTS),"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    STUDENT(ResourceURIs.STUDENT),"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    STUDENT_KEY(ResourceURIs.STUDENT_KEY),"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    SESSIONS_ONGOING(ResourceURIs.SESSIONS_ONGOING),"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    SESSION(ResourceURIs.SESSION),"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    SESSION_LOGS(ResourceURIs.SESSION_LOGS),"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    SESSION_PUBLISH(ResourceURIs.SESSION_PUBLISH),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    SESSION_REMIND_SUBMISSION(ResourceURIs.SESSION_REMIND_SUBMISSION),"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    SESSION_REMIND_RESULT(ResourceURIs.SESSION_REMIND_RESULT),"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    SESSION_STATS(ResourceURIs.SESSION_STATS),"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    SESSION_SUBMITTED_GIVER_SET(ResourceURIs.SESSION_SUBMITTED_GIVER_SET),"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    SESSIONS(ResourceURIs.SESSIONS),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BIN_SESSION(ResourceURIs.BIN_SESSION),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    QUESTIONS(ResourceURIs.QUESTIONS),"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    QUESTION(ResourceURIs.QUESTION),"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    QUESTION_RECIPIENTS(ResourceURIs.QUESTION_RECIPIENTS),"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    RESPONSES(ResourceURIs.RESPONSES),"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    HAS_RESPONSES(ResourceURIs.HAS_RESPONSES),"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":"    NOTIFICATION(ResourceURIs.NOTIFICATION),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    JOIN(ResourceURIs.JOIN),"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    JOIN_REMIND(ResourceURIs.JOIN_REMIND),"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    TIMEZONE(ResourceURIs.TIMEZONE),"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    SESSION_LINKS_RECOVERY(ResourceURIs.SESSION_LINKS_RECOVERY),"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    NATIONALITIES(ResourceURIs.NATIONALITIES),"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    EMAIL(ResourceURIs.EMAIL),"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE_PICTURE(ResourceURIs.STUDENT_PROFILE_PICTURE),"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE(ResourceURIs.STUDENT_PROFILE),"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    SEARCH_ACCOUNT_REQUESTS(ResourceURIs.SEARCH_ACCOUNT_REQUESTS),"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    SEARCH_INSTRUCTORS(ResourceURIs.SEARCH_INSTRUCTORS),"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    SEARCH_STUDENTS(ResourceURIs.SEARCH_STUDENTS),"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    LOGS(ResourceURIs.LOGS),"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ACTION_CLASS(ResourceURIs.ACTION_CLASS);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final String url;"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    ResourceEndpoints(String s) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.url \u003d s;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String getUrl() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return url;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":73,"Nicolascwy":1}},{"path":"src/main/java/teammates/ui/output/NotificationData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationType;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" * The API output format of a notification."},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public class NotificationData extends ApiOutput {"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private String notificationId;"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    private Long startTimestamp;"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    private Long endTimestamp;"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    private Long createdAt;"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    private Long updatedAt;"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    private NotificationType notificationType;"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    private NotificationTargetUser targetUser;"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    private String title;"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    private String message;"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    private boolean shown;"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    public NotificationData(NotificationAttributes notificationAttributes) {"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"        this.notificationId \u003d notificationAttributes.getNotificationId();"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        this.startTimestamp \u003d notificationAttributes.getStartTime().toEpochMilli();"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"        this.endTimestamp \u003d notificationAttributes.getStartTime().toEpochMilli();"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        this.createdAt \u003d notificationAttributes.getCreatedAt().toEpochMilli();"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        this.updatedAt \u003d notificationAttributes.getUpdatedAt().toEpochMilli();"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        this.notificationType \u003d notificationAttributes.getType();"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"        this.targetUser \u003d notificationAttributes.getTargetUser();"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        this.title \u003d notificationAttributes.getTitle();"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"        this.message \u003d notificationAttributes.getMessage();"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"        this.shown \u003d notificationAttributes.isShown();"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    public String getNotificationId() {"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"        return this.notificationId;"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"    public Long getStartTimestamp() {"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        return this.startTimestamp;"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"    public Long getEndTimestamp() {"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"        return this.endTimestamp;"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    public Long getCreatedAt() {"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        return this.createdAt;"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"    public Long getUpdatedAt() {"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        return this.updatedAt;"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"    public NotificationType getNotificationType() {"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"        return this.notificationType;"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"    public NotificationTargetUser getTargetUser() {"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"        return this.targetUser;"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"    public String getTitle() {"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"        return this.title;"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"    public String getMessage() {"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"        return this.message;"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"    public boolean isShown() {"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"        return this.shown;"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"     * Hides some attributes to instructor and students without appropriate privilege."},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"    public void hideInformationForNonAdmin() {"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"        // TODO: hide information that might be admin-only: target users, isShown, (starttime and endtime)"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":82}},{"path":"src/main/java/teammates/ui/output/NotificationsData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" * The API output for a list of notifications."},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"public class NotificationsData extends ApiOutput {"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private final List\u003cNotificationData\u003e notifications;"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    public NotificationsData(List\u003cNotificationAttributes\u003e notificationAttributesList) {"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"        notifications \u003d notificationAttributesList.stream().map(NotificationData::new).collect(Collectors.toList());"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationData\u003e getNotifications() {"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"        return notifications;"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":21}},{"path":"src/main/java/teammates/ui/request/CreateNotificationRequest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.request;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationType;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":" * The request for creating a notification."},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"public class CreateNotificationRequest extends BasicRequest {"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"    private Long startTimestamp;"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"    private Long endTimestamp;"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private NotificationType notificationType;"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    private NotificationTargetUser targetUser;"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"    private String title;"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":"    private String message;"},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"    public Long getStartTimestamp() {"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"        return this.startTimestamp;"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"    public Long getEndTimestamp() {"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"        return this.endTimestamp;"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    public NotificationType getNotificationType() {"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"        return this.notificationType;"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    public NotificationTargetUser getTargetUser() {"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"        return this.targetUser;"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"    public String getTitle() {"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"        return this.title;"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"    public String getMessage() {"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"        return this.message;"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"    public void validate() throws InvalidHttpRequestBodyException {"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(startTimestamp \u003e 0L, \"Start timestamp should be more than zero\");"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(endTimestamp \u003e 0L, \"End timestamp should be more than zero\");"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(notificationType !\u003d null, \"Notification type cannot be null\");"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(targetUser !\u003d null, \"Notification target user cannot be null\");"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(title !\u003d null, \"Notification title cannot be null\");"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(message !\u003d null, \"Notification message cannot be null\");"},{"lineNumber":49,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"ziqing26":7,"Nicolascwy":43}},{"path":"src/main/java/teammates/ui/servlets/AuthServlet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.servlets;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javax.servlet.http.Cookie;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServlet;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletRequest;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.api.client.auth.oauth2.AuthorizationCodeFlow;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.api.client.http.GenericUrl;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.api.client.http.HttpTransport;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.google.api.client.http.javanet.NetHttpTransport;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.google.api.client.json.JsonFactory;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.api.client.json.gson.GsonFactory;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.google.api.client.util.store.MemoryDataStoreFactory;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.UserInfoCookie;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Common servlet class that serves user authentication-related functions."},{"lineNumber":28,"author":{"gitId":"-"},"content":" */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"abstract class AuthServlet extends HttpServlet {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final MemoryDataStoreFactory DATA_STORE_FACTORY \u003d MemoryDataStoreFactory.getDefaultInstance();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final HttpTransport HTTP_TRANSPORT \u003d new NetHttpTransport();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final JsonFactory JSON_FACTORY \u003d GsonFactory.getDefaultInstance();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SCOPES \u003d Arrays.asList(\"https://www.googleapis.com/auth/userinfo.email\");"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Gets the authorization code flow to be used across all HTTP servlet requests."},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    AuthorizationCodeFlow getAuthorizationFlow() throws IOException {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new GoogleAuthorizationCodeFlow.Builder("},{"lineNumber":41,"author":{"gitId":"-"},"content":"                HTTP_TRANSPORT, JSON_FACTORY, Config.OAUTH2_CLIENT_ID, Config.OAUTH2_CLIENT_SECRET, SCOPES)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .setDataStoreFactory(DATA_STORE_FACTORY)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .setAccessType(\"offline\")"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the redirect URI for the given HTTP servlet request."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String getRedirectUri(HttpServletRequest req) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        GenericUrl url \u003d new GenericUrl(req.getRequestURL().toString().replaceFirst(\"^http://\", \"https://\"));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        url.setRawPath(\"/oauth2callback\");"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        url.set(\"ngsw-bypass\", \"true\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return url.build();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    Cookie getLoginInvalidationCookie() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Cookie cookie \u003d new Cookie(Const.SecurityConfig.AUTH_COOKIE_NAME, \"\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        cookie.setPath(\"/\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        cookie.setSecure(!Config.isDevServer());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        cookie.setHttpOnly(true);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        cookie.setMaxAge(0);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return cookie;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    Cookie getLoginCookie(UserInfoCookie uic) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Cookie cookie \u003d new Cookie(Const.SecurityConfig.AUTH_COOKIE_NAME,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                StringHelper.encrypt(JsonUtils.toCompactJson(uic)));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        cookie.setPath(\"/\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        cookie.setSecure(!Config.isDevServer());"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        cookie.setHttpOnly(true);"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"        cookie.setMaxAge((int) Const.COOKIE_VALIDITY_PERIOD.toSeconds()); // one week"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return cookie;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Represents the state object to be persisted during the callback."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static class AuthState {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        private final String nextUrl;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        private final String sessionId;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AuthState(String nextUrl, String sessionId) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            this.nextUrl \u003d nextUrl;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            this.sessionId \u003d sessionId;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String getNextUrl() {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return nextUrl;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public String getSessionId() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return sessionId;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":1,"-":95,"Nicolascwy":1}},{"path":"src/main/java/teammates/ui/webapi/ActionFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletRequest;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpDelete;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPut;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.CronJobURIs;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.TaskQueue;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Generates the matching {@link Action} for a given URI and request method."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public final class ActionFactory {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    static final Map\u003cString, Map\u003cString, Class\u003c? extends Action\u003e\u003e\u003e ACTION_MAPPINGS \u003d new HashMap\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String GET \u003d HttpGet.METHOD_NAME;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String POST \u003d HttpPost.METHOD_NAME;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String PUT \u003d HttpPut.METHOD_NAME;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DELETE \u003d HttpDelete.METHOD_NAME;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, POST, PutDataBundleAction.class);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Even though this is a DELETE action, PUT is used as DELETE does not allow usage of response body"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, PUT, DeleteDataBundleAction.class);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE_DOCUMENTS, PUT, PutDataBundleDocumentsAction.class);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EXCEPTION, GET, AdminExceptionTestAction.class);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Even though this is a GET action, POST is used in order to get extra protection from CSRF"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        map(ResourceURIs.USER_COOKIE, POST, GetUserCookieAction.class);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ERROR_REPORT, POST, SendErrorReportAction.class);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        map(ResourceURIs.TIMEZONE, GET, GetTimeZonesAction.class);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        map(ResourceURIs.NATIONALITIES, GET, GetNationalitiesAction.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH, GET, GetAuthInfoAction.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH_REGKEY, GET, GetRegkeyValidityAction.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, GET, GetAccountAction.class);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, POST, CreateAccountAction.class);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, DELETE, DeleteAccountAction.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_DOWNGRADE, PUT, DowngradeAccountAction.class);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_RESET, PUT, ResetAccountAction.class);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, GET, GetAccountRequestAction.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, POST, CreateAccountRequestAction.class);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, DELETE, DeleteAccountRequestAction.class);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, GET, GetCourseAction.class);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, DELETE, DeleteCourseAction.class);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, POST, CreateCourseAction.class);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, PUT, UpdateCourseAction.class);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_ARCHIVE, PUT, ArchiveCourseAction.class);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, PUT, BinCourseAction.class);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, DELETE, RestoreCourseAction.class);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSES, GET, GetCoursesAction.class);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_SECTIONS, GET, GetCourseSectionNamesAction.class);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTORS, GET, GetInstructorsAction.class);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, GET, GetInstructorAction.class);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, DELETE, DeleteInstructorAction.class);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, GET, GetInstructorPrivilegeAction.class);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, PUT, UpdateInstructorPrivilegeAction.class);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, POST, CreateFeedbackResponseCommentAction.class);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, GET, GetFeedbackResponseCommentAction.class);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, PUT, UpdateFeedbackResponseCommentAction.class);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, DELETE, DeleteFeedbackResponseCommentAction.class);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESULT, GET, GetSessionResultsAction.class);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        //STUDENTS APIs"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, GET, GetStudentsAction.class);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, PUT, EnrollStudentsAction.class);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, DELETE, DeleteStudentsAction.class);"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        //STUDENT APIs"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, DELETE, DeleteStudentAction.class);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, GET, GetStudentAction.class);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, PUT, UpdateStudentAction.class);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"Nicolascwy"},"content":"        // NOTIFICATION APIs"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"        map(ResourceURIs.NOTIFICATION, GET, GetNotificationAction.class);"},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"        map(ResourceURIs.NOTIFICATION, POST, CreateNotificationAction.class);"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        //SEARCH APIs"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_INSTRUCTORS, GET, SearchInstructorsAction.class);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_STUDENTS, GET, SearchStudentsAction.class);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_ACCOUNT_REQUESTS, GET, SearchAccountRequestsAction.class);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EMAIL, GET, GenerateEmailAction.class);"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS_ONGOING, GET, GetOngoingSessionsAction.class);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_STATS, GET, GetSessionResponseStatsAction.class);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, GET, GetFeedbackSessionAction.class);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, PUT, UpdateFeedbackSessionAction.class);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, POST, CreateFeedbackSessionAction.class);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, DELETE, DeleteFeedbackSessionAction.class);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, POST, PublishFeedbackSessionAction.class);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, DELETE, UnpublishFeedbackSessionAction.class);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_SUBMITTED_GIVER_SET, GET, GetFeedbackSessionSubmittedGiverSetAction.class);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_SUBMISSION, POST, RemindFeedbackSessionSubmissionAction.class);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_RESULT, POST, RemindFeedbackSessionResultAction.class);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS, GET, GetFeedbackSessionsAction.class);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, PUT, BinFeedbackSessionAction.class);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, DELETE, RestoreFeedbackSessionAction.class);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_KEY, POST, RegenerateInstructorKeyAction.class);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_KEY, POST, RegenerateStudentKeyAction.class);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTIONS, GET, GetFeedbackQuestionsAction.class);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, POST, CreateFeedbackQuestionAction.class);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, PUT, UpdateFeedbackQuestionAction.class);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, DELETE, DeleteFeedbackQuestionAction.class);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION_RECIPIENTS, GET, GetFeedbackQuestionRecipientsAction.class);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, GET, GetFeedbackResponsesAction.class);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, PUT, SubmitFeedbackResponsesAction.class);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        map(ResourceURIs.HAS_RESPONSES, GET, GetHasResponsesAction.class);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LINKS_RECOVERY, POST, SessionLinksRecoveryAction.class);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, GET, GetCourseJoinStatusAction.class);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, PUT, JoinCourseAction.class);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN_REMIND, POST, SendJoinReminderEmailAction.class);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, GET, GetStudentProfileAction.class);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, PUT, UpdateStudentProfileAction.class);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, GET, GetStudentProfilePictureAction.class);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, POST, PostStudentProfilePictureAction.class);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, DELETE, DeleteStudentProfilePictureAction.class);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, PUT, UpdateInstructorAction.class);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, POST, CreateInstructorAction.class);"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // Logging and tracking"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LOGS, POST, CreateFeedbackSessionLogAction.class);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LOGS, GET, GetFeedbackSessionLogsAction.class);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        map(ResourceURIs.LOGS, GET, QueryLogsAction.class);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACTION_CLASS, GET, GetActionClassesAction.class);"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // Cron jobs; use GET request"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/appengine/docs/standard/java11/scheduling-jobs-with-cron-yaml"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_LOG_COMPILATION, GET, CompileLogsAction.class);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_DATASTORE_BACKUP, GET, DatastoreBackupAction.class);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_OPENING_REMINDERS, GET, FeedbackSessionOpeningRemindersAction.class);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSED_REMINDERS, GET, FeedbackSessionClosedRemindersAction.class);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSING_REMINDERS, GET, FeedbackSessionClosingRemindersAction.class);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS, GET, FeedbackSessionPublishedRemindersAction.class);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_OPENING_SOON_REMINDERS, GET,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningSoonRemindersAction.class);"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // Task queue workers; use POST request"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/tasks/docs/creating-appengine-tasks"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL, POST, FeedbackSessionPublishedEmailWorkerAction.class);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                FeedbackSessionResendPublishedEmailWorkerAction.class);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL, POST, FeedbackSessionRemindEmailWorkerAction.class);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL, POST,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindParticularUsersEmailWorkerAction.class);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                FeedbackSessionUnpublishedEmailWorkerAction.class);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        map(TaskQueue.INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL, POST, InstructorCourseJoinEmailWorkerAction.class);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        map(TaskQueue.SEND_EMAIL_WORKER_URL, POST, SendEmailWorkerAction.class);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        map(TaskQueue.STUDENT_COURSE_JOIN_EMAIL_WORKER_URL, POST, StudentCourseJoinEmailWorkerAction.class);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        map(TaskQueue.ACCOUNT_REQUEST_SEARCH_INDEXING_WORKER_URL, POST, AccountRequestSearchIndexingWorkerAction.class);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        map(TaskQueue.INSTRUCTOR_SEARCH_INDEXING_WORKER_URL, POST, InstructorSearchIndexingWorkerAction.class);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        map(TaskQueue.STUDENT_SEARCH_INDEXING_WORKER_URL, POST, StudentSearchIndexingWorkerAction.class);"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private ActionFactory() {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private static void map(String uri, String method, Class\u003c? extends Action\u003e actionClass) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ACTION_MAPPINGS.computeIfAbsent(uri, k -\u003e new HashMap\u003c\u003e()).put(method, actionClass);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns the matching {@link Action} object for the URI and method in {@code req}."},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public static Action getAction(HttpServletRequest req, String method) throws ActionMappingException {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String uri \u003d req.getRequestURI();"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (uri.contains(\";\")) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            uri \u003d uri.split(\";\")[0];"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return getAction(uri, method);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private static Action getAction(String uri, String method) throws ActionMappingException {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (!ACTION_MAPPINGS.containsKey(uri)) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Resource with URI \" + uri + \" is not found.\", HttpStatus.SC_NOT_FOUND);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Class\u003c? extends Action\u003e controllerClass \u003d"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                ACTION_MAPPINGS.getOrDefault(uri, new HashMap\u003c\u003e()).get(method);"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (controllerClass \u003d\u003d null) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Method [\" + method + \"] is not allowed for URI \" + uri + \".\","},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    HttpStatus.SC_METHOD_NOT_ALLOWED);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return controllerClass.getDeclaredConstructor().newInstance();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            assert false : \"Could not create the action for \" + uri;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":1,"-":202,"Nicolascwy":3}},{"path":"src/main/java/teammates/ui/webapi/CreateNotificationAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":"import java.util.UUID;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Logger;"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.CreateNotificationRequest;"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":" * Action: Creates a new notification banner."},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"public class CreateNotificationAction extends AdminOnlyAction {"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"    public JsonResult execute() throws InvalidHttpRequestBodyException, InvalidOperationException {"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"        CreateNotificationRequest notificationRequest \u003d getAndValidateRequestBody(CreateNotificationRequest.class);"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"        Instant startTime \u003d Instant.ofEpochMilli(notificationRequest.getStartTimestamp());"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"        Instant endTime \u003d Instant.ofEpochMilli(notificationRequest.getEndTimestamp());"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"        NotificationAttributes newNotification \u003d NotificationAttributes.builder(UUID.randomUUID().toString())"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"                .withStartTime(startTime)"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"                .withEndTime(endTime)"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"                .withType(notificationRequest.getNotificationType())"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"                .withTargetUser(notificationRequest.getTargetUser())"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"                .withTitle(notificationRequest.getTitle())"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"                .withMessage(notificationRequest.getMessage())"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"                .build();"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"            logic.createNotification(newNotification);"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"            return new JsonResult(\"Notification has been created successfully\", HttpStatus.SC_OK);"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"        } catch (InvalidParametersException e) {"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"            throw new InvalidHttpRequestBodyException(e);"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"        } catch (EntityAlreadyExistsException e) {"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"            // Should not happen since UUID is usually unique"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"            log.severe(\"Unexpected error\", e);"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":48}},{"path":"src/main/java/teammates/ui/webapi/GetNotificationAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import teammates.common.util.Const;"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import teammates.ui.output.NotificationData;"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import teammates.ui.output.NotificationsData;"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":" * Action: Get a list of notifications."},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"public class GetNotificationAction extends Action {"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    private static final String INVALID_TARGET_USER \u003d \"Target user can only be STUDENT or INSTRUCTOR.\";"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        return AuthType.PUBLIC;"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    void checkSpecificAccessControl() throws UnauthorizedAccessException {"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"        // Any user can get notifications as long as its parameters are valid"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    public JsonResult execute() {"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        String targetUserString \u003d getRequestParamValue(Const.ParamsNames.NOTIFICATION_TARGET_USER);"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"        // TODO: Use isFetchingAll to decide whether to fetch unread notification only."},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"        // boolean isFetchingAll \u003d Boolean.parseBoolean("},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"        //     getRequestParamValue(Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL));"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationAttributes\u003e notificationAttributes;"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"        if (targetUserString \u003d\u003d null \u0026\u0026 userInfo.isAdmin) {"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"            // if the admin wants to retrieve all notifications"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"            notificationAttributes \u003d logic.getAllNotifications();"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"            String targetUserErrorMessage \u003d FieldValidator.getInvalidityInfoForNotificationTargetUser(targetUserString);"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"            if (!targetUserErrorMessage.isEmpty()) {"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"                throw new InvalidHttpParameterException(targetUserErrorMessage);"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"            NotificationTargetUser targetUser \u003d NotificationTargetUser.valueOf(targetUserString);"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"            if (targetUser \u003d\u003d NotificationTargetUser.GENERAL) {"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"                throw new InvalidHttpParameterException(INVALID_TARGET_USER);"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"            notificationAttributes \u003d"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"                    logic.getActiveNotificationsByTargetUser(targetUser);"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        NotificationsData responseData \u003d new NotificationsData(notificationAttributes);"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        if (!userInfo.isAdmin) {"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"            responseData.getNotifications().forEach(NotificationData::hideInformationForNonAdmin);"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"        return new JsonResult(responseData);"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":60}},{"path":"src/test/java/teammates/common/datatransfer/UserInfoCookieTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":" * SUT: {@link UserInfoCookie}."},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"public class UserInfoCookieTest extends BaseTestCase {"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"    private UserInfoCookie uc \u003d new UserInfoCookie(\"MockId\");"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"    public void testIsValid() {"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Cookie not expired\");"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"        uc.setExpiryTime(Instant.now().plus(1, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(uc.isValid());"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Cookie expired\");"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"        uc.setExpiryTime(Instant.now().minus(1, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"        assertFalse(uc.isValid());"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Invalid Signature\");"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"        uc.setExpiryTime(Instant.now().plus(1, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"        uc.setVerificationCode(\"WrongCode\");"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"        assertFalse(uc.isValid());"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":31}},{"path":"src/test/java/teammates/ui/webapi/GetActionClassesActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.ui.output.ActionClasses;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * SUT: {@link GetActionClassesAction}."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GetActionClassesActionTest extends BaseActionTest\u003cGetActionClassesAction\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.ACTION_CLASS;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return GET;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    protected void testExecute() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cClass\u003c? extends Action\u003e\u003e expectedActionClasses \u003d Arrays.asList("},{"lineNumber":32,"author":{"gitId":"-"},"content":"                DeleteFeedbackResponseCommentAction.class,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                CreateFeedbackResponseCommentAction.class,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                GetFeedbackResponseCommentAction.class,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                UpdateFeedbackResponseCommentAction.class,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                RestoreFeedbackSessionAction.class,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                BinFeedbackSessionAction.class,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                GetCoursesAction.class,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                GetRegkeyValidityAction.class,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                PutDataBundleAction.class,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                DeleteDataBundleAction.class,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                CreateFeedbackSessionLogAction.class,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                GetFeedbackSessionLogsAction.class,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                GetInstructorPrivilegeAction.class,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                UpdateInstructorPrivilegeAction.class,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                GetFeedbackSessionsAction.class,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                GenerateEmailAction.class,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                GetFeedbackQuestionsAction.class,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                GetOngoingSessionsAction.class,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                GetStudentProfileAction.class,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                UpdateStudentProfileAction.class,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                GetNationalitiesAction.class,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                AdminExceptionTestAction.class,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                GetUserCookieAction.class,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                RemindFeedbackSessionResultAction.class,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteInstructorAction.class,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                CreateInstructorAction.class,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                GetInstructorAction.class,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                UpdateInstructorAction.class,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                ArchiveCourseAction.class,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                InstructorCourseJoinEmailWorkerAction.class,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteStudentAction.class,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                GetStudentAction.class,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                UpdateStudentAction.class,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                SearchStudentsAction.class,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindEmailWorkerAction.class,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                DeleteStudentProfilePictureAction.class,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                PostStudentProfilePictureAction.class,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                GetStudentProfilePictureAction.class,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                DeleteFeedbackSessionAction.class,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                CreateFeedbackSessionAction.class,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                GetFeedbackSessionAction.class,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                UpdateFeedbackSessionAction.class,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                FeedbackSessionClosingRemindersAction.class,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                GetTimeZonesAction.class,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindParticularUsersEmailWorkerAction.class,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                GetFeedbackResponsesAction.class,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                SubmitFeedbackResponsesAction.class,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FeedbackSessionPublishedEmailWorkerAction.class,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                FeedbackSessionClosedRemindersAction.class,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                SendErrorReportAction.class,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                GetActionClassesAction.class,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                UnpublishFeedbackSessionAction.class,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                PublishFeedbackSessionAction.class,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                GetSessionResultsAction.class,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                GetHasResponsesAction.class,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                DatastoreBackupAction.class,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                RestoreCourseAction.class,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                BinCourseAction.class,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                DeleteAccountAction.class,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                CreateAccountAction.class,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                CreateAccountRequestAction.class,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                GetAccountRequestAction.class,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                DeleteAccountRequestAction.class,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                GetAccountAction.class,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                FeedbackSessionPublishedRemindersAction.class,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                QueryLogsAction.class,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                SessionLinksRecoveryAction.class,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                SendJoinReminderEmailAction.class,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                RegenerateInstructorKeyAction.class,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                RegenerateStudentKeyAction.class,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                CompileLogsAction.class,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                GetAuthInfoAction.class,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                GetFeedbackSessionSubmittedGiverSetAction.class,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                GetCourseJoinStatusAction.class,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                JoinCourseAction.class,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                GetSessionResponseStatsAction.class,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                DeleteCourseAction.class,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                CreateCourseAction.class,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                GetCourseAction.class,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                UpdateCourseAction.class,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                GetFeedbackQuestionRecipientsAction.class,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                DowngradeAccountAction.class,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                RemindFeedbackSessionSubmissionAction.class,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                FeedbackSessionUnpublishedEmailWorkerAction.class,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                SendEmailWorkerAction.class,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                GetInstructorsAction.class,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                PutDataBundleDocumentsAction.class,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                FeedbackSessionResendPublishedEmailWorkerAction.class,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                StudentCourseJoinEmailWorkerAction.class,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                SearchInstructorsAction.class,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                GetCourseSectionNamesAction.class,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                ResetAccountAction.class,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningRemindersAction.class,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningSoonRemindersAction.class,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                DeleteStudentsAction.class,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                GetStudentsAction.class,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                EnrollStudentsAction.class,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                DeleteFeedbackQuestionAction.class,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                CreateFeedbackQuestionAction.class,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                UpdateFeedbackQuestionAction.class,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                InstructorSearchIndexingWorkerAction.class,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                StudentSearchIndexingWorkerAction.class,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                AccountRequestSearchIndexingWorkerAction.class,"},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"                SearchAccountRequestsAction.class,"},{"lineNumber":136,"author":{"gitId":"ziqing26"},"content":"                CreateNotificationAction.class,"},{"lineNumber":137,"author":{"gitId":"ziqing26"},"content":"                GetNotificationAction.class"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedActionClassesNames \u003d expectedActionClasses.stream()"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .map(Class::getSimpleName)"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .sorted()"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        GetActionClassesAction action \u003d getAction();"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        ActionClasses data \u003d (ActionClasses) result.getOutput();"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cString\u003e actualActionClasses \u003d data.getActionClasses();"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Collections.sort(actualActionClasses);"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedActionClassesNames, actualActionClasses);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    protected void testAccessControl() {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        verifyAccessibleForAdmin();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        verifyAccessibleForMaintainers();"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        verifyInaccessibleForStudents();"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        verifyInaccessibleForInstructors();"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        verifyInaccessibleWithoutLogin();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        verifyInaccessibleForUnregisteredUsers();"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":2,"-":162,"Nicolascwy":1}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"question-submission-form\" class\u003d\"card\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-header bg-primary text-white question-header\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cspan id\u003d\"question-details\"\u003e\u003cb\u003eQuestion {{ model.questionNumber }}: \u003c/b\u003e{{ model.questionBrief }}\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card mb-3\" *ngIf\u003d\"model.questionDescription\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-header\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003cb\u003eMore details\u003c/b\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"question-description\" class\u003d\"card-body\" [innerHTML]\u003d\"model.questionDescription | safeHtml\"\u003e\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body visibility-card\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cp class\u003d\"text-secondary\"\u003eOnly the following persons can see your responses: \u003c/p\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cul id\u003d\"visibility-list\" class\u003d\"text-secondary\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.SELF\"\u003eYou can see your own feedback in the results page later on.\u003c/li\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cng-container *ngFor\u003d\"let visibilityType of FeedbackVisibilityType | enumToArray\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cli *ngIf\u003d\"visibilityStateMachine.isVisibilityTypeApplicable(visibilityType) \u0026\u0026 visibilityStateMachine.hasAnyVisibilityControl(visibilityType)\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            {{ visibilityType | visibilityEntityName:model.recipientType:model.numberOfEntitiesToGiveFeedbackToSetting:model.customNumberOfEntitiesToGiveFeedbackTo }} {{ visibilityStateMachine.getVisibilityControlUnderVisibilityType(visibilityType) | visibilityCapability }}"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"!visibilityStateMachine.hasAnyVisibilityControlForAll()\"\u003eNo-one can see your responses\u003c/li\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003ctm-contribution-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\"\u003e\u003c/tm-contribution-question-instruction\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-instruction\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-instruction\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003ctm-contribution-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\"\u003e\u003c/tm-contribution-question-constraint\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-constraint\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-constraint\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003ctm-rank-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-options-question-instruction\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003ctm-msq-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-msq-question-constraint\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003ctm-rank-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-recipients-question-instruction\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-constsum-options-question-instruction\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                                 [questionDetails]\u003d\"model.questionDetails\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-constsum-recipients-question-instruction\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.NONE \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.SELF\" class\u003d\"margin-top-30px margin-bottom-0px\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"ngb-tooltip-class font-bold\" ngbTooltip\u003d\"The party being evaluated or given feedback to\"\u003eEvaluee/Recipient\u003c/span\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\" *ngIf\u003d\"model.giverType \u003d\u003d\u003d FeedbackParticipantType.TEAMS\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      Please note that you are submitting this response on behalf of your team."},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"evaluee-col col-12\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row\" *ngFor\u003d\"let recipientSubmissionFormModel of model.recipientSubmissionForms; let i \u003d index; trackBy: trackRecipientSubmissionFormByFn\"\u003e"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"col-md-5 col-xs-12 margin-top-20px\" *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.SELF \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.NONE\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"recipient-name-{{ i }}\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cb\u003e{{ getRecipientName(recipientSubmissionFormModel.recipientIdentifier) }} \u003c/b\u003e \u003cspan\u003e({{ model.recipientType | recipientTypeName:model.giverType }})\u003c/span\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row evaluee-select align-items-center\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003cselect id\u003d\"recipient-dropdown\" class\u003d\"form-control font-weight-bold col\" [ngModel]\u003d\"recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                      (ngModelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027recipientIdentifier\u0027, $event)\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003coption value\u003d\"\"\u003e\u003c/option\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003cng-container *ngFor\u003d\"let recipient of model.recipientList\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                  \u003coption *ngIf\u003d\"!isRecipientSelected(recipient) || recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier\" [ngValue]\u003d\"recipient.recipientIdentifier\"\u003e{{ recipient.recipientName }}\u003c/option\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"              \u003cdiv class\u003d\"col-auto text-left\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                ({{ model.recipientType | recipientTypeName: model.giverType }})"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"col margin-top-20px\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003ctm-contribution-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                                      [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                                                      [shouldShowHelpLink]\u003d\"i \u003d\u003d\u003d 0\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                                                      (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                                      [isDisabled]\u003d\"isDisabled\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-contribution-question-edit-answer-form\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003ctm-text-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isDisabled\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-text-question-edit-answer-form\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003ctm-rank-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                                       [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                                       (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                                       [isDisabled]\u003d\"isDisabled\"\u003e\u003c/tm-rank-options-question-edit-answer-form\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003ctm-rank-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                                          [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                                                          (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                                                          [isDisabled]\u003d\"isDisabled\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-rank-recipients-question-edit-answer-form\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003ctm-num-scale-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isDisabled\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-num-scale-question-edit-answer-form\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003ctm-mcq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MCQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isDisabled\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                                    [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-mcq-question-edit-answer-form\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003ctm-msq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isDisabled\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-msq-question-edit-answer-form\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003ctm-rubric-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RUBRIC\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                                 [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                                 (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                                 [isDisabled]\u003d\"isDisabled\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                                 [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\"\u003e\u003c/tm-rubric-question-edit-answer-form\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003c/tm-constsum-options-question-edit-answer-form\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isDisabled\"\u003e\u003c/tm-constsum-recipients-question-edit-answer-form\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"comment-section\" *ngIf\u003d\"allowedToHaveParticipantComment\" class\u003d\"col-12 margin-bottom-20px margin-top-10px indent\"\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver \u0026\u0026 recipientSubmissionFormModel.commentByGiver.originalComment else newComment\"\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              \u003ctm-comment-row [mode]\u003d\"CommentRowMode.EDIT\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"                              [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":125,"author":{"gitId":"-"},"content":"                              (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":126,"author":{"gitId":"-"},"content":"                              [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                              [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"                              [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                              (deleteCommentEvent)\u003d\"triggerDeleteCommentEvent(i)\""},{"lineNumber":130,"author":{"gitId":"-"},"content":"                              (closeEditingEvent)\u003d\"discardEditedParticipantComment(i)\""},{"lineNumber":131,"author":{"gitId":"-"},"content":"                              [isDisabled]\u003d\"isDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u003cng-template #newComment\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"              \u003cdiv style\u003d\"display: inline-block;\" [ngbTooltip]\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails) ? \u0027Give a valid response in order to comment\u0027 : \u0027\u0027\"\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-add-comment\" *ngIf\u003d\"!recipientSubmissionFormModel.commentByGiver\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        (click)\u003d\"addNewParticipantCommentToResponse(i)\""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"isDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-comment\"\u003e\u003c/i\u003e [Optional] Comment on your response"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver\"\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u003ctm-comment-row [mode]\u003d\"CommentRowMode.ADD\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                                [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                                [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                                (closeEditingEvent)\u003d\"cancelAddingNewParticipantComment(i)\""},{"lineNumber":152,"author":{"gitId":"-"},"content":"                                [isDisabled]\u003d\"isDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                  You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 constraint-margins\"\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003ctm-rank-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\""},{"lineNumber":165,"author":{"gitId":"-"},"content":"                                              [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":166,"author":{"gitId":"-"},"content":"                                              [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":167,"author":{"gitId":"-"},"content":"                                              (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-rank-recipients-question-constraint\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      \u003ctm-constsum-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":170,"author":{"gitId":"-"},"content":"                                                  [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                                                  [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                                                  (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":173,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-constsum-recipients-question-constraint\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"model.recipientList.length \u003d\u003d\u003d 0\"\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS\"\u003eThis question is for team members and you don\u0027t have any team members. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS\"\u003eThis question is for other teams in this course and this course doesn\u0027t have any other team. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS\"\u003eThis question is for other students in this course and this course doesn\u0027t have any other student. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":3,"-":179}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackNumericalScaleResponseDetails,"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackParticipantType,"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackQuestionType,"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackVisibilityType,"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { CommentBoxModule } from \u0027../comment-box/comment-box.module\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { QuestionConstraintModule } from \u0027../question-types/question-constraint/question-constraint.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  QuestionEditAnswerFormModule,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"} from \u0027../question-types/question-edit-answer-form/question-edit-answer-form.module\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { QuestionInstructionModule } from \u0027../question-types/question-instruction/question-instruction.module\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { VisibilityMessagesModule } from \u0027../visibility-messages/visibility-messages.module\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"} from \u0027./question-submission-form-model\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { QuestionSubmissionFormComponent } from \u0027./question-submission-form.component\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { RecipientTypeNamePipe } from \u0027./recipient-type-name.pipe\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"const formResponse1: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-1\u0027,"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027hans-charlie-id\u0027,"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"    answer: 5,"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"const formResponse2: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-2\u0027,"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027harris-barry-id\u0027,"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"    answer: 4,"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"const formResponse3: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-3\u0027,"},{"lineNumber":49,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027rogers-alan-id\u0027,"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"    answer: 3,"},{"lineNumber":52,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":"const formResponse4: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-4\u0027,"},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027buck-arthur-id\u0027,"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"    answer: 2,"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"const testNumscaleQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":"  feedbackQuestionId: \u0027feedback-question-id-numscale\u0027,"},{"lineNumber":67,"author":{"gitId":"Nicolascwy"},"content":"  questionNumber: 1,"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"  questionBrief: \u0027numerical scale question\u0027,"},{"lineNumber":69,"author":{"gitId":"Nicolascwy"},"content":"  questionDescription: \u0027question description\u0027,"},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":"  questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"  questionDetails: {"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"    minScale: 1,"},{"lineNumber":73,"author":{"gitId":"Nicolascwy"},"content":"    maxScale: 10,"},{"lineNumber":74,"author":{"gitId":"Nicolascwy"},"content":"    step: 1,"},{"lineNumber":75,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":76,"author":{"gitId":"Nicolascwy"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":77,"author":{"gitId":"Nicolascwy"},"content":"  recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":78,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":79,"author":{"gitId":"Nicolascwy"},"content":"  recipientList: [{ recipientName: \u0027Alan Rogers\u0027, recipientIdentifier: \u0027rogers-alan-id\u0027 },"},{"lineNumber":80,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Arthur Buck\u0027, recipientIdentifier: \u0027buck-arthur-id\u0027 },"},{"lineNumber":81,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027harris-barry-id\u0027 },"},{"lineNumber":82,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Charlie Hans\u0027, recipientIdentifier: \u0027hans-charlie-id\u0027 }],"},{"lineNumber":83,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"  recipientSubmissionForms: [formResponse1, formResponse2, formResponse3, formResponse4],"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM,"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 4,"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"  showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"  showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":91,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"describe(\u0027QuestionSubmissionFormComponent\u0027, () \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  let component: QuestionSubmissionFormComponent;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cQuestionSubmissionFormComponent\u003e;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      declarations: ["},{"lineNumber":99,"author":{"gitId":"-"},"content":"        QuestionSubmissionFormComponent,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        RecipientTypeNamePipe,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":103,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        VisibilityMessagesModule,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        QuestionInstructionModule,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        QuestionConstraintModule,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        QuestionEditAnswerFormModule,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        RichTextEditorModule,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommentBoxModule,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        NgbModule,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(QuestionSubmissionFormComponent);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":127,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":128,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should set model\u0027, () \u003d\u003e {"},{"lineNumber":129,"author":{"gitId":"Nicolascwy"},"content":"    const model: QuestionSubmissionFormModel \u003d testNumscaleQuestionSubmissionForm;"},{"lineNumber":130,"author":{"gitId":"Nicolascwy"},"content":"    component.formModel \u003d model;"},{"lineNumber":131,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":132,"author":{"gitId":"Nicolascwy"},"content":"    expect(component.model).toBe(model);"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":"  });"},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should arrange recipients according to alphabetical order of name after ngOnInit (Sorted recipient list)\u0027, () \u003d\u003e {"},{"lineNumber":136,"author":{"gitId":"Nicolascwy"},"content":"    const model: QuestionSubmissionFormModel \u003d JSON.parse(JSON.stringify(testNumscaleQuestionSubmissionForm));"},{"lineNumber":137,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":138,"author":{"gitId":"Nicolascwy"},"content":"    component.formModel \u003d model;"},{"lineNumber":139,"author":{"gitId":"Nicolascwy"},"content":"    component.ngOnInit();"},{"lineNumber":140,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":141,"author":{"gitId":"Nicolascwy"},"content":"    expect(model.recipientSubmissionForms).toEqual([formResponse3, formResponse4, formResponse2, formResponse1]);"},{"lineNumber":142,"author":{"gitId":"Nicolascwy"},"content":"  });"},{"lineNumber":143,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":144,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should arrange recipients according to alphabetical order of name after ngOnInit (Unsorted recipient list)\u0027,"},{"lineNumber":145,"author":{"gitId":"Nicolascwy"},"content":"    () \u003d\u003e {"},{"lineNumber":146,"author":{"gitId":"Nicolascwy"},"content":"      const model: QuestionSubmissionFormModel \u003d JSON.parse(JSON.stringify(testNumscaleQuestionSubmissionForm));"},{"lineNumber":147,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":148,"author":{"gitId":"Nicolascwy"},"content":"      // Change recipient list to unsorted"},{"lineNumber":149,"author":{"gitId":"Nicolascwy"},"content":"      model.recipientList \u003d [{ recipientName: \u0027Charlie Hans\u0027, recipientIdentifier: \u0027hans-charlie-id\u0027 },"},{"lineNumber":150,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Alan Rogers\u0027, recipientIdentifier: \u0027rogers-alan-id\u0027 },"},{"lineNumber":151,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027harris-barry-id\u0027 },"},{"lineNumber":152,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Arthur Buck\u0027, recipientIdentifier: \u0027buck-arthur-id\u0027 },"},{"lineNumber":153,"author":{"gitId":"Nicolascwy"},"content":"      ];"},{"lineNumber":154,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":155,"author":{"gitId":"Nicolascwy"},"content":"      component.formModel \u003d model;"},{"lineNumber":156,"author":{"gitId":"Nicolascwy"},"content":"      component.ngOnInit();"},{"lineNumber":157,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":158,"author":{"gitId":"Nicolascwy"},"content":"      expect(model.recipientSubmissionForms).toEqual([formResponse3, formResponse4, formResponse2, formResponse1]);"},{"lineNumber":159,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":160,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":56,"Nicolascwy":104}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackQuestionType, FeedbackResponseDetails, FeedbackTextQuestionDetails,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { CommentRowMode } from \u0027../comment-box/comment-row/comment-row.mode\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"} from \u0027./question-submission-form-model\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The question submission form for a question."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  selector: \u0027tm-question-submission-form\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./question-submission-form.component.html\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./question-submission-form.component.scss\u0027],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"})"},{"lineNumber":29,"author":{"gitId":"-"},"content":"export class QuestionSubmissionFormComponent implements OnInit {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode: typeof QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackParticipantType: typeof FeedbackParticipantType \u003d FeedbackParticipantType;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType: typeof FeedbackVisibilityType \u003d FeedbackVisibilityType;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  CommentRowMode: typeof CommentRowMode \u003d CommentRowMode;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  formMode: QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  isDisabled: boolean \u003d false;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  set formModel(model: QuestionSubmissionFormModel) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    this.model \u003d model;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine(model.giverType, model.recipientType);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    const visibilitySetting: { [TKey in VisibilityControl]: FeedbackVisibilityType[] } \u003d {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      SHOW_RESPONSE: model.showResponsesTo,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      SHOW_GIVER_NAME: model.showGiverNameTo,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      SHOW_RECIPIENT_NAME: model.showRecipientNameTo,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    this.allowedToHaveParticipantComment \u003d"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.isAllowedToHaveParticipantComment(this.model.questionType);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  formModelChange: EventEmitter\u003cQuestionSubmissionFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [],"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  deleteCommentEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  visibilityStateMachine: VisibilityStateMachine;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  allowedToHaveParticipantComment: boolean \u003d false;"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  constructor(private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"              private feedbackResponseService: FeedbackResponsesService) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.model.giverType, this.model.recipientType);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":102,"author":{"gitId":"Nicolascwy"},"content":"    this.sortRecipientsByName();"},{"lineNumber":103,"author":{"gitId":"Nicolascwy"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":105,"author":{"gitId":"Nicolascwy"},"content":"  /**"},{"lineNumber":106,"author":{"gitId":"Nicolascwy"},"content":"   * Sorts recipients of feedback by their name."},{"lineNumber":107,"author":{"gitId":"Nicolascwy"},"content":"   */"},{"lineNumber":108,"author":{"gitId":"Nicolascwy"},"content":"  private sortRecipientsByName(): void {"},{"lineNumber":109,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientList.sort((firstRecipient: FeedbackResponseRecipient,"},{"lineNumber":110,"author":{"gitId":"Nicolascwy"},"content":"      secondRecipient: FeedbackResponseRecipient) \u003d\u003e"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":"      firstRecipient.recipientName.localeCompare(secondRecipient.recipientName));"},{"lineNumber":112,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":113,"author":{"gitId":"Nicolascwy"},"content":"    const indexes: Map\u003cString, number\u003e \u003d new Map();"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientList.forEach((recipient: FeedbackResponseRecipient, index: number) \u003d\u003e {"},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":"      indexes.set(recipient.recipientIdentifier, index);"},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":117,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":118,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientSubmissionForms.sort((firstRecipient: FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":"      secondRecipient: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"Nicolascwy"},"content":"      const firstRecipientIndex: number \u003d indexes.get(firstRecipient.recipientIdentifier) || 0;"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"      const secondRecipientIndex: number \u003d indexes.get(secondRecipient.recipientIdentifier) || 0;"},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"      return firstRecipientIndex - secondRecipientIndex;"},{"lineNumber":124,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":128,"author":{"gitId":"-"},"content":"   * Tracks submission form for each recipient by the index in the array."},{"lineNumber":129,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":130,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":131,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  trackRecipientSubmissionFormByFn(index: number): any {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    return index;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Gets recipient name in {@code FIXED_RECIPIENT} mode."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  getRecipientName(recipientIdentifier: string): string {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    const recipient: FeedbackResponseRecipient | undefined \u003d"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        this.model.recipientList.find("},{"lineNumber":142,"author":{"gitId":"-"},"content":"            (r: FeedbackResponseRecipient) \u003d\u003e r.recipientIdentifier \u003d\u003d\u003d recipientIdentifier);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    return recipient ? recipient.recipientName : \u0027Unknown\u0027;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   * Checks whether the recipient is already selected in {@code FLEXIBLE_RECIPIENT} mode."},{"lineNumber":148,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  isRecipientSelected(recipient: FeedbackResponseRecipient): boolean {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    return this.model.recipientSubmissionForms.some("},{"lineNumber":151,"author":{"gitId":"-"},"content":"        (recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"   * Triggers the change of the recipient submission form."},{"lineNumber":157,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  triggerRecipientSubmissionFormChange(index: number, field: string, data: any): void {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice();"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    recipientSubmissionForms[index] \u003d {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      ...recipientSubmissionForms[index],"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      [field]: data,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   * Triggers deletion of a participant comment associated with the response."},{"lineNumber":174,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  triggerDeleteCommentEvent(index: number): void {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    this.deleteCommentEvent.emit(index);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"   * Add new participant comment to response with index."},{"lineNumber":181,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  addNewParticipantCommentToResponse(index: number): void {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"      isEditing: true,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   * Cancel adding new participant comment."},{"lineNumber":194,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  cancelAddingNewParticipantComment(index: number): void {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, null);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   * Discards the current editing and restore the original comment."},{"lineNumber":201,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  discardEditedParticipantComment(index: number): void {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    const commentModel: CommentRowModel | undefined \u003d this.model.recipientSubmissionForms[index].commentByGiver;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    if (!commentModel || !commentModel.originalComment) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"          ...commentModel,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"          commentEditFormModel: {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            commentText: commentModel.originalComment.commentText,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          isEditing: false,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   * Checks whether the response is empty or not."},{"lineNumber":219,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  isFeedbackResponseDetailsEmpty(responseDetails: FeedbackResponseDetails): boolean {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    return this.feedbackResponseService.isFeedbackResponseDetailsEmpty("},{"lineNumber":222,"author":{"gitId":"-"},"content":"        this.model.questionType, responseDetails);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":226,"author":{"gitId":"-"},"content":"   * Updates validity of all responses in a question."},{"lineNumber":227,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  updateValidity(isValid: boolean): void {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    if (this.model.recipientSubmissionForms.length \u003d\u003d\u003d 0) { return; }"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice().map("},{"lineNumber":232,"author":{"gitId":"-"},"content":"            (model: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e ({ ...model, isValid }));"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":215,"Nicolascwy":23}},{"path":"src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"!isAllFormsNotAnswered\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isInsufficientPointsDistributed\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Distribute the remaining {{ totalRequiredPoints - totalAnsweredPoints }} points.\u003c/p\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isPointsOverAllocated\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Remove the extra  {{ totalAnsweredPoints - totalRequiredPoints }} points allocated.\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isAllPointsDistributed\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      All points distributed!\u003c/p\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"    \u003cp *ngIf\u003d\"isAnyPointsNegative\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"      Points cannot be negative!\u003c/p\u003e"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isWronglyAllUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      Multiple recipients are given same points!\u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isCorrectlyAllUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      All allocated points are different!\u003c/p\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isWronglySomeUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      All recipients are given {{ allAnswers[0] }} points. Please allocate different points to at least one recipient.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isCorrectlySomeUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      At least one recipient has been allocated different number of points.\u003c/p\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":3,"-":24}},{"path":"src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { QuestionConstraintComponent } from \u0027./question-constraint.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Constraint of constsum recipients question."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  selector: \u0027tm-constsum-recipients-question-constraint\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./constsum-recipients-question-constraint.component.html\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./constsum-recipients-question-constraint.component.scss\u0027],"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class ConstsumRecipientsQuestionConstraintComponent"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    extends QuestionConstraintComponent\u003cFeedbackConstantSumQuestionDetails\u003e {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType: typeof FeedbackConstantSumDistributePointsType \u003d"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      FeedbackConstantSumDistributePointsType;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    super(DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS());"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * Checks if all forms are not answered."},{"lineNumber":36,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  get isAllFormsNotAnswered(): boolean {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    return this.recipientSubmissionForms.every((form: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      const details: FeedbackConstantSumResponseDetails \u003d form.responseDetails as FeedbackConstantSumResponseDetails;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      return details.answers.length \u003d\u003d\u003d 0;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   * Gets total required points."},{"lineNumber":46,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  get totalRequiredPoints(): number {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (this.questionDetails.pointsPerOption) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return this.questionDetails.points * this.recipientSubmissionForms.length;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    return this.questionDetails.points;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * Get answers for the recipients."},{"lineNumber":56,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  get allAnswers(): number[] {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    return this.recipientSubmissionForms.map("},{"lineNumber":59,"author":{"gitId":"-"},"content":"        (form: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          const details: FeedbackConstantSumResponseDetails \u003d"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              form.responseDetails as FeedbackConstantSumResponseDetails;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          if (details.answers.length \u003d\u003d\u003d 0) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          return details.answers[0];"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * Gets total answer points."},{"lineNumber":71,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  get totalAnsweredPoints(): number {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    return this.allAnswers.reduce((total: number, curr: number) \u003d\u003e total + curr, 0);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * Checks if all points are distributed unevenly."},{"lineNumber":78,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  get isAllPointsUneven(): boolean {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    this.allAnswers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    return set.size \u003d\u003d\u003d this.allAnswers.length;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * Checks if some points are distributed unevenly."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  get isSomePointsUneven(): boolean {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    if (this.allAnswers.length \u003d\u003d\u003d 1) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.allAnswers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    return set.size !\u003d\u003d 1;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * Checks if all points have been distributed."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  get isAllPointsDistributed(): boolean {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003d\u003d\u003d this.totalRequiredPoints;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * Checks if the points have been insufficiently distributed."},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  get isInsufficientPointsDistributed(): boolean {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003c this.totalRequiredPoints;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Checks if the points have been over allocated."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  get isPointsOverAllocated(): boolean {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003e this.totalRequiredPoints;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":"   * Checks if any of the points are negative."},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":124,"author":{"gitId":"zhaojj2209"},"content":"  get isAnyPointsNegative(): boolean {"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":"    return this.allAnswers.reduce((isNegative: boolean, curr: number) \u003d\u003e isNegative || (curr \u003c 0), false);"},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * Returns true if the question requires uneven distribution but the points are not unevenly distributed."},{"lineNumber":130,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  get isWronglyAllUneven(): boolean {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        \u0026\u0026 !this.isAllPointsUneven;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Returns true if the question requires uneven distribution and the points are unevenly distributed."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  get isCorrectlyAllUneven(): boolean {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u0026\u0026 this.isAllPointsUneven;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   * Returns true if the question requires some uneven distribution but points are not unevenly distributed for some."},{"lineNumber":146,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  get isWronglySomeUneven(): boolean {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u0026\u0026 !this.isSomePointsUneven;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * Returns true if the question requires some uneven distribution and points are unevenly distributed for some."},{"lineNumber":154,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  get isCorrectlySomeUneven(): boolean {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        \u0026\u0026 this.isSomePointsUneven;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  get isValid(): boolean {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    return this.isAllPointsDistributed \u0026\u0026 !this.isAnyPointsNegative"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        \u0026\u0026 (this.isCorrectlyAllUneven || this.isCorrectlySomeUneven"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        || this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.NONE);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":7,"-":158}},{"path":"src/web/app/components/question-types/question-constraint/rank-recipients-question-constraint.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"!questionDetails.areDuplicatesAllowed \u0026\u0026 isSameRanksAssigned\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"    The same rank should not be given multiple times.\u003c/p\u003e"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isNoRecipientRanked\" class\u003d\"text-info\"\u003e\u003cspan class\u003d\"fa fa-info-circle\"\u003e\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"    Please rank the above recipients.\u003c/p\u003e"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMinRecipientsEnabled \u0026\u0026 isRecipientsRankedLessThanMin\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"    Rank at least {{ questionDetails.minOptionsToBeRanked }} recipients.\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMaxRecipientsEnabled \u0026\u0026 isRecipientsRankedMoreThanMax\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"    Rank no more than {{questionDetails.maxOptionsToBeRanked}} recipients.\u003c/p\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":8,"-":2}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-options-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row text-left\" *ngFor\u003d\"let option of questionDetails.constSumOptions; let i \u003d index;\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-5 col-xs-12 text-md-right col-form-label\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cstrong\u003e{{ option }}\u003c/strong\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-7 col-xs-12 text-md-left\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cinput type\u003d\"number\" class\u003d\"form-control\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"           [ngModel]\u003d\"i \u003c responseDetails.answers.length ? responseDetails.answers[i] : \u0027\u0027\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"           (ngModelChange)\u003d\"triggerResponse(i, $event)\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"           [disabled]\u003d\"isDisabled\""},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"           min\u003d\"0\" step\u003d\"1\""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"           tmDisableWheel\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row\" *ngIf\u003d\"responseDetails.answers.length !\u003d\u003d 0\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12 col-sm-5 offset-sm-2\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" (click)\u003d\"triggerResponseDetailsChange(\u0027answers\u0027, [])\" [disabled]\u003d\"isDisabled\"\u003eClear Points\u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"responseDetails.answers.length !\u003d\u003d 0\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003c totalRequiredPoints\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Distribute the remaining {{ totalRequiredPoints - totalAnsweredPoints }} points.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003e totalRequiredPoints\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Remove the extra  {{ totalAnsweredPoints - totalRequiredPoints }} points allocated.\u003c/p\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003d\u003d\u003d totalRequiredPoints\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      All points distributed!\u003c/p\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"    \u003cp *ngIf\u003d\"isAnyPointsNegative\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":"      Points cannot be negative!\u003c/p\u003e"},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY \u0026\u0026 !isAllPointsUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      Multiple options are given same points!\u003c/p\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY \u0026\u0026 isAllPointsUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      All allocated points are different!\u003c/p\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY \u0026\u0026 !isSomePointsUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      All options are given {{ responseDetails.answers[0] }} points. Please allocate different points to at least one option.\u003c/p\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY \u0026\u0026 isSomePointsUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      At least one option has been allocated different number of points.\u003c/p\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":3,"fsgmhoward":4,"-":38}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-options-question-edit-answer-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_RESPONSE_DETAILS,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { QuestionEditAnswerFormComponent } from \u0027./question-edit-answer-form\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The constsum question options submission form for a recipient."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027tm-constsum-options-question-edit-answer-form\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./constsum-options-question-edit-answer-form.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./constsum-options-question-edit-answer-form.component.scss\u0027],"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class ConstsumOptionsQuestionEditAnswerFormComponent"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    extends QuestionEditAnswerFormComponent\u003cFeedbackConstantSumQuestionDetails, FeedbackConstantSumResponseDetails\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType: typeof FeedbackConstantSumDistributePointsType \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      FeedbackConstantSumDistributePointsType;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    super(DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS(), DEFAULT_CONSTSUM_RESPONSE_DETAILS());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * Assigns a point to the option specified by index."},{"lineNumber":34,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  triggerResponse(index: number, event: number): void {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    let newAnswers: number[] \u003d this.responseDetails.answers.slice();"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    if (newAnswers.length !\u003d\u003d this.questionDetails.constSumOptions.length) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      // initialize answers array on the fly"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      newAnswers \u003d Array(this.questionDetails.constSumOptions.length).fill(0);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    newAnswers[index] \u003d event ? Math.ceil(event) : 0;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.triggerResponseDetailsChange(\u0027answers\u0027, newAnswers);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * Gets total required points."},{"lineNumber":49,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  get totalRequiredPoints(): number {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    if (this.questionDetails.pointsPerOption) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      return this.questionDetails.points * this.questionDetails.constSumOptions.length;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    return this.questionDetails.points;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Gets total answer points."},{"lineNumber":59,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  get totalAnsweredPoints(): number {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    return this.responseDetails.answers.reduce((total: number, curr: number) \u003d\u003e total + curr, 0);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * Checks if all points are distributed unevenly."},{"lineNumber":66,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  get isAllPointsUneven(): boolean {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.responseDetails.answers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    return set.size \u003d\u003d\u003d this.responseDetails.answers.length;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * Checks if some points are distributed unevenly."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  get isSomePointsUneven(): boolean {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    if (this.responseDetails.answers.length \u003d\u003d\u003d 1) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    this.responseDetails.answers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    return set.size !\u003d\u003d 1;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":"   * Checks if any of the points are negative."},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":"  get isAnyPointsNegative(): boolean {"},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"    return this.responseDetails.answers.reduce((isNegative: boolean, curr: number) \u003d\u003e isNegative || (curr \u003c 0), false);"},{"lineNumber":93,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":7,"-":88}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-recipients-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"      \u003cinput type\u003d\"number\" class\u003d\"form-control\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"             [ngModel]\u003d\"responseDetails.answers.length \u003d\u003d\u003d 1 ? responseDetails.answers[0] : \u0027\u0027\""},{"lineNumber":5,"author":{"gitId":"-"},"content":"             (ngModelChange)\u003d\"triggerResponse($event)\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"             [disabled]\u003d\"isDisabled\""},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"             min\u003d\"0\" step\u003d\"1\""},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"             tmDisableWheel\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":4,"-":6}},{"path":"src/web/app/components/question-types/question-edit-answer-form/num-scale-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-row text-left\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-md-2 col-xs-5\"\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"    \u003cinput type\u003d\"number\" class\u003d\"form-control\" min\u003d\"{{ questionDetails.minScale }}\" max\u003d\"{{ questionDetails.maxScale }}\" step\u003d\"{{ questionDetails.step }}\" tmDisableWheel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"           [ngModel]\u003d\"responseDetails.answer \u003d\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED ? \u0027\u0027 : responseDetails.answer\" (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"possible-values\" class\u003d\"col-md-9 col-xs-6 text-secondary\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Possible values: {{ possibleValues }}"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row mt-1\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"!isValidPossibleValue(responseDetails.answer) \u0026\u0026 responseDetails.answer !\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED\" class\u003d\"text-danger\"\u003eThe scale entered is not a possible value.\u003c/p\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"responseDetails.answer \u003d\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED\" class\u003d\"text-info\"\u003ePlease enter a scale number.\u003c/p\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":15}},{"path":"src/web/app/components/question-types/question-edit-answer-form/question-edit-answer-form.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../teammates-common/teammates-common.module\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import { WheelDisablerModule } from \u0027../../wheel-disabler/wheel-disabler.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ConstsumOptionsQuestionEditAnswerFormComponent } from \u0027./constsum-options-question-edit-answer-form.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  ConstsumRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027./constsum-recipients-question-edit-answer-form.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ContributionPointDescriptionPipe } from \u0027./contribution-point-description.pipe\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { ContributionQuestionEditAnswerFormComponent } from \u0027./contribution-question-edit-answer-form.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { McqQuestionEditAnswerFormComponent } from \u0027./mcq-question-edit-answer-form.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { MsqQuestionEditAnswerFormComponent } from \u0027./msq-question-edit-answer-form.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { NumScaleQuestionEditAnswerFormComponent } from \u0027./num-scale-question-edit-answer-form.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { RankOptionsQuestionEditAnswerFormComponent } from \u0027./rank-options-question-edit-answer-form.component\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { RankRecipientsQuestionEditAnswerFormComponent } from \u0027./rank-recipients-question-edit-answer-form.component\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { RubricQuestionEditAnswerFormComponent } from \u0027./rubric-question-edit-answer-form.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { TextQuestionEditAnswerFormComponent } from \u0027./text-question-edit-answer-form.component\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Module for all different types of question edit answer forms."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ContributionQuestionEditAnswerFormComponent,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    TextQuestionEditAnswerFormComponent,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    McqQuestionEditAnswerFormComponent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    NumScaleQuestionEditAnswerFormComponent,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ContributionPointDescriptionPipe,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    MsqQuestionEditAnswerFormComponent,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    RankOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    RankRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    RubricQuestionEditAnswerFormComponent,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ConstsumOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ConstsumRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ContributionQuestionEditAnswerFormComponent,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    TextQuestionEditAnswerFormComponent,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    McqQuestionEditAnswerFormComponent,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    NumScaleQuestionEditAnswerFormComponent,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ContributionPointDescriptionPipe,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    MsqQuestionEditAnswerFormComponent,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    RankOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    RankRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    RubricQuestionEditAnswerFormComponent,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    ConstsumOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    ConstsumRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":52,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    FormsModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    RichTextEditorModule,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    TeammatesCommonModule,"},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"    WheelDisablerModule,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":58,"author":{"gitId":"-"},"content":"})"},{"lineNumber":59,"author":{"gitId":"-"},"content":"export class QuestionEditAnswerFormModule { }"}],"authorContributionMap":{"fsgmhoward":2,"-":57}},{"path":"src/web/app/components/question-types/question-edit-answer-form/rank-options-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row text-left\" *ngFor\u003d\"let num of questionDetails.options; let i \u003d index;\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-5 col-xs-12 text-md-right col-form-label\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cstrong\u003e{{ questionDetails.options[i] }}\u003c/strong\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-7 col-xs-12 text-md-left\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"responseDetails.answers[i]\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"            (ngModelChange)\u003d\"triggerResponse(i, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003coption [ngValue]\u003d\"RANK_OPTIONS_ANSWER_NOT_SUBMITTED\"\u003e\u003c/option\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003coption *ngFor\u003d\"let rank of ranksToBeAssigned\" [ngValue]\u003d\"rank\"\u003e{{ rank }}\u003c/option\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/select\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv\u003e"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"!questionDetails.areDuplicatesAllowed \u0026\u0026 isSameRanksAssigned\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"    The same rank should not be given multiple times.\u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isNoOptionRanked\" class\u003d\"text-info\"\u003e\u003cspan class\u003d\"fa fa-info-circle\"\u003e\u003c/span\u003e"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"    Please rank the above options.\u003c/p\u003e"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMinOptionsEnabled \u0026\u0026 isOptionsRankedLessThanMin\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"    You need to rank at least {{ questionDetails.minOptionsToBeRanked }} options.\u003c/p\u003e"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMaxOptionsEnabled \u0026\u0026 isOptionsRankedMoreThanMax\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    Rank no more than {{questionDetails.maxOptionsToBeRanked}} options.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":11,"-":12}},{"path":"src/web/app/components/question-types/question-edit-answer-form/rank-recipients-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv class\u003d\"margin-bottom-15px\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"responseDetails.answer\""},{"lineNumber":3,"author":{"gitId":"-"},"content":"          (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003coption [ngValue]\u003d\"RANK_RECIPIENTS_ANSWER_NOT_SUBMITTED\"\u003e\u003c/option\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003coption *ngFor\u003d\"let rank of ranksToBeAssigned\" [ngValue]\u003d\"rank\"\u003e{{ rank }}\u003c/option\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/select\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":6}},{"path":"src/web/app/components/sessions-table/send-reminders-to-respondents-modal/send-reminders-to-respondents-modal.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  InstructorListInfoTableRowModel,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  StudentListInfoTableRowModel,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Send reminders to respondents modal."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  selector: \u0027tm-send-reminders-to-respondents-modal\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./send-reminders-to-respondents-modal.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./send-reminders-to-respondents-modal.component.scss\u0027],"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class SendRemindersToRespondentsModalComponent {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  // values below will be injected by other component"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  studentListInfoTableRowModels: StudentListInfoTableRowModel[] \u003d [];"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  instructorListInfoTableRowModels: InstructorListInfoTableRowModel[] \u003d [];"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  constructor(public activeModal: NgbActiveModal) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * Changes selection state for all students."},{"lineNumber":29,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllStudentsHandler(shouldSelect: boolean): void {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.studentListInfoTableRowModels.forEach((model: StudentListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      model.isSelected \u003d shouldSelect;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * Changes selection state for all yet to submit students."},{"lineNumber":38,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllYetSubmittedStudentsHandler(shouldSelect: boolean): void {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    this.studentListInfoTableRowModels.forEach((model: StudentListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      if (!model.hasSubmittedSession) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        model.isSelected \u003d shouldSelect;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * Changes selection state for all instructors."},{"lineNumber":49,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllInstructorsHandler(shouldSelect: boolean): void {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.instructorListInfoTableRowModels.forEach((model: InstructorListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      model.isSelected \u003d shouldSelect;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * Changes selection state for all yet to submit instructors."},{"lineNumber":58,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllYetSubmittedInstructorsHandler(shouldSelect: boolean): void {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.instructorListInfoTableRowModels.forEach((model: InstructorListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      if (!model.hasSubmittedSession) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.isSelected \u003d shouldSelect;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * Collates a list of selected students with selected status."},{"lineNumber":69,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  collateRespondentsToSendHandler(): (StudentListInfoTableRowModel | InstructorListInfoTableRowModel)[] {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    const studentsToSend: (StudentListInfoTableRowModel | InstructorListInfoTableRowModel)[] \u003d"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.studentListInfoTableRowModels.map("},{"lineNumber":73,"author":{"gitId":"-"},"content":"            (model: StudentListInfoTableRowModel) \u003d\u003e ({ ...model }))"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            .filter((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    const instructorsToSend: (StudentListInfoTableRowModel | InstructorListInfoTableRowModel)[] \u003d"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.instructorListInfoTableRowModels.map("},{"lineNumber":77,"author":{"gitId":"-"},"content":"            (model: InstructorListInfoTableRowModel) \u003d\u003e ({ ...model }))"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            .filter((model: InstructorListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    return studentsToSend.concat(instructorsToSend);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * Checks whether all students are selected."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  get isAllStudentsSelected(): boolean {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return this.studentListInfoTableRowModels.every((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * Checks whether all yet to submit students are selected."},{"lineNumber":91,"author":{"gitId":"Nicolascwy"},"content":"   *"},{"lineNumber":92,"author":{"gitId":"Nicolascwy"},"content":"   * If all students have submitted it will return false."},{"lineNumber":93,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  get isAllYetToSubmitStudentsSelected(): boolean {"},{"lineNumber":95,"author":{"gitId":"Nicolascwy"},"content":"    const nonSubmitters: StudentListInfoTableRowModel[] \u003d this.studentListInfoTableRowModels"},{"lineNumber":96,"author":{"gitId":"Nicolascwy"},"content":"      .filter((model: StudentListInfoTableRowModel) \u003d\u003e !model.hasSubmittedSession);"},{"lineNumber":97,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":98,"author":{"gitId":"Nicolascwy"},"content":"    return nonSubmitters.length \u003e 0 \u0026\u0026 nonSubmitters.every((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":102,"author":{"gitId":"-"},"content":"   * Checks whether all instructors are selected."},{"lineNumber":103,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  get isAllInstructorsSelected(): boolean {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    return this.instructorListInfoTableRowModels.every((model: InstructorListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   * Checks whether all yet to submit instructors are selected."},{"lineNumber":110,"author":{"gitId":"Nicolascwy"},"content":"   *"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":"   * If all instructors have submitted it will return false."},{"lineNumber":112,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  get isAllYetToSubmitInstructorsSelected(): boolean {"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"    const nonSubmitters: InstructorListInfoTableRowModel[] \u003d this.instructorListInfoTableRowModels"},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":"      .filter((model: InstructorListInfoTableRowModel) \u003d\u003e !model.hasSubmittedSession);"},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    return nonSubmitters.length \u003e 0"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u0026\u0026 nonSubmitters.every((model: InstructorListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":109,"Nicolascwy":11}},{"path":"src/web/app/components/sessions-table/sessions-table.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"sessionsTableRowModels.length \u003e 0; else noSessionMessage\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003ctable id\u003d\"sessions-table\" class\u003d\"table table-responsive-lg table-striped table-bordered margin-bottom-0\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cthead\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003ctr [ngClass]\u003d\"{ \u0027bg-primary text-white\u0027: headerColorScheme \u003d\u003d\u003d SessionsTableHeaderColorScheme.BLUE }\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003cth id\u003d\"sort-course-id\" class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.COURSE_ID)\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.COURSE_ID)\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          Course ID"},{"lineNumber":8,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cth id\u003d\"sort-session-name\" class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.SESSION_NAME)\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          Session Name"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_NAME \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_NAME \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.SESSION_START_DATE)\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.START_DATE)\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          Start Date"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_START_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_START_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.SESSION_END_DATE)\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.END_DATE)\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          End Date"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_END_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_END_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cth\u003eSubmissions\u003c/th\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cth\u003eResponses\u003c/th\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Number of students submitted / Class size\" container\u003d\"body\"\u003e\u003cspan \u003eResponse Rate\u003c/span\u003e\u003c/th\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/thead\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003ctbody\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003ctr *ngFor\u003d\"let sessionsTableRowModel of sessionsTableRowModels; let idx \u003d index\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003ctd class\u003d\"text-break\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.COURSE_ID)\"\u003e{{ sessionsTableRowModel.feedbackSession.courseId }}\u003c/td\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003ctd class\u003d\"text-break\"\u003e{{ sessionsTableRowModel.feedbackSession.feedbackSessionName }}\u003c/td\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003ctd *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.START_DATE)\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.submissionStartTimestamp | formatDateDetail: sessionsTableRowModel.feedbackSession.timeZone\" \u003e{{ sessionsTableRowModel.feedbackSession.submissionStartTimestamp | formatDateBrief: sessionsTableRowModel.feedbackSession.timeZone }}\u003c/span\u003e\u003c/td\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003ctd *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.END_DATE)\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.submissionEndTimestamp | formatDateDetail: sessionsTableRowModel.feedbackSession.timeZone\"\u003e{{ sessionsTableRowModel.feedbackSession.submissionEndTimestamp | formatDateBrief: sessionsTableRowModel.feedbackSession.timeZone }}\u003c/span\u003e\u003c/td\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003ctd\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus | submissionStatusTooltip\"\u003e{{ sessionsTableRowModel.feedbackSession.submissionStatus | submissionStatusName }}\u003c/span\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003ctd\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.publishStatus | publishStatusTooltip\"\u003e{{ sessionsTableRowModel.feedbackSession.publishStatus | publishStatusName }}\u003c/span\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003ctd\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003ca id\u003d\"show-response-rate-{{ idx }}\" href\u003d\"#\" *ngIf\u003d\"sessionsTableRowModel.responseRate.length \u003d\u003d\u003d 0 \u0026\u0026 !sessionsTableRowModel.isLoadingResponseRate\" (click)\u003d\"loadResponseRateEvent.emit(idx); $event.preventDefault()\"\u003eShow\u003c/a\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"response-rate-{{ idx }}\" *ngIf\u003d\"sessionsTableRowModel.responseRate.length !\u003d\u003d 0\"\u003e{{ sessionsTableRowModel.responseRate }}\u003c/div\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003ctm-ajax-loading *ngIf\u003d\"sessionsTableRowModel.isLoadingResponseRate\" [useBlueSpinner]\u003d\"true\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003ctd class\u003d\"actions-cell\"\u003e"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"d-flex\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003ca *ngIf\u003d\"sessionsTableRowModel.instructorPrivilege.canModifySession; else editSessionBtn\" tmRouterLink\u003d\"/web/instructor/sessions/edit\" [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName, editingMode: true }\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003cng-container *ngTemplateOutlet\u003d\"editSessionBtn\"\u003e\u003c/ng-container\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cng-template #editSessionBtn\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canModifySession\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                Edit"},{"lineNumber":72,"author":{"gitId":"-"},"content":"              \u003c/button\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-soft-delete-{{ idx }}\" type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" (click)\u003d\"moveSessionToRecycleBin(idx)\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canModifySession\"\u003eDelete\u003c/button\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-copy-{{ idx }}\" type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" ngbTooltip\u003d\"Copy feedback session details\" (click)\u003d\"copySession(idx)\"\u003eCopy\u003c/button\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003ca *ngIf\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN \u0026\u0026 sessionsTableRowModel.instructorPrivilege.canSubmitSessionInSections; else submitBtn\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"              tmRouterLink\u003d\"/web/instructor/sessions/submission\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"              [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName }\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003cng-container *ngTemplateOutlet\u003d\"submitBtn\"\u003e\u003c/ng-container\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \u003cng-template #submitBtn\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" ngbTooltip\u003d\"Start submitting feedback\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus !\u003d\u003d FeedbackSessionSubmissionStatus.OPEN"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        || !sessionsTableRowModel.instructorPrivilege.canSubmitSessionInSections\" (click)\u003d\"submitSessionAsInstructorEvent.emit(idx)\"\u003eSubmit\u003c/button\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cdiv ngbDropdown class\u003d\"d-inline-block\" container\u003d\"body\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"btn-results-{{ idx }}\" class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003eResults\u003c/button\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn dropdown-item clickable\" [ngClass]\u003d\"{disabled: !sessionsTableRowModel.instructorPrivilege.canViewSessionInSections}\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        tmRouterLink\u003d\"/web/instructor/sessions/result\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName }\"\u003eView Results (from/to me)\u003c/a\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn dropdown-item clickable\" [ngClass]\u003d\"{disabled: !sessionsTableRowModel.instructorPrivilege.canViewSessionInSections}\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                        tmRouterLink\u003d\"/web/instructor/sessions/report\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                        [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName }\"\u003eView Results (course-wide)\u003c/a\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-unpublish-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" ngbTooltip\u003d\"Make responses no longer visible\" placement\u003d\"left\" container\u003d\"body\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        *ngIf\u003d\"![FeedbackSessionSubmissionStatus.NOT_VISIBLE, FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN].includes(sessionsTableRowModel.feedbackSession.submissionStatus)"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                          \u0026\u0026 sessionsTableRowModel.feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED; else publishButton\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canModifySession\" (click)\u003d\"unpublishSession(idx)\"\u003eUnpublish Results\u003c/button\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u003cng-template #publishButton\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"btn-publish-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" [disabled]\u003d\"[FeedbackSessionSubmissionStatus.NOT_VISIBLE, FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN].includes(sessionsTableRowModel.feedbackSession.submissionStatus)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    || sessionsTableRowModel.feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED || !sessionsTableRowModel.instructorPrivilege.canModifySession\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                          ngbTooltip\u003d\"Make session responses available for viewing\" placement\u003d\"left\" container\u003d\"body\" (click)\u003d\"publishSession(idx)\"\u003ePublish Results\u003c/button\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u003c/ng-template\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-resend-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" *ngIf\u003d\"sessionsTableRowModel.feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED\" (click)\u003d\"remindResultsLinkToStudent(idx)\"\u003eResend link to view results\u003c/button\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-download-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" (click)\u003d\"downloadSessionResults(idx)\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canViewSessionInSections\"\u003eDownload Results\u003c/button\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003cdiv ngbDropdown class\u003d\"d-inline-block\" ngbTooltip\u003d\"Send e-mails to remind students and instructors who have not submitted their feedbacks to do so\"\u003e"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":"              \u003cbutton ngbDropdownToggle id\u003d\"btn-remind-{{ idx }}\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus !\u003d\u003d FeedbackSessionSubmissionStatus.OPEN ||"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                            !sessionsTableRowModel.instructorPrivilege.canModifySession\"\u003e"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"                \u003cdiv class\u003d\"d-inline-flex\"\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                  \u003cspan\u003eRemind\u003c/span\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                  \u003cdiv class\u003d\"padding-left-7px\"\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    \u003ctm-ajax-loading [color]\u003d\"\u0027#000000\u0027\" *ngIf\u003d\"isSendReminderLoading \u0026\u0026 rowClicked \u003d\u003d\u003d idx\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                  \u003c/div\u003e"},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":"                \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              \u003c/button\u003e"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"              \u003cdiv ngbDropdownMenu\u003e"},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":"                \u003cbutton id\u003d\"btn-remind-all-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" (click)\u003d\"sendRemindersToAllNonSubmitters(idx); setRowClicked(idx)\"\u003eRemind all non-submitters\u003c/button\u003e"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"                \u003cbutton id\u003d\"btn-remind-selected-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" (click)\u003d\"sendRemindersToSelectedNonSubmitters(idx); setRowClicked(idx)\" \u003eSelect non-submitters to remind\u003c/button\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":125,"author":{"gitId":"Nicolascwy"},"content":"            \u003c/div\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003c/tbody\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    \u003c/table\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cng-template #noSessionMessage\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"no-session-message\"\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    There are no feedback sessions in this course."},{"lineNumber":137,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/ng-template\u003e"}],"authorContributionMap":{"-":130,"Nicolascwy":8}},{"path":"src/web/app/components/sessions-table/sessions-table.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Course, FeedbackSessionPublishStatus, FeedbackSessionSubmissionStatus } from \u0027../../../types/api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { CopySessionModalResult } from \u0027../copy-session-modal/copy-session-modal-model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CopySessionModalComponent } from \u0027../copy-session-modal/copy-session-modal.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../simple-modal/simple-modal-type\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  CopySessionResult,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  SessionsTableColumn,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  SessionsTableRowModel,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"} from \u0027./sessions-table-model\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A table to display a list of feedback sessions."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  selector: \u0027tm-sessions-table\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./sessions-table.component.html\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./sessions-table.component.scss\u0027],"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class SessionsTableComponent {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  SortOrder: typeof SortOrder \u003d SortOrder;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus: typeof FeedbackSessionPublishStatus \u003d FeedbackSessionPublishStatus;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  // variable"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  rowClicked: number \u003d -1;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  sessionsTableRowModels: SessionsTableRowModel[] \u003d [];"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  courseCandidates: Course[] \u003d [];"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  columnsToShow: SessionsTableColumn[] \u003d [SessionsTableColumn.COURSE_ID];"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortBy: SortBy \u003d SortBy.NONE;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  headerColorScheme: SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme.BLUE;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  isSendReminderLoading: boolean \u003d false;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  sortSessionsTableRowModelsEvent: EventEmitter\u003cSortBy\u003e \u003d new EventEmitter();"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  loadResponseRateEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  moveSessionToRecycleBinEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  copySessionEvent: EventEmitter\u003cCopySessionResult\u003e \u003d new EventEmitter();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  submitSessionAsInstructorEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  publishSessionEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  unpublishSessionEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  resendResultsLinkToStudentsEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  downloadSessionResultsEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":"  @Output()"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToAllNonSubmittersEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"  @Output()"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToSelectedNonSubmittersEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  constructor(private ngbModal: NgbModal, private simpleModalService: SimpleModalService) { }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * Sorts the list of feedback session row."},{"lineNumber":95,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  sortSessionsTableRowModels(by: SortBy): void {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.sortSessionsTableRowModelsEvent.emit(by);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * Moves the feedback session to the recycle bin."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  moveSessionToRecycleBin(rowIndex: number): void {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d \u0027Session will be moved to the recycle bin. \u0027"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        + \u0027This action can be reverted by going to the \"Sessions\" tab and restoring the desired session(s).\u0027;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":107,"author":{"gitId":"-"},"content":"        `Delete session \u003cstrong\u003e${this.sessionsTableRowModels[rowIndex].feedbackSession.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, modalContent);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      this.moveSessionToRecycleBinEvent.emit(rowIndex);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Copies the feedback session."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  copySession(rowIndex: number): void {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(CopySessionModalComponent);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.newFeedbackSessionName \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.courseCandidates \u003d this.courseCandidates;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.sessionToCopyCourseId \u003d model.feedbackSession.courseId;"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      this.copySessionEvent.emit({"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ...result,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        sessionToCopyRowIndex: rowIndex,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   * Publishes a feedback session."},{"lineNumber":134,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  publishSession(rowIndex: number): void {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":139,"author":{"gitId":"-"},"content":"        `Publish session \u003cstrong\u003e${model.feedbackSession.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u0027An email will be sent to students to inform them that the responses are ready for viewing.\u0027);"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      this.publishSessionEvent.emit(rowIndex);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   * Unpublishes a feedback session."},{"lineNumber":150,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  unpublishSession(rowIndex: number): void {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `An email will be sent to students to inform them that the session has been unpublished"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        and the session responses will no longer be viewable by students.`;"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":157,"author":{"gitId":"-"},"content":"        `Unpublish session \u003cstrong\u003e${model.feedbackSession.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, modalContent);"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      this.unpublishSessionEvent.emit(rowIndex);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   * Resend links to students to view results."},{"lineNumber":167,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  remindResultsLinkToStudent(rowIndex: number): void {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    this.resendResultsLinkToStudentsEvent.emit(rowIndex);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":173,"author":{"gitId":"Nicolascwy"},"content":"   * Sends e-mails to remind all students and instructors who have not submitted their feedback."},{"lineNumber":174,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":175,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToAllNonSubmitters(rowIndex: number): void {"},{"lineNumber":176,"author":{"gitId":"Nicolascwy"},"content":"    this.sendRemindersToAllNonSubmittersEvent.emit(rowIndex);"},{"lineNumber":177,"author":{"gitId":"Nicolascwy"},"content":"  }"},{"lineNumber":178,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":179,"author":{"gitId":"Nicolascwy"},"content":"  /**"},{"lineNumber":180,"author":{"gitId":"Nicolascwy"},"content":"   * Sends e-mails to remind selected students and instructors who have not submitted their feedback."},{"lineNumber":181,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":182,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToSelectedNonSubmitters(rowIndex: number): void {"},{"lineNumber":183,"author":{"gitId":"Nicolascwy"},"content":"    this.sendRemindersToSelectedNonSubmittersEvent.emit(rowIndex);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   * Triggers the download of session results as a CSV file."},{"lineNumber":188,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  downloadSessionResults(rowIndex: number): void {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    this.downloadSessionResultsEvent.emit(rowIndex);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   * Set row number of button clicked."},{"lineNumber":195,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  setRowClicked(rowIndex: number): void {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    this.rowClicked \u003d rowIndex;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":185,"Nicolascwy":15}},{"path":"src/web/app/components/wheel-disabler/wheel-disabler.directive.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Directive, HostListener } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":" * Directive for loading spinner component"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"@Directive({"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"  selector: \u0027[tmDisableWheel]\u0027,"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"export class WheelDisablerDirective {"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"  @HostListener(\u0027wheel\u0027, [\u0027$event\u0027])"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  onWheel(e: Event): void {"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"    e.preventDefault();"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":15,"-":1}},{"path":"src/web/app/components/wheel-disabler/wheel-disabler.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { WheelDisablerDirective } from \u0027./wheel-disabler.directive\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" * Module for progress bar used to show download progress."},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"@NgModule({"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  declarations: [WheelDisablerDirective],"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  imports: [],"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"  exports: ["},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"    WheelDisablerDirective,"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  ],"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"export class WheelDisablerModule { }"}],"authorContributionMap":{"fsgmhoward":14}},{"path":"src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1\u003eHome\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light\" style\u003d\"margin-bottom: 20px;\" *ngIf\u003d\"isNewUser\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    New to TEAMMATES? You may wish to have a look at our \u003ca href\u003d\"/web/instructor/getting-started\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003eGetting Started Guide\u003c/a\u003e."},{"lineNumber":6,"author":{"gitId":"-"},"content":"    A video tour is also available in our \u003ca href\u003d\"/web\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003ehome page\u003c/a\u003e."},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row mb-3\" *tmIsLoading\u003d\"!hasCoursesLoaded\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-4\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003ca tmRouterLink\u003d\"/web/instructor/courses\" class\u003d\"btn btn-success\" [queryParams]\u003d\"{isAddNewCourse: true}\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Course"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/a\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-8\" *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"float-right\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstrong class\u003d\"d-inline\"\u003e Sort By: \u003c/strong\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"btn-group\" data-toggle\u003d\"buttons\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-id\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_ID)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-name\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_NAME)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-date\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_CREATION_DATE)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_CREATION_DATE)\"\u003eCreation Date\u003c/button\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCoursesLoadingFailed\" [message]\u003d\"\u0027Something went wrong\u0027\" (retryEvent)\u003d\"loadCourses()\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"!hasCoursesLoaded || isCopyLoading\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-tab\" class\u003d\"card\" *ngFor\u003d\"let courseTabModel of courseTabModels; let idx \u003d index\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cdiv id\u003d\"course-tab-header\" class\u003d\"card-header bg-primary text-white cursor-pointer\" (click)\u003d\"courseTabModel.isTabExpanded \u003d handleClick($event, courseTabModel); this.loadFeedbackSessions(idx);\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cb id\u003d\"course-details\" class\u003d\"text-break\"\u003e[{{ courseTabModel.course.courseId }}]: {{ courseTabModel.course.courseName }}\u003c/b\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"card-header-btn-toolbar flex-lg-shrink-0\" *ngIf\u003d\"courseTabModel.isAjaxSuccess\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Students \u003c/button\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyStudent\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                  \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Enroll"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/courses/details\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Instructors \u003c/button\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/courses/edit\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Sessions \u003c/button\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/sessions\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Add"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"btn-course\" class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Course \u003c/button\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u003ca id\u003d\"btn-archive-course\" class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                   ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still access it from the \u0027Courses\u0027 tab)\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                   (click)\u003d\"archiveCourse(courseTabModel.course.courseId)\"\u003e Archive"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyCourse\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                  \u003ca id\u003d\"btn-delete-course\" class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"                     ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                     (click)\u003d\"deleteCourse(courseTabModel.course.courseId)\"\u003e Delete"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u003ctm-panel-chevron [isExpanded]\u003d\"courseTabModel.isTabExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body padding-0\" *ngIf\u003d\"courseTabModel.isTabExpanded\" @collapseAnim\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          \u003ctm-loading-retry [shouldShowRetry]\u003d\"courseTabModel.hasLoadingFailed\" [message]\u003d\"\u0027Error loading feedback sessions\u0027\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                            (retryEvent)\u003d\"loadFeedbackSessions(idx)\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003ctm-sessions-table *tmIsLoading\u003d\"!courseTabModel.hasPopulated\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                [sessionsTableRowModels]\u003d\"courseTabModel.sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"courseTabModel.sessionsTableRowModelsSortBy\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                [sessionsTableRowModelsSortOrder]\u003d\"courseTabModel.sessionsTableRowModelsSortOrder\" [courseCandidates]\u003d\"courseCandidates\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.WHITE\" [columnsToShow]\u003d\"[ SessionsTableColumn.START_DATE, SessionsTableColumn.END_DATE ]\" [isSendReminderLoading]\u003d\"isSendReminderLoading\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent(idx, $event)\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler(idx, $event)\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler(idx, $event)\" (copySessionEvent)\u003d\"copySessionEventHandler(idx, $event)\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler(idx, $event)\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                (publishSessionEvent)\u003d\"publishSessionEventHandler(idx, $event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler(idx, $event)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                (downloadSessionResultsEvent)\u003d\"downloadSessionResultEventHandler(idx, $event)\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\""},{"lineNumber":99,"author":{"gitId":"Nicolascwy"},"content":"                (sendRemindersToAllNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event], true)\""},{"lineNumber":100,"author":{"gitId":"Nicolascwy"},"content":"                (sendRemindersToSelectedNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event], false)\"\u003e\u003c/tm-sessions-table\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          \u003c/tm-loading-retry\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"-":104,"Nicolascwy":2}},{"path":"src/web/app/pages-instructor/instructor-session-modal-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { forkJoin } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../services/feedback-questions.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { FeedbackSessionActionsService } from \u0027../../services/feedback-session-actions.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../services/feedback-sessions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../services/instructor.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../services/navigation.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ProgressBarService } from \u0027../../services/progress-bar.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../services/simple-modal.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../services/status-message.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../services/student.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../services/table-comparator.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmittedGiverSet, Instructor, Instructors,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  Student, Students,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"} from \u0027../../types/api-output\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../types/api-request\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  ResendResultsLinkToRespondentModalComponent,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/resend-results-link-to-respondent-modal/resend-results-link-to-respondent-modal.component\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    InstructorListInfoTableRowModel,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    StudentListInfoTableRowModel,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  SendRemindersToRespondentsModalComponent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/send-reminders-to-respondents-modal/send-reminders-to-respondents-modal.component\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  SessionsTableRowModel,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/sessions-table-model\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../error-message-output\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  InstructorSessionBasePageComponent,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"} from \u0027./instructor-session-base-page.component\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * The base page for session related page."},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"export abstract class InstructorSessionModalPageComponent extends InstructorSessionBasePageComponent {"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  isSendReminderLoading: boolean \u003d false;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  protected constructor(router: Router,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        instructorService: InstructorService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        statusMessageService: StatusMessageService,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        navigationService: NavigationService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        tableComparatorService: TableComparatorService,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        ngbModal: NgbModal,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        simpleModalService: SimpleModalService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        progressBarService: ProgressBarService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        feedbackSessionActionsService: FeedbackSessionActionsService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        protected studentService: StudentService) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        feedbackSessionsService, feedbackQuestionsService, tableComparatorService,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ngbModal, simpleModalService, progressBarService, feedbackSessionActionsService);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents on the published results link."},{"lineNumber":64,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  resendResultsLinkToRespondentsEventHandler(model: SessionsTableRowModel): void {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.isSendReminderLoading \u003d true;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    const courseId: string \u003d model.feedbackSession.courseId;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":71,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({ courseId }),"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    ]).pipe(finalize(() \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.isSendReminderLoading \u003d false;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      .subscribe((result: any[]) \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        const students: Student[] \u003d (result[0] as Students).students;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        const instructors: Instructor[] \u003d (result[1] as Instructors).instructors;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(ResendResultsLinkToRespondentModalComponent);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          email: student.email,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          name: student.name,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          teamName: student.teamName,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          sectionName: student.sectionName,"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"          hasSubmittedSession: false,"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"          isSelected: false,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } as StudentListInfoTableRowModel));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.instructorListInfoTableRowModels \u003d"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            instructors.map((instructor: Instructor) \u003d\u003e ({"},{"lineNumber":96,"author":{"gitId":"-"},"content":"              email: instructor.email,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              name: instructor.name,"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"              hasSubmittedSession: false,"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"              isSelected: false,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            } as InstructorListInfoTableRowModel));"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modalRef.result.then((respondentsToRemind: any[]) \u003d\u003e {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          this.isSendReminderLoading \u003d true;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.remindResultsLinkToRespondents(courseId, feedbackSessionName, {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            usersToRemind: respondentsToRemind.map((m: any) \u003d\u003e m.email),"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            this.isSendReminderLoading \u003d false;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast("},{"lineNumber":113,"author":{"gitId":"-"},"content":"                  \u0027Session published notification emails have been resent to those students and instructors. \u0027"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                  + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents who have not submitted their feedback."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToRespondentsEventHandler(model: SessionsTableRowModel, selectAllRespondents: boolean): void {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.isSendReminderLoading \u003d true;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    const courseId: string \u003d model.feedbackSession.courseId;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":129,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({ courseId }),"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({ courseId, feedbackSessionName }),"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    ]).pipe(finalize(() \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      this.isSendReminderLoading \u003d false;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      .subscribe((result: any[]) \u003d\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        const students: Student[] \u003d (result[0] as Students).students;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        const giverSet: Set\u003cstring\u003e \u003d new Set((result[1] as FeedbackSessionSubmittedGiverSet).giverIdentifiers);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        const instructors: Instructor[] \u003d (result[2] as Instructors).instructors;"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(SendRemindersToRespondentsModalComponent);"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          email: student.email,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          name: student.name,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"          teamName: student.teamName,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"          sectionName: student.sectionName,"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"          hasSubmittedSession: giverSet.has(student.email),"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"Nicolascwy"},"content":"          isSelected: selectAllRespondents \u0026\u0026 !giverSet.has(student.email),"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } as StudentListInfoTableRowModel));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.instructorListInfoTableRowModels \u003d instructors.map("},{"lineNumber":155,"author":{"gitId":"-"},"content":"            (instructor: Instructor) \u003d\u003e ({"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              email: instructor.email,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"              name: instructor.name,"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"              hasSubmittedSession: giverSet.has(instructor.email),"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"              isSelected: selectAllRespondents \u0026\u0026 !giverSet.has(instructor.email),"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            } as InstructorListInfoTableRowModel));"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        modalRef.result.then((respondentsToRemind: any[]) \u003d\u003e {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"          this.isSendReminderLoading \u003d true;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.remindFeedbackSessionSubmissionForRespondents(courseId, feedbackSessionName, {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            usersToRemind: respondentsToRemind.map((m: any) \u003d\u003e m.email),"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.isSendReminderLoading \u003d false;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast("},{"lineNumber":173,"author":{"gitId":"-"},"content":"                  \u0027Reminder e-mails have been sent out to those students and instructors. \u0027"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                  + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":176,"Nicolascwy":3}},{"path":"src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"!isCoursesLoading \u0026\u0026 courseCandidates.length \u003d\u003d\u003d 0 \u0026\u0026 !hasCourseLoadingFailed\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  You have not created any courses yet, or you have no active courses. Go \u003ca tmRouterLink\u003d\"/web/instructor/courses\"\u003ehere\u003c/a\u003e to create or unarchive a course."},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cbutton id\u003d\"btn-add-session\" class\u003d\"btn btn-success\" (click)\u003d\"isSessionEditFormExpanded \u003d true\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isSessionEditFormExpanded || isCoursesLoading\"\u003e\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Feedback Session"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"margin-top-30px\" *ngIf\u003d\"isSessionEditFormExpanded \u0026\u0026 !isCoursesLoading\" @collapseAnim\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cdiv\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ctm-session-edit-form [formMode]\u003d\"SessionEditFormMode.ADD\" [(model)]\u003d\"sessionEditFormModel\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                          [courseCandidates]\u003d\"courseCandidates\" [templateSessions]\u003d\"templateSessions\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                          [isCopyOtherSessionLoading]\u003d\"isCopyOtherSessionLoading\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                          (addNewSessionEvent)\u003d\"addNewSessionHandler()\" (copyOtherSessionsEvent)\u003d\"copyFromOtherSessionsHandler()\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                          (closeEditFormEvent)\u003d\"isSessionEditFormExpanded \u003d false\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-session-edit-form\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCourseLoadingFailed || hasFeedbackSessionLoadingFailed\" [message]\u003d\"\u0027Failed to load data\u0027\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                  (retryEvent)\u003d\"retryLoadingAllData()\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cdiv *tmIsLoading\u003d\"isCoursesLoading || isMoveToRecycleBinLoading || isCopySessionLoading || isResultActionLoading\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"alert alert-warning margin-top-30px\" role\u003d\"alert\" *ngIf\u003d\"sessionsTableRowModels.length \u003d\u003d\u003d 0 \u0026\u0026 !isFeedbackSessionsLoading\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        You have not created any sessions yet. Use the form above to create a session."},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-table *tmIsLoading\u003d\"isFeedbackSessionsLoading\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                         [sessionsTableRowModels]\u003d\"sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"sessionsTableRowModelsSortBy\" [sessionsTableRowModelsSortOrder]\u003d\"sessionsTableRowModelsSortOrder\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                         [courseCandidates]\u003d\"courseCandidates\" [columnsToShow]\u003d\"[ SessionsTableColumn.COURSE_ID ]\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"                         [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.BLUE\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"                         [isSendReminderLoading]\u003d\"isSendReminderLoading\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                         (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent($event)\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                         (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler($event)\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                         (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler($event)\" (copySessionEvent)\u003d\"copySessionEventHandler($event)\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                         (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler($event)\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                         (publishSessionEvent)\u003d\"publishSessionEventHandler($event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler($event)\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                         (downloadSessionResultsEvent)\u003d\"downloadSessionResultEventHandler($event)\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                         (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToRespondentsEventHandler(sessionsTableRowModels[$event])\""},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"                         (sendRemindersToAllNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(sessionsTableRowModels[$event], true)\""},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"                         (sendRemindersToSelectedNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(sessionsTableRowModels[$event], false)\"\u003e\u003c/tm-sessions-table\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003cbr/\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 text-muted\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cp\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Note: The table above doesn\u0027t contain sessions from archived courses and courses in recycle bin."},{"lineNumber":51,"author":{"gitId":"-"},"content":"        To view sessions from an archived course, unarchive the course first; to view sessions from a course in recycle bin, restore the course first."},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003ctm-sessions-recycle-bin-table"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        *tmIsLoading\u003d\"isRecycleBinLoading || isRestoreFeedbackSessionLoading\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        [isRecycleBinExpanded]\u003d\"isRecycleBinExpanded\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModels]\u003d\"recycleBinFeedbackSessionRowModels\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortBy]\u003d\"recycleBinFeedbackSessionRowModelsSortBy\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortOrder]\u003d\"recycleBinFeedbackSessionRowModelsSortOrder\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        [isPermanentDeleteLoading]\u003d\"isPermanentDeleteLoading\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        (restoreSessionEvent)\u003d\"restoreRecycleBinFeedbackSession($event)\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        (restoreAllRecycleBinFeedbackSessionEvent)\u003d\"restoreAllRecycleBinFeedbackSession()\""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        (permanentlyDeleteSessionEvent)\u003d\"permanentDeleteSession($event)\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        (permanentDeleteAllSessionsEvent)\u003d\"permanentDeleteAllSessions()\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        (sortRecycleBinFeedbackSessionRowsEvent)\u003d\"sortRecycleBinFeedbackSessionRowsEvent($event)\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        (recycleBinExpandEvent)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded;\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"-":70,"Nicolascwy":2}},{"path":"src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CourseService, CourseStatistics } from \u0027../../../services/course.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  InstructorPermissionSet,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  InstructorPrivilege,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { JoinStatePipe } from \u0027../../components/student-list/join-state.pipe\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StudentListRowModel } from \u0027../../components/student-list/student-list.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"interface StudentIndexedData {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  [key: string]: Student[];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"interface CourseTab {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  course: Course;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  studentList: StudentListRowModel[];"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  studentSortBy: SortBy;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  studentSortOrder: SortOrder;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  hasTabExpanded: boolean;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  hasStudentLoaded: boolean;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  hasLoadingFailed: boolean;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  stats: CourseStatistics;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Instructor student list page."},{"lineNumber":39,"author":{"gitId":"-"},"content":" */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-student-list-page\u0027,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-student-list-page.component.html\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-student-list-page.component.scss\u0027],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":45,"author":{"gitId":"-"},"content":"})"},{"lineNumber":46,"author":{"gitId":"-"},"content":"export class InstructorStudentListPageComponent implements OnInit {"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  courseTabList: CourseTab[] \u003d [];"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  hasLoadingFailed: boolean \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  isLoadingCourses: boolean \u003d false;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  constructor(private instructorService: InstructorService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              private tableComparatorService: TableComparatorService) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.loadCourses();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * Loads courses of current instructor."},{"lineNumber":65,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  loadCourses(): void {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.hasLoadingFailed \u003d false;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.isLoadingCourses \u003d true;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.courseService.getAllCoursesAsInstructor(\u0027active\u0027)"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          this.isLoadingCourses \u003d false;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        .subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          courses.courses.forEach((course: Course) \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            const courseTab: CourseTab \u003d {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"              course,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"              studentList: [],"},{"lineNumber":78,"author":{"gitId":"-"},"content":"              studentSortBy: SortBy.NONE,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"              studentSortOrder: SortOrder.ASC,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              hasTabExpanded: false,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              hasStudentLoaded: false,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"              hasLoadingFailed: false,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              stats: {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                numOfSections: 0,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                numOfStudents: 0,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                numOfTeams: 0,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.courseTabList.push(courseTab);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          this.courseTabList \u003d [];"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          this.hasLoadingFailed \u003d true;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e this.sortCourses());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   * Toggles specific card and loads students if needed"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  toggleCard(courseTab: CourseTab): void {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    courseTab.hasTabExpanded \u003d !courseTab.hasTabExpanded;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    if (!courseTab.hasStudentLoaded) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      this.loadStudents(courseTab);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   * Loads students of a specified course."},{"lineNumber":111,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  loadStudents(courseTab: CourseTab): void {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    courseTab.hasLoadingFailed \u003d false;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    courseTab.hasStudentLoaded \u003d false;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: courseTab.course.courseId })"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        .subscribe((students: Students) \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          courseTab.studentList \u003d []; // Reset the list of students for the course"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          const sections: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            const term: string \u003d x.sectionName;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            (acc[term] \u003d acc[term] || []).push(x);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return acc;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          }, {});"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"          this.instructorService.loadInstructorPrivilege({"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            courseId: courseTab.course.courseId,"},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"          })"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            courseTab.hasStudentLoaded \u003d true;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"          .subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            const courseLevelPrivilege: InstructorPermissionSet \u003d instructorPrivilege.privileges.courseLevel;"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Object.keys(sections).forEach((sectionName: string) \u003d\u003e {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              const sectionLevelPrivilege: InstructorPermissionSet \u003d"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                  instructorPrivilege.privileges.sectionLevel[sectionName] || courseLevelPrivilege;"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"              const studentsInSection: Student[] \u003d sections[sectionName];"},{"lineNumber":138,"author":{"gitId":"-"},"content":"              const studentModels: StudentListRowModel[] \u003d studentsInSection.map((studentInSection: Student) \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                return {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                  student: studentInSection,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  isAllowedToViewStudentInSection: sectionLevelPrivilege.canViewStudentInSections,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                  isAllowedToModifyStudent: sectionLevelPrivilege.canModifyStudent,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"              courseTab.studentList.push(...studentModels);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              courseTab.studentList.sort(this.sortStudentBy(SortBy.NONE, SortOrder.ASC));"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"            courseTab.stats \u003d this.courseService.calculateCourseStatistics(students.students);"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            courseTab.hasLoadingFailed \u003d true;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            courseTab.studentList \u003d [];"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          courseTab.hasLoadingFailed \u003d true;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          courseTab.studentList \u003d [];"},{"lineNumber":160,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":165,"author":{"gitId":"-"},"content":"   * Removes the student from course and update the course statistics."},{"lineNumber":166,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  removeStudentFromCourse(courseTab: CourseTab, studentEmail: string): void {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    this.courseService.removeStudentFromCourse(courseTab.course.courseId, studentEmail).subscribe(() \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      courseTab.studentList \u003d"},{"lineNumber":170,"author":{"gitId":"-"},"content":"          courseTab.studentList.filter("},{"lineNumber":171,"author":{"gitId":"-"},"content":"              (studentModel: StudentListRowModel) \u003d\u003e studentModel.student.email !\u003d\u003d studentEmail);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"      const students: Student[] \u003d"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          courseTab.studentList.map((studentModel: StudentListRowModel) \u003d\u003e studentModel.student);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      courseTab.stats \u003d this.courseService.calculateCourseStatistics(students);"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"      this.statusMessageService"},{"lineNumber":178,"author":{"gitId":"-"},"content":"          .showSuccessToast(`Student is successfully deleted from course \"${courseTab.course.courseId}\"`);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":185,"author":{"gitId":"-"},"content":"   * Sorts the courses in the list according to course ID."},{"lineNumber":186,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  sortCourses(): void {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    this.courseTabList.sort((a: CourseTab, b: CourseTab) \u003d\u003e {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      return this.tableComparatorService"},{"lineNumber":190,"author":{"gitId":"-"},"content":"          .compare(SortBy.COURSE_ID, SortOrder.ASC, a.course.courseId, b.course.courseId);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   * Sorts the student list."},{"lineNumber":196,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  sortStudentList(courseTab: CourseTab, by: SortBy): void {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    courseTab.studentSortBy \u003d by;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    courseTab.studentSortOrder \u003d"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      courseTab.studentSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    courseTab.studentList.sort(this.sortStudentBy(by, courseTab.studentSortOrder));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * Returns a function to determine the order of sort for students."},{"lineNumber":206,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  sortStudentBy(by: SortBy, order: SortOrder):"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      ((a: StudentListRowModel, b: StudentListRowModel) \u003d\u003e number) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    const joinStatePipe: JoinStatePipe \u003d new JoinStatePipe();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    if (by \u003d\u003d\u003d SortBy.NONE) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      // Default order: section name \u003e team name \u003e student name"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      return ((a: StudentListRowModel, b: StudentListRowModel): number \u003d\u003e {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return this.tableComparatorService"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            .compare(SortBy.SECTION_NAME, order, a.student.sectionName, b.student.sectionName)"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          || this.tableComparatorService.compare(SortBy.TEAM_NAME, order, a.student.teamName, b.student.teamName)"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          || this.tableComparatorService.compare(SortBy.RESPONDENT_NAME, order, a.student.name, b.student.name);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    return (a: StudentListRowModel, b: StudentListRowModel): number \u003d\u003e {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      let strA: string;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      let strB: string;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      switch (by) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        case SortBy.SECTION_NAME:"},{"lineNumber":224,"author":{"gitId":"-"},"content":"          strA \u003d a.student.sectionName;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"          strB \u003d b.student.sectionName;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        case SortBy.RESPONDENT_NAME:"},{"lineNumber":228,"author":{"gitId":"-"},"content":"          strA \u003d a.student.name;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"          strB \u003d b.student.name;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        case SortBy.TEAM_NAME:"},{"lineNumber":232,"author":{"gitId":"-"},"content":"          strA \u003d a.student.teamName;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          strB \u003d b.student.teamName;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        case SortBy.RESPONDENT_EMAIL:"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          strA \u003d a.student.email;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"          strB \u003d b.student.email;"},{"lineNumber":238,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        case SortBy.JOIN_STATUS:"},{"lineNumber":240,"author":{"gitId":"-"},"content":"          strA \u003d joinStatePipe.transform(a.student.joinState);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"          strB \u003d joinStatePipe.transform(b.student.joinState);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":244,"author":{"gitId":"-"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":249}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { NgxPageScrollCoreModule } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import SpyInstance \u003d jest.SpyInstance;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  CommentVisibilityType,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackContributionQuestionDetails,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackContributionResponseDetails,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackMcqResponseDetails,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackMsqQuestionDetails,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackMsqResponseDetails,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackNumericalScaleResponseDetails,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  FeedbackRankOptionsQuestionDetails,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  FeedbackRankOptionsResponseDetails,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  FeedbackRubricQuestionDetails,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  FeedbackRubricResponseDetails,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  FeedbackTextResponseDetails,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  JoinState,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModule,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form.module\u0027;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"import { SessionSubmissionPageComponent } from \u0027./session-submission-page.component\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"describe(\u0027SessionSubmissionPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  const deepCopy: \u003cT\u003e(obj: T) \u003d\u003e T \u003d \u003cT\u003e(obj: T) \u003d\u003e JSON.parse(JSON.stringify(obj));"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  const testStudent: Student \u003d {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    email: \u0027alice@tmms.com\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    courseId: \u0027course-id\u0027,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    name: \u0027Alice Betsy\u0027,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    teamName: \u0027Team 1\u0027,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    sectionName: \u0027Section 1\u0027,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  const testInstructor: Instructor \u003d {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    courseId: \u0027course-id\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    email: \u0027test@example.com\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    name: \u0027Instructor Ho\u0027,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    joinState: JoinState.JOINED,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  const testOpenFeedbackSession: FeedbackSession \u003d {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    instructions: \u0027Instructions\u0027,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 1000000000000,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: Date.now() + 10 * 60 * 1000, // 10 minutes before closing"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  const testComment: FeedbackResponseComment \u003d {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    commentGiver: \u0027comment giver\u0027,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    lastEditorEmail: \u0027last-editor@email.com\u0027,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    feedbackResponseCommentId: 1,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    commentText: \u0027comment text\u0027,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    createdAt: 10000000,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    lastEditedAt: 20000000,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    isVisibilityFollowingFeedbackQuestion: true,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-1\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text here\u0027,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm2: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-2\u0027,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027recipient-identifier\u0027,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"  const testTextRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-3\u0027,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    } as FeedbackTextResponseDetails,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text here\u0027,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm3: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-4\u0027,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      answer: \u0027barry-harris-answer\u0027,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm4: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-5\u0027,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      answer: \u0027gene-harris-answer\u0027,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"  const testMsqRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-6\u0027,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      answers: [\u0027answer 1\u0027, \u0027answer 2\u0027],"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      isOther: false,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      otherFieldContent: \u0027other field content\u0027,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MSQ,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    } as FeedbackMsqResponseDetails,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text\u0027,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"  const testNumscaleRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-7\u0027,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"  const testConstsumRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-8\u0027,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      answers: [7, 13],"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"  const testContribRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-9\u0027,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      answer: 20,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"  const testRubricRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-10\u0027,"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      answer: [3, 4],"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"  const testRankOptionsRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-11\u0027,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      answers: [2, 1],"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    } as FeedbackRankOptionsResponseDetails,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"  const testRankRecipientsRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-12\u0027,"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      minOptionsToBeRanked: 1,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      maxOptionsToBeRanked: 2,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      areDuplicatesAllowed: false,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"  const testResponse1: FeedbackResponse \u003d {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    feedbackResponseId: \u0027response-id-4\u0027,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    giverIdentifier: \u0027giver-identifier\u0027,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      answer: \u0027barry-harris-answer\u0027,"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"  const testResponse2: FeedbackResponse \u003d {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    feedbackResponseId: \u0027response-id-5\u0027,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    giverIdentifier: \u0027giver-identifier\u0027,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      answer: \u0027gene-harris-answer\u0027,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"  const testMcqQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-mcq\u0027,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    questionNumber: 1,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMcqRecipientSubmissionForm],"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.STUDENTS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"  const testMcqQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-mcq-2\u0027,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    questionNumber: 2,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.TEAMS,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    recipientList: ["},{"lineNumber":335,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        recipientName: \u0027Barry Harris\u0027,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        recipientName: \u0027Gene Harris\u0027,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMcqRecipientSubmissionForm3, testMcqRecipientSubmissionForm4],"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":350,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"  const testTextQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-text\u0027,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    questionNumber: 3,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testTextRecipientSubmissionForm],"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"  const testMsqQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-msq\u0027,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    questionNumber: 4,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    questionBrief: \u0027MSQ question\u0027,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MSQ,"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      msqChoices: [\u0027first\u0027, \u0027second\u0027, \u0027third\u0027],"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      otherEnabled: false,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      hasAssignedWeights: true,"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      msqWeights: [1, 2, 3],"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      maxSelectableChoices: 2,"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      minSelectableChoices: 1,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    } as FeedbackMsqQuestionDetails,"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMsqRecipientSubmissionForm],"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":396,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"  const testNumscaleQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-numscale\u0027,"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    questionNumber: 5,"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    questionBrief: \u0027numerical scale question\u0027,"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      minScale: 1,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      maxScale: 10,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      step: 1,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testNumscaleRecipientSubmissionForm],"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"  const testConstsumQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-constsum\u0027,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    questionNumber: 6,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    questionBrief: \u0027constant sum question\u0027,"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONSTSUM_RECIPIENTS,"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      constSumOptions: [\u0027option 1\u0027, \u0027option 2\u0027],"},{"lineNumber":428,"author":{"gitId":"-"},"content":"      distributeToRecipients: true,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      pointsPerOption: true,"},{"lineNumber":430,"author":{"gitId":"-"},"content":"      forceUnevenDistribution: false,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"      distributePointsFor: \u0027distribute points for\u0027,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      points: 20,"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumQuestionDetails,"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testConstsumRecipientSubmissionForm],"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":443,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"  const testContribQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-contrib\u0027,"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    questionNumber: 7,"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    questionBrief: \u0027contribution question\u0027,"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      isNotSureAllowed: false,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    } as FeedbackContributionQuestionDetails,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testContribRecipientSubmissionForm],"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":463,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":464,"author":{"gitId":"-"},"content":""},{"lineNumber":465,"author":{"gitId":"-"},"content":"  const testRubricQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rubric\u0027,"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    questionNumber: 8,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      hasAssignedWeights: false,"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      rubricWeightsForEachCell: [[1, 2], [2, 1]],"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      rubricChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027],"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      rubricSubQuestions: [\u0027subquestion 1\u0027, \u0027subquestion 2\u0027],"},{"lineNumber":476,"author":{"gitId":"-"},"content":"      rubricDescriptions: [[\u0027description 1\u0027, \u0027description 2\u0027], [\u0027description 3\u0027, \u0027description 4\u0027]],"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    } as FeedbackRubricQuestionDetails,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRubricRecipientSubmissionForm],"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":487,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"  const testRankOptionsQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rank-options\u0027,"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    questionNumber: 9,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RANK_OPTIONS,"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"      options: [\u0027option 1\u0027, \u0027option 2\u0027],"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    } as FeedbackRankOptionsQuestionDetails,"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRankOptionsRecipientSubmissionForm],"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":507,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"  const testRankRecipientsQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rank-recipients\u0027,"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    questionNumber: 10,"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":514,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      minOptionsToBeRanked: 1,"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      maxOptionsToBeRanked: 2,"},{"lineNumber":518,"author":{"gitId":"-"},"content":"      areDuplicatesAllowed: false,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRankRecipientsRecipientSubmissionForm],"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":529,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"  const testInfo: AuthInfo \u003d {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    masquerade: false,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    user: {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"      id: \u0027user-id\u0027,"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      isAdmin: false,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      isInstructor: false,"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      isStudent: true,"},{"lineNumber":538,"author":{"gitId":"-"},"content":"      isMaintainer: false,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"  const testQueryParams: any \u003d {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    courseid: \u0027CS3281\u0027,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    fsname: \u0027Feedback Session Name\u0027,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    key: \u0027reg-key\u0027,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"  const getFeedbackSessionArgs: any \u003d {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    courseId: testQueryParams.courseid,"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    feedbackSessionName: testQueryParams.fsname,"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    intent: Intent.STUDENT_SUBMISSION,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    key: testQueryParams.key,"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    moderatedPerson: \u0027\u0027,"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    previewAs: \u0027\u0027,"},{"lineNumber":555,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"  let component: SessionSubmissionPageComponent;"},{"lineNumber":558,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cSessionSubmissionPageComponent\u003e;"},{"lineNumber":559,"author":{"gitId":"-"},"content":"  let authService: AuthService;"},{"lineNumber":560,"author":{"gitId":"-"},"content":"  let navService: NavigationService;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"  let studentService: StudentService;"},{"lineNumber":562,"author":{"gitId":"-"},"content":"  let instructorService: InstructorService;"},{"lineNumber":563,"author":{"gitId":"-"},"content":"  let feedbackSessionsService: FeedbackSessionsService;"},{"lineNumber":564,"author":{"gitId":"-"},"content":"  let feedbackResponsesService: FeedbackResponsesService;"},{"lineNumber":565,"author":{"gitId":"-"},"content":"  let feedbackResponseCommentService: FeedbackResponseCommentService;"},{"lineNumber":566,"author":{"gitId":"-"},"content":"  let feedbackQuestionsService: FeedbackQuestionsService;"},{"lineNumber":567,"author":{"gitId":"-"},"content":"  let simpleModalService: SimpleModalService;"},{"lineNumber":568,"author":{"gitId":"-"},"content":"  let ngbModal: NgbModal;"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      declarations: [SessionSubmissionPageComponent, SavingCompleteModalComponent],"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":574,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        NgxPageScrollCoreModule,"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        QuestionSubmissionFormModule,"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":584,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":585,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"          provide: ActivatedRoute,"},{"lineNumber":587,"author":{"gitId":"-"},"content":"          useValue: {"},{"lineNumber":588,"author":{"gitId":"-"},"content":"            data: {"},{"lineNumber":589,"author":{"gitId":"-"},"content":"              intent: Intent.STUDENT_SUBMISSION,"},{"lineNumber":590,"author":{"gitId":"-"},"content":"              pipe: () \u003d\u003e {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"                return {"},{"lineNumber":592,"author":{"gitId":"-"},"content":"                  subscribe: (fn: (value: any) \u003d\u003e void) \u003d\u003e fn(testQueryParams),"},{"lineNumber":593,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":594,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":595,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":596,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":601,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(SessionSubmissionPageComponent);"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":607,"author":{"gitId":"-"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":608,"author":{"gitId":"-"},"content":"    instructorService \u003d TestBed.inject(InstructorService);"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    feedbackQuestionsService \u003d TestBed.inject(FeedbackQuestionsService);"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    feedbackResponsesService \u003d TestBed.inject(FeedbackResponsesService);"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    feedbackResponseCommentService \u003d TestBed.inject(FeedbackResponseCommentService);"},{"lineNumber":612,"author":{"gitId":"-"},"content":"    feedbackSessionsService \u003d TestBed.inject(FeedbackSessionsService);"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    simpleModalService \u003d TestBed.inject(SimpleModalService);"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    ngbModal \u003d TestBed.inject(NgbModal);"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":617,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":621,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":625,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"  it(\u0027should snap when feedback session questions have failed to load\u0027, () \u003d\u003e {"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    component.retryAttempts \u003d 0;"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    component.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":632,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"  it(\u0027should snap when saving responses\u0027, () \u003d\u003e {"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    component.isSavingResponses \u003d true;"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":638,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":639,"author":{"gitId":"-"},"content":""},{"lineNumber":640,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":641,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027alice\u0027;"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":646,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":647,"author":{"gitId":"-"},"content":""},{"lineNumber":648,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is not logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027\u0027;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":654,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session and user details\u0027, () \u003d\u003e {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"    component.courseId \u003d \u0027test.exa-demo\u0027;"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    component.feedbackSessionName \u003d \u0027First team feedback session\u0027;"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":660,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027logged-in-user\u0027;"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027person name\u0027;"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    component.personEmail \u003d \u0027person@email.com\u0027;"},{"lineNumber":663,"author":{"gitId":"-"},"content":"    component.formattedSessionOpeningTime \u003d \u0027Sun, 01 Apr, 2012, 11:59 PM +08\u0027;"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    component.formattedSessionClosingTime \u003d \u0027Mon, 02 Apr, 2012, 11:59 PM +08\u0027;"},{"lineNumber":665,"author":{"gitId":"-"},"content":"    component.feedbackSessionInstructions \u003d \u0027Please give your feedback based on the following questions.\u0027;"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":668,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":669,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session question submission forms\u0027, () \u003d\u003e {"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d ["},{"lineNumber":673,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm,"},{"lineNumber":674,"author":{"gitId":"-"},"content":"      testTextQuestionSubmissionForm,"},{"lineNumber":675,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm2,"},{"lineNumber":676,"author":{"gitId":"-"},"content":"      testMsqQuestionSubmissionForm,"},{"lineNumber":677,"author":{"gitId":"-"},"content":"      testNumscaleQuestionSubmissionForm,"},{"lineNumber":678,"author":{"gitId":"-"},"content":"      testConstsumQuestionSubmissionForm,"},{"lineNumber":679,"author":{"gitId":"-"},"content":"      testContribQuestionSubmissionForm,"},{"lineNumber":680,"author":{"gitId":"-"},"content":"      testRubricQuestionSubmissionForm,"},{"lineNumber":681,"author":{"gitId":"-"},"content":"      testRankOptionsQuestionSubmissionForm,"},{"lineNumber":682,"author":{"gitId":"-"},"content":"      testRankRecipientsQuestionSubmissionForm,"},{"lineNumber":683,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":685,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":686,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionResponsesLoading \u003d false;"},{"lineNumber":687,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":689,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":690,"author":{"gitId":"-"},"content":""},{"lineNumber":691,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session question submission forms when disabled\u0027, () \u003d\u003e {"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d ["},{"lineNumber":693,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm,"},{"lineNumber":694,"author":{"gitId":"-"},"content":"      testTextQuestionSubmissionForm,"},{"lineNumber":695,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm2,"},{"lineNumber":696,"author":{"gitId":"-"},"content":"      testMsqQuestionSubmissionForm,"},{"lineNumber":697,"author":{"gitId":"-"},"content":"      testNumscaleQuestionSubmissionForm,"},{"lineNumber":698,"author":{"gitId":"-"},"content":"      testConstsumQuestionSubmissionForm,"},{"lineNumber":699,"author":{"gitId":"-"},"content":"      testContribQuestionSubmissionForm,"},{"lineNumber":700,"author":{"gitId":"-"},"content":"      testRubricQuestionSubmissionForm,"},{"lineNumber":701,"author":{"gitId":"-"},"content":"      testRankOptionsQuestionSubmissionForm,"},{"lineNumber":702,"author":{"gitId":"-"},"content":"      testRankRecipientsQuestionSubmissionForm,"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":704,"author":{"gitId":"-"},"content":"    component.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":706,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":707,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionResponsesLoading \u003d false;"},{"lineNumber":708,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":709,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":710,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"  it(\u0027should fetch auth info on init\u0027, () \u003d\u003e {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":714,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":715,"author":{"gitId":"-"},"content":"    expect(component.intent).toEqual(Intent.STUDENT_SUBMISSION);"},{"lineNumber":716,"author":{"gitId":"-"},"content":"    expect(component.courseId).toEqual(testQueryParams.courseid);"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionName).toEqual(testQueryParams.fsname);"},{"lineNumber":718,"author":{"gitId":"-"},"content":"    expect(component.regKey).toEqual(testQueryParams.key);"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    expect(component.loggedInUser).toEqual(testInfo.user?.id);"},{"lineNumber":720,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":721,"author":{"gitId":"-"},"content":""},{"lineNumber":722,"author":{"gitId":"-"},"content":"  it(\u0027should verify allowed access with used reg key\u0027, () \u003d\u003e {"},{"lineNumber":723,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":724,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":725,"author":{"gitId":"-"},"content":"      isUsed: true,"},{"lineNumber":726,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":727,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":728,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURLWithParamEncoding\u0027).mockImplementation();"},{"lineNumber":731,"author":{"gitId":"-"},"content":""},{"lineNumber":732,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/sessions/submission\u0027,"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        { courseid: \u0027CS3281\u0027, fsname: \u0027Feedback Session Name\u0027 });"},{"lineNumber":737,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":738,"author":{"gitId":"-"},"content":""},{"lineNumber":739,"author":{"gitId":"-"},"content":"  it(\u0027should deny unallowed access with valid reg key for logged in user\u0027, () \u003d\u003e {"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":741,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":742,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":743,"author":{"gitId":"-"},"content":"      isValid: true,"},{"lineNumber":744,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":745,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":746,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":747,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":750,"author":{"gitId":"-"},"content":""},{"lineNumber":751,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":752,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        `You are trying to access TEAMMATES using the Google account user-id, which"},{"lineNumber":754,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":755,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":756,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":757,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":758,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":759,"author":{"gitId":"-"},"content":""},{"lineNumber":760,"author":{"gitId":"-"},"content":"  it(\u0027should deny unallowed access with invalid reg key\u0027, () \u003d\u003e {"},{"lineNumber":761,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":762,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":763,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":764,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":765,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":767,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":768,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":769,"author":{"gitId":"-"},"content":""},{"lineNumber":770,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":771,"author":{"gitId":"-"},"content":""},{"lineNumber":772,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":773,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":775,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":776,"author":{"gitId":"-"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"  it(\u0027should load a student name\u0027, () \u003d\u003e {"},{"lineNumber":778,"author":{"gitId":"-"},"content":"    component.intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":779,"author":{"gitId":"-"},"content":"    jest.spyOn(studentService, \u0027getStudent\u0027).mockReturnValue(of(testStudent));"},{"lineNumber":780,"author":{"gitId":"-"},"content":"    component.loadPersonName();"},{"lineNumber":781,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(testStudent.name);"},{"lineNumber":782,"author":{"gitId":"-"},"content":"    expect(component.personEmail).toEqual(testStudent.email);"},{"lineNumber":783,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":784,"author":{"gitId":"-"},"content":""},{"lineNumber":785,"author":{"gitId":"-"},"content":"  it(\u0027should load an instructor name\u0027, () \u003d\u003e {"},{"lineNumber":786,"author":{"gitId":"-"},"content":"    component.intent \u003d Intent.INSTRUCTOR_SUBMISSION;"},{"lineNumber":787,"author":{"gitId":"-"},"content":"    jest.spyOn(instructorService, \u0027getInstructor\u0027).mockReturnValue(of(testInstructor));"},{"lineNumber":788,"author":{"gitId":"-"},"content":"    component.loadPersonName();"},{"lineNumber":789,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(testInstructor.name);"},{"lineNumber":790,"author":{"gitId":"-"},"content":"    expect(component.personEmail).toEqual(testInstructor.email);"},{"lineNumber":791,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":792,"author":{"gitId":"-"},"content":""},{"lineNumber":793,"author":{"gitId":"-"},"content":"  it(\u0027should join course for unregistered student\u0027, () \u003d\u003e {"},{"lineNumber":794,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":795,"author":{"gitId":"-"},"content":"    component.joinCourseForUnregisteredEntity();"},{"lineNumber":796,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":797,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/join\u0027,"},{"lineNumber":798,"author":{"gitId":"-"},"content":"        { entitytype: \u0027student\u0027, key: testQueryParams.key });"},{"lineNumber":799,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":800,"author":{"gitId":"-"},"content":""},{"lineNumber":801,"author":{"gitId":"-"},"content":"  it(\u0027should load an open feedback session\u0027, () \u003d\u003e {"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testOpenFeedbackSession));"},{"lineNumber":804,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":805,"author":{"gitId":"-"},"content":""},{"lineNumber":806,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":807,"author":{"gitId":"-"},"content":""},{"lineNumber":808,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":809,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":810,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Will Be Closing Soon!\u0027,"},{"lineNumber":812,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, \u0027Warning: you have less than 15 minutes before the submission deadline expires!\u0027);"},{"lineNumber":813,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testOpenFeedbackSession.instructions);"},{"lineNumber":814,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testOpenFeedbackSession.submissionStatus);"},{"lineNumber":815,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testOpenFeedbackSession.timeZone);"},{"lineNumber":816,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(false);"},{"lineNumber":817,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":818,"author":{"gitId":"-"},"content":""},{"lineNumber":819,"author":{"gitId":"-"},"content":"  it(\u0027should load a closed feedback session\u0027, () \u003d\u003e {"},{"lineNumber":820,"author":{"gitId":"-"},"content":"    const testClosedFeedbackSession: FeedbackSession \u003d deepCopy(testOpenFeedbackSession);"},{"lineNumber":821,"author":{"gitId":"-"},"content":"    testClosedFeedbackSession.submissionStatus \u003d FeedbackSessionSubmissionStatus.CLOSED;"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testClosedFeedbackSession));"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":825,"author":{"gitId":"-"},"content":""},{"lineNumber":826,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":827,"author":{"gitId":"-"},"content":""},{"lineNumber":828,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":829,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Closed\u0027, SimpleModalType.WARNING, expect.anything());"},{"lineNumber":832,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testClosedFeedbackSession.instructions);"},{"lineNumber":833,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testClosedFeedbackSession.submissionStatus);"},{"lineNumber":834,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testClosedFeedbackSession.timeZone);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(true);"},{"lineNumber":836,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":837,"author":{"gitId":"-"},"content":""},{"lineNumber":838,"author":{"gitId":"-"},"content":"  it(\u0027should load a visible not open feedback session\u0027, () \u003d\u003e {"},{"lineNumber":839,"author":{"gitId":"-"},"content":"    const testVisibleNotOpenFeedbackSession: FeedbackSession \u003d deepCopy(testOpenFeedbackSession);"},{"lineNumber":840,"author":{"gitId":"-"},"content":"    testVisibleNotOpenFeedbackSession.submissionStatus \u003d FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN;"},{"lineNumber":841,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testVisibleNotOpenFeedbackSession));"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":844,"author":{"gitId":"-"},"content":""},{"lineNumber":845,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":846,"author":{"gitId":"-"},"content":""},{"lineNumber":847,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":848,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":849,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":850,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Not Open\u0027, SimpleModalType.WARNING, expect.anything());"},{"lineNumber":851,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testVisibleNotOpenFeedbackSession.instructions);"},{"lineNumber":852,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testVisibleNotOpenFeedbackSession.submissionStatus);"},{"lineNumber":853,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testVisibleNotOpenFeedbackSession.timeZone);"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(true);"},{"lineNumber":855,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":856,"author":{"gitId":"-"},"content":""},{"lineNumber":857,"author":{"gitId":"-"},"content":"  it(\u0027should redirect when loading non-existent feedback session\u0027, () \u003d\u003e {"},{"lineNumber":858,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027).mockReturnValue(throwError({"},{"lineNumber":859,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is an error\u0027 },"},{"lineNumber":860,"author":{"gitId":"-"},"content":"      status: 404,"},{"lineNumber":861,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":862,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":863,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":864,"author":{"gitId":"-"},"content":""},{"lineNumber":865,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":866,"author":{"gitId":"-"},"content":""},{"lineNumber":867,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Does Not Exist!\u0027, SimpleModalType.DANGER,"},{"lineNumber":869,"author":{"gitId":"-"},"content":"        \u0027The session does not exist (most likely deleted by the instructor after the submission link was sent).\u0027);"},{"lineNumber":870,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":871,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/home\u0027);"},{"lineNumber":872,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":873,"author":{"gitId":"-"},"content":""},{"lineNumber":874,"author":{"gitId":"-"},"content":"  it(\u0027should redirect when loading non-viewable feedback session\u0027, () \u003d\u003e {"},{"lineNumber":875,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027).mockReturnValue(throwError({"},{"lineNumber":876,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is an error\u0027 },"},{"lineNumber":877,"author":{"gitId":"-"},"content":"      status: 403,"},{"lineNumber":878,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":879,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":880,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":881,"author":{"gitId":"-"},"content":""},{"lineNumber":882,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":883,"author":{"gitId":"-"},"content":""},{"lineNumber":884,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":885,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Not Authorised To Access!\u0027, SimpleModalType.DANGER, \u0027This is an error\u0027);"},{"lineNumber":886,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":887,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/home\u0027);"},{"lineNumber":888,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":889,"author":{"gitId":"-"},"content":""},{"lineNumber":890,"author":{"gitId":"-"},"content":"  it(\u0027should load feedback questions and recipients and responses\u0027, () \u003d\u003e {"},{"lineNumber":891,"author":{"gitId":"-"},"content":"    const testFeedbackQuestions: FeedbackQuestions \u003d {"},{"lineNumber":892,"author":{"gitId":"-"},"content":"      questions: ["},{"lineNumber":893,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":894,"author":{"gitId":"-"},"content":"          feedbackQuestionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":895,"author":{"gitId":"-"},"content":"          questionNumber: testMcqQuestionSubmissionForm2.questionNumber,"},{"lineNumber":896,"author":{"gitId":"-"},"content":"          questionBrief: testMcqQuestionSubmissionForm2.questionBrief,"},{"lineNumber":897,"author":{"gitId":"-"},"content":"          questionDescription: testMcqQuestionSubmissionForm2.questionDescription,"},{"lineNumber":898,"author":{"gitId":"-"},"content":"          questionDetails: testMcqQuestionSubmissionForm2.questionDetails,"},{"lineNumber":899,"author":{"gitId":"-"},"content":"          questionType: testMcqQuestionSubmissionForm2.questionType,"},{"lineNumber":900,"author":{"gitId":"-"},"content":"          giverType: testMcqQuestionSubmissionForm2.giverType,"},{"lineNumber":901,"author":{"gitId":"-"},"content":"          recipientType: testMcqQuestionSubmissionForm2.recipientType,"},{"lineNumber":902,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting:"},{"lineNumber":903,"author":{"gitId":"-"},"content":"            testMcqQuestionSubmissionForm2.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":904,"author":{"gitId":"-"},"content":"          customNumberOfEntitiesToGiveFeedbackTo: testMcqQuestionSubmissionForm2.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":905,"author":{"gitId":"-"},"content":"          showResponsesTo: testMcqQuestionSubmissionForm2.showResponsesTo,"},{"lineNumber":906,"author":{"gitId":"-"},"content":"          showGiverNameTo: testMcqQuestionSubmissionForm2.showGiverNameTo,"},{"lineNumber":907,"author":{"gitId":"-"},"content":"          showRecipientNameTo: testMcqQuestionSubmissionForm2.showRecipientNameTo,"},{"lineNumber":908,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":909,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":910,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":911,"author":{"gitId":"-"},"content":"    const testFeedbackQuestionRecipients: FeedbackQuestionRecipients \u003d {"},{"lineNumber":912,"author":{"gitId":"-"},"content":"      recipients: ["},{"lineNumber":913,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":914,"author":{"gitId":"-"},"content":"          name: \u0027Barry Harris\u0027,"},{"lineNumber":915,"author":{"gitId":"-"},"content":"          identifier: \u0027barry-harris-id\u0027,"},{"lineNumber":916,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":917,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":918,"author":{"gitId":"-"},"content":"          name: \u0027Gene Harris\u0027,"},{"lineNumber":919,"author":{"gitId":"-"},"content":"          identifier: \u0027gene-harris-id\u0027,"},{"lineNumber":920,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":921,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":923,"author":{"gitId":"-"},"content":"    const testExistingResponses: FeedbackResponses \u003d {"},{"lineNumber":924,"author":{"gitId":"-"},"content":"      responses: [testResponse1, testResponse2],"},{"lineNumber":925,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":926,"author":{"gitId":"-"},"content":""},{"lineNumber":927,"author":{"gitId":"-"},"content":"    const getQuestionsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027getFeedbackQuestions\u0027)"},{"lineNumber":928,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testFeedbackQuestions));"},{"lineNumber":929,"author":{"gitId":"-"},"content":"    const loadRecipientsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027loadFeedbackQuestionRecipients\u0027)"},{"lineNumber":930,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testFeedbackQuestionRecipients));"},{"lineNumber":931,"author":{"gitId":"-"},"content":"    const getResponseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027getFeedbackResponse\u0027)"},{"lineNumber":932,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testExistingResponses));"},{"lineNumber":933,"author":{"gitId":"-"},"content":""},{"lineNumber":934,"author":{"gitId":"-"},"content":"    component.loadFeedbackQuestions();"},{"lineNumber":935,"author":{"gitId":"-"},"content":""},{"lineNumber":936,"author":{"gitId":"-"},"content":"    expect(getQuestionsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":937,"author":{"gitId":"-"},"content":"    expect(loadRecipientsSpy).toHaveBeenLastCalledWith({"},{"lineNumber":938,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":939,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":940,"author":{"gitId":"-"},"content":"      moderatedPerson: \u0027\u0027,"},{"lineNumber":941,"author":{"gitId":"-"},"content":"      previewAs: \u0027\u0027,"},{"lineNumber":942,"author":{"gitId":"-"},"content":"      questionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":943,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":944,"author":{"gitId":"-"},"content":"    expect(getResponseSpy).toHaveBeenLastCalledWith({"},{"lineNumber":945,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":946,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":947,"author":{"gitId":"-"},"content":"      moderatedPerson: \u0027\u0027,"},{"lineNumber":948,"author":{"gitId":"-"},"content":"      questionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":949,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":950,"author":{"gitId":"-"},"content":"    expect(component.questionSubmissionForms.length).toEqual(1);"},{"lineNumber":951,"author":{"gitId":"-"},"content":"    expect(component.questionSubmissionForms[0]).toEqual(testMcqQuestionSubmissionForm2);"},{"lineNumber":952,"author":{"gitId":"-"},"content":"    expect(component.hasAnyResponseToSubmit).toEqual(true);"},{"lineNumber":953,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":954,"author":{"gitId":"-"},"content":""},{"lineNumber":955,"author":{"gitId":"-"},"content":"  it(\u0027should check that there are no responses to submit\u0027, () \u003d\u003e {"},{"lineNumber":956,"author":{"gitId":"-"},"content":"    const testSubmissionForm: QuestionSubmissionFormModel \u003d deepCopy(testTextQuestionSubmissionForm);"},{"lineNumber":957,"author":{"gitId":"-"},"content":"    testSubmissionForm.recipientSubmissionForms \u003d [];"},{"lineNumber":958,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testSubmissionForm];"},{"lineNumber":959,"author":{"gitId":"-"},"content":"    expect(component.hasAnyResponseToSubmit).toEqual(false);"},{"lineNumber":960,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":961,"author":{"gitId":"-"},"content":""},{"lineNumber":962,"author":{"gitId":"-"},"content":"  it(\u0027should save feedback responses\u0027, () \u003d\u003e {"},{"lineNumber":963,"author":{"gitId":"-"},"content":"    const mockModalRef: any \u003d { componentInstance: {} };"},{"lineNumber":964,"author":{"gitId":"-"},"content":"    const testResponseDetails1: any \u003d deepCopy(testMcqRecipientSubmissionForm.responseDetails);"},{"lineNumber":965,"author":{"gitId":"-"},"content":"    // leave question unanswered"},{"lineNumber":966,"author":{"gitId":"-"},"content":"    const testResponseDetails2: FeedbackTextResponseDetails \u003d { answer: \u0027\u0027, questionType: FeedbackQuestionType.TEXT };"},{"lineNumber":967,"author":{"gitId":"-"},"content":"    const testQuestionSubmissionForm1: QuestionSubmissionFormModel \u003d deepCopy(testMcqQuestionSubmissionForm);"},{"lineNumber":968,"author":{"gitId":"-"},"content":"    const testQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d deepCopy(testTextQuestionSubmissionForm);"},{"lineNumber":969,"author":{"gitId":"-"},"content":"    testQuestionSubmissionForm1.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails1;"},{"lineNumber":970,"author":{"gitId":"-"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails2;"},{"lineNumber":971,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testQuestionSubmissionForm1, testQuestionSubmissionForm2];"},{"lineNumber":972,"author":{"gitId":"-"},"content":""},{"lineNumber":973,"author":{"gitId":"-"},"content":"    const responseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027submitFeedbackResponses\u0027)"},{"lineNumber":974,"author":{"gitId":"-"},"content":"        .mockImplementation((id: string) \u003d\u003e {"},{"lineNumber":975,"author":{"gitId":"-"},"content":"          if (id \u003d\u003d\u003d testQuestionSubmissionForm1.feedbackQuestionId) {"},{"lineNumber":976,"author":{"gitId":"-"},"content":"            return of({ responses: [testResponse1], requestId: \u002710\u0027 });"},{"lineNumber":977,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":978,"author":{"gitId":"-"},"content":"          return of({ responses: [testResponse2], requestId: \u002720\u0027 });"},{"lineNumber":979,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":980,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":981,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027updateComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":982,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockReturnValue(mockModalRef);"},{"lineNumber":983,"author":{"gitId":"-"},"content":""},{"lineNumber":984,"author":{"gitId":"-"},"content":"    component.saveFeedbackResponses();"},{"lineNumber":985,"author":{"gitId":"-"},"content":""},{"lineNumber":986,"author":{"gitId":"-"},"content":"    expect(responseSpy).toBeCalledTimes(2);"},{"lineNumber":987,"author":{"gitId":"-"},"content":"    expect(responseSpy).toHaveBeenNthCalledWith(1, \u0027feedback-question-id-mcq\u0027, {"},{"lineNumber":988,"author":{"gitId":"-"},"content":"      responses: [{"},{"lineNumber":989,"author":{"gitId":"-"},"content":"        recipient: testMcqRecipientSubmissionForm.recipientIdentifier,"},{"lineNumber":990,"author":{"gitId":"-"},"content":"        responseDetails: testResponseDetails1,"},{"lineNumber":991,"author":{"gitId":"-"},"content":"      }],"},{"lineNumber":992,"author":{"gitId":"-"},"content":"    }, {"},{"lineNumber":993,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":994,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":995,"author":{"gitId":"-"},"content":"      moderatedperson: \u0027\u0027,"},{"lineNumber":996,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":997,"author":{"gitId":"-"},"content":"    expect(responseSpy).toHaveBeenLastCalledWith(\u0027feedback-question-id-text\u0027, {"},{"lineNumber":998,"author":{"gitId":"-"},"content":"      responses: [], // do not call for empty response details"},{"lineNumber":999,"author":{"gitId":"-"},"content":"    }, {"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"      moderatedperson: \u0027\u0027,"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1004,"author":{"gitId":"-"},"content":""},{"lineNumber":1005,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.requestIds).toEqual({"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-mcq\u0027: \u002710\u0027,"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-text\u0027: \u002720\u0027,"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.questions).toEqual(["},{"lineNumber":1010,"author":{"gitId":"-"},"content":"      testQuestionSubmissionForm1,"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"      testQuestionSubmissionForm2,"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.answers).toEqual({"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-mcq\u0027: [testResponse1],"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-text\u0027: [testResponse2],"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.notYetAnsweredQuestions).toHaveLength(1);"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.failToSaveQuestions).toEqual({});"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1020,"author":{"gitId":"-"},"content":""},{"lineNumber":1021,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should not save invalid feedback responses\u0027, () \u003d\u003e {"},{"lineNumber":1022,"author":{"gitId":"zhaojj2209"},"content":"    const mockModalRef: any \u003d { componentInstance: {} };"},{"lineNumber":1023,"author":{"gitId":"zhaojj2209"},"content":"    const testResponseDetails1: any \u003d deepCopy(testMcqRecipientSubmissionForm.responseDetails);"},{"lineNumber":1024,"author":{"gitId":"zhaojj2209"},"content":"    const testResponseDetails2: any \u003d deepCopy(testConstsumRecipientSubmissionForm.responseDetails);"},{"lineNumber":1025,"author":{"gitId":"zhaojj2209"},"content":"    const testQuestionSubmissionForm1: QuestionSubmissionFormModel \u003d deepCopy(testMcqQuestionSubmissionForm);"},{"lineNumber":1026,"author":{"gitId":"zhaojj2209"},"content":"    const testQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d deepCopy(testConstsumQuestionSubmissionForm);"},{"lineNumber":1027,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm1.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails1;"},{"lineNumber":1028,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails2;"},{"lineNumber":1029,"author":{"gitId":"zhaojj2209"},"content":"    // invalid response"},{"lineNumber":1030,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].isValid \u003d false;"},{"lineNumber":1031,"author":{"gitId":"zhaojj2209"},"content":"    component.questionSubmissionForms \u003d [testQuestionSubmissionForm1, testQuestionSubmissionForm2];"},{"lineNumber":1032,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1033,"author":{"gitId":"-"},"content":"    const responseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027submitFeedbackResponses\u0027)"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"        .mockImplementation(() \u003d\u003e {"},{"lineNumber":1035,"author":{"gitId":"zhaojj2209"},"content":"          return of({ responses: [testResponse1], requestId: \u002710\u0027 });"},{"lineNumber":1036,"author":{"gitId":"zhaojj2209"},"content":"        });"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027updateComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockReturnValue(mockModalRef);"},{"lineNumber":1040,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1041,"author":{"gitId":"zhaojj2209"},"content":"    component.saveFeedbackResponses();"},{"lineNumber":1042,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1043,"author":{"gitId":"zhaojj2209"},"content":"    expect(responseSpy).toBeCalledTimes(1);"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"    expect(responseSpy).toHaveBeenNthCalledWith(1, testQuestionSubmissionForm1.feedbackQuestionId, {"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"      responses: [{"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"        recipient: testMcqRecipientSubmissionForm.recipientIdentifier,"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"        responseDetails: testResponseDetails1,"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"      }],"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"    }, {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"      moderatedperson: \u0027\u0027,"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1054,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1055,"author":{"gitId":"zhaojj2209"},"content":"    // only the valid response is saved"},{"lineNumber":1056,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.requestIds).toEqual({"},{"lineNumber":1057,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm1.feedbackQuestionId]: \u002710\u0027,"},{"lineNumber":1058,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1059,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.questions).toEqual(["},{"lineNumber":1060,"author":{"gitId":"zhaojj2209"},"content":"      testQuestionSubmissionForm1,"},{"lineNumber":1061,"author":{"gitId":"zhaojj2209"},"content":"      testQuestionSubmissionForm2,"},{"lineNumber":1062,"author":{"gitId":"zhaojj2209"},"content":"    ]);"},{"lineNumber":1063,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.answers).toEqual({"},{"lineNumber":1064,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm1.feedbackQuestionId]: [testResponse1],"},{"lineNumber":1065,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1066,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.failToSaveQuestions).toEqual({"},{"lineNumber":1067,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm2.questionNumber]: \u0027Invalid responses provided. Please check question constraints.\u0027,"},{"lineNumber":1068,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1069,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":1070,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1071,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to create new comment when submission form has no original comment\u0027, () \u003d\u003e {"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testTextRecipientSubmissionForm);"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027)"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testComment));"},{"lineNumber":1075,"author":{"gitId":"-"},"content":""},{"lineNumber":1076,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual(component.getCommentModel(testComment));"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1079,"author":{"gitId":"-"},"content":""},{"lineNumber":1080,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith({"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"    }, testTextRecipientSubmissionForm.responseId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1088,"author":{"gitId":"-"},"content":""},{"lineNumber":1089,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to update existing comment when submission form has original comment\u0027, () \u003d\u003e {"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm);"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMcqRecipientSubmissionForm.commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027updateComment\u0027)"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testComment));"},{"lineNumber":1094,"author":{"gitId":"-"},"content":""},{"lineNumber":1095,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual(component.getCommentModel(testComment));"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1098,"author":{"gitId":"-"},"content":""},{"lineNumber":1099,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith({"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"    }, expectedId, Intent.STUDENT_SUBMISSION, { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1106,"author":{"gitId":"-"},"content":""},{"lineNumber":1107,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to delete existing comment when new comment text is empty\u0027, () \u003d\u003e {"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm2);"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMcqRecipientSubmissionForm2.commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027deleteComment\u0027)"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"        .mockReturnValue(of({}));"},{"lineNumber":1112,"author":{"gitId":"-"},"content":""},{"lineNumber":1113,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual(undefined);"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1116,"author":{"gitId":"-"},"content":""},{"lineNumber":1117,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith(expectedId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1121,"author":{"gitId":"-"},"content":""},{"lineNumber":1122,"author":{"gitId":"-"},"content":"  it(\u0027should delete participant comment\u0027, () \u003d\u003e {"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"    const testSubmissionForm: QuestionSubmissionFormModel \u003d deepCopy(testMsqQuestionSubmissionForm);"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMsqQuestionSubmissionForm.recipientSubmissionForms[0]"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"        .commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027deleteComment\u0027)"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(true));"},{"lineNumber":1128,"author":{"gitId":"-"},"content":""},{"lineNumber":1129,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testSubmissionForm];"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"    component.deleteParticipantComment(0, 0);"},{"lineNumber":1131,"author":{"gitId":"-"},"content":""},{"lineNumber":1132,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith(expectedId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":35,"-":1101}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DOCUMENT } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PageScrollService } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackResponsesResponse, FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipient,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSessionLogType,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { FeedbackResponseRequest, Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import { DEFAULT_NUMBER_OF_RETRY_ATTEMPTS } from \u0027../../../types/default-retry-attempts\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../../components/comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027../../components/error-report/error-report.component\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"interface FeedbackQuestionsResponse {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  questions: FeedbackQuestion[];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":57,"author":{"gitId":"-"},"content":" * Feedback session submission page."},{"lineNumber":58,"author":{"gitId":"-"},"content":" */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-submission-page\u0027,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-submission-page.component.html\u0027,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-submission-page.component.scss\u0027],"},{"lineNumber":63,"author":{"gitId":"-"},"content":"})"},{"lineNumber":64,"author":{"gitId":"-"},"content":"export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  Intent: typeof Intent \u003d Intent;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  regKey: string \u003d \u0027\u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  entityType: string \u003d \u0027student\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  loggedInUser: string \u003d \u0027\u0027;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  moderatedPerson: string \u003d \u0027\u0027;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  previewAsPerson: string \u003d \u0027\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  // the name of the person involved"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  // (e.g. the student name for unregistered student, the name of instructor being moderated)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  personName: string \u003d \u0027\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  personEmail: string \u003d \u0027\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  feedbackSessionInstructions: string \u003d \u0027\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  feedbackSessionTimezone: string \u003d \u0027\u0027;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  feedbackSessionSubmissionStatus: FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus.OPEN;"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  intent: Intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  questionSubmissionForms: QuestionSubmissionFormModel[] \u003d [];"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  isSavingResponses: boolean \u003d false;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  isSubmissionFormsDisabled: boolean \u003d false;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  isModerationHintExpanded: boolean \u003d false;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  moderatedQuestionId: string \u003d \u0027\u0027;"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  isFeedbackSessionLoading: boolean \u003d true;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  isFeedbackSessionQuestionsLoading: boolean \u003d true;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  hasFeedbackSessionQuestionsLoadingFailed: boolean \u003d false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  isFeedbackSessionQuestionResponsesLoading: boolean \u003d true;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  retryAttempts: number \u003d DEFAULT_NUMBER_OF_RETRY_ATTEMPTS;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"              private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"              private feedbackResponsesService: FeedbackResponsesService,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"              private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              private pageScrollService: PageScrollService,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"              private commentService: FeedbackResponseCommentService,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"              private logService: LogService,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              @Inject(DOCUMENT) private document: any) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    this.route.data.pipe("},{"lineNumber":129,"author":{"gitId":"-"},"content":"        tap((data: any) \u003d\u003e {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"          this.intent \u003d data.intent;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        switchMap(() \u003d\u003e this.route.queryParams),"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    ).subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      this.regKey \u003d queryParams.key ? queryParams.key : \u0027\u0027;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      this.moderatedPerson \u003d queryParams.moderatedperson ? queryParams.moderatedperson : \u0027\u0027;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      this.previewAsPerson \u003d queryParams.previewas ? queryParams.previewas : \u0027\u0027;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      if (queryParams.entitytype \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        this.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        this.intent \u003d Intent.INSTRUCTOR_SUBMISSION;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      this.moderatedQuestionId \u003d queryParams.moderatedquestionId ? queryParams.moderatedquestionId : \u0027\u0027;"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // disable submission in the preview mode"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search.replace(/\u0026/g, \u0027%26\u0027)}`;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) \u003d\u003e {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        const isPreviewOrModeration: boolean \u003d !!(auth.user \u0026\u0026 (this.moderatedPerson || this.previewAsPerson));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (auth.user) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"          this.loggedInUser \u003d auth.user.id;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (this.regKey \u0026\u0026 !isPreviewOrModeration) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"          this.authService.getAuthRegkeyValidity(this.regKey, this.intent).subscribe((resp: RegkeyValidity) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            if (resp.isAllowedAccess) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              if (resp.isUsed) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                // The logged in user matches the registration key; redirect to the logged in URL"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"                this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    this.router, `/web/${this.entityType}/sessions/submission`,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":165,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                // Valid, unused registration key; load information based on the key"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                this.loadPersonName();"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                this.loadFeedbackSession();"},{"lineNumber":169,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            } else if (resp.isValid) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"              // At this point, registration key must already be used, otherwise access would be granted"},{"lineNumber":172,"author":{"gitId":"-"},"content":"              if (this.loggedInUser) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                // Registration key belongs to another user who is not the logged in user"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    `You are trying to access TEAMMATES using the Google account ${this.loggedInUser}, which"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                // There is no logged in user for a valid, used registration key, redirect to login page"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                // eslint-disable-next-line no-lonely-if"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                if (this.entityType \u003d\u003d\u003d \u0027student\u0027) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                } else if (this.entityType \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.instructorLoginUrl}`;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"              // The registration key is invalid"},{"lineNumber":191,"author":{"gitId":"-"},"content":"              this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                  \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } else if (this.loggedInUser) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          // Load information based on logged in user"},{"lineNumber":200,"author":{"gitId":"-"},"content":"          // This will also cover moderation/preview cases"},{"lineNumber":201,"author":{"gitId":"-"},"content":"          this.loadPersonName();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"          this.loadFeedbackSession();"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"              \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      }, () \u003d\u003e {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"  // Solution for checking partial element visibility adapted from"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  // https://stackoverflow.com/questions/30943662/check-if-element-is-partially-in-viewport"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":217,"author":{"gitId":"-"},"content":"   * Checks if a given element is in view."},{"lineNumber":218,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   * @param e element to perform check for"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  isInViewport(e: HTMLElement): boolean {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    const rect: ClientRect \u003d e.getBoundingClientRect();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    const windowHeight: number \u003d (window.innerHeight || document.documentElement.clientHeight);"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    return !("},{"lineNumber":226,"author":{"gitId":"-"},"content":"      Math.floor(100 - (((rect.top \u003e\u003d 0 ? 0 : rect.top) / +-rect.height) * 100)) \u003c 1"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      || Math.floor(100 - ((rect.bottom - windowHeight) / rect.height) * 100) \u003c 1"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":232,"author":{"gitId":"-"},"content":"   * Scrolls to the question based on its given question id."},{"lineNumber":233,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  scrollToQuestion(): void {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    const div: HTMLElement | null \u003d document.getElementById(this.moderatedQuestionId);"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    // continue scrolling as long as the element to scroll to is yet to be found or not in view"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    if (div \u003d\u003d null || !(this.isInViewport(div))) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      setTimeout(() \u003d\u003e {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        this.pageScrollService.scroll({"},{"lineNumber":241,"author":{"gitId":"-"},"content":"          document: this.document,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"          scrollTarget: `#${this.moderatedQuestionId}`,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"          scrollOffset: 70,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        this.scrollToQuestion();"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      }, 500);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    if (!this.moderatedQuestionId) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    this.scrollToQuestion();"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":258,"author":{"gitId":"-"},"content":"   * Loads the name of the person involved in the submission."},{"lineNumber":259,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  loadPersonName(): void {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    switch (this.intent) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      case Intent.STUDENT_SUBMISSION:"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        this.studentService.getStudent("},{"lineNumber":264,"author":{"gitId":"-"},"content":"            this.courseId,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            this.moderatedPerson || this.previewAsPerson,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            this.regKey,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        ).subscribe((student: Student) \u003d\u003e {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"          this.personName \u003d student.name;"},{"lineNumber":269,"author":{"gitId":"-"},"content":"          this.personEmail \u003d student.email;"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"          this.logService.createFeedbackSessionLog({"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            courseId: this.courseId,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            studentEmail: this.personEmail,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            logType: FeedbackSessionLogType.ACCESS,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"          }).subscribe(() \u003d\u003e {"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            this.statusMessageService.showWarningToast(\u0027Failed to log feedback session access\u0027);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      case Intent.INSTRUCTOR_SUBMISSION:"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        this.instructorService.getInstructor({"},{"lineNumber":286,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"          feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"          intent: this.intent,"},{"lineNumber":289,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"          moderatedPerson: this.moderatedPerson,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"          previewAs: this.previewAsPerson,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"          this.personName \u003d instructor.name;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"          this.personEmail \u003d instructor.email;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":302,"author":{"gitId":"-"},"content":"   * Redirects to join course link for unregistered student/instructor."},{"lineNumber":303,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":304,"author":{"gitId":"-"},"content":"  joinCourseForUnregisteredEntity(): void {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/join\u0027, { entitytype: this.entityType, key: this.regKey });"},{"lineNumber":306,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":309,"author":{"gitId":"-"},"content":"   * Loads the feedback session information."},{"lineNumber":310,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionLoading \u003d true;"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionLoading \u003d false;"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        this.feedbackSessionInstructions \u003d feedbackSession.instructions;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":327,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"        this.formattedSessionClosingTime \u003d this.timezoneService"},{"lineNumber":330,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"        this.feedbackSessionSubmissionStatus \u003d feedbackSession.submissionStatus;"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        this.feedbackSessionTimezone \u003d feedbackSession.timeZone;"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"        // don\u0027t show alert modal in moderation"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        if (!this.moderatedPerson) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"          let modalContent: string;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"          switch (feedbackSession.submissionStatus) {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN:"},{"lineNumber":340,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":341,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eThe feedback session is currently not open for submissions.\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":344,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":345,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Not Open\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.OPEN:"},{"lineNumber":348,"author":{"gitId":"-"},"content":"              // closing in 15 minutes"},{"lineNumber":349,"author":{"gitId":"-"},"content":"              if (feedbackSession.submissionEndTimestamp - Date.now() \u003c 15 * 60 * 1000) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                modalContent \u003d \u0027Warning: you have less than 15 minutes before the submission deadline expires!\u0027;"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                this.simpleModalService.openInformationModal("},{"lineNumber":352,"author":{"gitId":"-"},"content":"                  \u0027Feedback Session Will Be Closing Soon!\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":354,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.CLOSED:"},{"lineNumber":356,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eFeedback Session is Closed\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":360,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":361,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Closed\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.GRACE_PERIOD:"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":365,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"        this.loadFeedbackQuestions();"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"        // Display note on submission on mobile device"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        const mobileDeviceWidth: number \u003d 768;"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        if (this.feedbackSessionSubmissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN"},{"lineNumber":373,"author":{"gitId":"-"},"content":"          \u0026\u0026 window.innerWidth \u003c mobileDeviceWidth) {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"          const modalContent: string \u003d `Note that you can use the Submit button to save responses already entered,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"              and continue to answer remaining questions after that."},{"lineNumber":376,"author":{"gitId":"-"},"content":"              You may also edit your submission any number of times before the closing time of this session.`;"},{"lineNumber":377,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal("},{"lineNumber":378,"author":{"gitId":"-"},"content":"              \u0027Note On Submission\u0027, SimpleModalType.INFO, modalContent);"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal(\u0027Feedback Session Does Not Exist!\u0027, SimpleModalType.DANGER,"},{"lineNumber":383,"author":{"gitId":"-"},"content":"              \u0027The session does not exist (most likely deleted by the instructor after the submission link was sent).\u0027);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"          this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        } else if (resp.status \u003d\u003d\u003d 403) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal(\u0027Not Authorised To Access!\u0027, SimpleModalType.DANGER,"},{"lineNumber":387,"author":{"gitId":"-"},"content":"              resp.error.message);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"          this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage("},{"lineNumber":391,"author":{"gitId":"-"},"content":"              this.router, `/web/${this.entityType}/home`, resp.error.message);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":393,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":394,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":397,"author":{"gitId":"-"},"content":"   * Loads feedback questions to submit."},{"lineNumber":398,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":399,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionQuestionsLoading \u003d true;"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    this.questionSubmissionForms \u003d [];"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackQuestionsResponse) \u003d\u003e {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"          this.isFeedbackSessionQuestionResponsesLoading \u003d response.questions.length !\u003d\u003d 0;"},{"lineNumber":414,"author":{"gitId":"-"},"content":"          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            const model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"              feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"              questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"              questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"              questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"              giverType: feedbackQuestion.giverType,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"              recipientType: feedbackQuestion.recipientType,"},{"lineNumber":424,"author":{"gitId":"-"},"content":"              recipientList: [],"},{"lineNumber":425,"author":{"gitId":"-"},"content":"              recipientSubmissionForms: [],"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"              questionType: feedbackQuestion.questionType,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"              questionDetails: feedbackQuestion.questionDetails,"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":432,"author":{"gitId":"-"},"content":"                      ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 0,"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"              showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"              showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"              showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            this.questionSubmissionForms.push(model);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"            this.loadFeedbackQuestionRecipientsForQuestion(model);"},{"lineNumber":440,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"          this.handleError(resp);"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":444,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   * Tracks the question submission form by feedback question id."},{"lineNumber":448,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":451,"author":{"gitId":"-"},"content":"  trackQuestionSubmissionFormByFn(_: any, item: QuestionSubmissionFormModel): any {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":453,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":456,"author":{"gitId":"-"},"content":"   * Loads the feedback question recipients for the question."},{"lineNumber":457,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":458,"author":{"gitId":"-"},"content":"  loadFeedbackQuestionRecipientsForQuestion(model: QuestionSubmissionFormModel): void {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.loadFeedbackQuestionRecipients({"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    }).subscribe((response: FeedbackQuestionRecipients) \u003d\u003e {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      response.recipients.forEach((recipient: FeedbackQuestionRecipient) \u003d\u003e {"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        model.recipientList.push({"},{"lineNumber":468,"author":{"gitId":"-"},"content":"          recipientIdentifier: recipient.identifier,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"          recipientName: recipient.name,"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        // don\u0027t load responses in preview mode"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        // generate a list of empty response box"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        const formMode: QuestionSubmissionFormMode \u003d this.getQuestionSubmissionFormMode(model);"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":478,"author":{"gitId":"-"},"content":"          if (formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT"},{"lineNumber":479,"author":{"gitId":"-"},"content":"              \u0026\u0026 model.recipientSubmissionForms.length \u003e\u003d model.customNumberOfEntitiesToGiveFeedbackTo) {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":481,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"          let recipientIdentifier: string \u003d \u0027\u0027;"},{"lineNumber":484,"author":{"gitId":"-"},"content":"          if (formMode !\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":485,"author":{"gitId":"-"},"content":"            recipientIdentifier \u003d recipient.recipientIdentifier;"},{"lineNumber":486,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":487,"author":{"gitId":"-"},"content":""},{"lineNumber":488,"author":{"gitId":"-"},"content":"          model.recipientSubmissionForms.push({"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            recipientIdentifier,"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":491,"author":{"gitId":"-"},"content":"            responseId: \u0027\u0027,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"            isValid: true,"},{"lineNumber":493,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        this.isFeedbackSessionQuestionResponsesLoading \u003d false;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        this.loadFeedbackResponses(model);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":500,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   * Gets the form mode of the question submission form."},{"lineNumber":504,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":505,"author":{"gitId":"-"},"content":"  getQuestionSubmissionFormMode(model: QuestionSubmissionFormModel): QuestionSubmissionFormMode {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    const isNumberOfEntitiesToGiveFeedbackToSettingLimited: boolean \u003d"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        (model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS_IN_SAME_SECTION"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS_IN_SAME_SECTION"},{"lineNumber":511,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.numberOfEntitiesToGiveFeedbackToSetting \u003d\u003d\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.recipientList.length \u003e model.customNumberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    return isNumberOfEntitiesToGiveFeedbackToSettingLimited"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        ? QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT : QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   * Loads the responses of the feedback question to {@recipientSubmissionForms} in the model."},{"lineNumber":521,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":522,"author":{"gitId":"-"},"content":"  loadFeedbackResponses(model: QuestionSubmissionFormModel): void {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionQuestionResponsesLoading \u003d true;"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    this.feedbackResponsesService.getFeedbackResponse({"},{"lineNumber":525,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionQuestionResponsesLoading \u003d false;"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      .subscribe((existingResponses: FeedbackResponsesResponse) \u003d\u003e {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT) {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"          // need to generate a full list of submission forms"},{"lineNumber":535,"author":{"gitId":"-"},"content":"          model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            const matchedExistingResponse: FeedbackResponse | undefined \u003d"},{"lineNumber":537,"author":{"gitId":"-"},"content":"              existingResponses.responses.find("},{"lineNumber":538,"author":{"gitId":"-"},"content":"                  (response: FeedbackResponse) \u003d\u003e response.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            const submissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"              recipientIdentifier: recipient.recipientIdentifier,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"              responseDetails: matchedExistingResponse"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                ? matchedExistingResponse.responseDetails"},{"lineNumber":543,"author":{"gitId":"-"},"content":"                : this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":544,"author":{"gitId":"-"},"content":"              responseId: matchedExistingResponse ? matchedExistingResponse.feedbackResponseId : \u0027\u0027,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            if (matchedExistingResponse \u0026\u0026 matchedExistingResponse.giverComment) {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"              submissionForm.commentByGiver \u003d this.getCommentModel(matchedExistingResponse.giverComment);"},{"lineNumber":549,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push(submissionForm);"},{"lineNumber":551,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":553,"author":{"gitId":"-"},"content":""},{"lineNumber":554,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"          // need to generate limited number of submission forms"},{"lineNumber":556,"author":{"gitId":"-"},"content":"          let numberOfRecipientSubmissionFormsNeeded: number \u003d"},{"lineNumber":557,"author":{"gitId":"-"},"content":"            model.customNumberOfEntitiesToGiveFeedbackTo - existingResponses.responses.length;"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"-"},"content":"          existingResponses.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push({"},{"lineNumber":561,"author":{"gitId":"-"},"content":"              recipientIdentifier: response.recipientIdentifier,"},{"lineNumber":562,"author":{"gitId":"-"},"content":"              responseDetails: response.responseDetails,"},{"lineNumber":563,"author":{"gitId":"-"},"content":"              responseId: response.feedbackResponseId,"},{"lineNumber":564,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":566,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":567,"author":{"gitId":"-"},"content":""},{"lineNumber":568,"author":{"gitId":"-"},"content":"          // generate empty submission forms"},{"lineNumber":569,"author":{"gitId":"-"},"content":"          while (numberOfRecipientSubmissionFormsNeeded \u003e 0) {"},{"lineNumber":570,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push({"},{"lineNumber":571,"author":{"gitId":"-"},"content":"              recipientIdentifier: \u0027\u0027,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"              responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":573,"author":{"gitId":"-"},"content":"              responseId: \u0027\u0027,"},{"lineNumber":574,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":575,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":576,"author":{"gitId":"-"},"content":"            numberOfRecipientSubmissionFormsNeeded -\u003d 1;"},{"lineNumber":577,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":580,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":583,"author":{"gitId":"-"},"content":"   * Gets the comment model for a given comment."},{"lineNumber":584,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":585,"author":{"gitId":"-"},"content":"  getCommentModel(comment: FeedbackResponseComment): CommentRowModel {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      originalComment: comment,"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        commentText: comment.commentText,"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        // the participant comment shall not use custom visibilities"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":595,"author":{"gitId":"-"},"content":"      timezone: this.feedbackSessionTimezone,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":598,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":599,"author":{"gitId":"-"},"content":""},{"lineNumber":600,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":601,"author":{"gitId":"-"},"content":"   * Checks whether there is any submission forms in the current page."},{"lineNumber":602,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":603,"author":{"gitId":"-"},"content":"  get hasAnyResponseToSubmit(): boolean {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    return this.questionSubmissionForms"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        .some((model: QuestionSubmissionFormModel) \u003d\u003e model.recipientSubmissionForms.length !\u003d\u003d 0);"},{"lineNumber":606,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   * Saves all feedback response."},{"lineNumber":610,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   * \u003cp\u003eAll empty feedback response will be deleted; For non-empty responses, update/create them if necessary."},{"lineNumber":612,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":613,"author":{"gitId":"-"},"content":"  saveFeedbackResponses(): void {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    const notYetAnsweredQuestions: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    const requestIds: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    const answers: Record\u003cstring, FeedbackResponse[]\u003e \u003d {};"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    const failToSaveQuestions: Record\u003cnumber, string\u003e \u003d {}; // Map of question number to error message"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    const savingRequests: Observable\u003cany\u003e[] \u003d [];"},{"lineNumber":619,"author":{"gitId":"-"},"content":""},{"lineNumber":620,"author":{"gitId":"-"},"content":"    this.logService.createFeedbackSessionLog({"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":623,"author":{"gitId":"-"},"content":"      studentEmail: this.personEmail,"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      logType: FeedbackSessionLogType.SUBMISSION,"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    }).subscribe(() \u003d\u003e {"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      this.statusMessageService.showWarningToast(\u0027Failed to log feedback session submission\u0027);"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"    this.questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) \u003d\u003e {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"      let isQuestionFullyAnswered: boolean \u003d true;"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"      const responses: FeedbackResponseRequest[] \u003d [];"},{"lineNumber":635,"author":{"gitId":"-"},"content":""},{"lineNumber":636,"author":{"gitId":"-"},"content":"      questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":637,"author":{"gitId":"-"},"content":"          .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"            if (!recipientSubmissionFormModel.isValid) {"},{"lineNumber":639,"author":{"gitId":"-"},"content":"              failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d"},{"lineNumber":640,"author":{"gitId":"-"},"content":"                  \u0027Invalid responses provided. Please check question constraints.\u0027;"},{"lineNumber":641,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":642,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":643,"author":{"gitId":"-"},"content":"            const isFeedbackResponseDetailsEmpty: boolean \u003d"},{"lineNumber":644,"author":{"gitId":"-"},"content":"                this.feedbackResponsesService.isFeedbackResponseDetailsEmpty("},{"lineNumber":645,"author":{"gitId":"-"},"content":"                    questionSubmissionFormModel.questionType, recipientSubmissionFormModel.responseDetails);"},{"lineNumber":646,"author":{"gitId":"-"},"content":"            isQuestionFullyAnswered \u003d isQuestionFullyAnswered \u0026\u0026 !isFeedbackResponseDetailsEmpty;"},{"lineNumber":647,"author":{"gitId":"-"},"content":""},{"lineNumber":648,"author":{"gitId":"-"},"content":"            if (!isFeedbackResponseDetailsEmpty) {"},{"lineNumber":649,"author":{"gitId":"-"},"content":"              responses.push({"},{"lineNumber":650,"author":{"gitId":"-"},"content":"                recipient: recipientSubmissionFormModel.recipientIdentifier,"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                responseDetails: recipientSubmissionFormModel.responseDetails,"},{"lineNumber":652,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":654,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"zhaojj2209"},"content":"      if (!failToSaveQuestions[questionSubmissionFormModel.questionNumber]) {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        savingRequests.push("},{"lineNumber":658,"author":{"gitId":"-"},"content":"            this.feedbackResponsesService.submitFeedbackResponses(questionSubmissionFormModel.feedbackQuestionId, {"},{"lineNumber":659,"author":{"gitId":"-"},"content":"              responses,"},{"lineNumber":660,"author":{"gitId":"-"},"content":"            }, {"},{"lineNumber":661,"author":{"gitId":"-"},"content":"              intent: this.intent,"},{"lineNumber":662,"author":{"gitId":"-"},"content":"              key: this.regKey,"},{"lineNumber":663,"author":{"gitId":"-"},"content":"              moderatedperson: this.moderatedPerson,"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            }).pipe("},{"lineNumber":665,"author":{"gitId":"-"},"content":"                tap((resp: FeedbackResponses) \u003d\u003e {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"                  const responsesMap: Record\u003cstring, FeedbackResponse\u003e \u003d {};"},{"lineNumber":667,"author":{"gitId":"-"},"content":"                  resp.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"                    responsesMap[response.recipientIdentifier] \u003d response;"},{"lineNumber":669,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId] \u003d"},{"lineNumber":670,"author":{"gitId":"-"},"content":"                        answers[questionSubmissionFormModel.feedbackQuestionId] || [];"},{"lineNumber":671,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId].push(response);"},{"lineNumber":672,"author":{"gitId":"-"},"content":"                  });"},{"lineNumber":673,"author":{"gitId":"-"},"content":"                  requestIds[questionSubmissionFormModel.feedbackQuestionId] \u003d resp.requestId || \u0027\u0027;"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"                  questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":676,"author":{"gitId":"-"},"content":"                      .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":677,"author":{"gitId":"-"},"content":"                        if (responsesMap[recipientSubmissionFormModel.recipientIdentifier]) {"},{"lineNumber":678,"author":{"gitId":"-"},"content":"                          const correspondingResp: FeedbackResponse \u003d"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                              responsesMap[recipientSubmissionFormModel.recipientIdentifier];"},{"lineNumber":680,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d correspondingResp.feedbackResponseId;"},{"lineNumber":681,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseDetails \u003d correspondingResp.responseDetails;"},{"lineNumber":682,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.recipientIdentifier \u003d correspondingResp.recipientIdentifier;"},{"lineNumber":683,"author":{"gitId":"-"},"content":"                        } else {"},{"lineNumber":684,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d \u0027\u0027;"},{"lineNumber":685,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":686,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":687,"author":{"gitId":"-"},"content":"                      });"},{"lineNumber":688,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":689,"author":{"gitId":"-"},"content":"                switchMap(() \u003d\u003e"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                    forkJoin(questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":691,"author":{"gitId":"-"},"content":"                        .map((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":692,"author":{"gitId":"-"},"content":"                            this.createCommentRequest(recipientSubmissionFormModel))),"},{"lineNumber":693,"author":{"gitId":"-"},"content":"                ),"},{"lineNumber":694,"author":{"gitId":"-"},"content":"                catchError((error: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"                  failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d error.error.message;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"                  return of(error);"},{"lineNumber":697,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            ),"},{"lineNumber":699,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":700,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":701,"author":{"gitId":"-"},"content":""},{"lineNumber":702,"author":{"gitId":"-"},"content":"      if (!isQuestionFullyAnswered) {"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        notYetAnsweredQuestions.add(questionSubmissionFormModel.questionNumber);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":706,"author":{"gitId":"-"},"content":""},{"lineNumber":707,"author":{"gitId":"-"},"content":"    this.isSavingResponses \u003d true;"},{"lineNumber":708,"author":{"gitId":"-"},"content":"    forkJoin(savingRequests).pipe("},{"lineNumber":709,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":710,"author":{"gitId":"-"},"content":"          this.isSavingResponses \u003d false;"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"          const modalRef: NgbModalRef \u003d this.ngbModal.open(SavingCompleteModalComponent);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.requestIds \u003d requestIds;"},{"lineNumber":714,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.courseId \u003d this.courseId;"},{"lineNumber":715,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":716,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionTimezone \u003d this.feedbackSessionTimezone;"},{"lineNumber":717,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personEmail \u003d this.personEmail;"},{"lineNumber":718,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personName \u003d this.personName;"},{"lineNumber":719,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.questions \u003d this.questionSubmissionForms;"},{"lineNumber":720,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.answers \u003d answers;"},{"lineNumber":721,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.notYetAnsweredQuestions \u003d Array.from(notYetAnsweredQuestions.values());"},{"lineNumber":722,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.failToSaveQuestions \u003d failToSaveQuestions;"},{"lineNumber":723,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":724,"author":{"gitId":"-"},"content":"    ).subscribe();"},{"lineNumber":725,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":726,"author":{"gitId":"-"},"content":""},{"lineNumber":727,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":728,"author":{"gitId":"-"},"content":"   * Creates comment request."},{"lineNumber":729,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":730,"author":{"gitId":"-"},"content":"  createCommentRequest(recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel): Observable\u003cany\u003e {"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.responseId) {"},{"lineNumber":732,"author":{"gitId":"-"},"content":"      // responseId not set, cannot set comment"},{"lineNumber":733,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":734,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver) {"},{"lineNumber":736,"author":{"gitId":"-"},"content":"      // comment not given, do nothing"},{"lineNumber":737,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":738,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver.originalComment) {"},{"lineNumber":741,"author":{"gitId":"-"},"content":"      // comment is new"},{"lineNumber":742,"author":{"gitId":"-"},"content":""},{"lineNumber":743,"author":{"gitId":"-"},"content":"      if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        // new comment is empty"},{"lineNumber":745,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":746,"author":{"gitId":"-"},"content":"        return of({});"},{"lineNumber":747,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"      // create new comment"},{"lineNumber":750,"author":{"gitId":"-"},"content":"      return this.commentService.createComment({"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        // we ignore the fields in comment edit model as participant comment"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        // will follow visibilities from question by design"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":756,"author":{"gitId":"-"},"content":"      }, recipientSubmissionFormModel.responseId, this.intent, {"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        key: this.regKey,"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        moderatedperson: this.moderatedPerson,"},{"lineNumber":759,"author":{"gitId":"-"},"content":"      }).pipe("},{"lineNumber":760,"author":{"gitId":"-"},"content":"          tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":761,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel(comment);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":763,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":764,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":765,"author":{"gitId":"-"},"content":""},{"lineNumber":766,"author":{"gitId":"-"},"content":"    // existing comment"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"    if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":769,"author":{"gitId":"-"},"content":"      // comment is empty, create delete request"},{"lineNumber":770,"author":{"gitId":"-"},"content":"      return this.commentService.deleteComment("},{"lineNumber":771,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":772,"author":{"gitId":"-"},"content":"            key: this.regKey,"},{"lineNumber":773,"author":{"gitId":"-"},"content":"            moderatedperson: this.moderatedPerson,"},{"lineNumber":774,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":775,"author":{"gitId":"-"},"content":"          .pipe("},{"lineNumber":776,"author":{"gitId":"-"},"content":"              tap(() \u003d\u003e {"},{"lineNumber":777,"author":{"gitId":"-"},"content":"                recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":778,"author":{"gitId":"-"},"content":"              }));"},{"lineNumber":779,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":780,"author":{"gitId":"-"},"content":""},{"lineNumber":781,"author":{"gitId":"-"},"content":"    // update comment"},{"lineNumber":782,"author":{"gitId":"-"},"content":"    return this.commentService.updateComment({"},{"lineNumber":783,"author":{"gitId":"-"},"content":"      commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":784,"author":{"gitId":"-"},"content":"      // we ignore the fields in comment edit model as participant comment"},{"lineNumber":785,"author":{"gitId":"-"},"content":"      // will follow visibilities from question by design"},{"lineNumber":786,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":787,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":788,"author":{"gitId":"-"},"content":"    }, recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":789,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":790,"author":{"gitId":"-"},"content":"      moderatedperson: this.moderatedPerson,"},{"lineNumber":791,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":792,"author":{"gitId":"-"},"content":"        tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":793,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel(comment);"},{"lineNumber":794,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":795,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":796,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":799,"author":{"gitId":"-"},"content":"   * Deletes a comment by participants."},{"lineNumber":800,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":801,"author":{"gitId":"-"},"content":"  deleteParticipantComment(questionIndex: number, responseIdx: number): void {"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    const recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel \u003d"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        this.questionSubmissionForms[questionIndex].recipientSubmissionForms[responseIdx];"},{"lineNumber":804,"author":{"gitId":"-"},"content":""},{"lineNumber":805,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver || !recipientSubmissionFormModel.commentByGiver.originalComment) {"},{"lineNumber":806,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":808,"author":{"gitId":"-"},"content":""},{"lineNumber":809,"author":{"gitId":"-"},"content":"    this.commentService.deleteComment("},{"lineNumber":810,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":811,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":812,"author":{"gitId":"-"},"content":"          moderatedperson: this.moderatedPerson,"},{"lineNumber":813,"author":{"gitId":"-"},"content":"        }).subscribe(() \u003d\u003e {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":815,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027Your comment has been deleted!\u0027);"},{"lineNumber":816,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":817,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":819,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"  retryLoadingFeedbackSessionQuestions(): void {"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d false;"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003e\u003d 0) {"},{"lineNumber":824,"author":{"gitId":"-"},"content":"      this.retryAttempts -\u003d 1;"},{"lineNumber":825,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":826,"author":{"gitId":"-"},"content":"    this.loadFeedbackQuestions();"},{"lineNumber":827,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":828,"author":{"gitId":"-"},"content":""},{"lineNumber":829,"author":{"gitId":"-"},"content":"  handleError(resp: ErrorMessageOutput): void {"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003c 0) {"},{"lineNumber":832,"author":{"gitId":"-"},"content":"      const report: NgbModalRef \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":833,"author":{"gitId":"-"},"content":"      report.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":834,"author":{"gitId":"-"},"content":"      report.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":836,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":838,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":839,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":2,"-":837}},{"path":"src/web/app/pages-student/student-home-page/student-home-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCoursesLoadingFailed\" [message]\u003d\"\u0027Failed to load courses\u0027\" (retryEvent)\u003d\"loadStudentCourses()\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isCoursesLoading\"\u003e\u003c/div\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv *ngIf\u003d\"!isCoursesLoading\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courses.length \u003d\u003d\u003d 0; else coursesContainer\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      You are not enrolled in any courses. Please refer to the \u003ca tmRouterLink\u003d\"/web/student/help\"\u003ehelp page\u003c/a\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      if you need more information."},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cng-template #coursesContainer\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courses.length\" class\u003d\"row mb-2\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"float-right\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cstrong class\u003d\"d-inline\"\u003e Sort By: \u003c/strong\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"btn-group\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"sort-course-id-btn\" class\u003d\"btn btn-light\" [disabled]\u003d\"sortBy \u003d\u003d\u003d SortBy.COURSE_ID\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"sort-course-name-btn\" class\u003d\"btn btn-light\" [disabled]\u003d\"sortBy \u003d\u003d\u003d SortBy.COURSE_NAME\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cng-container *ngFor\u003d\"let studentCourse of courses; index as i\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card bg-light top-padded\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-header bg-primary text-white\" *ngIf\u003d\"studentCourse.course as course\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cstrong class\u003d\"text-break\"\u003e[{{ course.courseId }}]: {{ course.courseName }}\u003c/strong\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003ca tmRouterLink\u003d\"/web/student/course\" [queryParams]\u003d\"{courseid: course.courseId}\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"               id\u003d\"view-team-btn-{{i}}\" class\u003d\"btn btn-primary btn-sm button text-nowrap\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              View team"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"table-responsive\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003ctable class\u003d\"table table-striped table-bordered margin-0\" *ngIf\u003d\"studentCourse.feedbackSessions \u0026\u0026 studentCourse.feedbackSessions.length\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cthead\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003ctr\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cth\u003eSession Name\u003c/th\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cth\u003eDeadline\u003c/th\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003cth\u003eSubmissions\u003c/th\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cth\u003eResponses\u003c/th\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"              \u003cth\u003eAction(s)\u003c/th\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/thead\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003ctbody\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003ctr *ngFor\u003d\"let session of studentCourse.feedbackSessions; index as i\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003cng-container\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003ctd class\u003d\"text-break\"\u003e{{ session.session.feedbackSessionName }}\u003c/td\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u003ctd *ngIf\u003d\"session.session.submissionEndTimestamp\"\u003e{{ session.session.submissionEndTimestamp | formatDateDetail: session.session.timeZone }}\u003c/td\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                  \u003cspan [ngbTooltip]\u003d\"getSubmissionStatusTooltip(session)\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    {{ session.isOpened | sessionSubmissionStatus: session.isWaitingToOpen : session.isSubmitted }}"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                  \u003c/span\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                  \u003cspan [ngbTooltip]\u003d\"getResponseStatusTooltip(session.isPublished)\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    {{ session.isPublished | sessionResponseStatus }}"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                  \u003c/span\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                  \u003ca [ngClass]\u003d\"{\u0027disabled\u0027 : !session.isPublished}\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/result\" [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"                     id\u003d\"view-responses-btn-{{i}}\" class\u003d\"btn btn-light btn-sm btn-margin-right\"\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    View Responses"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isWaitingToOpen\" id\u003d\"disabled-start-submit-btn-{{i}}\" class\u003d\"btn btn-light btn-sm disabled\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    Start Submission"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isOpened \u0026\u0026 !session.isSubmitted\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                     id\u003d\"start-submit-btn-{{i}}\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                     class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    Start Submission"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isOpened \u0026\u0026 session.isSubmitted\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                     id\u003d\"edit-submit-btn-{{i}}\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                     class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    Edit Submission"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"!session.isOpened \u0026\u0026 !session.isWaitingToOpen\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                     id\u003d\"view-submit-btn-{{i}}\" class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    View Submission"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              \u003c/ng-container\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \u003c/tbody\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          \u003c/table\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"          \u003ctable class\u003d\"table table-striped table-bordered margin-0\" *ngIf\u003d\"!(studentCourse.feedbackSessions \u0026\u0026 studentCourse.feedbackSessions.length)\"\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003ctbody\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003ctr\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              \u003cth class\u003d\"align-center white\"\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Currently, there are no open evaluation/feedback sessions in this course. When a session is open for submission you will be notified."},{"lineNumber":99,"author":{"gitId":"-"},"content":"              \u003c/th\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003c/tbody\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          \u003c/table\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \u003c/ng-container\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \u003c/ng-template\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":106}}]
