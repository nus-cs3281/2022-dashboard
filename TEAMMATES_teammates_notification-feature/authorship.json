[{"path":"docs/design.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Design"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"- [Architecture](#architecture)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"- [UI Component](#ui-component)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"- [Logic Component](#logic-component)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"- [Storage Component](#storage-component)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"- [Common Component](#common-component)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"- [Test Driver Component](#test-driver-component)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"- [E2E Component](#e2e-component)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"- [Client Component](#client-component)"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Architecture"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"![High Level Architecture](images/highlevelArchitecture.png)"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"TEAMMATES is a Web application that runs on Google App Engine (GAE). Given above is an overview of the main components."},{"lineNumber":17,"author":{"gitId":"-"},"content":"- **UI (Browser)**: The UI seen by users consists of Web pages containing HTML, CSS (for styling) and JavaScript (for client-side interactions such as sorting, input validation, etc.). This UI is a single HTML page generated by Angular framework. The initial page request is sent to the server over HTTP, and requests for data are sent asynchronously with AJAX."},{"lineNumber":18,"author":{"gitId":"-"},"content":"- **UI (Server)**: The entry point for the application back end logic is designed as a REST-ful controller."},{"lineNumber":19,"author":{"gitId":"-"},"content":"- **Logic**: The main logic of the application is in POJOs (Plain Old Java Objects)."},{"lineNumber":20,"author":{"gitId":"-"},"content":"- **Storage**: The storage layer of the application uses the persistence framework provided by **Google Cloud Datastore**, a NoSQL database."},{"lineNumber":21,"author":{"gitId":"-"},"content":"- **Test Driver**: TEAMMATES makes heavy use of automated regression testing. Test data is transmitted using JSON format."},{"lineNumber":22,"author":{"gitId":"-"},"content":"  - `TestNG` is used for Java testing (all levels) and `Jest` for JavaScript unit-testing."},{"lineNumber":23,"author":{"gitId":"-"},"content":"- **E2E**: The E2E (end-to-end) component is used to interact with the application as a whole with Web browsers. Its primary function is for E2E tests."},{"lineNumber":24,"author":{"gitId":"-"},"content":"  - `Selenium (Java)` is used to automate E2E testing with actual Web browsers."},{"lineNumber":25,"author":{"gitId":"-"},"content":"- **Client**: The Client component can connect to the back end directly without using a Web browser. It is used for administrative purposes, e.g. migrating data to a new schema."},{"lineNumber":26,"author":{"gitId":"-"},"content":"- **Common**: The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"The diagram below shows how the code in each component is organized into packages and the dependencies between them."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"![Package Diagram](images/packageDiagram.png)"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"Notes:"},{"lineNumber":33,"author":{"gitId":"-"},"content":"- `[logic] - [ui::website] - [ui::webapi]` represent an application of `Model-View-Controller` pattern."},{"lineNumber":34,"author":{"gitId":"-"},"content":"  - `ui::website` is not a real package; it is a conceptual package representing the front-end of the application."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"## UI Component"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"The diagram below shows the object structure of the UI component."},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"![UI Component](images/UiComponent.png)"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"Notes:"},{"lineNumber":43,"author":{"gitId":"-"},"content":"- `ui::website` is not a Java package. It is written in Angular framework and consists of HTML, SCSS, and TypeScript files. The framework will build those files into HTML, CSS and JavaScript files ready to be used by standard Web browsers."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"The UI component is the first stop for 99% of all requests that are received by the application."},{"lineNumber":46,"author":{"gitId":"-"},"content":"Such a request will go through the following steps:"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Request received by the GAE server."},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Custom filters are applied according to the order specified in `web.xml`, e.g. `OriginCheckFilter`."},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. Request forwarded to a `*Servlet` object as specified in `web.xml` for further processing, depending on the type of request."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"There are two general types of requests: user-invoked requests and automated (GAE server-invoked) requests, which are processed differently."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"### User-invoked requests"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"User-invoked requests are all requests made by the users of the application, typically from the Web browser (i.e. by navigating to a particular URL of the application)."},{"lineNumber":57,"author":{"gitId":"-"},"content":"The request will be processed as follows:"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"![UI Workflow](images/UiWorkflow.png)"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"The initial request for the web page will be processed as follows:"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Request forwarded to `WebPageServlet`."},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. `WebPageServlet` returns the built single web page (`index.html`)."},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. The browser will render the page and execute the page scripts, most of the time requiring AJAX requests to the server."},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"Subsequent AJAX requests sent to the server will be processed as follows:"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. Request forwarded to the `WebApiServlet`."},{"lineNumber":70,"author":{"gitId":"-"},"content":"1. `WebApiServlet` uses the `ActionFactory` to generate the matching `Action` object, e.g. `GetFeedbackSessionsAction`."},{"lineNumber":71,"author":{"gitId":"-"},"content":"1. `WebApiServlet` executes the action."},{"lineNumber":72,"author":{"gitId":"-"},"content":"   1. The `Action` object checks the access rights of the user. If the action is allowed, it will be performed, interacting with the `Logic` component as necessary."},{"lineNumber":73,"author":{"gitId":"-"},"content":"   1. The `Action` packages and processes the result into an `ActionResult` object. The most common format is `JsonResult` (requests for obtaining data or processing existing data) and other formats are defined as necessary, e.g. `ImageResult` (e.g. profile pictures)."},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. `WebApiServlet` sends the result back to the browser which will then process it on the front-end."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"Requests for static asset files (e.g. CSS, JS files, images) are served directly without going through `web.xml` configuration at all."},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"The Web API is protected by two layers of access control check:"},{"lineNumber":79,"author":{"gitId":"-"},"content":"- Origin check: This mitigates [CSRF attack](https://owasp.org/www-community/attacks/csrf)."},{"lineNumber":80,"author":{"gitId":"-"},"content":"- Authentication and authorization check: This checks if the logged in user (or lack thereof) has sufficient privileges to trigger the API\u0027s actions."},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"Special keys (`csrf key` and `backdoor key`) can be used to bypass each of the checks, typically for testing purpose. Those keys are strings known only to the person who deployed the application (typically, the administrator)."},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Automated requests"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"Automated requests are all requests sent automatically by the GAE server during specific periods of time."},{"lineNumber":87,"author":{"gitId":"-"},"content":"This type of request will be processed as follows:"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"1. The source of the request will be checked for administrator privilege. If this privilege is absent (e.g. non-administrator users trying to invoke the automated actions), the request will be dropped and a `403 Forbidden` status will be returned."},{"lineNumber":90,"author":{"gitId":"-"},"content":"   - Requests generated by the GAE server are equipped with this privilege."},{"lineNumber":91,"author":{"gitId":"-"},"content":"   - Administrators can manually invoke these requests; this is particularly useful in testing the actions associated with those requests."},{"lineNumber":92,"author":{"gitId":"-"},"content":"1. Request forwarded to the `WebApiServlet` and subsequent actions are the same as user-invoked AJAX requests."},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"GAE server sends such automated requests through two different configurations:"},{"lineNumber":95,"author":{"gitId":"-"},"content":"- Cron jobs: These are jobs that are automatically scheduled for a specified period of time, e.g. scheduling feedback session opening reminders. It is configured in `cron.yaml`."},{"lineNumber":96,"author":{"gitId":"-"},"content":"- Task queue workers: These are hybrids of user-invoked and GAE-invoked in that they are queued by users (i.e. users request for the tasks to be added to queue), but executed by GAE (i.e. GAE determines when and which tasks in the queue are executed at any point of time). This is typically used for tasks that may take a long time to finish and might be blocking user\u0027s interaction. It is configured in `queue.yaml` as well as the `TaskQueue` nested class of the [Const](../src/main/java/teammates/common/util/Const.java) class."},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Template Method pattern"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"- Since the high-level workflow of processing a request is same for any request (differing by the two request types only), we use the [Template Method pattern](http://en.wikipedia.org/wiki/Template_method_pattern) to abstract the process flow into the `Action` classes."},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Policies"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"On designing API endpoints (for AJAX requests):"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"- Design endpoints for resources. For example, `FeedbackSession` is a resource. The corresponding endpoint is `/session`. We use `GET`, `POST`, `PUT`, `DELETE` HTTP methods to get, create, update and delete the resource respectively."},{"lineNumber":107,"author":{"gitId":"-"},"content":"- Prefer multiple REST calls over single RPC (Remote Procedure Call) calls."},{"lineNumber":108,"author":{"gitId":"-"},"content":"  - Reason 1: REST paradigm promotes reuse of many business logic and is not dependent of the structure of the requesting web page (or any other type of requesting agent)."},{"lineNumber":109,"author":{"gitId":"-"},"content":"  - Reason 2: Multiple REST calls can be parallelized which will improve performance."},{"lineNumber":110,"author":{"gitId":"-"},"content":"- Separate access control logic and execution logic completely."},{"lineNumber":111,"author":{"gitId":"-"},"content":"  - In the case that an endpoint serves multiple purposes, we use `Intent` to distinguish the intent for the request. For example, instructors can access `/session` with intent `INSTRUCTOR_SUBMISSION` or `FULL_DETAIL`. Some `Intent` will naturally require stricter access rights."},{"lineNumber":112,"author":{"gitId":"-"},"content":"- Prefer HTTP request body over URL parameters (key-value) to contain data for `POST` and `PUT` requests."},{"lineNumber":113,"author":{"gitId":"-"},"content":"  - Reason 1: The URL parameters are used to identify a specific resource for an endpoint, not what should be done to them."},{"lineNumber":114,"author":{"gitId":"-"},"content":"  - Reason 2: Request body is not limited to key-value format which allows proper design and validation."},{"lineNumber":115,"author":{"gitId":"-"},"content":"  - Data Transfer Objects (DTOs) which represent different API requests and responses are defined in `request` and `output` package respectively."},{"lineNumber":116,"author":{"gitId":"-"},"content":"- Preprocess data sent/received by the server to hide complexities. For example, timestamp is passed as UNIX epoch milliseconds in the output while it is represented as `Instant` in the back-end."},{"lineNumber":117,"author":{"gitId":"-"},"content":"  - Some constructors in the `output` package contain logic to hide \"hacks\" in the backend."},{"lineNumber":118,"author":{"gitId":"-"},"content":"  - Some getters/setters in the `request` package contain logic to cater the conventions in the backend."},{"lineNumber":119,"author":{"gitId":"-"},"content":"  - Some fields are required be hidden in the API response, mostly for data privacy purposes. Whenever required, there should be methods in the request output objects catered for this."},{"lineNumber":120,"author":{"gitId":"-"},"content":"- API endpoints should not be concerned with how data is presented."},{"lineNumber":121,"author":{"gitId":"-"},"content":"  - Case study 1: some endpoint will pass timezone information via two information: timezone ID and UNIX epoch milliseconds. It is up to the front-end on how to make use of those two pieces of information."},{"lineNumber":122,"author":{"gitId":"-"},"content":"  - Case study 2: CSV file for session result or student list is just a different way of presenting the same information in the web page. Due to this, when downloading CSV, the web page will request the same information as that used when displaying in web page and do the necessary conversion to CSV."},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"On data exchange between front-end and back-end:"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"- Back-end is the single source of truth for all data format and the code used by front-end is generated from this."},{"lineNumber":127,"author":{"gitId":"-"},"content":"  - Some important constants (including API endpoints information) are synced to `api-const.ts`."},{"lineNumber":128,"author":{"gitId":"-"},"content":"  - The schemas of the DTOs defined in `output` and `request` packages are synced to `api-output.ts` and `api-request.ts` in the frontend."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"On handling exceptions:"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"- The UI component is responsible for catching all exceptions and transforming them to properly formed, user-friendly output format. It includes the status message shown to user as well as the HTTP status code."},{"lineNumber":133,"author":{"gitId":"-"},"content":"  - As a consequence, the UI component cannot throw any exception, because there is no layer which will catch those exceptions if it does."},{"lineNumber":134,"author":{"gitId":"-"},"content":"- In order to streamline the process, custom runtime exception classes which correspond to different HTTP status codes are used. For example, there is `EntityNotFoundException` which corresponds to HTTP 404, `UnauthorizedAccessException` which corresponds to HTTP 403, etc."},{"lineNumber":135,"author":{"gitId":"-"},"content":"  - It is highly preferred to throw these custom exceptions instead of setting the HTTP status manually in the action class, as the API layer has been configured to automatically log the exception and assign the correct status code to the HTTP response."},{"lineNumber":136,"author":{"gitId":"-"},"content":"- All `4XX` responses must be accompanied with logging at `warning` level or above. `5XX` responses must be accompanied with `severe` level logging."},{"lineNumber":137,"author":{"gitId":"-"},"content":"  - `502` (Bad Gateway) responses may skip the `severe` level logging if the upstream components (where the error happened) already did the `severe` level logging."},{"lineNumber":138,"author":{"gitId":"-"},"content":"- We use the HTTP status codes as close to their standard definition in [RFC7231](https://tools.ietf.org/html/rfc7231) as possible."},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"## Logic Component"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Logic` component handles the business logic of TEAMMATES. In particular, it is responsible for:"},{"lineNumber":143,"author":{"gitId":"-"},"content":"- Managing relationships between entities, e.g. cascade logic for create/update/delete."},{"lineNumber":144,"author":{"gitId":"-"},"content":"- Managing transactions, e.g. ensuring atomicity of a transaction."},{"lineNumber":145,"author":{"gitId":"-"},"content":"- Sanitizing input values received from the UI component."},{"lineNumber":146,"author":{"gitId":"-"},"content":"- Connecting to GCP or third-party services, e.g. for adding tasks to the task queue and for sending emails with third-party providers."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"![Logic Component](images/LogicComponent.png)"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":151,"author":{"gitId":"-"},"content":"- **`logic.api`**: Provides the API of the component to be accessed by the UI."},{"lineNumber":152,"author":{"gitId":"-"},"content":"- **`logic.core`**: Contains the core logic of the system."},{"lineNumber":153,"author":{"gitId":"fsgmhoward"},"content":"- **`logic.external`**: Holds the logic of external services such as task queue service."},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"### Logic API"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"Represented by these classes:"},{"lineNumber":158,"author":{"gitId":"-"},"content":"- `Logic`: A [Facade class](http://en.wikipedia.org/wiki/Facade_pattern) which connects to the several `*Logic` classes to handle the logic related to various types of data and to access data from the `Storage` component."},{"lineNumber":159,"author":{"gitId":"-"},"content":"- `UserProvision`: Retrieves user information (based on request cookies)."},{"lineNumber":160,"author":{"gitId":"-"},"content":"- `EmailGenerator`: Generates emails to be sent."},{"lineNumber":161,"author":{"gitId":"-"},"content":"- `EmailSender`: Sends email with the provider chosen based on the build configuration."},{"lineNumber":162,"author":{"gitId":"-"},"content":"- `TaskQueuer`: Adds tasks to the task queue, i.e. to be executed at a later time."},{"lineNumber":163,"author":{"gitId":"-"},"content":"- `FileStorage`: Manages CRUD of binary files such as profile pictures."},{"lineNumber":164,"author":{"gitId":"-"},"content":"- `LogsProcessor`: For more advanced usage of logging that cannot be captured by the standard logger class."},{"lineNumber":165,"author":{"gitId":"fsgmhoward"},"content":"- `RecaptchaVerifier`: For verification of the reCAPTCHA token."},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"Many classes in this layer make use of proxy pattern, i.e. they only connect to production services such as Google Cloud Storage in the staging/production server."},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Policies"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"Access control:"},{"lineNumber":172,"author":{"gitId":"-"},"content":"+ Although this component provides methods that are relevant to access control (e.g. providing user information), the access control check itself does not happen in this component. The UI is expected to check access control (using `GateKeeper` class) before calling a method in the logic component."},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"API for creating entities:"},{"lineNumber":175,"author":{"gitId":"-"},"content":"+ Null parameters: Causes an assertion failure."},{"lineNumber":176,"author":{"gitId":"-"},"content":"+ Invalid parameters: Throws `InvalidParametersException`."},{"lineNumber":177,"author":{"gitId":"-"},"content":"+ Entity already exists: Throws `EntityAlreadyExistsException` (escalated from Storage level)."},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"API for retrieving entities:"},{"lineNumber":180,"author":{"gitId":"-"},"content":"+ Attempting to retrieve objects using `null` parameters: Causes an assertion failure."},{"lineNumber":181,"author":{"gitId":"-"},"content":"+ Entity not found:"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  - Returns `null` if the target entity not found. This way, read operations can be used easily for checking the existence of an entity."},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"API for updating entities:"},{"lineNumber":185,"author":{"gitId":"-"},"content":"+ Update is done using `*UpdateOptions` inside every `*Attributes`. The `UpdateOptions` will specify what is used to identify the entity to update and what will be updated."},{"lineNumber":186,"author":{"gitId":"-"},"content":"+ Entity not found: Throws `EntityDoesNotExistException`."},{"lineNumber":187,"author":{"gitId":"-"},"content":"+ Invalid parameters: Throws `InvalidParametersException`."},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"API for deleting entities:"},{"lineNumber":190,"author":{"gitId":"-"},"content":"+ FailDeleteSilentlyPolicy: In general, delete operation do not throw exceptions if the target entity does not exist. This is because if it does not exist, it is as good as deleted."},{"lineNumber":191,"author":{"gitId":"-"},"content":"+ Cascade policy:   When a parent entity is deleted, entities that have referential integrity with the deleted entity should also be deleted."},{"lineNumber":192,"author":{"gitId":"-"},"content":"  Refer to the API for the cascade logic."},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"## Storage Component"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"The `Storage` component performs CRUD (Create, Read, Update, Delete) operations on data entities individually."},{"lineNumber":197,"author":{"gitId":"-"},"content":"It contains minimal logic beyond what is directly relevant to CRUD operations."},{"lineNumber":198,"author":{"gitId":"-"},"content":"In particular, it is reponsible for:"},{"lineNumber":199,"author":{"gitId":"-"},"content":"- Validating data inside entities before creating/updating them, to ensure they are in a valid state."},{"lineNumber":200,"author":{"gitId":"-"},"content":"- Hiding the complexities of the database from the `Logic` component. "},{"lineNumber":201,"author":{"gitId":"-"},"content":"- Hiding the persistable objects: Classes in the `storage::entity` package are not visible outside this component to hide information specific to data persistence."},{"lineNumber":202,"author":{"gitId":"-"},"content":"  - Instead, a corresponding non-persistent [data transfer object](http://en.wikipedia.org/wiki/Data_transfer_object) named `*Attributes` (e.g., `CourseAttributes` is the data transfer object for `Course` entities) object is returned. These datatransfer classes are in `common::datatransfer` package, to be explained later."},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `Storage` component does not perform any cascade delete/create operations. Cascade logic is handled by the `Logic` component."},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"![Storage Component](images/StorageComponent.png)"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":209,"author":{"gitId":"-"},"content":"- **`storage.api`**: Provides the API of the component to be accessed by the logic component."},{"lineNumber":210,"author":{"gitId":"-"},"content":"- **`storage.entity`**: Classes that represent persistable entities."},{"lineNumber":211,"author":{"gitId":"-"},"content":"- **`storage.search`**: Classes for dealing with searching and indexing."},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"![Storage ER Diagram](images/StorageClassDiagram.png)"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"Note that the navigability of the association links between entity objects appear to be in the reverse direction of what we see in a normal OOP design."},{"lineNumber":216,"author":{"gitId":"-"},"content":"This is because we want to keep the data schema flexible so that new entity types can be added later with minimal modifications to existing elements."},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Storage API"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"Represented by the `*Db` classes. These classes act as the bridge to the database."},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Policies"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"Add and Delete operations try to wait until data is persisted in the database before returning. This is not enough to compensate for eventual consistency involving multiple servers in the Google Cloud Datastore environment. However, it is expected to avoid test failures caused by eventual consistency in dev server and reduce such problems in the live server."},{"lineNumber":225,"author":{"gitId":"-"},"content":"Note: \u0027Eventual consistency\u0027 here means it takes some time for a database operation to propagate across all replicas of the Google Cloud Datastore. As a result, the data may be in an inconsistent states for short periods of time although things should become consistent \u0027eventually\u0027. For example, an object we deleted may appear to still exist for a short while."},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"Implementation of Transaction Control has been minimized due to limitations of Google Cloud Datastore environment and the nature of our data schema."},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"API for creating:"},{"lineNumber":230,"author":{"gitId":"-"},"content":"+ Attempt to create an entity that already exists: Throws `EntityAlreadyExistsException`."},{"lineNumber":231,"author":{"gitId":"-"},"content":"+ Attempt to create an entity with invalid data: Throws `InvalidParametersException`."},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"API for retrieving:"},{"lineNumber":234,"author":{"gitId":"-"},"content":"+ Attempt to retrieve an entity that does not exist: Returns `null`."},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"API for updating:"},{"lineNumber":237,"author":{"gitId":"-"},"content":"+ Attempt to update an entity that does not exist: Throws `EntityDoesNotExistException`."},{"lineNumber":238,"author":{"gitId":"-"},"content":"+ Attempt to update an entity with invalid data: Throws `InvalidParametersException`."},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"API for deleting:"},{"lineNumber":241,"author":{"gitId":"-"},"content":"+ Attempt to delete an entity that does not exist: Fails silently."},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"## Common Component"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"The Common component contains common utilities used across TEAMMATES."},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"![Common Component](images/CommonComponent.png)"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":250,"author":{"gitId":"-"},"content":"- **`common.util`**: Contains utility classes."},{"lineNumber":251,"author":{"gitId":"-"},"content":"- **`common.exceptions`**: Contains custom exceptions."},{"lineNumber":252,"author":{"gitId":"-"},"content":"- **`common.datatransfer`**: Contains data transfer objects."},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"`common.datatransfer` package contains lightweight \"data transfer object\" classes for transferring data among components. They can be combined in various ways to transfer structured data between components. Given below are three examples."},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"![Data Transfer Classes](images/dataTransferClasses.png)"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"1. `Test Driver` can use the `DataBundle` in this manner to send an arbitrary number of objects to be persisted in the database."},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. This structure can be used to transfer search results of a student or instructor or response comments."},{"lineNumber":260,"author":{"gitId":"-"},"content":"1. This structure can be used to send results of a feedback session (e.g., when showing a feedback session report to an instructor)."},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"Some of these classes are methodless (and thus more of a data structure rather than a class); these classes use public variables for data for easy access."},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"## Test Driver Component"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"This component automates the testing of TEAMMATES."},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"![Test Driver Component](images/TestDriverComponent.png)"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"The test driver component\u0027s package structure follows the corresponding production package structure\u0027s exactly,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"e.g. `teammates.logic.core.*` will contain the test cases for the production code inside `teammates.logic.core` package."},{"lineNumber":272,"author":{"gitId":"-"},"content":"In the same spirit, for the front end, each `*.component.ts` will have the corresponding `*.component.spec.ts` in the same folder (similarly for `*.service.ts`, `*.pipe.ts`, etc.)."},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"The test driver component introduces the following additional packages:"},{"lineNumber":275,"author":{"gitId":"-"},"content":"- **`architecture`**: Contains test cases used by one of the lint tools to check for architectural integrity."},{"lineNumber":276,"author":{"gitId":"-"},"content":"- **`test`**: Contains infrastructure and helpers needed for running the tests. Also contains the test cases for the said infrastructure/helpers."},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"Notes:"},{"lineNumber":279,"author":{"gitId":"-"},"content":"- Component tests: Some of these are pure unit tests (i.e. testing one component in isolation) while others are integration tests that test units as well as integration of units with each other."},{"lineNumber":280,"author":{"gitId":"-"},"content":"- Front-end files (particularly TypeScript) are tested separately with `Jest`. The test cases are found in `*.spec.ts` files."},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"This is how TEAMMATES testing maps to standard types of testing."},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"```"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Normal"},{"lineNumber":286,"author":{"gitId":"-"},"content":"|-----acceptance tests-----|-------------------system tests-------------------|-----integration tests-----|-----unit tests-----|"},{"lineNumber":287,"author":{"gitId":"-"},"content":"|--------manual testing--------|------automated E2E tests------|-------------------automated component tests-------------------|"},{"lineNumber":288,"author":{"gitId":"-"},"content":"TEAMMATES"},{"lineNumber":289,"author":{"gitId":"-"},"content":"```"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"## E2E Component"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser (as a whole application) or REST API calls (for the back-end logic). Its primary function is for E2E tests."},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"![E2E Component](images/E2EComponent.png)"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"- **`e2e.util`**: Contains helpers needed for running E2E tests. Also contains the test cases for the said infrastructure/helpers."},{"lineNumber":300,"author":{"gitId":"-"},"content":"- **`e2e.pageobjects`**: Contains abstractions of the pages as they appear on a Browser (i.e. SUTs)."},{"lineNumber":301,"author":{"gitId":"-"},"content":"- **`e2e.cases`**: Contains system test cases for testing the application as a whole."},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Client Component"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics."},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"![Client Component](images/ClientComponent.png)"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"Package overview:"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"- **`client.util`**: Contains helpers needed for client scripts."},{"lineNumber":312,"author":{"gitId":"-"},"content":"- **`client.connector`**: Classes needed to connect to the back end directly."},{"lineNumber":313,"author":{"gitId":"-"},"content":"- **`client.scripts`**: Scripts that deal with the back end data for administrative purposes."}],"authorContributionMap":{"fsgmhoward":2,"-":311}},{"path":"src/e2e/java/teammates/e2e/cases/AdminNotificationsPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhaojj2209"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":3,"author":{"gitId":"zhaojj2209"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":5,"author":{"gitId":"zhaojj2209"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":6,"author":{"gitId":"zhaojj2209"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":8,"author":{"gitId":"zhaojj2209"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":9,"author":{"gitId":"zhaojj2209"},"content":"import teammates.common.util.Const;"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":11,"author":{"gitId":"zhaojj2209"},"content":"import teammates.e2e.pageobjects.AdminNotificationsPage;"},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":" * SUT: {@link Const.WebPageURIs#ADMIN_NOTIFICATIONS_PAGE}."},{"lineNumber":15,"author":{"gitId":"zhaojj2209"},"content":" */"},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"public class AdminNotificationsPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":17,"author":{"gitId":"zhaojj2209"},"content":"    private NotificationAttributes[] notifications \u003d new NotificationAttributes[2];"},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":19,"author":{"gitId":"zhaojj2209"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"zhaojj2209"},"content":"    protected void prepareTestData() {"},{"lineNumber":21,"author":{"gitId":"zhaojj2209"},"content":"        testData \u003d loadDataBundle(\"/AdminNotificationsPageE2ETest.json\");"},{"lineNumber":22,"author":{"gitId":"zhaojj2209"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":23,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":24,"author":{"gitId":"zhaojj2209"},"content":"        notifications[0] \u003d testData.notifications.get(\"notification1\");"},{"lineNumber":25,"author":{"gitId":"zhaojj2209"},"content":"        notifications[1] \u003d testData.notifications.get(\"notification2\");"},{"lineNumber":26,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"zhaojj2209"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"    public void testAll() {"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":"        ______TS(\"verify loaded data\");"},{"lineNumber":33,"author":{"gitId":"zhaojj2209"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.ADMIN_NOTIFICATIONS_PAGE);"},{"lineNumber":34,"author":{"gitId":"zhaojj2209"},"content":"        AdminNotificationsPage notificationsPage \u003d loginAdminToPage(url, AdminNotificationsPage.class);"},{"lineNumber":35,"author":{"gitId":"zhaojj2209"},"content":"        // Only validates that the notifications are present in the notifications table instead of checking every row"},{"lineNumber":36,"author":{"gitId":"zhaojj2209"},"content":"        // This is because the page will display all notifications in the database, which is not predictable"},{"lineNumber":37,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.verifyNotificationsTableRow(notifications[0]);"},{"lineNumber":38,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.verifyNotificationsTableRow(notifications[1]);"},{"lineNumber":39,"author":{"gitId":"zhaojj2209"},"content":"        verifyPresentInDatabase(notifications[0]);"},{"lineNumber":40,"author":{"gitId":"zhaojj2209"},"content":"        verifyPresentInDatabase(notifications[1]);"},{"lineNumber":41,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":42,"author":{"gitId":"zhaojj2209"},"content":"        ______TS(\"add new notification\");"},{"lineNumber":43,"author":{"gitId":"zhaojj2209"},"content":"        NotificationAttributes newNotification \u003d NotificationAttributes"},{"lineNumber":44,"author":{"gitId":"zhaojj2209"},"content":"                .builder(\"placeholder-notif-id\")"},{"lineNumber":45,"author":{"gitId":"zhaojj2209"},"content":"                .withStartTime(TimeHelper.parseInstant(\"2035-04-01T22:00:00Z\"))"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"                .withEndTime(TimeHelper.parseInstant(\"2035-04-30T20:00:00Z\"))"},{"lineNumber":47,"author":{"gitId":"zhaojj2209"},"content":"                .withStyle(NotificationStyle.SUCCESS)"},{"lineNumber":48,"author":{"gitId":"zhaojj2209"},"content":"                .withTargetUser(NotificationTargetUser.GENERAL)"},{"lineNumber":49,"author":{"gitId":"zhaojj2209"},"content":"                .withTitle(\"E2E test notification 1\")"},{"lineNumber":50,"author":{"gitId":"zhaojj2209"},"content":"                .withMessage(\"\u003cp\u003eE2E test notification message\u003c/p\u003e\")"},{"lineNumber":51,"author":{"gitId":"zhaojj2209"},"content":"                .build();"},{"lineNumber":52,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.addNotification(newNotification);"},{"lineNumber":54,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.verifyStatusMessage(\"Notification created successfully.\");"},{"lineNumber":55,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":56,"author":{"gitId":"zhaojj2209"},"content":"        // Replace placeholder ID with actual ID of created notification"},{"lineNumber":57,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.sortNotificationsTableByDescendingCreateTime();"},{"lineNumber":58,"author":{"gitId":"zhaojj2209"},"content":"        String newestNotificationId \u003d notificationsPage.getFirstRowNotificationId();"},{"lineNumber":59,"author":{"gitId":"zhaojj2209"},"content":"        newNotification.setNotificationId(newestNotificationId);"},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":"        // Checks that notification is in the database first"},{"lineNumber":62,"author":{"gitId":"zhaojj2209"},"content":"        // so that newNotification is updated with the created time before checking table row"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":"        verifyPresentInDatabase(newNotification);"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.verifyNotificationsTableRow(newNotification);"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"        ______TS(\"edit notification\");"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":"        newNotification.setStartTime(TimeHelper.parseInstant(\"2025-05-09T12:00:00Z\"));"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"        newNotification.setEndTime(TimeHelper.parseInstant(\"2045-06-01T22:00:00Z\"));"},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":"        newNotification.setStyle(NotificationStyle.DANGER);"},{"lineNumber":70,"author":{"gitId":"zhaojj2209"},"content":"        newNotification.setTargetUser(NotificationTargetUser.INSTRUCTOR);"},{"lineNumber":71,"author":{"gitId":"zhaojj2209"},"content":"        newNotification.setTitle(\"Edited E2E test notification 1\");"},{"lineNumber":72,"author":{"gitId":"zhaojj2209"},"content":"        newNotification.setMessage(\"\u003cp\u003eEdited E2E test notification message\u003c/p\u003e\");"},{"lineNumber":73,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":74,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.editNotification(newNotification);"},{"lineNumber":75,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.verifyStatusMessage(\"Notification updated successfully.\");"},{"lineNumber":76,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.verifyNotificationsTableRow(newNotification);"},{"lineNumber":77,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":78,"author":{"gitId":"zhaojj2209"},"content":"        // verify that notification is present in database by reloading"},{"lineNumber":79,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.reloadPage();"},{"lineNumber":80,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.verifyNotificationsTableRow(newNotification);"},{"lineNumber":81,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":82,"author":{"gitId":"zhaojj2209"},"content":"        ______TS(\"delete notification\");"},{"lineNumber":83,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.deleteNotification(newNotification);"},{"lineNumber":84,"author":{"gitId":"zhaojj2209"},"content":"        notificationsPage.verifyStatusMessage(\"Notification has been deleted.\");"},{"lineNumber":85,"author":{"gitId":"zhaojj2209"},"content":"        verifyAbsentInDatabase(newNotification);"},{"lineNumber":86,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":87,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":"}"}],"authorContributionMap":{"zhaojj2209":89}},{"path":"src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.ITestContext;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterClass;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.DeadlineExtensionAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.exception.HttpRequestFailedException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.AppPage;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.Browser;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.DevServerLoginPage;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.HomePage;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.e2e.util.BackDoor;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.e2e.util.EmailAccount;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCaseWithDatabaseAccess;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.test.FileHelper;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Base class for all browser tests."},{"lineNumber":41,"author":{"gitId":"-"},"content":" *"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis type of test has no knowledge of the workings of the application,"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * and can only communicate via the UI or via {@link BackDoor} to obtain/transmit data."},{"lineNumber":44,"author":{"gitId":"-"},"content":" */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public abstract class BaseE2ETestCase extends BaseTestCaseWithDatabaseAccess {"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    static final BackDoor BACKDOOR \u003d BackDoor.getInstance();"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    DataBundle testData;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Browser browser;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void baseClassSetup() {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        prepareTestData();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        prepareBrowser();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Prepares the browser used for the current test."},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    protected void prepareBrowser() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        browser \u003d new Browser();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Prepares the test data used for the current test."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    protected abstract void prepareTestData();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Contains all the tests for the page."},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThis approach is chosen so that setup and teardown are only needed once per test page,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * thereby saving time. While it necessitates failed tests to be restarted from the beginning,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * test failures are rare and thus not causing significant overhead."},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    protected abstract void testAll();"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    protected String getTestDataFolder() {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return TestProperties.TEST_DATA_FOLDER;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void baseClassTearDown(ITestContext context) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (browser \u003d\u003d null) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        boolean isSuccess \u003d context.getFailedTests().getAllMethods()"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .noneMatch(method -\u003e method.getConstructorOrMethod().getMethod().getDeclaringClass() \u003d\u003d this.getClass());"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (isSuccess || TestProperties.CLOSE_BROWSER_ON_FAILURE) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            browser.close();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates an {@link AppUrl} for the supplied {@code relativeUrl} parameter."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * The base URL will be the value of test.app.frontend.url in test.properties."},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code relativeUrl} must start with a \"/\"."},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    protected static AppUrl createFrontendUrl(String relativeUrl) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new AppUrl(TestProperties.TEAMMATES_FRONTEND_URL + relativeUrl);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Creates an {@link AppUrl} for the supplied {@code relativeUrl} parameter."},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The base URL will be the value of test.app.backend.url in test.properties."},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code relativeUrl} must start with a \"/\"."},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    protected static AppUrl createBackendUrl(String relativeUrl) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new AppUrl(TestProperties.TEAMMATES_BACKEND_URL + relativeUrl);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Logs in to a page using the given credentials."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    protected \u003cT extends AppPage\u003e T loginToPage(AppUrl url, Class\u003cT\u003e typeOfPage, String userId) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // When not using dev server, Google blocks log in by automation."},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // To work around that, we inject the user cookie directly into the browser session."},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!TestProperties.isDevServer()) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            // In order for the cookie injection to work, we need to be in the domain."},{"lineNumber":123,"author":{"gitId":"-"},"content":"            // Use the home page to minimize the page load time."},{"lineNumber":124,"author":{"gitId":"-"},"content":"            browser.goToUrl(TestProperties.TEAMMATES_FRONTEND_URL);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String cookieValue \u003d BACKDOOR.getUserCookie(userId);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            browser.addCookie(Const.SecurityConfig.AUTH_COOKIE_NAME, cookieValue, true, true);"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return getNewPageInstance(url, typeOfPage);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // This will be redirected to the dev server login page."},{"lineNumber":133,"author":{"gitId":"-"},"content":"        browser.goToUrl(url.toAbsoluteString());"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        DevServerLoginPage loginPage \u003d AppPage.getNewPageInstance(browser, DevServerLoginPage.class);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        loginPage.loginAsUser(userId);"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return getNewPageInstance(url, typeOfPage);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Logs in to a page using admin credentials."},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected \u003cT extends AppPage\u003e T loginAdminToPage(AppUrl url, Class\u003cT\u003e typeOfPage) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return loginToPage(url, typeOfPage, TestProperties.TEST_ADMIN);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Equivalent to clicking the \u0027logout\u0027 link in the top menu of the page."},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    protected void logout() {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        browser.goToUrl(createBackendUrl(Const.WebPageURIs.LOGOUT).toAbsoluteString());"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        AppPage.getNewPageInstance(browser, HomePage.class).waitForPageToLoad();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Deletes file with fileName from the downloads folder."},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected void deleteDownloadsFile(String fileName) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String filePath \u003d TestProperties.TEST_DOWNLOADS_FOLDER + fileName;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        FileHelper.deleteFile(filePath);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Verifies downloaded file has correct fileName and contains expected content."},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    protected void verifyDownloadedFile(String expectedFileName, List\u003cString\u003e expectedContent) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String filePath \u003d TestProperties.TEST_DOWNLOADS_FOLDER + expectedFileName;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        int retryLimit \u003d TestProperties.TEST_TIMEOUT;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        boolean actual \u003d Files.exists(Paths.get(filePath));"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        while (!actual \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            actual \u003d Files.exists(Paths.get(filePath));"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertTrue(actual);"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            String actualContent \u003d FileHelper.readFile(filePath);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            for (String content : expectedContent) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                assertTrue(actualContent.contains(content));"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Visits the URL and gets the page object representation of the visited web page in the browser."},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    protected \u003cT extends AppPage\u003e T getNewPageInstance(AppUrl url, Class\u003cT\u003e typeOfPage) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        browser.goToUrl(url.toAbsoluteString());"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return AppPage.getNewPageInstance(browser, typeOfPage);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Verifies that email with subject is found in inbox."},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Email used must be an authentic gmail account."},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    protected void verifyEmailSent(String email, String subject) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (TestProperties.isDevServer() || !TestProperties.INCLUDE_EMAIL_VERIFICATION) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        if (!TestProperties.TEST_EMAIL.equals(email)) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            fail(\"Email verification is allowed only on preset test email.\");"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EmailAccount emailAccount \u003d new EmailAccount(email);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            emailAccount.getUserAuthenticated();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            int retryLimit \u003d 5;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            boolean actual \u003d emailAccount.isRecentEmailWithSubjectPresent(subject, TestProperties.TEST_SENDER_EMAIL);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            while (!actual \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                retryLimit--;"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                ThreadHelper.waitFor(1000);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                actual \u003d emailAccount.isRecentEmailWithSubjectPresent(subject, TestProperties.TEST_SENDER_EMAIL);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            assertTrue(actual);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            fail(\"Failed to verify email sent:\" + e);"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    AccountAttributes getAccount(String googleId) {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return BACKDOOR.getAccount(googleId);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    protected AccountAttributes getAccount(AccountAttributes account) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return getAccount(account.getGoogleId());"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @SuppressWarnings(\"PMD.EmptyMethodInAbstractClassShouldBeAbstract\")"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    protected StudentProfileAttributes getStudentProfile(StudentProfileAttributes studentProfileAttributes) {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return null; // BACKDOOR.getStudentProfile(studentProfileAttributes.googleId);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    CourseAttributes getCourse(String courseId) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        return BACKDOOR.getCourse(courseId);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    protected CourseAttributes getCourse(CourseAttributes course) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return getCourse(course.getId());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"    CourseAttributes getArchivedCourse(String instructorId, String courseId) {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return BACKDOOR.getArchivedCourse(instructorId, courseId);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    FeedbackQuestionAttributes getFeedbackQuestion(String courseId, String feedbackSessionName, int qnNumber) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackQuestion(courseId, feedbackSessionName, qnNumber);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    protected FeedbackQuestionAttributes getFeedbackQuestion(FeedbackQuestionAttributes fq) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return getFeedbackQuestion(fq.getCourseId(), fq.getFeedbackSessionName(), fq.getQuestionNumber());"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"    FeedbackResponseCommentAttributes getFeedbackResponseComment(String feedbackResponseId) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackResponseComment(feedbackResponseId);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    protected FeedbackResponseCommentAttributes getFeedbackResponseComment(FeedbackResponseCommentAttributes frc) {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return getFeedbackResponseComment(frc.getFeedbackResponseId());"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId, String giver, String recipient) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackResponse(feedbackQuestionId, giver, recipient);"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    protected FeedbackResponseAttributes getFeedbackResponse(FeedbackResponseAttributes fr) {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        return getFeedbackResponse(fr.getFeedbackQuestionId(), fr.getGiver(), fr.getRecipient());"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"    FeedbackSessionAttributes getFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        return BACKDOOR.getFeedbackSession(courseId, feedbackSessionName);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    protected FeedbackSessionAttributes getFeedbackSession(FeedbackSessionAttributes fs) {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        return getFeedbackSession(fs.getCourseId(), fs.getFeedbackSessionName());"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"    FeedbackSessionAttributes getSoftDeletedSession(String feedbackSessionName, String instructorId) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        return BACKDOOR.getSoftDeletedSession(feedbackSessionName, instructorId);"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"    InstructorAttributes getInstructor(String courseId, String instructorEmail) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        return BACKDOOR.getInstructor(courseId, instructorEmail);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    protected InstructorAttributes getInstructor(InstructorAttributes instructor) {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return getInstructor(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    String getKeyForInstructor(String courseId, String instructorEmail) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        return getInstructor(courseId, instructorEmail).getKey();"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    protected StudentAttributes getStudent(StudentAttributes student) {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        return BACKDOOR.getStudent(student.getCourse(), student.getEmail());"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"    String getKeyForStudent(StudentAttributes student) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        return getStudent(student).getKey();"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    protected AccountRequestAttributes getAccountRequest(AccountRequestAttributes accountRequest) {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        return BACKDOOR.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"Nicolascwy"},"content":"    NotificationAttributes getNotification(String notificationId) {"},{"lineNumber":319,"author":{"gitId":"Nicolascwy"},"content":"        return BACKDOOR.getNotification(notificationId);"},{"lineNumber":320,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":322,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":323,"author":{"gitId":"Nicolascwy"},"content":"    protected NotificationAttributes getNotification(NotificationAttributes notification) {"},{"lineNumber":324,"author":{"gitId":"Nicolascwy"},"content":"        return getNotification(notification.getNotificationId());"},{"lineNumber":325,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    protected DeadlineExtensionAttributes getDeadlineExtension(DeadlineExtensionAttributes deadlineExtension) {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        throw new UnsupportedOperationException(\"Get Deadline Extension not supported for e2e tests: API does not exist.\");"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    protected boolean doRemoveAndRestoreDataBundle(DataBundle testData) {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            BACKDOOR.removeAndRestoreDataBundle(testData);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        } catch (HttpRequestFailedException e) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    protected boolean doPutDocuments(DataBundle testData) {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            BACKDOOR.putDocuments(testData);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        } catch (HttpRequestFailedException e) {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":344,"Nicolascwy":10}},{"path":"src/e2e/java/teammates/e2e/cases/InstructorFeedbackEditPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackContributionQuestionDetails;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.FeedbackSubmitPage;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorFeedbackEditPage;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SESSION_EDIT_PAGE}."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class InstructorFeedbackEditPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private InstructorAttributes instructor;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSession;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private CourseAttributes course;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private CourseAttributes copiedCourse;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorFeedbackEditPageE2ETest.json\");"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        instructor \u003d testData.instructors.get(\"instructor\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        feedbackSession \u003d testData.feedbackSessions.get(\"openSession\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        course \u003d testData.courses.get(\"course\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        copiedCourse \u003d testData.courses.get(\"course2\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_SESSION_EDIT_PAGE)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .withSessionName(feedbackSession.getFeedbackSessionName());"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        InstructorFeedbackEditPage feedbackEditPage \u003d"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                loginToPage(url, InstructorFeedbackEditPage.class, instructor.getGoogleId());"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ______TS(\"verify loaded data\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifySessionDetails(course, feedbackSession);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ______TS(\"edit session details\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        feedbackSession.setInstructions(\"\u003cp\u003e\u003cstrong\u003enew instructions\u003c/strong\u003e\u003c/p\u003e\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        feedbackSession.setStartTime(feedbackSession.getEndTime().minus(30, ChronoUnit.DAYS));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        feedbackSession.setEndTime(feedbackSession.getEndTime().plus(30, ChronoUnit.DAYS));"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        feedbackSession.setGracePeriodMinutes(30);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        feedbackSession.setSessionVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_OPENING);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        feedbackSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_VISIBLE);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        feedbackSession.setClosingEmailEnabled(false);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        feedbackEditPage.editSessionDetails(feedbackSession);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The feedback session has been updated.\");"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifySessionDetails(course, feedbackSession);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(feedbackSession);"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ______TS(\"add template question\");"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes templateQuestion \u003d getTemplateQuestion();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        feedbackEditPage.addTemplateQuestion(1);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The question has been added to this feedback session.\");"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyNumQuestions(1);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(1, templateQuestion);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(templateQuestion);"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        ______TS(\"copy question from other session\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionToCopy \u003d testData.feedbackQuestions.get(\"qn1\");"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        questionToCopy.setCourseId(course.getId());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        questionToCopy.setFeedbackSessionName(feedbackSession.getFeedbackSessionName());"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        questionToCopy.setQuestionNumber(2);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        feedbackEditPage.copyQuestion(copiedCourse.getId(), questionToCopy.getQuestionDetailsCopy().getQuestionText());"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"zhaojj2209"},"content":"        feedbackEditPage.verifyStatusMessage(\"The selected question(s) have been added to this feedback session.\");"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyNumQuestions(2);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(2, questionToCopy);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(questionToCopy);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ______TS(\"reorder questions\");"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        questionToCopy.setQuestionNumber(1);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        templateQuestion.setQuestionNumber(2);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        feedbackEditPage.editQuestionNumber(2, 1);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The changes to the question have been updated.\");"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        verifyReorder(questionToCopy);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        verifyReorder(templateQuestion);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(1, questionToCopy);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(2, templateQuestion);"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ______TS(\"edit question\");"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes editedQuestion \u003d getTemplateQuestion();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        editedQuestion.setQuestionNumber(1);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String questionBrief \u003d editedQuestion.getQuestionDetailsCopy().getQuestionText();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        editedQuestion.setQuestionDetails(new FeedbackTextQuestionDetails(questionBrief));"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        editedQuestion.setQuestionDescription(\"\u003cp\u003e\u003cem\u003eNew Description\u003c/em\u003e\u003c/p\u003e\");"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        feedbackEditPage.editQuestionDetails(1, editedQuestion);"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The changes to the question have been updated.\");"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(1, editedQuestion);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(editedQuestion);"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        ______TS(\"duplicate question\");"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        editedQuestion.setQuestionNumber(3);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        feedbackEditPage.duplicateQuestion(1);"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The question has been duplicated below.\");"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyNumQuestions(3);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(3, editedQuestion);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(editedQuestion);"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        ______TS(\"delete question\");"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        templateQuestion.setQuestionNumber(1);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        feedbackEditPage.deleteQuestion(1);"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The question has been deleted.\");"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyNumQuestions(2);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyQuestionDetails(1, templateQuestion);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // verify qn 1 has been replaced in database by qn 2"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        verifyReorder(templateQuestion);"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        ______TS(\"preview session as student\");"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        FeedbackSubmitPage previewPage \u003d feedbackEditPage.previewAsStudent("},{"lineNumber":132,"author":{"gitId":"-"},"content":"                testData.students.get(\"benny.tmms@IFEdit.CS2104\"));"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        previewPage.closeCurrentWindowAndSwitchToParentWindow();"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        ______TS(\"preview session as instructor\");"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        previewPage \u003d feedbackEditPage.previewAsInstructor(instructor);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        previewPage.closeCurrentWindowAndSwitchToParentWindow();"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"        ______TS(\"copy session to other course\");"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        feedbackSession.setCourseId(copiedCourse.getId());"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String copiedSessionName \u003d \"Copied Session\";"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        feedbackSession.setFeedbackSessionName(copiedSessionName);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        feedbackEditPage.copySessionToOtherCourse(copiedCourse, copiedSessionName);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + \"Please modify settings/questions as necessary.\");"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(feedbackSession);"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ______TS(\"delete session\");"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        feedbackEditPage.deleteSession();"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        feedbackEditPage.verifyStatusMessage(\"The feedback session has been deleted. \""},{"lineNumber":153,"author":{"gitId":"-"},"content":"                + \"You can restore it from the deleted sessions table below.\");"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertNotNull(getSoftDeletedSession(copiedSessionName,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void verifyReorder(FeedbackQuestionAttributes question) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes actual \u003d getFeedbackQuestion(question);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        while (!actual.equals(question) \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            actual \u003d getFeedbackQuestion(question);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(question, actual);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private FeedbackQuestionAttributes getTemplateQuestion() {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        FeedbackContributionQuestionDetails detail \u003d new FeedbackContributionQuestionDetails();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        detail.setQuestionText(\"How much work did each team member contribute?\""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + \" (response will be shown anonymously to each team member).\");"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        detail.setNotSureAllowed(false);"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return FeedbackQuestionAttributes.builder()"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(feedbackSession.getFeedbackSessionName())"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .withQuestionDetails(detail)"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .withQuestionDescription(\"\")"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .withQuestionNumber(1)"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .withGiverType(FeedbackParticipantType.STUDENTS)"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .withRecipientType(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF)"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .withNumberOfEntitiesToGiveFeedbackTo(Const.MAX_POSSIBLE_RECIPIENTS)"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .withShowResponsesTo(Arrays.asList(FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                        FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.RECEIVER))"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .withShowGiverNameTo(Arrays.asList(FeedbackParticipantType.INSTRUCTORS))"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .withShowRecipientNameTo(Arrays.asList(FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                        FeedbackParticipantType.RECEIVER))"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":1,"-":190}},{"path":"src/e2e/java/teammates/e2e/cases/InstructorFeedbackSessionsPageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorFeedbackSessionsPage;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SESSIONS_PAGE}."},{"lineNumber":26,"author":{"gitId":"-"},"content":" */"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class InstructorFeedbackSessionsPageE2ETest extends BaseE2ETestCase {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private InstructorAttributes instructor;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private CourseAttributes course;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private CourseAttributes copiedCourse;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private StudentAttributes studentToEmail;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes openSession;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes closedSession;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes newSession;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private String fileName;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorFeedbackSessionsPageE2ETest.json\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        studentToEmail \u003d testData.students.get(\"charlie.tmms@IFSess.CS1101\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        studentToEmail.setEmail(TestProperties.TEST_EMAIL);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        instructor \u003d testData.instructors.get(\"instructor\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        course \u003d testData.courses.get(\"course\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        copiedCourse \u003d testData.courses.get(\"course2\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        openSession \u003d testData.feedbackSessions.get(\"openSession\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        closedSession \u003d testData.feedbackSessions.get(\"closedSession\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        newSession \u003d FeedbackSessionAttributes"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .builder(\"New Session\", course.getId())"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .withCreatorEmail(instructor.getEmail())"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .withStartTime(TimeHelper.parseInstant(\"2035-04-01T22:00:00Z\"))"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .withEndTime(TimeHelper.parseInstant(\"2035-04-30T20:00:00Z\"))"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .withSessionVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_OPENING)"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER)"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withGracePeriod(Duration.ZERO)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withInstructions(\"\u003cp\u003ePlease fill in the new feedback session.\u003c/p\u003e\")"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTimeZone(course.getTimeZone())"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withIsClosingEmailEnabled(true)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withIsPublishedEmailEnabled(true)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        fileName \u003d \"/\" + openSession.getCourseId() + \"_\" + openSession.getFeedbackSessionName()"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + \"_result.csv\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void classSetup() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        deleteDownloadsFile(fileName);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_SESSIONS_PAGE);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        InstructorFeedbackSessionsPage feedbackSessionsPage \u003d"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                loginToPage(url, InstructorFeedbackSessionsPage.class, instructor.getGoogleId());"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ______TS(\"verify loaded data\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] loadedSessions \u003d { openSession, closedSession };"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortByCourseId();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(loadedSessions);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ______TS(\"verify response rate\");"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyResponseRate(closedSession, getExpectedResponseRate(closedSession));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyResponseRate(openSession, getExpectedResponseRate(openSession));"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ______TS(\"add new session\");"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForAdded \u003d { closedSession, newSession, openSession };"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.addFeedbackSession(newSession, true);"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been added.\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                + \"Click the \\\"Add New Question\\\" button below to begin adding questions for the feedback session.\");"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        feedbackSessionsPage \u003d getNewPageInstance(url,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                InstructorFeedbackSessionsPage.class);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForAdded);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(newSession);"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ______TS(\"add new copied session\");"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String newName \u003d \"Copied Name\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes copiedSession \u003d openSession.getCopy();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        copiedSession.setCourseId(course.getId());"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        copiedSession.setFeedbackSessionName(newName);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        copiedSession.setCreatedTime(Instant.now());"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.addCopyOfSession(openSession, course, newName);"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                        + \"Please modify settings/questions as necessary.\");"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        feedbackSessionsPage \u003d getNewPageInstance(url,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                InstructorFeedbackSessionsPage.class);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(copiedSession);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(copiedSession);"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        ______TS(\"copy session\");"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        newName \u003d \"Copied Name 2\";"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes copiedSession2 \u003d openSession.getCopy();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        copiedSession2.setCourseId(course.getId());"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        copiedSession2.setFeedbackSessionName(newName);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        copiedSession2.setCreatedTime(Instant.now());"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.copySession(openSession, course, newName);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \"Please modify settings/questions as necessary.\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        feedbackSessionsPage \u003d getNewPageInstance(url,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                InstructorFeedbackSessionsPage.class);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(copiedSession2);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(copiedSession2);"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        ______TS(\"publish results\");"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        openSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_NOW);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.publishSessionResults(openSession);"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been published. \""},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + \"Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(openSession);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(openSession, true);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to selected student\");"},{"lineNumber":146,"author":{"gitId":"Nicolascwy"},"content":"        feedbackSessionsPage.sendReminderEmailToSelectedStudent(openSession, studentToEmail);"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to all student non-submitters\");"},{"lineNumber":155,"author":{"gitId":"Nicolascwy"},"content":"        feedbackSessionsPage.sendReminderEmailToNonSubmitters(openSession);"},{"lineNumber":156,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":157,"author":{"gitId":"Nicolascwy"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":158,"author":{"gitId":"Nicolascwy"},"content":"                        + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":159,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":160,"author":{"gitId":"Nicolascwy"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":162,"author":{"gitId":"Nicolascwy"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":163,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        ______TS(\"resend results link\");"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.resendResultsLink(openSession, studentToEmail);"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"Session published notification emails have been resent\""},{"lineNumber":168,"author":{"gitId":"-"},"content":"                + \" to those students and instructors. Please allow up to 1 hour for all the notification emails to be\""},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + \" sent out.\");"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ______TS(\"unpublish results\");"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        openSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.unpublishSessionResults(openSession);"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been unpublished.\");"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionDetails(openSession);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(openSession, false);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results unpublished\""},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \""},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + openSession.getFeedbackSessionName() + \"]\");"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ______TS(\"download results\");"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.downloadResults(openSession);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedContent \u003d Arrays.asList(\"Course,tm.e2e.IFSess.CS1101\","},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \"Session Name,Second Session\", \"Question 1,Testing question text\");"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        verifyDownloadedFile(fileName, expectedContent);"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ______TS(\"soft delete session\");"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        closedSession.setDeletedTime(Instant.now());"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForSoftDelete \u003d { copiedSession, copiedSession2, newSession, openSession };"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] softDeletedSessions \u003d { closedSession };"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(closedSession);"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been deleted. \""},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + \"You can restore it from the deleted sessions table below.\");"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForSoftDelete);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySoftDeletedSessionsTable(softDeletedSessions);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertNotNull(getSoftDeletedSession(closedSession.getFeedbackSessionName(),"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ______TS(\"restore session\");"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForRestore \u003d { openSession, newSession, closedSession, copiedSession2,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                copiedSession };"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.restoreSession(closedSession);"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been restored.\");"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForRestore);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertNull(getSoftDeletedSession(closedSession.getFeedbackSessionName(),"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        ______TS(\"permanently delete session\");"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForDelete \u003d { copiedSession, copiedSession2, closedSession,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                openSession };"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(newSession);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.deleteSession(newSession);"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been permanently deleted.\");"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForDelete);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(newSession);"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        ______TS(\"restore all session\");"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForRestoreAll \u003d { openSession, closedSession, copiedSession2,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                copiedSession };"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession2);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.restoreAllSessions();"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"All sessions have been restored.\");"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForRestoreAll);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertNull(getSoftDeletedSession(copiedSession.getFeedbackSessionName(),"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertNull(getSoftDeletedSession(copiedSession2.getFeedbackSessionName(),"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        ______TS(\"delete all session\");"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.moveToRecycleBin(copiedSession2);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] sessionsForDeleteAll \u003d { closedSession, openSession };"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.deleteAllSessions();"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyStatusMessage(\"All sessions have been permanently deleted.\");"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.sortBySessionsName();"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifySessionsTable(sessionsForDeleteAll);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        feedbackSessionsPage.verifyNumSoftDeleted(0);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(copiedSession);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(copiedSession2);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    private String getExpectedResponseRate(FeedbackSessionAttributes session) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        String sessionName \u003d session.getFeedbackSessionName();"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        boolean hasQuestion \u003d testData.feedbackQuestions.values()"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                .anyMatch(q -\u003e q.getFeedbackSessionName().equals(sessionName));"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!hasQuestion) {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return \"0 / 0\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"        long numStudents \u003d testData.students.values()"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                .filter(s -\u003e s.getCourse().equals(session.getCourseId()))"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                .count();"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e uniqueGivers \u003d new HashSet\u003c\u003e();"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        testData.feedbackResponses.values()"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.getFeedbackSessionName().equals(sessionName))"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                .forEach(r -\u003e uniqueGivers.add(r.getGiver()));"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        int numResponses \u003d uniqueGivers.size();"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        return numResponses + \" / \" + numStudents;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"    private void verifySessionPublishedState(FeedbackSessionAttributes feedbackSession, boolean state) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                feedbackSession.getFeedbackSessionName());"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        while (actual.isPublished() \u003d\u003d state \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    feedbackSession.getFeedbackSessionName());"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertEquals(actual.isPublished(), state);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":284,"Nicolascwy":12}},{"path":"src/e2e/java/teammates/e2e/cases/InstructorHomePageE2ETest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.e2e.pageobjects.InstructorHomePage;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.e2e.util.TestProperties;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * SUT: {@link Const.WebPageURIs#INSTRUCTOR_HOME_PAGE}."},{"lineNumber":24,"author":{"gitId":"-"},"content":" */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class InstructorHomePageE2ETest extends BaseE2ETestCase {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private InstructorAttributes instructor;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private StudentAttributes studentToEmail;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private CourseAttributes course;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private CourseAttributes otherCourse;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionAwaiting;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionOpen;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionClosed;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes feedbackSessionPublished;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes otherCourseSession;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private String fileName;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        testData \u003d loadDataBundle(\"/InstructorHomePageE2ETest.json\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        studentToEmail \u003d testData.students.get(\"IHome.charlie.d.tmms@IHome.CS2104\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        studentToEmail.setEmail(TestProperties.TEST_EMAIL);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(testData);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        putDocuments(testData);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        instructor \u003d testData.instructors.get(\"IHome.instr.CS2104\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        course \u003d testData.courses.get(\"IHome.CS2104\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        otherCourse \u003d testData.courses.get(\"IHome.CS1101\");"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        feedbackSessionAwaiting \u003d testData.feedbackSessions.get(\"Second Feedback Session\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        feedbackSessionOpen \u003d testData.feedbackSessions.get(\"First Feedback Session\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        feedbackSessionClosed \u003d testData.feedbackSessions.get(\"Third Feedback Session\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        feedbackSessionPublished \u003d testData.feedbackSessions.get(\"Fourth Feedback Session\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        otherCourseSession \u003d testData.feedbackSessions.get(\"CS1101 Session\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        fileName \u003d \"/\" + feedbackSessionOpen.getCourseId() + \"_\" + feedbackSessionOpen.getFeedbackSessionName()"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + \"_result.csv\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void classSetup() {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        deleteDownloadsFile(fileName);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void testAll() {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AppUrl url \u003d createFrontendUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        InstructorHomePage homePage \u003d loginToPage(url, InstructorHomePage.class, instructor.getGoogleId());"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ______TS(\"verify loaded data\");"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        homePage.sortCoursesById();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int courseIndex \u003d 1;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int otherCourseIndex \u003d 0;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // by default, sessions are sorted by end date in descending order"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] courseSessions \u003d { feedbackSessionOpen, feedbackSessionAwaiting,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                feedbackSessionClosed, feedbackSessionPublished };"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] otherCourseSessions \u003d { otherCourseSession };"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // use course index instead of searching for course in table to test sorted order of courses"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(otherCourseIndex, otherCourse, otherCourseSessions);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(courseIndex, course, courseSessions);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ______TS(\"verify response rate\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c courseSessions.length; i++) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            homePage.verifyResponseRate(courseIndex, i, getExpectedResponseRate(courseSessions[i]));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ______TS(\"copy session\");"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        int sessionIndex \u003d 1;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String newName \u003d \"Copied Name\";"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes copiedSession \u003d feedbackSessionAwaiting.getCopy();"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        copiedSession.setCourseId(otherCourse.getId());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        copiedSession.setFeedbackSessionName(newName);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        copiedSession.setCreatedTime(Instant.now());"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        copiedSession.setTimeZone(otherCourse.getTimeZone());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        homePage.copySession(courseIndex, sessionIndex, otherCourse, newName);"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been copied. \""},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + \"Please modify settings/questions as necessary.\");"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        homePage \u003d getNewPageInstance(url, InstructorHomePage.class);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        homePage.sortCoursesByName();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // flip index after sorting"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        courseIndex \u003d 0;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        otherCourseIndex \u003d 1;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes[] otherCourseSessionsWithCopy \u003d { copiedSession, otherCourseSession };"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(otherCourseIndex, otherCourse, otherCourseSessionsWithCopy);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(copiedSession);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ______TS(\"publish results\");"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        sessionIndex \u003d 0;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        feedbackSessionOpen.setResultsVisibleFromTime(Const.TIME_REPRESENTS_NOW);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        homePage.publishSessionResults(courseIndex, sessionIndex);"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been published. \""},{"lineNumber":116,"author":{"gitId":"-"},"content":"                + \"Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        homePage.verifySessionDetails(courseIndex, sessionIndex, feedbackSessionOpen);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(feedbackSessionOpen, true);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to selected student\");"},{"lineNumber":124,"author":{"gitId":"Nicolascwy"},"content":"        homePage.sendReminderEmailToSelectedStudent(courseIndex, sessionIndex, studentToEmail);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":130,"author":{"gitId":"Nicolascwy"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":131,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":132,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"send reminder email to all student non-submitters\");"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":"        homePage.sendReminderEmailToNonSubmitters(courseIndex, sessionIndex);"},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"        homePage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\""},{"lineNumber":136,"author":{"gitId":"Nicolascwy"},"content":"                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");"},{"lineNumber":137,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":138,"author":{"gitId":"Nicolascwy"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\""},{"lineNumber":139,"author":{"gitId":"Nicolascwy"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ______TS(\"resend results link\");"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        homePage.resendResultsLink(courseIndex, sessionIndex, studentToEmail);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"Session published notification emails have been resent\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + \" to those students and instructors. Please allow up to 1 hour for all the notification emails to be\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + \" sent out.\");"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ______TS(\"unpublish results\");"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        feedbackSessionOpen.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        homePage.unpublishSessionResults(courseIndex, sessionIndex);"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been unpublished.\");"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        homePage.verifySessionDetails(courseIndex, sessionIndex, feedbackSessionOpen);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        verifySessionPublishedState(feedbackSessionOpen, false);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results unpublished\""},{"lineNumber":160,"author":{"gitId":"-"},"content":"                + \" [Course: \" + course.getName() + \"][Feedback Session: \""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                + feedbackSessionOpen.getFeedbackSessionName() + \"]\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"        ______TS(\"download results\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        homePage.downloadResults(courseIndex, sessionIndex);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedContent \u003d Arrays.asList(\"Course,tm.e2e.IHome.CS2104\","},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \"Session Name,First Feedback Session\", \"Question 1,Rate 5 other students\u0027 products\");"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        verifyDownloadedFile(fileName, expectedContent);"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ______TS(\"soft delete session\");"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        copiedSession.setDeletedTime(Instant.now());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        homePage.deleteSession(otherCourseIndex, sessionIndex);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The feedback session has been deleted. \""},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + \"You can restore it from the \u0027Sessions\u0027 tab.\");"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        homePage.sortCoursesByCreationDate();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        courseIndex \u003d 1;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        otherCourseIndex \u003d 0;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        homePage.verifyCourseTabDetails(otherCourseIndex, otherCourse, otherCourseSessions);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertNotNull(getSoftDeletedSession(copiedSession.getFeedbackSessionName(),"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                instructor.getGoogleId()));"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ______TS(\"archive course\");"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        homePage.archiveCourse(courseIndex);"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The course \" + course.getId() + \" has been archived. \""},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + \"You can retrieve it from the Courses page.\");"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        homePage.verifyNumCourses(1);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        verifyCourseArchivedInDatabase(instructor.getGoogleId(), course);"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ______TS(\"delete course\");"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        otherCourseIndex \u003d 0;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        homePage.deleteCourse(otherCourseIndex);"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        homePage.verifyStatusMessage(\"The course \" + otherCourse.getId() + \" has been deleted. \""},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + \"You can restore it from the Recycle Bin manually.\");"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        homePage.verifyNumCourses(0);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(BACKDOOR.isCourseInRecycleBin(otherCourse.getId()));"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private String getExpectedResponseRate(FeedbackSessionAttributes session) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String sessionName \u003d session.getFeedbackSessionName();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        boolean hasQuestion \u003d testData.feedbackQuestions.values()"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .anyMatch(q -\u003e q.getFeedbackSessionName().equals(sessionName));"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (!hasQuestion) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return \"0 / 0\";"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        long numStudents \u003d testData.students.values()"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .filter(s -\u003e s.getCourse().equals(session.getCourseId()))"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .count();"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e uniqueGivers \u003d new HashSet\u003c\u003e();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        testData.feedbackResponses.values()"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.getFeedbackSessionName().equals(sessionName))"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .forEach(r -\u003e uniqueGivers.add(r.getGiver()));"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        int numResponses \u003d uniqueGivers.size();"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return numResponses + \" / \" + numStudents;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private void verifySessionPublishedState(FeedbackSessionAttributes feedbackSession, boolean state) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                feedbackSession.getFeedbackSessionName());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        while (actual.isPublished() \u003d\u003d state \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            actual \u003d getFeedbackSession(feedbackSession.getCourseId(),"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    feedbackSession.getFeedbackSessionName());"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(actual.isPublished(), state);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private void verifyCourseArchivedInDatabase(String instructorId, CourseAttributes course) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        int retryLimit \u003d 5;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        CourseAttributes actual \u003d getArchivedCourse(instructorId, course.getId());"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        while (actual \u003d\u003d null \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(1000);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            actual \u003d getArchivedCourse(instructorId, course.getId());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertEquals(actual, course);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":236,"Nicolascwy":12}},{"path":"src/e2e/java/teammates/e2e/pageobjects/AdminNotificationsPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhaojj2209"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":3,"author":{"gitId":"zhaojj2209"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"zhaojj2209"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"zhaojj2209"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":6,"author":{"gitId":"zhaojj2209"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":8,"author":{"gitId":"zhaojj2209"},"content":"import org.openqa.selenium.By;"},{"lineNumber":9,"author":{"gitId":"zhaojj2209"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":11,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":15,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"zhaojj2209"},"content":" * Page Object Model for the admin notifications page."},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":" */"},{"lineNumber":19,"author":{"gitId":"zhaojj2209"},"content":"public class AdminNotificationsPage extends AppPage {"},{"lineNumber":20,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":21,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"btn-add-notification\")"},{"lineNumber":22,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement addNotificationButton;"},{"lineNumber":23,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":24,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"btn-create-notification\")"},{"lineNumber":25,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement createNotificationButton;"},{"lineNumber":26,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":27,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"btn-edit-notification\")"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement editNotificationButton;"},{"lineNumber":29,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notifications-timezone\")"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement notificationsTimezone;"},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":33,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notification-target-user\")"},{"lineNumber":34,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement notificationTargetUserDropdown;"},{"lineNumber":35,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":36,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notification-style\")"},{"lineNumber":37,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement notificationStyleDropdown;"},{"lineNumber":38,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":39,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notification-title\")"},{"lineNumber":40,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement notificationTitleTextBox;"},{"lineNumber":41,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":42,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notification-message\")"},{"lineNumber":43,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement notificationMessageEditor;"},{"lineNumber":44,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":45,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notification-start-date\")"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement startDateBox;"},{"lineNumber":47,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":48,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notification-start-time\")"},{"lineNumber":49,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement startTimeDropdown;"},{"lineNumber":50,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":51,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notification-end-date\")"},{"lineNumber":52,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement endDateBox;"},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":54,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notification-end-time\")"},{"lineNumber":55,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement endTimeDropdown;"},{"lineNumber":56,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":57,"author":{"gitId":"zhaojj2209"},"content":"    @FindBy(id \u003d \"notifications-table\")"},{"lineNumber":58,"author":{"gitId":"zhaojj2209"},"content":"    private WebElement notificationsTable;"},{"lineNumber":59,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"    public AdminNotificationsPage(Browser browser) {"},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":"        super(browser);"},{"lineNumber":62,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"        return getPageSource().contains(\"Notifications\");"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":"    public void verifyNotificationsTableRow(NotificationAttributes notification) {"},{"lineNumber":70,"author":{"gitId":"zhaojj2209"},"content":"        WebElement notificationRow \u003d notificationsTable.findElement(By.id(notification.getNotificationId()));"},{"lineNumber":71,"author":{"gitId":"zhaojj2209"},"content":"        verifyTableRowValues(notificationRow, getNotificationTableDisplayDetails(notification));"},{"lineNumber":72,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":74,"author":{"gitId":"zhaojj2209"},"content":"    public void addNotification(NotificationAttributes notification) {"},{"lineNumber":75,"author":{"gitId":"zhaojj2209"},"content":"        clickAddNotificationButton();"},{"lineNumber":76,"author":{"gitId":"zhaojj2209"},"content":"        waitForElementPresence(By.id(\"btn-create-notification\"));"},{"lineNumber":77,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":78,"author":{"gitId":"zhaojj2209"},"content":"        fillNotificationForm(notification);"},{"lineNumber":79,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":80,"author":{"gitId":"zhaojj2209"},"content":"        clickCreateNotificationButton();"},{"lineNumber":81,"author":{"gitId":"zhaojj2209"},"content":"        waitForPageToLoad(true);"},{"lineNumber":82,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":84,"author":{"gitId":"zhaojj2209"},"content":"    public void editNotification(NotificationAttributes notification) {"},{"lineNumber":85,"author":{"gitId":"zhaojj2209"},"content":"        WebElement notificationRow \u003d notificationsTable.findElement(By.id(notification.getNotificationId()));"},{"lineNumber":86,"author":{"gitId":"zhaojj2209"},"content":"        WebElement editButton \u003d notificationRow.findElement(By.className(\"btn-light\"));"},{"lineNumber":87,"author":{"gitId":"zhaojj2209"},"content":"        editButton.click();"},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":"        waitForElementPresence(By.id(\"btn-edit-notification\"));"},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"        fillNotificationForm(notification);"},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"        clickEditNotificationButton();"},{"lineNumber":93,"author":{"gitId":"zhaojj2209"},"content":"        waitForPageToLoad(true);"},{"lineNumber":94,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":96,"author":{"gitId":"zhaojj2209"},"content":"    public void deleteNotification(NotificationAttributes notification) {"},{"lineNumber":97,"author":{"gitId":"zhaojj2209"},"content":"        WebElement notificationRow \u003d notificationsTable.findElement(By.id(notification.getNotificationId()));"},{"lineNumber":98,"author":{"gitId":"zhaojj2209"},"content":"        WebElement deleteButton \u003d notificationRow.findElement(By.className(\"btn-danger\"));"},{"lineNumber":99,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":100,"author":{"gitId":"zhaojj2209"},"content":"        deleteButton.click();"},{"lineNumber":101,"author":{"gitId":"zhaojj2209"},"content":"        waitForConfirmationModalAndClickOk();"},{"lineNumber":102,"author":{"gitId":"zhaojj2209"},"content":"        waitForPageToLoad(true);"},{"lineNumber":103,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":105,"author":{"gitId":"zhaojj2209"},"content":"    public void fillNotificationForm(NotificationAttributes notification) {"},{"lineNumber":106,"author":{"gitId":"zhaojj2209"},"content":"        selectDropdownOptionByText(notificationTargetUserDropdown, getTargetUserText(notification.getTargetUser()));"},{"lineNumber":107,"author":{"gitId":"zhaojj2209"},"content":"        selectDropdownOptionByText(notificationStyleDropdown, getNotificationStyle(notification.getStyle()));"},{"lineNumber":108,"author":{"gitId":"zhaojj2209"},"content":"        fillTextBox(notificationTitleTextBox, notification.getTitle());"},{"lineNumber":109,"author":{"gitId":"zhaojj2209"},"content":"        setMessage(notification.getMessage());"},{"lineNumber":110,"author":{"gitId":"zhaojj2209"},"content":"        setNotificationStartDateTime(notification.getStartTime());"},{"lineNumber":111,"author":{"gitId":"zhaojj2209"},"content":"        setNotificationEndDateTime(notification.getEndTime());"},{"lineNumber":112,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":114,"author":{"gitId":"zhaojj2209"},"content":"    public String getFirstRowNotificationId() {"},{"lineNumber":115,"author":{"gitId":"zhaojj2209"},"content":"        List\u003cWebElement\u003e notificationRows \u003d"},{"lineNumber":116,"author":{"gitId":"zhaojj2209"},"content":"                notificationsTable.findElement(By.tagName(\"tbody\")).findElements(By.tagName(\"tr\"));"},{"lineNumber":117,"author":{"gitId":"zhaojj2209"},"content":"        return notificationRows.get(0).getAttribute(\"id\");"},{"lineNumber":118,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":120,"author":{"gitId":"zhaojj2209"},"content":"    public void sortNotificationsTableByDescendingCreateTime() {"},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"        WebElement creationTimeHeader \u003d notificationsTable.findElements(By.tagName(\"th\")).get(5);"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":"        if (creationTimeHeader.findElements(By.className(\"fa-sort-down\")).size() \u003d\u003d 0) {"},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"            click(creationTimeHeader);"},{"lineNumber":124,"author":{"gitId":"zhaojj2209"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":"    private void clickAddNotificationButton() {"},{"lineNumber":128,"author":{"gitId":"zhaojj2209"},"content":"        click(addNotificationButton);"},{"lineNumber":129,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":131,"author":{"gitId":"zhaojj2209"},"content":"    private void clickCreateNotificationButton() {"},{"lineNumber":132,"author":{"gitId":"zhaojj2209"},"content":"        click(createNotificationButton);"},{"lineNumber":133,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":135,"author":{"gitId":"zhaojj2209"},"content":"    private void clickEditNotificationButton() {"},{"lineNumber":136,"author":{"gitId":"zhaojj2209"},"content":"        click(editNotificationButton);"},{"lineNumber":137,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":139,"author":{"gitId":"zhaojj2209"},"content":"    private void setMessage(String message) {"},{"lineNumber":140,"author":{"gitId":"zhaojj2209"},"content":"        writeToRichTextEditor(notificationMessageEditor, message);"},{"lineNumber":141,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":143,"author":{"gitId":"zhaojj2209"},"content":"    private void setNotificationStartDateTime(Instant startInstant) {"},{"lineNumber":144,"author":{"gitId":"zhaojj2209"},"content":"        setDateTime(startDateBox.findElement(By.tagName(\"input\")), startTimeDropdown, startInstant);"},{"lineNumber":145,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":147,"author":{"gitId":"zhaojj2209"},"content":"    private void setNotificationEndDateTime(Instant endInstant) {"},{"lineNumber":148,"author":{"gitId":"zhaojj2209"},"content":"        setDateTime(endDateBox.findElement(By.tagName(\"input\")), endTimeDropdown, endInstant);"},{"lineNumber":149,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":151,"author":{"gitId":"zhaojj2209"},"content":"    private void setDateTime(WebElement dateBox, WebElement timeBox, Instant startInstant) {"},{"lineNumber":152,"author":{"gitId":"zhaojj2209"},"content":"        fillTextBox(dateBox, getInputDateString(startInstant));"},{"lineNumber":153,"author":{"gitId":"zhaojj2209"},"content":"        selectDropdownOptionByText(timeBox.findElement(By.tagName(\"select\")), getInputTimeString(startInstant));"},{"lineNumber":154,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":156,"author":{"gitId":"zhaojj2209"},"content":"    private String[] getNotificationTableDisplayDetails(NotificationAttributes notification) {"},{"lineNumber":157,"author":{"gitId":"zhaojj2209"},"content":"        return new String[] {"},{"lineNumber":158,"author":{"gitId":"zhaojj2209"},"content":"            notification.getTitle(),"},{"lineNumber":159,"author":{"gitId":"zhaojj2209"},"content":"            getTableDisplayDateString(notification.getStartTime()),"},{"lineNumber":160,"author":{"gitId":"zhaojj2209"},"content":"            getTableDisplayDateString(notification.getEndTime()),"},{"lineNumber":161,"author":{"gitId":"zhaojj2209"},"content":"            notification.getTargetUser().toString(),"},{"lineNumber":162,"author":{"gitId":"zhaojj2209"},"content":"            getNotificationStyle(notification.getStyle()),"},{"lineNumber":163,"author":{"gitId":"zhaojj2209"},"content":"            getTableDisplayDateString(notification.getCreatedAt()),"},{"lineNumber":164,"author":{"gitId":"zhaojj2209"},"content":"        };"},{"lineNumber":165,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":167,"author":{"gitId":"zhaojj2209"},"content":"    private String getTimezone() {"},{"lineNumber":168,"author":{"gitId":"zhaojj2209"},"content":"        return notificationsTimezone.getText().replace(\"All dates are displayed in \", \"\").replace(\" time.\", \"\");"},{"lineNumber":169,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":171,"author":{"gitId":"zhaojj2209"},"content":"    private String getInputDateString(Instant instant) {"},{"lineNumber":172,"author":{"gitId":"zhaojj2209"},"content":"        return getDisplayedDateTime(instant, getTimezone(), \"EE, dd MMM, yyyy\");"},{"lineNumber":173,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":175,"author":{"gitId":"zhaojj2209"},"content":"    private String getInputTimeString(Instant instant) {"},{"lineNumber":176,"author":{"gitId":"zhaojj2209"},"content":"        String timezone \u003d getTimezone();"},{"lineNumber":177,"author":{"gitId":"zhaojj2209"},"content":"        ZonedDateTime dateTime \u003d instant.atZone(ZoneId.of(timezone));"},{"lineNumber":178,"author":{"gitId":"zhaojj2209"},"content":"        if (dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0) {"},{"lineNumber":179,"author":{"gitId":"zhaojj2209"},"content":"            return \"23:59H\";"},{"lineNumber":180,"author":{"gitId":"zhaojj2209"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"zhaojj2209"},"content":"        return getDisplayedDateTime(instant, timezone, \"HH:00\") + \"H\";"},{"lineNumber":182,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":184,"author":{"gitId":"zhaojj2209"},"content":"    private String getTableDisplayDateString(Instant date) {"},{"lineNumber":185,"author":{"gitId":"zhaojj2209"},"content":"        return getDisplayedDateTime(date, getTimezone(), \"d MMM h:mm a\");"},{"lineNumber":186,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":188,"author":{"gitId":"zhaojj2209"},"content":"    private String getTargetUserText(NotificationTargetUser userType) {"},{"lineNumber":189,"author":{"gitId":"zhaojj2209"},"content":"        switch (userType) {"},{"lineNumber":190,"author":{"gitId":"zhaojj2209"},"content":"        case STUDENT:"},{"lineNumber":191,"author":{"gitId":"zhaojj2209"},"content":"            return \"Students\";"},{"lineNumber":192,"author":{"gitId":"zhaojj2209"},"content":"        case INSTRUCTOR:"},{"lineNumber":193,"author":{"gitId":"zhaojj2209"},"content":"            return \"Instructors\";"},{"lineNumber":194,"author":{"gitId":"zhaojj2209"},"content":"        case GENERAL:"},{"lineNumber":195,"author":{"gitId":"zhaojj2209"},"content":"            return \"General (for both students and instructors)\";"},{"lineNumber":196,"author":{"gitId":"zhaojj2209"},"content":"        default:"},{"lineNumber":197,"author":{"gitId":"zhaojj2209"},"content":"            return \"\";"},{"lineNumber":198,"author":{"gitId":"zhaojj2209"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":201,"author":{"gitId":"zhaojj2209"},"content":"    private String getNotificationStyle(NotificationStyle style) {"},{"lineNumber":202,"author":{"gitId":"zhaojj2209"},"content":"        switch (style) {"},{"lineNumber":203,"author":{"gitId":"zhaojj2209"},"content":"        case PRIMARY:"},{"lineNumber":204,"author":{"gitId":"zhaojj2209"},"content":"            return \"Primary (blue)\";"},{"lineNumber":205,"author":{"gitId":"zhaojj2209"},"content":"        case SECONDARY:"},{"lineNumber":206,"author":{"gitId":"zhaojj2209"},"content":"            return \"Secondary (grey)\";"},{"lineNumber":207,"author":{"gitId":"zhaojj2209"},"content":"        case SUCCESS:"},{"lineNumber":208,"author":{"gitId":"zhaojj2209"},"content":"            return \"Success (green)\";"},{"lineNumber":209,"author":{"gitId":"zhaojj2209"},"content":"        case DANGER:"},{"lineNumber":210,"author":{"gitId":"zhaojj2209"},"content":"            return \"Danger (red)\";"},{"lineNumber":211,"author":{"gitId":"zhaojj2209"},"content":"        case WARNING:"},{"lineNumber":212,"author":{"gitId":"zhaojj2209"},"content":"            return \"Warning (yellow)\";"},{"lineNumber":213,"author":{"gitId":"zhaojj2209"},"content":"        case INFO:"},{"lineNumber":214,"author":{"gitId":"zhaojj2209"},"content":"            return \"Info (cyan)\";"},{"lineNumber":215,"author":{"gitId":"zhaojj2209"},"content":"        case LIGHT:"},{"lineNumber":216,"author":{"gitId":"zhaojj2209"},"content":"            return \"Light\";"},{"lineNumber":217,"author":{"gitId":"zhaojj2209"},"content":"        case DARK:"},{"lineNumber":218,"author":{"gitId":"zhaojj2209"},"content":"            return \"Dark\";"},{"lineNumber":219,"author":{"gitId":"zhaojj2209"},"content":"        default:"},{"lineNumber":220,"author":{"gitId":"zhaojj2209"},"content":"            return \"\";"},{"lineNumber":221,"author":{"gitId":"zhaojj2209"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":224,"author":{"gitId":"zhaojj2209"},"content":"}"}],"authorContributionMap":{"zhaojj2209":224}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorFeedbackEditPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.openqa.selenium.Keys;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackConstantSumQuestionDetails;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackContributionQuestionDetails;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMcqQuestionDetails;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMsqQuestionDetails;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackNumericalScaleQuestionDetails;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionType;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRankOptionsQuestionDetails;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRankQuestionDetails;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRubricQuestionDetails;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Represents the instructor feedback edit page of the website."},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class InstructorFeedbackEditPage extends AppPage {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String CUSTOM_FEEDBACK_PATH_OPTION \u003d \"Custom feedback path\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_PATH_SEPARATOR \u003d \" will give feedback on \";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String CUSTOM_VISIBILITY_OPTION \u003d \"Custom visibility options\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-fs-edit\")"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private WebElement fsEditButton;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-fs-save\")"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private WebElement fsSaveButton;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-fs-copy\")"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private WebElement fsCopyButton;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"edit-course-id\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private WebElement courseIdTextBox;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"time-zone\")"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private WebElement timezoneDropDown;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"course-name\")"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private WebElement courseNameTextBox;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"edit-session-name\")"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private WebElement sessionNameTextBox;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"instructions\")"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private WebElement instructionsEditor;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-date\")"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private WebElement startDateBox;"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-time\")"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private WebElement startTimeDropdown;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-date\")"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private WebElement endDateBox;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-time\")"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private WebElement endTimeDropdown;"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"grace-period\")"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private WebElement gracePeriodDropdown;"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-status\")"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private WebElement submissionStatusTextBox;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"published-status\")"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private WebElement publishStatusTextBox;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-visibility\")"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private WebElement changeVisibilityButton;"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-custom\")"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private WebElement customSessionVisibleTimeButton;"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-date\")"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityDateBox;"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-time\")"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityTimeDropdown;"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-at-open\")"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private WebElement openSessionVisibleTimeButton;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-custom\")"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private WebElement customResponseVisibleTimeButton;"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-date\")"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityDateBox;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-time\")"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityTimeDropdown;"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-immediately\")"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private WebElement immediateResponseVisibleTimeButton;"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-manually\")"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private WebElement manualResponseVisibleTimeButton;"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-email\")"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private WebElement changeEmailButton;"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-opening\")"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private WebElement openingSessionEmailCheckbox;"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-closing\")"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private WebElement closingSessionEmailCheckbox;"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-published\")"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private WebElement publishedSessionEmailCheckbox;"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-new-question\")"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private WebElement addNewQuestionButton;"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-copy-question\")"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private WebElement copyQuestionButton;"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"preview-student\")"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private WebElement previewAsStudentDropdown;"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-preview-student\")"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private WebElement previewAsStudentButton;"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"preview-instructor\")"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private WebElement previewAsInstructorDropdown;"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-preview-instructor\")"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private WebElement previewAsInstructorButton;"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public InstructorFeedbackEditPage(Browser browser) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Edit Feedback Session\");"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(CourseAttributes course, FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"instructions\"));"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(getCourseId(), course.getId());"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(getCourseName(), course.getName());"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(getTimeZone(), feedbackSession.getTimeZone());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(getFeedbackSessionName(), feedbackSession.getFeedbackSessionName());"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(getInstructions(), feedbackSession.getInstructions());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(getStartDate(), getDateString(feedbackSession.getStartTime(), feedbackSession.getTimeZone()));"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(getStartTime(), getTimeString(feedbackSession.getStartTime(), feedbackSession.getTimeZone()));"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(getEndDate(), getDateString(feedbackSession.getEndTime(), feedbackSession.getTimeZone()));"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(getEndTime(), getTimeString(feedbackSession.getEndTime(), feedbackSession.getTimeZone()));"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(getGracePeriod(), feedbackSession.getGracePeriodMinutes() + \" min\");"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        verifySubmissionStatus(feedbackSession);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        verifyPublishedStatus(feedbackSession);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        verifyVisibilitySettings(feedbackSession);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        verifyEmailSettings(feedbackSession);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void verifySubmissionStatus(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String submissionStatus \u003d getSubmissionStatus();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (feedbackSession.isClosed()) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            assertEquals(submissionStatus, \"Closed\");"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } else if (feedbackSession.isVisible() \u0026\u0026 (feedbackSession.isOpened() || feedbackSession.isInGracePeriod())) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            assertEquals(submissionStatus, \"Open\");"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            assertEquals(submissionStatus, \"Awaiting\");"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private void verifyPublishedStatus(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String publishedStatus \u003d getPublishedStatus();"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (feedbackSession.isPublished()) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            assertEquals(publishedStatus, \"Published\");"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            assertEquals(publishedStatus, \"Not Published\");"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private void verifyVisibilitySettings(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Instant sessionVisibleTime \u003d feedbackSession.getSessionVisibleFromTime();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Instant responseVisibleTime \u003d feedbackSession.getResultsVisibleFromTime();"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // Default settings, assert setting section not expanded"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (sessionVisibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                \u0026\u0026 responseVisibleTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            assertTrue(isElementPresent(\"btn-change-visibility\"));"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        verifySessionVisibilitySettings(sessionVisibleTime, feedbackSession);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        verifyResponseVisibilitySettings(responseVisibleTime, feedbackSession);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"    private void verifySessionVisibilitySettings(Instant sessionVisibleTime,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                                                 FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (sessionVisibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            assertTrue(openSessionVisibleTimeButton.isSelected());"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            assertTrue(customSessionVisibleTimeButton.isSelected());"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            assertEquals(getSessionVisibilityDate(), getDateString(feedbackSession.getSessionVisibleFromTime(),"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            assertEquals(getSessionVisibilityTime(), getTimeString(feedbackSession.getSessionVisibleFromTime(),"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private void verifyResponseVisibilitySettings(Instant responseVisibleTime,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                                                  FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        if (responseVisibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            assertTrue(immediateResponseVisibleTimeButton.isSelected());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        } else if (responseVisibleTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            assertTrue(manualResponseVisibleTimeButton.isSelected());"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            assertTrue(customSessionVisibleTimeButton.isSelected());"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            assertEquals(getResponseVisibilityDate(), getDateString(feedbackSession.getResultsVisibleFromTime(),"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            assertEquals(getResponseVisibilityTime(), getTimeString(feedbackSession.getResultsVisibleFromTime(),"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private void verifyEmailSettings(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        boolean isOpeningEmailEnabled \u003d feedbackSession.isOpeningEmailEnabled();"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        boolean isClosingEmailEnabled \u003d feedbackSession.isClosingEmailEnabled();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        boolean isPublishedEmailEnabled \u003d feedbackSession.isPublishedEmailEnabled();"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // Default settings, assert setting section not expanded"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (isOpeningEmailEnabled \u0026\u0026 isClosingEmailEnabled \u0026\u0026 isPublishedEmailEnabled) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            assertTrue(isElementPresent(\"btn-change-email\"));"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        if (isOpeningEmailEnabled) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            assertTrue(openingSessionEmailCheckbox.isSelected());"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        if (isClosingEmailEnabled) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            assertTrue(closingSessionEmailCheckbox.isSelected());"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        if (isPublishedEmailEnabled) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            assertTrue(publishedSessionEmailCheckbox.isSelected());"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void editSessionDetails(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        click(fsEditButton);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        setInstructions(newFeedbackSessionDetails.getInstructions());"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        setSessionStartDateTime(newFeedbackSessionDetails.getStartTime(), newFeedbackSessionDetails.getTimeZone());"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        setSessionEndDateTime(newFeedbackSessionDetails.getEndTime(), newFeedbackSessionDetails.getTimeZone());"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        selectGracePeriod(newFeedbackSessionDetails.getGracePeriodMinutes());"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        setVisibilitySettings(newFeedbackSessionDetails);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        setEmailSettings(newFeedbackSessionDetails);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        click(fsSaveButton);"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void copySessionToOtherCourse(CourseAttributes otherCourse, String sessionName) {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        click(fsCopyButton);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), sessionName);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            if (courseId.equals(otherCourse.getId())) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"    public void deleteSession() {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-fs-delete\")));"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public FeedbackSubmitPage previewAsStudent(StudentAttributes student) {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(previewAsStudentDropdown, String.format(\"[%s] %s\", student.getTeam(), student.getName()));"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        click(previewAsStudentButton);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(2000);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        switchToNewWindow();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return changePageType(FeedbackSubmitPage.class);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public FeedbackSubmitPage previewAsInstructor(InstructorAttributes instructor) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(previewAsInstructorDropdown, instructor.getName());"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        click(previewAsInstructorButton);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(2000);"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        switchToNewWindow();"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        return changePageType(FeedbackSubmitPage.class);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"    public void verifyNumQuestions(int expected) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        assertEquals(getNumQuestions(), expected);"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"    public void verifyQuestionDetails(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        scrollElementToCenter(getQuestionForm(questionNum));"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        assertEquals(feedbackQuestion.getQuestionType(), getQuestionType(questionNum));"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        assertEquals(feedbackQuestion.getQuestionNumber(), getQuestionNumber(questionNum));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        assertEquals(feedbackQuestion.getQuestionDetailsCopy().getQuestionText(), getQuestionBrief(questionNum));"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        assertEquals(getQuestionDescription(questionNum), feedbackQuestion.getQuestionDescription());"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        verifyFeedbackPathSettings(questionNum, feedbackQuestion);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        verifyQuestionVisibilitySettings(questionNum, feedbackQuestion);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"    private void verifyFeedbackPathSettings(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assertEquals(getDisplayGiverName(feedbackQuestion.getGiverType()), getFeedbackGiver(questionNum));"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        String feedbackReceiver \u003d getFeedbackReceiver(questionNum);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        assertEquals(getDisplayRecipientName(feedbackQuestion.getRecipientType()), feedbackReceiver);"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"        if (feedbackReceiver.equals(getDisplayRecipientName(FeedbackParticipantType.INSTRUCTORS))"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                || feedbackReceiver.equals(getDisplayRecipientName(FeedbackParticipantType.STUDENTS_EXCLUDING_SELF))"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                || feedbackReceiver.equals(getDisplayRecipientName(FeedbackParticipantType.TEAMS_EXCLUDING_SELF))) {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            verifyNumberOfEntitiesToGiveFeedbackTo(questionNum, feedbackQuestion.getNumberOfEntitiesToGiveFeedbackTo());"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    private void verifyNumberOfEntitiesToGiveFeedbackTo(int questionNum, int numberOfEntitiesToGiveFeedbackTo) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        WebElement feedbackPathPanel \u003d questionForm.findElement(By.tagName(\"tm-feedback-path-panel\"));"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        if (numberOfEntitiesToGiveFeedbackTo \u003d\u003d Const.MAX_POSSIBLE_RECIPIENTS) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            assertTrue(feedbackPathPanel.findElement(By.id(\"unlimited-recipients\")).isSelected());"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            assertTrue(feedbackPathPanel.findElement(By.id(\"custom-recipients\")).isSelected());"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            assertEquals(feedbackPathPanel.findElement(By.id(\"custom-recipients-number\")).getAttribute(\"value\"),"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                    Integer.toString(numberOfEntitiesToGiveFeedbackTo));"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    private void verifyQuestionVisibilitySettings(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        WebElement visibilityPanel \u003d questionForm.findElement(By.tagName(\"tm-visibility-panel\"));"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        String visibility \u003d visibilityPanel.findElement(By.cssSelector(\"#btn-question-visibility span\")).getText();"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showResponsesTo \u003d feedbackQuestion.getShowResponsesTo();"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showGiverNameTo \u003d feedbackQuestion.getShowGiverNameTo();"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showRecipientNameTo \u003d feedbackQuestion.getShowRecipientNameTo();"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"        switch (visibility) {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient and giver\u0027s team members, visible to instructors\":"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.OWN_TEAM_MEMBERS));"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 3);"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"        case \"Visible to instructors only\":"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 1);"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 1);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient and instructors\":"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":383,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 2);"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 0);"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient, visible to instructors\":"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 2);"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient and giver/recipient\u0027s team members, visible to instructors\":"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.OWN_TEAM_MEMBERS));"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS));"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 4);"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"        case \"Visible to recipient and instructors\":"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":423,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 2);"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 2);"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            verifyCustomQuestionVisibility(questionNum, feedbackQuestion);"},{"lineNumber":436,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"    private void verifyCustomQuestionVisibility(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        WebElement visibilityPanel \u003d questionForm.findElement(By.tagName(\"tm-visibility-panel\"));"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        String visibility \u003d visibilityPanel.findElement(By.cssSelector(\"#btn-question-visibility span\")).getText();"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        assertEquals(visibility, CUSTOM_VISIBILITY_OPTION);"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"        FeedbackParticipantType giver \u003d feedbackQuestion.getGiverType();"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        FeedbackParticipantType receiver \u003d feedbackQuestion.getRecipientType();"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        WebElement customVisibilityTable \u003d visibilityPanel.findElement(By.id(\"custom-visibility-table\"));"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        assertVisibilityBoxesSelected(customVisibilityTable, giver, receiver, feedbackQuestion.getShowResponsesTo(), 1);"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        assertVisibilityBoxesSelected(customVisibilityTable, giver, receiver, feedbackQuestion.getShowGiverNameTo(), 2);"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        assertVisibilityBoxesSelected(customVisibilityTable, giver, receiver, feedbackQuestion.getShowRecipientNameTo(), 3);"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"    private void assertVisibilityBoxesSelected(WebElement table, FeedbackParticipantType giver,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                                               FeedbackParticipantType receiver, List\u003cFeedbackParticipantType\u003e participants,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"                                               int colNum) {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e possibleTypes \u003d new ArrayList\u003c\u003e(Arrays.asList(FeedbackParticipantType.RECEIVER,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.RECEIVER_TEAM_MEMBERS,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        if (!giver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        if (!receiver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        if (receiver.equals(FeedbackParticipantType.NONE)"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.SELF)"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.OWN_TEAM)) {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER);"},{"lineNumber":470,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        int index \u003d colNum - 1;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType participant : participants) {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"            assertTrue(rows.get(possibleTypes.indexOf(participant)).findElements(By.tagName(\"input\")).get(index)"},{"lineNumber":477,"author":{"gitId":"-"},"content":"                    .isSelected());"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"    public void addTemplateQuestion(int optionNum) {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        addNewQuestion(1);"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        WebElement templateQuestionModal \u003d waitForElementPresence(By.id(\"template-question-modal\"));"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"        click(templateQuestionModal.findElements(By.tagName(\"input\")).get(optionNum - 1));"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        clickAndWaitForNewQuestion(browser.driver.findElement(By.id(\"btn-confirm-template\")));"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"    public void copyQuestion(String courseId, String questionText) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        click(copyQuestionButton);"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        WebElement copyQuestionModal \u003d waitForElementPresence(By.id(\"copy-question-modal\"));"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"zhaojj2209"},"content":"        List\u003cWebElement\u003e cards \u003d copyQuestionModal.findElements(By.className(\"card\"));"},{"lineNumber":494,"author":{"gitId":"zhaojj2209"},"content":"        for (WebElement card : cards) {"},{"lineNumber":495,"author":{"gitId":"zhaojj2209"},"content":"            WebElement cardHeader \u003d card.findElement(By.className(\"card-header\"));"},{"lineNumber":496,"author":{"gitId":"zhaojj2209"},"content":"            if (cardHeader.getText().startsWith(\"[\" + courseId + \"]\")) {"},{"lineNumber":497,"author":{"gitId":"zhaojj2209"},"content":"                click(cardHeader);"},{"lineNumber":498,"author":{"gitId":"zhaojj2209"},"content":"                WebElement cardBody \u003d waitForElementPresence(By.className(\"card-body\"));"},{"lineNumber":499,"author":{"gitId":"zhaojj2209"},"content":"                // Reload questions"},{"lineNumber":500,"author":{"gitId":"zhaojj2209"},"content":"                WebElement reloadBtn \u003d cardBody.findElement(By.tagName(\"button\"));"},{"lineNumber":501,"author":{"gitId":"zhaojj2209"},"content":"                click(reloadBtn);"},{"lineNumber":502,"author":{"gitId":"zhaojj2209"},"content":"                WebElement table \u003d waitForElementPresence(By.id(\"copy-question-table\"));"},{"lineNumber":503,"author":{"gitId":"zhaojj2209"},"content":"                List\u003cWebElement\u003e rows \u003d table.findElements(By.cssSelector(\"tbody tr\"));"},{"lineNumber":504,"author":{"gitId":"-"},"content":"                for (WebElement row : rows) {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"                    List\u003cWebElement\u003e cells \u003d row.findElements(By.tagName(\"td\"));"},{"lineNumber":506,"author":{"gitId":"zhaojj2209"},"content":"                    if (cells.get(2).getText().equals(questionText)) {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"                        markOptionAsSelected(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":508,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":509,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        clickAndWaitForNewQuestion(browser.driver.findElement(By.id(\"btn-confirm-copy-question\")));"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    public void editQuestionNumber(int questionNum, int newQuestionNumber) {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(getQuestionForm(questionNum).findElement(By.id(\"question-number-dropdown\")),"},{"lineNumber":518,"author":{"gitId":"-"},"content":"                Integer.toString(newQuestionNumber));"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"    public void editQuestionDetails(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"    private void inputQuestionDetails(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        setQuestionBrief(questionNum, feedbackQuestion.getQuestionDetailsCopy().getQuestionText());"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        setQuestionDescription(questionNum, feedbackQuestion.getQuestionDescription());"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        FeedbackQuestionType questionType \u003d feedbackQuestion.getQuestionType();"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        if (!questionType.equals(FeedbackQuestionType.CONTRIB)) {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"            setFeedbackPath(questionNum, feedbackQuestion);"},{"lineNumber":534,"author":{"gitId":"-"},"content":"            setQuestionVisibility(questionNum, feedbackQuestion);"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"    public void duplicateQuestion(int questionNum) {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        clickAndWaitForNewQuestion(getQuestionForm(questionNum).findElement(By.id(\"btn-duplicate-question\")));"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"    public void deleteQuestion(int questionNum) {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        clickAndConfirm(getQuestionForm(questionNum).findElement(By.id(\"btn-delete-question\")));"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":545,"author":{"gitId":"-"},"content":""},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public void verifyTextQuestionDetails(int questionNum, FeedbackTextQuestionDetails questionDetails) {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        String recommendLength \u003d getRecommendedTextLengthField(questionNum).getAttribute(\"value\");"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        assertEquals(recommendLength, questionDetails.getRecommendedLength().toString());"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"    public void addTextQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        addNewQuestion(2);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        FeedbackTextQuestionDetails questionDetails \u003d"},{"lineNumber":556,"author":{"gitId":"-"},"content":"                (FeedbackTextQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        fillTextBox(getRecommendedTextLengthField(questionNum), questionDetails.getRecommendedLength().toString());"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"    public void editTextQuestion(int questionNum, FeedbackTextQuestionDetails textQuestionDetails) {"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        WebElement recommendedTextLengthField \u003d getRecommendedTextLengthField(questionNum);"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        waitForElementToBeClickable(recommendedTextLengthField);"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        fillTextBox(recommendedTextLengthField, textQuestionDetails.getRecommendedLength().toString());"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":568,"author":{"gitId":"-"},"content":""},{"lineNumber":569,"author":{"gitId":"-"},"content":"    public void verifyMcqQuestionDetails(int questionNum, FeedbackMcqQuestionDetails questionDetails) {"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        if (verifyGeneratedOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        verifyOptions(questionNum, questionDetails.getMcqChoices());"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        verifyOptionWeights(questionNum, questionDetails.isHasAssignedWeights(), questionDetails.getMcqWeights());"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        verifyOtherOption(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMcqOtherWeight());"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":577,"author":{"gitId":"-"},"content":""},{"lineNumber":578,"author":{"gitId":"-"},"content":"    public void addMcqQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        addNewQuestion(3);"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        FeedbackMcqQuestionDetails questionDetails \u003d (FeedbackMcqQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        inputMcqDetails(questionNum, questionDetails);"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"    public void editMcqQuestion(int questionNum, FeedbackMcqQuestionDetails questionDetails) {"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        inputMcqDetails(questionNum, questionDetails);"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":591,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"    public void verifyMsqQuestionDetails(int questionNum, FeedbackMsqQuestionDetails questionDetails) {"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        verifyMaxOptions(questionNum, questionDetails.getMaxSelectableChoices());"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        verifyMinOptions(questionNum, questionDetails.getMinSelectableChoices());"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        if (verifyGeneratedOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        verifyOptions(questionNum, questionDetails.getMsqChoices());"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        verifyOptionWeights(questionNum, questionDetails.isHasAssignedWeights(), questionDetails.getMsqWeights());"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        verifyOtherOption(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMsqOtherWeight());"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"    public void addMsqQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        addNewQuestion(4);"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails questionDetails \u003d (FeedbackMsqQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        inputMsqDetails(questionNum, questionDetails);"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":612,"author":{"gitId":"-"},"content":""},{"lineNumber":613,"author":{"gitId":"-"},"content":"    public void editMsqQuestion(int questionNum, FeedbackMsqQuestionDetails msqQuestionDetails) {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        inputMsqDetails(questionNum, msqQuestionDetails);"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"    public void verifyNumScaleQuestionDetails(int questionNum, FeedbackNumericalScaleQuestionDetails questionDetails) {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        assertEquals(getMinNumscaleInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                Integer.toString(questionDetails.getMinScale()));"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        assertEquals(getNumScaleIncrementInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                getDoubleString(questionDetails.getStep()));"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        assertEquals(getMaxNumscaleInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                Integer.toString(questionDetails.getMaxScale()));"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":627,"author":{"gitId":"-"},"content":""},{"lineNumber":628,"author":{"gitId":"-"},"content":"    public void addNumScaleQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":629,"author":{"gitId":"-"},"content":"        addNewQuestion(5);"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        FeedbackNumericalScaleQuestionDetails questionDetails \u003d"},{"lineNumber":633,"author":{"gitId":"-"},"content":"                (FeedbackNumericalScaleQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        inputNumScaleDetails(questionNum, questionDetails);"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":637,"author":{"gitId":"-"},"content":""},{"lineNumber":638,"author":{"gitId":"-"},"content":"    public void editNumScaleQuestion(int questionNum, FeedbackNumericalScaleQuestionDetails questionDetails) {"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        inputNumScaleDetails(questionNum, questionDetails);"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"    public void verifyConstSumQuestionDetails(int questionNum, FeedbackConstantSumQuestionDetails questionDetails) {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        if (!questionDetails.isDistributeToRecipients()) {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"            verifyOptions(questionNum, questionDetails.getConstSumOptions());"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"        if (questionDetails.isPointsPerOption()) {"},{"lineNumber":650,"author":{"gitId":"-"},"content":"            assertTrue(getConstSumPerOptionPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":651,"author":{"gitId":"-"},"content":"            assertEquals(getConstSumPerOptionPointsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":652,"author":{"gitId":"-"},"content":"                    Integer.toString(questionDetails.getPoints()));"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            assertFalse(getConstSumTotalPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":655,"author":{"gitId":"-"},"content":"            assertTrue(getConstSumTotalPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":656,"author":{"gitId":"-"},"content":"            assertEquals(getConstSumTotalPointsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":657,"author":{"gitId":"-"},"content":"                    Integer.toString(questionDetails.getPoints()));"},{"lineNumber":658,"author":{"gitId":"-"},"content":"            assertFalse(getConstSumPerOptionPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"-"},"content":"        if (questionDetails.isForceUnevenDistribution()) {"},{"lineNumber":662,"author":{"gitId":"-"},"content":"            String distributeFor \u003d questionDetails.getDistributePointsFor();"},{"lineNumber":663,"author":{"gitId":"-"},"content":"            assertTrue(getConstSumUnevenDistributionCheckbox(questionNum).isSelected());"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            assertEquals(getSelectedDropdownOptionText(getConstSumUnevenDistributionDropdown(questionNum)).trim(),"},{"lineNumber":665,"author":{"gitId":"-"},"content":"                    \"All options\".equals(distributeFor) ? \"Every option\" : distributeFor);"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            assertFalse(getConstSumUnevenDistributionCheckbox(questionNum).isSelected());"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"    public void addConstSumOptionQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        addNewQuestion(6);"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        addConstSumQuestion(feedbackQuestion);"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"-"},"content":"    public void addConstSumRecipientQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        addNewQuestion(7);"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        addConstSumQuestion(feedbackQuestion);"},{"lineNumber":679,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":680,"author":{"gitId":"-"},"content":""},{"lineNumber":681,"author":{"gitId":"-"},"content":"    public void addConstSumQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":683,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        FeedbackConstantSumQuestionDetails questionDetails \u003d"},{"lineNumber":685,"author":{"gitId":"-"},"content":"                (FeedbackConstantSumQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        inputConstSumDetails(questionNum, questionDetails);"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"    public void editConstSumQuestion(int questionNum, FeedbackConstantSumQuestionDetails csQuestionDetails) {"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        inputConstSumDetails(questionNum, csQuestionDetails);"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":694,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":695,"author":{"gitId":"-"},"content":""},{"lineNumber":696,"author":{"gitId":"-"},"content":"    public void verifyContributionQuestionDetails(int questionNum, FeedbackContributionQuestionDetails questionDetails) {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"        assertEquals(questionDetails.isNotSureAllowed(), getAllowNotSureContributionCheckbox(questionNum).isSelected());"},{"lineNumber":698,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"    public void addContributionQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":701,"author":{"gitId":"-"},"content":"        addNewQuestion(8);"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        FeedbackContributionQuestionDetails questionDetails \u003d"},{"lineNumber":705,"author":{"gitId":"-"},"content":"                (FeedbackContributionQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        inputContributionDetails(questionNum, questionDetails);"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":708,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"-"},"content":"    public void editContributionQuestion(int questionNum, FeedbackContributionQuestionDetails questionDetails) {"},{"lineNumber":711,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        inputContributionDetails(questionNum, questionDetails);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":714,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"    public void verifyRubricQuestionDetails(int questionNum, FeedbackRubricQuestionDetails questionDetails) {"},{"lineNumber":717,"author":{"gitId":"-"},"content":"        int numChoices \u003d questionDetails.getNumOfRubricChoices();"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        List\u003cString\u003e choices \u003d questionDetails.getRubricChoices();"},{"lineNumber":719,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numChoices; i++) {"},{"lineNumber":720,"author":{"gitId":"-"},"content":"            assertEquals(choices.get(i), getRubricChoiceInputs(questionNum).get(i).getAttribute(\"value\"));"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":722,"author":{"gitId":"-"},"content":""},{"lineNumber":723,"author":{"gitId":"-"},"content":"        int numSubQn \u003d questionDetails.getNumOfRubricSubQuestions();"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        List\u003cString\u003e subQuestions \u003d questionDetails.getRubricSubQuestions();"},{"lineNumber":725,"author":{"gitId":"-"},"content":"        List\u003cList\u003cString\u003e\u003e descriptions \u003d questionDetails.getRubricDescriptions();"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":727,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e textAreas \u003d getRubricTextareas(questionNum, i + 2);"},{"lineNumber":728,"author":{"gitId":"-"},"content":"            assertEquals(subQuestions.get(i), textAreas.get(0).getAttribute(\"value\"));"},{"lineNumber":729,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                assertEquals(descriptions.get(i).get(j), textAreas.get(j + 1).getAttribute(\"value\"));"},{"lineNumber":731,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"        if (questionDetails.isHasAssignedWeights()) {"},{"lineNumber":735,"author":{"gitId":"-"},"content":"            assertTrue(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":736,"author":{"gitId":"-"},"content":"            List\u003cList\u003cDouble\u003e\u003e weights \u003d questionDetails.getRubricWeights();"},{"lineNumber":737,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"                List\u003cWebElement\u003e rubricWeights \u003d getRubricWeights(questionNum, i + 2);"},{"lineNumber":739,"author":{"gitId":"-"},"content":"                for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":740,"author":{"gitId":"-"},"content":"                    assertEquals(rubricWeights.get(j).getAttribute(\"value\"),"},{"lineNumber":741,"author":{"gitId":"-"},"content":"                            getDoubleString(weights.get(i).get(j)));"},{"lineNumber":742,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":743,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"            assertFalse(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":746,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":747,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"    public void addRubricQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        addNewQuestion(9);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        FeedbackRubricQuestionDetails questionDetails \u003d"},{"lineNumber":754,"author":{"gitId":"-"},"content":"                (FeedbackRubricQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        inputRubricDetails(questionNum, questionDetails);"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":758,"author":{"gitId":"-"},"content":""},{"lineNumber":759,"author":{"gitId":"-"},"content":"    public void editRubricQuestion(int questionNum, FeedbackRubricQuestionDetails questionDetails) {"},{"lineNumber":760,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":761,"author":{"gitId":"-"},"content":"        inputRubricDetails(questionNum, questionDetails);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":763,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"    public void verifyRankQuestionDetails(int questionNum, FeedbackRankQuestionDetails questionDetails) {"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        if (questionDetails instanceof FeedbackRankOptionsQuestionDetails) {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"            FeedbackRankOptionsQuestionDetails optionDetails \u003d (FeedbackRankOptionsQuestionDetails) questionDetails;"},{"lineNumber":768,"author":{"gitId":"-"},"content":"            verifyOptions(questionNum, optionDetails.getOptions());"},{"lineNumber":769,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":770,"author":{"gitId":"-"},"content":"        assertEquals(getAllowDuplicateRankCheckbox(questionNum).isSelected(), questionDetails.isAreDuplicatesAllowed());"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        verifyMaxOptions(questionNum, questionDetails.getMaxOptionsToBeRanked());"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        verifyMinOptions(questionNum, questionDetails.getMinOptionsToBeRanked());"},{"lineNumber":773,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":774,"author":{"gitId":"-"},"content":""},{"lineNumber":775,"author":{"gitId":"-"},"content":"    public void addRankOptionsQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        addNewQuestion(10);"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":779,"author":{"gitId":"-"},"content":"        FeedbackRankOptionsQuestionDetails questionDetails \u003d"},{"lineNumber":780,"author":{"gitId":"-"},"content":"                (FeedbackRankOptionsQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":781,"author":{"gitId":"-"},"content":"        inputRankDetails(questionNum, questionDetails);"},{"lineNumber":782,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":783,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":784,"author":{"gitId":"-"},"content":""},{"lineNumber":785,"author":{"gitId":"-"},"content":"    public void addRankRecipientsQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        addNewQuestion(11);"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":788,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        FeedbackRankQuestionDetails questionDetails \u003d"},{"lineNumber":790,"author":{"gitId":"-"},"content":"                (FeedbackRankQuestionDetails) feedbackQuestion.getQuestionDetailsCopy();"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        inputRankDetails(questionNum, questionDetails);"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":794,"author":{"gitId":"-"},"content":""},{"lineNumber":795,"author":{"gitId":"-"},"content":"    public void editRankQuestion(int questionNum, FeedbackRankQuestionDetails questionDetails) {"},{"lineNumber":796,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":797,"author":{"gitId":"-"},"content":"        inputRankDetails(questionNum, questionDetails);"},{"lineNumber":798,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":800,"author":{"gitId":"-"},"content":""},{"lineNumber":801,"author":{"gitId":"-"},"content":"    private String getCourseId() {"},{"lineNumber":802,"author":{"gitId":"-"},"content":"        return courseIdTextBox.getText();"},{"lineNumber":803,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":804,"author":{"gitId":"-"},"content":""},{"lineNumber":805,"author":{"gitId":"-"},"content":"    private String getCourseName() {"},{"lineNumber":806,"author":{"gitId":"-"},"content":"        return courseNameTextBox.getText();"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":808,"author":{"gitId":"-"},"content":""},{"lineNumber":809,"author":{"gitId":"-"},"content":"    private String getTimeZone() {"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        return timezoneDropDown.getText();"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionName() {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        return sessionNameTextBox.getText();"},{"lineNumber":815,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":816,"author":{"gitId":"-"},"content":""},{"lineNumber":817,"author":{"gitId":"-"},"content":"    private String getInstructions() {"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        return getEditorRichText(instructionsEditor.findElement(By.tagName(\"editor\")));"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"    private String getStartDate() {"},{"lineNumber":822,"author":{"gitId":"-"},"content":"        return startDateBox.findElement(By.tagName(\"input\")).getAttribute(\"value\");"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":824,"author":{"gitId":"-"},"content":""},{"lineNumber":825,"author":{"gitId":"-"},"content":"    private String getStartTime() {"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(startTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":828,"author":{"gitId":"-"},"content":""},{"lineNumber":829,"author":{"gitId":"-"},"content":"    private String getEndDate() {"},{"lineNumber":830,"author":{"gitId":"-"},"content":"        return endDateBox.findElement(By.tagName(\"input\")).getAttribute(\"value\");"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"    private String getEndTime() {"},{"lineNumber":834,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(endTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":836,"author":{"gitId":"-"},"content":""},{"lineNumber":837,"author":{"gitId":"-"},"content":"    private String getSessionVisibilityDate() {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"        return sessionVisibilityDateBox.findElement(By.tagName(\"input\")).getAttribute(\"value\");"},{"lineNumber":839,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":840,"author":{"gitId":"-"},"content":""},{"lineNumber":841,"author":{"gitId":"-"},"content":"    private String getSessionVisibilityTime() {"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(sessionVisibilityTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":844,"author":{"gitId":"-"},"content":""},{"lineNumber":845,"author":{"gitId":"-"},"content":"    private String getResponseVisibilityDate() {"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        return responseVisibilityDateBox.findElement(By.tagName(\"input\"))"},{"lineNumber":847,"author":{"gitId":"-"},"content":"                .getAttribute(\"value\");"},{"lineNumber":848,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":849,"author":{"gitId":"-"},"content":""},{"lineNumber":850,"author":{"gitId":"-"},"content":"    private String getResponseVisibilityTime() {"},{"lineNumber":851,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(responseVisibilityTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":852,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":853,"author":{"gitId":"-"},"content":""},{"lineNumber":854,"author":{"gitId":"-"},"content":"    private String getGracePeriod() {"},{"lineNumber":855,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(gracePeriodDropdown);"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"-"},"content":"    private String getSubmissionStatus() {"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        return submissionStatusTextBox.getText();"},{"lineNumber":860,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":861,"author":{"gitId":"-"},"content":""},{"lineNumber":862,"author":{"gitId":"-"},"content":"    private String getPublishedStatus() {"},{"lineNumber":863,"author":{"gitId":"-"},"content":"        return publishStatusTextBox.getText();"},{"lineNumber":864,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":865,"author":{"gitId":"-"},"content":""},{"lineNumber":866,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, String timeZone) {"},{"lineNumber":867,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"EE, dd MMM, yyyy\");"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":869,"author":{"gitId":"-"},"content":""},{"lineNumber":870,"author":{"gitId":"-"},"content":"    private String getTimeString(Instant instant, String timeZone) {"},{"lineNumber":871,"author":{"gitId":"-"},"content":"        ZonedDateTime dateTime \u003d instant.atZone(ZoneId.of(timeZone));"},{"lineNumber":872,"author":{"gitId":"-"},"content":"        if (dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0) {"},{"lineNumber":873,"author":{"gitId":"-"},"content":"            return \"23:59H\";"},{"lineNumber":874,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":875,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"HH:00\") + \"H\";"},{"lineNumber":876,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":877,"author":{"gitId":"-"},"content":""},{"lineNumber":878,"author":{"gitId":"-"},"content":"    private void setInstructions(String newInstructions) {"},{"lineNumber":879,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(instructionsEditor.findElement(By.tagName(\"editor\")), newInstructions);"},{"lineNumber":880,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":881,"author":{"gitId":"-"},"content":""},{"lineNumber":882,"author":{"gitId":"-"},"content":"    private void setSessionStartDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":883,"author":{"gitId":"-"},"content":"        setDateTime(startDateBox.findElement(By.tagName(\"input\")), startTimeDropdown, startInstant, timeZone);"},{"lineNumber":884,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":885,"author":{"gitId":"-"},"content":""},{"lineNumber":886,"author":{"gitId":"-"},"content":"    private void setSessionEndDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":887,"author":{"gitId":"-"},"content":"        setDateTime(endDateBox.findElement(By.tagName(\"input\")), endTimeDropdown, endInstant, timeZone);"},{"lineNumber":888,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":889,"author":{"gitId":"-"},"content":""},{"lineNumber":890,"author":{"gitId":"-"},"content":"    private void setVisibilityDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":891,"author":{"gitId":"-"},"content":"        setDateTime(sessionVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":892,"author":{"gitId":"-"},"content":"                sessionVisibilityTimeDropdown, startInstant, timeZone);"},{"lineNumber":893,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":894,"author":{"gitId":"-"},"content":""},{"lineNumber":895,"author":{"gitId":"-"},"content":"    private void setResponseDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":896,"author":{"gitId":"-"},"content":"        setDateTime(responseVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":897,"author":{"gitId":"-"},"content":"                responseVisibilityTimeDropdown, endInstant, timeZone);"},{"lineNumber":898,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":899,"author":{"gitId":"-"},"content":""},{"lineNumber":900,"author":{"gitId":"-"},"content":"    private void setDateTime(WebElement dateBox, WebElement timeBox, Instant startInstant, String timeZone) {"},{"lineNumber":901,"author":{"gitId":"-"},"content":"        fillTextBox(dateBox, getDateString(startInstant, timeZone));"},{"lineNumber":902,"author":{"gitId":"-"},"content":""},{"lineNumber":903,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(timeBox.findElement(By.tagName(\"select\")), getTimeString(startInstant, timeZone));"},{"lineNumber":904,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":905,"author":{"gitId":"-"},"content":""},{"lineNumber":906,"author":{"gitId":"-"},"content":"    private void selectGracePeriod(long gracePeriodMinutes) {"},{"lineNumber":907,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(gracePeriodDropdown, gracePeriodMinutes + \" min\");"},{"lineNumber":908,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":909,"author":{"gitId":"-"},"content":""},{"lineNumber":910,"author":{"gitId":"-"},"content":"    private void setVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":911,"author":{"gitId":"-"},"content":"        showVisibilitySettings();"},{"lineNumber":912,"author":{"gitId":"-"},"content":""},{"lineNumber":913,"author":{"gitId":"-"},"content":"        setSessionVisibilitySettings(newFeedbackSession);"},{"lineNumber":914,"author":{"gitId":"-"},"content":"        setResponseVisibilitySettings(newFeedbackSession);"},{"lineNumber":915,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":916,"author":{"gitId":"-"},"content":""},{"lineNumber":917,"author":{"gitId":"-"},"content":"    private void setSessionVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":918,"author":{"gitId":"-"},"content":"        Instant sessionDateTime \u003d newFeedbackSession.getSessionVisibleFromTime();"},{"lineNumber":919,"author":{"gitId":"-"},"content":"        if (sessionDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":920,"author":{"gitId":"-"},"content":"            click(openSessionVisibleTimeButton);"},{"lineNumber":921,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":922,"author":{"gitId":"-"},"content":"            click(customSessionVisibleTimeButton);"},{"lineNumber":923,"author":{"gitId":"-"},"content":"            setVisibilityDateTime(sessionDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":924,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":925,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":926,"author":{"gitId":"-"},"content":""},{"lineNumber":927,"author":{"gitId":"-"},"content":"    private void setResponseVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":928,"author":{"gitId":"-"},"content":"        Instant responseDateTime \u003d newFeedbackSession.getResultsVisibleFromTime();"},{"lineNumber":929,"author":{"gitId":"-"},"content":"        if (responseDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":930,"author":{"gitId":"-"},"content":"            click(immediateResponseVisibleTimeButton);"},{"lineNumber":931,"author":{"gitId":"-"},"content":"        } else if (responseDateTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":932,"author":{"gitId":"-"},"content":"            click(manualResponseVisibleTimeButton);"},{"lineNumber":933,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":934,"author":{"gitId":"-"},"content":"            click(customResponseVisibleTimeButton);"},{"lineNumber":935,"author":{"gitId":"-"},"content":"            setResponseDateTime(responseDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":936,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":937,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":938,"author":{"gitId":"-"},"content":""},{"lineNumber":939,"author":{"gitId":"-"},"content":"    private void setEmailSettings(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":940,"author":{"gitId":"-"},"content":"        showEmailSettings();"},{"lineNumber":941,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isOpeningEmailEnabled() !\u003d openingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":942,"author":{"gitId":"-"},"content":"            click(openingSessionEmailCheckbox);"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":944,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isClosingEmailEnabled() !\u003d closingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":945,"author":{"gitId":"-"},"content":"            click(closingSessionEmailCheckbox);"},{"lineNumber":946,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":947,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isPublishedEmailEnabled() !\u003d publishedSessionEmailCheckbox.isSelected()) {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"            click(publishedSessionEmailCheckbox);"},{"lineNumber":949,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":950,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":951,"author":{"gitId":"-"},"content":""},{"lineNumber":952,"author":{"gitId":"-"},"content":"    private void showVisibilitySettings() {"},{"lineNumber":953,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-visibility\"))) {"},{"lineNumber":954,"author":{"gitId":"-"},"content":"            click(changeVisibilityButton);"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":956,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":957,"author":{"gitId":"-"},"content":""},{"lineNumber":958,"author":{"gitId":"-"},"content":"    private void showEmailSettings() {"},{"lineNumber":959,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-email\"))) {"},{"lineNumber":960,"author":{"gitId":"-"},"content":"            click(changeEmailButton);"},{"lineNumber":961,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":962,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":963,"author":{"gitId":"-"},"content":""},{"lineNumber":964,"author":{"gitId":"-"},"content":"    private int getNumQuestions() {"},{"lineNumber":965,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.tagName(\"tm-question-edit-form\")).size();"},{"lineNumber":966,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":967,"author":{"gitId":"-"},"content":""},{"lineNumber":968,"author":{"gitId":"-"},"content":"    private WebElement getQuestionForm(int questionNum) {"},{"lineNumber":969,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.tagName(\"tm-question-edit-form\")).get(questionNum - 1);"},{"lineNumber":970,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":971,"author":{"gitId":"-"},"content":""},{"lineNumber":972,"author":{"gitId":"-"},"content":"    private FeedbackQuestionType getQuestionType(int questionNum) {"},{"lineNumber":973,"author":{"gitId":"-"},"content":"        String questionDetails \u003d getQuestionForm(questionNum).findElement(By.id(\"question-header\")).getText();"},{"lineNumber":974,"author":{"gitId":"-"},"content":"        String questionType \u003d questionDetails.split(\" \\\\d+ \")[1].trim();"},{"lineNumber":975,"author":{"gitId":"-"},"content":""},{"lineNumber":976,"author":{"gitId":"-"},"content":"        switch (questionType) {"},{"lineNumber":977,"author":{"gitId":"-"},"content":"        case \"Essay question\":"},{"lineNumber":978,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.TEXT;"},{"lineNumber":979,"author":{"gitId":"-"},"content":"        case \"Multiple-Choice (single answer) question\":"},{"lineNumber":980,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.MCQ;"},{"lineNumber":981,"author":{"gitId":"-"},"content":"        case \"Multiple-choice (multiple answers) question\":"},{"lineNumber":982,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.MSQ;"},{"lineNumber":983,"author":{"gitId":"-"},"content":"        case \"Numerical Scale Question\":"},{"lineNumber":984,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.NUMSCALE;"},{"lineNumber":985,"author":{"gitId":"-"},"content":"        case \"Distribute points (among options) question\":"},{"lineNumber":986,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.CONSTSUM_OPTIONS;"},{"lineNumber":987,"author":{"gitId":"-"},"content":"        case \"Distribute points (among recipients) question\":"},{"lineNumber":988,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.CONSTSUM_RECIPIENTS;"},{"lineNumber":989,"author":{"gitId":"-"},"content":"        case \"Team contribution question\":"},{"lineNumber":990,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.CONTRIB;"},{"lineNumber":991,"author":{"gitId":"-"},"content":"        case \"Rubric question\":"},{"lineNumber":992,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.RUBRIC;"},{"lineNumber":993,"author":{"gitId":"-"},"content":"        case \"Rank (options) question\":"},{"lineNumber":994,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.RANK_OPTIONS;"},{"lineNumber":995,"author":{"gitId":"-"},"content":"        case \"Rank (recipients) question\":"},{"lineNumber":996,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.RANK_RECIPIENTS;"},{"lineNumber":997,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":998,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Unknown FeedbackQuestionType\");"},{"lineNumber":999,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1001,"author":{"gitId":"-"},"content":""},{"lineNumber":1002,"author":{"gitId":"-"},"content":"    private int getQuestionNumber(int questionNum) {"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        return Integer.parseInt(getQuestionForm(questionNum).findElement(By.id(\"question-number\")).getText());"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1005,"author":{"gitId":"-"},"content":""},{"lineNumber":1006,"author":{"gitId":"-"},"content":"    private String getQuestionBrief(int questionNum) {"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"question-brief\")).getAttribute(\"value\");"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1009,"author":{"gitId":"-"},"content":""},{"lineNumber":1010,"author":{"gitId":"-"},"content":"    private String getQuestionDescription(int questionNum) {"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"        WebElement editor \u003d waitForElementPresence(By.cssSelector(\"#question-form-\" + questionNum + \" editor\"));"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"        return getEditorRichText(editor);"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1014,"author":{"gitId":"-"},"content":""},{"lineNumber":1015,"author":{"gitId":"-"},"content":"    private String getFeedbackGiver(int questionNum) {"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"        String feedbackPath \u003d getFeedbackPath(questionNum);"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"        if (CUSTOM_FEEDBACK_PATH_OPTION.equals(feedbackPath)) {"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"            return getSelectedDropdownOptionText(getQuestionForm(questionNum)"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"                    .findElement(By.tagName(\"tm-feedback-path-panel\"))"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"                    .findElement(By.id(\"giver-type\")));"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"        return feedbackPath.split(FEEDBACK_PATH_SEPARATOR)[0];"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1024,"author":{"gitId":"-"},"content":""},{"lineNumber":1025,"author":{"gitId":"-"},"content":"    private String getFeedbackReceiver(int questionNum) {"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"        String feedbackPath \u003d getFeedbackPath(questionNum);"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"        if (CUSTOM_FEEDBACK_PATH_OPTION.equals(feedbackPath)) {"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"            return getSelectedDropdownOptionText(getQuestionForm(questionNum)"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"                    .findElement(By.tagName(\"tm-feedback-path-panel\"))"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"                    .findElement(By.id(\"receiver-type\")));"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"        return feedbackPath.split(FEEDBACK_PATH_SEPARATOR)[1];"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1034,"author":{"gitId":"-"},"content":""},{"lineNumber":1035,"author":{"gitId":"-"},"content":"    private String getFeedbackPath(int questionNum) {"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"        WebElement feedbackPathPanel \u003d getQuestionForm(questionNum).findElement(By.tagName(\"tm-feedback-path-panel\"));"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"        return feedbackPathPanel.findElement(By.cssSelector(\"#btn-feedback-path span\")).getText();"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1039,"author":{"gitId":"-"},"content":""},{"lineNumber":1040,"author":{"gitId":"-"},"content":"    private void setQuestionBrief(int questionNum, String newBrief) {"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"        fillTextBox(getQuestionForm(questionNum).findElement(By.id(\"question-brief\")), newBrief);"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1043,"author":{"gitId":"-"},"content":""},{"lineNumber":1044,"author":{"gitId":"-"},"content":"    private void setQuestionDescription(int questionNum, String newDescription) {"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"        WebElement editor \u003d waitForElementPresence(By.cssSelector(\"#question-form-\" + questionNum + \" editor\"));"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(editor, newDescription);"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1048,"author":{"gitId":"-"},"content":""},{"lineNumber":1049,"author":{"gitId":"-"},"content":"    private void setFeedbackPath(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"        FeedbackParticipantType newGiver \u003d feedbackQuestion.getGiverType();"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"        FeedbackParticipantType newRecipient \u003d feedbackQuestion.getRecipientType();"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"        String feedbackPath \u003d getFeedbackPath(questionNum);"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum).findElement(By.tagName(\"tm-feedback-path-panel\"));"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"        if (!CUSTOM_FEEDBACK_PATH_OPTION.equals(feedbackPath)) {"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"            selectFeedbackPathDropdownOption(questionNum, CUSTOM_FEEDBACK_PATH_OPTION + \"...\");"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"        // Set to type STUDENT first to adjust NumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"giver-type\")),"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"                getDisplayGiverName(FeedbackParticipantType.STUDENTS));"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"receiver-type\")),"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"                getDisplayRecipientName(FeedbackParticipantType.STUDENTS));"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        if (feedbackQuestion.getNumberOfEntitiesToGiveFeedbackTo() \u003d\u003d Const.MAX_POSSIBLE_RECIPIENTS) {"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"            click(questionForm.findElement(By.id(\"unlimited-recipients\")));"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"            click(questionForm.findElement(By.id(\"custom-recipients\")));"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"            fillTextBox(questionForm.findElement(By.id(\"custom-recipients-number\")),"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"                    Integer.toString(feedbackQuestion.getNumberOfEntitiesToGiveFeedbackTo()));"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1069,"author":{"gitId":"-"},"content":""},{"lineNumber":1070,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"giver-type\")), getDisplayGiverName(newGiver));"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"receiver-type\")),"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"                getDisplayRecipientName(newRecipient));"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1074,"author":{"gitId":"-"},"content":""},{"lineNumber":1075,"author":{"gitId":"-"},"content":"    private void selectFeedbackPathDropdownOption(int questionNum, String text) {"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"        WebElement feedbackPathPanel \u003d questionForm.findElement(By.tagName(\"tm-feedback-path-panel\"));"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"        click(feedbackPathPanel.findElement(By.id(\"btn-feedback-path\")));"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"        WebElement dropdown \u003d feedbackPathPanel.findElement(By.id(\"feedback-path-dropdown\"));"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d dropdown.findElements(By.className(\"dropdown-item\"));"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"            if (option.getText().equals(text)) {"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"                click(option);"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1088,"author":{"gitId":"-"},"content":""},{"lineNumber":1089,"author":{"gitId":"-"},"content":"    private void clickEditQuestionButton(int questionNum) {"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"        click(getQuestionForm(questionNum).findElement(By.id(\"btn-edit-question\")));"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1092,"author":{"gitId":"-"},"content":""},{"lineNumber":1093,"author":{"gitId":"-"},"content":"    private void clickSaveQuestionButton(int questionNum) {"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"        WebElement saveButton \u003d getQuestionForm(questionNum).findElement(By.id(\"btn-save-question\"));"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"        click(saveButton);"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(1000);"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1098,"author":{"gitId":"-"},"content":""},{"lineNumber":1099,"author":{"gitId":"-"},"content":"    private void setQuestionVisibility(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"        WebElement visibilityPanel \u003d questionForm.findElement(By.tagName(\"tm-visibility-panel\"));"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"        String visibility \u003d visibilityPanel.findElement(By.cssSelector(\"#btn-question-visibility span\")).getText();"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"        if (!CUSTOM_VISIBILITY_OPTION.equals(visibility)) {"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"            selectVisibilityDropdownOption(questionNum, CUSTOM_VISIBILITY_OPTION + \"...\");"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1106,"author":{"gitId":"-"},"content":""},{"lineNumber":1107,"author":{"gitId":"-"},"content":"        FeedbackParticipantType giver \u003d feedbackQuestion.getGiverType();"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"        FeedbackParticipantType receiver \u003d feedbackQuestion.getRecipientType();"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"        WebElement customVisibilityTable \u003d visibilityPanel.findElement(By.id(\"custom-visibility-table\"));"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"        selectVisibilityBoxes(customVisibilityTable, giver, receiver, feedbackQuestion.getShowResponsesTo(), 1);"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"        selectVisibilityBoxes(customVisibilityTable, giver, receiver, feedbackQuestion.getShowGiverNameTo(), 2);"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"        selectVisibilityBoxes(customVisibilityTable, giver, receiver, feedbackQuestion.getShowRecipientNameTo(), 3);"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1114,"author":{"gitId":"-"},"content":""},{"lineNumber":1115,"author":{"gitId":"-"},"content":"    private void selectVisibilityBoxes(WebElement table, FeedbackParticipantType giver,"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"                                       FeedbackParticipantType receiver, List\u003cFeedbackParticipantType\u003e participants,"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"                                       int colNum) {"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e possibleTypes \u003d new ArrayList\u003c\u003e(Arrays.asList(FeedbackParticipantType.RECEIVER,"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.RECEIVER_TEAM_MEMBERS,"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"        if (!giver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"        if (!receiver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"        if (receiver.equals(FeedbackParticipantType.NONE)"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.SELF)"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.OWN_TEAM)) {"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER);"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1133,"author":{"gitId":"-"},"content":""},{"lineNumber":1134,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"        int index \u003d colNum - 1;"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType participant : participants) {"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"            markOptionAsSelected(rows.get(possibleTypes.indexOf(participant)).findElements(By.tagName(\"input\")).get(index));"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1140,"author":{"gitId":"-"},"content":""},{"lineNumber":1141,"author":{"gitId":"-"},"content":"    private void selectVisibilityDropdownOption(int questionNum, String text) {"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"        WebElement visibilityPanel \u003d questionForm.findElement(By.tagName(\"tm-visibility-panel\"));"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"        click(visibilityPanel.findElement(By.id(\"btn-question-visibility\")));"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"        WebElement dropdown \u003d visibilityPanel.findElement(By.id(\"question-visibility-dropdown\"));"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d dropdown.findElements(By.className(\"dropdown-item\"));"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"            if (option.getText().equals(text)) {"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"                click(option);"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1154,"author":{"gitId":"-"},"content":""},{"lineNumber":1155,"author":{"gitId":"-"},"content":"    private void clickAndWaitForNewQuestion(WebElement button) {"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"        int newQuestionNum \u003d getNumQuestions() + 1;"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"        click(button);"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"question-form-\" + newQuestionNum));"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1160,"author":{"gitId":"-"},"content":""},{"lineNumber":1161,"author":{"gitId":"-"},"content":"    private void addNewQuestion(int optionNumber) {"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"        click(addNewQuestionButton);"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"        WebElement newQuestionDropdown \u003d waitForElementPresence(By.id(\"new-question-dropdown\"));"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"        WebElement optionButton \u003d newQuestionDropdown.findElements(By.tagName(\"button\")).get(optionNumber - 1);"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"        if (optionNumber \u003d\u003d 1) {"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"            click(optionButton);"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"            clickAndWaitForNewQuestion(optionButton);"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1171,"author":{"gitId":"-"},"content":""},{"lineNumber":1172,"author":{"gitId":"-"},"content":"    private void clickSaveNewQuestionButton() {"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"        WebElement saveButton \u003d browser.driver.findElement(By.id(\"btn-save-new\"));"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"        click(saveButton);"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"        waitForElementStaleness(saveButton);"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1177,"author":{"gitId":"-"},"content":""},{"lineNumber":1178,"author":{"gitId":"-"},"content":"    private WebElement getRecommendedTextLengthField(int questionNum) {"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum)"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"                .findElement(By.tagName(\"tm-text-question-edit-details-form\"))"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"                .findElement(By.id(\"recommended-length\"));"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1183,"author":{"gitId":"-"},"content":""},{"lineNumber":1184,"author":{"gitId":"-"},"content":"    private WebElement getGenerateOptionsCheckbox(int questionNum) {"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"generate-checkbox\"));"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1187,"author":{"gitId":"-"},"content":""},{"lineNumber":1188,"author":{"gitId":"-"},"content":"    private WebElement getGenerateOptionsDropdown(int questionNum) {"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"generate-dropdown\"));"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1191,"author":{"gitId":"-"},"content":""},{"lineNumber":1192,"author":{"gitId":"-"},"content":"    private WebElement getWeightCheckbox(int questionNum) {"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"weights-checkbox\"));"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1195,"author":{"gitId":"-"},"content":""},{"lineNumber":1196,"author":{"gitId":"-"},"content":"    private WebElement getOtherOptionCheckbox(int questionNum) {"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"other-checkbox\"));"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1199,"author":{"gitId":"-"},"content":""},{"lineNumber":1200,"author":{"gitId":"-"},"content":"    private String getGeneratedOptionString(FeedbackParticipantType type) {"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"        switch (type) {"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"        case STUDENTS:"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"        case STUDENTS_IN_SAME_SECTION:"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"            return \"students\";"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"        case STUDENTS_EXCLUDING_SELF:"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"            return \"students (excluding self)\";"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"        case TEAMS:"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"        case TEAMS_IN_SAME_SECTION:"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"            return \"teams\";"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"        case TEAMS_EXCLUDING_SELF:"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"            return \"teams (excluding own team)\";"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"        case INSTRUCTORS:"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"            return \"instructors\";"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"            return \"unknown\";"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1218,"author":{"gitId":"-"},"content":""},{"lineNumber":1219,"author":{"gitId":"-"},"content":"    private String getDoubleString(Double value) {"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"        return value % 1 \u003d\u003d 0 ? Integer.toString(value.intValue()) : Double.toString(value);"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1222,"author":{"gitId":"-"},"content":""},{"lineNumber":1223,"author":{"gitId":"-"},"content":"    private WebElement getOptionsSection(int questionNum) {"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"options-section\"));"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1226,"author":{"gitId":"-"},"content":""},{"lineNumber":1227,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getOptionInputs(int questionNum) {"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"        WebElement optionsSection \u003d getOptionsSection(questionNum);"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"        return optionsSection.findElements(By.cssSelector(\"input[type\u003d\u0027text\u0027]\"));"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1231,"author":{"gitId":"-"},"content":""},{"lineNumber":1232,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getOptionWeightInputs(int questionNum) {"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"        WebElement optionsSection \u003d getOptionsSection(questionNum);"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"        return optionsSection.findElements(By.cssSelector(\"tm-weight-field input\"));"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1236,"author":{"gitId":"-"},"content":""},{"lineNumber":1237,"author":{"gitId":"-"},"content":"    private WebElement getOtherWeightInput(int questionNum) {"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"other-weight\"));"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1240,"author":{"gitId":"-"},"content":""},{"lineNumber":1241,"author":{"gitId":"-"},"content":"    private boolean verifyGeneratedOptions(int questionNum, FeedbackParticipantType participantType) {"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"        if (!participantType.equals(FeedbackParticipantType.NONE)) {"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"            assertTrue(getGenerateOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"            assertEquals(getSelectedDropdownOptionText(getGenerateOptionsDropdown(questionNum)),"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"                    getGeneratedOptionString(participantType));"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"        assertFalse(getGenerateOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1251,"author":{"gitId":"-"},"content":""},{"lineNumber":1252,"author":{"gitId":"-"},"content":"    private void verifyOptions(int questionNum, List\u003cString\u003e options) {"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c options.size(); i++) {"},{"lineNumber":1255,"author":{"gitId":"-"},"content":"            assertEquals(options.get(i), inputs.get(i).getAttribute(\"value\"));"},{"lineNumber":1256,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1258,"author":{"gitId":"-"},"content":""},{"lineNumber":1259,"author":{"gitId":"-"},"content":"    private void verifyOptionWeights(int questionNum, boolean hasWeights, List\u003cDouble\u003e weights) {"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"        if (hasWeights) {"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"            assertTrue(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e weightInputs \u003d getOptionWeightInputs(questionNum);"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c weights.size(); i++) {"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"                assertEquals(getDoubleString(weights.get(i)), weightInputs.get(i).getAttribute(\"value\"));"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"            assertFalse(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1270,"author":{"gitId":"-"},"content":""},{"lineNumber":1271,"author":{"gitId":"-"},"content":"    private void verifyOtherOption(int questionNum, boolean hasOther, Double weight) {"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"        if (hasOther) {"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"            assertTrue(getOtherOptionCheckbox(questionNum).isSelected());"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"            if (weight \u003e 0) {"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"                String otherWeight \u003d getOtherWeightInput(questionNum).getAttribute(\"value\");"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"                assertEquals(getDoubleString(weight), otherWeight);"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"            assertFalse(getOtherOptionCheckbox(questionNum).isSelected());"},{"lineNumber":1280,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1282,"author":{"gitId":"-"},"content":""},{"lineNumber":1283,"author":{"gitId":"-"},"content":"    private void inputMcqDetails(int questionNum, FeedbackMcqQuestionDetails questionDetails) {"},{"lineNumber":1284,"author":{"gitId":"-"},"content":"        if (inputGenerateOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1287,"author":{"gitId":"-"},"content":""},{"lineNumber":1288,"author":{"gitId":"-"},"content":"        inputOptions(questionNum, questionDetails.getMcqChoices());"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"        inputOptionWeights(questionNum, questionDetails.isHasAssignedWeights(), questionDetails.getMcqWeights());"},{"lineNumber":1290,"author":{"gitId":"-"},"content":"        inputOtherChoice(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMcqOtherWeight());"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1292,"author":{"gitId":"-"},"content":""},{"lineNumber":1293,"author":{"gitId":"-"},"content":"    private boolean inputGenerateOptions(int questionNum, FeedbackParticipantType participantType) {"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"        if (!participantType.equals(FeedbackParticipantType.NONE)) {"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getGenerateOptionsCheckbox(questionNum));"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(getGenerateOptionsDropdown(questionNum),"},{"lineNumber":1297,"author":{"gitId":"-"},"content":"                    getGeneratedOptionString(participantType));"},{"lineNumber":1298,"author":{"gitId":"-"},"content":"            clickSaveQuestionButton(questionNum);"},{"lineNumber":1299,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"        markOptionAsUnselected(getGenerateOptionsCheckbox(questionNum));"},{"lineNumber":1302,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1304,"author":{"gitId":"-"},"content":""},{"lineNumber":1305,"author":{"gitId":"-"},"content":"    private void inputOptions(int questionNum, List\u003cString\u003e options) {"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1307,"author":{"gitId":"-"},"content":"        int numInputsNeeded \u003d options.size() - inputs.size();"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"        if (numInputsNeeded \u003e 0) {"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numInputsNeeded; i++) {"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"                click(getQuestionForm(questionNum).findElement(By.id(\"btn-add-option\")));"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1312,"author":{"gitId":"-"},"content":"            inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1314,"author":{"gitId":"-"},"content":"        if (numInputsNeeded \u003c 0) {"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c -numInputsNeeded; i++) {"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"                click(getOptionsSection(questionNum).findElement(By.tagName(\"button\")));"},{"lineNumber":1317,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"            inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1320,"author":{"gitId":"-"},"content":""},{"lineNumber":1321,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c options.size(); i++) {"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"            fillTextBox(inputs.get(i), options.get(i));"},{"lineNumber":1323,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1325,"author":{"gitId":"-"},"content":""},{"lineNumber":1326,"author":{"gitId":"-"},"content":"    private void inputOptionWeights(int questionNum, boolean hasWeights, List\u003cDouble\u003e weights) {"},{"lineNumber":1327,"author":{"gitId":"-"},"content":"        if (hasWeights) {"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getWeightCheckbox(questionNum));"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e weightInputs \u003d getOptionWeightInputs(questionNum);"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c weights.size(); i++) {"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"                fillTextBox(weightInputs.get(i), getDoubleString(weights.get(i)));"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getWeightCheckbox(questionNum));"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1336,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1337,"author":{"gitId":"-"},"content":""},{"lineNumber":1338,"author":{"gitId":"-"},"content":"    private void inputOtherChoice(int questionNum, boolean hasOther, Double otherWeight) {"},{"lineNumber":1339,"author":{"gitId":"-"},"content":"        if (hasOther) {"},{"lineNumber":1340,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getOtherOptionCheckbox(questionNum));"},{"lineNumber":1341,"author":{"gitId":"-"},"content":"            if (otherWeight \u003e 0) {"},{"lineNumber":1342,"author":{"gitId":"-"},"content":"                fillTextBox(getOtherWeightInput(questionNum), getDoubleString(otherWeight));"},{"lineNumber":1343,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1344,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getOtherOptionCheckbox(questionNum));"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1348,"author":{"gitId":"-"},"content":""},{"lineNumber":1349,"author":{"gitId":"-"},"content":"    private WebElement getMaxOptionsCheckbox(int questionNum) {"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"max-options-checkbox\"));"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1352,"author":{"gitId":"-"},"content":""},{"lineNumber":1353,"author":{"gitId":"-"},"content":"    private WebElement getMaxOptionsInput(int questionNum) {"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"max-options\"));"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1356,"author":{"gitId":"-"},"content":""},{"lineNumber":1357,"author":{"gitId":"-"},"content":"    private WebElement getMinOptionsCheckbox(int questionNum) {"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"min-options-checkbox\"));"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1360,"author":{"gitId":"-"},"content":""},{"lineNumber":1361,"author":{"gitId":"-"},"content":"    private WebElement getMinOptionsInput(int questionNum) {"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"min-options\"));"},{"lineNumber":1363,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1364,"author":{"gitId":"-"},"content":""},{"lineNumber":1365,"author":{"gitId":"-"},"content":"    private void verifyMaxOptions(int questionNum, int maxOptions) {"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"        if (maxOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1367,"author":{"gitId":"-"},"content":"            assertFalse(getMaxOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1368,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1369,"author":{"gitId":"-"},"content":"            assertTrue(getMaxOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"            assertEquals(getMaxOptionsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"                    Integer.toString(maxOptions));"},{"lineNumber":1372,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1374,"author":{"gitId":"-"},"content":""},{"lineNumber":1375,"author":{"gitId":"-"},"content":"    private void verifyMinOptions(int questionNum, int minOptions) {"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"        if (minOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"            assertFalse(getMinOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1378,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"            assertTrue(getMinOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1380,"author":{"gitId":"-"},"content":"            assertEquals(getMinOptionsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":1381,"author":{"gitId":"-"},"content":"                    Integer.toString(minOptions));"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1383,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1384,"author":{"gitId":"-"},"content":""},{"lineNumber":1385,"author":{"gitId":"-"},"content":"    private void inputMsqDetails(int questionNum, FeedbackMsqQuestionDetails questionDetails) {"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"        if (inputGenerateOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":1388,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1389,"author":{"gitId":"-"},"content":""},{"lineNumber":1390,"author":{"gitId":"-"},"content":"        inputOptions(questionNum, questionDetails.getMsqChoices());"},{"lineNumber":1391,"author":{"gitId":"-"},"content":"        inputOptionWeights(questionNum, questionDetails.isHasAssignedWeights(), questionDetails.getMsqWeights());"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"        inputOtherChoice(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMsqOtherWeight());"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"        inputMaxOptions(questionNum, questionDetails.getMaxSelectableChoices());"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"        inputMinOptions(questionNum, questionDetails.getMinSelectableChoices());"},{"lineNumber":1395,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1396,"author":{"gitId":"-"},"content":""},{"lineNumber":1397,"author":{"gitId":"-"},"content":"    private void inputMaxOptions(int questionNum, int maxOptions) {"},{"lineNumber":1398,"author":{"gitId":"-"},"content":"        if (maxOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getMaxOptionsCheckbox(questionNum));"},{"lineNumber":1400,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1401,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getMaxOptionsCheckbox(questionNum));"},{"lineNumber":1402,"author":{"gitId":"-"},"content":"            fillTextBox(getMaxOptionsInput(questionNum), Integer.toString(maxOptions));"},{"lineNumber":1403,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1404,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1405,"author":{"gitId":"-"},"content":""},{"lineNumber":1406,"author":{"gitId":"-"},"content":"    private void inputMinOptions(int questionNum, int minOptions) {"},{"lineNumber":1407,"author":{"gitId":"-"},"content":"        if (minOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1408,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getMinOptionsCheckbox(questionNum));"},{"lineNumber":1409,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1410,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getMinOptionsCheckbox(questionNum));"},{"lineNumber":1411,"author":{"gitId":"-"},"content":"            fillTextBox(getMinOptionsInput(questionNum), Integer.toString(minOptions));"},{"lineNumber":1412,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1413,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1414,"author":{"gitId":"-"},"content":""},{"lineNumber":1415,"author":{"gitId":"-"},"content":"    private WebElement getMinNumscaleInput(int questionNum) {"},{"lineNumber":1416,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"min-value\"));"},{"lineNumber":1417,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1418,"author":{"gitId":"-"},"content":""},{"lineNumber":1419,"author":{"gitId":"-"},"content":"    private WebElement getMaxNumscaleInput(int questionNum) {"},{"lineNumber":1420,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"max-value\"));"},{"lineNumber":1421,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1422,"author":{"gitId":"-"},"content":""},{"lineNumber":1423,"author":{"gitId":"-"},"content":"    private WebElement getNumScaleIncrementInput(int questionNum) {"},{"lineNumber":1424,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"increment-value\"));"},{"lineNumber":1425,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1426,"author":{"gitId":"-"},"content":""},{"lineNumber":1427,"author":{"gitId":"-"},"content":"    private void inputNumScaleDetails(int questionNum, FeedbackNumericalScaleQuestionDetails questionDetails) {"},{"lineNumber":1428,"author":{"gitId":"-"},"content":"        inputNumScaleValue(getMinNumscaleInput(questionNum), Integer.toString(questionDetails.getMinScale()));"},{"lineNumber":1429,"author":{"gitId":"-"},"content":"        inputNumScaleValue(getNumScaleIncrementInput(questionNum), getDoubleString(questionDetails.getStep()));"},{"lineNumber":1430,"author":{"gitId":"-"},"content":"        inputNumScaleValue(getMaxNumscaleInput(questionNum), Integer.toString(questionDetails.getMaxScale()));"},{"lineNumber":1431,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1432,"author":{"gitId":"-"},"content":""},{"lineNumber":1433,"author":{"gitId":"-"},"content":"    private void inputNumScaleValue(WebElement input, String value) {"},{"lineNumber":1434,"author":{"gitId":"-"},"content":"        input.clear();"},{"lineNumber":1435,"author":{"gitId":"-"},"content":"        input.sendKeys(value);"},{"lineNumber":1436,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1437,"author":{"gitId":"-"},"content":""},{"lineNumber":1438,"author":{"gitId":"-"},"content":"    private WebElement getConstSumTotalPointsRadioBtn(int questionNum) {"},{"lineNumber":1439,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"total-points-radio\"));"},{"lineNumber":1440,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1441,"author":{"gitId":"-"},"content":""},{"lineNumber":1442,"author":{"gitId":"-"},"content":"    private WebElement getConstSumTotalPointsInput(int questionNum) {"},{"lineNumber":1443,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"total-points\"));"},{"lineNumber":1444,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1445,"author":{"gitId":"-"},"content":""},{"lineNumber":1446,"author":{"gitId":"-"},"content":"    private WebElement getConstSumPerOptionPointsRadioBtn(int questionNum) {"},{"lineNumber":1447,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"per-option-points-radio\"));"},{"lineNumber":1448,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1449,"author":{"gitId":"-"},"content":""},{"lineNumber":1450,"author":{"gitId":"-"},"content":"    private WebElement getConstSumPerOptionPointsInput(int questionNum) {"},{"lineNumber":1451,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"per-option-points\"));"},{"lineNumber":1452,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1453,"author":{"gitId":"-"},"content":""},{"lineNumber":1454,"author":{"gitId":"-"},"content":"    private WebElement getConstSumUnevenDistributionCheckbox(int questionNum) {"},{"lineNumber":1455,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"uneven-distribution-checkbox\"));"},{"lineNumber":1456,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1457,"author":{"gitId":"-"},"content":""},{"lineNumber":1458,"author":{"gitId":"-"},"content":"    private WebElement getConstSumUnevenDistributionDropdown(int questionNum) {"},{"lineNumber":1459,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"uneven-distribution-dropdown\"));"},{"lineNumber":1460,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1461,"author":{"gitId":"-"},"content":""},{"lineNumber":1462,"author":{"gitId":"-"},"content":"    private void inputConstSumDetails(int questionNum, FeedbackConstantSumQuestionDetails questionDetails) {"},{"lineNumber":1463,"author":{"gitId":"-"},"content":"        if (!questionDetails.isDistributeToRecipients()) {"},{"lineNumber":1464,"author":{"gitId":"-"},"content":"            inputOptions(questionNum, questionDetails.getConstSumOptions());"},{"lineNumber":1465,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1466,"author":{"gitId":"-"},"content":"        if (questionDetails.isPointsPerOption()) {"},{"lineNumber":1467,"author":{"gitId":"-"},"content":"            click(getConstSumPerOptionPointsRadioBtn(questionNum));"},{"lineNumber":1468,"author":{"gitId":"-"},"content":"            fillTextBox(getConstSumPerOptionPointsInput(questionNum), Integer.toString(questionDetails.getPoints()));"},{"lineNumber":1469,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1470,"author":{"gitId":"-"},"content":"            click(getConstSumTotalPointsRadioBtn(questionNum));"},{"lineNumber":1471,"author":{"gitId":"-"},"content":"            fillTextBox(getConstSumTotalPointsInput(questionNum), Integer.toString(questionDetails.getPoints()));"},{"lineNumber":1472,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1473,"author":{"gitId":"-"},"content":"        String distributeFor \u003d questionDetails.getDistributePointsFor();"},{"lineNumber":1474,"author":{"gitId":"-"},"content":"        if (questionDetails.isForceUnevenDistribution()) {"},{"lineNumber":1475,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getConstSumUnevenDistributionCheckbox(questionNum));"},{"lineNumber":1476,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(getConstSumUnevenDistributionDropdown(questionNum),"},{"lineNumber":1477,"author":{"gitId":"-"},"content":"                    \"All options\".equals(distributeFor) ? \"Every option\" : distributeFor);"},{"lineNumber":1478,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1479,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getConstSumUnevenDistributionCheckbox(questionNum));"},{"lineNumber":1480,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1481,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1482,"author":{"gitId":"-"},"content":""},{"lineNumber":1483,"author":{"gitId":"-"},"content":"    private WebElement getAllowNotSureContributionCheckbox(int questionNum) {"},{"lineNumber":1484,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"not-sure-checkbox\"));"},{"lineNumber":1485,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1486,"author":{"gitId":"-"},"content":""},{"lineNumber":1487,"author":{"gitId":"-"},"content":"    private void inputContributionDetails(int questionNum, FeedbackContributionQuestionDetails questionDetails) {"},{"lineNumber":1488,"author":{"gitId":"-"},"content":"        if (questionDetails.isNotSureAllowed()) {"},{"lineNumber":1489,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getAllowNotSureContributionCheckbox(questionNum));"},{"lineNumber":1490,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1491,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getAllowNotSureContributionCheckbox(questionNum));"},{"lineNumber":1492,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1493,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1494,"author":{"gitId":"-"},"content":""},{"lineNumber":1495,"author":{"gitId":"-"},"content":"    private WebElement getRubricRow(int questionNum, int rowNumber) {"},{"lineNumber":1496,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElements(By.cssSelector(\"tm-rubric-question-edit-details-form tr\"))"},{"lineNumber":1497,"author":{"gitId":"-"},"content":"                .get(rowNumber - 1);"},{"lineNumber":1498,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1499,"author":{"gitId":"-"},"content":""},{"lineNumber":1500,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getRubricChoiceInputs(int questionNum) {"},{"lineNumber":1501,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, 1).findElements(By.tagName(\"input\"));"},{"lineNumber":1502,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1503,"author":{"gitId":"-"},"content":""},{"lineNumber":1504,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getRubricTextareas(int questionNum, int rowNum) {"},{"lineNumber":1505,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, rowNum).findElements(By.tagName(\"textarea\"));"},{"lineNumber":1506,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1507,"author":{"gitId":"-"},"content":""},{"lineNumber":1508,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getRubricWeights(int questionNum, int rowNum) {"},{"lineNumber":1509,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, rowNum).findElements(By.tagName(\"input\"));"},{"lineNumber":1510,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1511,"author":{"gitId":"-"},"content":""},{"lineNumber":1512,"author":{"gitId":"-"},"content":"    private WebElement getRubricDeleteSubQnBtn(int questionNum, int rowNum) {"},{"lineNumber":1513,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, rowNum).findElement(By.id(\"btn-delete-subquestion\"));"},{"lineNumber":1514,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1515,"author":{"gitId":"-"},"content":""},{"lineNumber":1516,"author":{"gitId":"-"},"content":"    private WebElement getRubricDeleteChoiceBtn(int questionNum, int colNum) {"},{"lineNumber":1517,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, getNumRubricRows(questionNum)).findElements(By.id(\"btn-delete-choice\")).get(colNum);"},{"lineNumber":1518,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1519,"author":{"gitId":"-"},"content":""},{"lineNumber":1520,"author":{"gitId":"-"},"content":"    private int getNumRubricRows(int questionNum) {"},{"lineNumber":1521,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElements(By.cssSelector(\"#rubric-table tr\")).size();"},{"lineNumber":1522,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1523,"author":{"gitId":"-"},"content":""},{"lineNumber":1524,"author":{"gitId":"-"},"content":"    private int getNumRubricCols(int questionNum) {"},{"lineNumber":1525,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, 1).findElements(By.tagName(\"td\")).size();"},{"lineNumber":1526,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1527,"author":{"gitId":"-"},"content":""},{"lineNumber":1528,"author":{"gitId":"-"},"content":"    private void inputRubricDetails(int questionNum, FeedbackRubricQuestionDetails questionDetails) {"},{"lineNumber":1529,"author":{"gitId":"-"},"content":"        int numSubQn \u003d questionDetails.getNumOfRubricSubQuestions();"},{"lineNumber":1530,"author":{"gitId":"-"},"content":"        int numChoices \u003d questionDetails.getNumOfRubricChoices();"},{"lineNumber":1531,"author":{"gitId":"-"},"content":"        adjustNumRubricFields(questionNum, numSubQn, numChoices);"},{"lineNumber":1532,"author":{"gitId":"-"},"content":""},{"lineNumber":1533,"author":{"gitId":"-"},"content":"        List\u003cString\u003e choices \u003d questionDetails.getRubricChoices();"},{"lineNumber":1534,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numChoices; i++) {"},{"lineNumber":1535,"author":{"gitId":"-"},"content":"            fillTextBox(getRubricChoiceInputs(questionNum).get(i), choices.get(i));"},{"lineNumber":1536,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1537,"author":{"gitId":"-"},"content":""},{"lineNumber":1538,"author":{"gitId":"-"},"content":"        List\u003cString\u003e subQuestions \u003d questionDetails.getRubricSubQuestions();"},{"lineNumber":1539,"author":{"gitId":"-"},"content":"        List\u003cList\u003cString\u003e\u003e descriptions \u003d questionDetails.getRubricDescriptions();"},{"lineNumber":1540,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":1541,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e textAreas \u003d getRubricTextareas(questionNum, i + 2);"},{"lineNumber":1542,"author":{"gitId":"-"},"content":"            fillTextBox(textAreas.get(0), subQuestions.get(i));"},{"lineNumber":1543,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":1544,"author":{"gitId":"-"},"content":"                fillTextBox(textAreas.get(j + 1), descriptions.get(i).get(j));"},{"lineNumber":1545,"author":{"gitId":"-"},"content":"                if (descriptions.get(i).get(j).isEmpty()) {"},{"lineNumber":1546,"author":{"gitId":"-"},"content":"                    // using clear does not send the required event"},{"lineNumber":1547,"author":{"gitId":"-"},"content":"                    // as a workaround, after clearing without event, enter a random character and delete it"},{"lineNumber":1548,"author":{"gitId":"-"},"content":"                    textAreas.get(j + 1).sendKeys(\"a\");"},{"lineNumber":1549,"author":{"gitId":"-"},"content":"                    textAreas.get(j + 1).sendKeys(Keys.BACK_SPACE);"},{"lineNumber":1550,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1551,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1552,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1553,"author":{"gitId":"-"},"content":""},{"lineNumber":1554,"author":{"gitId":"-"},"content":"        if (questionDetails.isHasAssignedWeights()) {"},{"lineNumber":1555,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getWeightCheckbox(questionNum));"},{"lineNumber":1556,"author":{"gitId":"-"},"content":"            List\u003cList\u003cDouble\u003e\u003e weights \u003d questionDetails.getRubricWeights();"},{"lineNumber":1557,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":1558,"author":{"gitId":"-"},"content":"                for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":1559,"author":{"gitId":"-"},"content":"                    fillTextBox(getRubricWeights(questionNum, i + 2).get(j), getDoubleString(weights.get(i).get(j)));"},{"lineNumber":1560,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1561,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1562,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1563,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getWeightCheckbox(questionNum));"},{"lineNumber":1564,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1565,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1566,"author":{"gitId":"-"},"content":""},{"lineNumber":1567,"author":{"gitId":"-"},"content":"    private void adjustNumRubricFields(int questionNum, int numSubQn, int numChoices) {"},{"lineNumber":1568,"author":{"gitId":"-"},"content":"        int numSubQnsNeeded \u003d numSubQn - (getNumRubricRows(questionNum) - 2);"},{"lineNumber":1569,"author":{"gitId":"-"},"content":"        int numChoicesNeeded \u003d numChoices - (getNumRubricCols(questionNum) - 1);"},{"lineNumber":1570,"author":{"gitId":"-"},"content":"        if (numSubQnsNeeded \u003e 0) {"},{"lineNumber":1571,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numSubQnsNeeded; i++) {"},{"lineNumber":1572,"author":{"gitId":"-"},"content":"                click(getQuestionForm(questionNum).findElement(By.id(\"btn-add-row\")));"},{"lineNumber":1573,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1574,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1575,"author":{"gitId":"-"},"content":"        if (numChoicesNeeded \u003e 0) {"},{"lineNumber":1576,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numChoicesNeeded; i++) {"},{"lineNumber":1577,"author":{"gitId":"-"},"content":"                click(getQuestionForm(questionNum).findElement(By.id(\"btn-add-col\")));"},{"lineNumber":1578,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1579,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1580,"author":{"gitId":"-"},"content":"        if (numSubQnsNeeded \u003c 0) {"},{"lineNumber":1581,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c -numSubQnsNeeded; i++) {"},{"lineNumber":1582,"author":{"gitId":"-"},"content":"                click(getRubricDeleteSubQnBtn(questionNum, 2));"},{"lineNumber":1583,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1584,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1585,"author":{"gitId":"-"},"content":"        if (numChoicesNeeded \u003c 0) {"},{"lineNumber":1586,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c -numChoicesNeeded; i++) {"},{"lineNumber":1587,"author":{"gitId":"-"},"content":"                clickAndConfirm(getRubricDeleteChoiceBtn(questionNum, 2));"},{"lineNumber":1588,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1589,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1590,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1591,"author":{"gitId":"-"},"content":""},{"lineNumber":1592,"author":{"gitId":"-"},"content":"    private WebElement getAllowDuplicateRankCheckbox(int questionNum) {"},{"lineNumber":1593,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"duplicate-rank-checkbox\"));"},{"lineNumber":1594,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1595,"author":{"gitId":"-"},"content":""},{"lineNumber":1596,"author":{"gitId":"-"},"content":"    private void inputRankDetails(int questionNum, FeedbackRankQuestionDetails questionDetails) {"},{"lineNumber":1597,"author":{"gitId":"-"},"content":"        if (questionDetails instanceof FeedbackRankOptionsQuestionDetails) {"},{"lineNumber":1598,"author":{"gitId":"-"},"content":"            FeedbackRankOptionsQuestionDetails optionDetails \u003d (FeedbackRankOptionsQuestionDetails) questionDetails;"},{"lineNumber":1599,"author":{"gitId":"-"},"content":"            inputOptions(questionNum, optionDetails.getOptions());"},{"lineNumber":1600,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1601,"author":{"gitId":"-"},"content":"        if (questionDetails.isAreDuplicatesAllowed()) {"},{"lineNumber":1602,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getAllowDuplicateRankCheckbox(questionNum));"},{"lineNumber":1603,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1604,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getAllowDuplicateRankCheckbox(questionNum));"},{"lineNumber":1605,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1606,"author":{"gitId":"-"},"content":"        inputMaxOptions(questionNum, questionDetails.getMaxOptionsToBeRanked());"},{"lineNumber":1607,"author":{"gitId":"-"},"content":"        inputMinOptions(questionNum, questionDetails.getMinOptionsToBeRanked());"},{"lineNumber":1608,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1609,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":12,"-":1597}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorFeedbackSessionsPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the \"Sessions\" page for Instructors."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class InstructorFeedbackSessionsPage extends AppPage {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-add-session\")"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private WebElement addSessionButton;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-type\")"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private WebElement sessionTypeDropdown;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"add-course-id\")"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private WebElement courseIdDropdown;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"add-session-name\")"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private WebElement sessionNameTextBox;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"instructions\")"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private WebElement instructionsEditor;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-date\")"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private WebElement startDateBox;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-time\")"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private WebElement startTimeDropdown;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-date\")"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private WebElement endDateBox;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-time\")"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private WebElement endTimeDropdown;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"grace-period\")"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private WebElement gracePeriodDropdown;"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-visibility\")"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private WebElement changeVisibilityButton;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-custom\")"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private WebElement customSessionVisibleTimeButton;"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-date\")"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityDateBox;"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-time\")"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityTimeDropdown;"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-at-open\")"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private WebElement openSessionVisibleTimeButton;"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-custom\")"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private WebElement customResponseVisibleTimeButton;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-date\")"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityDateBox;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-time\")"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityTimeDropdown;"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-immediately\")"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private WebElement immediateResponseVisibleTimeButton;"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-manually\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private WebElement manualResponseVisibleTimeButton;"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-email\")"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private WebElement changeEmailButton;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-opening\")"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private WebElement openingSessionEmailCheckbox;"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-closing\")"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private WebElement closingSessionEmailCheckbox;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-published\")"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private WebElement publishedSessionEmailCheckbox;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-create-session\")"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private WebElement createSessionButton;"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"sessions-table\")"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private WebElement sessionsTable;"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"deleted-sessions-heading\")"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private WebElement deleteTableHeading;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-restore-all\")"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private WebElement restoreAllButton;"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-delete-all\")"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private WebElement deleteAllButton;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"deleted-sessions-table\")"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private WebElement deletedSessionsTable;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public InstructorFeedbackSessionsPage(Browser browser) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Feedback Sessions\");"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void verifySessionsTable(FeedbackSessionAttributes[] sessions) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][4];"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getSessionDetails(sessions[i]);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(sessionsTable, expectedValues);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String[] expectedValues \u003d getSessionDetails(session);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        verifyTableRowValues(sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId), expectedValues);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void verifySoftDeletedSessionsTable(FeedbackSessionAttributes[] sessions) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][4];"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getSoftDeletedSessionDetails(sessions[i]);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(deletedSessionsTable, expectedValues);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void verifyNumSoftDeleted(int expected) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(getNumSoftDeletedFeedbackSessions(), expected);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void verifyResponseRate(FeedbackSessionAttributes session, String expectedResponseRate) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedResponseRate, getResponseRate(rowId));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void addFeedbackSession(FeedbackSessionAttributes newSession, boolean isUsingTemplate) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        clickAddSessionButton();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.cssSelector(\"#instructions iframe\"));"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (isUsingTemplate) {"},{"lineNumber":160,"author":{"gitId":"Nicolascwy"},"content":"            selectDropdownOptionByText(sessionTypeDropdown,"},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"                    \"session using template: team peer feedback (percentage-based)\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(sessionTypeDropdown, \"session with my own questions\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(courseIdDropdown, newSession.getCourseId());"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        fillTextBox(sessionNameTextBox, newSession.getFeedbackSessionName());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        setInstructions(newSession.getInstructions());"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        setSessionStartDateTime(newSession.getStartTime(), newSession.getTimeZone());"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        setSessionEndDateTime(newSession.getEndTime(), newSession.getTimeZone());"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        selectGracePeriod(newSession.getGracePeriodMinutes());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        setVisibilitySettings(newSession);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        setEmailSettings(newSession);"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        clickCreateSessionButton();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        waitForSessionEditPage();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void addCopyOfSession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                                 String newSessionName) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        clickAddSessionButton();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-copy-session\")));"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        selectCourseToCopy(copyToCourse.getId());"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        fillTextBox(browser.driver.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        selectSessionToCopy(sessionToCopy.getCourseId(), sessionToCopy.getFeedbackSessionName());"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        clickConfirmCopySessionButton();"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        waitForSessionEditPage();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void copySession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                            String newSessionName) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String copyFromCourse \u003d sessionToCopy.getCourseId();"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String sessionName \u003d sessionToCopy.getFeedbackSessionName();"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d clickCopyButtonInTable(copyFromCourse, sessionName);"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        selectCourseToCopyToInModal(copyFsModal, copyToCourse.getId());"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void moveToRecycleBin(FeedbackSessionAttributes sessionToDelete) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToDelete.getCourseId(), sessionToDelete.getFeedbackSessionName());"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        clickAndConfirm(browser.driver.findElement(By.id(\"btn-soft-delete-\" + rowId)));"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void restoreSession(FeedbackSessionAttributes sessionToRestore) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        int rowId \u003d getSoftDeletedFeedbackSessionRowId(sessionToRestore.getCourseId(),"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                sessionToRestore.getFeedbackSessionName());"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-restore-\" + rowId)));"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void deleteSession(FeedbackSessionAttributes sessionToRestore) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        int rowId \u003d getSoftDeletedFeedbackSessionRowId(sessionToRestore.getCourseId(),"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                sessionToRestore.getFeedbackSessionName());"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        clickAndConfirm(browser.driver.findElement(By.id(\"btn-delete-\" + rowId)));"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void restoreAllSessions() {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        click(restoreAllButton);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void deleteAllSessions() {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        clickAndConfirm(deleteAllButton);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void showDeleteTable() {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (!isElementVisible(By.id(\"sort-deleted-course-id\"))) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            click(deleteTableHeading);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            waitUntilAnimationFinish();"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToSelectedStudent(FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-remind-\" + rowId)));"},{"lineNumber":246,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-selected-\" + rowId)));"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":249,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":251,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToNonSubmitters(FeedbackSessionAttributes session) {"},{"lineNumber":252,"author":{"gitId":"Nicolascwy"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":253,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":254,"author":{"gitId":"Nicolascwy"},"content":"        click(browser.driver.findElement(By.id(\"btn-remind-\" + rowId)));"},{"lineNumber":255,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-all-\" + rowId)));"},{"lineNumber":256,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public void resendResultsLink(FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-resend-\" + rowId)));"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-resend-results\")));"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void publishSessionResults(FeedbackSessionAttributes sessionToPublish) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToPublish.getCourseId(), sessionToPublish.getFeedbackSessionName());"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-publish-\" + rowId)));"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void unpublishSessionResults(FeedbackSessionAttributes sessionToPublish) {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToPublish.getCourseId(), sessionToPublish.getFeedbackSessionName());"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-unpublish-\" + rowId)));"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"    public void downloadResults(FeedbackSessionAttributes session) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-download-\" + rowId)));"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void sortBySessionsName() {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"sort-session-name\")));"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public void sortByCourseId() {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"sort-course-id\")));"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    private String[] getSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[4];"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getCourseId();"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        details[1] \u003d session.getFeedbackSessionName();"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        if (session.isClosed()) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Closed\";"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        } else if (session.isVisible() \u0026\u0026 (session.isOpened() || session.isInGracePeriod())) {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Open\";"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Awaiting\";"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        details[3] \u003d session.isPublished() ? \"Published\" : \"Not Published\";"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    private String[] getSoftDeletedSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[4];"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getCourseId();"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        details[1] \u003d session.getFeedbackSessionName();"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        details[2] \u003d getSimpleDateString(session.getCreatedTime(), session.getTimeZone());"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        details[3] \u003d getSimpleDateString(session.getDeletedTime(), session.getTimeZone());"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, String timeZone) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"EE, dd MMM, yyyy\");"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    private String getSimpleDateString(Instant instant, String timeZone) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"dd MMM, yyyy\");"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    private String getTimeString(Instant instant, String timeZone) {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        ZonedDateTime dateTime \u003d instant.atZone(ZoneId.of(timeZone));"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        if (dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0) {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            return \"23:59H\";"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"HH:00\") + \"H\";"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    private String getResponseRate(int rowId) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        By showButtonId \u003d By.id(\"show-response-rate-\" + rowId);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        if (isElementPresent(showButtonId)) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            click(showButtonId);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"response-rate-\" + rowId)).getText();"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    private void clickAddSessionButton() {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        click(addSessionButton);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"    private void setInstructions(String newInstructions) {"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(instructionsEditor, newInstructions);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"    private void setSessionStartDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        setDateTime(startDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                startTimeDropdown, startInstant, timeZone);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"    private void setSessionEndDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        setDateTime(endDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                endTimeDropdown, endInstant, timeZone);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"    private void setVisibilityDateTime(Instant startInstant, String timeZone) {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        setDateTime(sessionVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                sessionVisibilityTimeDropdown, startInstant, timeZone);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"    private void setResponseDateTime(Instant endInstant, String timeZone) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        setDateTime(responseVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                responseVisibilityTimeDropdown, endInstant, timeZone);"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"    private void setDateTime(WebElement dateBox, WebElement timeBox, Instant startInstant, String timeZone) {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        fillTextBox(dateBox, getDateString(startInstant, timeZone));"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(timeBox.findElement(By.tagName(\"select\")), getTimeString(startInstant, timeZone));"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"    private void selectGracePeriod(long gracePeriodMinutes) {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(gracePeriodDropdown, gracePeriodMinutes + \" min\");"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"    private void setVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        showVisibilitySettings();"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"        setSessionVisibilitySettings(newFeedbackSession);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        setResponseVisibilitySettings(newFeedbackSession);"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"    private void setSessionVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        Instant sessionDateTime \u003d newFeedbackSession.getSessionVisibleFromTime();"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        if (sessionDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            click(openSessionVisibleTimeButton);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            click(customSessionVisibleTimeButton);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            setVisibilityDateTime(sessionDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"    private void setResponseVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        Instant responseDateTime \u003d newFeedbackSession.getResultsVisibleFromTime();"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        if (responseDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            click(immediateResponseVisibleTimeButton);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        } else if (responseDateTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            click(manualResponseVisibleTimeButton);"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            click(customResponseVisibleTimeButton);"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            setResponseDateTime(responseDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"    private void setEmailSettings(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        showEmailSettings();"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isOpeningEmailEnabled() !\u003d openingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            click(openingSessionEmailCheckbox);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isClosingEmailEnabled() !\u003d closingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            click(closingSessionEmailCheckbox);"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isPublishedEmailEnabled() !\u003d publishedSessionEmailCheckbox.isSelected()) {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            click(publishedSessionEmailCheckbox);"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"    private void showVisibilitySettings() {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-visibility\"))) {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            click(changeVisibilityButton);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    private void showEmailSettings() {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-email\"))) {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            click(changeEmailButton);"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"    private void clickCreateSessionButton() {"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        click(createSessionButton);"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"    private void selectCourseToCopy(String courseToCopyId) {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        WebElement courseIdDropdown \u003d waitForElementPresence(By.id(\"copy-course-id\"));"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(courseIdDropdown, courseToCopyId);"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"    private void selectSessionToCopy(String copyFromCourse, String sessionNameToCopy) {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        WebElement table \u003d browser.driver.findElement(By.id(\"copy-selection-table\"));"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.tagName(\"td\"));"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":453,"author":{"gitId":"-"},"content":"            if (cells.get(1).getText().equals(copyFromCourse) \u0026\u0026 cells.get(2).getText().equals(sessionNameToCopy)) {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":456,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":459,"author":{"gitId":"-"},"content":""},{"lineNumber":460,"author":{"gitId":"-"},"content":"    private void clickConfirmCopySessionButton() {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy\")));"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"    private WebElement clickCopyButtonInTable(String courseId, String sessionName) {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(courseId, sessionName);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-copy-\" + rowId)));"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"    private void selectCourseToCopyToInModal(WebElement copyFsModal, String courseToCopyId) {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            if (courseId.equals(courseToCopyId)) {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":477,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"    private void selectStudentToEmail(String studentEmail) {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        WebElement studentList \u003d waitForElementPresence(By.id(\"student-list-table\"));"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d studentList.findElements(By.tagName(\"tr\"));"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.cssSelector(\"td\"));"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            if (cells.get(4).getText().equals(studentEmail)) {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":492,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"    private int getFeedbackSessionRowId(String courseId, String sessionName) {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        int i \u003d 0;"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        while (i \u003c getNumFeedbackSessions()) {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"            if (getFeedbackSessionCourseId(i).equals(courseId)"},{"lineNumber":501,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getFeedbackSessionName(i).equals(sessionName)) {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":503,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":504,"author":{"gitId":"-"},"content":"            i++;"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"    private int getSoftDeletedFeedbackSessionRowId(String courseId, String sessionName) {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        int i \u003d 0;"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"        while (i \u003c getNumSoftDeletedFeedbackSessions()) {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"            if (getSoftDeletedFeedbackSessionCourseId(i).equals(courseId)"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getSoftDeletedFeedbackSessionName(i).equals(sessionName)) {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":517,"author":{"gitId":"-"},"content":"            i++;"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"    private int getNumFeedbackSessions() {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        return sessionsTable.findElements(By.cssSelector(\"tbody tr\")).size();"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"    private int getNumSoftDeletedFeedbackSessions() {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        if (!isElementPresent(By.id(\"deleted-sessions-table\"))) {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        return deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).size();"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionCourseId(int rowId) {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        WebElement row \u003d sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(0).getText();"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"    private String getSoftDeletedFeedbackSessionCourseId(int rowId) {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        WebElement row \u003d deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(0).getText();"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionName(int rowId) {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        WebElement row \u003d sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(1).getText();"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"    private String getSoftDeletedFeedbackSessionName(int rowId) {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        WebElement row \u003d deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(1).getText();"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"    private void waitForSessionEditPage() {"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"btn-fs-edit\"));"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":556,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":544,"Nicolascwy":12}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorHomePage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.openqa.selenium.NoSuchElementException;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the instructor home page."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class InstructorHomePage extends AppPage {"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public InstructorHomePage(Browser browser) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Home\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void verifyCourseTabDetails(int courseTabIndex, CourseAttributes course, FeedbackSessionAttributes[] sessions) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String expectedDetails \u003d \"[\" + course.getId() + \"]: \" + course.getName();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(getCourseDetails(courseTabIndex), expectedDetails);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][5];"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getExpectedSessionDetails(sessions[i]);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(getSessionsTable(courseTabIndex), expectedValues);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(int courseTabIndex, int sessionIndex, FeedbackSessionAttributes session) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String[] expectedValues \u003d getExpectedSessionDetails(session);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        WebElement sessionRow \u003d getSessionsTable(courseTabIndex).findElements(By.cssSelector(\"tbody tr\")).get(sessionIndex);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        verifyTableRowValues(sessionRow, expectedValues);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void verifyNumCourses(int expectedNum) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(getNumCourses(), expectedNum);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void verifyResponseRate(int courseTabIndex, int sessionIndex, String expectedResponseRate) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(expectedResponseRate, getResponseRate(courseTabIndex, sessionIndex));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void copySession(int courseTabIndex, int sessionIndex, CourseAttributes copyToCourse, String newSessionName) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d clickCopyButtonInTable(courseTabIndex, sessionIndex);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        selectCourseToCopyToInModal(copyFsModal, copyToCourse.getId());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void publishSessionResults(int courseTabIndex, int sessionIndex) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e publishButtons \u003d browser.driver.findElements(By.id(\"btn-publish-\" + sessionIndex));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        clickAndConfirm(publishButtons.get(publishButtons.size() - 1));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void unpublishSessionResults(int courseTabIndex, int sessionIndex) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e unpublishButtons \u003d browser.driver.findElements(By.id(\"btn-unpublish-\" + sessionIndex));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        clickAndConfirm(unpublishButtons.get(unpublishButtons.size() - 1));"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToSelectedStudent(int courseTabIndex, int sessionIndex, StudentAttributes student) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-remind-\" + sessionIndex)));"},{"lineNumber":79,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-selected-\" + sessionIndex)));"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"    public void sendReminderEmailToNonSubmitters(int courseTabIndex, int sessionIndex) {"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"        click(courseTab.findElement(By.id(\"btn-remind-\" + sessionIndex)));"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-remind-all-\" + sessionIndex)));"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"        click(waitForElementPresence(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void resendResultsLink(int courseTabIndex, int sessionIndex, StudentAttributes student) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-resend-\" + sessionIndex)));"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.getEmail());"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-resend-results\")));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void downloadResults(int courseTabIndex, int sessionIndex) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-results-\" + sessionIndex)));"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-download-\" + sessionIndex)));"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void deleteSession(int courseTabIndex, int sessionIndex) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        clickAndConfirm(courseTab.findElement(By.id(\"btn-soft-delete-\" + sessionIndex)));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void archiveCourse(int courseTabIndex) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-course\")));"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        clickAndConfirm(courseTab.findElement(By.id(\"btn-archive-course\")));"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void deleteCourse(int courseTabIndex) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        click(courseTab.findElement(By.id(\"btn-course\")));"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        clickAndConfirm(courseTab.findElement(By.id(\"btn-delete-course\")));"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void sortCoursesById() {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"sort-course-id\")));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void sortCoursesByName() {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"sort-course-name\")));"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void sortCoursesByCreationDate() {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"sort-course-date\")));"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private int getNumCourses() {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.id(\"course-tab\")).size();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private WebElement getCourseTab(int courseTabIndex) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.id(\"course-tab\")).get(courseTabIndex);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private String getCourseDetails(int courseTabIndex) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        WebElement courseTab \u003d getCourseTab(courseTabIndex);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return courseTab.findElement(By.id(\"course-details\")).getText();"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private WebElement getSessionsTable(int courseTabIndex) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return getCourseTab(courseTabIndex).findElement(By.id(\"sessions-table\"));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, String timeZone) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return getDisplayedDateTime(instant, timeZone, \"d MMM h:mm a\");"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private String[] getExpectedSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[5];"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getFeedbackSessionName();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        details[1] \u003d getDateString(session.getStartTime(), session.getTimeZone());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        details[2] \u003d getDateString(session.getEndTime(), session.getTimeZone());"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (session.isClosed()) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            details[3] \u003d \"Closed\";"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } else if (session.isVisible() \u0026\u0026 (session.isOpened() || session.isInGracePeriod())) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            details[3] \u003d \"Open\";"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            details[3] \u003d \"Awaiting\";"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        details[4] \u003d session.isPublished() ? \"Published\" : \"Not Published\";"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private String getResponseRate(int courseTabIndex, int sessionIndex) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        WebElement showButton \u003d null;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            showButton \u003d getCourseTab(courseTabIndex).findElement(By.id(\"show-response-rate-\" + sessionIndex));"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            // continue"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (showButton !\u003d null) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            click(showButton);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"response-rate-\" + sessionIndex)).getText();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private WebElement clickCopyButtonInTable(int courseTabIndex, int sessionIndex) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        click(getCourseTab(courseTabIndex).findElement(By.id(\"btn-copy-\" + sessionIndex)));"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private void selectCourseToCopyToInModal(WebElement copyFsModal, String courseToCopyId) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (courseId.equals(courseToCopyId)) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private void selectStudentToEmail(String studentEmail) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        WebElement studentList \u003d waitForElementPresence(By.id(\"student-list-table\"));"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d studentList.findElements(By.tagName(\"tr\"));"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.cssSelector(\"td\"));"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (cells.get(4).getText().equals(studentEmail)) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":213,"Nicolascwy":9}},{"path":"src/main/java/teammates/common/datatransfer/DataBundle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.DeadlineExtensionAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Holds a bundle of *Attributes data transfer objects."},{"lineNumber":21,"author":{"gitId":"-"},"content":" *"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis class is mainly used for serializing JSON strings."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"// CHECKSTYLE.OFF:JavadocVariable each field represents different entity types"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DataBundle {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Map\u003cString, AccountAttributes\u003e accounts \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Map\u003cString, AccountRequestAttributes\u003e accountRequests \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Map\u003cString, CourseAttributes\u003e courses \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Map\u003cString, DeadlineExtensionAttributes\u003e deadlineExtensions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Map\u003cString, InstructorAttributes\u003e instructors \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Map\u003cString, StudentAttributes\u003e students \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackSessionAttributes\u003e feedbackSessions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackQuestionAttributes\u003e feedbackQuestions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackResponseAttributes\u003e feedbackResponses \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Map\u003cString, FeedbackResponseCommentAttributes\u003e feedbackResponseComments \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Map\u003cString, StudentProfileAttributes\u003e profiles \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"    public Map\u003cString, NotificationAttributes\u003e notifications \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":2,"-":36}},{"path":"src/main/java/teammates/common/datatransfer/NotificationStyle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":" * Represents the different notification banner background colors."},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" * It mainly refers to the available colors in bootstrap stylesheet."},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":" * Reference: https://getbootstrap.com/docs/4.5/utilities/colors/#background-color"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"public enum NotificationStyle {"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"     * Blue background."},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"    PRIMARY,"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"     * Grey background."},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"    SECONDARY,"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"     * Green background."},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    SUCCESS,"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"     * Red background."},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    DANGER,"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"     * Orange background."},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"    WARNING,"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"     * Cyan background."},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"    INFO,"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"     * White background."},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"    LIGHT,"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"     * Black background."},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"    DARK"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":49}},{"path":"src/main/java/teammates/common/datatransfer/NotificationTargetUser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents the type of target user groups for notifications."},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public enum NotificationTargetUser {"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     * Target users are students only."},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    STUDENT,"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"     * Target users are instructors only."},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    INSTRUCTOR,"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * Target users are both instructors and students."},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    GENERAL"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":22}},{"path":"src/main/java/teammates/common/datatransfer/UserInfoCookie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents user credential info to be persisted within cookies."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserInfoCookie {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private String userId;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private String verificationCode;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"    private long expiryTime;"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserInfoCookie(String userId) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.userId \u003d userId;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.verificationCode \u003d StringHelper.generateSignature(userId);"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"        this.expiryTime \u003d Instant.now().plus(Const.COOKIE_VALIDITY_PERIOD).toEpochMilli();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Gets a {@link UserInfoCookie} object from cookie string."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static UserInfoCookie fromCookie(String cookie) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (cookie \u003d\u003d null) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            String decryptedCookie \u003d StringHelper.decrypt(cookie);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return JsonUtils.fromJson(decryptedCookie, UserInfoCookie.class);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (InvalidParametersException | JsonSyntaxException e) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getUserId() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userId;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserId(String userId) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userId \u003d userId;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getVerificationCode() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return verificationCode;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setVerificationCode(String verificationCode) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.verificationCode \u003d verificationCode;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"    public long getExpiryTime() {"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"        return expiryTime;"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"    public void setExpiryTime(long expiryTime) {"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"        this.expiryTime \u003d expiryTime;"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"     * Returns true if the object represents a valid user info and the object has not expired."},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isValid() {"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"        return StringHelper.isCorrectSignature(userId, verificationCode)"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"            \u0026\u0026 Instant.now().isBefore(Instant.ofEpochMilli(expiryTime));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":58,"Nicolascwy":17}},{"path":"src/main/java/teammates/common/datatransfer/attributes/FeedbackSessionAttributes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Supplier;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackSession;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The data transfer object for {@link FeedbackSession} entities."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FeedbackSessionAttributes extends EntityAttributes\u003cFeedbackSession\u003e {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private String feedbackSessionName;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private String courseId;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private String creatorEmail;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String instructions;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Instant createdTime;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Instant deletedTime;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Instant startTime;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Instant endTime;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Instant sessionVisibleFromTime;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Instant resultsVisibleFromTime;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private String timeZone;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Duration gracePeriod;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private boolean sentOpeningSoonEmail;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private boolean sentOpenEmail;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private boolean sentClosingEmail;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private boolean sentClosedEmail;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private boolean sentPublishedEmail;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private boolean isOpeningEmailEnabled;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private boolean isClosingEmailEnabled;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private boolean isPublishedEmailEnabled;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Map\u003cString, Instant\u003e studentDeadlines;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Map\u003cString, Instant\u003e instructorDeadlines;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private transient Supplier\u003cInstant\u003e deadlineSupplier;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes(String feedbackSessionName, String courseId) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.courseId \u003d courseId;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.instructions \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.createdTime \u003d Instant.now();"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.isOpeningEmailEnabled \u003d true;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.isClosingEmailEnabled \u003d true;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.isPublishedEmailEnabled \u003d true;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.studentDeadlines \u003d new HashMap\u003c\u003e();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.instructorDeadlines \u003d new HashMap\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.timeZone \u003d Const.DEFAULT_TIME_ZONE;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.gracePeriod \u003d Duration.ZERO;"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Gets the {@link FeedbackSessionAttributes} instance of the given {@link FeedbackSession}."},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static FeedbackSessionAttributes valueOf(FeedbackSession fs) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes feedbackSessionAttributes \u003d"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                new FeedbackSessionAttributes(fs.getFeedbackSessionName(), fs.getCourseId());"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.creatorEmail \u003d fs.getCreatorEmail();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (fs.getInstructions() !\u003d null) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes.instructions \u003d fs.getInstructions();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.createdTime \u003d fs.getCreatedTime();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.deletedTime \u003d fs.getDeletedTime();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.startTime \u003d fs.getStartTime();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.endTime \u003d fs.getEndTime();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sessionVisibleFromTime \u003d fs.getSessionVisibleFromTime();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.resultsVisibleFromTime \u003d fs.getResultsVisibleFromTime();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.timeZone \u003d fs.getTimeZone();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.gracePeriod \u003d Duration.ofMinutes(fs.getGracePeriod());"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentOpeningSoonEmail \u003d fs.isSentOpeningSoonEmail();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentOpenEmail \u003d fs.isSentOpenEmail();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentClosingEmail \u003d fs.isSentClosingEmail();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentClosedEmail \u003d fs.isSentClosedEmail();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.sentPublishedEmail \u003d fs.isSentPublishedEmail();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.isOpeningEmailEnabled \u003d fs.isOpeningEmailEnabled();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.isClosingEmailEnabled \u003d fs.isClosingEmailEnabled();"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        feedbackSessionAttributes.isPublishedEmailEnabled \u003d fs.isPublishedEmailEnabled();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (fs.getStudentDeadlines() !\u003d null) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes.studentDeadlines \u003d fs.getStudentDeadlines();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (fs.getInstructorDeadlines() !\u003d null) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes.instructorDeadlines \u003d fs.getInstructorDeadlines();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return feedbackSessionAttributes;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns a builder for {@link FeedbackSessionAttributes}."},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Builder builder(String feedbackSessionName, String courseId) {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new Builder(feedbackSessionName, courseId);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Gets a deep copy of this object."},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getCopy() {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return valueOf(toEntity());"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Creates a copy that uses the specific deadline for the given student."},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @param studentEmail The email address of the given student."},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @return The sanitized copy of this object for the given student."},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes sanitizeForStudent(String studentEmail) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes sanitizedCopy \u003d getCopy();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        sanitizedCopy.deadlineSupplier \u003d () -\u003e studentDeadlines.getOrDefault(studentEmail, endTime);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return sanitizedCopy;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Creates a copy that uses the specific deadline for the given instructor."},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @param instructorEmail The email address of the given instructor."},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @return The sanitized copy of this object for the given instructor."},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes sanitizeForInstructor(String instructorEmail) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes sanitizedCopy \u003d getCopy();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        sanitizedCopy.deadlineSupplier \u003d () -\u003e instructorDeadlines.getOrDefault(instructorEmail, endTime);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return sanitizedCopy;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String getCourseId() {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return courseId;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String getFeedbackSessionName() {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return feedbackSessionName;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Gets the instructions of the feedback session."},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public String getInstructionsString() {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (instructions \u003d\u003d null) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return SanitizationHelper.sanitizeForRichText(instructions);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public FeedbackSession toEntity() {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new FeedbackSession(feedbackSessionName, courseId, creatorEmail, instructions,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                createdTime, deletedTime, startTime, endTime, sessionVisibleFromTime, resultsVisibleFromTime,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                timeZone, getGracePeriodMinutes(),"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                sentOpeningSoonEmail, sentOpenEmail, sentClosingEmail, sentClosedEmail, sentPublishedEmail,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                isOpeningEmailEnabled, isClosingEmailEnabled, isPublishedEmailEnabled, studentDeadlines,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                instructorDeadlines);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getInvalidityInfo() {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // Check for null fields."},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField("},{"lineNumber":178,"author":{"gitId":"-"},"content":"                FieldValidator.FEEDBACK_SESSION_NAME_FIELD_NAME, feedbackSessionName), errors);"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField("},{"lineNumber":181,"author":{"gitId":"-"},"content":"                FieldValidator.COURSE_ID_FIELD_NAME, courseId), errors);"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"instructions to students\", instructions), errors);"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField("},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \"time for the session to become visible\", sessionVisibleFromTime), errors);"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"session time zone\", timeZone), errors);"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"creator\u0027s email\", creatorEmail), errors);"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"session creation time\", createdTime), errors);"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // Early return if any null fields"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (!errors.isEmpty()) {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return errors;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForFeedbackSessionName(feedbackSessionName), errors);"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForCourseId(courseId), errors);"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForEmail(creatorEmail), errors);"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForGracePeriod(gracePeriod), errors);"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"submission opening time\", startTime), errors);"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"submission closing time\", endTime), errors);"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField("},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \"time for the responses to become visible\", resultsVisibleFromTime), errors);"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // Early return if any null fields"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (!errors.isEmpty()) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return errors;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForSessionStartAndEnd(startTime, endTime), errors);"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForVisibilityStartAndSessionStart("},{"lineNumber":222,"author":{"gitId":"-"},"content":"                sessionVisibleFromTime, startTime), errors);"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Instant actualSessionVisibleFromTime \u003d sessionVisibleFromTime;"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (actualSessionVisibleFromTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            actualSessionVisibleFromTime \u003d startTime;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForVisibilityStartAndResultsPublish("},{"lineNumber":231,"author":{"gitId":"-"},"content":"                actualSessionVisibleFromTime, resultsVisibleFromTime), errors);"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForSessionEndAndExtendedDeadlines("},{"lineNumber":234,"author":{"gitId":"-"},"content":"                endTime, studentDeadlines), errors);"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForSessionEndAndExtendedDeadlines("},{"lineNumber":237,"author":{"gitId":"-"},"content":"                endTime, instructorDeadlines), errors);"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * Finds the point in time when the session is considered closed, excluding the grace period."},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThis varies depending on who is looking at the session:\u003c/p\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * \u003cul\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     *     \u003cli\u003eFor instructors looking at the session in full detail, this is when the end time is reached.\u003c/li\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     *     \u003cli\u003eFor participants, this is when the end time is reached, or their extension deadline, if it exists.\u003c/li\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public Instant getDeadline() {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        if (deadlineSupplier \u003d\u003d null) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return endTime;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        return deadlineSupplier.get();"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * Returns true if session\u0027s start time is opening from now to anytime before"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * now() + the specific number of {@param hours} supplied in the argument."},{"lineNumber":260,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public boolean isOpeningInHours(long hours) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        return startTime.isAfter(Instant.now())"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                \u0026\u0026 Instant.now().plus(Duration.ofHours(hours)).isAfter(startTime);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Returns true if the feedback session is closed after the number of specified hours."},{"lineNumber":268,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public boolean isClosedAfter(long hours) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return Instant.now().plus(Duration.ofHours(hours)).isAfter(getDeadline());"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * Returns true if the feedback session is closing (almost closed) after the number of specified hours."},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public boolean isClosingWithinTimeLimit(long hours) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        Duration difference \u003d Duration.between(now, getDeadline());"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        // If now and start are almost similar, it means the feedback session"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // is open for only 24 hours."},{"lineNumber":281,"author":{"gitId":"-"},"content":"        // Hence we do not send a reminder e-mail for feedback session."},{"lineNumber":282,"author":{"gitId":"-"},"content":"        return now.isAfter(startTime)"},{"lineNumber":283,"author":{"gitId":"-"},"content":"               \u0026\u0026 difference.compareTo(Duration.ofHours(hours - 1)) \u003e\u003d 0"},{"lineNumber":284,"author":{"gitId":"-"},"content":"               \u0026\u0026 difference.compareTo(Duration.ofHours(hours)) \u003c 0;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     * Returns true if the feedback session opens after the number of specified hours."},{"lineNumber":289,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public boolean isOpeningWithinTimeLimit(long hours) {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        Duration difference \u003d Duration.between(now, startTime);"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"        return now.isBefore(startTime)"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                \u0026\u0026 difference.compareTo(Duration.ofHours(hours - 1)) \u003e\u003d 0"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                \u0026\u0026 difference.compareTo(Duration.ofHours(hours)) \u003c 0;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * Checks if the session closed some time in the last one hour from calling this function."},{"lineNumber":301,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * @return true if the session closed within the past hour; false otherwise."},{"lineNumber":303,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public boolean isClosedWithinPastHour() {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        Instant given \u003d getDeadline().plus(gracePeriod);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        return given.isBefore(now) \u0026\u0026 Duration.between(given, now).compareTo(Duration.ofHours(1)) \u003c 0;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * Checks if the feedback session is closed."},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * This occurs when the current time is after both the deadline and the grace period."},{"lineNumber":313,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    public boolean isClosed() {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        return Instant.now().isAfter(getDeadline().plus(gracePeriod));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":319,"author":{"gitId":"-"},"content":"     * Checks if the feedback session is open."},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * This occurs when the current time is either the start time or later but before the deadline."},{"lineNumber":321,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    public boolean isOpened() {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        return (now.isAfter(startTime) || now.equals(startTime)) \u0026\u0026 now.isBefore(getDeadline());"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":328,"author":{"gitId":"-"},"content":"     * Checks if the feedback session is closed but still accepts responses."},{"lineNumber":329,"author":{"gitId":"-"},"content":"     * This occurs when the current time is either the deadline or later but still within the grace period."},{"lineNumber":330,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public boolean isInGracePeriod() {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        Instant deadline \u003d getDeadline();"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        Instant gracedEnd \u003d deadline.plus(gracePeriod);"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        return (now.isAfter(deadline) || now.equals(deadline)) \u0026\u0026 (now.isBefore(gracedEnd) || now.equals(gracedEnd));"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * Returns {@code true} has not opened before and is waiting to open,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * {@code false} if session has opened before."},{"lineNumber":341,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public boolean isWaitingToOpen() {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        return Instant.now().isBefore(startTime);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * Returns {@code true} if the session is visible; {@code false} if not."},{"lineNumber":348,"author":{"gitId":"-"},"content":"     *         Does not care if the session has started or not."},{"lineNumber":349,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    public boolean isVisible() {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        Instant visibleTime \u003d this.sessionVisibleFromTime;"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"        if (visibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            visibleTime \u003d this.startTime;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":356,"author":{"gitId":"-"},"content":""},{"lineNumber":357,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        return now.isAfter(visibleTime) || now.equals(visibleTime);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     * Returns {@code true} if the results of the feedback session is visible; {@code false} if not."},{"lineNumber":363,"author":{"gitId":"-"},"content":"     *         Does not care if the session has ended or not."},{"lineNumber":364,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    public boolean isPublished() {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        Instant publishTime \u003d this.resultsVisibleFromTime;"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"        if (publishTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            return isVisible();"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        if (publishTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        if (publishTime.equals(Const.TIME_REPRESENTS_NOW)) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        return now.isAfter(publishTime) || now.equals(publishTime);"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":383,"author":{"gitId":"-"},"content":"     * Returns true if the given email is the same as the creator email of the feedback session."},{"lineNumber":384,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    public boolean isCreator(String instructorEmail) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        return creatorEmail.equals(instructorEmail);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    public void sanitizeForSaving() {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        this.instructions \u003d SanitizationHelper.sanitizeForRichText(instructions);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        return \"FeedbackSessionAttributes [feedbackSessionName\u003d\""},{"lineNumber":397,"author":{"gitId":"-"},"content":"               + feedbackSessionName + \", courseId\u003d\" + courseId"},{"lineNumber":398,"author":{"gitId":"-"},"content":"               + \", creatorEmail\u003d\" + creatorEmail + \", instructions\u003d\" + instructions"},{"lineNumber":399,"author":{"gitId":"-"},"content":"               + \", createdTime\u003d\" + createdTime + \", deletedTime\u003d\" + deletedTime"},{"lineNumber":400,"author":{"gitId":"-"},"content":"               + \", startTime\u003d\" + startTime"},{"lineNumber":401,"author":{"gitId":"-"},"content":"               + \", endTime\u003d\" + endTime + \", sessionVisibleFromTime\u003d\""},{"lineNumber":402,"author":{"gitId":"-"},"content":"               + sessionVisibleFromTime + \", resultsVisibleFromTime\u003d\""},{"lineNumber":403,"author":{"gitId":"-"},"content":"               + resultsVisibleFromTime + \", timeZone\u003d\" + timeZone"},{"lineNumber":404,"author":{"gitId":"-"},"content":"               + \", gracePeriod\u003d\" + getGracePeriodMinutes() + \"min\""},{"lineNumber":405,"author":{"gitId":"-"},"content":"               + \", sentOpeningSoonEmail\u003d\" + sentOpeningSoonEmail"},{"lineNumber":406,"author":{"gitId":"-"},"content":"               + \", sentOpenEmail\u003d\" + sentOpenEmail"},{"lineNumber":407,"author":{"gitId":"-"},"content":"               + \", sentClosingEmail\u003d\" + sentClosingEmail"},{"lineNumber":408,"author":{"gitId":"-"},"content":"               + \", sentClosedEmail\u003d\" + sentClosedEmail"},{"lineNumber":409,"author":{"gitId":"-"},"content":"               + \", sentPublishedEmail\u003d\" + sentPublishedEmail"},{"lineNumber":410,"author":{"gitId":"-"},"content":"               + \", isOpeningEmailEnabled\u003d\" + isOpeningEmailEnabled"},{"lineNumber":411,"author":{"gitId":"-"},"content":"               + \", isClosingEmailEnabled\u003d\" + isClosingEmailEnabled"},{"lineNumber":412,"author":{"gitId":"-"},"content":"               + \", isPublishedEmailEnabled\u003d\" + isPublishedEmailEnabled"},{"lineNumber":413,"author":{"gitId":"-"},"content":"               + \", studentDeadlines\u003d\" + studentDeadlines"},{"lineNumber":414,"author":{"gitId":"-"},"content":"               + \", instructorDeadlines\u003d\" + instructorDeadlines"},{"lineNumber":415,"author":{"gitId":"-"},"content":"               + \"]\";"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        stringBuilder.append(this.feedbackSessionName).append(this.courseId)"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                .append(this.instructions).append(this.creatorEmail);"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        return stringBuilder.toString().hashCode();"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d null) {"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        } else if (this \u003d\u003d other) {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        } else if (this.getClass() \u003d\u003d other.getClass()) {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes otherFeedbackSession \u003d (FeedbackSessionAttributes) other;"},{"lineNumber":434,"author":{"gitId":"-"},"content":"            return Objects.equals(this.feedbackSessionName, otherFeedbackSession.feedbackSessionName)"},{"lineNumber":435,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.courseId, otherFeedbackSession.courseId)"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.instructions, otherFeedbackSession.instructions)"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.creatorEmail, otherFeedbackSession.creatorEmail);"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"    public void setFeedbackSessionName(String feedbackSessionName) {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        this.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public void setCourseId(String courseId) {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        this.courseId \u003d courseId;"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"    public String getCreatorEmail() {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        return creatorEmail;"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"    public void setCreatorEmail(String creatorEmail) {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        this.creatorEmail \u003d creatorEmail;"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"    public String getInstructions() {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        return instructions;"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"    public void setInstructions(String instructions) {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        this.instructions \u003d instructions;"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":466,"author":{"gitId":"-"},"content":""},{"lineNumber":467,"author":{"gitId":"-"},"content":"    public Instant getCreatedTime() {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        return createdTime;"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":470,"author":{"gitId":"-"},"content":""},{"lineNumber":471,"author":{"gitId":"-"},"content":"    public void setCreatedTime(Instant createdTime) {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        this.createdTime \u003d createdTime;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"    public Instant getDeletedTime() {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        return deletedTime;"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"    public void setDeletedTime(Instant deletedTime) {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        this.deletedTime \u003d deletedTime;"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"    public boolean isSessionDeleted() {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        return this.deletedTime !\u003d null;"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"    public Instant getStartTime() {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        return startTime;"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"    public void setStartTime(Instant startTime) {"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"-"},"content":"    public Instant getEndTime() {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        return endTime;"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"    public void setEndTime(Instant endTime) {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"    public Instant getSessionVisibleFromTime() {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        return sessionVisibleFromTime;"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"    public void setSessionVisibleFromTime(Instant sessionVisibleFromTime) {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        this.sessionVisibleFromTime \u003d sessionVisibleFromTime;"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"    public Instant getResultsVisibleFromTime() {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        return resultsVisibleFromTime;"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    public void setResultsVisibleFromTime(Instant resultsVisibleFromTime) {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        this.resultsVisibleFromTime \u003d resultsVisibleFromTime;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"    public String getTimeZone() {"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        return timeZone;"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"    public void setTimeZone(String timeZone) {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        this.timeZone \u003d timeZone;"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"    public long getGracePeriodMinutes() {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        return gracePeriod.toMinutes();"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"    public void setGracePeriodMinutes(long gracePeriodMinutes) {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        this.gracePeriod \u003d Duration.ofMinutes(gracePeriodMinutes);"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"-"},"content":"    public boolean isSentOpeningSoonEmail() {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        return sentOpeningSoonEmail;"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"    public void setSentOpeningSoonEmail(boolean sentOpeningSoonEmail) {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        this.sentOpeningSoonEmail \u003d sentOpeningSoonEmail;"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"-"},"content":"    public boolean isSentOpenEmail() {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        return sentOpenEmail;"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"    public void setSentOpenEmail(boolean sentOpenEmail) {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        this.sentOpenEmail \u003d sentOpenEmail;"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"    public boolean isSentClosingEmail() {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        return sentClosingEmail;"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"    public void setSentClosingEmail(boolean sentClosingEmail) {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        this.sentClosingEmail \u003d sentClosingEmail;"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"-"},"content":"    public boolean isSentClosedEmail() {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        return sentClosedEmail;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":562,"author":{"gitId":"-"},"content":""},{"lineNumber":563,"author":{"gitId":"-"},"content":"    public void setSentClosedEmail(boolean sentClosedEmail) {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        this.sentClosedEmail \u003d sentClosedEmail;"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"-"},"content":"    public boolean isSentPublishedEmail() {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        return sentPublishedEmail;"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"    public void setSentPublishedEmail(boolean sentPublishedEmail) {"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        this.sentPublishedEmail \u003d sentPublishedEmail;"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"    public boolean isOpeningEmailEnabled() {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        return isOpeningEmailEnabled;"},{"lineNumber":577,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":578,"author":{"gitId":"-"},"content":""},{"lineNumber":579,"author":{"gitId":"-"},"content":"    public void setOpeningEmailEnabled(boolean isOpeningEmailEnabled) {"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        this.isOpeningEmailEnabled \u003d isOpeningEmailEnabled;"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":582,"author":{"gitId":"-"},"content":""},{"lineNumber":583,"author":{"gitId":"-"},"content":"    public boolean isClosingEmailEnabled() {"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        return isClosingEmailEnabled;"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"    public void setClosingEmailEnabled(boolean isClosingEmailEnabled) {"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        this.isClosingEmailEnabled \u003d isClosingEmailEnabled;"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":590,"author":{"gitId":"-"},"content":""},{"lineNumber":591,"author":{"gitId":"-"},"content":"    public boolean isPublishedEmailEnabled() {"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        return isPublishedEmailEnabled;"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":594,"author":{"gitId":"-"},"content":""},{"lineNumber":595,"author":{"gitId":"-"},"content":"    public void setPublishedEmailEnabled(boolean isPublishedEmailEnabled) {"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        this.isPublishedEmailEnabled \u003d isPublishedEmailEnabled;"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"-"},"content":"    public Map\u003cString, Instant\u003e getStudentDeadlines() {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        return studentDeadlines;"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"    public void setStudentDeadlines(Map\u003cString, Instant\u003e studentDeadlines) {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        this.studentDeadlines \u003d studentDeadlines;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"    public Map\u003cString, Instant\u003e getInstructorDeadlines() {"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        return instructorDeadlines;"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"    public void setInstructorDeadlines(Map\u003cString, Instant\u003e instructorDeadlines) {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        this.instructorDeadlines \u003d instructorDeadlines;"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":616,"author":{"gitId":"-"},"content":"     * Updates with {@link UpdateOptions}."},{"lineNumber":617,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    public void update(UpdateOptions updateOptions) {"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        updateOptions.instructionsOption.ifPresent(s -\u003e instructions \u003d s);"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        updateOptions.startTimeOption.ifPresent(s -\u003e startTime \u003d s);"},{"lineNumber":621,"author":{"gitId":"-"},"content":"        updateOptions.endTimeOption.ifPresent(s -\u003e endTime \u003d s);"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        updateOptions.sessionVisibleFromTimeOption.ifPresent(s -\u003e sessionVisibleFromTime \u003d s);"},{"lineNumber":623,"author":{"gitId":"-"},"content":"        updateOptions.resultsVisibleFromTimeOption.ifPresent(s -\u003e resultsVisibleFromTime \u003d s);"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        updateOptions.timeZoneOption.ifPresent(s -\u003e timeZone \u003d s);"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        updateOptions.gracePeriodOption.ifPresent(s -\u003e gracePeriod \u003d s);"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        updateOptions.sentOpeningSoonEmailOption.ifPresent(s -\u003e sentOpeningSoonEmail \u003d s);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        updateOptions.sentOpenEmailOption.ifPresent(s -\u003e sentOpenEmail \u003d s);"},{"lineNumber":628,"author":{"gitId":"-"},"content":"        updateOptions.sentClosingEmailOption.ifPresent(s -\u003e sentClosingEmail \u003d s);"},{"lineNumber":629,"author":{"gitId":"-"},"content":"        updateOptions.sentClosedEmailOption.ifPresent(s -\u003e sentClosedEmail \u003d s);"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        updateOptions.sentPublishedEmailOption.ifPresent(s -\u003e sentPublishedEmail \u003d s);"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        updateOptions.isClosingEmailEnabledOption.ifPresent(s -\u003e isClosingEmailEnabled \u003d s);"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        updateOptions.isPublishedEmailEnabledOption.ifPresent(s -\u003e isPublishedEmailEnabled \u003d s);"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        updateOptions.studentDeadlinesOption.ifPresent(s -\u003e studentDeadlines \u003d s);"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        updateOptions.instructorDeadlinesOption.ifPresent(s -\u003e instructorDeadlines \u003d s);"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":638,"author":{"gitId":"-"},"content":"     * Returns a {@link UpdateOptions.Builder} to build {@link UpdateOptions} for a session."},{"lineNumber":639,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(String feedbackSessionName, String courseId) {"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        return new UpdateOptions.Builder(feedbackSessionName, courseId);"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":645,"author":{"gitId":"-"},"content":"     * Returns a {@link UpdateOptions.Builder} to build on top of {@code updateOptions}."},{"lineNumber":646,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":647,"author":{"gitId":"-"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(UpdateOptions updateOptions) {"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        return new UpdateOptions.Builder(updateOptions);"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":652,"author":{"gitId":"-"},"content":"     * A builder for {@link FeedbackSessionAttributes}."},{"lineNumber":653,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    public static class Builder extends BasicBuilder\u003cFeedbackSessionAttributes, Builder\u003e {"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        private final FeedbackSessionAttributes feedbackSessionAttributes;"},{"lineNumber":656,"author":{"gitId":"-"},"content":""},{"lineNumber":657,"author":{"gitId":"-"},"content":"        private Builder(String feedbackSessionName, String courseId) {"},{"lineNumber":658,"author":{"gitId":"-"},"content":"            super(new UpdateOptions(feedbackSessionName, courseId));"},{"lineNumber":659,"author":{"gitId":"-"},"content":"            thisBuilder \u003d this;"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes \u003d new FeedbackSessionAttributes(feedbackSessionName, courseId);"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":663,"author":{"gitId":"-"},"content":""},{"lineNumber":664,"author":{"gitId":"-"},"content":"        public Builder withCreatorEmail(String creatorEmail) {"},{"lineNumber":665,"author":{"gitId":"-"},"content":"            assert creatorEmail !\u003d null;"},{"lineNumber":666,"author":{"gitId":"-"},"content":""},{"lineNumber":667,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes.creatorEmail \u003d creatorEmail;"},{"lineNumber":668,"author":{"gitId":"-"},"content":""},{"lineNumber":669,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":670,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":671,"author":{"gitId":"-"},"content":""},{"lineNumber":672,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        public FeedbackSessionAttributes build() {"},{"lineNumber":674,"author":{"gitId":"-"},"content":"            feedbackSessionAttributes.update(updateOptions);"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"-"},"content":"            return feedbackSessionAttributes;"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":681,"author":{"gitId":"-"},"content":"     * Helper class to specific the fields to update in {@link FeedbackSessionAttributes}."},{"lineNumber":682,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":683,"author":{"gitId":"-"},"content":"    public static class UpdateOptions {"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        private String courseId;"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        private String feedbackSessionName;"},{"lineNumber":686,"author":{"gitId":"-"},"content":""},{"lineNumber":687,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e instructionsOption \u003d UpdateOption.empty();"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cInstant\u003e startTimeOption \u003d UpdateOption.empty();"},{"lineNumber":689,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cInstant\u003e endTimeOption \u003d UpdateOption.empty();"},{"lineNumber":690,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cInstant\u003e sessionVisibleFromTimeOption \u003d UpdateOption.empty();"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cInstant\u003e resultsVisibleFromTimeOption \u003d UpdateOption.empty();"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e timeZoneOption \u003d UpdateOption.empty();"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cDuration\u003e gracePeriodOption \u003d UpdateOption.empty();"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentOpeningSoonEmailOption \u003d UpdateOption.empty();"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentOpenEmailOption \u003d UpdateOption.empty();"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentClosingEmailOption \u003d UpdateOption.empty();"},{"lineNumber":697,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentClosedEmailOption \u003d UpdateOption.empty();"},{"lineNumber":698,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e sentPublishedEmailOption \u003d UpdateOption.empty();"},{"lineNumber":699,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e isClosingEmailEnabledOption \u003d UpdateOption.empty();"},{"lineNumber":700,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cBoolean\u003e isPublishedEmailEnabledOption \u003d UpdateOption.empty();"},{"lineNumber":701,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cMap\u003cString, Instant\u003e\u003e studentDeadlinesOption \u003d UpdateOption.empty();"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cMap\u003cString, Instant\u003e\u003e instructorDeadlinesOption \u003d UpdateOption.empty();"},{"lineNumber":703,"author":{"gitId":"-"},"content":""},{"lineNumber":704,"author":{"gitId":"-"},"content":"        private UpdateOptions(String feedbackSessionName, String courseId) {"},{"lineNumber":705,"author":{"gitId":"-"},"content":"            assert feedbackSessionName !\u003d null;"},{"lineNumber":706,"author":{"gitId":"-"},"content":"            assert courseId !\u003d null;"},{"lineNumber":707,"author":{"gitId":"-"},"content":""},{"lineNumber":708,"author":{"gitId":"-"},"content":"            this.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":709,"author":{"gitId":"-"},"content":"            this.courseId \u003d courseId;"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"        public String getCourseId() {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            return courseId;"},{"lineNumber":714,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"        public String getFeedbackSessionName() {"},{"lineNumber":717,"author":{"gitId":"-"},"content":"            return feedbackSessionName;"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":719,"author":{"gitId":"-"},"content":""},{"lineNumber":720,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        public String toString() {"},{"lineNumber":722,"author":{"gitId":"fsgmhoward"},"content":"            return \"FeedbackSessionAttributes.UpdateOptions [\""},{"lineNumber":723,"author":{"gitId":"-"},"content":"                    + \"feedbackSessionName \u003d \" + feedbackSessionName"},{"lineNumber":724,"author":{"gitId":"-"},"content":"                    + \", courseId \u003d \" + courseId"},{"lineNumber":725,"author":{"gitId":"-"},"content":"                    + \", instructions \u003d \" + instructionsOption"},{"lineNumber":726,"author":{"gitId":"-"},"content":"                    + \", startTime \u003d \" + startTimeOption"},{"lineNumber":727,"author":{"gitId":"-"},"content":"                    + \", endTime \u003d \" + endTimeOption"},{"lineNumber":728,"author":{"gitId":"-"},"content":"                    + \", sessionVisibleFromTime \u003d \" + sessionVisibleFromTimeOption"},{"lineNumber":729,"author":{"gitId":"-"},"content":"                    + \", resultsVisibleFromTime \u003d \" + resultsVisibleFromTimeOption"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                    + \", timeZone \u003d \" + timeZoneOption"},{"lineNumber":731,"author":{"gitId":"-"},"content":"                    + \", gracePeriod \u003d \" + gracePeriodOption"},{"lineNumber":732,"author":{"gitId":"-"},"content":"                    + \", sentOpeningSoonEmail \u003d \" + sentOpeningSoonEmailOption"},{"lineNumber":733,"author":{"gitId":"-"},"content":"                    + \", sentOpenEmail \u003d \" + sentOpenEmailOption"},{"lineNumber":734,"author":{"gitId":"-"},"content":"                    + \", sentClosingEmail \u003d \" + sentClosingEmailOption"},{"lineNumber":735,"author":{"gitId":"-"},"content":"                    + \", sentClosedEmail \u003d \" + sentClosedEmailOption"},{"lineNumber":736,"author":{"gitId":"-"},"content":"                    + \", sentPublishedEmail \u003d \" + sentPublishedEmailOption"},{"lineNumber":737,"author":{"gitId":"-"},"content":"                    + \", isClosingEmailEnabled \u003d \" + isClosingEmailEnabledOption"},{"lineNumber":738,"author":{"gitId":"-"},"content":"                    + \", isPublishedEmailEnabled \u003d \" + isPublishedEmailEnabledOption"},{"lineNumber":739,"author":{"gitId":"-"},"content":"                    + \", studentDeadlines \u003d \" + studentDeadlinesOption"},{"lineNumber":740,"author":{"gitId":"-"},"content":"                    + \", instructorDeadlines \u003d \" + instructorDeadlinesOption"},{"lineNumber":741,"author":{"gitId":"-"},"content":"                    + \"]\";"},{"lineNumber":742,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":745,"author":{"gitId":"-"},"content":"         * Builder class to build {@link UpdateOptions}."},{"lineNumber":746,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":747,"author":{"gitId":"-"},"content":"        public static class Builder extends BasicBuilder\u003cUpdateOptions, Builder\u003e {"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"            private Builder(UpdateOptions updateOptions) {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"                super(updateOptions);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"                assert updateOptions !\u003d null;"},{"lineNumber":752,"author":{"gitId":"-"},"content":"                thisBuilder \u003d this;"},{"lineNumber":753,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":754,"author":{"gitId":"-"},"content":""},{"lineNumber":755,"author":{"gitId":"-"},"content":"            private Builder(String feedbackSessionName, String courseId) {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"                super(new UpdateOptions(feedbackSessionName, courseId));"},{"lineNumber":757,"author":{"gitId":"-"},"content":"                thisBuilder \u003d this;"},{"lineNumber":758,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":759,"author":{"gitId":"-"},"content":""},{"lineNumber":760,"author":{"gitId":"-"},"content":"            public Builder withSentOpeningSoonEmail(boolean sentOpeningSoonEmailOption) {"},{"lineNumber":761,"author":{"gitId":"-"},"content":"                updateOptions.sentOpeningSoonEmailOption \u003d UpdateOption.of(sentOpeningSoonEmailOption);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":763,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"            public Builder withSentOpenEmail(boolean sentOpenEmail) {"},{"lineNumber":766,"author":{"gitId":"-"},"content":"                updateOptions.sentOpenEmailOption \u003d UpdateOption.of(sentOpenEmail);"},{"lineNumber":767,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":768,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":769,"author":{"gitId":"-"},"content":""},{"lineNumber":770,"author":{"gitId":"-"},"content":"            public Builder withSentClosingEmail(boolean sentClosingEmail) {"},{"lineNumber":771,"author":{"gitId":"-"},"content":"                updateOptions.sentClosingEmailOption \u003d UpdateOption.of(sentClosingEmail);"},{"lineNumber":772,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":773,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":774,"author":{"gitId":"-"},"content":""},{"lineNumber":775,"author":{"gitId":"-"},"content":"            public Builder withSentClosedEmail(boolean sentClosedEmail) {"},{"lineNumber":776,"author":{"gitId":"-"},"content":"                updateOptions.sentClosedEmailOption \u003d UpdateOption.of(sentClosedEmail);"},{"lineNumber":777,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":778,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":779,"author":{"gitId":"-"},"content":""},{"lineNumber":780,"author":{"gitId":"-"},"content":"            public Builder withSentPublishedEmail(boolean sentPublishedEmail) {"},{"lineNumber":781,"author":{"gitId":"-"},"content":"                updateOptions.sentPublishedEmailOption \u003d UpdateOption.of(sentPublishedEmail);"},{"lineNumber":782,"author":{"gitId":"-"},"content":"                return this;"},{"lineNumber":783,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":784,"author":{"gitId":"-"},"content":""},{"lineNumber":785,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":786,"author":{"gitId":"-"},"content":"            public UpdateOptions build() {"},{"lineNumber":787,"author":{"gitId":"-"},"content":"                return updateOptions;"},{"lineNumber":788,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":789,"author":{"gitId":"-"},"content":""},{"lineNumber":790,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":791,"author":{"gitId":"-"},"content":""},{"lineNumber":792,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":793,"author":{"gitId":"-"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":795,"author":{"gitId":"-"},"content":"     * Basic builder to build {@link FeedbackSessionAttributes} related classes."},{"lineNumber":796,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":797,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e type to be built"},{"lineNumber":798,"author":{"gitId":"-"},"content":"     * @param \u003cB\u003e type of the builder"},{"lineNumber":799,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":800,"author":{"gitId":"-"},"content":"    private abstract static class BasicBuilder\u003cT, B extends BasicBuilder\u003cT, B\u003e\u003e {"},{"lineNumber":801,"author":{"gitId":"-"},"content":""},{"lineNumber":802,"author":{"gitId":"-"},"content":"        UpdateOptions updateOptions;"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        B thisBuilder;"},{"lineNumber":804,"author":{"gitId":"-"},"content":""},{"lineNumber":805,"author":{"gitId":"-"},"content":"        BasicBuilder(UpdateOptions updateOptions) {"},{"lineNumber":806,"author":{"gitId":"-"},"content":"            this.updateOptions \u003d updateOptions;"},{"lineNumber":807,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":808,"author":{"gitId":"-"},"content":""},{"lineNumber":809,"author":{"gitId":"-"},"content":"        public B withInstructions(String instruction) {"},{"lineNumber":810,"author":{"gitId":"-"},"content":"            assert instruction !\u003d null;"},{"lineNumber":811,"author":{"gitId":"-"},"content":""},{"lineNumber":812,"author":{"gitId":"-"},"content":"            updateOptions.instructionsOption \u003d UpdateOption.of(instruction);"},{"lineNumber":813,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":815,"author":{"gitId":"-"},"content":""},{"lineNumber":816,"author":{"gitId":"-"},"content":"        public B withStartTime(Instant startTime) {"},{"lineNumber":817,"author":{"gitId":"-"},"content":"            assert startTime !\u003d null;"},{"lineNumber":818,"author":{"gitId":"-"},"content":""},{"lineNumber":819,"author":{"gitId":"-"},"content":"            updateOptions.startTimeOption \u003d UpdateOption.of(startTime);"},{"lineNumber":820,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":822,"author":{"gitId":"-"},"content":""},{"lineNumber":823,"author":{"gitId":"-"},"content":"        public B withEndTime(Instant endTime) {"},{"lineNumber":824,"author":{"gitId":"-"},"content":"            assert endTime !\u003d null;"},{"lineNumber":825,"author":{"gitId":"-"},"content":""},{"lineNumber":826,"author":{"gitId":"-"},"content":"            updateOptions.endTimeOption \u003d UpdateOption.of(endTime);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":828,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":829,"author":{"gitId":"-"},"content":""},{"lineNumber":830,"author":{"gitId":"-"},"content":"        public B withSessionVisibleFromTime(Instant sessionVisibleFromTime) {"},{"lineNumber":831,"author":{"gitId":"-"},"content":"            assert sessionVisibleFromTime !\u003d null;"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"            updateOptions.sessionVisibleFromTimeOption \u003d UpdateOption.of(sessionVisibleFromTime);"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":836,"author":{"gitId":"-"},"content":""},{"lineNumber":837,"author":{"gitId":"-"},"content":"        public B withResultsVisibleFromTime(Instant resultsVisibleFromTime) {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"            assert resultsVisibleFromTime !\u003d null;"},{"lineNumber":839,"author":{"gitId":"-"},"content":""},{"lineNumber":840,"author":{"gitId":"-"},"content":"            updateOptions.resultsVisibleFromTimeOption \u003d UpdateOption.of(resultsVisibleFromTime);"},{"lineNumber":841,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":843,"author":{"gitId":"-"},"content":""},{"lineNumber":844,"author":{"gitId":"-"},"content":"        public B withTimeZone(String timeZone) {"},{"lineNumber":845,"author":{"gitId":"-"},"content":"            assert timeZone !\u003d null;"},{"lineNumber":846,"author":{"gitId":"-"},"content":""},{"lineNumber":847,"author":{"gitId":"-"},"content":"            updateOptions.timeZoneOption \u003d UpdateOption.of(timeZone);"},{"lineNumber":848,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":849,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":850,"author":{"gitId":"-"},"content":""},{"lineNumber":851,"author":{"gitId":"-"},"content":"        public B withGracePeriod(Duration gracePeriod) {"},{"lineNumber":852,"author":{"gitId":"-"},"content":"            assert gracePeriod !\u003d null;"},{"lineNumber":853,"author":{"gitId":"-"},"content":""},{"lineNumber":854,"author":{"gitId":"-"},"content":"            updateOptions.gracePeriodOption \u003d UpdateOption.of(gracePeriod);"},{"lineNumber":855,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":856,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"-"},"content":"        public B withIsClosingEmailEnabled(boolean isClosingEmailEnabled) {"},{"lineNumber":859,"author":{"gitId":"-"},"content":"            updateOptions.isClosingEmailEnabledOption \u003d UpdateOption.of(isClosingEmailEnabled);"},{"lineNumber":860,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":861,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":862,"author":{"gitId":"-"},"content":""},{"lineNumber":863,"author":{"gitId":"-"},"content":"        public B withIsPublishedEmailEnabled(boolean isPublishedEmailEnabled) {"},{"lineNumber":864,"author":{"gitId":"-"},"content":"            updateOptions.isPublishedEmailEnabledOption \u003d UpdateOption.of(isPublishedEmailEnabled);"},{"lineNumber":865,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":866,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":867,"author":{"gitId":"-"},"content":""},{"lineNumber":868,"author":{"gitId":"-"},"content":"        public B withStudentDeadlines(Map\u003cString, Instant\u003e studentDeadlines) {"},{"lineNumber":869,"author":{"gitId":"-"},"content":"            assert studentDeadlines !\u003d null;"},{"lineNumber":870,"author":{"gitId":"-"},"content":""},{"lineNumber":871,"author":{"gitId":"-"},"content":"            updateOptions.studentDeadlinesOption \u003d UpdateOption.of(studentDeadlines);"},{"lineNumber":872,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":873,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":874,"author":{"gitId":"-"},"content":""},{"lineNumber":875,"author":{"gitId":"-"},"content":"        public B withInstructorDeadlines(Map\u003cString, Instant\u003e instructorDeadlines) {"},{"lineNumber":876,"author":{"gitId":"-"},"content":"            assert instructorDeadlines !\u003d null;"},{"lineNumber":877,"author":{"gitId":"-"},"content":""},{"lineNumber":878,"author":{"gitId":"-"},"content":"            updateOptions.instructorDeadlinesOption \u003d UpdateOption.of(instructorDeadlines);"},{"lineNumber":879,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":880,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":881,"author":{"gitId":"-"},"content":""},{"lineNumber":882,"author":{"gitId":"-"},"content":"        public abstract T build();"},{"lineNumber":883,"author":{"gitId":"-"},"content":""},{"lineNumber":884,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":885,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":884}},{"path":"src/main/java/teammates/common/datatransfer/attributes/NotificationAttributes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import java.util.Comparator;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"import java.util.Objects;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.storage.entity.Notification;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":" * The data transfer object for the notification."},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"public class NotificationAttributes extends EntityAttributes\u003cNotification\u003e {"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    private String notificationId;"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    private Instant startTime;"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"    private Instant endTime;"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationStyle style;"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    private NotificationTargetUser targetUser;"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"    private String title;"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    private String message;"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"    private boolean shown;"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"    private Instant createdAt;"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"    private Instant updatedAt;"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationAttributes(String notificationId) {"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"        this.notificationId \u003d notificationId;"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"     * Gets the {@link NotificationAttributes} instance of the given {@link Notification}."},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"    public static NotificationAttributes valueOf(Notification n) {"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes notificationAttributes \u003d new NotificationAttributes(n.getNotificationId());"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.startTime \u003d n.getStartTime();"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.endTime \u003d n.getEndTime();"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.style \u003d n.getStyle();"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.targetUser \u003d n.getTargetUser();"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.title \u003d n.getTitle();"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.message \u003d n.getMessage();"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.createdAt \u003d n.getCreatedAt();"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.updatedAt \u003d n.getUpdatedAt();"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.shown \u003d n.isShown();"},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"        return notificationAttributes;"},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":"     * Returns a builder for {@link NotificationAttributes}."},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"    public static Builder builder(String notificationId) {"},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"        return new Builder(notificationId);"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"     * Gets a deep copy of this object."},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes getCopy() {"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes notificationAttributes \u003d new NotificationAttributes(this.notificationId);"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.startTime \u003d this.startTime;"},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.endTime \u003d this.endTime;"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.style \u003d this.style;"},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.targetUser \u003d this.targetUser;"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.title \u003d this.title;"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.message \u003d this.message;"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.createdAt \u003d this.createdAt;"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.updatedAt \u003d this.updatedAt;"},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"        notificationAttributes.shown \u003d this.shown;"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":"        return notificationAttributes;"},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"    public String getNotificationId() {"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"        return notificationId;"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"    public void setNotificationId(String notificationId) {"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"        this.notificationId \u003d notificationId;"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getStartTime() {"},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"        return startTime;"},{"lineNumber":92,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":94,"author":{"gitId":"fsgmhoward"},"content":"    public void setStartTime(Instant startTime) {"},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":98,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getEndTime() {"},{"lineNumber":99,"author":{"gitId":"fsgmhoward"},"content":"        return endTime;"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":102,"author":{"gitId":"fsgmhoward"},"content":"    public void setEndTime(Instant endTime) {"},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":106,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationStyle getStyle() {"},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":"        return style;"},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":110,"author":{"gitId":"fsgmhoward"},"content":"    public void setStyle(NotificationStyle style) {"},{"lineNumber":111,"author":{"gitId":"fsgmhoward"},"content":"        this.style \u003d style;"},{"lineNumber":112,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":114,"author":{"gitId":"ziqing26"},"content":"    public NotificationTargetUser getTargetUser() {"},{"lineNumber":115,"author":{"gitId":"fsgmhoward"},"content":"        return targetUser;"},{"lineNumber":116,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":118,"author":{"gitId":"ziqing26"},"content":"    public void setTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":119,"author":{"gitId":"fsgmhoward"},"content":"        this.targetUser \u003d targetUser;"},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":122,"author":{"gitId":"fsgmhoward"},"content":"    public String getTitle() {"},{"lineNumber":123,"author":{"gitId":"fsgmhoward"},"content":"        return title;"},{"lineNumber":124,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"    public void setTitle(String title) {"},{"lineNumber":127,"author":{"gitId":"fsgmhoward"},"content":"        this.title \u003d title;"},{"lineNumber":128,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"    public String getMessage() {"},{"lineNumber":131,"author":{"gitId":"fsgmhoward"},"content":"        return message;"},{"lineNumber":132,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":134,"author":{"gitId":"fsgmhoward"},"content":"    public void setMessage(String message) {"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"        this.message \u003d message;"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"    public boolean isShown() {"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"        return shown;"},{"lineNumber":140,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":142,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"fsgmhoward"},"content":"     * Sets the notification as shown to the user."},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"     * Only allowed to change value from false to true."},{"lineNumber":145,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"fsgmhoward"},"content":"    public void setShown() {"},{"lineNumber":147,"author":{"gitId":"fsgmhoward"},"content":"        this.shown \u003d true;"},{"lineNumber":148,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":150,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getCreatedAt() {"},{"lineNumber":151,"author":{"gitId":"fsgmhoward"},"content":"        return createdAt;"},{"lineNumber":152,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":154,"author":{"gitId":"fsgmhoward"},"content":"    public void setCreatedAt(Instant createdAt) {"},{"lineNumber":155,"author":{"gitId":"fsgmhoward"},"content":"        this.createdAt \u003d createdAt;"},{"lineNumber":156,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":158,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getUpdatedAt() {"},{"lineNumber":159,"author":{"gitId":"fsgmhoward"},"content":"        return updatedAt;"},{"lineNumber":160,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":162,"author":{"gitId":"fsgmhoward"},"content":"    public void setUpdatedAt(Instant updatedAt) {"},{"lineNumber":163,"author":{"gitId":"fsgmhoward"},"content":"        this.updatedAt \u003d updatedAt;"},{"lineNumber":164,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":166,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"ziqing26"},"content":"     * Sorts the list of notifications by the start time, with the latest as the first element."},{"lineNumber":168,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"ziqing26"},"content":"    public static void sortByStartTime(List\u003cNotificationAttributes\u003e notifications) {"},{"lineNumber":170,"author":{"gitId":"ziqing26"},"content":"        notifications.sort(Comparator.comparing(NotificationAttributes::getStartTime));"},{"lineNumber":171,"author":{"gitId":"ziqing26"},"content":"        Collections.reverse(notifications);"},{"lineNumber":172,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":174,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":175,"author":{"gitId":"fsgmhoward"},"content":"    public List\u003cString\u003e getInvalidityInfo() {"},{"lineNumber":176,"author":{"gitId":"Nicolascwy"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":177,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":178,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"notification visible time\", startTime), errors);"},{"lineNumber":179,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":180,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getValidityInfoForNonNullField(\"notification expiry time\", endTime), errors);"},{"lineNumber":181,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":182,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForTimeForNotificationStartAndEnd(startTime, endTime), errors);"},{"lineNumber":183,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":184,"author":{"gitId":"fsgmhoward"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForNotificationStyle(style.name()), errors);"},{"lineNumber":185,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":186,"author":{"gitId":"ziqing26"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForNotificationTargetUser(targetUser.name()), errors);"},{"lineNumber":187,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":188,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForNotificationTitle(title), errors);"},{"lineNumber":189,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":190,"author":{"gitId":"Nicolascwy"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForNotificationBody(message), errors);"},{"lineNumber":191,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":192,"author":{"gitId":"Nicolascwy"},"content":"        return errors;"},{"lineNumber":193,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":195,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":196,"author":{"gitId":"fsgmhoward"},"content":"    public Notification toEntity() {"},{"lineNumber":197,"author":{"gitId":"fsgmhoward"},"content":"        return new Notification(notificationId, startTime, endTime, style,"},{"lineNumber":198,"author":{"gitId":"fsgmhoward"},"content":"                targetUser, title, message, shown, createdAt, updatedAt);"},{"lineNumber":199,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":201,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":202,"author":{"gitId":"fsgmhoward"},"content":"    public String toString() {"},{"lineNumber":203,"author":{"gitId":"fsgmhoward"},"content":"        return JsonUtils.toJson(this, NotificationAttributes.class);"},{"lineNumber":204,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":206,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":207,"author":{"gitId":"fsgmhoward"},"content":"    public int hashCode() {"},{"lineNumber":208,"author":{"gitId":"fsgmhoward"},"content":"        // Notification ID uniquely identifies a notification."},{"lineNumber":209,"author":{"gitId":"fsgmhoward"},"content":"        return this.getNotificationId().hashCode();"},{"lineNumber":210,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":212,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":213,"author":{"gitId":"fsgmhoward"},"content":"    public boolean equals(Object other) {"},{"lineNumber":214,"author":{"gitId":"fsgmhoward"},"content":"        if (other \u003d\u003d null) {"},{"lineNumber":215,"author":{"gitId":"fsgmhoward"},"content":"            return false;"},{"lineNumber":216,"author":{"gitId":"fsgmhoward"},"content":"        } else if (this \u003d\u003d other) {"},{"lineNumber":217,"author":{"gitId":"fsgmhoward"},"content":"            return true;"},{"lineNumber":218,"author":{"gitId":"fsgmhoward"},"content":"        } else if (this.getClass() \u003d\u003d other.getClass()) {"},{"lineNumber":219,"author":{"gitId":"fsgmhoward"},"content":"            NotificationAttributes otherNotification \u003d (NotificationAttributes) other;"},{"lineNumber":220,"author":{"gitId":"fsgmhoward"},"content":"            return Objects.equals(this.notificationId, otherNotification.notificationId);"},{"lineNumber":221,"author":{"gitId":"fsgmhoward"},"content":"        } else {"},{"lineNumber":222,"author":{"gitId":"fsgmhoward"},"content":"            return false;"},{"lineNumber":223,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":224,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":226,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":227,"author":{"gitId":"fsgmhoward"},"content":"    public void sanitizeForSaving() {"},{"lineNumber":228,"author":{"gitId":"fsgmhoward"},"content":"        this.title \u003d SanitizationHelper.sanitizeTitle(title);"},{"lineNumber":229,"author":{"gitId":"fsgmhoward"},"content":"        this.message \u003d SanitizationHelper.sanitizeForRichText(message);"},{"lineNumber":230,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":232,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":233,"author":{"gitId":"fsgmhoward"},"content":"     * Updates with {@link UpdateOptions}."},{"lineNumber":234,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"fsgmhoward"},"content":"    public void update(UpdateOptions updateOptions) {"},{"lineNumber":236,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.startTimeOption.ifPresent(s -\u003e startTime \u003d s);"},{"lineNumber":237,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.endTimeOption.ifPresent(e -\u003e endTime \u003d e);"},{"lineNumber":238,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.styleOption.ifPresent(t -\u003e style \u003d t);"},{"lineNumber":239,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.targetUserOption.ifPresent(u -\u003e targetUser \u003d u);"},{"lineNumber":240,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.titleOption.ifPresent(t -\u003e title \u003d t);"},{"lineNumber":241,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.messageOption.ifPresent(m -\u003e message \u003d m);"},{"lineNumber":242,"author":{"gitId":"fsgmhoward"},"content":"        updateOptions.shownOption.ifPresent(s -\u003e shown \u003d s);"},{"lineNumber":243,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":245,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"fsgmhoward"},"content":"     * Returns a {@link UpdateOptions.Builder} to build {@link UpdateOptions} for a notification."},{"lineNumber":247,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"fsgmhoward"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(String notificationId) {"},{"lineNumber":249,"author":{"gitId":"fsgmhoward"},"content":"        return new UpdateOptions.Builder(notificationId);"},{"lineNumber":250,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":251,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":252,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":253,"author":{"gitId":"fsgmhoward"},"content":"     * Returns a {@link UpdateOptions.Builder} to build on top of {@code updateOptions}."},{"lineNumber":254,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":255,"author":{"gitId":"fsgmhoward"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(UpdateOptions updateOptions) {"},{"lineNumber":256,"author":{"gitId":"fsgmhoward"},"content":"        return new UpdateOptions.Builder(updateOptions);"},{"lineNumber":257,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":259,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":260,"author":{"gitId":"fsgmhoward"},"content":"     * A builder for {@link NotificationAttributes}."},{"lineNumber":261,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":262,"author":{"gitId":"fsgmhoward"},"content":"    public static class Builder extends BasicBuilder\u003cNotificationAttributes, Builder\u003e {"},{"lineNumber":263,"author":{"gitId":"fsgmhoward"},"content":"        private final NotificationAttributes notificationAttributes;"},{"lineNumber":264,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":265,"author":{"gitId":"fsgmhoward"},"content":"        private Builder(String notificationId) {"},{"lineNumber":266,"author":{"gitId":"fsgmhoward"},"content":"            super(new UpdateOptions(notificationId));"},{"lineNumber":267,"author":{"gitId":"fsgmhoward"},"content":"            thisBuilder \u003d this;"},{"lineNumber":268,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":269,"author":{"gitId":"fsgmhoward"},"content":"            notificationAttributes \u003d new NotificationAttributes(notificationId);"},{"lineNumber":270,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":271,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":272,"author":{"gitId":"fsgmhoward"},"content":"        @Override"},{"lineNumber":273,"author":{"gitId":"fsgmhoward"},"content":"        public NotificationAttributes build() {"},{"lineNumber":274,"author":{"gitId":"fsgmhoward"},"content":"            notificationAttributes.update(updateOptions);"},{"lineNumber":275,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":276,"author":{"gitId":"fsgmhoward"},"content":"            return notificationAttributes;"},{"lineNumber":277,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":278,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":280,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":281,"author":{"gitId":"fsgmhoward"},"content":"     * Helper class to specific the fields to update in {@link NotificationAttributes}."},{"lineNumber":282,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":283,"author":{"gitId":"fsgmhoward"},"content":"    public static class UpdateOptions {"},{"lineNumber":284,"author":{"gitId":"fsgmhoward"},"content":"        private String notificationId;"},{"lineNumber":285,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":286,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cInstant\u003e startTimeOption \u003d UpdateOption.empty();"},{"lineNumber":287,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cInstant\u003e endTimeOption \u003d UpdateOption.empty();"},{"lineNumber":288,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cNotificationStyle\u003e styleOption \u003d UpdateOption.empty();"},{"lineNumber":289,"author":{"gitId":"ziqing26"},"content":"        private UpdateOption\u003cNotificationTargetUser\u003e targetUserOption \u003d UpdateOption.empty();"},{"lineNumber":290,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cString\u003e titleOption \u003d UpdateOption.empty();"},{"lineNumber":291,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cString\u003e messageOption \u003d UpdateOption.empty();"},{"lineNumber":292,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOption\u003cBoolean\u003e shownOption \u003d UpdateOption.empty();"},{"lineNumber":293,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":294,"author":{"gitId":"fsgmhoward"},"content":"        private UpdateOptions(String notificationId) {"},{"lineNumber":295,"author":{"gitId":"fsgmhoward"},"content":"            assert notificationId !\u003d null;"},{"lineNumber":296,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":297,"author":{"gitId":"fsgmhoward"},"content":"            this.notificationId \u003d notificationId;"},{"lineNumber":298,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":299,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":300,"author":{"gitId":"fsgmhoward"},"content":"        public String getNotificationId() {"},{"lineNumber":301,"author":{"gitId":"fsgmhoward"},"content":"            return notificationId;"},{"lineNumber":302,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":303,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":304,"author":{"gitId":"fsgmhoward"},"content":"        @Override"},{"lineNumber":305,"author":{"gitId":"fsgmhoward"},"content":"        public String toString() {"},{"lineNumber":306,"author":{"gitId":"fsgmhoward"},"content":"            return \"NotificationAttributes.UpdateOptions [\""},{"lineNumber":307,"author":{"gitId":"fsgmhoward"},"content":"                    + \"startTime \u003d \" + startTimeOption"},{"lineNumber":308,"author":{"gitId":"fsgmhoward"},"content":"                    + \", endTime \u003d \" + endTimeOption"},{"lineNumber":309,"author":{"gitId":"fsgmhoward"},"content":"                    + \", style \u003d \" + styleOption"},{"lineNumber":310,"author":{"gitId":"fsgmhoward"},"content":"                    + \", targetUser \u003d \" + targetUserOption"},{"lineNumber":311,"author":{"gitId":"fsgmhoward"},"content":"                    + \", title \u003d \" + titleOption"},{"lineNumber":312,"author":{"gitId":"fsgmhoward"},"content":"                    + \", message \u003d \" + messageOption"},{"lineNumber":313,"author":{"gitId":"fsgmhoward"},"content":"                    + \", shown \u003d \" + shownOption"},{"lineNumber":314,"author":{"gitId":"fsgmhoward"},"content":"                    + \"]\";"},{"lineNumber":315,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":316,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":317,"author":{"gitId":"fsgmhoward"},"content":"        /**"},{"lineNumber":318,"author":{"gitId":"fsgmhoward"},"content":"         * Builder class to build {@link UpdateOptions}."},{"lineNumber":319,"author":{"gitId":"fsgmhoward"},"content":"         */"},{"lineNumber":320,"author":{"gitId":"fsgmhoward"},"content":"        public static class Builder extends BasicBuilder\u003cUpdateOptions, Builder\u003e {"},{"lineNumber":321,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":322,"author":{"gitId":"fsgmhoward"},"content":"            private Builder(UpdateOptions updateOptions) {"},{"lineNumber":323,"author":{"gitId":"fsgmhoward"},"content":"                super(updateOptions);"},{"lineNumber":324,"author":{"gitId":"fsgmhoward"},"content":"                assert updateOptions !\u003d null;"},{"lineNumber":325,"author":{"gitId":"fsgmhoward"},"content":"                thisBuilder \u003d this;"},{"lineNumber":326,"author":{"gitId":"fsgmhoward"},"content":"            }"},{"lineNumber":327,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":328,"author":{"gitId":"fsgmhoward"},"content":"            private Builder(String notificationId) {"},{"lineNumber":329,"author":{"gitId":"fsgmhoward"},"content":"                super(new UpdateOptions(notificationId));"},{"lineNumber":330,"author":{"gitId":"fsgmhoward"},"content":"                thisBuilder \u003d this;"},{"lineNumber":331,"author":{"gitId":"fsgmhoward"},"content":"            }"},{"lineNumber":332,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":333,"author":{"gitId":"fsgmhoward"},"content":"            @Override"},{"lineNumber":334,"author":{"gitId":"fsgmhoward"},"content":"            public UpdateOptions build() {"},{"lineNumber":335,"author":{"gitId":"fsgmhoward"},"content":"                return updateOptions;"},{"lineNumber":336,"author":{"gitId":"fsgmhoward"},"content":"            }"},{"lineNumber":337,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":338,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":339,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":340,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":341,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":342,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":343,"author":{"gitId":"fsgmhoward"},"content":"     * Basic builder to build {@link NotificationAttributes} related classes."},{"lineNumber":344,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":345,"author":{"gitId":"fsgmhoward"},"content":"     * @param \u003cT\u003e type to be built"},{"lineNumber":346,"author":{"gitId":"fsgmhoward"},"content":"     * @param \u003cB\u003e type of the builder"},{"lineNumber":347,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":348,"author":{"gitId":"fsgmhoward"},"content":"    private abstract static class BasicBuilder\u003cT, B extends BasicBuilder\u003cT, B\u003e\u003e {"},{"lineNumber":349,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":350,"author":{"gitId":"fsgmhoward"},"content":"        UpdateOptions updateOptions;"},{"lineNumber":351,"author":{"gitId":"fsgmhoward"},"content":"        B thisBuilder;"},{"lineNumber":352,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":353,"author":{"gitId":"fsgmhoward"},"content":"        BasicBuilder(UpdateOptions updateOptions) {"},{"lineNumber":354,"author":{"gitId":"fsgmhoward"},"content":"            this.updateOptions \u003d updateOptions;"},{"lineNumber":355,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":356,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":357,"author":{"gitId":"fsgmhoward"},"content":"        public B withStartTime(Instant startTime) {"},{"lineNumber":358,"author":{"gitId":"fsgmhoward"},"content":"            assert startTime !\u003d null;"},{"lineNumber":359,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":360,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.startTimeOption \u003d UpdateOption.of(startTime);"},{"lineNumber":361,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":362,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":363,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":364,"author":{"gitId":"fsgmhoward"},"content":"        public B withEndTime(Instant endTime) {"},{"lineNumber":365,"author":{"gitId":"fsgmhoward"},"content":"            assert endTime !\u003d null;"},{"lineNumber":366,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":367,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.endTimeOption \u003d UpdateOption.of(endTime);"},{"lineNumber":368,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":369,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":370,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":371,"author":{"gitId":"fsgmhoward"},"content":"        public B withStyle(NotificationStyle style) {"},{"lineNumber":372,"author":{"gitId":"fsgmhoward"},"content":"            assert style !\u003d null;"},{"lineNumber":373,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":374,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.styleOption \u003d UpdateOption.of(style);"},{"lineNumber":375,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":376,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":377,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":378,"author":{"gitId":"ziqing26"},"content":"        public B withTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":379,"author":{"gitId":"fsgmhoward"},"content":"            assert targetUser !\u003d null;"},{"lineNumber":380,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":381,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.targetUserOption \u003d UpdateOption.of(targetUser);"},{"lineNumber":382,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":383,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":384,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":385,"author":{"gitId":"fsgmhoward"},"content":"        public B withTitle(String title) {"},{"lineNumber":386,"author":{"gitId":"fsgmhoward"},"content":"            assert title !\u003d null;"},{"lineNumber":387,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":388,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.titleOption \u003d UpdateOption.of(title);"},{"lineNumber":389,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":390,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":391,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":392,"author":{"gitId":"fsgmhoward"},"content":"        public B withMessage(String message) {"},{"lineNumber":393,"author":{"gitId":"fsgmhoward"},"content":"            assert message !\u003d null;"},{"lineNumber":394,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":395,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.messageOption \u003d UpdateOption.of(message);"},{"lineNumber":396,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":397,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":398,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":399,"author":{"gitId":"fsgmhoward"},"content":"        public B withShown() {"},{"lineNumber":400,"author":{"gitId":"fsgmhoward"},"content":"            updateOptions.shownOption \u003d UpdateOption.of(true);"},{"lineNumber":401,"author":{"gitId":"fsgmhoward"},"content":"            return thisBuilder;"},{"lineNumber":402,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":403,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":404,"author":{"gitId":"fsgmhoward"},"content":"        public abstract T build();"},{"lineNumber":405,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":406,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":407,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"ziqing26":18,"fsgmhoward":371,"Nicolascwy":18}},{"path":"src/main/java/teammates/common/datatransfer/attributes/StudentProfileAttributes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.storage.entity.StudentProfile;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The data transfer object for {@link StudentProfile} entities."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StudentProfileAttributes extends EntityAttributes\u003cStudentProfile\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private String googleId;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private String shortName;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private String email;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private String institute;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private String nationality;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Gender gender;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private String moreInfo;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Instant modifiedDate;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private StudentProfileAttributes(String googleId) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.googleId \u003d googleId;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.shortName \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.email \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.institute \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.nationality \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.gender \u003d Gender.OTHER;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.moreInfo \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.modifiedDate \u003d Instant.now();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Gets the {@link StudentProfileAttributes} instance of the given {@link StudentProfile}."},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static StudentProfileAttributes valueOf(StudentProfile sp) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StudentProfileAttributes studentProfileAttributes \u003d new StudentProfileAttributes(sp.getGoogleId());"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (sp.getShortName() !\u003d null) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            studentProfileAttributes.shortName \u003d sp.getShortName();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (sp.getEmail() !\u003d null) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            studentProfileAttributes.email \u003d sp.getEmail();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (sp.getInstitute() !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            studentProfileAttributes.institute \u003d sp.getInstitute();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        studentProfileAttributes.gender \u003d Gender.getGenderEnumValue(sp.getGender());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (sp.getNationality() !\u003d null) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            studentProfileAttributes.nationality \u003d sp.getNationality();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (sp.getMoreInfo() !\u003d null) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            studentProfileAttributes.moreInfo \u003d sp.getMoreInfo();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (sp.getModifiedDate() !\u003d null) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            studentProfileAttributes.modifiedDate \u003d sp.getModifiedDate();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return studentProfileAttributes;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Return a builder for {@link StudentProfileAttributes}."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Builder builder(String googleId) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Builder(googleId);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Gets a deep copy of this object."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes getCopy() {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StudentProfileAttributes studentProfileAttributes \u003d new StudentProfileAttributes(googleId);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        studentProfileAttributes.shortName \u003d shortName;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        studentProfileAttributes.email \u003d email;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        studentProfileAttributes.institute \u003d institute;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        studentProfileAttributes.gender \u003d gender;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        studentProfileAttributes.nationality \u003d nationality;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        studentProfileAttributes.moreInfo \u003d moreInfo;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        studentProfileAttributes.modifiedDate \u003d modifiedDate;"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return studentProfileAttributes;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String getGoogleId() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return googleId;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String getShortName() {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return shortName;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setShortName(String shortName) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.shortName \u003d shortName;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String getEmail() {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setEmail(String email) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.email \u003d email;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String getInstitute() {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return institute;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setInstitute(String institute) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        this.institute \u003d institute;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String getNationality() {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return nationality;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setNationality(String nationality) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        this.nationality \u003d nationality;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public Gender getGender() {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return gender;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setGender(Gender gender) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        this.gender \u003d gender;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public String getMoreInfo() {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return moreInfo;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setMoreInfo(String moreInfo) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        this.moreInfo \u003d moreInfo;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public Instant getModifiedDate() {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return modifiedDate;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setModifiedDate(Instant modifiedDate) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        this.modifiedDate \u003d modifiedDate;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getInvalidityInfo() {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        addNonEmptyError(FieldValidator.getInvalidityInfoForGoogleId(googleId), errors);"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // accept empty string values as it means the user has not specified anything yet."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!StringHelper.isEmpty(shortName)) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            addNonEmptyError(FieldValidator.getInvalidityInfoForPersonName(shortName), errors);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!StringHelper.isEmpty(email)) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            addNonEmptyError(FieldValidator.getInvalidityInfoForEmail(email), errors);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!StringHelper.isEmpty(institute)) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            addNonEmptyError(FieldValidator.getInvalidityInfoForInstituteName(institute), errors);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!StringHelper.isEmpty(nationality)) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            addNonEmptyError(FieldValidator.getInvalidityInfoForNationality(nationality), errors);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assert gender !\u003d null;"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // No validation for modified date as it is determined by the system."},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // No validation for More Info. It will properly sanitized."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return JsonUtils.toJson(this, StudentProfileAttributes.class);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        stringBuilder.append(this.email).append(this.shortName).append(this.institute)"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .append(this.googleId).append(this.gender.toString());"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return stringBuilder.toString().hashCode();"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d null) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } else if (this \u003d\u003d other) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } else if (this.getClass() \u003d\u003d other.getClass()) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            StudentProfileAttributes otherProfile \u003d (StudentProfileAttributes) other;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Objects.equals(this.email, otherProfile.email)"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.shortName, otherProfile.shortName)"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.institute, otherProfile.institute)"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.googleId, otherProfile.googleId)"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(this.gender, otherProfile.gender);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public StudentProfile toEntity() {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return new StudentProfile(googleId, shortName, email, institute, nationality, gender.name().toLowerCase(),"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                                  moreInfo);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void sanitizeForSaving() {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        this.googleId \u003d SanitizationHelper.sanitizeGoogleId(this.googleId);"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * Updates with {@link UpdateOptions}."},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void update(UpdateOptions updateOptions) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        updateOptions.shortNameOption.ifPresent(s -\u003e shortName \u003d s);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        updateOptions.emailOption.ifPresent(s -\u003e email \u003d s);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        updateOptions.instituteOption.ifPresent(s -\u003e institute \u003d s);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        updateOptions.nationalityOption.ifPresent(s -\u003e nationality \u003d s);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        updateOptions.genderOption.ifPresent(s -\u003e gender \u003d s);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        updateOptions.moreInfoOption.ifPresent(s -\u003e moreInfo \u003d s);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * Returns a {@link UpdateOptions.Builder} to build {@link UpdateOptions} for a profile."},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public static UpdateOptions.Builder updateOptionsBuilder(String googleId) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return new UpdateOptions.Builder(googleId);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * A builder class for {@link StudentProfileAttributes}."},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public static class Builder extends BasicBuilder\u003cStudentProfileAttributes, Builder\u003e {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        private final StudentProfileAttributes profileAttributes;"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"        private Builder(String googleId) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            super(new UpdateOptions(googleId));"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            thisBuilder \u003d this;"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"            profileAttributes \u003d new StudentProfileAttributes(googleId);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public StudentProfileAttributes build() {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            profileAttributes.update(updateOptions);"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return profileAttributes;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Represents the gender of a student."},{"lineNumber":268,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public enum Gender {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // CHECKSTYLE.OFF:JavadocVariable enum names are self-documenting"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        MALE,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        FEMALE,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        OTHER;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        // CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":277,"author":{"gitId":"-"},"content":"         * Returns the Gender enum value corresponding to {@code gender}, or OTHER by default."},{"lineNumber":278,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public static Gender getGenderEnumValue(String gender) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            if (gender \u003d\u003d null) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                return Gender.OTHER;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                return Gender.valueOf(gender.toUpperCase());"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            } catch (IllegalArgumentException e) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                return Gender.OTHER;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     * Helper class to specific the fields to update in {@link StudentProfileAttributes}."},{"lineNumber":293,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    public static class UpdateOptions {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        private String googleId;"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e shortNameOption \u003d UpdateOption.empty();"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e emailOption \u003d UpdateOption.empty();"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e instituteOption \u003d UpdateOption.empty();"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e nationalityOption \u003d UpdateOption.empty();"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cGender\u003e genderOption \u003d UpdateOption.empty();"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        private UpdateOption\u003cString\u003e moreInfoOption \u003d UpdateOption.empty();"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        private UpdateOptions(String googleId) {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            assert googleId !\u003d null;"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"            this.googleId \u003d googleId;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        public String getGoogleId() {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            return googleId;"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public String toString() {"},{"lineNumber":316,"author":{"gitId":"fsgmhoward"},"content":"            return \"StudentProfileAttributes.UpdateOptions [\""},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    + \"googleId \u003d \" + googleId"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    + \", shortName \u003d \" + shortNameOption"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                    + \", email \u003d \" + emailOption"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                    + \", institute \u003d \" + instituteOption"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    + \", nationality \u003d \" + nationalityOption"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    + \", gender \u003d \" + genderOption"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                    + \", moreInfo \u003d \" + moreInfoOption"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    + \"]\";"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":328,"author":{"gitId":"-"},"content":"         * Builder class to build {@link UpdateOptions}."},{"lineNumber":329,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public static class Builder extends BasicBuilder\u003cUpdateOptions, Builder\u003e {"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"            private Builder(String googleId) {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                super(new UpdateOptions(googleId));"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                thisBuilder \u003d this;"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            public UpdateOptions build() {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                return updateOptions;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * Basic builder to build {@link StudentProfileAttributes} related classes."},{"lineNumber":347,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e type to be built"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     * @param \u003cB\u003e type of the builder"},{"lineNumber":350,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    private abstract static class BasicBuilder\u003cT, B extends BasicBuilder\u003cT, B\u003e\u003e {"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"        UpdateOptions updateOptions;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        B thisBuilder;"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"        BasicBuilder(UpdateOptions updateOptions) {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            this.updateOptions \u003d updateOptions;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"        public B withShortName(String shortName) {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            assert shortName !\u003d null;"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"            updateOptions.shortNameOption \u003d UpdateOption.of(shortName);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"        public B withEmail(String email) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            assert email !\u003d null;"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"            updateOptions.emailOption \u003d UpdateOption.of(email);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        public B withInstitute(String institute) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            assert institute !\u003d null;"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"            updateOptions.instituteOption \u003d UpdateOption.of(institute);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"        public B withNationality(String nationality) {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            assert nationality !\u003d null;"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"            updateOptions.nationalityOption \u003d UpdateOption.of(nationality);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"        public B withGender(Gender gender) {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            assert gender !\u003d null;"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"            updateOptions.genderOption \u003d UpdateOption.of(gender);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        public B withMoreInfo(String moreInfo) {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            assert moreInfo !\u003d null;"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"            updateOptions.moreInfoOption \u003d UpdateOption.of(moreInfo);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            return thisBuilder;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"        public abstract T build();"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":404}},{"path":"src/main/java/teammates/common/datatransfer/questions/FeedbackConstantSumQuestionDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Contains specific structure and processing logic for constant sum feedback questions."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FeedbackConstantSumQuestionDetails extends FeedbackQuestionDetails {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    static final String QUESTION_TYPE_NAME_OPTION \u003d \"Distribute points (among options) question\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    static final String QUESTION_TYPE_NAME_RECIPIENT \u003d \"Distribute points (among recipients) question\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    static final int CONST_SUM_MIN_NUM_OF_OPTIONS \u003d 2;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    static final int CONST_SUM_MIN_NUM_OF_POINTS \u003d 1;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS \u003d"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \"Too little options for \" + QUESTION_TYPE_NAME_OPTION + \". Minimum number of options is: \";"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_DUPLICATE_OPTIONS \u003d \"Duplicate options are not allowed.\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_NOT_ENOUGH_POINTS \u003d"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \"Too little points for \" + QUESTION_TYPE_NAME_RECIPIENT + \". Minimum number of points is: \";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_MISMATCH \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"Please distribute all the points for distribution questions. \""},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    + \"To skip a distribution question, leave the boxes blank.\";"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"    static final String CONST_SUM_ERROR_NEGATIVE \u003d \"Points cannot be negative.\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_UNIQUE \u003d \"Every option must be given a different number of points.\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ERROR_SOME_UNIQUE \u003d"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"At least some options must be given a different number of points.\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ANSWER_OPTIONS_NOT_MATCH \u003d \"The answers are inconsistent with the options\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    static final String CONST_SUM_ANSWER_RECIPIENT_NOT_MATCH \u003d \"The answer is inconsistent with the recipient\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e constSumOptions;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private boolean distributeToRecipients;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private boolean pointsPerOption;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private boolean forceUnevenDistribution;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private String distributePointsFor;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private int points;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public FeedbackConstantSumQuestionDetails() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(null);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public FeedbackConstantSumQuestionDetails(String questionText) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FeedbackQuestionType.CONSTSUM, questionText);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.constSumOptions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.distributeToRecipients \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.pointsPerOption \u003d false;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.points \u003d 100;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.forceUnevenDistribution \u003d false;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.distributePointsFor \u003d FeedbackConstantSumDistributePointsType.NONE.getDisplayedOption();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean shouldChangesRequireResponseDeletion("},{"lineNumber":58,"author":{"gitId":"-"},"content":"            FeedbackQuestionDetails newDetails) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FeedbackConstantSumQuestionDetails newConstSumDetails \u003d (FeedbackConstantSumQuestionDetails) newDetails;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!this.constSumOptions.containsAll(newConstSumDetails.constSumOptions)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || !newConstSumDetails.constSumOptions.containsAll(this.constSumOptions)) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (this.distributeToRecipients !\u003d newConstSumDetails.distributeToRecipients) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (this.points !\u003d newConstSumDetails.points) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (this.pointsPerOption !\u003d newConstSumDetails.pointsPerOption) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (this.forceUnevenDistribution !\u003d newConstSumDetails.forceUnevenDistribution) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return !this.distributePointsFor.equals(newConstSumDetails.distributePointsFor);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateQuestionDetails() {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!distributeToRecipients \u0026\u0026 constSumOptions.size() \u003c CONST_SUM_MIN_NUM_OF_OPTIONS) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                       + CONST_SUM_MIN_NUM_OF_OPTIONS + \".\");"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (points \u003c CONST_SUM_MIN_NUM_OF_POINTS) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_NOT_ENOUGH_POINTS"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                       + CONST_SUM_MIN_NUM_OF_POINTS + \".\");"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!FieldValidator.areElementsUnique(constSumOptions)) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_DUPLICATE_OPTIONS);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateResponsesDetails(List\u003cFeedbackResponseDetails\u003e responses, int numRecipients) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors;"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        int numOptions \u003d distributeToRecipients ? numRecipients : constSumOptions.size();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        int totalPoints \u003d pointsPerOption ? points * numOptions : points;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (distributeToRecipients) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            errors \u003d getErrorsForConstSumRecipients(responses, totalPoints);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            errors \u003d getErrorsForConstSumOptions(responses, totalPoints);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrorsForConstSumOptions(List\u003cFeedbackResponseDetails\u003e responses, int totalPoints) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (FeedbackResponseDetails response : responses) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"            FeedbackConstantSumResponseDetails details \u003d (FeedbackConstantSumResponseDetails) response;"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (details.getAnswers().size() !\u003d constSumOptions.size()) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ANSWER_OPTIONS_NOT_MATCH);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"            List\u003cInteger\u003e givenPoints \u003d details.getAnswers();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            errors \u003d getErrors(givenPoints, totalPoints);"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"            // Return an error if any response is erroneous"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (!errors.isEmpty()) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrorsForConstSumRecipients(List\u003cFeedbackResponseDetails\u003e responses, int totalPoints) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cInteger\u003e givenPoints \u003d new ArrayList\u003c\u003e();"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (FeedbackResponseDetails response : responses) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            FeedbackConstantSumResponseDetails details \u003d (FeedbackConstantSumResponseDetails) response;"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"            List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (details.getAnswers().size() !\u003d 1) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                // Distribute to recipient must have array size one"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ANSWER_RECIPIENT_NOT_MATCH);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"            // Return an error if any response is erroneous"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (!errors.isEmpty()) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"            int givenPoint \u003d details.getAnswers().get(0);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            givenPoints.add(givenPoint);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return getErrors(givenPoints, totalPoints);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getErrors(List\u003cInteger\u003e givenPoints, int totalPoints) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Check that all points are \u003e\u003d 0"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        int sum \u003d 0;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        for (int i : givenPoints) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            if (i \u003c 0) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ERROR_NEGATIVE);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"            sum +\u003d i;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // Check that points sum up properly"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (sum !\u003d totalPoints) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            errors.add(CONST_SUM_ERROR_MISMATCH);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return errors;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // Check that points are given unevenly for all/at least some options as per the question settings"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Set\u003cInteger\u003e answerSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (distributePointsFor.equals("},{"lineNumber":191,"author":{"gitId":"-"},"content":"                FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY.getDisplayedOption())) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            boolean hasDifferentPoints \u003d false;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            for (int i : givenPoints) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                if (!answerSet.isEmpty() \u0026\u0026 !answerSet.contains(i)) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    hasDifferentPoints \u003d true;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                answerSet.add(i);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (!hasDifferentPoints) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                errors.add(CONST_SUM_ERROR_SOME_UNIQUE);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                return errors;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } else if (forceUnevenDistribution || distributePointsFor.equals("},{"lineNumber":206,"author":{"gitId":"-"},"content":"                FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY.getDisplayedOption())) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            for (int i : givenPoints) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                if (answerSet.contains(i)) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    errors.add(CONST_SUM_ERROR_UNIQUE);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                    return errors;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                answerSet.add(i);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public boolean isFeedbackParticipantCommentsOnResponsesAllowed() {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public String validateGiverRecipientVisibility(FeedbackQuestionAttributes feedbackQuestionAttributes) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public int getNumOfConstSumOptions() {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return constSumOptions.size();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getConstSumOptions() {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return constSumOptions;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void setConstSumOptions(List\u003cString\u003e constSumOptions) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        this.constSumOptions \u003d constSumOptions;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public boolean isDistributeToRecipients() {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return distributeToRecipients;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void setDistributeToRecipients(boolean distributeToRecipients) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        this.distributeToRecipients \u003d distributeToRecipients;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public boolean isPointsPerOption() {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return pointsPerOption;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void setPointsPerOption(boolean pointsPerOption) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        this.pointsPerOption \u003d pointsPerOption;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public boolean isForceUnevenDistribution() {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        return forceUnevenDistribution;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void setForceUnevenDistribution(boolean forceUnevenDistribution) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        this.forceUnevenDistribution \u003d forceUnevenDistribution;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public String getDistributePointsFor() {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return distributePointsFor;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void setDistributePointsFor(String distributePointsFor) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        this.distributePointsFor \u003d distributePointsFor;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public int getPoints() {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        return points;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void setPoints(int points) {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        this.points \u003d points;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":1,"-":279}},{"path":"src/main/java/teammates/common/util/Const.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.charset.Charset;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Stores constants that are widely used across classes."},{"lineNumber":10,"author":{"gitId":"-"},"content":" * this class contains several nested classes, each containing a specific"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * category of constants."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public final class Const {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // This section holds constants that are defined as constants primarily because they are repeated in many places."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String USER_NOBODY_TEXT \u003d \"-\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String USER_TEAM_FOR_INSTRUCTOR \u003d \"Instructors\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_DISPLAY_NAME_FOR_INSTRUCTOR \u003d \"Instructor\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT \u003d \"Anonymous\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final int SECTION_SIZE_LIMIT \u003d 100;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_SECTION \u003d \"None\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String UNKNOWN_INSTITUTION \u003d \"Unknown Institution\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_TIME_ZONE \u003d \"UTC\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Charset ENCODING \u003d StandardCharsets.UTF_8;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Duration FEEDBACK_SESSIONS_SEARCH_WINDOW \u003d Duration.ofDays(30);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Duration LOGS_RETENTION_PERIOD \u003d Duration.ofDays(30);"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"    public static final Duration COOKIE_VALIDITY_PERIOD \u003d Duration.ofDays(7);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final int SEARCH_QUERY_SIZE_LIMIT \u003d 50;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // These constants are used as variable values to mean that the variable is in a \u0027special\u0027 state."},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final int INT_UNINITIALIZED \u003d -9999;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final int MAX_POSSIBLE_RECIPIENTS \u003d -100;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final int POINTS_EQUAL_SHARE \u003d 100;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SURE \u003d -101;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SUBMITTED \u003d -999;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final int POINTS_NO_VALUE \u003d Integer.MIN_VALUE;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String GENERAL_QUESTION \u003d \"%GENERAL%\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_OPENING;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_VISIBLE;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_LATER;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_NOW;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_DEFAULT_TIMESTAMP;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_OPENING \u003d TimeHelper.parseInstant(\"1970-12-31T00:00:00Z\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_VISIBLE \u003d TimeHelper.parseInstant(\"1970-06-22T00:00:00Z\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_LATER \u003d TimeHelper.parseInstant(\"1970-01-01T00:00:00Z\");"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_NOW \u003d TimeHelper.parseInstant(\"1970-02-14T00:00:00Z\");"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_DEFAULT_TIMESTAMP \u003d TimeHelper.parseInstant(\"2011-01-01T00:00:00Z\");"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TEST_EMAIL_DOMAIN \u003d \"@gmail.tmt\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Other Constants"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Const() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Utility class containing constants"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Represents role names for instructors based on their permission settings."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static class InstructorPermissionRoleNames {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_COOWNER \u003d \"Co-owner\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_MANAGER \u003d \"Manager\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_OBSERVER \u003d \"Observer\";"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_TUTOR \u003d \"Tutor\";"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_CUSTOM \u003d \"Custom\";"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Represents atomic permission for instructors."},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static class InstructorPermissions {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_COURSE \u003d \"canmodifycourse\";"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_INSTRUCTOR \u003d \"canmodifyinstructor\";"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION \u003d \"canmodifysession\";"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_STUDENT \u003d \"canmodifystudent\";"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_STUDENT_IN_SECTIONS \u003d \"canviewstudentinsection\";"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_SESSION_IN_SECTIONS \u003d \"canviewsessioninsection\";"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public static final String CAN_SUBMIT_SESSION_IN_SECTIONS \u003d \"cansubmitsessioninsection\";"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION_COMMENT_IN_SECTIONS \u003d \"canmodifysessioncommentinsection\";"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Represents keys for HTTP requests to the API layer."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static class ParamsNames {"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public static final String IS_IN_RECYCLE_BIN \u003d \"isinrecyclebin\";"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public static final String IS_STUDENT_REJOINING \u003d \"isstudentrejoining\";"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public static final String IS_INSTRUCTOR_REJOINING \u003d \"isinstructorrejoining\";"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public static final String COURSE_ID \u003d \"courseid\";"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public static final String COURSE_STATUS \u003d \"coursestatus\";"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_ID \u003d \"instructorid\";"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_EMAIL \u003d \"instructoremail\";"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_INSTITUTION \u003d \"instructorinstitution\";"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public static final String IS_CREATING_ACCOUNT \u003d \"iscreatingaccount\";"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public static final String IS_INSTRUCTOR \u003d \"isinstructor\";"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_NAME \u003d \"fsname\";"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_STARTTIME \u003d \"starttime\";"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_ENDTIME \u003d \"endtime\";"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_MODERATED_PERSON \u003d \"moderatedperson\";"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_TYPE \u003d \"fsltype\";"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_STARTTIME \u003d \"fslstarttime\";"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_LOG_ENDTIME \u003d \"fslendtime\";"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_QUESTION_ID \u003d \"questionid\";"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_ID \u003d \"responseid\";"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_COMMENT_ID \u003d \"responsecommentid\";"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESULTS_GROUPBYSECTION \u003d \"frgroupbysection\";"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public static final String PREVIEWAS \u003d \"previewas\";"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public static final String STUDENT_ID \u003d \"googleid\";"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public static final String INVITER_ID \u003d \"invitergoogleid\";"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public static final String REGKEY \u003d \"key\";"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public static final String STUDENT_EMAIL \u003d \"studentemail\";"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public static final String SECTION_NAME \u003d \"sectionname\";"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public static final String TEAM_NAME \u003d \"teamname\";"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public static final String ERROR \u003d \"error\";"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public static final String USER_ID \u003d \"user\";"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public static final String SEARCH_KEY \u003d \"searchkey\";"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public static final String USER_CAPTCHA_RESPONSE \u003d \"captcharesponse\";"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public static final String EMAIL_TYPE \u003d \"emailtype\";"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public static final String USER_EMAIL \u003d \"useremail\";"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public static final String ENTITY_TYPE \u003d \"entitytype\";"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public static final String INTENT \u003d \"intent\";"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public static final String TIMEZONE \u003d \"timezone\";"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public static final String NOTIFY_ABOUT_DEADLINES \u003d \"notifydeadlines\";"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_STARTTIME \u003d \"starttime\";"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ENDTIME \u003d \"endtime\";"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SEVERITY \u003d \"severity\";"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_MIN_SEVERITY \u003d \"minseverity\";"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_TRACE \u003d \"traceid\";"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ACTION_CLASS \u003d \"actionclass\";"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EMAIL \u003d \"email\";"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EVENT \u003d \"logevent\";"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SOURCE_LOCATION_FILE \u003d \"sourcelocationfile\";"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_SOURCE_LOCATION_FUNCTION \u003d \"sourcelocationfunction\";"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EXCEPTION_CLASS \u003d \"exceptionclass\";"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_LATENCY \u003d \"latency\";"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_STATUS \u003d \"status\";"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_VERSION \u003d \"version\";"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_EXTRA_FILTERS \u003d \"extrafilters\";"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public static final String QUERY_LOGS_ORDER \u003d \"order\";"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public static final String LIMIT \u003d \"limit\";"},{"lineNumber":182,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":183,"author":{"gitId":"Nicolascwy"},"content":"        public static final String NOTIFICATION_ID \u003d \"notificationid\";"},{"lineNumber":184,"author":{"gitId":"ziqing26"},"content":"        public static final String NOTIFICATION_TARGET_USER \u003d \"usertype\";"},{"lineNumber":185,"author":{"gitId":"ziqing26"},"content":"        public static final String NOTIFICATION_IS_FETCHING_ALL \u003d \"isfetchingall\";"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Represents custom header names used by the system."},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public static class HeaderNames {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public static final String BACKDOOR_KEY \u003d \"Backdoor-Key\";"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public static final String CSRF_KEY \u003d \"CSRF-Key\";"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public static final String WEB_VERSION \u003d \"X-WEB-VERSION\";"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public static final String CSRF_TOKEN \u003d \"X-CSRF-TOKEN\";"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * The course status respect to the instructor\u0027s point of view."},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * This parameter is used to get a course list for instructor."},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static class CourseStatus {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public static final String ACTIVE \u003d \"active\";"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public static final String ARCHIVED \u003d \"archived\";"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public static final String SOFT_DELETED \u003d \"softDeleted\";"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Represents user types."},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static class EntityType {"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d \"student\";"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d \"instructor\";"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public static final String ADMIN \u003d \"admin\";"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public static final String MAINTAINER \u003d \"maintainer\";"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Represents security-related configuration."},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public static class SecurityConfig {"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public static final String CSRF_COOKIE_NAME \u003d \"CSRF-TOKEN\";"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public static final String AUTH_COOKIE_NAME \u003d \"AUTH-TOKEN\";"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Represents URIs of accessible pages in the front-end in past versions (V6 and before)."},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Deprecated"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public static class LegacyURIs {"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN \u003d \"/page/instructorCourseJoin\";"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN \u003d \"/page/studentCourseJoin\";"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_NEW \u003d \"/page/studentCourseJoinAuthentication\";"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d \"/page/instructorHomePage\";"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d \"/page/studentHomePage\";"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/studentFeedbackSubmissionEditPage\";"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_RESULTS_PAGE \u003d \"/page/studentFeedbackResultsPage\";"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/instructorFeedbackSubmissionEditPage\";"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Represents URIs of accessible pages in the front-end."},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public static class WebPageURIs {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public static final String LOGIN \u003d \"/login\";"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public static final String LOGOUT \u003d \"/logout\";"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/web\";"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"        private static final String STUDENT_PAGE \u003d URI_PREFIX + \"/\" + EntityType.STUDENT;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        private static final String INSTRUCTOR_PAGE \u003d URI_PREFIX + \"/\" + EntityType.INSTRUCTOR;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        private static final String ADMIN_PAGE \u003d URI_PREFIX + \"/\" + EntityType.ADMIN;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        private static final String MAINTAINER_PAGE \u003d URI_PREFIX + \"/\" + EntityType.MAINTAINER;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        private static final String FRONT_PAGE \u003d URI_PREFIX + \"/front\";"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public static final String JOIN_PAGE \u003d URI_PREFIX + \"/join\";"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public static final String ADMIN_HOME_PAGE \u003d ADMIN_PAGE + \"/home\";"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public static final String ADMIN_ACCOUNTS_PAGE \u003d ADMIN_PAGE + \"/accounts\";"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SEARCH_PAGE \u003d ADMIN_PAGE + \"/search\";"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SESSIONS_PAGE \u003d ADMIN_PAGE + \"/sessions\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public static final String ADMIN_TIMEZONE_PAGE \u003d ADMIN_PAGE + \"/timezone\";"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public static final String ADMIN_LOGS_PAGE \u003d ADMIN_PAGE + \"/logs\";"},{"lineNumber":269,"author":{"gitId":"zhaojj2209"},"content":"        public static final String ADMIN_NOTIFICATIONS_PAGE \u003d ADMIN_PAGE + \"/notifications\";"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public static final String MAINTAINER_HOME_PAGE \u003d MAINTAINER_PAGE + \"/home\";"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d INSTRUCTOR_PAGE + \"/home\";"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SEARCH_PAGE \u003d INSTRUCTOR_PAGE + \"/search\";"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSIONS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions\";"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_SUBMISSION_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/submission\";"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/edit\";"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_RESULTS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/result\";"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_REPORT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/report\";"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSES_PAGE \u003d INSTRUCTOR_PAGE + \"/courses\";"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/details\";"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/edit\";"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_ENROLL_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/enroll\";"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/details\";"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/edit\";"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_LIST_PAGE \u003d INSTRUCTOR_PAGE + \"/students\";"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_RECORDS_PAGE \u003d INSTRUCTOR_PAGE + \"/students/records\";"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_AUDIT_LOGS_PAGE \u003d INSTRUCTOR_PAGE + \"/logs\";"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d STUDENT_PAGE + \"/home\";"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_DETAILS_PAGE \u003d STUDENT_PAGE + \"/course\";"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PAGE \u003d STUDENT_PAGE + \"/profile\";"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_SUBMISSION_PAGE \u003d STUDENT_PAGE + \"/sessions/submission\";"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_RESULTS_PAGE \u003d STUDENT_PAGE + \"/sessions/result\";"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"        public static final String SESSION_RESULTS_PAGE \u003d URI_PREFIX + \"/sessions/result\";"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMISSION_PAGE \u003d URI_PREFIX + \"/sessions/submission\";"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_LINK_RECOVERY_PAGE \u003d FRONT_PAGE + \"/help/session-links-recovery\";"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * Represents URIs of resource endpoints."},{"lineNumber":303,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public static class ResourceURIs {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/webapi\";"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE \u003d URI_PREFIX + \"/databundle\";"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE_DOCUMENTS \u003d URI_PREFIX + \"/databundle/documents\";"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        public static final String EXCEPTION \u003d URI_PREFIX + \"/exception\";"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        public static final String ERROR_REPORT \u003d URI_PREFIX + \"/errorreport\";"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        public static final String AUTH \u003d URI_PREFIX + \"/auth\";"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public static final String AUTH_REGKEY \u003d URI_PREFIX + \"/auth/regkey\";"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT \u003d URI_PREFIX + \"/account\";"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_RESET \u003d URI_PREFIX + \"/account/reset\";"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_DOWNGRADE \u003d URI_PREFIX + \"/account/downgrade\";"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_REQUEST \u003d URI_PREFIX + \"/account/request\";"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_REQUEST_RESET \u003d ACCOUNT_REQUEST + \"/reset\";"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        public static final String ACCOUNTS \u003d URI_PREFIX + \"/accounts\";"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        public static final String RESPONSE_COMMENT \u003d URI_PREFIX + \"/responsecomment\";"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        public static final String COURSE \u003d URI_PREFIX + \"/course\";"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        public static final String COURSE_ARCHIVE \u003d URI_PREFIX + \"/course/archive\";"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        public static final String BIN_COURSE \u003d URI_PREFIX + \"/bin/course\";"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        public static final String COURSE_SECTIONS \u003d URI_PREFIX + \"/course/sections\";"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        public static final String COURSES \u003d URI_PREFIX + \"/courses\";"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTORS \u003d URI_PREFIX + \"/instructors\";"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d URI_PREFIX + \"/instructor\";"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PRIVILEGE \u003d URI_PREFIX + \"/instructor/privilege\";"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_KEY \u003d URI_PREFIX + \"/instructor/key\";"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        public static final String RESULT \u003d URI_PREFIX + \"/result\";"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public static final String STUDENTS \u003d URI_PREFIX + \"/students\";"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d URI_PREFIX + \"/student\";"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        public static final String STUDENT_KEY \u003d URI_PREFIX + \"/student/key\";"},{"lineNumber":333,"author":{"gitId":"Nicolascwy"},"content":"        public static final String NOTIFICATION \u003d URI_PREFIX + \"/notification\";"},{"lineNumber":334,"author":{"gitId":"Nicolascwy"},"content":"        public static final String NOTIFICATIONS \u003d URI_PREFIX + \"/notifications\";"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_ONGOING \u003d URI_PREFIX + \"/sessions/ongoing\";"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        public static final String SESSION \u003d URI_PREFIX + \"/session\";"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        public static final String SESSION_PUBLISH \u003d URI_PREFIX + \"/session/publish\";"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_SUBMISSION \u003d URI_PREFIX + \"/session/remind/submission\";"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_RESULT \u003d URI_PREFIX + \"/session/remind/result\";"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        public static final String SESSION_STATS \u003d URI_PREFIX + \"/session/stats\";"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMITTED_GIVER_SET \u003d URI_PREFIX + \"/session/submitted/giverset\";"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        public static final String SESSIONS \u003d URI_PREFIX + \"/sessions\";"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        public static final String SEARCH_ACCOUNT_REQUESTS \u003d URI_PREFIX + \"/search/accountrequests\";"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public static final String SEARCH_INSTRUCTORS \u003d URI_PREFIX + \"/search/instructors\";"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        public static final String SEARCH_STUDENTS \u003d URI_PREFIX + \"/search/students\";"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        public static final String BIN_SESSION \u003d URI_PREFIX + \"/bin/session\";"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        public static final String QUESTIONS \u003d URI_PREFIX + \"/questions\";"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        public static final String QUESTION \u003d URI_PREFIX + \"/question\";"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        public static final String QUESTION_RECIPIENTS \u003d URI_PREFIX + \"/question/recipients\";"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        public static final String RESPONSES \u003d URI_PREFIX + \"/responses\";"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        public static final String USAGE_STATISTICS \u003d URI_PREFIX + \"/usagestats\";"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        public static final String HAS_RESPONSES \u003d URI_PREFIX + \"/hasResponses\";"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        public static final String JOIN \u003d URI_PREFIX + \"/join\";"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        public static final String JOIN_REMIND \u003d URI_PREFIX + \"/join/remind\";"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        public static final String TIMEZONE \u003d URI_PREFIX + \"/timezone\";"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        public static final String SESSION_LINKS_RECOVERY \u003d URI_PREFIX + \"/sessionlinksrecovery\";"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        public static final String NATIONALITIES \u003d URI_PREFIX + \"/nationalities\";"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        public static final String EMAIL \u003d URI_PREFIX + \"/email\";"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        public static final String SESSION_LOGS \u003d URI_PREFIX + \"/logs/session\";"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        public static final String LOGS \u003d URI_PREFIX + \"/logs/query\";"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        public static final String ACTION_CLASS \u003d URI_PREFIX + \"/actionclass\";"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        public static final String USER_COOKIE \u003d URI_PREFIX + \"/cookie\";"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PICTURE \u003d URI_PREFIX + \"/student/profilePic\";"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE \u003d URI_PREFIX + \"/student/profile\";"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":369,"author":{"gitId":"-"},"content":"     * Represents URIs of endpoints used by cron jobs."},{"lineNumber":370,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    public static class CronJobURIs {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/auto\";"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_LOG_COMPILATION \u003d URI_PREFIX + \"/compileLogs\";"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_DATASTORE_BACKUP \u003d URI_PREFIX + \"/datastoreBackup\";"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_OPENING_SOON_REMINDERS \u003d"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionOpeningSoonReminders\";"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_OPENING_REMINDERS \u003d"},{"lineNumber":379,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionOpeningReminders\";"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSED_REMINDERS \u003d"},{"lineNumber":381,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosedReminders\";"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSING_REMINDERS \u003d"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosingReminders\";"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS \u003d"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedReminders\";"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_USAGE_STATISTICS_COLLECTION \u003d"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/calculateUsageStatistics\";"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":391,"author":{"gitId":"-"},"content":"     * Configurations for task queue."},{"lineNumber":392,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    public static class TaskQueue {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        public static final String URI_PREFIX \u003d \"/worker\";"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                \"feedback-session-published-email-queue\";"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedEmail\";"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":402,"author":{"gitId":"-"},"content":"                \"feedback-session-resend-published-email-queue\";"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionResendPublishedEmail\";"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME \u003d \"feedback-session-remind-email-queue\";"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/feedbackSessionRemindEmail\";"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                \"feedback-session-remind-particular-users-email-queue\";"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL \u003d"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionRemindParticularUsersEmail\";"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                \"feedback-session-unpublished-email-queue\";"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionUnpublishedEmail\";"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"instructor-course-join-email-queue\";"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/instructorCourseJoinEmail\";"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_QUEUE_NAME \u003d \"send-email-queue\";"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/sendEmail\";"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"student-course-join-email-queue\";"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/studentCourseJoinEmail\";"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"        public static final String SEARCH_INDEXING_QUEUE_NAME \u003d \"search-indexing-queue\";"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SEARCH_INDEXING_WORKER_URL \u003d URI_PREFIX + \"/instructorSearchIndexing\";"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_REQUEST_SEARCH_INDEXING_WORKER_URL \u003d"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/accountRequestSearchIndexing\";"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SEARCH_INDEXING_WORKER_URL \u003d URI_PREFIX + \"/studentSearchIndexing\";"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":1,"ziqing26":3,"-":427,"Nicolascwy":4}},{"path":"src/main/java/teammates/common/util/FieldValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.LinkedList;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.BiPredicate;"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"import java.util.stream.Collectors;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Used to handle the data validation aspect e.g. validate emails, names, etc."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public final class FieldValidator {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /////////////////"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // FIELD TYPES //"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /////////////////"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // name-related"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String PERSON_NAME_FIELD_NAME \u003d \"person name\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final int PERSON_NAME_MAX_LENGTH \u003d 100;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String NATIONALITY_FIELD_NAME \u003d \"nationality\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COURSE_NAME_FIELD_NAME \u003d \"course name\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final int COURSE_NAME_MAX_LENGTH \u003d 80;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String FEEDBACK_SESSION_NAME_FIELD_NAME \u003d \"feedback session name\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final int FEEDBACK_SESSION_NAME_MAX_LENGTH \u003d 64;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String TEAM_NAME_FIELD_NAME \u003d \"team name\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final int TEAM_NAME_MAX_LENGTH \u003d 60;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String SECTION_NAME_FIELD_NAME \u003d \"section name\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final int SECTION_NAME_MAX_LENGTH \u003d 60;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String INSTITUTE_NAME_FIELD_NAME \u003d \"institute name\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final int INSTITUTE_NAME_MAX_LENGTH \u003d 64;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // email-related"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_FIELD_NAME \u003d \"email\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final int EMAIL_MAX_LENGTH \u003d 254;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"    // notification-related"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":"    // TODO: Change max length of title and message according to frontend"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_TITLE_FIELD_NAME \u003d \"notification title\";"},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_MESSAGE_FIELD_NAME \u003d \"notification message\";"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"    public static final String NOTIFICATION_NAME \u003d \"notification\";"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_VISIBLE_TIME_FIELD_NAME \u003d \"time when the notification will be visible\";"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_EXPIRY_TIME_FIELD_NAME \u003d \"time when the notification will expire\";"},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":"    public static final String NOTIFICATION_STYLE_FIELD_NAME \u003d \"notification style\";"},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"    public static final String NOTIFICATION_TARGET_USER_FIELD_NAME \u003d \"notification target user\";"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"    public static final int NOTIFICATION_TITLE_MAX_LENGTH \u003d 80;"},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"    public static final List\u003cString\u003e NOTIFICATION_STYLE_ACCEPTED_VALUES \u003d"},{"lineNumber":67,"author":{"gitId":"Nicolascwy"},"content":"            Collections.unmodifiableList("},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"                    Arrays.stream("},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"                            NotificationStyle.values())"},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"                            .map(NotificationStyle::toString)"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"                            .collect(Collectors.toList())"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"            );"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":74,"author":{"gitId":"Nicolascwy"},"content":"    public static final List\u003cString\u003e NOTIFICATION_TARGET_USER_ACCEPTED_VALUES \u003d"},{"lineNumber":75,"author":{"gitId":"Nicolascwy"},"content":"            Collections.unmodifiableList("},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"                    Arrays.stream("},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"                            NotificationTargetUser.values())"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"                            .map(NotificationTargetUser::toString)"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"                            .collect(Collectors.toList())"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"            );"},{"lineNumber":81,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // others"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String STUDENT_ROLE_COMMENTS_FIELD_NAME \u003d \"comments about a student enrolled in a course\";"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final int STUDENT_ROLE_COMMENTS_MAX_LENGTH \u003d 500;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Field: Course ID"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Unique: system-wide, not just among the course of that instructor."},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Technically, we can get rid of CourseID field and enforce users to use"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * CourseName as a unique ID. In that case, we have to enforce CourseName"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * must be unique across the full system. However, users expect names to be"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * non-unique and more tolerant of enforcing uniqueness on an ID. Whenever"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * possible, must be displayed in the same case as user entered. This is"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * because the case of the letters can mean something. Furthermore,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * converting to same case can reduce readability."},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Course ID is necessary because the course name is not unique enough to"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * distinguish between courses because the same course can be offered"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * multiple times and courses can be shared between instructors and many"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * students. Allowing same Course ID among different instructors could be"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * problematic if we allow multiple instructors for a single course."},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * TODO: make case insensitive"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String COURSE_ID_FIELD_NAME \u003d \"course ID\";"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static final int COURSE_ID_MAX_LENGTH \u003d 64;"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":"    public static final String SESSION_NAME \u003d \"feedback session\";"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String SESSION_START_TIME_FIELD_NAME \u003d \"start time\";"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final String SESSION_END_TIME_FIELD_NAME \u003d \"end time\";"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final String TIME_ZONE_FIELD_NAME \u003d \"time zone\";"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static final String GOOGLE_ID_FIELD_NAME \u003d \"Google ID\";"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static final int GOOGLE_ID_MAX_LENGTH \u003d 254;"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static final String ROLE_FIELD_NAME \u003d \"access-level\";"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static final List\u003cString\u003e ROLE_ACCEPTED_VALUES \u003d"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Collections.unmodifiableList("},{"lineNumber":119,"author":{"gitId":"-"},"content":"                    Arrays.asList(Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_MANAGER,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_OBSERVER,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_TUTOR,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_CUSTOM));"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static final String GIVER_TYPE_NAME \u003d \"feedback giver\";"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static final String RECIPIENT_TYPE_NAME \u003d \"feedback recipient\";"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static final String VIEWER_TYPE_NAME \u003d \"feedback viewer\";"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static final String EXTENDED_DEADLINES_FIELD_NAME \u003d \"extended deadlines\";"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    ////////////////////"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    // ERROR MESSAGES //"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    ////////////////////"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static final String REASON_TOO_LONG \u003d \"is too long\";"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static final String REASON_INCORRECT_FORMAT \u003d \"is not in the correct format\";"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static final String REASON_CONTAINS_INVALID_CHAR \u003d \"contains invalid characters\";"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static final String REASON_START_WITH_NON_ALPHANUMERIC_CHAR \u003d \"starts with a non-alphanumeric character\";"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static final String REASON_UNAVAILABLE_AS_CHOICE \u003d \"is not available as a choice\";"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    // error message components"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static final String EMPTY_STRING_ERROR_INFO \u003d"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            \"The field \u0027${fieldName}\u0027 is empty.\";"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static final String ERROR_INFO \u003d"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            \"\\\"${userInput}\\\" is not acceptable to TEAMMATES as a/an ${fieldName} because it ${reason}.\";"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_POSSIBLY_EMPTY \u003d"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \"The value of a/an ${fieldName} should be no longer than ${maxLength} characters.\";"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY \u003d"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_POSSIBLY_EMPTY + \" It should not be empty.\";"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY_NO_SPACES \u003d"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \"It cannot be longer than ${maxLength} characters, cannot be empty and cannot contain spaces.\";"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_FOR_INVALID_NAME \u003d"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \"A/An ${fieldName} must start with an alphanumeric character, and cannot contain any vertical bar \""},{"lineNumber":154,"author":{"gitId":"-"},"content":"            + \"(|) or percent sign (%).\";"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    // generic (i.e., not specific to any field) error messages"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static final String SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE \u003d"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static final String SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING \u003d"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            EMPTY_STRING_ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static final String SIZE_CAPPED_POSSIBLY_EMPTY_STRING_ERROR_MESSAGE \u003d"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_POSSIBLY_EMPTY;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static final String SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING_FOR_SESSION_NAME \u003d"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            \"The field \u0027${fieldName}\u0027 should not be empty.\" + \" \""},{"lineNumber":165,"author":{"gitId":"-"},"content":"            + \"The value of \u0027${fieldName}\u0027 field should be no longer than ${maxLength} characters.\";"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_ERROR_MESSAGE \u003d"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_FOR_INVALID_NAME;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static final String TEAM_NAME_IS_VALID_EMAIL_ERROR_MESSAGE \u003d"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            \"The field \" + TEAM_NAME_FIELD_NAME + \" is not acceptable to TEAMMATES as the suggested value for \""},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    + TEAM_NAME_FIELD_NAME + \" can be mis-interpreted as an email.\";"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static final String WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE \u003d"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            \"The provided ${fieldName} is not acceptable to TEAMMATES as it contains only whitespace \""},{"lineNumber":174,"author":{"gitId":"-"},"content":"            + \"or contains extra spaces at the beginning or at the end of the text.\";"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public static final String NON_HTML_FIELD_ERROR_MESSAGE \u003d"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            \"The provided ${fieldName} is not acceptable to TEAMMATES \""},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    + \"as it cannot contain the following special html characters\""},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    + \" in brackets: (\u003c \u003e \\\" / \u0027 \u0026)\";"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static final String NON_NULL_FIELD_ERROR_MESSAGE \u003d"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            \"The provided ${fieldName} is not acceptable to TEAMMATES as it cannot be empty.\";"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    // field-specific error messages"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_EMAIL \u003d"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            \"An email address contains some text followed by one \u0027@\u0027 sign followed by some more text, and should end \""},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    + \"with a top level domain address like .com. \""},{"lineNumber":186,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY_NO_SPACES;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static final String EMAIL_ERROR_MESSAGE \u003d"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_EMAIL;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public static final String EMAIL_ERROR_MESSAGE_EMPTY_STRING \u003d"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            EMPTY_STRING_ERROR_INFO + \" \" + HINT_FOR_CORRECT_EMAIL;"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_COURSE_ID \u003d"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            \"A course ID can contain letters, numbers, fullstops, hyphens, underscores, and dollar signs. \""},{"lineNumber":194,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY_NO_SPACES;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public static final String COURSE_ID_ERROR_MESSAGE \u003d"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_COURSE_ID;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public static final String COURSE_ID_ERROR_MESSAGE_EMPTY_STRING \u003d"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            EMPTY_STRING_ERROR_INFO + \" \" + HINT_FOR_CORRECT_COURSE_ID;"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_FORMAT_OF_GOOGLE_ID \u003d"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            \"A Google ID must be a valid id already registered with Google. \""},{"lineNumber":202,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_FORMAT_FOR_SIZE_CAPPED_NON_EMPTY_NO_SPACES;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public static final String GOOGLE_ID_ERROR_MESSAGE \u003d"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_OF_GOOGLE_ID;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public static final String GOOGLE_ID_ERROR_MESSAGE_EMPTY_STRING \u003d"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            EMPTY_STRING_ERROR_INFO + \" \" + HINT_FOR_CORRECT_FORMAT_OF_GOOGLE_ID;"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_TIME_ZONE \u003d"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            \"The value must be one of the values from the time zone dropdown selector.\";"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public static final String TIME_ZONE_ERROR_MESSAGE \u003d"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            ERROR_INFO + \" \" + HINT_FOR_CORRECT_TIME_ZONE;"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_GRACE_PERIOD \u003d"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            \"The value must be one of the options in the grace period dropdown selector.\";"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public static final String GRACE_PERIOD_NEGATIVE_ERROR_MESSAGE \u003d \"Grace period should not be negative.\" + \" \""},{"lineNumber":216,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_GRACE_PERIOD;"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public static final String HINT_FOR_CORRECT_NATIONALITY \u003d"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            \"The value must be one of the values from the nationality dropdown selector.\";"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public static final String NATIONALITY_ERROR_MESSAGE \u003d"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            \"\\\"%s\\\" is not an accepted \" + NATIONALITY_FIELD_NAME + \" to TEAMMATES. \""},{"lineNumber":222,"author":{"gitId":"-"},"content":"            + HINT_FOR_CORRECT_NATIONALITY;"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public static final String ROLE_ERROR_MESSAGE \u003d"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            \"\\\"%s\\\" is not an accepted \" + ROLE_FIELD_NAME + \" to TEAMMATES. \";"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"fsgmhoward"},"content":"    public static final String NOTIFICATION_STYLE_ERROR_MESSAGE \u003d"},{"lineNumber":228,"author":{"gitId":"fsgmhoward"},"content":"            \"\\\"%s\\\" is not an accepted \" + NOTIFICATION_STYLE_FIELD_NAME + \" to TEAMMATES. \";"},{"lineNumber":229,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":230,"author":{"gitId":"Nicolascwy"},"content":"    public static final String NOTIFICATION_TARGET_USER_ERROR_MESSAGE \u003d"},{"lineNumber":231,"author":{"gitId":"Nicolascwy"},"content":"            \"\\\"%s\\\" is not an accepted \" + NOTIFICATION_TARGET_USER_FIELD_NAME + \" to TEAMMATES. \";"},{"lineNumber":232,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public static final String SESSION_VISIBLE_TIME_FIELD_NAME \u003d \"time when the session will be visible\";"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public static final String RESULTS_VISIBLE_TIME_FIELD_NAME \u003d \"time when the results will be visible\";"},{"lineNumber":235,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public static final String TIME_BEFORE_ERROR_MESSAGE \u003d"},{"lineNumber":237,"author":{"gitId":"fsgmhoward"},"content":"            \"The %s for this %s cannot be earlier than the %s.\";"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public static final String TIME_BEFORE_OR_EQUAL_ERROR_MESSAGE \u003d"},{"lineNumber":239,"author":{"gitId":"fsgmhoward"},"content":"            \"The %s for this %s cannot be earlier than or at the same time as the %s.\";"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public static final String PARTICIPANT_TYPE_ERROR_MESSAGE \u003d \"%s is not a valid %s.\";"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public static final String PARTICIPANT_TYPE_TEAM_ERROR_MESSAGE \u003d"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            \"The feedback recipients cannot be \\\"%s\\\" when the feedback giver is \\\"%s\\\". \""},{"lineNumber":244,"author":{"gitId":"-"},"content":"            + \"Did you mean to use \\\"Self\\\" instead?\";"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    ///////////////////////////////////////"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    // VALIDATION REGEX FOR INTERNAL USE //"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    ///////////////////////////////////////"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Must start with alphanumeric character, cannot contain vertical bar(|) or percent sign(%)."},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public static final String REGEX_NAME \u003d \"^[\\\\p{IsL}\\\\p{IsN}][^|%]*+$\";"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Allows English alphabet, numbers, underscore,  dot, dollar sign and hyphen."},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public static final String REGEX_COURSE_ID \u003d \"[a-zA-Z0-9_.$-]+\";"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Local part:"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * \u003cli\u003eCan only start with letters, digits, hyphen or plus sign;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * \u003cli\u003eSpecial characters allowed are ! # $ % \u0026 \u0027 * + - / \u003d ? ^ _ ` { } ~"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * \u003cli\u003eDot can only appear between any 2 characters and cannot appear continuously\u003cbr\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * Domain part:"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * \u003cli\u003eOnly allow letters, digits, hyphen and dot; Must end with letters; Must have TLD"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public static final String REGEX_EMAIL \u003d \"^[\\\\w+-][\\\\w+!#$%\u0026\u0027*/\u003d?^_`{}~-]*+(\\\\.[\\\\w+!#$%\u0026\u0027*/\u003d?^_`{}~-]+)*+\""},{"lineNumber":269,"author":{"gitId":"-"},"content":"                                            + \"@([A-Za-z0-9-]+\\\\.)+[A-Za-z]+$\";"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Allows English alphabet, numbers, underscore,  dot and hyphen."},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public static final String REGEX_GOOGLE_ID_NON_EMAIL \u003d \"[a-zA-Z0-9_.-]+\";"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"    private FieldValidator() {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        // utility class"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // Intentional private constructor to prevent instantiation."},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"    /////////////////////////////////////////"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    // VALIDATION METHODS FOR EXTERNAL USE //"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /////////////////////////////////////////"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * Checks if {@code email} is not null, not empty, not longer than {@code EMAIL_MAX_LENGTH}, and is a"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     * valid email address according to {@code REGEX_EMAIL}."},{"lineNumber":288,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code email} is not acceptable."},{"lineNumber":289,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code email} is acceptable."},{"lineNumber":290,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForEmail(String email) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"        if (email.isEmpty()) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            return getPopulatedEmptyStringErrorMessage(EMAIL_ERROR_MESSAGE_EMPTY_STRING, EMAIL_FIELD_NAME,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                                            EMAIL_MAX_LENGTH);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        } else if (isUntrimmed(email)) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\", EMAIL_FIELD_NAME);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        } else if (email.length() \u003e EMAIL_MAX_LENGTH) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(EMAIL_ERROR_MESSAGE, email, EMAIL_FIELD_NAME,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                                            REASON_TOO_LONG, EMAIL_MAX_LENGTH);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        } else if (!isValidEmailAddress(email)) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(EMAIL_ERROR_MESSAGE, email, EMAIL_FIELD_NAME,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                                            REASON_INCORRECT_FORMAT, EMAIL_MAX_LENGTH);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * Checks if {@code gracePeriod} is not negative."},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * @return An explanation why the {@code gracePeriod} is not acceptable."},{"lineNumber":313,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code gracePeriod} is acceptable."},{"lineNumber":314,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForGracePeriod(Duration gracePeriod) {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        if (gracePeriod.isNegative()) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            return GRACE_PERIOD_NEGATIVE_ERROR_MESSAGE;"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     * Checks if {@code googleId} is not null, not empty, not longer than {@code GOOGLE_ID_MAX_LENGTH}, does"},{"lineNumber":324,"author":{"gitId":"-"},"content":"     * not contain any invalid characters (| or %), AND is either a Google username (without the \"@gmail.com\")"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     * or a valid email address that does not end in \"@gmail.com\"."},{"lineNumber":326,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code googleId} is not acceptable."},{"lineNumber":327,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code googleId} is acceptable."},{"lineNumber":328,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForGoogleId(String googleId) {"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        assert !googleId.toLowerCase().endsWith(\"@gmail.com\")"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                : \"\\\"\" + googleId + \"\\\"\" + \"is not expected to be a gmail address.\";"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"        boolean isValidFullEmail \u003d isValidEmailAddress(googleId);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        boolean isValidEmailWithoutDomain \u003d StringHelper.isMatching(googleId, REGEX_GOOGLE_ID_NON_EMAIL);"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"        if (googleId.isEmpty()) {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            return getPopulatedEmptyStringErrorMessage(GOOGLE_ID_ERROR_MESSAGE_EMPTY_STRING,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                                            GOOGLE_ID_FIELD_NAME, GOOGLE_ID_MAX_LENGTH);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        } else if (isUntrimmed(googleId)) {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\", GOOGLE_ID_FIELD_NAME);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        } else if (googleId.length() \u003e GOOGLE_ID_MAX_LENGTH) {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(GOOGLE_ID_ERROR_MESSAGE, googleId, GOOGLE_ID_FIELD_NAME,"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                                            REASON_TOO_LONG, GOOGLE_ID_MAX_LENGTH);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        } else if (!(isValidFullEmail || isValidEmailWithoutDomain)) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(GOOGLE_ID_ERROR_MESSAGE, googleId, GOOGLE_ID_FIELD_NAME,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                                            REASON_INCORRECT_FORMAT, GOOGLE_ID_MAX_LENGTH);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Checks if {@code courseId} is not null, not empty, has no surrounding whitespaces, not longer than"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code COURSE_ID_MAX_LENGTH}, is sanitized for HTML, and match the REGEX {@code REGEX_COURSE_ID}."},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code courseId} is not acceptable."},{"lineNumber":357,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code courseId} is acceptable."},{"lineNumber":358,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForCourseId(String courseId) {"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"        if (courseId.isEmpty()) {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            return getPopulatedEmptyStringErrorMessage(COURSE_ID_ERROR_MESSAGE_EMPTY_STRING,"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                                            COURSE_ID_FIELD_NAME, COURSE_ID_MAX_LENGTH);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        if (isUntrimmed(courseId)) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\","},{"lineNumber":369,"author":{"gitId":"-"},"content":"                    COURSE_NAME_FIELD_NAME);"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        if (courseId.length() \u003e COURSE_ID_MAX_LENGTH) {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(COURSE_ID_ERROR_MESSAGE, courseId, COURSE_ID_FIELD_NAME,"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                                            REASON_TOO_LONG, COURSE_ID_MAX_LENGTH);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        if (!StringHelper.isMatching(courseId, REGEX_COURSE_ID)) {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(COURSE_ID_ERROR_MESSAGE, courseId, COURSE_ID_FIELD_NAME,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                                            REASON_INCORRECT_FORMAT, COURSE_ID_MAX_LENGTH);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":383,"author":{"gitId":"-"},"content":"     * Checks if {@code sectionName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":384,"author":{"gitId":"-"},"content":"     * {@code SECTION_NAME_MAX_LENGTH}, and also does not contain any invalid characters (| or %)."},{"lineNumber":385,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code sectionName} is not acceptable."},{"lineNumber":386,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code sectionName} is acceptable."},{"lineNumber":387,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForSectionName(String sectionName) {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(SECTION_NAME_FIELD_NAME, SECTION_NAME_MAX_LENGTH, sectionName);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":393,"author":{"gitId":"-"},"content":"     * Checks if {@code teamName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":394,"author":{"gitId":"-"},"content":"     * {@code TEAM_NAME_MAX_LENGTH}, does not contain any invalid characters (| or %) and is not a valid email."},{"lineNumber":395,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code teamName} is not acceptable."},{"lineNumber":396,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code teamName} is acceptable."},{"lineNumber":397,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTeamName(String teamName) {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        boolean isValidEmail \u003d isValidEmailAddress(teamName);"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        if (isValidEmail) {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            return TEAM_NAME_IS_VALID_EMAIL_ERROR_MESSAGE;"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(TEAM_NAME_FIELD_NAME, TEAM_NAME_MAX_LENGTH, teamName);"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":407,"author":{"gitId":"-"},"content":"     * Checks if the given studentRoleComments is a non-null string no longer than"},{"lineNumber":408,"author":{"gitId":"-"},"content":"     * the specified length {@code STUDENT_ROLE_COMMENTS_MAX_LENGTH}. However, this string can be empty."},{"lineNumber":409,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code studentRoleComments} is not acceptable."},{"lineNumber":410,"author":{"gitId":"-"},"content":"     *         Returns an empty string \"\" if the {@code studentRoleComments} is acceptable."},{"lineNumber":411,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForStudentRoleComments(String studentRoleComments) {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        return getValidityInfoForSizeCappedPossiblyEmptyString(STUDENT_ROLE_COMMENTS_FIELD_NAME,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"                                                               STUDENT_ROLE_COMMENTS_MAX_LENGTH,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                                                               studentRoleComments);"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":419,"author":{"gitId":"-"},"content":"     * Checks if {@code feedbackSessionName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":420,"author":{"gitId":"-"},"content":"     * {@code FEEDBACK_SESSION_NAME_MAX_LENGTH}, does not contain any invalid characters (| or %), and has no"},{"lineNumber":421,"author":{"gitId":"-"},"content":"     * unsanitized HTML characters."},{"lineNumber":422,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code feedbackSessionName} is not acceptable."},{"lineNumber":423,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code feedbackSessionName} is acceptable."},{"lineNumber":424,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForFeedbackSessionName(String feedbackSessionName) {"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        String errorsFromAllowedNameValidation \u003d getValidityInfoForAllowedName("},{"lineNumber":427,"author":{"gitId":"-"},"content":"                FEEDBACK_SESSION_NAME_FIELD_NAME, FEEDBACK_SESSION_NAME_MAX_LENGTH, feedbackSessionName);"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"        // return early if error already exists because session name is too long etc."},{"lineNumber":430,"author":{"gitId":"-"},"content":"        if (!errorsFromAllowedNameValidation.isEmpty()) {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            return errorsFromAllowedNameValidation;"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"        // checks for unsanitized HTML characters"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        return getValidityInfoForNonHtmlField(FEEDBACK_SESSION_NAME_FIELD_NAME, feedbackSessionName);"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":439,"author":{"gitId":"-"},"content":"     * Checks if {@code courseName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":440,"author":{"gitId":"-"},"content":"     * {@code COURSE_NAME_MAX_LENGTH}, and also does not contain any invalid characters (| or %)."},{"lineNumber":441,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code courseName} is not acceptable."},{"lineNumber":442,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code courseName} is acceptable."},{"lineNumber":443,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForCourseName(String courseName) {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(COURSE_NAME_FIELD_NAME, COURSE_NAME_MAX_LENGTH, courseName);"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":449,"author":{"gitId":"-"},"content":"     * Checks if {@code nationality} is a non-null non-empty string contained in the {@link NationalityHelper}\u0027s"},{"lineNumber":450,"author":{"gitId":"-"},"content":"     * list of nationalities."},{"lineNumber":451,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code nationality} is not acceptable."},{"lineNumber":452,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code nationality} is acceptable."},{"lineNumber":453,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForNationality(String nationality) {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        assert nationality !\u003d null;"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        if (!NationalityHelper.getNationalities().contains(nationality)) {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"            return String.format(NATIONALITY_ERROR_MESSAGE, nationality);"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":461,"author":{"gitId":"-"},"content":""},{"lineNumber":462,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":463,"author":{"gitId":"-"},"content":"     * Checks if {@code instituteName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":464,"author":{"gitId":"-"},"content":"     * {@code INSTITUTE_NAME_MAX_LENGTH}, and also does not contain any invalid characters (| or %)."},{"lineNumber":465,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code instituteName} is not acceptable."},{"lineNumber":466,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code instituteName} is acceptable."},{"lineNumber":467,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForInstituteName(String instituteName) {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(INSTITUTE_NAME_FIELD_NAME, INSTITUTE_NAME_MAX_LENGTH,"},{"lineNumber":470,"author":{"gitId":"-"},"content":"                                             instituteName);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":474,"author":{"gitId":"-"},"content":"     * Checks if {@code personName} is a non-null non-empty string no longer than the specified length"},{"lineNumber":475,"author":{"gitId":"-"},"content":"     * {@code PERSON_NAME_MAX_LENGTH}, and also does not contain any invalid characters (| or %)."},{"lineNumber":476,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code personName} is not acceptable."},{"lineNumber":477,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code personName} is acceptable."},{"lineNumber":478,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForPersonName(String personName) {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        return getValidityInfoForAllowedName(PERSON_NAME_FIELD_NAME, PERSON_NAME_MAX_LENGTH, personName);"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":484,"author":{"gitId":"-"},"content":"     * Checks if the given string is a non-null string contained in Java\u0027s list of"},{"lineNumber":485,"author":{"gitId":"-"},"content":"     * regional time zone IDs."},{"lineNumber":486,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code timeZoneValue} is not acceptable."},{"lineNumber":487,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code timeZoneValue} is acceptable."},{"lineNumber":488,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTimeZone(String timeZoneValue) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        assert timeZoneValue !\u003d null;"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        if (!ZoneId.getAvailableZoneIds().contains(timeZoneValue)) {"},{"lineNumber":492,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(TIME_ZONE_ERROR_MESSAGE,"},{"lineNumber":493,"author":{"gitId":"-"},"content":"                    timeZoneValue, TIME_ZONE_FIELD_NAME, REASON_UNAVAILABLE_AS_CHOICE);"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":499,"author":{"gitId":"-"},"content":"     * Checks if {@code role} is one of the recognized roles {@link #ROLE_ACCEPTED_VALUES}."},{"lineNumber":500,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":501,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code role} is not acceptable."},{"lineNumber":502,"author":{"gitId":"-"},"content":"     *         Returns an empty string if the {@code role} is acceptable."},{"lineNumber":503,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForRole(String role) {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        assert role !\u003d null;"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"        if (!ROLE_ACCEPTED_VALUES.contains(role)) {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            return String.format(ROLE_ERROR_MESSAGE, role);"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":514,"author":{"gitId":"-"},"content":"     * Checks if the given name (including person name, institute name, course name, feedback session and team name)"},{"lineNumber":515,"author":{"gitId":"-"},"content":"     * is a non-null non-empty string no longer than the specified length {@code maxLength},"},{"lineNumber":516,"author":{"gitId":"-"},"content":"     * and also does not contain any invalid characters (| or %)."},{"lineNumber":517,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":518,"author":{"gitId":"-"},"content":"     * @param fieldName"},{"lineNumber":519,"author":{"gitId":"-"},"content":"     *            A descriptive name of the field e.g., \"student name\", to be"},{"lineNumber":520,"author":{"gitId":"-"},"content":"     *            used in the return value to make the explanation more"},{"lineNumber":521,"author":{"gitId":"-"},"content":"     *            descriptive."},{"lineNumber":522,"author":{"gitId":"-"},"content":"     * @param value"},{"lineNumber":523,"author":{"gitId":"-"},"content":"     *            The string to be checked."},{"lineNumber":524,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code value} is not acceptable."},{"lineNumber":525,"author":{"gitId":"-"},"content":"     *         Returns an empty string \"\" if the {@code value} is acceptable."},{"lineNumber":526,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    static String getValidityInfoForAllowedName(String fieldName, int maxLength, String value) {"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"        assert value !\u003d null : \"Non-null value expected for \" + fieldName;"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"        if (value.isEmpty()) {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"            if (FEEDBACK_SESSION_NAME_FIELD_NAME.equals(fieldName)) {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"                return getPopulatedEmptyStringErrorMessage("},{"lineNumber":534,"author":{"gitId":"-"},"content":"                        SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING_FOR_SESSION_NAME,"},{"lineNumber":535,"author":{"gitId":"-"},"content":"                        fieldName, maxLength);"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"                return getPopulatedEmptyStringErrorMessage(SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE_EMPTY_STRING,"},{"lineNumber":538,"author":{"gitId":"-"},"content":"                        fieldName, maxLength);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        if (isUntrimmed(value)) {"},{"lineNumber":542,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\", fieldName);"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        if (value.length() \u003e maxLength) {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE, value,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"                                            fieldName, REASON_TOO_LONG, maxLength);"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        if (!Character.isLetterOrDigit(value.codePointAt(0))) {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"            boolean hasStartingBrace \u003d value.charAt(0) \u003d\u003d \u0027{\u0027 \u0026\u0026 value.contains(\"}\");"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            if (!hasStartingBrace) {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"                return getPopulatedErrorMessage(INVALID_NAME_ERROR_MESSAGE, value,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"                                                fieldName, REASON_START_WITH_NON_ALPHANUMERIC_CHAR);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            if (!StringHelper.isMatching(value.substring(1), REGEX_NAME)) {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"                return getPopulatedErrorMessage(INVALID_NAME_ERROR_MESSAGE, value, fieldName,"},{"lineNumber":556,"author":{"gitId":"-"},"content":"                                                REASON_CONTAINS_INVALID_CHAR);"},{"lineNumber":557,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            return \"\";"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        if (!StringHelper.isMatching(value, REGEX_NAME)) {"},{"lineNumber":561,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(INVALID_NAME_ERROR_MESSAGE, value, fieldName,"},{"lineNumber":562,"author":{"gitId":"-"},"content":"                                            REASON_CONTAINS_INVALID_CHAR);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":568,"author":{"gitId":"Nicolascwy"},"content":"     * Checks if the notification title is a non-null non-empty string."},{"lineNumber":569,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":570,"author":{"gitId":"Nicolascwy"},"content":"     * @param notificationTitle The title of the notification."},{"lineNumber":571,"author":{"gitId":"Nicolascwy"},"content":"     * @return An explanation of why the {@code notificationTitle} is not acceptable."},{"lineNumber":572,"author":{"gitId":"Nicolascwy"},"content":"     *         Returns an empty string \"\" if the {@code notificationTitle} is acceptable."},{"lineNumber":573,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":574,"author":{"gitId":"Nicolascwy"},"content":"    public static String getInvalidityInfoForNotificationTitle(String notificationTitle) {"},{"lineNumber":575,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":576,"author":{"gitId":"Nicolascwy"},"content":"        assert notificationTitle !\u003d null : \"Non-null value expected for notification title\";"},{"lineNumber":577,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":578,"author":{"gitId":"Nicolascwy"},"content":"        if (notificationTitle.isEmpty()) {"},{"lineNumber":579,"author":{"gitId":"Nicolascwy"},"content":"            return getPopulatedEmptyStringErrorMessage(EMPTY_STRING_ERROR_INFO,"},{"lineNumber":580,"author":{"gitId":"Nicolascwy"},"content":"                NOTIFICATION_TITLE_FIELD_NAME, NOTIFICATION_TITLE_MAX_LENGTH);"},{"lineNumber":581,"author":{"gitId":"fsgmhoward"},"content":"        } else if (notificationTitle.length() \u003e NOTIFICATION_TITLE_MAX_LENGTH) {"},{"lineNumber":582,"author":{"gitId":"fsgmhoward"},"content":"            return getPopulatedErrorMessage(SIZE_CAPPED_NON_EMPTY_STRING_ERROR_MESSAGE, notificationTitle,"},{"lineNumber":583,"author":{"gitId":"fsgmhoward"},"content":"                NOTIFICATION_TITLE_FIELD_NAME, REASON_TOO_LONG, NOTIFICATION_TITLE_MAX_LENGTH);"},{"lineNumber":584,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":585,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":586,"author":{"gitId":"Nicolascwy"},"content":"        return \"\";"},{"lineNumber":587,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":588,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":589,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":590,"author":{"gitId":"Nicolascwy"},"content":"     * Checks if the notification message is a non-null non-empty string."},{"lineNumber":591,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":592,"author":{"gitId":"Nicolascwy"},"content":"     * @param notificationMessage The notification message."},{"lineNumber":593,"author":{"gitId":"Nicolascwy"},"content":"     * @return An explanation of why the {@code notificationMessage} is not acceptable."},{"lineNumber":594,"author":{"gitId":"Nicolascwy"},"content":"     *         Returns an empty string \"\" if the {@code notificationMessage} is acceptable."},{"lineNumber":595,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":596,"author":{"gitId":"Nicolascwy"},"content":"    public static String getInvalidityInfoForNotificationBody(String notificationMessage) {"},{"lineNumber":597,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":598,"author":{"gitId":"Nicolascwy"},"content":"        assert notificationMessage !\u003d null : \"Non-null value expected for notification message\";"},{"lineNumber":599,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":600,"author":{"gitId":"Nicolascwy"},"content":"        if (notificationMessage.isEmpty()) {"},{"lineNumber":601,"author":{"gitId":"fsgmhoward"},"content":"            return getPopulatedEmptyStringErrorMessage(EMPTY_STRING_ERROR_INFO, NOTIFICATION_MESSAGE_FIELD_NAME, 0);"},{"lineNumber":602,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":603,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":604,"author":{"gitId":"Nicolascwy"},"content":"        return \"\";"},{"lineNumber":605,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":606,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":607,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":608,"author":{"gitId":"fsgmhoward"},"content":"     * Checks if {@code style} is one of the recognized notification style {@link #NOTIFICATION_STYLE_ACCEPTED_VALUES}."},{"lineNumber":609,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":610,"author":{"gitId":"fsgmhoward"},"content":"     * @return An explanation of why the {@code style} is not acceptable."},{"lineNumber":611,"author":{"gitId":"fsgmhoward"},"content":"     *         Returns an empty string if the {@code style} is acceptable."},{"lineNumber":612,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":613,"author":{"gitId":"fsgmhoward"},"content":"    public static String getInvalidityInfoForNotificationStyle(String style) {"},{"lineNumber":614,"author":{"gitId":"fsgmhoward"},"content":"        assert style !\u003d null;"},{"lineNumber":615,"author":{"gitId":"ziqing26"},"content":"        try {"},{"lineNumber":616,"author":{"gitId":"fsgmhoward"},"content":"            NotificationStyle.valueOf(style);"},{"lineNumber":617,"author":{"gitId":"ziqing26"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":618,"author":{"gitId":"fsgmhoward"},"content":"            return String.format(NOTIFICATION_STYLE_ERROR_MESSAGE, style);"},{"lineNumber":619,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":620,"author":{"gitId":"Nicolascwy"},"content":"        return \"\";"},{"lineNumber":621,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":622,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":623,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":624,"author":{"gitId":"Nicolascwy"},"content":"     * Checks if {@code targetUser} is one of the"},{"lineNumber":625,"author":{"gitId":"Nicolascwy"},"content":"     * recognized notification target user groups {@link #NOTIFICATION_TARGET_USER_ACCEPTED_VALUES}."},{"lineNumber":626,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":627,"author":{"gitId":"Nicolascwy"},"content":"     * @return An explanation of why the {@code targetUser} is not acceptable."},{"lineNumber":628,"author":{"gitId":"Nicolascwy"},"content":"     *         Returns an empty string if the {@code targetUser} is acceptable."},{"lineNumber":629,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":630,"author":{"gitId":"Nicolascwy"},"content":"    public static String getInvalidityInfoForNotificationTargetUser(String targetUser) {"},{"lineNumber":631,"author":{"gitId":"Nicolascwy"},"content":"        assert targetUser !\u003d null;"},{"lineNumber":632,"author":{"gitId":"ziqing26"},"content":"        try {"},{"lineNumber":633,"author":{"gitId":"ziqing26"},"content":"            NotificationTargetUser.valueOf(targetUser);"},{"lineNumber":634,"author":{"gitId":"ziqing26"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":635,"author":{"gitId":"Nicolascwy"},"content":"            return String.format(NOTIFICATION_TARGET_USER_ERROR_MESSAGE, targetUser);"},{"lineNumber":636,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":637,"author":{"gitId":"Nicolascwy"},"content":"        return \"\";"},{"lineNumber":638,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":639,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":640,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":641,"author":{"gitId":"-"},"content":"     * Checks if the given string is a non-null string no longer than"},{"lineNumber":642,"author":{"gitId":"-"},"content":"     * the specified length {@code maxLength}. However, this string can be empty."},{"lineNumber":643,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":644,"author":{"gitId":"-"},"content":"     * @param fieldName"},{"lineNumber":645,"author":{"gitId":"-"},"content":"     *            A descriptive name of the field e.g., \"student name\", to be"},{"lineNumber":646,"author":{"gitId":"-"},"content":"     *            used in the return value to make the explanation more"},{"lineNumber":647,"author":{"gitId":"-"},"content":"     *            descriptive."},{"lineNumber":648,"author":{"gitId":"-"},"content":"     * @param value"},{"lineNumber":649,"author":{"gitId":"-"},"content":"     *            The string to be checked."},{"lineNumber":650,"author":{"gitId":"-"},"content":"     * @return An explanation of why the {@code value} is not acceptable."},{"lineNumber":651,"author":{"gitId":"-"},"content":"     *         Returns an empty string \"\" if the {@code value} is acceptable."},{"lineNumber":652,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    static String getValidityInfoForSizeCappedPossiblyEmptyString(String fieldName, int maxLength, String value) {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        assert value !\u003d null : \"Non-null value expected for \" + fieldName;"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"        if (isUntrimmed(value)) {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"            return WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace(\"${fieldName}\", fieldName);"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        if (value.length() \u003e maxLength) {"},{"lineNumber":660,"author":{"gitId":"-"},"content":"            return getPopulatedErrorMessage(SIZE_CAPPED_POSSIBLY_EMPTY_STRING_ERROR_MESSAGE, value,"},{"lineNumber":661,"author":{"gitId":"-"},"content":"                                            fieldName, REASON_TOO_LONG, maxLength);"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":667,"author":{"gitId":"-"},"content":"     * Checks if Session Start Time is before Session End Time."},{"lineNumber":668,"author":{"gitId":"-"},"content":"     * @return Error string if {@code sessionStart} is before {@code sessionEnd}"},{"lineNumber":669,"author":{"gitId":"-"},"content":"     *         Empty string if {@code sessionStart} is after {@code sessionEnd}"},{"lineNumber":670,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTimeForSessionStartAndEnd(Instant sessionStart, Instant sessionEnd) {"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        return getInvalidityInfoForFirstTimeIsBeforeSecondTime("},{"lineNumber":673,"author":{"gitId":"fsgmhoward"},"content":"                sessionStart, sessionEnd, SESSION_NAME, SESSION_START_TIME_FIELD_NAME, SESSION_END_TIME_FIELD_NAME);"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":677,"author":{"gitId":"-"},"content":"     * Checks if Session Visibility Start Time is before Session Start Time."},{"lineNumber":678,"author":{"gitId":"-"},"content":"     * @return Error string if {@code visibilityStart} is before {@code sessionStart}"},{"lineNumber":679,"author":{"gitId":"-"},"content":"     *         Empty string if {@code visibilityStart} is after {@code sessionStart}"},{"lineNumber":680,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTimeForVisibilityStartAndSessionStart("},{"lineNumber":682,"author":{"gitId":"-"},"content":"            Instant visibilityStart, Instant sessionStart) {"},{"lineNumber":683,"author":{"gitId":"fsgmhoward"},"content":"        return getInvalidityInfoForFirstTimeIsBeforeSecondTime(visibilityStart, sessionStart,"},{"lineNumber":684,"author":{"gitId":"fsgmhoward"},"content":"                SESSION_NAME, SESSION_VISIBLE_TIME_FIELD_NAME, SESSION_START_TIME_FIELD_NAME);"},{"lineNumber":685,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":686,"author":{"gitId":"-"},"content":""},{"lineNumber":687,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":688,"author":{"gitId":"-"},"content":"     * Checks if Visibility Start Time is before Results Publish Time."},{"lineNumber":689,"author":{"gitId":"-"},"content":"     * @return Error string if {@code visibilityStart} is before {@code resultsPublish}"},{"lineNumber":690,"author":{"gitId":"-"},"content":"     *         Empty string if {@code visibilityStart} is after {@code resultsPublish}"},{"lineNumber":691,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTimeForVisibilityStartAndResultsPublish("},{"lineNumber":693,"author":{"gitId":"-"},"content":"            Instant visibilityStart, Instant resultsPublish) {"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        return getInvalidityInfoForFirstTimeIsBeforeSecondTime(visibilityStart, resultsPublish,"},{"lineNumber":695,"author":{"gitId":"fsgmhoward"},"content":"                SESSION_NAME, SESSION_VISIBLE_TIME_FIELD_NAME, RESULTS_VISIBLE_TIME_FIELD_NAME);"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":699,"author":{"gitId":"-"},"content":"     * Checks if the session end time is before all extended deadlines."},{"lineNumber":700,"author":{"gitId":"-"},"content":"     * @return Error string if any deadline in {@code deadlines} is before {@code sessionEnd}, an empty one otherwise."},{"lineNumber":701,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":702,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForTimeForSessionEndAndExtendedDeadlines("},{"lineNumber":703,"author":{"gitId":"-"},"content":"            Instant sessionEnd, Map\u003cString, Instant\u003e deadlines) {"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        return deadlines.entrySet()"},{"lineNumber":705,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":706,"author":{"gitId":"-"},"content":"                .map(entry -\u003e getInvalidityInfoForFirstTimeIsStrictlyBeforeSecondTime(sessionEnd, entry.getValue(),"},{"lineNumber":707,"author":{"gitId":"fsgmhoward"},"content":"                        SESSION_NAME, SESSION_END_TIME_FIELD_NAME, EXTENDED_DEADLINES_FIELD_NAME))"},{"lineNumber":708,"author":{"gitId":"-"},"content":"                .filter(invalidityInfo -\u003e !invalidityInfo.isEmpty())"},{"lineNumber":709,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":710,"author":{"gitId":"-"},"content":"                .orElse(\"\");"},{"lineNumber":711,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":712,"author":{"gitId":"-"},"content":""},{"lineNumber":713,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":714,"author":{"gitId":"fsgmhoward"},"content":"     * Checks if Notification Start Time is before Notification End Time."},{"lineNumber":715,"author":{"gitId":"Nicolascwy"},"content":"     * @return Error string if {@code notificationStart} is before {@code notificationEnd}"},{"lineNumber":716,"author":{"gitId":"Nicolascwy"},"content":"     *         Empty string if {@code notificationStart} is after {@code notificationEnd}"},{"lineNumber":717,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":718,"author":{"gitId":"Nicolascwy"},"content":"    public static String getInvalidityInfoForTimeForNotificationStartAndEnd("},{"lineNumber":719,"author":{"gitId":"Nicolascwy"},"content":"            Instant notificationStart, Instant notificationExpiry) {"},{"lineNumber":720,"author":{"gitId":"Nicolascwy"},"content":"        return getInvalidityInfoForFirstTimeIsBeforeSecondTime(notificationStart, notificationExpiry,"},{"lineNumber":721,"author":{"gitId":"fsgmhoward"},"content":"                NOTIFICATION_NAME, NOTIFICATION_VISIBLE_TIME_FIELD_NAME, NOTIFICATION_EXPIRY_TIME_FIELD_NAME);"},{"lineNumber":722,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":723,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":724,"author":{"gitId":"fsgmhoward"},"content":"    private static String getInvalidityInfoForFirstTimeIsBeforeSecondTime(Instant earlierTime, Instant laterTime,"},{"lineNumber":725,"author":{"gitId":"fsgmhoward"},"content":"            String entityName, String earlierTimeFieldName, String laterTimeFieldName) {"},{"lineNumber":726,"author":{"gitId":"fsgmhoward"},"content":"        return getInvalidityInfoForFirstTimeComparedToSecondTime(earlierTime, laterTime, entityName,"},{"lineNumber":727,"author":{"gitId":"fsgmhoward"},"content":"                earlierTimeFieldName, laterTimeFieldName,"},{"lineNumber":728,"author":{"gitId":"-"},"content":"                (firstTime, secondTime) -\u003e firstTime.isBefore(secondTime) || firstTime.equals(secondTime),"},{"lineNumber":729,"author":{"gitId":"-"},"content":"                TIME_BEFORE_ERROR_MESSAGE);"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":731,"author":{"gitId":"-"},"content":""},{"lineNumber":732,"author":{"gitId":"-"},"content":"    private static String getInvalidityInfoForFirstTimeIsStrictlyBeforeSecondTime("},{"lineNumber":733,"author":{"gitId":"fsgmhoward"},"content":"            Instant earlierTime, Instant laterTime, String entityName, String earlierTimeFieldName,"},{"lineNumber":734,"author":{"gitId":"fsgmhoward"},"content":"            String laterTimeFieldName) {"},{"lineNumber":735,"author":{"gitId":"fsgmhoward"},"content":"        return getInvalidityInfoForFirstTimeComparedToSecondTime(earlierTime, laterTime, entityName,"},{"lineNumber":736,"author":{"gitId":"fsgmhoward"},"content":"                earlierTimeFieldName, laterTimeFieldName, Instant::isBefore,"},{"lineNumber":737,"author":{"gitId":"-"},"content":"                TIME_BEFORE_OR_EQUAL_ERROR_MESSAGE);"},{"lineNumber":738,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"    private static String getInvalidityInfoForFirstTimeComparedToSecondTime(Instant earlierTime, Instant laterTime,"},{"lineNumber":741,"author":{"gitId":"fsgmhoward"},"content":"            String entityName, String earlierTimeFieldName, String laterTimeFieldName,"},{"lineNumber":742,"author":{"gitId":"fsgmhoward"},"content":"            BiPredicate\u003cInstant, Instant\u003e validityChecker,"},{"lineNumber":743,"author":{"gitId":"-"},"content":"            String invalidityInfoTemplate) {"},{"lineNumber":744,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":745,"author":{"gitId":"-"},"content":"        assert earlierTime !\u003d null;"},{"lineNumber":746,"author":{"gitId":"-"},"content":"        assert laterTime !\u003d null;"},{"lineNumber":747,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":748,"author":{"gitId":"-"},"content":"        if (TimeHelper.isSpecialTime(earlierTime) || TimeHelper.isSpecialTime(laterTime)) {"},{"lineNumber":749,"author":{"gitId":"-"},"content":"            return \"\";"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":751,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":752,"author":{"gitId":"-"},"content":"        if (!validityChecker.test(earlierTime, laterTime)) {"},{"lineNumber":753,"author":{"gitId":"fsgmhoward"},"content":"            return String.format(invalidityInfoTemplate, laterTimeFieldName, entityName, earlierTimeFieldName);"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":755,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":756,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":758,"author":{"gitId":"-"},"content":""},{"lineNumber":759,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":760,"author":{"gitId":"-"},"content":"     * Checks if both the giver type and recipient type for the feedback question is valid."},{"lineNumber":761,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":762,"author":{"gitId":"-"},"content":"     * @param giverType feedback question giver type to be checked."},{"lineNumber":763,"author":{"gitId":"-"},"content":"     * @param recipientType feedback question recipient type to be checked."},{"lineNumber":764,"author":{"gitId":"-"},"content":"     * @return Error string if either type is invalid, otherwise empty string."},{"lineNumber":765,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e getValidityInfoForFeedbackParticipantType("},{"lineNumber":767,"author":{"gitId":"-"},"content":"            FeedbackParticipantType giverType, FeedbackParticipantType recipientType) {"},{"lineNumber":768,"author":{"gitId":"-"},"content":""},{"lineNumber":769,"author":{"gitId":"-"},"content":"        assert giverType !\u003d null;"},{"lineNumber":770,"author":{"gitId":"-"},"content":"        assert recipientType !\u003d null;"},{"lineNumber":771,"author":{"gitId":"-"},"content":""},{"lineNumber":772,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new LinkedList\u003c\u003e();"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        if (!giverType.isValidGiver()) {"},{"lineNumber":774,"author":{"gitId":"-"},"content":"            errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE, giverType.toString(), GIVER_TYPE_NAME));"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        if (!recipientType.isValidRecipient()) {"},{"lineNumber":777,"author":{"gitId":"-"},"content":"            errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE, recipientType.toString(), RECIPIENT_TYPE_NAME));"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":779,"author":{"gitId":"-"},"content":"        if (giverType \u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":780,"author":{"gitId":"-"},"content":"                \u0026\u0026 (recipientType \u003d\u003d FeedbackParticipantType.OWN_TEAM"},{"lineNumber":781,"author":{"gitId":"-"},"content":"                        || recipientType \u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS)) {"},{"lineNumber":782,"author":{"gitId":"-"},"content":"            String displayRecipientName \u003d recipientType \u003d\u003d FeedbackParticipantType.OWN_TEAM"},{"lineNumber":783,"author":{"gitId":"-"},"content":"                    ? \"Giver\u0027s team\" : \"Giver\u0027s team members\";"},{"lineNumber":784,"author":{"gitId":"-"},"content":"            errors.add(String.format(PARTICIPANT_TYPE_TEAM_ERROR_MESSAGE,"},{"lineNumber":785,"author":{"gitId":"-"},"content":"                    displayRecipientName,"},{"lineNumber":786,"author":{"gitId":"-"},"content":"                    \"Teams in this course\"));"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":790,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":791,"author":{"gitId":"-"},"content":""},{"lineNumber":792,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":793,"author":{"gitId":"-"},"content":"     * Checks if comment giver type is either instructor, student or team."},{"lineNumber":794,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":795,"author":{"gitId":"-"},"content":"     * @param commentGiverType comment giver type to be checked."},{"lineNumber":796,"author":{"gitId":"-"},"content":"     * @return Error string if type is invalid, otherwise empty string."},{"lineNumber":797,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":798,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForCommentGiverType(FeedbackParticipantType commentGiverType) {"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        assert commentGiverType !\u003d null;"},{"lineNumber":800,"author":{"gitId":"-"},"content":"        if (!commentGiverType.equals(FeedbackParticipantType.STUDENTS)"},{"lineNumber":801,"author":{"gitId":"-"},"content":"                   \u0026\u0026 !commentGiverType.equals(FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":802,"author":{"gitId":"-"},"content":"                   \u0026\u0026 !commentGiverType.equals(FeedbackParticipantType.TEAMS)) {"},{"lineNumber":803,"author":{"gitId":"-"},"content":"            return \"Invalid comment giver type: \" + commentGiverType;"},{"lineNumber":804,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":805,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":806,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":807,"author":{"gitId":"-"},"content":""},{"lineNumber":808,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":809,"author":{"gitId":"-"},"content":"     * Checks if visibility of comment is following question when comment is from a feedback participant."},{"lineNumber":810,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":811,"author":{"gitId":"-"},"content":"     * @param isCommentFromFeedbackParticipant true if comment is from feedback participant."},{"lineNumber":812,"author":{"gitId":"-"},"content":"     * @param isVisibilityFollowingFeedbackQuestion true if visibility of comment follows question."},{"lineNumber":813,"author":{"gitId":"-"},"content":"     * @return Error string if condition is not met, otherwise empty string."},{"lineNumber":814,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":815,"author":{"gitId":"-"},"content":"    public static String getInvalidityInfoForVisibilityOfFeedbackParticipantComments("},{"lineNumber":816,"author":{"gitId":"-"},"content":"            boolean isCommentFromFeedbackParticipant,"},{"lineNumber":817,"author":{"gitId":"-"},"content":"            boolean isVisibilityFollowingFeedbackQuestion) {"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        if (isCommentFromFeedbackParticipant \u0026\u0026 !isVisibilityFollowingFeedbackQuestion) {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"            return \"Comment by feedback participant not following visibility setting of the question.\";"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":823,"author":{"gitId":"-"},"content":""},{"lineNumber":824,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":825,"author":{"gitId":"-"},"content":"     * Checks if all the given participant types are valid for the purpose of"},{"lineNumber":826,"author":{"gitId":"-"},"content":"     * showing different fields of a feedback response."},{"lineNumber":827,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":828,"author":{"gitId":"-"},"content":"     * @param showResponsesTo the list of participant types to whom responses can be shown"},{"lineNumber":829,"author":{"gitId":"-"},"content":"     * @param showGiverNameTo the list of participant types to whom giver name can be shown"},{"lineNumber":830,"author":{"gitId":"-"},"content":"     * @param showRecipientNameTo the list of participant types to whom recipient name can be shown"},{"lineNumber":831,"author":{"gitId":"-"},"content":"     * @return Error string if any type in any list is invalid, otherwise empty string."},{"lineNumber":832,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":833,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e getValidityInfoForFeedbackResponseVisibility("},{"lineNumber":834,"author":{"gitId":"-"},"content":"            List\u003cFeedbackParticipantType\u003e showResponsesTo,"},{"lineNumber":835,"author":{"gitId":"-"},"content":"            List\u003cFeedbackParticipantType\u003e showGiverNameTo,"},{"lineNumber":836,"author":{"gitId":"-"},"content":"            List\u003cFeedbackParticipantType\u003e showRecipientNameTo) {"},{"lineNumber":837,"author":{"gitId":"-"},"content":""},{"lineNumber":838,"author":{"gitId":"-"},"content":"        assert showResponsesTo !\u003d null;"},{"lineNumber":839,"author":{"gitId":"-"},"content":"        assert showGiverNameTo !\u003d null;"},{"lineNumber":840,"author":{"gitId":"-"},"content":"        assert showRecipientNameTo !\u003d null;"},{"lineNumber":841,"author":{"gitId":"-"},"content":"        assert !showResponsesTo.contains(null);"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        assert !showGiverNameTo.contains(null);"},{"lineNumber":843,"author":{"gitId":"-"},"content":"        assert !showRecipientNameTo.contains(null);"},{"lineNumber":844,"author":{"gitId":"-"},"content":""},{"lineNumber":845,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new LinkedList\u003c\u003e();"},{"lineNumber":846,"author":{"gitId":"-"},"content":""},{"lineNumber":847,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType type : showGiverNameTo) {"},{"lineNumber":848,"author":{"gitId":"-"},"content":"            if (!type.isValidViewer()) {"},{"lineNumber":849,"author":{"gitId":"-"},"content":"                errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE,"},{"lineNumber":850,"author":{"gitId":"-"},"content":"                        type.toString(), VIEWER_TYPE_NAME));"},{"lineNumber":851,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":852,"author":{"gitId":"-"},"content":"            if (!showResponsesTo.contains(type)) {"},{"lineNumber":853,"author":{"gitId":"-"},"content":"                errors.add(\"Trying to show giver name to \""},{"lineNumber":854,"author":{"gitId":"-"},"content":"                        + type.toString()"},{"lineNumber":855,"author":{"gitId":"-"},"content":"                        + \" without showing response first.\");"},{"lineNumber":856,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":857,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType type : showRecipientNameTo) {"},{"lineNumber":860,"author":{"gitId":"-"},"content":"            if (!type.isValidViewer()) {"},{"lineNumber":861,"author":{"gitId":"-"},"content":"                errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE,"},{"lineNumber":862,"author":{"gitId":"-"},"content":"                        type.toString(), VIEWER_TYPE_NAME));"},{"lineNumber":863,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":864,"author":{"gitId":"-"},"content":"            if (!showResponsesTo.contains(type)) {"},{"lineNumber":865,"author":{"gitId":"-"},"content":"                errors.add(\"Trying to show recipient name to \""},{"lineNumber":866,"author":{"gitId":"-"},"content":"                        + type.toString()"},{"lineNumber":867,"author":{"gitId":"-"},"content":"                        + \" without showing response first.\");"},{"lineNumber":868,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":869,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":870,"author":{"gitId":"-"},"content":""},{"lineNumber":871,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType type : showResponsesTo) {"},{"lineNumber":872,"author":{"gitId":"-"},"content":"            if (!type.isValidViewer()) {"},{"lineNumber":873,"author":{"gitId":"-"},"content":"                errors.add(String.format(PARTICIPANT_TYPE_ERROR_MESSAGE,"},{"lineNumber":874,"author":{"gitId":"-"},"content":"                        type.toString(), VIEWER_TYPE_NAME));"},{"lineNumber":875,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":876,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":877,"author":{"gitId":"-"},"content":""},{"lineNumber":878,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":879,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":880,"author":{"gitId":"-"},"content":""},{"lineNumber":881,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":882,"author":{"gitId":"-"},"content":"     * Checks if the given {@code value} has no HTML code."},{"lineNumber":883,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":884,"author":{"gitId":"-"},"content":"    static String getValidityInfoForNonHtmlField(String fieldName, String value) {"},{"lineNumber":885,"author":{"gitId":"-"},"content":"        String sanitizedValue \u003d SanitizationHelper.sanitizeForHtml(value);"},{"lineNumber":886,"author":{"gitId":"-"},"content":"        //Fails if sanitized value is not same as value"},{"lineNumber":887,"author":{"gitId":"-"},"content":"        return value.equals(sanitizedValue) ? \"\" : NON_HTML_FIELD_ERROR_MESSAGE.replace(\"${fieldName}\", fieldName);"},{"lineNumber":888,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":889,"author":{"gitId":"-"},"content":""},{"lineNumber":890,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":891,"author":{"gitId":"-"},"content":"     * Checks if the given {@code value} is not null."},{"lineNumber":892,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":893,"author":{"gitId":"-"},"content":"    public static String getValidityInfoForNonNullField(String fieldName, Object value) {"},{"lineNumber":894,"author":{"gitId":"-"},"content":"        return value \u003d\u003d null ? NON_NULL_FIELD_ERROR_MESSAGE.replace(\"${fieldName}\", fieldName) : \"\";"},{"lineNumber":895,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":896,"author":{"gitId":"-"},"content":""},{"lineNumber":897,"author":{"gitId":"-"},"content":"    private static boolean isUntrimmed(String value) {"},{"lineNumber":898,"author":{"gitId":"-"},"content":"        return value.length() !\u003d value.trim().length();"},{"lineNumber":899,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":900,"author":{"gitId":"-"},"content":""},{"lineNumber":901,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":902,"author":{"gitId":"-"},"content":"     * Checks whether a given text input represents a format of a valid email address."},{"lineNumber":903,"author":{"gitId":"-"},"content":"     * @param email text input which needs the validation"},{"lineNumber":904,"author":{"gitId":"-"},"content":"     * @return true if it is a valid email address, else false."},{"lineNumber":905,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":906,"author":{"gitId":"-"},"content":"    private static boolean isValidEmailAddress(String email) {"},{"lineNumber":907,"author":{"gitId":"-"},"content":"        return StringHelper.isMatching(email, REGEX_EMAIL);"},{"lineNumber":908,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":909,"author":{"gitId":"-"},"content":""},{"lineNumber":910,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":911,"author":{"gitId":"-"},"content":"     * Checks whether all the elements in a Collection are unique."},{"lineNumber":912,"author":{"gitId":"-"},"content":"     * @param elements The Collection of elements to be checked."},{"lineNumber":913,"author":{"gitId":"-"},"content":"     * @return true if all elements are unique, else false."},{"lineNumber":914,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":915,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e boolean areElementsUnique(Collection\u003cT\u003e elements) {"},{"lineNumber":916,"author":{"gitId":"-"},"content":"        Set\u003cT\u003e uniqueElements \u003d new HashSet\u003c\u003e(elements);"},{"lineNumber":917,"author":{"gitId":"-"},"content":"        return uniqueElements.size() \u003d\u003d elements.size();"},{"lineNumber":918,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":919,"author":{"gitId":"-"},"content":""},{"lineNumber":920,"author":{"gitId":"-"},"content":"    private static String getPopulatedErrorMessage("},{"lineNumber":921,"author":{"gitId":"-"},"content":"            String messageTemplate, String userInput, String fieldName, String errorReason, int maxLength) {"},{"lineNumber":922,"author":{"gitId":"-"},"content":"        return getPopulatedErrorMessage(messageTemplate, userInput, fieldName, errorReason)"},{"lineNumber":923,"author":{"gitId":"-"},"content":"                   .replace(\"${maxLength}\", String.valueOf(maxLength));"},{"lineNumber":924,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":925,"author":{"gitId":"-"},"content":""},{"lineNumber":926,"author":{"gitId":"-"},"content":"    private static String getPopulatedErrorMessage("},{"lineNumber":927,"author":{"gitId":"-"},"content":"            String messageTemplate, String userInput, String fieldName, String errorReason) {"},{"lineNumber":928,"author":{"gitId":"-"},"content":"        return messageTemplate.replace(\"${userInput}\", userInput)"},{"lineNumber":929,"author":{"gitId":"-"},"content":"                              .replace(\"${fieldName}\", fieldName)"},{"lineNumber":930,"author":{"gitId":"-"},"content":"                              .replace(\"${reason}\", errorReason);"},{"lineNumber":931,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":932,"author":{"gitId":"-"},"content":""},{"lineNumber":933,"author":{"gitId":"-"},"content":"    private static String getPopulatedEmptyStringErrorMessage(String messageTemplate,"},{"lineNumber":934,"author":{"gitId":"-"},"content":"            String fieldName, int maxLength) {"},{"lineNumber":935,"author":{"gitId":"-"},"content":"        return messageTemplate.replace(\"${fieldName}\", fieldName)"},{"lineNumber":936,"author":{"gitId":"-"},"content":"                              .replace(\"${maxLength}\", String.valueOf(maxLength));"},{"lineNumber":937,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":938,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":15,"fsgmhoward":50,"-":794,"Nicolascwy":79}},{"path":"src/main/java/teammates/logic/api/EmailSender.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.EmailSentLogDetails;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.exception.EmailSendingException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.EmailSenderService;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.EmptyEmailService;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.MailgunService;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.MailjetService;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.SendgridService;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Handles operations related to sending emails."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EmailSender {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final EmailSender instance \u003d new EmailSender();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final EmailSenderService service;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    EmailSender() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            service \u003d new EmptyEmailService();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            if (Config.isUsingSendgrid()) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                service \u003d new SendgridService();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            } else if (Config.isUsingMailgun()) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                service \u003d new MailgunService();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            } else if (Config.isUsingMailjet()) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                service \u003d new MailjetService();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                service \u003d new EmptyEmailService();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static EmailSender inst() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sends the given {@code message} and generates a log report."},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return The HTTP status of the email request."},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper message) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (isTestingAccount(message.getRecipient())) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(HttpStatus.SC_OK, \"Not sending email to test account\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EmailSendingStatus status;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EmailSendingException caughtE \u003d null;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            status \u003d service.sendEmail(message);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (EmailSendingException e) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            caughtE \u003d e;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            status \u003d new EmailSendingStatus(e.getStatusCode(), e.getMessage());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!status.isSuccess()) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (caughtE \u003d\u003d null) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                log.severe(\"Email failed to send: \" + status.getMessage());"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                log.severe(\"Email failed to send: \" + status.getMessage(), caughtE);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EmailSentLogDetails details \u003d new EmailSentLogDetails();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        details.setEmailRecipient(message.getRecipient());"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        details.setEmailSubject(message.getSubject());"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        details.setEmailContent(message.getContent());"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        details.setEmailType(message.getType());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        details.setEmailStatus(status.getStatusCode());"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (status.getMessage() !\u003d null) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            details.setEmailStatusMessage(status.getMessage());"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        log.event(\"Email sent: \" + message.getType(), details);"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return status;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private boolean isTestingAccount(String email) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return email.endsWith(Const.TEST_EMAIL_DOMAIN);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sends the given {@code report}."},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void sendReport(EmailWrapper report) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            sendEmail(report);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            log.severe(\"Error in sending report: \" + (report \u003d\u003d null ? \"\" : report.getInfoForLogging())"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                       + \"\\nReport content: \" + (report \u003d\u003d null ? \"\" : report.getContent()), e);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":5,"-":100}},{"path":"src/main/java/teammates/logic/api/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.FileStorageService;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.GoogleCloudStorageService;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.LocalFileStorageService;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Handles operations related to binary files."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FileStorage {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final FileStorage instance \u003d new FileStorage();"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final FileStorageService service;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    FileStorage() {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            service \u003d new LocalFileStorageService();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            service \u003d new GoogleCloudStorageService();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static FileStorage inst() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a file with the specified {@code fileKey} exists in the storage."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean doesFileExist(String fileKey) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return service.doesFileExist(fileKey);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Gets the content of the file with the specified {@code fileKey} as bytes."},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public byte[] getContent(String fileKey) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return service.getContent(fileKey);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Deletes the file with the specified {@code fileKey}."},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void delete(String fileKey) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        service.delete(fileKey);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a file with the specified {@code contentBytes} as content and with type {@code contentType}."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void create(String fileKey, byte[] contentBytes, String contentType) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        service.create(fileKey, contentBytes, contentType);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":53}},{"path":"src/main/java/teammates/logic/api/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collection;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.annotation.Nullable;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.SessionResultsBundle;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.DeadlineExtensionAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.UsageStatisticsAttributes;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.exception.EnrollException;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.exception.InstructorUpdateException;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.logic.core.AccountRequestsLogic;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.logic.core.AccountsLogic;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.logic.core.CoursesLogic;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.logic.core.DataBundleLogic;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.logic.core.DeadlineExtensionsLogic;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackQuestionsLogic;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackResponseCommentsLogic;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackResponsesLogic;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackSessionsLogic;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import teammates.logic.core.InstructorsLogic;"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"import teammates.logic.core.NotificationsLogic;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import teammates.logic.core.ProfilesLogic;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import teammates.logic.core.StudentsLogic;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import teammates.logic.core.UsageStatisticsLogic;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":49,"author":{"gitId":"-"},"content":" * Provides the business logic for production usage of the system."},{"lineNumber":50,"author":{"gitId":"-"},"content":" *"},{"lineNumber":51,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis is a Facade class which simply forwards the method to internal classes."},{"lineNumber":52,"author":{"gitId":"-"},"content":" */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class Logic {"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final Logic instance \u003d new Logic();"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    final AccountRequestsLogic accountRequestsLogic \u003d AccountRequestsLogic.inst();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    final DeadlineExtensionsLogic deadlineExtensionsLogic \u003d DeadlineExtensionsLogic.inst();"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"    final NotificationsLogic notificationsLogic \u003d NotificationsLogic.inst();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    final FeedbackSessionsLogic feedbackSessionsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    final FeedbackQuestionsLogic feedbackQuestionsLogic \u003d FeedbackQuestionsLogic.inst();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    final FeedbackResponsesLogic feedbackResponsesLogic \u003d FeedbackResponsesLogic.inst();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    final FeedbackResponseCommentsLogic feedbackResponseCommentsLogic \u003d FeedbackResponseCommentsLogic.inst();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    final UsageStatisticsLogic usageStatisticsLogic \u003d UsageStatisticsLogic.inst();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    final DataBundleLogic dataBundleLogic \u003d DataBundleLogic.inst();"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    Logic() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Logic inst() {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public AccountAttributes getAccount(String googleId) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return accountsLogic.getAccount(googleId);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns a list of accounts with email matching {@code email}."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public List\u003cAccountAttributes\u003e getAccountsForEmail(String email) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return accountsLogic.getAccountsForEmail(email);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public String getCourseInstitute(String courseId) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return coursesLogic.getCourseInstitute(courseId);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getActiveNotificationsByTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"        return notificationsLogic.getActiveNotificationsByTargetUser(targetUser);"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getAllNotifications() {"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"        return notificationsLogic.getAllNotifications();"},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":"     * Gets a notification by ID."},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"Nicolascwy"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":118,"author":{"gitId":"Nicolascwy"},"content":"     * * All parameters are non-null."},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"Nicolascwy"},"content":"     * @return Null if no match found."},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":"    public NotificationAttributes getNotification(String id) {"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"        return notificationsLogic.getNotification(id);"},{"lineNumber":124,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":126,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"Nicolascwy"},"content":"     * Creates a notification."},{"lineNumber":128,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"Nicolascwy"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":130,"author":{"gitId":"Nicolascwy"},"content":"     * * All parameters are non-null."},{"lineNumber":131,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"Nicolascwy"},"content":"     * @return created notification"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":"     * @throws InvalidParametersException if the notification is not valid"},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":"     * @throws EntityAlreadyExistsException if the notification exists in the database"},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"Nicolascwy"},"content":"    public NotificationAttributes createNotification(NotificationAttributes notification) throws"},{"lineNumber":137,"author":{"gitId":"Nicolascwy"},"content":"            InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":138,"author":{"gitId":"Nicolascwy"},"content":"        return notificationsLogic.createNotification(notification);"},{"lineNumber":139,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":141,"author":{"gitId":"Nicolascwy"},"content":"    public NotificationAttributes updateNotification(NotificationAttributes.UpdateOptions updateOptions) throws"},{"lineNumber":142,"author":{"gitId":"Nicolascwy"},"content":"            InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":143,"author":{"gitId":"Nicolascwy"},"content":"        return notificationsLogic.updateNotification(updateOptions);"},{"lineNumber":144,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":146,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"Nicolascwy"},"content":"     * Deletes notification by ID."},{"lineNumber":148,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"Nicolascwy"},"content":"     * \u003cul\u003e"},{"lineNumber":150,"author":{"gitId":"Nicolascwy"},"content":"     * \u003cli\u003eFails silently if no such notification.\u003c/li\u003e"},{"lineNumber":151,"author":{"gitId":"Nicolascwy"},"content":"     * \u003c/ul\u003e"},{"lineNumber":152,"author":{"gitId":"Nicolascwy"},"content":"     *"},{"lineNumber":153,"author":{"gitId":"Nicolascwy"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":154,"author":{"gitId":"Nicolascwy"},"content":"     * * All parameters are non-null."},{"lineNumber":155,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"Nicolascwy"},"content":"    public void deleteNotification(String notificationId) {"},{"lineNumber":157,"author":{"gitId":"Nicolascwy"},"content":"        assert notificationId !\u003d null;"},{"lineNumber":158,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":159,"author":{"gitId":"Nicolascwy"},"content":"        notificationsLogic.deleteNotification(notificationId);"},{"lineNumber":160,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Updates/Creates the profile using {@link StudentProfileAttributes.UpdateOptions}."},{"lineNumber":164,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @return updated student profile"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes updateOrCreateStudentProfile(StudentProfileAttributes.UpdateOptions updateOptions)"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return profilesLogic.updateOrCreateStudentProfile(updateOptions);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Deletes both instructor and student privileges, as well as the account and associated student profile."},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * \u003cul\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * \u003cli\u003eFails silently if no such account.\u003c/li\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void deleteAccountCascade(String googleId) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        accountsLogic.deleteAccountCascade(googleId);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Verifies that all the given instructors exist in the given course."},{"lineNumber":198,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException If some instructor does not exist in the course."},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void verifyAllInstructorsExistInCourse(String courseId, Collection\u003cString\u003e instructorEmailAddresses)"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assert instructorEmailAddresses !\u003d null;"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        instructorsLogic.verifyAllInstructorsExistInCourse(courseId, instructorEmailAddresses);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Creates an instructor."},{"lineNumber":214,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":217,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * @return the created instructor"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the instructor is not valid"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the instructor already exists in the database"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public InstructorAttributes createInstructor(InstructorAttributes instructor)"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assert instructor !\u003d null;"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return instructorsLogic.createInstructor(instructor);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * This method should be used by admin only since the searching does not restrict the"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * search instructors in the whole system."},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e searchInstructorsInWholeSystem(String queryString)"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        return instructorsLogic.searchInstructorsInWholeSystem(queryString);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given instructor."},{"lineNumber":244,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * @see InstructorsLogic#putDocument(InstructorAttributes)"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public void putInstructorDocument(InstructorAttributes instructor) throws SearchServiceException {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        instructorsLogic.putDocument(instructor);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Update instructor being edited to ensure validity of instructors for the course."},{"lineNumber":253,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * @see InstructorsLogic#updateToEnsureValidityOfInstructorsForTheCourse(String, InstructorAttributes)"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public void updateToEnsureValidityOfInstructorsForTheCourse(String courseId, InstructorAttributes instructorToEdit) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assert instructorToEdit !\u003d null;"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"        instructorsLogic.updateToEnsureValidityOfInstructorsForTheCourse(courseId, instructorToEdit);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":268,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForEmail(String courseId, String email) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForEmail(courseId, email);"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":281,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorById(String courseId, String email) {"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorById(courseId, email);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForGoogleId(String courseId, String googleId) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForGoogleId(courseId, googleId);"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":305,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":306,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":307,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructorForRegistrationKey(String registrationKey) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorForRegistrationKey(registrationKey);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":318,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":319,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId) {"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForGoogleId(googleId);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId, boolean omitArchived) {"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":335,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":338,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public List\u003cInstructorAttributes\u003e getInstructorsForCourse(String courseId) {"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"        return instructorsLogic.getInstructorsForCourse(courseId);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getAllOngoingSessions(Instant rangeStart, Instant rangeEnd) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getAllOngoingSessions(rangeStart, rangeEnd);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":352,"author":{"gitId":"-"},"content":"     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithGoogleId}."},{"lineNumber":353,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade update the comments, responses and deadline extensions associated with the instructor."},{"lineNumber":355,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":358,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * @return updated instructor"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor cannot be found"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    public InstructorAttributes updateInstructorCascade(InstructorAttributes.UpdateOptionsWithGoogleId updateOptions)"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            throws InstructorUpdateException, InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"        return instructorsLogic.updateInstructorByGoogleIdCascade(updateOptions);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":371,"author":{"gitId":"-"},"content":"     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithEmail}."},{"lineNumber":372,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":373,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":374,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":375,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":376,"author":{"gitId":"-"},"content":"     * @return updated instructor"},{"lineNumber":377,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":378,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor cannot be found"},{"lineNumber":379,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    public InstructorAttributes updateInstructor(InstructorAttributes.UpdateOptionsWithEmail updateOptions)"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            throws InstructorUpdateException, InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"        return instructorsLogic.updateInstructorByEmail(updateOptions);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":388,"author":{"gitId":"-"},"content":"     * Make the instructor join the course, i.e. associate the Google ID to the instructor.\u003cbr\u003e"},{"lineNumber":389,"author":{"gitId":"-"},"content":"     * Creates an account for the instructor if no existing account is found."},{"lineNumber":390,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":391,"author":{"gitId":"-"},"content":"     * * Parameters regkey and googleId are non-null."},{"lineNumber":392,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    public InstructorAttributes joinCourseForInstructor(String regkey, String googleId)"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        assert regkey !\u003d null;"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"        return accountsLogic.joinCourseForInstructor(regkey, googleId);"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":403,"author":{"gitId":"-"},"content":"     * Downgrades an instructor account to student account."},{"lineNumber":404,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":405,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade deletes all instructors associated with the account."},{"lineNumber":406,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":407,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":408,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":409,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    public void downgradeInstructorToStudentCascade(String googleId) throws EntityDoesNotExistException {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"        accountsLogic.downgradeInstructorToStudentCascade(googleId);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":417,"author":{"gitId":"-"},"content":"     * Deletes an instructor cascade its associated feedback responses, deadline extensions and comments."},{"lineNumber":418,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":419,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if the student does not exist."},{"lineNumber":420,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":421,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":422,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":423,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    public void deleteInstructorCascade(String courseId, String email) {"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"        instructorsLogic.deleteInstructorCascade(courseId, email);"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":433,"author":{"gitId":"-"},"content":"     * Creates a course and an associated instructor for the course."},{"lineNumber":434,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":435,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":436,"author":{"gitId":"-"},"content":"     * * All parameters are non-null. \u003cbr/\u003e"},{"lineNumber":437,"author":{"gitId":"-"},"content":"     * * {@code instructorGoogleId} already has an account and instructor privileges."},{"lineNumber":438,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    public void createCourseAndInstructor(String instructorGoogleId, CourseAttributes courseAttributes)"},{"lineNumber":440,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        assert instructorGoogleId !\u003d null;"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        assert courseAttributes !\u003d null;"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"        coursesLogic.createCourseAndInstructor(instructorGoogleId, courseAttributes);"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":448,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":449,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":450,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":451,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    public CourseAttributes getCourse(String courseId) {"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"        return coursesLogic.getCourse(courseId);"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":460,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":461,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":462,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getCoursesForStudentAccount(String googleId) {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        return coursesLogic.getCoursesForStudentAccount(googleId);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":469,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":470,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":471,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":472,"author":{"gitId":"-"},"content":"     * @return Courses the given instructors is in except for courses in Recycle Bin."},{"lineNumber":473,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getCoursesForInstructor(List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        return coursesLogic.getCoursesForInstructor(instructorList);"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":481,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":482,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":483,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":484,"author":{"gitId":"-"},"content":"     * @return Courses in Recycle Bin that the given instructors is in."},{"lineNumber":485,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    public List\u003cCourseAttributes\u003e getSoftDeletedCoursesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":487,"author":{"gitId":"-"},"content":""},{"lineNumber":488,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        return coursesLogic.getSoftDeletedCoursesForInstructors(instructorList);"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":491,"author":{"gitId":"-"},"content":""},{"lineNumber":492,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":493,"author":{"gitId":"-"},"content":"     * Updates a course by {@link CourseAttributes.UpdateOptions}."},{"lineNumber":494,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":495,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf the {@code timezone} of the course is changed, cascade the change to its corresponding feedback sessions."},{"lineNumber":496,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":497,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":498,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":499,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":500,"author":{"gitId":"-"},"content":"     * @return updated course"},{"lineNumber":501,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":502,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the course cannot be found"},{"lineNumber":503,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    public CourseAttributes updateCourseCascade(CourseAttributes.UpdateOptions updateOptions)"},{"lineNumber":505,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":"        return coursesLogic.updateCourseCascade(updateOptions);"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":512,"author":{"gitId":"-"},"content":"     * Changes the archive status of a course for an instructor."},{"lineNumber":513,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":514,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":515,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":516,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":517,"author":{"gitId":"-"},"content":"     * @param courseId The course of which the archive status is to be changed"},{"lineNumber":518,"author":{"gitId":"-"},"content":"     * @param archiveStatus The archive status to be set"},{"lineNumber":519,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    public void setArchiveStatusOfInstructor(String googleId, String courseId, boolean archiveStatus)"},{"lineNumber":521,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"        instructorsLogic.setArchiveStatusOfInstructor(googleId, courseId, archiveStatus);"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":530,"author":{"gitId":"-"},"content":"     * Deletes a course cascade its students, instructors, sessions, responses, deadline extensions and comments."},{"lineNumber":531,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":532,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if no such course."},{"lineNumber":533,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":534,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":535,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":536,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    public void deleteCourseCascade(String courseId) {"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        coursesLogic.deleteCourseCascade(courseId);"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":543,"author":{"gitId":"-"},"content":"     * Moves a course to Recycle Bin by its given corresponding ID."},{"lineNumber":544,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":545,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":546,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":547,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":548,"author":{"gitId":"-"},"content":"     * @return the deletion timestamp assigned to the course."},{"lineNumber":549,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    public Instant moveCourseToRecycleBin(String courseId) throws EntityDoesNotExistException {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        return coursesLogic.moveCourseToRecycleBin(courseId);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":556,"author":{"gitId":"-"},"content":"     * Restores a course and all data related to the course from Recycle Bin by"},{"lineNumber":557,"author":{"gitId":"-"},"content":"     * its given corresponding ID."},{"lineNumber":558,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":559,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":560,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":561,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    public void restoreCourseFromRecycleBin(String courseId)"},{"lineNumber":563,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":565,"author":{"gitId":"-"},"content":""},{"lineNumber":566,"author":{"gitId":"-"},"content":"        coursesLogic.restoreCourseFromRecycleBin(courseId);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":568,"author":{"gitId":"-"},"content":""},{"lineNumber":569,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":570,"author":{"gitId":"-"},"content":"     * Search for students. Preconditions: all parameters are non-null."},{"lineNumber":571,"author":{"gitId":"-"},"content":"     * @param instructors   a list of InstructorAttributes associated to a googleId,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"     *                      used for filtering of search result"},{"lineNumber":573,"author":{"gitId":"-"},"content":"     * @return Null if no match found"},{"lineNumber":574,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":575,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e searchStudents(String queryString, List\u003cInstructorAttributes\u003e instructors)"},{"lineNumber":576,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        assert instructors !\u003d null;"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        return studentsLogic.searchStudents(queryString, instructors);"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":583,"author":{"gitId":"-"},"content":"     * This method should be used by admin only since the searching does not restrict the"},{"lineNumber":584,"author":{"gitId":"-"},"content":"     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"},{"lineNumber":585,"author":{"gitId":"-"},"content":"     * search students in the whole system."},{"lineNumber":586,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":587,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e searchStudentsInWholeSystem(String queryString)"},{"lineNumber":589,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":591,"author":{"gitId":"-"},"content":""},{"lineNumber":592,"author":{"gitId":"-"},"content":"        return studentsLogic.searchStudentsInWholeSystem(queryString);"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":594,"author":{"gitId":"-"},"content":""},{"lineNumber":595,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":596,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":597,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":598,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":599,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":600,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForRegistrationKey(String registrationKey) {"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":603,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForRegistrationKey(registrationKey);"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":605,"author":{"gitId":"-"},"content":""},{"lineNumber":606,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":607,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":608,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":609,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":610,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":611,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":612,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForEmail(String courseId, String email) {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":615,"author":{"gitId":"-"},"content":""},{"lineNumber":616,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForEmail(courseId, email);"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":620,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":621,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":622,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":623,"author":{"gitId":"-"},"content":"     * @return Null if no match found."},{"lineNumber":624,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudentForGoogleId(String courseId, String googleId) {"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentForCourseIdAndGoogleId(courseId, googleId);"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":631,"author":{"gitId":"-"},"content":""},{"lineNumber":632,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":633,"author":{"gitId":"-"},"content":"     * Gets student profile associated with the {@code googleId}."},{"lineNumber":634,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":635,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":636,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":637,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":638,"author":{"gitId":"-"},"content":"     * @return null if no match found."},{"lineNumber":639,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    public StudentProfileAttributes getStudentProfile(String googleId) {"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        return profilesLogic.getStudentProfile(googleId);"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":644,"author":{"gitId":"-"},"content":""},{"lineNumber":645,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":646,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":647,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":648,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":649,"author":{"gitId":"-"},"content":"     * @return Empty list if no match found."},{"lineNumber":650,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForGoogleId(String googleId) {"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForGoogleId(googleId);"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":657,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":658,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":659,"author":{"gitId":"-"},"content":"     * @return Empty list if none found."},{"lineNumber":660,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForCourse(String courseId) {"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForCourse(courseId);"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":667,"author":{"gitId":"-"},"content":"     * Returns a list of section names for the course with ID courseId."},{"lineNumber":668,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":669,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":670,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":671,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":672,"author":{"gitId":"-"},"content":"     * @see CoursesLogic#getSectionsNameForCourse(String)"},{"lineNumber":673,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getSectionNamesForCourse(String courseId) throws EntityDoesNotExistException {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        return coursesLogic.getSectionsNameForCourse(courseId);"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":678,"author":{"gitId":"-"},"content":""},{"lineNumber":679,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":680,"author":{"gitId":"-"},"content":"     * Populates fields that need dynamic generation in a question."},{"lineNumber":681,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":682,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCurrently, only MCQ/MSQ needs to generate choices dynamically.\u003c/p\u003e"},{"lineNumber":683,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":684,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":685,"author":{"gitId":"-"},"content":"     * * All parameters except \u003ccode\u003eteamOfEntityDoingQuestion\u003c/code\u003e are non-null."},{"lineNumber":686,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":687,"author":{"gitId":"-"},"content":"     * @param feedbackQuestionAttributes the question to populate"},{"lineNumber":688,"author":{"gitId":"-"},"content":"     * @param emailOfEntityDoingQuestion the email of the entity doing the question"},{"lineNumber":689,"author":{"gitId":"-"},"content":"     * @param teamOfEntityDoingQuestion the team of the entity doing the question. If the entity is an instructor,"},{"lineNumber":690,"author":{"gitId":"-"},"content":"     *                                  it can be {@code null}."},{"lineNumber":691,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    public void populateFieldsToGenerateInQuestion(FeedbackQuestionAttributes feedbackQuestionAttributes,"},{"lineNumber":693,"author":{"gitId":"-"},"content":"            String emailOfEntityDoingQuestion, String teamOfEntityDoingQuestion) {"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        assert feedbackQuestionAttributes !\u003d null;"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        assert emailOfEntityDoingQuestion !\u003d null;"},{"lineNumber":696,"author":{"gitId":"-"},"content":""},{"lineNumber":697,"author":{"gitId":"-"},"content":"        feedbackQuestionsLogic.populateFieldsToGenerateInQuestion("},{"lineNumber":698,"author":{"gitId":"-"},"content":"                feedbackQuestionAttributes, emailOfEntityDoingQuestion, teamOfEntityDoingQuestion);"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":700,"author":{"gitId":"-"},"content":""},{"lineNumber":701,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":702,"author":{"gitId":"-"},"content":"     * Resets the googleId associated with the student."},{"lineNumber":703,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":704,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":705,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":706,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":707,"author":{"gitId":"-"},"content":"    public void resetStudentGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        assert originalEmail !\u003d null;"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":710,"author":{"gitId":"-"},"content":""},{"lineNumber":711,"author":{"gitId":"-"},"content":"        studentsLogic.resetStudentGoogleId(originalEmail, courseId);"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":713,"author":{"gitId":"-"},"content":""},{"lineNumber":714,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":715,"author":{"gitId":"-"},"content":"     * Regenerates the registration key for the instructor with email address {@code email} in course {@code courseId}."},{"lineNumber":716,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":717,"author":{"gitId":"-"},"content":"     * @return the instructor attributes with the new registration key."},{"lineNumber":718,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the newly generated instructor has the same registration key as the"},{"lineNumber":719,"author":{"gitId":"-"},"content":"     *          original one."},{"lineNumber":720,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the instructor does not exist."},{"lineNumber":721,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":722,"author":{"gitId":"-"},"content":"    public InstructorAttributes regenerateInstructorRegistrationKey(String courseId, String email)"},{"lineNumber":723,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":724,"author":{"gitId":"-"},"content":""},{"lineNumber":725,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":727,"author":{"gitId":"-"},"content":""},{"lineNumber":728,"author":{"gitId":"-"},"content":"        return instructorsLogic.regenerateInstructorRegistrationKey(courseId, email);"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":732,"author":{"gitId":"-"},"content":"     * Regenerates the registration key for the student with email address {@code email} in course {@code courseId}."},{"lineNumber":733,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":734,"author":{"gitId":"-"},"content":"     * @return the student attributes with the new registration key."},{"lineNumber":735,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the newly generated course student has the same registration key as the"},{"lineNumber":736,"author":{"gitId":"-"},"content":"     *          original one."},{"lineNumber":737,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the student does not exist."},{"lineNumber":738,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":739,"author":{"gitId":"-"},"content":"    public StudentAttributes regenerateStudentRegistrationKey(String courseId, String email)"},{"lineNumber":740,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":743,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":744,"author":{"gitId":"-"},"content":""},{"lineNumber":745,"author":{"gitId":"-"},"content":"        return studentsLogic.regenerateStudentRegistrationKey(courseId, email);"},{"lineNumber":746,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":747,"author":{"gitId":"-"},"content":""},{"lineNumber":748,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":749,"author":{"gitId":"-"},"content":"     * Resets the associated googleId of an instructor."},{"lineNumber":750,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":751,"author":{"gitId":"-"},"content":"    public void resetInstructorGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        assert originalEmail !\u003d null;"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":754,"author":{"gitId":"-"},"content":""},{"lineNumber":755,"author":{"gitId":"-"},"content":"        instructorsLogic.resetInstructorGoogleId(originalEmail, courseId);"},{"lineNumber":756,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":757,"author":{"gitId":"-"},"content":""},{"lineNumber":758,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":759,"author":{"gitId":"-"},"content":"     * Creates a student."},{"lineNumber":760,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":761,"author":{"gitId":"-"},"content":"     * @return the created student."},{"lineNumber":762,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the student is not valid."},{"lineNumber":763,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the student already exists in the database."},{"lineNumber":764,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":765,"author":{"gitId":"-"},"content":"    public StudentAttributes createStudent(StudentAttributes student)"},{"lineNumber":766,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"        assert student.getCourse() !\u003d null;"},{"lineNumber":768,"author":{"gitId":"-"},"content":"        assert student.getEmail() !\u003d null;"},{"lineNumber":769,"author":{"gitId":"-"},"content":""},{"lineNumber":770,"author":{"gitId":"-"},"content":"        return studentsLogic.createStudent(student);"},{"lineNumber":771,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":772,"author":{"gitId":"-"},"content":""},{"lineNumber":773,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":774,"author":{"gitId":"-"},"content":"     * Updates a student by {@link StudentAttributes.UpdateOptions}."},{"lineNumber":775,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":776,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf email changed, update by recreating the student and cascade update all responses"},{"lineNumber":777,"author":{"gitId":"-"},"content":"     * the student gives/receives as well as any deadline extensions given to the student."},{"lineNumber":778,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":779,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf team changed, cascade delete all responses the student gives/receives within that team."},{"lineNumber":780,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":781,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf section changed, cascade update all responses the student gives/receives."},{"lineNumber":782,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":783,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":784,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":785,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":786,"author":{"gitId":"-"},"content":"     * @return updated student"},{"lineNumber":787,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":788,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the student cannot be found"},{"lineNumber":789,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the student cannot be updated"},{"lineNumber":790,"author":{"gitId":"-"},"content":"     *         by recreation because of an existent student"},{"lineNumber":791,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":792,"author":{"gitId":"-"},"content":"    public StudentAttributes updateStudentCascade(StudentAttributes.UpdateOptions updateOptions)"},{"lineNumber":793,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":794,"author":{"gitId":"-"},"content":""},{"lineNumber":795,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":796,"author":{"gitId":"-"},"content":""},{"lineNumber":797,"author":{"gitId":"-"},"content":"        return studentsLogic.updateStudentCascade(updateOptions);"},{"lineNumber":798,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":799,"author":{"gitId":"-"},"content":""},{"lineNumber":800,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":801,"author":{"gitId":"-"},"content":"     * Make the student join the course, i.e. associate the Google ID to the student.\u003cbr\u003e"},{"lineNumber":802,"author":{"gitId":"-"},"content":"     * Create an account for the student if no existing account is found."},{"lineNumber":803,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":804,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":805,"author":{"gitId":"-"},"content":"     * @param key the registration key"},{"lineNumber":806,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    public StudentAttributes joinCourseForStudent(String key, String googleId)"},{"lineNumber":808,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"-"},"content":"        assert googleId !\u003d null;"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        assert key !\u003d null;"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"        return accountsLogic.joinCourseForStudent(key, googleId);"},{"lineNumber":814,"author":{"gitId":"-"},"content":""},{"lineNumber":815,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":816,"author":{"gitId":"-"},"content":""},{"lineNumber":817,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getUnregisteredStudentsForCourse(String courseId) {"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":819,"author":{"gitId":"-"},"content":"        return studentsLogic.getUnregisteredStudentsForCourse(courseId);"},{"lineNumber":820,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":821,"author":{"gitId":"-"},"content":""},{"lineNumber":822,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":823,"author":{"gitId":"-"},"content":"     * Checks whether an instructor has attempted a feedback session."},{"lineNumber":824,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":825,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf there is no question for instructors, the feedback session is considered as attempted.\u003c/p\u003e"},{"lineNumber":826,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    public boolean isFeedbackSessionAttemptedByInstructor(FeedbackSessionAttributes fsa, String userEmail) {"},{"lineNumber":828,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":829,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":830,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.isFeedbackSessionAttemptedByInstructor(fsa, userEmail);"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":834,"author":{"gitId":"-"},"content":"     * Checks whether a student has attempted a feedback session."},{"lineNumber":835,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":836,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf there is no question for students, the feedback session is considered as attempted.\u003c/p\u003e"},{"lineNumber":837,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":838,"author":{"gitId":"-"},"content":"    public boolean isFeedbackSessionAttemptedByStudent(FeedbackSessionAttributes fsa, String userEmail, String userTeam) {"},{"lineNumber":839,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":840,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":841,"author":{"gitId":"-"},"content":"        assert userTeam !\u003d null;"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.isFeedbackSessionAttemptedByStudent(fsa, userEmail, userTeam);"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":844,"author":{"gitId":"-"},"content":""},{"lineNumber":845,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":846,"author":{"gitId":"-"},"content":"     * Deletes a student cascade its associated feedback responses, deadline extensions and comments."},{"lineNumber":847,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":848,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if the student does not exist."},{"lineNumber":849,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":850,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":851,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":852,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":853,"author":{"gitId":"-"},"content":"    public void deleteStudentCascade(String courseId, String studentEmail) {"},{"lineNumber":854,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":855,"author":{"gitId":"-"},"content":"        assert studentEmail !\u003d null;"},{"lineNumber":856,"author":{"gitId":"-"},"content":""},{"lineNumber":857,"author":{"gitId":"-"},"content":"        studentsLogic.deleteStudentCascade(courseId, studentEmail);"},{"lineNumber":858,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":859,"author":{"gitId":"-"},"content":""},{"lineNumber":860,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":861,"author":{"gitId":"-"},"content":"     * Deletes all the students in the course cascade their associated responses, deadline extensions and comments."},{"lineNumber":862,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":863,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":864,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":865,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":866,"author":{"gitId":"-"},"content":"    public void deleteStudentsInCourseCascade(String courseId, int batchSize) {"},{"lineNumber":867,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":868,"author":{"gitId":"-"},"content":""},{"lineNumber":869,"author":{"gitId":"-"},"content":"        studentsLogic.deleteStudentsInCourseCascade(courseId, batchSize);"},{"lineNumber":870,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":871,"author":{"gitId":"-"},"content":""},{"lineNumber":872,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":873,"author":{"gitId":"-"},"content":"     * Validates sections for any limit violations and teams for any team name violations."},{"lineNumber":874,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":875,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":876,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":877,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":878,"author":{"gitId":"-"},"content":"     * @see StudentsLogic#validateSectionsAndTeams(List, String)"},{"lineNumber":879,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":880,"author":{"gitId":"-"},"content":"    public void validateSectionsAndTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"},{"lineNumber":881,"author":{"gitId":"-"},"content":""},{"lineNumber":882,"author":{"gitId":"-"},"content":"        assert studentList !\u003d null;"},{"lineNumber":883,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":884,"author":{"gitId":"-"},"content":""},{"lineNumber":885,"author":{"gitId":"-"},"content":"        studentsLogic.validateSectionsAndTeams(studentList, courseId);"},{"lineNumber":886,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":887,"author":{"gitId":"-"},"content":""},{"lineNumber":888,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":889,"author":{"gitId":"-"},"content":"     * Gets all students of a team."},{"lineNumber":890,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":891,"author":{"gitId":"-"},"content":"    public List\u003cStudentAttributes\u003e getStudentsForTeam(String teamName, String courseId) {"},{"lineNumber":892,"author":{"gitId":"-"},"content":"        assert teamName !\u003d null;"},{"lineNumber":893,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":894,"author":{"gitId":"-"},"content":""},{"lineNumber":895,"author":{"gitId":"-"},"content":"        return studentsLogic.getStudentsForTeam(teamName, courseId);"},{"lineNumber":896,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":897,"author":{"gitId":"-"},"content":""},{"lineNumber":898,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":899,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given student."},{"lineNumber":900,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":901,"author":{"gitId":"-"},"content":"     * @see StudentsLogic#putDocument(StudentAttributes)"},{"lineNumber":902,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":903,"author":{"gitId":"-"},"content":"    public void putStudentDocument(StudentAttributes student) throws SearchServiceException {"},{"lineNumber":904,"author":{"gitId":"-"},"content":"        studentsLogic.putDocument(student);"},{"lineNumber":905,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":906,"author":{"gitId":"-"},"content":""},{"lineNumber":907,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":908,"author":{"gitId":"-"},"content":"     * Creates a feedback session."},{"lineNumber":909,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":910,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":911,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":912,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":913,"author":{"gitId":"-"},"content":"     * @return created feedback session"},{"lineNumber":914,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the session is not valid"},{"lineNumber":915,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the session already exist"},{"lineNumber":916,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":917,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes createFeedbackSession(FeedbackSessionAttributes feedbackSession)"},{"lineNumber":918,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":919,"author":{"gitId":"-"},"content":"        assert feedbackSession !\u003d null;"},{"lineNumber":920,"author":{"gitId":"-"},"content":""},{"lineNumber":921,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.createFeedbackSession(feedbackSession);"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":923,"author":{"gitId":"-"},"content":""},{"lineNumber":924,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":925,"author":{"gitId":"-"},"content":"     * Gets a feedback session from the data storage."},{"lineNumber":926,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":927,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":928,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":929,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":930,"author":{"gitId":"-"},"content":"     * @return null if not found or in recycle bin."},{"lineNumber":931,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":932,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"},{"lineNumber":933,"author":{"gitId":"-"},"content":""},{"lineNumber":934,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":935,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":936,"author":{"gitId":"-"},"content":""},{"lineNumber":937,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":938,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":939,"author":{"gitId":"-"},"content":""},{"lineNumber":940,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":941,"author":{"gitId":"-"},"content":"     * Gets a feedback session from the recycle bin."},{"lineNumber":942,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":943,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":944,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":945,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":946,"author":{"gitId":"-"},"content":"     * @return null if not found."},{"lineNumber":947,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":948,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId) {"},{"lineNumber":949,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":950,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":951,"author":{"gitId":"-"},"content":""},{"lineNumber":952,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":953,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":954,"author":{"gitId":"-"},"content":""},{"lineNumber":955,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":956,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":957,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":958,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":959,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse(String courseId) {"},{"lineNumber":960,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":961,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsForCourse(courseId);"},{"lineNumber":962,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":963,"author":{"gitId":"-"},"content":""},{"lineNumber":964,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":965,"author":{"gitId":"-"},"content":"     * Gets the expected number of submissions for a feedback session."},{"lineNumber":966,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":967,"author":{"gitId":"-"},"content":"     * \u003cbr\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":968,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":969,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":970,"author":{"gitId":"-"},"content":"    public int getExpectedTotalSubmission(FeedbackSessionAttributes fsa) {"},{"lineNumber":971,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":972,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getExpectedTotalSubmission(fsa);"},{"lineNumber":973,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":974,"author":{"gitId":"-"},"content":""},{"lineNumber":975,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":976,"author":{"gitId":"-"},"content":"     * Gets the actual number of submissions for a feedback session."},{"lineNumber":977,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":978,"author":{"gitId":"-"},"content":"     * \u003cbr\u003ePreconditions: \u003cbr\u003e"},{"lineNumber":979,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":980,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":981,"author":{"gitId":"-"},"content":"    public int getActualTotalSubmission(FeedbackSessionAttributes fsa) {"},{"lineNumber":982,"author":{"gitId":"-"},"content":"        assert fsa !\u003d null;"},{"lineNumber":983,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getActualTotalSubmission(fsa);"},{"lineNumber":984,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":985,"author":{"gitId":"-"},"content":""},{"lineNumber":986,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":987,"author":{"gitId":"-"},"content":"     * Gets a list of feedback sessions for instructors."},{"lineNumber":988,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":989,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("},{"lineNumber":990,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":991,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":992,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(instructorList);"},{"lineNumber":993,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":994,"author":{"gitId":"-"},"content":""},{"lineNumber":995,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":996,"author":{"gitId":"-"},"content":"     * Returns a {@code List} of feedback sessions in the Recycle Bin for the instructors."},{"lineNumber":997,"author":{"gitId":"-"},"content":"     * \u003cbr\u003e"},{"lineNumber":998,"author":{"gitId":"-"},"content":"     * Omits sessions if the corresponding courses are archived or in Recycle Bin"},{"lineNumber":999,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructors("},{"lineNumber":1001,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList) {"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"        assert instructorList !\u003d null;"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructors(instructorList);"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1005,"author":{"gitId":"-"},"content":""},{"lineNumber":1006,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"     * Gets the recipients of a feedback question for student."},{"lineNumber":1008,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"     * @see FeedbackQuestionsLogic#getRecipientsOfQuestion"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"    public Map\u003cString, String\u003e getRecipientsOfQuestion("},{"lineNumber":1012,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question,"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"            @Nullable InstructorAttributes instructorGiver, @Nullable StudentAttributes studentGiver) {"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":1015,"author":{"gitId":"-"},"content":""},{"lineNumber":1016,"author":{"gitId":"-"},"content":"        // we do not supply course roster here"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getRecipientsOfQuestion(question, instructorGiver, studentGiver, null);"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1019,"author":{"gitId":"-"},"content":""},{"lineNumber":1020,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"     * * All parameters are non-null. \u003cbr\u003e"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackQuestionId) {"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"        assert feedbackQuestionId !\u003d null;"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackQuestionId);"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1029,"author":{"gitId":"-"},"content":""},{"lineNumber":1030,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"     * Gets a list of all questions for the given session that"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"     * students can view/submit."},{"lineNumber":1033,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForStudents("},{"lineNumber":1035,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId) {"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1038,"author":{"gitId":"-"},"content":""},{"lineNumber":1039,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForStudents(feedbackSessionName, courseId);"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1041,"author":{"gitId":"-"},"content":""},{"lineNumber":1042,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"     * Gets a {@code List} of all questions for the given session that"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"     * instructor can view/submit."},{"lineNumber":1045,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForInstructors("},{"lineNumber":1047,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String instructorEmail) {"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1050,"author":{"gitId":"-"},"content":""},{"lineNumber":1051,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForInstructors(feedbackSessionName, courseId, instructorEmail);"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1053,"author":{"gitId":"-"},"content":""},{"lineNumber":1054,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"     * Updates the details of a feedback session by {@link FeedbackSessionAttributes.UpdateOptions}."},{"lineNumber":1056,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAdjust email sending status if necessary."},{"lineNumber":1058,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1061,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"     * @return updated feedback session"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes updateFeedbackSession(FeedbackSessionAttributes.UpdateOptions updateOptions)"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1069,"author":{"gitId":"-"},"content":""},{"lineNumber":1070,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.updateFeedbackSession(updateOptions);"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1072,"author":{"gitId":"-"},"content":""},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"     * Publishes a feedback session."},{"lineNumber":1075,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1078,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"     * @return the published feedback session"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if session is already published"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes publishFeedbackSession(String feedbackSessionName, String courseId)"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1085,"author":{"gitId":"-"},"content":""},{"lineNumber":1086,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1088,"author":{"gitId":"-"},"content":""},{"lineNumber":1089,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.publishFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1091,"author":{"gitId":"-"},"content":""},{"lineNumber":1092,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"     * Unpublishes a feedback session."},{"lineNumber":1094,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1097,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"     * @return the unpublished feedback session"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback session cannot be found"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"     *             if the feedback session is not ready to be unpublished."},{"lineNumber":1102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes unpublishFeedbackSession(String feedbackSessionName, String courseId)"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1105,"author":{"gitId":"-"},"content":""},{"lineNumber":1106,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1108,"author":{"gitId":"-"},"content":""},{"lineNumber":1109,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.unpublishFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1111,"author":{"gitId":"-"},"content":""},{"lineNumber":1112,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"     * Deletes a feedback session cascade to its associated questions, responses, deadline extensions and comments."},{"lineNumber":1114,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"    public void deleteFeedbackSessionCascade(String feedbackSessionName, String courseId) {"},{"lineNumber":1119,"author":{"gitId":"-"},"content":""},{"lineNumber":1120,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1122,"author":{"gitId":"-"},"content":""},{"lineNumber":1123,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.deleteFeedbackSessionCascade(feedbackSessionName, courseId);"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1125,"author":{"gitId":"-"},"content":""},{"lineNumber":1126,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"     * Soft-deletes a specific session to Recycle Bin."},{"lineNumber":1128,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"    public void moveFeedbackSessionToRecycleBin(String feedbackSessionName, String courseId)"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":1131,"author":{"gitId":"-"},"content":""},{"lineNumber":1132,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1134,"author":{"gitId":"-"},"content":""},{"lineNumber":1135,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1137,"author":{"gitId":"-"},"content":""},{"lineNumber":1138,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"     * Restores a specific session from Recycle Bin to feedback sessions table."},{"lineNumber":1140,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"    public void restoreFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId)"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":1143,"author":{"gitId":"-"},"content":""},{"lineNumber":1144,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1146,"author":{"gitId":"-"},"content":""},{"lineNumber":1147,"author":{"gitId":"-"},"content":"        feedbackSessionsLogic.restoreFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1149,"author":{"gitId":"-"},"content":""},{"lineNumber":1150,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"     * Creates a new feedback question."},{"lineNumber":1152,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1155,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"     * @return the created question"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the question is invalid"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes createFeedbackQuestion(FeedbackQuestionAttributes feedbackQuestion)"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"        assert feedbackQuestion !\u003d null;"},{"lineNumber":1162,"author":{"gitId":"-"},"content":""},{"lineNumber":1163,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.createFeedbackQuestion(feedbackQuestion);"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1165,"author":{"gitId":"-"},"content":""},{"lineNumber":1166,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"     * Updates a feedback question by {@code FeedbackQuestionAttributes.UpdateOptions}."},{"lineNumber":1168,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the question number of questions in the same session."},{"lineNumber":1170,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the existing response of the question."},{"lineNumber":1172,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1175,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"     * @return updated feedback question"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback question cannot be found"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes updateFeedbackQuestionCascade(FeedbackQuestionAttributes.UpdateOptions updateOptions)"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1183,"author":{"gitId":"-"},"content":""},{"lineNumber":1184,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.updateFeedbackQuestionCascade(updateOptions);"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1186,"author":{"gitId":"-"},"content":""},{"lineNumber":1187,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"     * Deletes a feedback question cascade its responses and comments."},{"lineNumber":1189,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"     * \u003cp\u003eSilently fail if question does not exist."},{"lineNumber":1191,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1194,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"    public void deleteFeedbackQuestionCascade(String questionId) {"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"        assert questionId !\u003d null;"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"        feedbackQuestionsLogic.deleteFeedbackQuestionCascade(questionId);"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1199,"author":{"gitId":"-"},"content":""},{"lineNumber":1200,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"     * Checks whether there are responses for a question."},{"lineNumber":1202,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1205,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.areThereResponsesForQuestion(feedbackQuestionId);"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1209,"author":{"gitId":"-"},"content":""},{"lineNumber":1210,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"     * Gets all questions for a feedback session.\u003cbr\u003e"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"     * Returns an empty list if they are no questions"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"     * for the session."},{"lineNumber":1214,"author":{"gitId":"-"},"content":"     * Preconditions: \u003cbr\u003e"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1216,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForSession(String feedbackSessionName, String courseId) {"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1220,"author":{"gitId":"-"},"content":""},{"lineNumber":1221,"author":{"gitId":"-"},"content":"        return feedbackQuestionsLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1223,"author":{"gitId":"-"},"content":""},{"lineNumber":1224,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"     * Gets a set of giver identifiers that has at least one response under a feedback session."},{"lineNumber":1226,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1230,"author":{"gitId":"-"},"content":""},{"lineNumber":1231,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName);"},{"lineNumber":1232,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1233,"author":{"gitId":"-"},"content":""},{"lineNumber":1234,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session."},{"lineNumber":1236,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1237,"author":{"gitId":"-"},"content":"     * @see FeedbackResponsesLogic#getSessionResultsForCourse(String, String, String, String, String)"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForCourse("},{"lineNumber":1240,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail,"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"            @Nullable String questionId, @Nullable String section) {"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1245,"author":{"gitId":"-"},"content":""},{"lineNumber":1246,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getSessionResultsForCourse("},{"lineNumber":1247,"author":{"gitId":"-"},"content":"                feedbackSessionName, courseId, userEmail, questionId, section);"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1249,"author":{"gitId":"-"},"content":""},{"lineNumber":1250,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session for the given user."},{"lineNumber":1252,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"     * @see FeedbackResponsesLogic#getSessionResultsForUser(String, String, String, boolean, String)"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1255,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForUser("},{"lineNumber":1256,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail, boolean isInstructor,"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"            @Nullable String questionId) {"},{"lineNumber":1258,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1261,"author":{"gitId":"-"},"content":""},{"lineNumber":1262,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getSessionResultsForUser("},{"lineNumber":1263,"author":{"gitId":"-"},"content":"                feedbackSessionName, courseId, userEmail, isInstructor, questionId);"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1265,"author":{"gitId":"-"},"content":""},{"lineNumber":1266,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"     * Get existing feedback responses from student or his team for the given question."},{"lineNumber":1268,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromStudentOrTeamForQuestion("},{"lineNumber":1270,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, StudentAttributes student) {"},{"lineNumber":1271,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"        assert student !\u003d null;"},{"lineNumber":1273,"author":{"gitId":"-"},"content":""},{"lineNumber":1274,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponsesFromStudentOrTeamForQuestion(question, student);"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1276,"author":{"gitId":"-"},"content":""},{"lineNumber":1277,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"     * Get existing feedback responses from instructor for the given question."},{"lineNumber":1279,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1280,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromInstructorForQuestion("},{"lineNumber":1281,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, InstructorAttributes instructorAttributes) {"},{"lineNumber":1282,"author":{"gitId":"-"},"content":"        assert question !\u003d null;"},{"lineNumber":1283,"author":{"gitId":"-"},"content":"        assert instructorAttributes !\u003d null;"},{"lineNumber":1284,"author":{"gitId":"-"},"content":""},{"lineNumber":1285,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":1286,"author":{"gitId":"-"},"content":"                question.getFeedbackQuestionId(), instructorAttributes.getEmail());"},{"lineNumber":1287,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1288,"author":{"gitId":"-"},"content":""},{"lineNumber":1289,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes getFeedbackResponse(String feedbackResponseId) {"},{"lineNumber":1290,"author":{"gitId":"-"},"content":"        assert feedbackResponseId !\u003d null;"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.getFeedbackResponse(feedbackResponseId);"},{"lineNumber":1292,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1293,"author":{"gitId":"-"},"content":""},{"lineNumber":1294,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"     * Creates a feedback response."},{"lineNumber":1296,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1297,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1298,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1299,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"     * @return created feedback response"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the response is not valid"},{"lineNumber":1302,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response already exist"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1304,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes createFeedbackResponse(FeedbackResponseAttributes feedbackResponse)"},{"lineNumber":1305,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"        assert feedbackResponse !\u003d null;"},{"lineNumber":1307,"author":{"gitId":"-"},"content":""},{"lineNumber":1308,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.createFeedbackResponse(feedbackResponse);"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1310,"author":{"gitId":"-"},"content":""},{"lineNumber":1311,"author":{"gitId":"-"},"content":"    public boolean hasResponsesForCourse(String courseId) {"},{"lineNumber":1312,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.hasResponsesForCourse(courseId);"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1314,"author":{"gitId":"-"},"content":""},{"lineNumber":1315,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"     * Updates a feedback response by {@link FeedbackResponseAttributes.UpdateOptions}."},{"lineNumber":1317,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade updates its associated feedback response comment"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"     * (e.g. associated response ID, giverSection and recipientSection)."},{"lineNumber":1320,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1321,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"     * as question-giver-recipient is the primary key."},{"lineNumber":1323,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1326,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1327,"author":{"gitId":"-"},"content":"     * @return updated feedback response"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the comment cannot be found"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response cannot be updated"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"     *         by recreation because of an existent response"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes updateFeedbackResponseCascade(FeedbackResponseAttributes.UpdateOptions updateOptions)"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1336,"author":{"gitId":"-"},"content":""},{"lineNumber":1337,"author":{"gitId":"-"},"content":"        return feedbackResponsesLogic.updateFeedbackResponseCascade(updateOptions);"},{"lineNumber":1338,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1339,"author":{"gitId":"-"},"content":""},{"lineNumber":1340,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1341,"author":{"gitId":"-"},"content":"     * Deletes a feedback response cascade its associated comments."},{"lineNumber":1342,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1343,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1344,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1345,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponseCascade(String responseId) {"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"        assert responseId !\u003d null;"},{"lineNumber":1348,"author":{"gitId":"-"},"content":"        feedbackResponsesLogic.deleteFeedbackResponseCascade(responseId);"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1350,"author":{"gitId":"-"},"content":""},{"lineNumber":1351,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1352,"author":{"gitId":"-"},"content":"     * Create a feedback response comment, and return the created comment."},{"lineNumber":1353,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1356,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1357,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes createFeedbackResponseComment("},{"lineNumber":1358,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes feedbackResponseComment)"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":1360,"author":{"gitId":"-"},"content":"        assert feedbackResponseComment !\u003d null;"},{"lineNumber":1361,"author":{"gitId":"-"},"content":""},{"lineNumber":1362,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.createFeedbackResponseComment(feedbackResponseComment);"},{"lineNumber":1363,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1364,"author":{"gitId":"-"},"content":""},{"lineNumber":1365,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseComment(Long feedbackResponseCommentId) {"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"        assert feedbackResponseCommentId !\u003d null;"},{"lineNumber":1367,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.getFeedbackResponseComment(feedbackResponseCommentId);"},{"lineNumber":1368,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1369,"author":{"gitId":"-"},"content":""},{"lineNumber":1370,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"     * Gets comment associated with the response."},{"lineNumber":1372,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThe comment is given by a feedback participant to explain the response\u003c/p\u003e"},{"lineNumber":1374,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1375,"author":{"gitId":"-"},"content":"     * @param feedbackResponseId the response id"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseCommentForResponseFromParticipant("},{"lineNumber":1378,"author":{"gitId":"-"},"content":"            String feedbackResponseId) {"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"        assert feedbackResponseId !\u003d null;"},{"lineNumber":1380,"author":{"gitId":"-"},"content":""},{"lineNumber":1381,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.getFeedbackResponseCommentForResponseFromParticipant(feedbackResponseId);"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1383,"author":{"gitId":"-"},"content":""},{"lineNumber":1384,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1385,"author":{"gitId":"-"},"content":"     * Updates a feedback response comment by {@link FeedbackResponseCommentAttributes.UpdateOptions}."},{"lineNumber":1386,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"},{"lineNumber":1388,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1389,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1390,"author":{"gitId":"-"},"content":"     * @return updated comment"},{"lineNumber":1391,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the comment cannot be found"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes updateFeedbackResponseComment("},{"lineNumber":1395,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes.UpdateOptions updateOptions)"},{"lineNumber":1396,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":1397,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1398,"author":{"gitId":"-"},"content":""},{"lineNumber":1399,"author":{"gitId":"-"},"content":"        return feedbackResponseCommentsLogic.updateFeedbackResponseComment(updateOptions);"},{"lineNumber":1400,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1401,"author":{"gitId":"-"},"content":""},{"lineNumber":1402,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1403,"author":{"gitId":"-"},"content":"     * Deletes a comment."},{"lineNumber":1404,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1405,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponseComment(long commentId) {"},{"lineNumber":1406,"author":{"gitId":"-"},"content":"        feedbackResponseCommentsLogic.deleteFeedbackResponseComment(commentId);"},{"lineNumber":1407,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1408,"author":{"gitId":"-"},"content":""},{"lineNumber":1409,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1410,"author":{"gitId":"-"},"content":"     * Returns returns a list of sessions that were closed within past hour."},{"lineNumber":1411,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1412,"author":{"gitId":"-"},"content":"     * @see FeedbackSessionsLogic#getFeedbackSessionsClosedWithinThePastHour()"},{"lineNumber":1413,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1414,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"},{"lineNumber":1415,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsClosedWithinThePastHour();"},{"lineNumber":1416,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1417,"author":{"gitId":"-"},"content":""},{"lineNumber":1418,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"},{"lineNumber":1419,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsClosingWithinTimeLimit();"},{"lineNumber":1420,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1421,"author":{"gitId":"-"},"content":""},{"lineNumber":1422,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsOpeningWithinTimeLimit() {"},{"lineNumber":1423,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsOpeningWithinTimeLimit();"},{"lineNumber":1424,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1425,"author":{"gitId":"-"},"content":""},{"lineNumber":1426,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1427,"author":{"gitId":"-"},"content":"     * Returns a list of sessions that require automated emails to be sent as they are published."},{"lineNumber":1428,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1429,"author":{"gitId":"-"},"content":"     * @see FeedbackSessionsLogic#getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent()"},{"lineNumber":1430,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1431,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"},{"lineNumber":1432,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"},{"lineNumber":1433,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1434,"author":{"gitId":"-"},"content":""},{"lineNumber":1435,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"},{"lineNumber":1436,"author":{"gitId":"-"},"content":"        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"},{"lineNumber":1437,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1438,"author":{"gitId":"-"},"content":""},{"lineNumber":1439,"author":{"gitId":"-"},"content":"    public String getSectionForTeam(String courseId, String teamName) {"},{"lineNumber":1440,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1441,"author":{"gitId":"-"},"content":"        assert teamName !\u003d null;"},{"lineNumber":1442,"author":{"gitId":"-"},"content":"        return studentsLogic.getSectionForTeam(courseId, teamName);"},{"lineNumber":1443,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1444,"author":{"gitId":"-"},"content":""},{"lineNumber":1445,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1446,"author":{"gitId":"-"},"content":"     * Persists the given data bundle to the database."},{"lineNumber":1447,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1448,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#persistDataBundle(DataBundle)"},{"lineNumber":1449,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1450,"author":{"gitId":"-"},"content":"    public DataBundle persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"},{"lineNumber":1451,"author":{"gitId":"-"},"content":"        return dataBundleLogic.persistDataBundle(dataBundle);"},{"lineNumber":1452,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1453,"author":{"gitId":"-"},"content":""},{"lineNumber":1454,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1455,"author":{"gitId":"-"},"content":"     * Removes the given data bundle from the database."},{"lineNumber":1456,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1457,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#removeDataBundle(DataBundle)"},{"lineNumber":1458,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1459,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":1460,"author":{"gitId":"-"},"content":"        dataBundleLogic.removeDataBundle(dataBundle);"},{"lineNumber":1461,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1462,"author":{"gitId":"-"},"content":""},{"lineNumber":1463,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1464,"author":{"gitId":"-"},"content":"     * Puts searchable documents from the data bundle to the database."},{"lineNumber":1465,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1466,"author":{"gitId":"-"},"content":"     * @see DataBundleLogic#putDocuments(DataBundle)"},{"lineNumber":1467,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1468,"author":{"gitId":"-"},"content":"    public void putDocuments(DataBundle dataBundle) throws SearchServiceException {"},{"lineNumber":1469,"author":{"gitId":"-"},"content":"        dataBundleLogic.putDocuments(dataBundle);"},{"lineNumber":1470,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1471,"author":{"gitId":"-"},"content":""},{"lineNumber":1472,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1473,"author":{"gitId":"-"},"content":"     * Verifies that all the given students exist in the given course."},{"lineNumber":1474,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1475,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1476,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1477,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1478,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException If some student does not exist in the course."},{"lineNumber":1479,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1480,"author":{"gitId":"-"},"content":"    public void verifyAllStudentsExistInCourse(String courseId, Collection\u003cString\u003e studentEmailAddresses)"},{"lineNumber":1481,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":1482,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1483,"author":{"gitId":"-"},"content":"        assert studentEmailAddresses !\u003d null;"},{"lineNumber":1484,"author":{"gitId":"-"},"content":""},{"lineNumber":1485,"author":{"gitId":"-"},"content":"        studentsLogic.verifyAllStudentsExistInCourse(courseId, studentEmailAddresses);"},{"lineNumber":1486,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1487,"author":{"gitId":"-"},"content":""},{"lineNumber":1488,"author":{"gitId":"-"},"content":"    public boolean isStudentsInSameTeam(String courseId, String student1Email, String student2Email) {"},{"lineNumber":1489,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1490,"author":{"gitId":"-"},"content":"        assert student1Email !\u003d null;"},{"lineNumber":1491,"author":{"gitId":"-"},"content":"        assert student2Email !\u003d null;"},{"lineNumber":1492,"author":{"gitId":"-"},"content":"        return studentsLogic.isStudentsInSameTeam(courseId, student1Email, student2Email);"},{"lineNumber":1493,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1494,"author":{"gitId":"-"},"content":""},{"lineNumber":1495,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1496,"author":{"gitId":"-"},"content":"     * Creates an account request."},{"lineNumber":1497,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1498,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1499,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1500,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1501,"author":{"gitId":"-"},"content":"     * @return the created account request"},{"lineNumber":1502,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":1503,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the account request already exists"},{"lineNumber":1504,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1505,"author":{"gitId":"-"},"content":"    public AccountRequestAttributes createAccountRequest(AccountRequestAttributes accountRequest)"},{"lineNumber":1506,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":1507,"author":{"gitId":"-"},"content":"        assert accountRequest !\u003d null;"},{"lineNumber":1508,"author":{"gitId":"-"},"content":""},{"lineNumber":1509,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.createAccountRequest(accountRequest);"},{"lineNumber":1510,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1511,"author":{"gitId":"-"},"content":""},{"lineNumber":1512,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1513,"author":{"gitId":"-"},"content":"     * Updates an account request."},{"lineNumber":1514,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1515,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1516,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1517,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1518,"author":{"gitId":"-"},"content":"     * @return the updated account request"},{"lineNumber":1519,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the account request is not valid"},{"lineNumber":1520,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the account request to update does not exist"},{"lineNumber":1521,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1522,"author":{"gitId":"-"},"content":"    public AccountRequestAttributes updateAccountRequest(AccountRequestAttributes.UpdateOptions updateOptions)"},{"lineNumber":1523,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1524,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1525,"author":{"gitId":"-"},"content":""},{"lineNumber":1526,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.updateAccountRequest(updateOptions);"},{"lineNumber":1527,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1528,"author":{"gitId":"-"},"content":""},{"lineNumber":1529,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1530,"author":{"gitId":"-"},"content":"     * Deletes an account request."},{"lineNumber":1531,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1532,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1533,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1534,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1535,"author":{"gitId":"-"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":1536,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":1537,"author":{"gitId":"-"},"content":""},{"lineNumber":1538,"author":{"gitId":"-"},"content":"        accountRequestsLogic.deleteAccountRequest(email, institute);"},{"lineNumber":1539,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1540,"author":{"gitId":"-"},"content":""},{"lineNumber":1541,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1542,"author":{"gitId":"-"},"content":"     * Gets an account request by unique constraint {@code registrationKey}."},{"lineNumber":1543,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1544,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1545,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1546,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1547,"author":{"gitId":"-"},"content":"     * @return the account request"},{"lineNumber":1548,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1549,"author":{"gitId":"-"},"content":"    public AccountRequestAttributes getAccountRequestForRegistrationKey(String registrationKey) {"},{"lineNumber":1550,"author":{"gitId":"-"},"content":"        assert registrationKey !\u003d null;"},{"lineNumber":1551,"author":{"gitId":"-"},"content":""},{"lineNumber":1552,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.getAccountRequestForRegistrationKey(registrationKey);"},{"lineNumber":1553,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1554,"author":{"gitId":"-"},"content":""},{"lineNumber":1555,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1556,"author":{"gitId":"-"},"content":"     * Gets an account request by email address and institute."},{"lineNumber":1557,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1558,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1559,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1560,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1561,"author":{"gitId":"-"},"content":"     * @return the account request"},{"lineNumber":1562,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1563,"author":{"gitId":"-"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":1564,"author":{"gitId":"-"},"content":"        assert email !\u003d null;"},{"lineNumber":1565,"author":{"gitId":"-"},"content":"        assert institute !\u003d null;"},{"lineNumber":1566,"author":{"gitId":"-"},"content":""},{"lineNumber":1567,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.getAccountRequest(email, institute);"},{"lineNumber":1568,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1569,"author":{"gitId":"-"},"content":""},{"lineNumber":1570,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1571,"author":{"gitId":"-"},"content":"     * This is used by admin to search account requests in the whole system."},{"lineNumber":1572,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1573,"author":{"gitId":"-"},"content":"     * @return A list of {@link AccountRequestAttributes} or {@code null} if no match found."},{"lineNumber":1574,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1575,"author":{"gitId":"-"},"content":"    public List\u003cAccountRequestAttributes\u003e searchAccountRequestsInWholeSystem(String queryString)"},{"lineNumber":1576,"author":{"gitId":"-"},"content":"            throws SearchServiceException {"},{"lineNumber":1577,"author":{"gitId":"-"},"content":"        assert queryString !\u003d null;"},{"lineNumber":1578,"author":{"gitId":"-"},"content":""},{"lineNumber":1579,"author":{"gitId":"-"},"content":"        return accountRequestsLogic.searchAccountRequestsInWholeSystem(queryString);"},{"lineNumber":1580,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1581,"author":{"gitId":"-"},"content":""},{"lineNumber":1582,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1583,"author":{"gitId":"-"},"content":"     * Creates or updates search document for the given account request."},{"lineNumber":1584,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1585,"author":{"gitId":"-"},"content":"     * @see AccountRequestsLogic#putDocument(AccountRequestAttributes)"},{"lineNumber":1586,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1587,"author":{"gitId":"-"},"content":"    public void putAccountRequestDocument(AccountRequestAttributes accountRequest) throws SearchServiceException {"},{"lineNumber":1588,"author":{"gitId":"-"},"content":"        accountRequestsLogic.putDocument(accountRequest);"},{"lineNumber":1589,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1590,"author":{"gitId":"-"},"content":""},{"lineNumber":1591,"author":{"gitId":"-"},"content":"    public List\u003cUsageStatisticsAttributes\u003e getUsageStatisticsForTimeRange(Instant startTime, Instant endTime) {"},{"lineNumber":1592,"author":{"gitId":"-"},"content":"        assert startTime !\u003d null;"},{"lineNumber":1593,"author":{"gitId":"-"},"content":"        assert endTime !\u003d null;"},{"lineNumber":1594,"author":{"gitId":"-"},"content":"        assert startTime.toEpochMilli() \u003c endTime.toEpochMilli();"},{"lineNumber":1595,"author":{"gitId":"-"},"content":""},{"lineNumber":1596,"author":{"gitId":"-"},"content":"        return usageStatisticsLogic.getUsageStatisticsForTimeRange(startTime, endTime);"},{"lineNumber":1597,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1598,"author":{"gitId":"-"},"content":""},{"lineNumber":1599,"author":{"gitId":"-"},"content":"    public UsageStatisticsAttributes calculateEntitiesStatisticsForTimeRange(Instant startTime, Instant endTime) {"},{"lineNumber":1600,"author":{"gitId":"-"},"content":"        assert startTime !\u003d null;"},{"lineNumber":1601,"author":{"gitId":"-"},"content":"        assert endTime !\u003d null;"},{"lineNumber":1602,"author":{"gitId":"-"},"content":"        assert startTime.toEpochMilli() \u003c endTime.toEpochMilli();"},{"lineNumber":1603,"author":{"gitId":"-"},"content":"        return usageStatisticsLogic.calculateEntitiesStatisticsForTimeRange(startTime, endTime);"},{"lineNumber":1604,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1605,"author":{"gitId":"-"},"content":""},{"lineNumber":1606,"author":{"gitId":"-"},"content":"    public void createUsageStatistics(UsageStatisticsAttributes attributes)"},{"lineNumber":1607,"author":{"gitId":"-"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":1608,"author":{"gitId":"-"},"content":"        usageStatisticsLogic.createUsageStatistics(attributes);"},{"lineNumber":1609,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1610,"author":{"gitId":"-"},"content":""},{"lineNumber":1611,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1612,"author":{"gitId":"-"},"content":"     * Updates a deadline extension."},{"lineNumber":1613,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1614,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1615,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1616,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1617,"author":{"gitId":"-"},"content":"     * @return the updated deadline extension"},{"lineNumber":1618,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the updated deadline extension is not valid"},{"lineNumber":1619,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the deadline extension to update does not exist"},{"lineNumber":1620,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1621,"author":{"gitId":"-"},"content":"    public DeadlineExtensionAttributes updateDeadlineExtension(DeadlineExtensionAttributes.UpdateOptions updateOptions)"},{"lineNumber":1622,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":1623,"author":{"gitId":"-"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":1624,"author":{"gitId":"-"},"content":""},{"lineNumber":1625,"author":{"gitId":"-"},"content":"        return deadlineExtensionsLogic.updateDeadlineExtension(updateOptions);"},{"lineNumber":1626,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1627,"author":{"gitId":"-"},"content":""},{"lineNumber":1628,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1629,"author":{"gitId":"-"},"content":"     * Creates a deadline extension."},{"lineNumber":1630,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1631,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1632,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1633,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1634,"author":{"gitId":"-"},"content":"     * @return the created deadline extension"},{"lineNumber":1635,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the deadline extension is not valid"},{"lineNumber":1636,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the deadline extension to create already exists"},{"lineNumber":1637,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1638,"author":{"gitId":"-"},"content":"    public DeadlineExtensionAttributes createDeadlineExtension(DeadlineExtensionAttributes deadlineExtension)"},{"lineNumber":1639,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":1640,"author":{"gitId":"-"},"content":"        assert deadlineExtension !\u003d null;"},{"lineNumber":1641,"author":{"gitId":"-"},"content":""},{"lineNumber":1642,"author":{"gitId":"-"},"content":"        return deadlineExtensionsLogic.createDeadlineExtension(deadlineExtension);"},{"lineNumber":1643,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1644,"author":{"gitId":"-"},"content":""},{"lineNumber":1645,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1646,"author":{"gitId":"-"},"content":"     * Deletes a deadline extension."},{"lineNumber":1647,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1648,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1649,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1650,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1651,"author":{"gitId":"-"},"content":"     * \u003cp\u003eFails silently if the deadline extension doesn\u0027t exist.\u003c/p\u003e"},{"lineNumber":1652,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1653,"author":{"gitId":"-"},"content":"    public void deleteDeadlineExtension("},{"lineNumber":1654,"author":{"gitId":"-"},"content":"            String courseId, String feedbackSessionName, String userEmail, boolean isInstructor) {"},{"lineNumber":1655,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1656,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1657,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1658,"author":{"gitId":"-"},"content":""},{"lineNumber":1659,"author":{"gitId":"-"},"content":"        deadlineExtensionsLogic.deleteDeadlineExtension(courseId, feedbackSessionName, userEmail, isInstructor);"},{"lineNumber":1660,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1661,"author":{"gitId":"-"},"content":""},{"lineNumber":1662,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1663,"author":{"gitId":"-"},"content":"     * Gets a deadline extension by {@code courseId}, {@code feedbackSessionName},"},{"lineNumber":1664,"author":{"gitId":"-"},"content":"     * {@code userEmail} and {@code isInstructor}."},{"lineNumber":1665,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1666,"author":{"gitId":"-"},"content":"     * \u003cp\u003ePreconditions:\u003c/p\u003e"},{"lineNumber":1667,"author":{"gitId":"-"},"content":"     * * All parameters are non-null."},{"lineNumber":1668,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":1669,"author":{"gitId":"-"},"content":"     * @return the deadline extension if it exists, null otherwise"},{"lineNumber":1670,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1671,"author":{"gitId":"-"},"content":"    public DeadlineExtensionAttributes getDeadlineExtension("},{"lineNumber":1672,"author":{"gitId":"-"},"content":"            String courseId, String feedbackSessionName, String userEmail, boolean isInstructor) {"},{"lineNumber":1673,"author":{"gitId":"-"},"content":"        assert courseId !\u003d null;"},{"lineNumber":1674,"author":{"gitId":"-"},"content":"        assert feedbackSessionName !\u003d null;"},{"lineNumber":1675,"author":{"gitId":"-"},"content":"        assert userEmail !\u003d null;"},{"lineNumber":1676,"author":{"gitId":"-"},"content":""},{"lineNumber":1677,"author":{"gitId":"-"},"content":"        return deadlineExtensionsLogic.getDeadlineExtension(courseId, feedbackSessionName, userEmail, isInstructor);"},{"lineNumber":1678,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1679,"author":{"gitId":"-"},"content":""},{"lineNumber":1680,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1681,"author":{"gitId":"-"},"content":"     * Gets a list of deadline extensions with end time within the next 24 hours"},{"lineNumber":1682,"author":{"gitId":"-"},"content":"     * and possibly need a closing email to be sent."},{"lineNumber":1683,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1684,"author":{"gitId":"-"},"content":"    public List\u003cDeadlineExtensionAttributes\u003e getDeadlineExtensionsPossiblyNeedingClosingEmail() {"},{"lineNumber":1685,"author":{"gitId":"-"},"content":"        return deadlineExtensionsLogic.getDeadlineExtensionsPossiblyNeedingClosingEmail();"},{"lineNumber":1686,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1687,"author":{"gitId":"-"},"content":""},{"lineNumber":1688,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":9,"-":1628,"Nicolascwy":51}},{"path":"src/main/java/teammates/logic/api/LogsProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.QueryLogsResults;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.GeneralLogEntry;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogEvent;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.QueryLogsParams;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.GoogleCloudLoggingService;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.LocalLoggingService;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.LogService;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Handles operations related to logs reading/writing."},{"lineNumber":19,"author":{"gitId":"-"},"content":" *"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * \u003cp\u003eNote that while this interface should support writing logs, most of the application/system logs"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * should be written via the standard Logger class."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogsProcessor {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final LogsProcessor instance \u003d new LogsProcessor();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final LogService service;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    LogsProcessor() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            service \u003d new LocalLoggingService();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            service \u003d new GoogleCloudLoggingService();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static LogsProcessor inst() {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Gets the list of recent error- or higher level logs."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return service.getRecentErrorLogs();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Queries and retrieves logs with given parameters."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public QueryLogsResults queryLogs(QueryLogsParams queryLogsParams) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return service.queryLogs(queryLogsParams);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a feedback session log."},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        service.createFeedbackSessionLog(courseId, email, fsName, fslType);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Gets the feedback session logs as filtered by the given parameters."},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param email Can be null"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            long startTime, long endTime, String fsName) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return service.getFeedbackSessionLogs(courseId, email, startTime, endTime, fsName);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Gets the number of logs for the event type and extra filters."},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int getNumberOfLogsForEvent(Instant startTime, Instant endTime, LogEvent logEvent, String extraFilters) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int total \u003d 0;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        long logStartTime \u003d startTime.toEpochMilli();"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        while (true) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            QueryLogsParams logsParams \u003d QueryLogsParams.builder(logStartTime, endTime.toEpochMilli())"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    .withLogEvent(logEvent.name())"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    .withExtraFilters(extraFilters)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    .withOrder(\"asc\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    .withPageSize(300)"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    .build();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            QueryLogsResults logFetchResults \u003d queryLogs(logsParams);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            List\u003cGeneralLogEntry\u003e logs \u003d logFetchResults.getLogEntries();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            total +\u003d logs.size();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (logFetchResults.getHasNextPage()) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logStartTime \u003d logs.get(logs.size() - 1).getTimestamp();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return total;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":93}},{"path":"src/main/java/teammates/logic/api/RecaptchaVerifier.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.EmptyRecaptchaService;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.GoogleRecaptchaService;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.RecaptchaService;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Used to handle the verification of the user\u0027s reCAPTCHA response."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class RecaptchaVerifier {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final RecaptchaVerifier instance \u003d new RecaptchaVerifier();"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final RecaptchaService service;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    RecaptchaVerifier() {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            service \u003d new EmptyRecaptchaService();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            service \u003d new GoogleRecaptchaService(Config.CAPTCHA_SECRET_KEY);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static RecaptchaVerifier inst() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if the {@code captchaResponse} token is verified successfully."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean isVerificationSuccessful(String captchaResponse) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return service.isVerificationSuccessful(captchaResponse);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":32}},{"path":"src/main/java/teammates/logic/api/TaskQueuer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ParamsNames;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.TaskQueue;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.GoogleCloudTasksService;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.LocalTaskQueueService;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.TaskQueueService;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.ui.request.FeedbackSessionRemindRequest;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.ui.request.SendEmailRequest;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Allows for adding specific type of tasks to the task queue."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TaskQueuer {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final TaskQueuer instance \u003d new TaskQueuer();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final TaskQueueService service;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    TaskQueuer() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            service \u003d new LocalTaskQueueService();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            service \u003d new GoogleCloudTasksService();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static TaskQueuer inst() {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // The following methods are facades to the actual logic for adding tasks to the queue."},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Using this method, the actual logic can still be black-boxed"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // while at the same time allowing this API to be mocked during test."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private void addTask(String queueName, String workerUrl, Map\u003cString, String\u003e paramMap, Object requestBody) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addDeferredTask(queueName, workerUrl, paramMap, requestBody, 0);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void addDeferredTask(String queueName, String workerUrl, Map\u003cString, String\u003e paramMap, Object requestBody,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                         long countdownTime) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        TaskWrapper task \u003d new TaskWrapper(queueName, workerUrl, paramMap, requestBody);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        service.addDeferredTask(task, countdownTime);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // The following methods are the actual API methods to be used by the client classes"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Schedules for feedback session reminders (i.e. student has not submitted responses yet)"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * for the specified feedback session."},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionReminders(String courseId, String feedbackSessionName,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                                                 String googleIdOfRequestingInstructor) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_ID, googleIdOfRequestingInstructor);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Schedules for feedback session reminders (i.e. student/instructor has not submitted responses yet)"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * for the specified feedback session for the specified group of users."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param usersToRemind the group of users to send the reminders to"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param requestingInstructorId the ID of the instructor who sends the reminder"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionRemindersForParticularUsers(String courseId, String feedbackSessionName,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                                                                   String[] usersToRemind,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                                                   String requestingInstructorId) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        FeedbackSessionRemindRequest remindRequest \u003d"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new FeedbackSessionRemindRequest(courseId, feedbackSessionName, requestingInstructorId, usersToRemind);"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL, new HashMap\u003c\u003e(), remindRequest);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Schedules for feedback session published email to be sent."},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionPublishedEmail(String courseId, String feedbackSessionName) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Schedules for feedback session publication reminders"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * for the specified feedback session for the specified group of users."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @param usersToEmail the group of users to send the reminders to"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param requestingInstructorId the ID of the instructor who sends the reminder"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionResendPublishedEmail(String courseId, String feedbackSessionName,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            String[] usersToEmail, String requestingInstructorId) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        FeedbackSessionRemindRequest remindRequest \u003d"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new FeedbackSessionRemindRequest(courseId, feedbackSessionName, requestingInstructorId, usersToEmail);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL, new HashMap\u003c\u003e(), remindRequest);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Schedules for feedback session unpublished email to be sent."},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the feedback session"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name of the feedback session"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void scheduleFeedbackSessionUnpublishedEmail(String courseId, String feedbackSessionName) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                TaskQueue.FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Schedules for course registration to be sent to the specified instructor."},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param inviterGoogleId googleId of instructor or administrator who sends the invitation"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param courseId the target course ID"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param instructorEmail the email address of the invited instructor"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void scheduleCourseRegistrationInviteToInstructor(String inviterGoogleId,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String instructorEmail, String courseId, boolean isRejoining) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (inviterGoogleId !\u003d null) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            paramMap.put(ParamsNames.INVITER_ID, inviterGoogleId);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_EMAIL, instructorEmail);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.IS_INSTRUCTOR_REJOINING, String.valueOf(isRejoining));"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                TaskQueue.INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Schedules for course registration to be sent to the specified student."},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @param courseId the target course ID"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @param studentEmail the email address of the student"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void scheduleCourseRegistrationInviteToStudent(String courseId, String studentEmail, boolean isRejoining) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.STUDENT_EMAIL, studentEmail);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.IS_STUDENT_REJOINING, String.valueOf(isRejoining));"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                TaskQueue.STUDENT_COURSE_JOIN_EMAIL_WORKER_URL, paramMap, null);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Schedules for the given list of emails to be sent."},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @param emails the list of emails to be sent"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void scheduleEmailsForSending(List\u003cEmailWrapper\u003e emails) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (emails.isEmpty()) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // Equally spread out the emails to be sent over 1 hour"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // Sets interval to a maximum of 5 seconds if the interval is too large"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        int oneHourInMillis \u003d 60 * 60 * 1000;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        int emailIntervalMillis \u003d Math.min(5000, oneHourInMillis / emails.size());"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        int numberOfEmailsSent \u003d 0;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        for (EmailWrapper email : emails) {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            long emailDelayTimer \u003d (long) numberOfEmailsSent * (long) emailIntervalMillis;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            scheduleEmailForSending(email, emailDelayTimer);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            numberOfEmailsSent++;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Schedules for the search indexing of the instructor identified by {@code courseId} and {@code email}."},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the instructor"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @param email the email of the instructor"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void scheduleInstructorForSearchIndexing(String courseId, String email) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.SEARCH_INDEXING_QUEUE_NAME, TaskQueue.INSTRUCTOR_SEARCH_INDEXING_WORKER_URL,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                paramMap, null);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Schedules for the search indexing of the account request identified by {@code email} and {@code institute}."},{"lineNumber":219,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * @param email the email associated with the account request"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * @param institute the institute associated with the account request"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void scheduleAccountRequestForSearchIndexing(String email, String institute) {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.SEARCH_INDEXING_QUEUE_NAME, TaskQueue.ACCOUNT_REQUEST_SEARCH_INDEXING_WORKER_URL,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                paramMap, null);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Schedules for the search indexing of the student identified by {@code courseId} and {@code email}."},{"lineNumber":234,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the student"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * @param email the email of the student"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void scheduleStudentForSearchIndexing(String courseId, String email) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.COURSE_ID, courseId);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        paramMap.put(ParamsNames.STUDENT_EMAIL, email);"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"        addTask(TaskQueue.SEARCH_INDEXING_QUEUE_NAME, TaskQueue.STUDENT_SEARCH_INDEXING_WORKER_URL,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                paramMap, null);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"    private void scheduleEmailForSending(EmailWrapper email, long emailDelayTimer) {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            SendEmailRequest request \u003d new SendEmailRequest(email);"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"            addDeferredTask(TaskQueue.SEND_EMAIL_QUEUE_NAME, TaskQueue.SEND_EMAIL_WORKER_URL,"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                            new HashMap\u003c\u003e(), request, emailDelayTimer);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            String emailSubject \u003d email.getSubject();"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            String emailSenderName \u003d email.getSenderName();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            String emailSender \u003d email.getSenderEmail();"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            String emailReceiver \u003d email.getRecipient();"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            String emailReplyToAddress \u003d email.getReplyTo();"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"            log.severe(\"Error when adding email to task queue: \" + e.getMessage() + \"\\n\""},{"lineNumber":261,"author":{"gitId":"-"},"content":"                       + \"Email sender: \" + emailSender + \"\\n\""},{"lineNumber":262,"author":{"gitId":"-"},"content":"                       + \"Email sender name: \" + emailSenderName + \"\\n\""},{"lineNumber":263,"author":{"gitId":"-"},"content":"                       + \"Email receiver: \" + emailReceiver + \"\\n\""},{"lineNumber":264,"author":{"gitId":"-"},"content":"                       + \"Email subject: \" + emailSubject + \"\\n\""},{"lineNumber":265,"author":{"gitId":"-"},"content":"                       + \"Email reply-to address: \" + emailReplyToAddress);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":266}},{"path":"src/main/java/teammates/logic/core/DataBundleLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collection;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.AttributesDeletionQuery;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.InstructorPrivileges;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.DeadlineExtensionAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.EntityAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.exception.SearchServiceException;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.storage.api.AccountRequestsDb;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.storage.api.AccountsDb;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.storage.api.CoursesDb;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.storage.api.DeadlineExtensionsDb;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackQuestionsDb;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackResponseCommentsDb;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackResponsesDb;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackSessionsDb;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import teammates.storage.api.InstructorsDb;"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"import teammates.storage.api.NotificationsDb;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import teammates.storage.api.ProfilesDb;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import teammates.storage.api.StudentsDb;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Handles operations related to data bundles."},{"lineNumber":45,"author":{"gitId":"-"},"content":" *"},{"lineNumber":46,"author":{"gitId":"-"},"content":" * @see DataBundle"},{"lineNumber":47,"author":{"gitId":"-"},"content":" */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public final class DataBundleLogic {"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final DataBundleLogic instance \u003d new DataBundleLogic();"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final AccountsDb accountsDb \u003d AccountsDb.inst();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final AccountRequestsDb accountRequestsDb \u003d AccountRequestsDb.inst();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final ProfilesDb profilesDb \u003d ProfilesDb.inst();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final CoursesDb coursesDb \u003d CoursesDb.inst();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final DeadlineExtensionsDb deadlineExtensionsDb \u003d DeadlineExtensionsDb.inst();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final StudentsDb studentsDb \u003d StudentsDb.inst();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final InstructorsDb instructorsDb \u003d InstructorsDb.inst();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final FeedbackSessionsDb fbDb \u003d FeedbackSessionsDb.inst();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final FeedbackQuestionsDb fqDb \u003d FeedbackQuestionsDb.inst();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final FeedbackResponsesDb frDb \u003d FeedbackResponsesDb.inst();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final FeedbackResponseCommentsDb fcDb \u003d FeedbackResponseCommentsDb.inst();"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"    private final NotificationsDb nfDb \u003d NotificationsDb.inst();"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private DataBundleLogic() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static DataBundleLogic inst() {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Persists data in the given {@link DataBundle} to the database, including"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * accounts, account requests, courses, deadline extensions, instructors, students, sessions,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * questions, responses, and comments."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAccounts are generated for students and instructors with Google IDs"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * if the corresponding accounts are not found in the data bundle."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * For question ID injection in responses and comments to work properly, all questions"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * referenced by responses and comments must be included in the data bundle."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if invalid data is encountered."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public DataBundle persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (dataBundle \u003d\u003d null) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new InvalidParametersException(\"Null data bundle\");"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Collection\u003cAccountAttributes\u003e accounts \u003d dataBundle.accounts.values();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cAccountRequestAttributes\u003e accountRequests \u003d dataBundle.accountRequests.values();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Collection\u003cStudentProfileAttributes\u003e profiles \u003d dataBundle.profiles.values();"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Collection\u003cCourseAttributes\u003e courses \u003d dataBundle.courses.values();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Collection\u003cInstructorAttributes\u003e instructors \u003d dataBundle.instructors.values();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Collection\u003cStudentAttributes\u003e students \u003d dataBundle.students.values();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackSessionAttributes\u003e sessions \u003d dataBundle.feedbackSessions.values();"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackQuestionAttributes\u003e questions \u003d dataBundle.feedbackQuestions.values();"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackResponseAttributes\u003e responses \u003d dataBundle.feedbackResponses.values();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Collection\u003cFeedbackResponseCommentAttributes\u003e responseComments \u003d dataBundle.feedbackResponseComments.values();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Collection\u003cDeadlineExtensionAttributes\u003e deadlineExtensions \u003d dataBundle.deadlineExtensions.values();"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"        Collection\u003cNotificationAttributes\u003e notifications \u003d dataBundle.notifications.values();"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // For ensuring only one account per Google ID is created"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Map\u003cString, AccountAttributes\u003e googleIdAccountMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        for (AccountAttributes account : accounts) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            googleIdAccountMap.put(account.getGoogleId(), account);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        processInstructors(instructors, googleIdAccountMap);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        processStudents(students, googleIdAccountMap);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        processQuestions(questions);"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cAccountAttributes\u003e newAccounts \u003d accountsDb.putEntities(googleIdAccountMap.values());"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cAccountRequestAttributes\u003e newAccountRequests \u003d accountRequestsDb.putEntities(accountRequests);"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cStudentProfileAttributes\u003e newProfiles \u003d profilesDb.putEntities(profiles);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cCourseAttributes\u003e newCourses \u003d coursesDb.putEntities(courses);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e newInstructors \u003d instructorsDb.putEntities(instructors);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e newStudents \u003d studentsDb.putEntities(students);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e newFeedbackSessions \u003d fbDb.putEntities(sessions);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cDeadlineExtensionAttributes\u003e newDeadlineExtensions \u003d deadlineExtensionsDb.putEntities(deadlineExtensions);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e createdQuestions \u003d fqDb.putEntities(questions);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        injectRealIds(responses, responseComments, createdQuestions);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e newFeedbackResponses \u003d frDb.putEntities(responses);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseCommentAttributes\u003e newFeedbackResponseComments \u003d fcDb.putEntities(responseComments);"},{"lineNumber":128,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationAttributes\u003e newNotifications \u003d nfDb.putEntities(notifications);"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newAccounts, dataBundle.accounts);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newAccountRequests, dataBundle.accountRequests);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newProfiles, dataBundle.profiles);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newCourses, dataBundle.courses);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newDeadlineExtensions, dataBundle.deadlineExtensions);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newInstructors, dataBundle.instructors);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newStudents, dataBundle.students);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newFeedbackSessions, dataBundle.feedbackSessions);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        updateDataBundleValue(createdQuestions, dataBundle.feedbackQuestions);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newFeedbackResponses, dataBundle.feedbackResponses);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        updateDataBundleValue(newFeedbackResponseComments, dataBundle.feedbackResponseComments);"},{"lineNumber":141,"author":{"gitId":"ziqing26"},"content":"        updateDataBundleValue(newNotifications, dataBundle.notifications);"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return dataBundle;"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private \u003cT extends EntityAttributes\u003c?\u003e\u003e void updateDataBundleValue(List\u003cT\u003e newValues, Map\u003cString, T\u003e oldValues) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Map\u003cT, Integer\u003e newValuesMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Map\u003cString, T\u003e values \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c newValues.size(); i++) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            newValuesMap.put(newValues.get(i), i);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, T\u003e entry : oldValues.entrySet()) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            String key \u003d entry.getKey();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            T value \u003d entry.getValue();"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"            if (newValuesMap.containsKey(value)) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                int index \u003d newValuesMap.get(value);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                values.put(key, newValues.get(index));"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        oldValues.clear();"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        oldValues.putAll(values);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Creates document for entities that have document, i.e. searchable."},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void putDocuments(DataBundle dataBundle) throws SearchServiceException {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // query the entity in db first to get the actual data and create document for actual entity"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Map\u003cString, StudentAttributes\u003e students \u003d dataBundle.students;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students.values()) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            StudentAttributes studentInDb \u003d studentsDb.getStudentForEmail(student.getCourse(), student.getEmail());"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            studentsDb.putDocument(studentInDb);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Map\u003cString, InstructorAttributes\u003e instructors \u003d dataBundle.instructors;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors.values()) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            InstructorAttributes instructorInDb \u003d"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    instructorsDb.getInstructorForEmail(instructor.getCourseId(), instructor.getEmail());"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            instructorsDb.putDocument(instructorInDb);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Map\u003cString, AccountRequestAttributes\u003e accountRequests \u003d dataBundle.accountRequests;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        for (AccountRequestAttributes accountRequest : accountRequests.values()) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            AccountRequestAttributes accountRequestInDb \u003d"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    accountRequestsDb.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            accountRequestsDb.putDocument(accountRequestInDb);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private void processInstructors("},{"lineNumber":197,"author":{"gitId":"-"},"content":"            Collection\u003cInstructorAttributes\u003e instructors, Map\u003cString, AccountAttributes\u003e googleIdAccountMap) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            validateInstructorPrivileges(instructor);"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"            // create adhoc account to maintain data integrity"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (!StringHelper.isEmpty(instructor.getGoogleId())) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                googleIdAccountMap.putIfAbsent(instructor.getGoogleId(), makeAccount(instructor));"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private void processStudents("},{"lineNumber":209,"author":{"gitId":"-"},"content":"            Collection\u003cStudentAttributes\u003e students, Map\u003cString, AccountAttributes\u003e googleIdAccountMap) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            populateNullSection(student);"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // create adhoc account to maintain data integrity"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!StringHelper.isEmpty(student.getGoogleId())) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                googleIdAccountMap.putIfAbsent(student.getGoogleId(), makeAccount(student));"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    private void processQuestions(Collection\u003cFeedbackQuestionAttributes\u003e questions) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes question : questions) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            question.removeIrrelevantVisibilityOptions();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private void injectRealIds("},{"lineNumber":227,"author":{"gitId":"-"},"content":"            Collection\u003cFeedbackResponseAttributes\u003e responses, Collection\u003cFeedbackResponseCommentAttributes\u003e responseComments,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            List\u003cFeedbackQuestionAttributes\u003e createdQuestions) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e questionIdMap \u003d makeQuestionIdMap(createdQuestions);"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"        injectRealIdsIntoResponses(responses, questionIdMap);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        injectRealIdsIntoResponseComments(responseComments, questionIdMap);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    private Map\u003cString, String\u003e makeQuestionIdMap(List\u003cFeedbackQuestionAttributes\u003e createdQuestions) {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e questionIdMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes createdQuestion : createdQuestions) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            String sessionKey \u003d makeSessionKey(createdQuestion.getFeedbackSessionName(), createdQuestion.getCourseId());"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            String questionKey \u003d makeQuestionKey(sessionKey, createdQuestion.getQuestionNumber());"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            questionIdMap.put(questionKey, createdQuestion.getId());"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return questionIdMap;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * This method is necessary to generate the feedbackQuestionId of the"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * question the response is for.\u003cbr\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Normally, the ID is already generated on creation,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * but the json file does not contain the actual response ID. \u003cbr\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * Therefore the question number corresponding to the created response"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * should be inserted in the json file in place of the actual response ID.\u003cbr\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * This method will then generate the correct ID and replace the field."},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    private void injectRealIdsIntoResponses(Collection\u003cFeedbackResponseAttributes\u003e responses,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            Map\u003cString, String\u003e questionIdMap) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responses) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            int questionNumber;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                questionNumber \u003d Integer.parseInt(response.getFeedbackQuestionId());"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                // question ID already injected"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            String sessionKey \u003d makeSessionKey(response.getFeedbackSessionName(), response.getCourseId());"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            String questionKey \u003d makeQuestionKey(sessionKey, questionNumber);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            response.setFeedbackQuestionId(questionIdMap.get(questionKey));"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * This method is necessary to generate the feedbackQuestionId"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * and feedbackResponseId of the question and response the comment is for.\u003cbr\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * Normally, the ID is already generated on creation,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * but the json file does not contain the actual response ID. \u003cbr\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     * Therefore the question number and questionNumber%giverEmail%recipient"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * corresponding to the created comment should be inserted in the json"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * file in place of the actual ID.\u003cbr\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * This method will then generate the correct ID and replace the field."},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    private void injectRealIdsIntoResponseComments(Collection\u003cFeedbackResponseCommentAttributes\u003e responseComments,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            Map\u003cString, String\u003e questionIdMap) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        for (FeedbackResponseCommentAttributes comment : responseComments) {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            int questionNumber;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                questionNumber \u003d Integer.parseInt(comment.getFeedbackQuestionId());"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                // question ID already injected"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            String sessionKey \u003d makeSessionKey(comment.getFeedbackSessionName(), comment.getCourseId());"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            String questionKey \u003d makeQuestionKey(sessionKey, questionNumber);"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            comment.setFeedbackQuestionId(questionIdMap.get(questionKey));"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"            // format of feedbackResponseId: questionNumber%giverEmail%recipient"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            String[] responseIdParam \u003d comment.getFeedbackResponseId().split(\"%\", 3);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            comment.setFeedbackResponseId(comment.getFeedbackQuestionId() + \"%\" + responseIdParam[1]"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                    + \"%\" + responseIdParam[2]);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * Checks if the role of {@code instructor} matches its privileges."},{"lineNumber":303,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * @param instructor"},{"lineNumber":305,"author":{"gitId":"-"},"content":"     *            the {@link InstructorAttributes} of an instructor, cannot be"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     *            {@code null}"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    private void validateInstructorPrivileges(InstructorAttributes instructor) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        if (instructor.getRole() \u003d\u003d null) {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"        InstructorPrivileges privileges \u003d instructor.getPrivileges();"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"        switch (instructor.getRole()) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER:"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            assert privileges.hasCoownerPrivileges();"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_MANAGER:"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            assert privileges.hasManagerPrivileges();"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_OBSERVER:"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            assert privileges.hasObserverPrivileges();"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_TUTOR:"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            assert privileges.hasTutorPrivileges();"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"        case Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_CUSTOM:"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            assert false : \"Invalid instructor permission role name\";"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    private void populateNullSection(StudentAttributes student) {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        student.setSection(student.getSection() \u003d\u003d null ? \"None\" : student.getSection());"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"    private AccountAttributes makeAccount(InstructorAttributes instructor) {"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        return AccountAttributes.builder(instructor.getGoogleId())"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                .withName(instructor.getName())"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                .withEmail(instructor.getEmail())"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                .withInstitute(\"TEAMMATES Test Institute 1\")"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                .withIsInstructor(true)"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"    private AccountAttributes makeAccount(StudentAttributes student) {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        return AccountAttributes.builder(student.getGoogleId())"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                .withName(student.getName())"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                .withEmail(student.getEmail())"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                .withInstitute(\"TEAMMATES Test Institute 1\")"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                .withIsInstructor(false)"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"    private String makeSessionKey(String feedbackSessionName, String courseId) {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        return feedbackSessionName + \"%\" + courseId;"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"    private String makeQuestionKey(String sessionKey, int questionNumber) {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        return makeQuestionKey(sessionKey, String.valueOf(questionNumber));"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"    private String makeQuestionKey(String sessionKey, String questionNumber) {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        return sessionKey + \"%\" + questionNumber;"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":378,"author":{"gitId":"-"},"content":"     * Removes the items in the data bundle from the database."},{"lineNumber":379,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"        // Questions, responses and deadline extensions will be deleted automatically."},{"lineNumber":383,"author":{"gitId":"-"},"content":"        // We don\u0027t attempt to delete them again, to save time."},{"lineNumber":384,"author":{"gitId":"-"},"content":"        deleteCourses(dataBundle.courses.values());"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"        dataBundle.accounts.values().forEach(account -\u003e {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            accountsDb.deleteAccount(account.getGoogleId());"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        dataBundle.profiles.values().forEach(profile -\u003e {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            profilesDb.deleteStudentProfile(profile.getGoogleId());"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        dataBundle.accountRequests.values().forEach(accountRequest -\u003e {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            accountRequestsDb.deleteAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":395,"author":{"gitId":"ziqing26"},"content":"        dataBundle.notifications.values().forEach(notification -\u003e {"},{"lineNumber":396,"author":{"gitId":"ziqing26"},"content":"            nfDb.deleteNotification(notification.getNotificationId());"},{"lineNumber":397,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"    private void deleteCourses(Collection\u003cCourseAttributes\u003e courses) {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        List\u003cString\u003e courseIds \u003d new ArrayList\u003c\u003e();"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        for (CourseAttributes course : courses) {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            courseIds.add(course.getId());"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        if (!courseIds.isEmpty()) {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            courseIds.forEach(courseId -\u003e {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                AttributesDeletionQuery query \u003d AttributesDeletionQuery.builder()"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                        .withCourseId(courseId)"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                fcDb.deleteFeedbackResponseComments(query);"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                frDb.deleteFeedbackResponses(query);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                fqDb.deleteFeedbackQuestions(query);"},{"lineNumber":413,"author":{"gitId":"-"},"content":"                fbDb.deleteFeedbackSessions(query);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"                studentsDb.deleteStudents(query);"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                instructorsDb.deleteInstructors(query);"},{"lineNumber":416,"author":{"gitId":"-"},"content":"                deadlineExtensionsDb.deleteDeadlineExtensions(query);"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"                coursesDb.deleteCourse(courseId);"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":9,"-":414}},{"path":"src/main/java/teammates/logic/core/LogicStarter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextEvent;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextListener;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Setup in web.xml to register logic classes at application startup."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class LogicStarter implements ServletContextListener {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Registers dependencies between different logic classes."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void initializeDependencies() {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        AccountRequestsLogic accountRequestsLogic \u003d AccountRequestsLogic.inst();"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        AccountsLogic accountsLogic \u003d AccountsLogic.inst();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        FeedbackQuestionsLogic fqLogic \u003d FeedbackQuestionsLogic.inst();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        FeedbackResponsesLogic frLogic \u003d FeedbackResponsesLogic.inst();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        FeedbackResponseCommentsLogic frcLogic \u003d FeedbackResponseCommentsLogic.inst();"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"        NotificationsLogic notificationsLogic \u003d NotificationsLogic.inst();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        UsageStatisticsLogic usageStatisticsLogic \u003d UsageStatisticsLogic.inst();"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        accountRequestsLogic.initLogicDependencies();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        accountsLogic.initLogicDependencies();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        coursesLogic.initLogicDependencies();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        fqLogic.initLogicDependencies();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        frLogic.initLogicDependencies();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        frcLogic.initLogicDependencies();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        fsLogic.initLogicDependencies();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        instructorsLogic.initLogicDependencies();"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"        notificationsLogic.initLogicDependencies();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        studentsLogic.initLogicDependencies();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        profilesLogic.initLogicDependencies();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        usageStatisticsLogic.initLogicDependencies();"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        log.info(\"Initialized dependencies between logic classes\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void contextInitialized(ServletContextEvent event) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Invoked by Jetty at application startup."},{"lineNumber":51,"author":{"gitId":"-"},"content":"        initializeDependencies();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void contextDestroyed(ServletContextEvent event) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Nothing to do"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":57}},{"path":"src/main/java/teammates/logic/core/NotificationsLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import teammates.storage.api.NotificationsDb;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":" * Handles the logic related to notifications."},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"public final class NotificationsLogic {"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"    private static final NotificationsLogic instance \u003d new NotificationsLogic();"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"    private final NotificationsDb notificationsDb \u003d NotificationsDb.inst();"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationsLogic() {"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"        // prevent initialization"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"    public static NotificationsLogic inst() {"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"        return instance;"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"    void initLogicDependencies() {"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"        // No dependency to other logic class"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"     * Gets notification associated with the {@code notificationId}."},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"     * @return null if no match found."},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes getNotification(String notificationId) {"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"        return notificationsDb.getNotification(notificationId);"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"     * Gets all notifications."},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getAllNotifications() {"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"        return notificationsDb.getAllNotifications();"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"     * Gets a list of notifications."},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"     * @return a list of notifications with the specified {@code targetUser}."},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getActiveNotificationsByTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        return notificationsDb.getActiveNotificationsByTargetUser(targetUser);"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"     * Creates a notification."},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":"     * @return the created notification"},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":"     * @throws InvalidParametersException if the notification is not valid"},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"     * @throws EntityAlreadyExistsException if the notification already exists in the database."},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"    public NotificationAttributes createNotification(NotificationAttributes notification)"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"        return notificationsDb.createEntity(notification);"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":"     * Updates/Creates the notification using {@link NotificationAttributes.UpdateOptions}."},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"     * @return updated notification"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"     * @throws EntityDoesNotExistException if notification cannot be found with given Id"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes updateNotification(NotificationAttributes.UpdateOptions updateOptions)"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":"        return notificationsDb.updateNotification(updateOptions);"},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"     * Deletes notification associated with the {@code notificationId}."},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"     * \u003cp\u003eFails silently if the notification doesn\u0027t exist.\u003c/p\u003e"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"    public void deleteNotification(String notificationId) {"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"        notificationsDb.deleteNotification(notificationId);"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"ziqing26":19,"fsgmhoward":71,"Nicolascwy":1}},{"path":"src/main/java/teammates/logic/external/EmailSenderService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.exception.EmailSendingException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * An email sender interface used by services for sending emails."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface EmailSenderService {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses the {@code wrapper} email object to specific implementations of email object"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * used by the service."},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Object parseToEmail(EmailWrapper wrapper);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Sends the email packaged as a {@code wrapper}."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    EmailSendingStatus sendEmail(EmailWrapper wrapper) throws EmailSendingException;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":22}},{"path":"src/main/java/teammates/logic/external/EmptyEmailService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Email sender service which will not send any email."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmptyEmailService implements EmailSenderService {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public EmailWrapper parseToEmail(EmailWrapper wrapper) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return wrapper;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper wrapper) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new EmailSendingStatus(HttpStatus.SC_OK, null);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":22}},{"path":"src/main/java/teammates/logic/external/EmptyRecaptchaService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Service that bypasses reCAPTCHA verification, i.e. always returning successful verification."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class EmptyRecaptchaService implements RecaptchaService {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public boolean isVerificationSuccessful(String captchaResponse) {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":12}},{"path":"src/main/java/teammates/logic/external/FileStorageService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A binary file storage interface used for managing binary files such as profile pictures."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public interface FileStorageService {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Returns true if a file with the specified {@code fileKey} exists in the storage."},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    boolean doesFileExist(String fileKey);"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets the content of the file with the specified {@code fileKey} as bytes."},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    byte[] getContent(String fileKey);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Deletes the file with the specified {@code fileKey}."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void delete(String fileKey);"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a file with the specified {@code contentBytes} as content and with type {@code contentType}."},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void create(String fileKey, byte[] contentBytes, String contentType);"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":27}},{"path":"src/main/java/teammates/logic/external/GoogleCloudLoggingService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.api.gax.paging.Page;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.LogLine;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.RequestLog;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.SourceReference;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.LogEntry;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Logging;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Logging.EntryListOption;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Logging.SortingField;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Logging.SortingOrder;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.LoggingOptions;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Payload;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Severity;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.google.protobuf.Any;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import com.google.protobuf.InvalidProtocolBufferException;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import com.google.protobuf.util.JsonFormat;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.QueryLogsResults;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.FeedbackSessionAuditLogDetails;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.GeneralLogEntry;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogDetails;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogEvent;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogSeverity;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.QueryLogsParams;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.SourceLocation;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Holds functions for operations related to Google Cloud Logging."},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class GoogleCloudLoggingService implements LogService {"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String RESOURCE_TYPE_GAE_APP \u003d \"gae_app\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String REQUEST_LOG_NAME \u003d \"appengine.googleapis.com%2Frequest_log\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String STDOUT_LOG_NAME \u003d \"stdout\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String STDERR_LOG_NAME \u003d \"stderr\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String ASCENDING_ORDER \u003d \"asc\";"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TRACE_PREFIX \u003d String.format(\"projects/%s/traces/\", Config.APP_ID);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Instant endTime \u003d Instant.now();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Sets the range to 6 minutes to slightly overlap the 5 minute email timer"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        long queryRange \u003d 1000 * 60 * 6;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Instant startTime \u003d endTime.minusMillis(queryRange);"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        QueryLogsParams queryLogsParams \u003d QueryLogsParams.builder(startTime.toEpochMilli(), endTime.toEpochMilli())"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withMinSeverity(LogSeverity.ERROR)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        LogSearchParams logSearchParams \u003d LogSearchParams.from(queryLogsParams)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .addLogName(REQUEST_LOG_NAME)"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .setResourceType(RESOURCE_TYPE_GAE_APP);"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cLogEntry\u003e logEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cErrorLogEntry\u003e errorLogs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Page\u003cLogEntry\u003e entries \u003d getLogEntries(logSearchParams, 0);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (LogEntry entry : entries.iterateAll()) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logEntries.add(entry);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (LogEntry logEntry : logEntries) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Any entry \u003d (Any) logEntry.getPayload().getData();"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"            JsonFormat.TypeRegistry tr \u003d JsonFormat.TypeRegistry.newBuilder()"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    .add(RequestLog.getDescriptor())"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    .add(LogLine.getDescriptor())"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    .add(com.google.appengine.logging.v1.SourceLocation.getDescriptor())"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    .add(SourceReference.getDescriptor())"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    .build();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"            List\u003cLogLine\u003e logLines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                String logContentAsJson \u003d JsonFormat.printer().usingTypeRegistry(tr).print(entry);"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                RequestLog.Builder builder \u003d RequestLog.newBuilder();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                JsonFormat.parser().ignoringUnknownFields().usingTypeRegistry(tr).merge(logContentAsJson, builder);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                RequestLog reconvertedLog \u003d builder.build();"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                logLines \u003d reconvertedLog.getLineList();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            } catch (InvalidProtocolBufferException e) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                // TODO"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"            String trace \u003d logEntry.getTrace();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            if (trace !\u003d null) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                trace \u003d trace.replace(TRACE_PREFIX, \"\");"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"            for (LogLine line : logLines) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                if (line.getSeverity().getNumber() \u003e\u003d com.google.logging.type.LogSeverity.ERROR.getNumber()) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    errorLogs.add(new ErrorLogEntry("},{"lineNumber":106,"author":{"gitId":"-"},"content":"                            line.getLogMessage().replaceAll(\"\\n\", \"\\n\u003cbr\u003e\"),"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                            line.getSeverity().toString(), trace)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                    );"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return errorLogs;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public QueryLogsResults queryLogs(QueryLogsParams queryLogsParams) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        LogSearchParams logSearchParams \u003d LogSearchParams.from(queryLogsParams)"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .addLogName(STDOUT_LOG_NAME)"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .addLogName(STDERR_LOG_NAME)"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .setResourceType(RESOURCE_TYPE_GAE_APP);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Page\u003cLogEntry\u003e logEntriesInPage \u003d getLogEntries(logSearchParams, queryLogsParams.getPageSize());"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        List\u003cGeneralLogEntry\u003e logEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (LogEntry entry : logEntriesInPage.getValues()) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Severity severity \u003d entry.getSeverity();"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String trace \u003d entry.getTrace();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            if (trace !\u003d null) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                trace \u003d trace.replace(TRACE_PREFIX, \"\");"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String insertId \u003d entry.getInsertId();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            com.google.cloud.logging.SourceLocation sourceLocation \u003d entry.getSourceLocation();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Map\u003cString, String\u003e resourceIdentifier \u003d entry.getResource().getLabels();"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Payload\u003c?\u003e payload \u003d entry.getPayload();"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            long timestamp \u003d entry.getInstantTimestamp().toEpochMilli();"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String file \u003d \"\";"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            Long line \u003d 0L;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String function \u003d \"\";"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            if (sourceLocation !\u003d null) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                file \u003d sourceLocation.getFile();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                line \u003d sourceLocation.getLine();"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                function \u003d sourceLocation.getFunction();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"            GeneralLogEntry logEntry \u003d new GeneralLogEntry(convertSeverity(severity), trace, insertId,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    resourceIdentifier, new SourceLocation(file, line, function), timestamp);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            if (payload.getType() \u003d\u003d Payload.Type.JSON) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Map\u003cString, Object\u003e jsonPayloadMap \u003d ((Payload.JsonPayload) payload).getDataAsMap();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                logEntry.setDetails(JsonUtils.fromJson(JsonUtils.toCompactJson(jsonPayloadMap), LogDetails.class));"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                String textPayloadMessage \u003d ((Payload.StringPayload) payload).getData();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logEntry.setMessage(textPayloadMessage);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logEntries.add(logEntry);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        boolean hasNextPage \u003d logEntriesInPage.getNextPageToken() !\u003d null;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new QueryLogsResults(logEntries, hasNextPage);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private LogSeverity convertSeverity(Severity severity) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.ERROR) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return LogSeverity.ERROR;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.WARNING) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return LogSeverity.WARNING;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.INFO || severity \u003d\u003d Severity.NOTICE) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return LogSeverity.INFO;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.CRITICAL || severity \u003d\u003d Severity.ALERT || severity \u003d\u003d Severity.EMERGENCY) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return LogSeverity.CRITICAL;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (severity \u003d\u003d Severity.DEBUG) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return LogSeverity.DEBUG;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return LogSeverity.DEFAULT;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // This method is not necessary for production usage because a feedback session log"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // is already separately created through the standardized logging infrastructure."},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // However, this method is not removed as it is necessary to assist in local testing."},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            long startTime, long endTime, String fsName) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        List\u003cString\u003e filters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (courseId !\u003d null) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            filters.add(\"jsonPayload.courseId\u003d\\\"\" + courseId + \"\\\"\");"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (email !\u003d null) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            filters.add(\"jsonPayload.studentEmail\u003d\\\"\" + email + \"\\\"\");"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (fsName !\u003d null) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            filters.add(\"jsonPayload.feedbackSessionName\u003d\\\"\" + fsName + \"\\\"\");"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        QueryLogsParams queryLogsParams \u003d QueryLogsParams.builder(startTime, endTime)"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .withLogEvent(LogEvent.FEEDBACK_SESSION_AUDIT.name())"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .withSeverityLevel(LogSeverity.INFO)"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .withExtraFilters(String.join(\"\\n\", filters))"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        LogSearchParams logSearchParams \u003d LogSearchParams.from(queryLogsParams)"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .addLogName(STDOUT_LOG_NAME)"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .setResourceType(RESOURCE_TYPE_GAE_APP);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Page\u003cLogEntry\u003e entries \u003d getLogEntries(logSearchParams, 0);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        List\u003cLogEntry\u003e logEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        for (LogEntry entry : entries.iterateAll()) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logEntries.add(entry);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionLogEntry\u003e fsLogEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        for (LogEntry entry : logEntries) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            long timestamp \u003d entry.getInstantTimestamp().toEpochMilli();"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            Payload\u003c?\u003e payload \u003d entry.getPayload();"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            FeedbackSessionAuditLogDetails details;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (payload.getType() \u003d\u003d Payload.Type.JSON) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                Map\u003cString, Object\u003e jsonPayloadMap \u003d ((Payload.JsonPayload) payload).getDataAsMap();"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                LogDetails logDetails \u003d JsonUtils.fromJson(JsonUtils.toCompactJson(jsonPayloadMap), LogDetails.class);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                if (!(logDetails instanceof FeedbackSessionAuditLogDetails)) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                details \u003d (FeedbackSessionAuditLogDetails) logDetails;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"            FeedbackSessionLogEntry fslEntry \u003d new FeedbackSessionLogEntry(details.getStudentEmail(),"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    details.getFeedbackSessionName(), details.getAccessType(), timestamp);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            fsLogEntries.add(fslEntry);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return fsLogEntries;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private Page\u003cLogEntry\u003e getLogEntries(LogSearchParams s, int pageSize) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        LoggingOptions options \u003d LoggingOptions.getDefaultInstance();"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        QueryLogsParams q \u003d s.queryLogsParams;"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        List\u003cString\u003e logFilters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        logFilters.add(\"timestamp\u003e\\\"\" + Instant.ofEpochMilli(q.getStartTime()).toString() + \"\\\"\");"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        logFilters.add(\"timestamp\u003c\u003d\\\"\" + Instant.ofEpochMilli(q.getEndTime()).toString() + \"\\\"\");"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (!s.logName.isEmpty()) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            String logNameFilter \u003d s.logName.stream()"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    .map(str -\u003e \"\\\"projects/\" + options.getProjectId() + \"/logs/\" + str + \"\\\"\")"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    .collect(Collectors.joining(\" OR \"));"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            logFilters.add(\"logName\u003d(\" + logNameFilter + \")\");"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        if (s.resourceType !\u003d null) {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            logFilters.add(\"resource.type\u003d\\\"\" + s.resourceType + \"\\\"\");"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        if (q.getSeverity() !\u003d null) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            logFilters.add(\"severity\u003d\" + q.getSeverity());"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        } else if (q.getMinSeverity() !\u003d null \u0026\u0026 q.getSeverity() \u003d\u003d null) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            logFilters.add(\"severity\u003e\u003d\" + q.getMinSeverity());"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (q.getTraceId() !\u003d null) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            logFilters.add(\"trace\u003d\\\"\" + TRACE_PREFIX + q.getTraceId() + \"\\\"\");"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        if (q.getActionClass() !\u003d null) {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.actionClass\u003d\\\"\" + q.getActionClass() + \"\\\"\");"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        if (q.getUserInfoParams() !\u003d null) {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (q.getUserInfoParams().getGoogleId() !\u003d null) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                logFilters.add(\"jsonPayload.userInfo.googleId\u003d\\\"\" + q.getUserInfoParams().getGoogleId() + \"\\\"\");"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            if (q.getUserInfoParams().getRegkey() !\u003d null) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                logFilters.add(\"jsonPayload.userInfo.regkey\u003d\\\"\" + q.getUserInfoParams().getRegkey() + \"\\\"\");"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            if (q.getUserInfoParams().getEmail() !\u003d null) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                logFilters.add(\"jsonPayload.userInfo.email\u003d\\\"\" + q.getUserInfoParams().getEmail() + \"\\\"\");"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        if (q.getLogEvent() !\u003d null) {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.event\u003d\\\"\" + q.getLogEvent() + \"\\\"\");"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        if (q.getSourceLocation() !\u003d null \u0026\u0026 q.getSourceLocation().getFile() !\u003d null) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            if (q.getSourceLocation().getFunction() \u003d\u003d null) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                logFilters.add(\"sourceLocation.file\u003d\\\"\" + q.getSourceLocation().getFile() + \"\\\"\");"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                logFilters.add(\"sourceLocation.file\u003d\\\"\" + q.getSourceLocation().getFile()"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                        + \"\\\" AND sourceLocation.function\u003d\\\"\" + q.getSourceLocation().getFunction() + \"\\\"\");"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        if (q.getExceptionClass() !\u003d null) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.exceptionClass\u003d\\\"\" + q.getExceptionClass() + \"\\\"\");"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        if (q.getLatency() !\u003d null) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.responseTime\" + q.getLatency());"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        if (q.getStatus() !\u003d null) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            logFilters.add(\"jsonPayload.responseStatus\u003d\" + q.getStatus());"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        if (q.getVersion() !\u003d null) {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            logFilters.add(\"resource.labels.version_id\u003d\\\"\" + q.getVersion() + \"\\\"\");"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        if (q.getExtraFilters() !\u003d null) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            logFilters.add(q.getExtraFilters());"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        String logFilter \u003d String.join(\"\\n\", logFilters);"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"        List\u003cEntryListOption\u003e entryListOptions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"        entryListOptions.add(EntryListOption.filter(logFilter));"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"        if (pageSize \u003e 0) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            entryListOptions.add(EntryListOption.pageSize(pageSize));"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"        if (q.getOrder() !\u003d null) {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            if (ASCENDING_ORDER.equals(q.getOrder())) {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                entryListOptions.add(EntryListOption.sortOrder(SortingField.TIMESTAMP, SortingOrder.ASCENDING));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                entryListOptions.add(EntryListOption.sortOrder(SortingField.TIMESTAMP, SortingOrder.DESCENDING));"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        Logging logging \u003d options.getService();"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Page\u003cLogEntry\u003e entries \u003d logging.listLogEntries(entryListOptions.toArray(new EntryListOption[] {}));"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            logging.close();"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            // ignore exception when closing resource"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        return entries;"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * Contains params to be used for the searching of logs."},{"lineNumber":334,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    private static class LogSearchParams {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        private final List\u003cString\u003e logName \u003d new ArrayList\u003c\u003e();"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        private String resourceType;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        private QueryLogsParams queryLogsParams;"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"        static LogSearchParams from(QueryLogsParams queryLogsParams) {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            return new LogSearchParams().setQueryLogsParams(queryLogsParams);"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":343,"author":{"gitId":"-"},"content":""},{"lineNumber":344,"author":{"gitId":"-"},"content":"        LogSearchParams addLogName(String logName) {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            this.logName.add(logName);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        LogSearchParams setResourceType(String resourceType) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            this.resourceType \u003d resourceType;"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"        private LogSearchParams setQueryLogsParams(QueryLogsParams queryLogsParams) {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            this.queryLogsParams \u003d queryLogsParams;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":359}},{"path":"src/main/java/teammates/logic/external/GoogleCloudStorageService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.Blob;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.BlobId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.BlobInfo;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.google.cloud.storage.StorageOptions;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Holds functions for operations related to Google Cloud Storage."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public final class GoogleCloudStorageService implements FileStorageService {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static Storage storage \u003d StorageOptions.getDefaultInstance().getService();"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void delete(String fileKey) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        storage.delete(BlobId.of(Config.PRODUCTION_GCS_BUCKETNAME, fileKey));"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void create(String fileKey, byte[] contentBytes, String contentType) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        BlobId blobId \u003d BlobId.of(Config.PRODUCTION_GCS_BUCKETNAME, fileKey);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        BlobInfo blobInfo \u003d BlobInfo.newBuilder(blobId).setContentType(contentType).build();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        storage.create(blobInfo, contentBytes);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean doesFileExist(String fileKey) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        BlobId blobId \u003d BlobId.of(Config.PRODUCTION_GCS_BUCKETNAME, fileKey);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Blob blob \u003d storage.get(blobId);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return blob !\u003d null \u0026\u0026 blob.exists();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public byte[] getContent(String fileKey) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        BlobId blobId \u003d BlobId.of(Config.PRODUCTION_GCS_BUCKETNAME, fileKey);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Blob blob \u003d storage.get(blobId);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (blob \u003d\u003d null) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return new byte[0];"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return blob.getContent();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":46}},{"path":"src/main/java/teammates/logic/external/GoogleCloudTasksService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.AppEngineHttpRequest;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.AppEngineRouting;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.CloudTasksClient;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.HttpMethod;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.QueueName;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.cloud.tasks.v2.Task;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.protobuf.ByteString;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.protobuf.Timestamp;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Holds functions for operations related to Google Cloud Tasks."},{"lineNumber":24,"author":{"gitId":"-"},"content":" */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class GoogleCloudTasksService implements TaskQueueService {"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void addDeferredTask(TaskWrapper task, long countdownTime) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try (CloudTasksClient client \u003d CloudTasksClient.create()) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            String queuePath \u003d QueueName.of(Config.APP_ID, Config.APP_REGION, task.getQueueName()).toString();"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"            AppEngineHttpRequest.Builder requestBuilder \u003d"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    AppEngineHttpRequest.newBuilder()"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                            .setAppEngineRouting(AppEngineRouting.newBuilder()"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                                    .setVersion(Config.APP_VERSION)"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                    .build())"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                            .setHttpMethod(HttpMethod.POST);"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (task.getRequestBody() \u003d\u003d null) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                String relativeUrl \u003d \"http://place.holder\"; // the value is not important"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                AppUrl url \u003d new AppUrl(relativeUrl + task.getWorkerUrl());"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                task.getParamMap().forEach((key, value) -\u003e url.withParam(key, value));"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"                requestBuilder.setRelativeUri(url.toString());"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                String requestBody \u003d JsonUtils.toCompactJson(task.getRequestBody());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                requestBuilder.putHeaders(\"Content-Type\", \"application/json; charset\u003dUTF-8\")"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        .setRelativeUri(task.getWorkerUrl())"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        .setBody(ByteString.copyFrom(requestBody, Const.ENCODING));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Task.Builder taskBuilder \u003d Task.newBuilder().setAppEngineHttpRequest(requestBuilder.build());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (countdownTime \u003e 0) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                taskBuilder.setScheduleTime("},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        Timestamp.newBuilder()"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                                .setSeconds(Instant.now().plusMillis(countdownTime).getEpochSecond()));"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"            client.createTask(queuePath, taskBuilder.build());"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            log.severe(\"Cannot create Cloud Tasks client\", e);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":66}},{"path":"src/main/java/teammates/logic/external/GoogleRecaptchaService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.apache.http.client.utils.URIBuilder;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.google.gson.JsonArray;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.gson.JsonObject;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.HttpRequest;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Google-based reCAPTCHA verifier service."},{"lineNumber":17,"author":{"gitId":"-"},"content":" *"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * @see \u003ca href\u003d\"https://developers.google.com/recaptcha/docs/verify\"\u003ereCAPTCHA user response verification API\u003c/a\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class GoogleRecaptchaService implements RecaptchaService {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** The Google reCAPTCHA API URL to verify the response token. */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VERIFY_URL \u003d \"https://www.google.com/recaptcha/api/siteverify\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String secretKey;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public GoogleRecaptchaService(String secretKey) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.secretKey \u003d secretKey;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean isVerificationSuccessful(String captchaResponse) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (secretKey \u003d\u003d null || secretKey.isEmpty()) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (captchaResponse \u003d\u003d null || captchaResponse.isEmpty()) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String response \u003d getApiResponse(captchaResponse, secretKey);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            JsonObject responseInJson \u003d JsonUtils.parse(response).getAsJsonObject();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"            if (responseInJson.has(\"error-codes\")) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                JsonArray errorCodes \u003d responseInJson.get(\"error-codes\").getAsJsonArray();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                log.warning(\"Error codes during reCAPTCHA verification: \" + errorCodes.toString());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Boolean.parseBoolean(responseInJson.get(\"success\").toString());"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            log.severe(\"\", e);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    String getApiResponse(String captchaResponse, String secretKey) throws URISyntaxException, IOException {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        URIBuilder urlb \u003d new URIBuilder(VERIFY_URL);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        urlb.setParameter(\"secret\", secretKey);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        urlb.setParameter(\"response\", captchaResponse);"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return HttpRequest.executeGetRequest(urlb.build());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":66}},{"path":"src/main/java/teammates/logic/external/LocalFileStorageService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.InputStream;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.OutputStream;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.common.io.ByteStreams;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Holds functions for operations related to binary file storage in local dev environment."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public final class LocalFileStorageService implements FileStorageService {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String BASE_DIRECTORY \u003d System.getProperty(\"user.dir\") + \"/filestorage-dev\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static String constructFilePath(String fileKey) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return BASE_DIRECTORY + \"/\" + fileKey;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void delete(String fileKey) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        File file \u003d new File(constructFilePath(fileKey));"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        file.delete();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void create(String fileKey, byte[] contentBytes, String contentType) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try (OutputStream os \u003d Files.newOutputStream(Paths.get(constructFilePath(fileKey)))) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            os.write(contentBytes);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            log.warning(\"\", e);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean doesFileExist(String fileKey) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Files.exists(Paths.get(constructFilePath(fileKey)));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public byte[] getContent(String fileKey) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        byte[] buffer;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try (InputStream fis \u003d Files.newInputStream(Paths.get(constructFilePath(fileKey)))) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            buffer \u003d ByteStreams.toByteArray(fis);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            log.warning(\"\", e);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new byte[0];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return buffer;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":57}},{"path":"src/main/java/teammates/logic/external/LocalLoggingService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.lang.reflect.Type;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.concurrent.ConcurrentHashMap;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.apache.commons.math3.random.RandomDataGenerator;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.google.common.reflect.TypeToken;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.gson.JsonParseException;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.QueryLogsResults;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.ExceptionLogDetails;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.GeneralLogEntry;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogDetails;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.LogEvent;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.QueryLogsParams;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.RequestLogDetails;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.RequestLogUser;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.util.FileHelper;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Holds functions for operations related to logs reading/writing in local dev environment."},{"lineNumber":34,"author":{"gitId":"-"},"content":" *"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * \u003cp\u003eThe current implementation uses an in-memory storage of logs to simulate the logs"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * retention locally for feedback session logs only. It is not meant as a replacement but"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * merely for testing purposes."},{"lineNumber":38,"author":{"gitId":"-"},"content":" */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LocalLoggingService implements LogService {"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Map\u003cString, List\u003cFeedbackSessionLogEntry\u003e\u003e FEEDBACK_SESSION_LOG_ENTRIES \u003d new ConcurrentHashMap\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final List\u003cGeneralLogEntry\u003e LOCAL_LOG_ENTRIES \u003d loadLocalLogEntries();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String ASCENDING_ORDER \u003d \"asc\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static List\u003cGeneralLogEntry\u003e loadLocalLogEntries() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Timestamp of logs are randomly created to be within the last one hour"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        long currentTimestamp \u003d Instant.now().toEpochMilli();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        long earliestTimestamp \u003d currentTimestamp - 60 * 60 * 1000;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            String jsonString \u003d FileHelper.readResourceFile(\"logsForLocalDev.json\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Type type \u003d new TypeToken\u003cCollection\u003cGeneralLogEntry\u003e\u003e(){}.getType();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            Collection\u003cGeneralLogEntry\u003e logEntriesCollection \u003d JsonUtils.fromJson(jsonString, type);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return logEntriesCollection.stream()"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    .map(log -\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        long timestamp \u003d new RandomDataGenerator().nextLong(earliestTimestamp, currentTimestamp);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        GeneralLogEntry logEntryWithUpdatedTimestamp \u003d new GeneralLogEntry("},{"lineNumber":57,"author":{"gitId":"-"},"content":"                                log.getSeverity(), log.getTrace(), log.getInsertId(), log.getResourceIdentifier(),"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                                log.getSourceLocation(), timestamp);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        logEntryWithUpdatedTimestamp.setDetails(log.getDetails());"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        logEntryWithUpdatedTimestamp.setMessage(log.getMessage());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                        return logEntryWithUpdatedTimestamp;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    })"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toList());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (JsonParseException e) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Not supported in dev server"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public QueryLogsResults queryLogs(QueryLogsParams queryLogsParams) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Page size is set as a small value to test loading of more logs"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        int pageSize \u003d 10;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cGeneralLogEntry\u003e result \u003d LOCAL_LOG_ENTRIES.stream()"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .sorted((x, y) -\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    String order \u003d queryLogsParams.getOrder();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    if (ASCENDING_ORDER.equals(order)) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        return Long.compare(x.getTimestamp(), y.getTimestamp());"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    } else {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                        return Long.compare(y.getTimestamp(), x.getTimestamp());"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getSeverity() \u003d\u003d null"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        || log.getSeverity().equals(queryLogsParams.getSeverity()))"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getMinSeverity() \u003d\u003d null"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        || log.getSeverity().getSeverityLevel()"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                            \u003e\u003d queryLogsParams.getMinSeverity().getSeverityLevel())"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .filter(log -\u003e log.getTimestamp() \u003e queryLogsParams.getStartTime())"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .filter(log -\u003e log.getTimestamp() \u003c\u003d queryLogsParams.getEndTime())"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getTraceId() \u003d\u003d null"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        || queryLogsParams.getTraceId().equals(log.getTrace()))"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getVersion() \u003d\u003d null"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        || queryLogsParams.getVersion().equals(log.getResourceIdentifier().get(\"version_id\")))"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getSourceLocation().getFile() \u003d\u003d null"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                        || log.getSourceLocation().getFile().equals(queryLogsParams.getSourceLocation().getFile()))"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .filter(log -\u003e queryLogsParams.getSourceLocation().getFunction() \u003d\u003d null"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                        || log.getSourceLocation().getFunction().equals(queryLogsParams.getSourceLocation().getFunction()))"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .filter(log -\u003e isEventBasedFilterSatisfied(log, queryLogsParams))"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .limit(pageSize)"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cGeneralLogEntry\u003e copiedResults \u003d deepCopyLogEntries(result);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        boolean hasNextPage \u003d copiedResults.size() \u003d\u003d pageSize;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new QueryLogsResults(copiedResults, hasNextPage);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private boolean isEventBasedFilterSatisfied(GeneralLogEntry log, QueryLogsParams queryLogsParams) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String actionClassFilter \u003d queryLogsParams.getActionClass();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String exceptionClassFilter \u003d queryLogsParams.getExceptionClass();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String logEventFilter \u003d queryLogsParams.getLogEvent();"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String latencyFilter \u003d queryLogsParams.getLatency();"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String statusFilter \u003d queryLogsParams.getStatus();"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        RequestLogUser userInfoFilter \u003d queryLogsParams.getUserInfoParams();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String regkeyFilter \u003d userInfoFilter.getRegkey();"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String emailFilter \u003d userInfoFilter.getEmail();"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String googleIdFilter \u003d userInfoFilter.getGoogleId();"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (actionClassFilter \u003d\u003d null \u0026\u0026 exceptionClassFilter \u003d\u003d null \u0026\u0026 logEventFilter \u003d\u003d null"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 latencyFilter \u003d\u003d null \u0026\u0026 statusFilter \u003d\u003d null \u0026\u0026 regkeyFilter \u003d\u003d null"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 emailFilter \u003d\u003d null \u0026\u0026 googleIdFilter \u003d\u003d null) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        LogDetails details \u003d log.getDetails();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (details \u003d\u003d null) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (logEventFilter !\u003d null \u0026\u0026 !details.getEvent().name().equals(logEventFilter)) {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!isExceptionFilterSatisfied(details, exceptionClassFilter)) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return isRequestFilterSatisfied(details, actionClassFilter, latencyFilter, statusFilter,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                regkeyFilter, emailFilter, googleIdFilter);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private boolean isExceptionFilterSatisfied(LogDetails details, String exceptionClassFilter) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (exceptionClassFilter \u003d\u003d null) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (details.getEvent() !\u003d LogEvent.EXCEPTION_LOG) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ExceptionLogDetails exceptionDetails \u003d (ExceptionLogDetails) details;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return exceptionDetails.getExceptionClass().equals(exceptionClassFilter);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private boolean isRequestFilterSatisfied(LogDetails details, String actionClassFilter,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String latencyFilter, String statusFilter, String regkeyFilter, String emailFilter, String googleIdFilter) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (actionClassFilter \u003d\u003d null \u0026\u0026 latencyFilter \u003d\u003d null \u0026\u0026 statusFilter \u003d\u003d null"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 regkeyFilter \u003d\u003d null \u0026\u0026 emailFilter \u003d\u003d null \u0026\u0026 googleIdFilter \u003d\u003d null) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (details.getEvent() !\u003d LogEvent.REQUEST_LOG) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        RequestLogDetails requestDetails \u003d (RequestLogDetails) details;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (actionClassFilter !\u003d null \u0026\u0026 !actionClassFilter.equals(requestDetails.getActionClass())) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (statusFilter !\u003d null \u0026\u0026 !statusFilter.equals(String.valueOf(requestDetails.getResponseStatus()))) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (latencyFilter !\u003d null) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            Pattern p \u003d Pattern.compile(\"^(\u003e|\u003e\u003d|\u003c|\u003c\u003d) *(\\\\d+)$\");"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            Matcher m \u003d p.matcher(latencyFilter);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            long logLatency \u003d ((RequestLogDetails) details).getResponseTime();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            boolean isFilterSatisfied \u003d false;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (m.matches()) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                int time \u003d Integer.parseInt(m.group(2));"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                switch (m.group(1)) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                case \"\u003e\":"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    isFilterSatisfied \u003d logLatency \u003e time;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                case \"\u003e\u003d\":"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    isFilterSatisfied \u003d logLatency \u003e\u003d time;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                case \"\u003c\":"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                    isFilterSatisfied \u003d logLatency \u003c time;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                case \"\u003c\u003d\":"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    isFilterSatisfied \u003d logLatency \u003c\u003d time;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                default:"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    assert false : \"Unreachable case\";"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (!isFilterSatisfied) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        RequestLogUser userInfo \u003d requestDetails.getUserInfo();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (regkeyFilter !\u003d null \u0026\u0026 (userInfo \u003d\u003d null || !regkeyFilter.equals(userInfo.getRegkey()))) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (emailFilter !\u003d null \u0026\u0026 (userInfo \u003d\u003d null || !emailFilter.equals(userInfo.getEmail()))) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return googleIdFilter \u003d\u003d null || userInfo !\u003d null \u0026\u0026 googleIdFilter.equals(userInfo.getGoogleId());"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        FeedbackSessionLogEntry logEntry \u003d new FeedbackSessionLogEntry(email, fsName,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                fslType, Instant.now().toEpochMilli());"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        FEEDBACK_SESSION_LOG_ENTRIES.computeIfAbsent(courseId, k -\u003e new ArrayList\u003c\u003e()).add(logEntry);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            long startTime, long endTime, String fsName) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return FEEDBACK_SESSION_LOG_ENTRIES"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .getOrDefault(courseId, new ArrayList\u003c\u003e())"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                .filter(log -\u003e email \u003d\u003d null || log.getStudentEmail().equals(email))"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                .filter(log -\u003e fsName \u003d\u003d null || log.getFeedbackSessionName().equals(fsName))"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .filter(log -\u003e log.getTimestamp() \u003e\u003d startTime)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .filter(log -\u003e log.getTimestamp() \u003c\u003d endTime)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    private List\u003cGeneralLogEntry\u003e deepCopyLogEntries(List\u003cGeneralLogEntry\u003e logEntries) {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        List\u003cGeneralLogEntry\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        for (GeneralLogEntry logEntry : logEntries) {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            GeneralLogEntry copiedEntry \u003d new GeneralLogEntry(logEntry.getSeverity(),"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    logEntry.getTrace(), logEntry.getInsertId(), logEntry.getResourceIdentifier(),"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    logEntry.getSourceLocation(), logEntry.getTimestamp());"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            copiedEntry.setDetails(JsonUtils.fromJson(JsonUtils.toCompactJson(logEntry.getDetails()), LogDetails.class));"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            copiedEntry.setMessage(logEntry.getMessage());"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            result.add(copiedEntry);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":243}},{"path":"src/main/java/teammates/logic/external/LocalTaskQueueService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.URI;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.apache.http.NameValuePair;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.apache.http.client.utils.URIBuilder;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.apache.http.entity.StringEntity;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.CloseableHttpClient;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.HttpClients;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.apache.http.message.BasicNameValuePair;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Holds functions for operations related to task queue in local dev environment."},{"lineNumber":26,"author":{"gitId":"-"},"content":" */"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LocalTaskQueueService implements TaskQueueService {"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void addDeferredTask(TaskWrapper task, long countdownTime) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // In dev server, task queues are either not active (i.e. they will not be executed even if queued)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // or they will be executed immediately without going through any kind of \"queue\""},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!Config.TASKQUEUE_ACTIVE) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        HttpPost post \u003d new HttpPost(createBasicUri("},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \"http://localhost:\" + Config.getPort() + task.getWorkerUrl(), task.getParamMap()));"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (task.getRequestBody() !\u003d null) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            StringEntity entity \u003d new StringEntity("},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    JsonUtils.toCompactJson(task.getRequestBody()), Const.ENCODING);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            post.setEntity(entity);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        post.addHeader(\"X-AppEngine-QueueName\", task.getQueueName());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        post.addHeader(\"X-Google-DevAppserver-SkipAdminCheck\", \"true\");"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try (CloseableHttpClient httpClient \u003d HttpClients.createDefault()) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            httpClient.execute(post);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            log.severe(\"Error when executing HTTP request\", e);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static URI createBasicUri(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cNameValuePair\u003e postParameters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (params !\u003d null) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            params.forEach((key, value) -\u003e postParameters.add(new BasicNameValuePair(key, value)));"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            URIBuilder uriBuilder \u003d new URIBuilder(url);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            uriBuilder.addParameters(postParameters);"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return uriBuilder.build();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (URISyntaxException e) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":73}},{"path":"src/main/java/teammates/logic/external/LogService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.QueryLogsResults;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.logs.QueryLogsParams;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * An interface used for logs operations such as reading/writing."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface LogService {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Gets the list of recent error- or higher level logs."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    List\u003cErrorLogEntry\u003e getRecentErrorLogs();"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Gets the list of logs satisfying the given criteria."},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    QueryLogsResults queryLogs(QueryLogsParams queryLogsParams);"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a feedback session log."},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Gets the feedback session logs as filtered by the given parameters."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            long startTime, long endTime, String fsName);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":34}},{"path":"src/main/java/teammates/logic/external/MailgunService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javax.ws.rs.core.MediaType;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.sun.jersey.api.client.Client;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.sun.jersey.api.client.ClientResponse;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.sun.jersey.api.client.WebResource;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.sun.jersey.api.client.filter.HTTPBasicAuthFilter;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.sun.jersey.multipart.FormDataMultiPart;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Email sender service provided by Mailgun."},{"lineNumber":22,"author":{"gitId":"-"},"content":" *"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see \u003ca href\u003d\"https://cloud.google.com/appengine/docs/standard/java11/sending-messages#mailgun\"\u003ehttps://cloud.google.com/appengine/docs/standard/java11/sending-messages#mailgun\u003c/a\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see FormDataMultiPart"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MailgunService implements EmailSenderService {"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * {@inheritDoc}"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public FormDataMultiPart parseToEmail(EmailWrapper wrapper) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FormDataMultiPart formData \u003d new FormDataMultiPart();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String sender \u003d wrapper.getSenderName() \u003d\u003d null || wrapper.getSenderName().isEmpty()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        ? wrapper.getSenderEmail()"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        : wrapper.getSenderName() + \" \u003c\" + wrapper.getSenderEmail() + \"\u003e\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        formData.field(\"from\", sender);"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        formData.field(\"to\", wrapper.getRecipient());"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (wrapper.getBcc() !\u003d null \u0026\u0026 !wrapper.getBcc().isEmpty()) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            formData.field(\"bcc\", wrapper.getBcc());"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        formData.field(\"h:Reply-To\", wrapper.getReplyTo());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        formData.field(\"subject\", wrapper.getSubject());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        formData.field(\"html\", wrapper.getContent());"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return formData;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper wrapper) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try (FormDataMultiPart email \u003d parseToEmail(wrapper)) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Client client \u003d Client.create();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            client.addFilter(new HTTPBasicAuthFilter(\"api\", Config.MAILGUN_APIKEY));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            WebResource webResource \u003d"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    client.resource(\"https://api.mailgun.net/v3/\" + Config.MAILGUN_DOMAINNAME + \"/messages\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"            ClientResponse response \u003d webResource.type(MediaType.MULTIPART_FORM_DATA_TYPE)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    .post(ClientResponse.class, email);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(response.getStatus(), response.getStatusInfo().getReasonPhrase());"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            log.warning(\"Could not clean up resources after sending email\", e);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(HttpStatus.SC_OK, e.getMessage());"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":72}},{"path":"src/main/java/teammates/logic/external/MailjetService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.json.JSONArray;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.json.JSONObject;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.jsoup.Jsoup;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.mailjet.client.ClientOptions;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.mailjet.client.MailjetClient;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.mailjet.client.MailjetRequest;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.mailjet.client.MailjetResponse;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.mailjet.client.errors.MailjetException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.mailjet.client.resource.Email;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.exception.EmailSendingException;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Email sender service provided by Mailjet."},{"lineNumber":22,"author":{"gitId":"-"},"content":" *"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see \u003ca href\u003d\"https://cloud.google.com/appengine/docs/standard/java11/sending-messages#mailjet\"\u003ehttps://cloud.google.com/appengine/docs/standard/java11/sending-messages#mailjet\u003c/a\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see MailjetClient"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see MailjetRequest"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see MailjetResponse"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MailjetService implements EmailSenderService {"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * {@inheritDoc}"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public MailjetRequest parseToEmail(EmailWrapper wrapper) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        MailjetRequest request \u003d new MailjetRequest(Email.resource);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        request.property(Email.FROMEMAIL, wrapper.getSenderEmail());"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (wrapper.getSenderName() !\u003d null \u0026\u0026 !wrapper.getSenderName().isEmpty()) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            request.property(Email.FROMNAME, wrapper.getSenderName());"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        request.property(Email.RECIPIENTS, new JSONArray().put(new JSONObject().put(\"Email\", wrapper.getRecipient())));"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (wrapper.getBcc() !\u003d null \u0026\u0026 !wrapper.getBcc().isEmpty()) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            request.append(Email.RECIPIENTS, new JSONObject().put(\"Email\", wrapper.getBcc()));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        request.property(Email.HEADERS, new JSONObject().put(\"Reply-To\", wrapper.getReplyTo()));"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        request.property(Email.SUBJECT, wrapper.getSubject());"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        request.property(Email.HTMLPART, wrapper.getContent());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        request.property(Email.TEXTPART, Jsoup.parse(wrapper.getContent()).text());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return request;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper wrapper) throws EmailSendingException {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        MailjetRequest email \u003d parseToEmail(wrapper);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        MailjetClient mailjet \u003d new MailjetClient("},{"lineNumber":57,"author":{"gitId":"-"},"content":"                ClientOptions.builder().apiKey(Config.MAILJET_APIKEY).apiSecretKey(Config.MAILJET_SECRETKEY).build());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            MailjetResponse response \u003d mailjet.post(email);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(response.getStatus(), response.getData().toString());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (MailjetException e) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new EmailSendingException(e, HttpStatus.SC_BAD_GATEWAY);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":65}},{"path":"src/main/java/teammates/logic/external/RecaptchaService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * An interface to verify the user\u0027s reCAPTCHA response."},{"lineNumber":5,"author":{"gitId":"-"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public interface RecaptchaService {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Returns true if the {@code captchaResponse} token is verified successfully."},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    boolean isVerificationSuccessful(String captchaResponse);"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":12}},{"path":"src/main/java/teammates/logic/external/SendgridService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.jsoup.Jsoup;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.sendgrid.Method;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.sendgrid.Request;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.sendgrid.Response;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.sendgrid.SendGrid;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.Mail;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.objects.Content;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.objects.Email;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.objects.Personalization;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.exception.EmailSendingException;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailSendingStatus;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Email sender service provided by SendGrid."},{"lineNumber":24,"author":{"gitId":"-"},"content":" *"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see \u003ca href\u003d\"https://cloud.google.com/appengine/docs/standard/java11/sending-messages#sendgrid\"\u003ehttps://cloud.google.com/appengine/docs/standard/java11/sending-messages#sendgrid\u003c/a\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see SendGrid"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SendgridService implements EmailSenderService {"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * {@inheritDoc}"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Mail parseToEmail(EmailWrapper wrapper) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Mail email \u003d new Mail();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Email sender;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (wrapper.getSenderName() \u003d\u003d null || wrapper.getSenderName().isEmpty()) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            sender \u003d new Email(wrapper.getSenderEmail());"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            sender \u003d new Email(wrapper.getSenderEmail(), wrapper.getSenderName());"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email.setFrom(sender);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email.setReplyTo(new Email(wrapper.getReplyTo()));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Personalization personalization \u003d new Personalization();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        personalization.addTo(new Email(wrapper.getRecipient()));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (wrapper.getBcc() !\u003d null \u0026\u0026 !wrapper.getBcc().isEmpty()) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            personalization.addBcc(new Email(wrapper.getBcc()));"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email.addPersonalization(personalization);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email.setSubject(wrapper.getSubject());"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email.addContent(new Content(\"text/plain\", Jsoup.parse(wrapper.getContent()).text()));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email.addContent(new Content(\"text/html\", wrapper.getContent()));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EmailSendingStatus sendEmail(EmailWrapper wrapper) throws EmailSendingException {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Mail email \u003d parseToEmail(wrapper);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        SendGrid sendgrid \u003d new SendGrid(Config.SENDGRID_APIKEY);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Request request \u003d new Request();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        request.setMethod(Method.POST);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        request.setEndpoint(\"mail/send\");"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            request.setBody(email.build());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Response response \u003d sendgrid.api(request);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EmailSendingStatus(response.getStatusCode(), response.getBody());"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new EmailSendingException(e, HttpStatus.SC_BAD_GATEWAY);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":71}},{"path":"src/main/java/teammates/logic/external/TaskQueueService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Handles operations related to task queues."},{"lineNumber":7,"author":{"gitId":"-"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface TaskQueueService {"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Adds the given task, to be run after the specified time, to the specified queue."},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param task the task object containing the details of task to be added"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param countdownTime the time delay for the task to be executed"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    void addDeferredTask(TaskWrapper task, long countdownTime);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":17}},{"path":"src/main/java/teammates/logic/external/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":" * Contains the logic of the external dependencies and services."},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"}],"authorContributionMap":{"fsgmhoward":4}},{"path":"src/main/java/teammates/storage/api/NotificationsDb.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import static com.googlecode.objectify.ObjectifyService.ofy;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import java.util.stream.Collectors;"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.Key;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.cmd.LoadType;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"import teammates.storage.entity.Notification;"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":" * Handles CRUD operations for notifications."},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":" *"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":" * @see Notification"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":" * @see NotificationAttributes"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"public final class NotificationsDb extends EntitiesDb\u003cNotification, NotificationAttributes\u003e {"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"    private static final NotificationsDb instance \u003d new NotificationsDb();"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationsDb() {"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"        // prevent initialization"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"    public static NotificationsDb inst() {"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"        return instance;"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"     * Gets a notification by its unique ID."},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes getNotification(String notificationId) {"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"        assert notificationId !\u003d null;"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"        return notificationId.isEmpty() ? null : makeAttributesOrNull(getNotificationEntity(notificationId));"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"     * Gets all notifications."},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getAllNotifications() {"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotification\u003e notifications \u003d load().list();"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationAttributes\u003e notificationAttributes \u003d makeAttributes(notifications);"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes.sortByStartTime(notificationAttributes);"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"        return notificationAttributes;"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"     * Gets notifications by {@code targetUser}."},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"     * @return a list of notifications for the specified targetUser."},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationAttributes\u003e getActiveNotificationsByTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"        assert targetUser !\u003d null;"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotification\u003e endEntities \u003d load()"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"                .filter(\"targetUser\", targetUser)"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"                .filter(\"endTime \u003e\", Instant.now())"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"                .list();"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"        endEntities.addAll(load()"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"                .filter(\"targetUser\", NotificationTargetUser.GENERAL)"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"                .filter(\"endTime \u003e\", Instant.now())"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"                .list());"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotification\u003e ongoingNotifications \u003d endEntities.stream()"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"                .filter(notification -\u003e"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"                   notification.getStartTime().isBefore(Instant.now()))"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"                .collect(Collectors.toList());"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationAttributes\u003e notificationAttributes \u003d makeAttributes(ongoingNotifications);"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes.sortByStartTime(notificationAttributes);"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"        return notificationAttributes;"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"     * Updates a notification with {@link NotificationAttributes.UpdateOptions}."},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"     * @return updated notification"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"     * @throws EntityDoesNotExistException if notification cannot be found"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationAttributes updateNotification(NotificationAttributes.UpdateOptions updateOptions)"},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":92,"author":{"gitId":"fsgmhoward"},"content":"        assert updateOptions !\u003d null;"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":94,"author":{"gitId":"fsgmhoward"},"content":"        Notification notification \u003d getNotificationEntity(updateOptions.getNotificationId());"},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"        if (notification \u003d\u003d null) {"},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"            throw new EntityDoesNotExistException(ERROR_UPDATE_NON_EXISTENT + updateOptions);"},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":99,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes newAttributes \u003d makeAttributes(notification);"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"        newAttributes.update(updateOptions);"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":102,"author":{"gitId":"fsgmhoward"},"content":"        newAttributes.sanitizeForSaving();"},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":"        if (!newAttributes.isValid()) {"},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"            throw new InvalidParametersException(newAttributes.getInvalidityInfo());"},{"lineNumber":105,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":"        putEntity(newAttributes);"},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":109,"author":{"gitId":"fsgmhoward"},"content":"        return newAttributes;"},{"lineNumber":110,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":112,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"fsgmhoward"},"content":"     * Deletes a notification by its unique ID."},{"lineNumber":114,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"fsgmhoward"},"content":"     * \u003cp\u003eFails silently if there is no such notification."},{"lineNumber":116,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"fsgmhoward"},"content":"    public void deleteNotification(String notificationId) {"},{"lineNumber":118,"author":{"gitId":"fsgmhoward"},"content":"        assert notificationId !\u003d null;"},{"lineNumber":119,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"        deleteEntity(Key.create(Notification.class, notificationId));"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":123,"author":{"gitId":"fsgmhoward"},"content":"    private Notification getNotificationEntity(String notificationId) {"},{"lineNumber":124,"author":{"gitId":"fsgmhoward"},"content":"        return load().id(notificationId).now();"},{"lineNumber":125,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":127,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":128,"author":{"gitId":"fsgmhoward"},"content":"    LoadType\u003cNotification\u003e load() {"},{"lineNumber":129,"author":{"gitId":"fsgmhoward"},"content":"        return ofy().load().type(Notification.class);"},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":132,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":133,"author":{"gitId":"fsgmhoward"},"content":"    boolean hasExistingEntities(NotificationAttributes entityToCreate) {"},{"lineNumber":134,"author":{"gitId":"fsgmhoward"},"content":"        Key\u003cNotification\u003e keyToFind \u003d Key.create(Notification.class, entityToCreate.getNotificationId());"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"        return !load().filterKey(keyToFind).keys().list().isEmpty();"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"    @Override"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"    NotificationAttributes makeAttributes(Notification entity) {"},{"lineNumber":140,"author":{"gitId":"fsgmhoward"},"content":"        assert entity !\u003d null;"},{"lineNumber":141,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":142,"author":{"gitId":"fsgmhoward"},"content":"        return NotificationAttributes.valueOf(entity);"},{"lineNumber":143,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"ziqing26":43,"fsgmhoward":101}},{"path":"src/main/java/teammates/storage/api/OfyHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextEvent;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javax.servlet.ServletContextListener;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.DatastoreOptions;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyFactory;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyService;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Account;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.storage.entity.AccountRequest;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.storage.entity.BaseEntity;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Course;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.storage.entity.CourseStudent;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.storage.entity.DeadlineExtension;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackQuestion;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackResponse;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackResponseComment;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.storage.entity.FeedbackSession;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.storage.entity.Instructor;"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"import teammates.storage.entity.Notification;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.storage.entity.StudentProfile;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.storage.entity.UsageStatistics;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Setup in web.xml to register Objectify at application startup."},{"lineNumber":28,"author":{"gitId":"-"},"content":" **/"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class OfyHelper implements ServletContextListener {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static void initializeDatastore() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DatastoreOptions.Builder builder \u003d DatastoreOptions.newBuilder().setProjectId(Config.APP_ID);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            builder.setHost(\"http://localhost:\" + Config.APP_LOCALDATASTORE_PORT);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ObjectifyService.init(new ObjectifyFactory(builder.build().getService()));"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Register entity classes in Objectify service."},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void registerEntityClasses() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Account.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Course.class);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ObjectifyService.register(CourseStudent.class);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackQuestion.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackResponse.class);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackResponseComment.class);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ObjectifyService.register(FeedbackSession.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ObjectifyService.register(Instructor.class);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ObjectifyService.register(StudentProfile.class);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ObjectifyService.register(AccountRequest.class);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ObjectifyService.register(UsageStatistics.class);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ObjectifyService.register(DeadlineExtension.class);"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":"        ObjectifyService.register(Notification.class);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // enable the ability to use java.time.Instant to issue query"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ObjectifyService.factory().getTranslators().add(new BaseEntity.InstantTranslatorFactory());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void contextInitialized(ServletContextEvent event) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Invoked by Jetty at application startup."},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initializeDatastore();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        registerEntityClasses();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void contextDestroyed(ServletContextEvent event) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Nothing to do"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":69}},{"path":"src/main/java/teammates/storage/entity/Notification.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.storage.entity;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import java.util.UUID;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.Entity;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.Index;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.OnSave;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import com.googlecode.objectify.annotation.Translate;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":" * Represents a unique notification in the system."},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"@Entity"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"@Index"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"public class Notification extends BaseEntity {"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    @Id"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    private String notificationId;"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"    private Instant startTime;"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"    private Instant endTime;"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationStyle style;"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"    private NotificationTargetUser targetUser;"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"    private String title;"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"    private String message;"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"    private boolean shown;"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"    private Instant createdAt;"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"    @Translate(InstantTranslatorFactory.class)"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"    private Instant updatedAt;"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"    @SuppressWarnings(\"unused\")"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"    private Notification() {"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"        // required by Objectify"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"     * Instantiates a new notification, with ID randomly generated and time fields filled automatically."},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":"     * @param startTime start time for the notification to be shown to users"},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"     * @param endTime notifications are hidden from users after endTime"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":"     * @param style style of the notification (e.g. success, warning, etc.)"},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"     * @param targetUser student or instructor"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"     * @param title title of the notification"},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"     * @param message message body of the notification"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":"    public Notification(Instant startTime, Instant endTime, NotificationStyle style, NotificationTargetUser targetUser,"},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"            String title, String message) {"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"        this.setStartTime(startTime);"},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"        this.setEndTime(endTime);"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"        this.setStyle(style);"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"        this.setTargetUser(targetUser);"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":"        this.setTitle(title);"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"        this.setMessage(message);"},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"        this.setCreatedAt(Instant.now());"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"        UUID uuid \u003d UUID.randomUUID();"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"        this.notificationId \u003d uuid.toString();"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"        this.shown \u003d false;"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":"     * Instantiates a new notification, with all fields passed in as parameters."},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":"     * This is mainly for conversion from attributes to entity."},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"    public Notification(String notificationId, Instant startTime, Instant endTime,"},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"                        NotificationStyle style, NotificationTargetUser targetUser,"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"                        String title, String message, boolean shown, Instant createdAt, Instant updatedAt) {"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"        this.setStartTime(startTime);"},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"        this.setEndTime(endTime);"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"        this.setStyle(style);"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"        this.setTargetUser(targetUser);"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"        this.setTitle(title);"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"        this.setMessage(message);"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"        if (createdAt \u003d\u003d null) {"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"            this.setCreatedAt(Instant.now());"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"        } else {"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":"            this.setCreatedAt(createdAt);"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"        this.setUpdatedAt(updatedAt);"},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"        this.notificationId \u003d notificationId;"},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":"        this.shown \u003d shown;"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"        assert this.createdAt !\u003d null;"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":102,"author":{"gitId":"fsgmhoward"},"content":"    public String getNotificationId() {"},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":"        return notificationId;"},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":106,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getStartTime() {"},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":"        return startTime;"},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":110,"author":{"gitId":"fsgmhoward"},"content":"    public void setStartTime(Instant startTime) {"},{"lineNumber":111,"author":{"gitId":"fsgmhoward"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":112,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":114,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getEndTime() {"},{"lineNumber":115,"author":{"gitId":"fsgmhoward"},"content":"        return endTime;"},{"lineNumber":116,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":118,"author":{"gitId":"fsgmhoward"},"content":"    public void setEndTime(Instant endTime) {"},{"lineNumber":119,"author":{"gitId":"fsgmhoward"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":122,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationStyle getStyle() {"},{"lineNumber":123,"author":{"gitId":"fsgmhoward"},"content":"        return style;"},{"lineNumber":124,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"    public void setStyle(NotificationStyle style) {"},{"lineNumber":127,"author":{"gitId":"fsgmhoward"},"content":"        this.style \u003d style;"},{"lineNumber":128,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":"    public NotificationTargetUser getTargetUser() {"},{"lineNumber":131,"author":{"gitId":"fsgmhoward"},"content":"        return targetUser;"},{"lineNumber":132,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":134,"author":{"gitId":"ziqing26"},"content":"    public void setTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"        this.targetUser \u003d targetUser;"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"    public String getTitle() {"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"        return title;"},{"lineNumber":140,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":142,"author":{"gitId":"fsgmhoward"},"content":"    public void setTitle(String title) {"},{"lineNumber":143,"author":{"gitId":"fsgmhoward"},"content":"        this.title \u003d title;"},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":146,"author":{"gitId":"fsgmhoward"},"content":"    public String getMessage() {"},{"lineNumber":147,"author":{"gitId":"fsgmhoward"},"content":"        return message;"},{"lineNumber":148,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":150,"author":{"gitId":"fsgmhoward"},"content":"    public void setMessage(String message) {"},{"lineNumber":151,"author":{"gitId":"fsgmhoward"},"content":"        this.message \u003d message;"},{"lineNumber":152,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":154,"author":{"gitId":"fsgmhoward"},"content":"    public boolean isShown() {"},{"lineNumber":155,"author":{"gitId":"fsgmhoward"},"content":"        return shown;"},{"lineNumber":156,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":158,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"fsgmhoward"},"content":"     * Sets the notification as shown to the user."},{"lineNumber":160,"author":{"gitId":"fsgmhoward"},"content":"     * Only allowed to change value from false to true."},{"lineNumber":161,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"fsgmhoward"},"content":"    public void setShown() {"},{"lineNumber":163,"author":{"gitId":"fsgmhoward"},"content":"        this.shown \u003d true;"},{"lineNumber":164,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":166,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getCreatedAt() {"},{"lineNumber":167,"author":{"gitId":"fsgmhoward"},"content":"        return createdAt;"},{"lineNumber":168,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":170,"author":{"gitId":"fsgmhoward"},"content":"    public void setCreatedAt(Instant createdAt) {"},{"lineNumber":171,"author":{"gitId":"fsgmhoward"},"content":"        this.createdAt \u003d createdAt;"},{"lineNumber":172,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":174,"author":{"gitId":"fsgmhoward"},"content":"    public Instant getUpdatedAt() {"},{"lineNumber":175,"author":{"gitId":"fsgmhoward"},"content":"        return updatedAt;"},{"lineNumber":176,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":178,"author":{"gitId":"fsgmhoward"},"content":"    public void setUpdatedAt(Instant updatedAt) {"},{"lineNumber":179,"author":{"gitId":"fsgmhoward"},"content":"        this.updatedAt \u003d updatedAt;"},{"lineNumber":180,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":182,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"fsgmhoward"},"content":"     * Updates the updatedAt timestamp when saving."},{"lineNumber":184,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"fsgmhoward"},"content":"    @OnSave"},{"lineNumber":186,"author":{"gitId":"fsgmhoward"},"content":"    public void updateLastUpdateTimestamp() {"},{"lineNumber":187,"author":{"gitId":"fsgmhoward"},"content":"        this.setUpdatedAt(Instant.now());"},{"lineNumber":188,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"ziqing26":12,"fsgmhoward":177}},{"path":"src/main/java/teammates/ui/constants/ApiConst.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.constants;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Special constants used by the back-end."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public enum ApiConst {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // CHECKSTYLE.OFF:JavadocVariable"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    COURSE_ID_MAX_LENGTH(FieldValidator.COURSE_ID_MAX_LENGTH),"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    COURSE_NAME_MAX_LENGTH(FieldValidator.COURSE_NAME_MAX_LENGTH),"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    STUDENT_NAME_MAX_LENGTH(FieldValidator.PERSON_NAME_MAX_LENGTH),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    SECTION_NAME_MAX_LENGTH(FieldValidator.SECTION_NAME_MAX_LENGTH),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    TEAM_NAME_MAX_LENGTH(FieldValidator.TEAM_NAME_MAX_LENGTH),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    EMAIL_MAX_LENGTH(FieldValidator.EMAIL_MAX_LENGTH),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    FEEDBACK_SESSION_NAME_MAX_LENGTH(FieldValidator.FEEDBACK_SESSION_NAME_MAX_LENGTH),"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"    NOTIFICATION_TITLE_MAX_LENGTH(FieldValidator.NOTIFICATION_TITLE_MAX_LENGTH),"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    CONTRIBUTION_POINT_NOT_SUBMITTED(Const.POINTS_NOT_SUBMITTED),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    CONTRIBUTION_POINT_NOT_INITIALIZED(Const.INT_UNINITIALIZED),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CONTRIBUTION_POINT_NOT_SURE(Const.POINTS_NOT_SURE),"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CONTRIBUTION_POINT_EQUAL_SHARE(Const.POINTS_EQUAL_SHARE),"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED(Const.POINTS_NOT_SUBMITTED),"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    RANK_OPTIONS_ANSWER_NOT_SUBMITTED(Const.POINTS_NOT_SUBMITTED),"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_ANSWER_NOT_SUBMITTED(Const.POINTS_NOT_SUBMITTED),"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    NO_VALUE(Const.POINTS_NO_VALUE),"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    LOGS_RETENTION_PERIOD(Const.LOGS_RETENTION_PERIOD.toDays()),"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    SEARCH_QUERY_SIZE_LIMIT(Const.SEARCH_QUERY_SIZE_LIMIT);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Object value;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ApiConst(Object value) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.value \u003d value;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonValue"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Object getValue() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":44}},{"path":"src/main/java/teammates/ui/constants/ResourceEndpoints.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.constants;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * API endpoints for resources."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public enum ResourceEndpoints {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.OFF:JavadocVariable"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    ERROR_REPORT(ResourceURIs.ERROR_REPORT),"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    AUTH(ResourceURIs.AUTH),"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    AUTH_REGKEY(ResourceURIs.AUTH_REGKEY),"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ACCOUNT(ResourceURIs.ACCOUNT),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ACCOUNT_RESET(ResourceURIs.ACCOUNT_RESET),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ACCOUNT_DOWNGRADE(ResourceURIs.ACCOUNT_DOWNGRADE),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ACCOUNT_REQUEST(ResourceURIs.ACCOUNT_REQUEST),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ACCOUNT_REQUEST_RESET(ResourceURIs.ACCOUNT_REQUEST_RESET),"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ACCOUNTS(ResourceURIs.ACCOUNTS),"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    RESPONSE_COMMENT(ResourceURIs.RESPONSE_COMMENT),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    COURSE(ResourceURIs.COURSE),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    COURSE_ARCHIVE(ResourceURIs.COURSE_ARCHIVE),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    BIN_COURSE(ResourceURIs.BIN_COURSE),"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    COURSE_SECTIONS(ResourceURIs.COURSE_SECTIONS),"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    COURSES(ResourceURIs.COURSES),"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    INSTRUCTORS(ResourceURIs.INSTRUCTORS),"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    INSTRUCTOR(ResourceURIs.INSTRUCTOR),"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    INSTRUCTOR_PRIVILEGE(ResourceURIs.INSTRUCTOR_PRIVILEGE),"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    INSTRUCTOR_KEY(ResourceURIs.INSTRUCTOR_KEY),"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    RESULT(ResourceURIs.RESULT),"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    STUDENTS(ResourceURIs.STUDENTS),"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    STUDENT(ResourceURIs.STUDENT),"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    STUDENT_KEY(ResourceURIs.STUDENT_KEY),"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    SESSIONS_ONGOING(ResourceURIs.SESSIONS_ONGOING),"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    SESSION(ResourceURIs.SESSION),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    SESSION_LOGS(ResourceURIs.SESSION_LOGS),"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    SESSION_PUBLISH(ResourceURIs.SESSION_PUBLISH),"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    SESSION_REMIND_SUBMISSION(ResourceURIs.SESSION_REMIND_SUBMISSION),"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    SESSION_REMIND_RESULT(ResourceURIs.SESSION_REMIND_RESULT),"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    SESSION_STATS(ResourceURIs.SESSION_STATS),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    SESSION_SUBMITTED_GIVER_SET(ResourceURIs.SESSION_SUBMITTED_GIVER_SET),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    SESSIONS(ResourceURIs.SESSIONS),"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    BIN_SESSION(ResourceURIs.BIN_SESSION),"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    QUESTIONS(ResourceURIs.QUESTIONS),"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    QUESTION(ResourceURIs.QUESTION),"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    QUESTION_RECIPIENTS(ResourceURIs.QUESTION_RECIPIENTS),"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    RESPONSES(ResourceURIs.RESPONSES),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    HAS_RESPONSES(ResourceURIs.HAS_RESPONSES),"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":"    NOTIFICATION(ResourceURIs.NOTIFICATION),"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"    NOTIFICATIONS(ResourceURIs.NOTIFICATIONS),"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    JOIN(ResourceURIs.JOIN),"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    JOIN_REMIND(ResourceURIs.JOIN_REMIND),"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    TIMEZONE(ResourceURIs.TIMEZONE),"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    SESSION_LINKS_RECOVERY(ResourceURIs.SESSION_LINKS_RECOVERY),"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    NATIONALITIES(ResourceURIs.NATIONALITIES),"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    EMAIL(ResourceURIs.EMAIL),"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE_PICTURE(ResourceURIs.STUDENT_PROFILE_PICTURE),"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE(ResourceURIs.STUDENT_PROFILE),"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    SEARCH_ACCOUNT_REQUESTS(ResourceURIs.SEARCH_ACCOUNT_REQUESTS),"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    SEARCH_INSTRUCTORS(ResourceURIs.SEARCH_INSTRUCTORS),"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    SEARCH_STUDENTS(ResourceURIs.SEARCH_STUDENTS),"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    LOGS(ResourceURIs.LOGS),"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    USAGE_STATISTICS(ResourceURIs.USAGE_STATISTICS),"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ACTION_CLASS(ResourceURIs.ACTION_CLASS);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final String url;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ResourceEndpoints(String s) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.url \u003d s;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @JsonValue"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String getUrl() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return url;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":76,"Nicolascwy":2}},{"path":"src/main/java/teammates/ui/output/NotificationData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" * The API output format of a notification."},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public class NotificationData extends ApiOutput {"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private String notificationId;"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"    private long startTimestamp;"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"    private long endTimestamp;"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":"    private long createdAt;"},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":"    private long updatedAt;"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationStyle style;"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    private NotificationTargetUser targetUser;"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    private String title;"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    private String message;"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    private boolean shown;"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    public NotificationData(NotificationAttributes notificationAttributes) {"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"        this.notificationId \u003d notificationAttributes.getNotificationId();"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        this.startTimestamp \u003d notificationAttributes.getStartTime().toEpochMilli();"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"        this.endTimestamp \u003d notificationAttributes.getEndTime().toEpochMilli();"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        this.createdAt \u003d notificationAttributes.getCreatedAt().toEpochMilli();"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        this.updatedAt \u003d notificationAttributes.getUpdatedAt().toEpochMilli();"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"        this.style \u003d notificationAttributes.getStyle();"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"        this.targetUser \u003d notificationAttributes.getTargetUser();"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        this.title \u003d notificationAttributes.getTitle();"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"        this.message \u003d notificationAttributes.getMessage();"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"        this.shown \u003d notificationAttributes.isShown();"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    public String getNotificationId() {"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"        return this.notificationId;"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"    public long getStartTimestamp() {"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        return this.startTimestamp;"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"    public long getEndTimestamp() {"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"        return this.endTimestamp;"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":"    public long getCreatedAt() {"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        return this.createdAt;"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":52,"author":{"gitId":"Nicolascwy"},"content":"    public long getUpdatedAt() {"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        return this.updatedAt;"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationStyle getStyle() {"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":"        return this.style;"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"    public NotificationTargetUser getTargetUser() {"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"        return this.targetUser;"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"    public String getTitle() {"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"        return this.title;"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"    public String getMessage() {"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"        return this.message;"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"    public boolean isShown() {"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"        return this.shown;"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"     * Hides some attributes to instructor and students without appropriate privilege."},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"    public void hideInformationForNonAdmin() {"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"        // TODO: hide information that might be admin-only: target users, isShown, (starttime and endtime)"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":68,"fsgmhoward":5,"Nicolascwy":9}},{"path":"src/main/java/teammates/ui/output/NotificationsData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" * The API output for a list of notifications."},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"public class NotificationsData extends ApiOutput {"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private final List\u003cNotificationData\u003e notifications;"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    public NotificationsData(List\u003cNotificationAttributes\u003e notificationAttributesList) {"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"        notifications \u003d notificationAttributesList.stream().map(NotificationData::new).collect(Collectors.toList());"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    public List\u003cNotificationData\u003e getNotifications() {"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"        return notifications;"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":21}},{"path":"src/main/java/teammates/ui/request/NotificationBasicRequest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.request;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":" * The basic request for a notification."},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"public class NotificationBasicRequest extends BasicRequest {"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"    private long startTimestamp;"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"    private long endTimestamp;"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationStyle style;"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    private NotificationTargetUser targetUser;"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"    private String title;"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":"    private String message;"},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"    public long getStartTimestamp() {"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"        return this.startTimestamp;"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"    public long getEndTimestamp() {"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"        return this.endTimestamp;"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"    public NotificationStyle getStyle() {"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"        return this.style;"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    public NotificationTargetUser getTargetUser() {"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"        return this.targetUser;"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"    public String getTitle() {"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"        return this.title;"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"    public String getMessage() {"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"        return this.message;"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"    public void setStartTimestamp(long startTimestamp) {"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"        this.startTimestamp \u003d startTimestamp;"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"    public void setEndTimestamp(long endTimestamp) {"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"        this.endTimestamp \u003d endTimestamp;"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"    public void setStyle(NotificationStyle style) {"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"        this.style \u003d style;"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":"    public void setTargetUser(NotificationTargetUser targetUser) {"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"        this.targetUser \u003d targetUser;"},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":"    public void setTitle(String title) {"},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"        this.title \u003d title;"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"    public void setMessage(String message) {"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":"        this.message \u003d message;"},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":"    public void validate() throws InvalidHttpRequestBodyException {"},{"lineNumber":67,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(startTimestamp \u003e 0L, \"Start timestamp should be greater than zero\");"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(endTimestamp \u003e 0L, \"End timestamp should be greater than zero\");"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"        assertTrue(style !\u003d null, \"Notification style cannot be null\");"},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(targetUser !\u003d null, \"Notification target user cannot be null\");"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(title !\u003d null, \"Notification title cannot be null\");"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(message !\u003d null, \"Notification message cannot be null\");"},{"lineNumber":73,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"ziqing26":4,"fsgmhoward":7,"Nicolascwy":63}},{"path":"src/main/java/teammates/ui/request/NotificationCreateRequest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.request;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":" * The request for creating a notification."},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"public class NotificationCreateRequest extends NotificationBasicRequest {"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":7}},{"path":"src/main/java/teammates/ui/request/NotificationUpdateRequest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.request;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":" * The request for updating a notification."},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"public class NotificationUpdateRequest extends NotificationBasicRequest {"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":7}},{"path":"src/main/java/teammates/ui/servlets/AuthServlet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.servlets;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javax.servlet.http.Cookie;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServlet;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletRequest;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.api.client.auth.oauth2.AuthorizationCodeFlow;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.api.client.http.GenericUrl;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.api.client.http.HttpTransport;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.google.api.client.http.javanet.NetHttpTransport;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.google.api.client.json.JsonFactory;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.api.client.json.gson.GsonFactory;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.google.api.client.util.store.MemoryDataStoreFactory;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.UserInfoCookie;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Common servlet class that serves user authentication-related functions."},{"lineNumber":28,"author":{"gitId":"-"},"content":" */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"abstract class AuthServlet extends HttpServlet {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final MemoryDataStoreFactory DATA_STORE_FACTORY \u003d MemoryDataStoreFactory.getDefaultInstance();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final HttpTransport HTTP_TRANSPORT \u003d new NetHttpTransport();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final JsonFactory JSON_FACTORY \u003d GsonFactory.getDefaultInstance();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SCOPES \u003d Arrays.asList(\"https://www.googleapis.com/auth/userinfo.email\");"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Gets the authorization code flow to be used across all HTTP servlet requests."},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    AuthorizationCodeFlow getAuthorizationFlow() throws IOException {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new GoogleAuthorizationCodeFlow.Builder("},{"lineNumber":41,"author":{"gitId":"-"},"content":"                HTTP_TRANSPORT, JSON_FACTORY, Config.OAUTH2_CLIENT_ID, Config.OAUTH2_CLIENT_SECRET, SCOPES)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .setDataStoreFactory(DATA_STORE_FACTORY)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .setAccessType(\"offline\")"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the redirect URI for the given HTTP servlet request."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String getRedirectUri(HttpServletRequest req) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        GenericUrl url \u003d new GenericUrl(req.getRequestURL().toString().replaceFirst(\"^http://\", \"https://\"));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        url.setRawPath(\"/oauth2callback\");"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        url.set(\"ngsw-bypass\", \"true\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return url.build();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    Cookie getLoginInvalidationCookie() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Cookie cookie \u003d new Cookie(Const.SecurityConfig.AUTH_COOKIE_NAME, \"\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        cookie.setPath(\"/\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        cookie.setSecure(!Config.isDevServer());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        cookie.setHttpOnly(true);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        cookie.setMaxAge(0);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return cookie;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    Cookie getLoginCookie(UserInfoCookie uic) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Cookie cookie \u003d new Cookie(Const.SecurityConfig.AUTH_COOKIE_NAME,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                StringHelper.encrypt(JsonUtils.toCompactJson(uic)));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        cookie.setPath(\"/\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        cookie.setSecure(!Config.isDevServer());"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        cookie.setHttpOnly(true);"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"        cookie.setMaxAge((int) Const.COOKIE_VALIDITY_PERIOD.toSeconds()); // one week"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return cookie;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Represents the state object to be persisted during the callback."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static class AuthState {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        private final String nextUrl;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        private final String sessionId;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AuthState(String nextUrl, String sessionId) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            this.nextUrl \u003d nextUrl;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            this.sessionId \u003d sessionId;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String getNextUrl() {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return nextUrl;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public String getSessionId() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return sessionId;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":1,"-":95,"Nicolascwy":1}},{"path":"src/main/java/teammates/ui/webapi/ActionFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletRequest;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpDelete;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPut;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.CronJobURIs;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.TaskQueue;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Generates the matching {@link Action} for a given URI and request method."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public final class ActionFactory {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    static final Map\u003cString, Map\u003cString, Class\u003c? extends Action\u003e\u003e\u003e ACTION_MAPPINGS \u003d new HashMap\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String GET \u003d HttpGet.METHOD_NAME;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String POST \u003d HttpPost.METHOD_NAME;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String PUT \u003d HttpPut.METHOD_NAME;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DELETE \u003d HttpDelete.METHOD_NAME;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, POST, PutDataBundleAction.class);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Even though this is a DELETE action, PUT is used as DELETE does not allow usage of response body"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, PUT, DeleteDataBundleAction.class);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE_DOCUMENTS, PUT, PutDataBundleDocumentsAction.class);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EXCEPTION, GET, AdminExceptionTestAction.class);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Even though this is a GET action, POST is used in order to get extra protection from CSRF"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        map(ResourceURIs.USER_COOKIE, POST, GetUserCookieAction.class);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ERROR_REPORT, POST, SendErrorReportAction.class);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        map(ResourceURIs.TIMEZONE, GET, GetTimeZonesAction.class);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        map(ResourceURIs.NATIONALITIES, GET, GetNationalitiesAction.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH, GET, GetAuthInfoAction.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH_REGKEY, GET, GetRegkeyValidityAction.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, GET, GetAccountAction.class);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, POST, CreateAccountAction.class);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, DELETE, DeleteAccountAction.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_DOWNGRADE, PUT, DowngradeAccountAction.class);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_RESET, PUT, ResetAccountAction.class);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, GET, GetAccountRequestAction.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, POST, CreateAccountRequestAction.class);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST, DELETE, DeleteAccountRequestAction.class);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_REQUEST_RESET, PUT, ResetAccountRequestAction.class);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNTS, GET, GetAccountsAction.class);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, GET, GetCourseAction.class);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, DELETE, DeleteCourseAction.class);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, POST, CreateCourseAction.class);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, PUT, UpdateCourseAction.class);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_ARCHIVE, PUT, ArchiveCourseAction.class);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, PUT, BinCourseAction.class);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, DELETE, RestoreCourseAction.class);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSES, GET, GetCoursesAction.class);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_SECTIONS, GET, GetCourseSectionNamesAction.class);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTORS, GET, GetInstructorsAction.class);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, GET, GetInstructorAction.class);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, DELETE, DeleteInstructorAction.class);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, GET, GetInstructorPrivilegeAction.class);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, PUT, UpdateInstructorPrivilegeAction.class);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, POST, CreateFeedbackResponseCommentAction.class);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, GET, GetFeedbackResponseCommentAction.class);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, PUT, UpdateFeedbackResponseCommentAction.class);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, DELETE, DeleteFeedbackResponseCommentAction.class);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESULT, GET, GetSessionResultsAction.class);"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        //STUDENTS APIs"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, GET, GetStudentsAction.class);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, PUT, EnrollStudentsAction.class);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, DELETE, DeleteStudentsAction.class);"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        //STUDENT APIs"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, DELETE, DeleteStudentAction.class);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, GET, GetStudentAction.class);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, PUT, UpdateStudentAction.class);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"        // NOTIFICATION APIs"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"        map(ResourceURIs.NOTIFICATION, GET, GetNotificationAction.class);"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"        map(ResourceURIs.NOTIFICATION, POST, CreateNotificationAction.class);"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"        map(ResourceURIs.NOTIFICATION, PUT, UpdateNotificationAction.class);"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"        map(ResourceURIs.NOTIFICATION, DELETE, DeleteNotificationAction.class);"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":"        // NOTIFICATIONS APIs"},{"lineNumber":91,"author":{"gitId":"Nicolascwy"},"content":"        map(ResourceURIs.NOTIFICATIONS, GET, GetNotificationsAction.class);"},{"lineNumber":92,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        //SEARCH APIs"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_INSTRUCTORS, GET, SearchInstructorsAction.class);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_STUDENTS, GET, SearchStudentsAction.class);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_ACCOUNT_REQUESTS, GET, SearchAccountRequestsAction.class);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EMAIL, GET, GenerateEmailAction.class);"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS_ONGOING, GET, GetOngoingSessionsAction.class);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_STATS, GET, GetSessionResponseStatsAction.class);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, GET, GetFeedbackSessionAction.class);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, PUT, UpdateFeedbackSessionAction.class);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, POST, CreateFeedbackSessionAction.class);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, DELETE, DeleteFeedbackSessionAction.class);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, POST, PublishFeedbackSessionAction.class);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, DELETE, UnpublishFeedbackSessionAction.class);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_SUBMITTED_GIVER_SET, GET, GetFeedbackSessionSubmittedGiverSetAction.class);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_SUBMISSION, POST, RemindFeedbackSessionSubmissionAction.class);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_RESULT, POST, RemindFeedbackSessionResultAction.class);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS, GET, GetFeedbackSessionsAction.class);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, PUT, BinFeedbackSessionAction.class);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, DELETE, RestoreFeedbackSessionAction.class);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_KEY, POST, RegenerateInstructorKeyAction.class);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_KEY, POST, RegenerateStudentKeyAction.class);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTIONS, GET, GetFeedbackQuestionsAction.class);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, POST, CreateFeedbackQuestionAction.class);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, PUT, UpdateFeedbackQuestionAction.class);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, DELETE, DeleteFeedbackQuestionAction.class);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION_RECIPIENTS, GET, GetFeedbackQuestionRecipientsAction.class);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, GET, GetFeedbackResponsesAction.class);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, PUT, SubmitFeedbackResponsesAction.class);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        map(ResourceURIs.HAS_RESPONSES, GET, GetHasResponsesAction.class);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LINKS_RECOVERY, POST, SessionLinksRecoveryAction.class);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, GET, GetCourseJoinStatusAction.class);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, PUT, JoinCourseAction.class);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN_REMIND, POST, SendJoinReminderEmailAction.class);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, GET, GetStudentProfileAction.class);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, PUT, UpdateStudentProfileAction.class);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, GET, GetStudentProfilePictureAction.class);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, POST, PostStudentProfilePictureAction.class);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, DELETE, DeleteStudentProfilePictureAction.class);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, PUT, UpdateInstructorAction.class);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, POST, CreateInstructorAction.class);"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // Logging and tracking"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LOGS, POST, CreateFeedbackSessionLogAction.class);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LOGS, GET, GetFeedbackSessionLogsAction.class);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        map(ResourceURIs.LOGS, GET, QueryLogsAction.class);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        map(ResourceURIs.USAGE_STATISTICS, GET, GetUsageStatisticsAction.class);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACTION_CLASS, GET, GetActionClassesAction.class);"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // Cron jobs; use GET request"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/appengine/docs/standard/java11/scheduling-jobs-with-cron-yaml"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_LOG_COMPILATION, GET, CompileLogsAction.class);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_DATASTORE_BACKUP, GET, DatastoreBackupAction.class);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_OPENING_REMINDERS, GET, FeedbackSessionOpeningRemindersAction.class);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSED_REMINDERS, GET, FeedbackSessionClosedRemindersAction.class);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSING_REMINDERS, GET, FeedbackSessionClosingRemindersAction.class);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS, GET, FeedbackSessionPublishedRemindersAction.class);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_OPENING_SOON_REMINDERS, GET,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningSoonRemindersAction.class);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_USAGE_STATISTICS_COLLECTION, GET, CalculateUsageStatisticsAction.class);"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // Task queue workers; use POST request"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/tasks/docs/creating-appengine-tasks"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL, POST, FeedbackSessionPublishedEmailWorkerAction.class);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                FeedbackSessionResendPublishedEmailWorkerAction.class);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL, POST, FeedbackSessionRemindEmailWorkerAction.class);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL, POST,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindParticularUsersEmailWorkerAction.class);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                FeedbackSessionUnpublishedEmailWorkerAction.class);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        map(TaskQueue.INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL, POST, InstructorCourseJoinEmailWorkerAction.class);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        map(TaskQueue.SEND_EMAIL_WORKER_URL, POST, SendEmailWorkerAction.class);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        map(TaskQueue.STUDENT_COURSE_JOIN_EMAIL_WORKER_URL, POST, StudentCourseJoinEmailWorkerAction.class);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        map(TaskQueue.ACCOUNT_REQUEST_SEARCH_INDEXING_WORKER_URL, POST, AccountRequestSearchIndexingWorkerAction.class);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        map(TaskQueue.INSTRUCTOR_SEARCH_INDEXING_WORKER_URL, POST, InstructorSearchIndexingWorkerAction.class);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        map(TaskQueue.STUDENT_SEARCH_INDEXING_WORKER_URL, POST, StudentSearchIndexingWorkerAction.class);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private ActionFactory() {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private static void map(String uri, String method, Class\u003c? extends Action\u003e actionClass) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ACTION_MAPPINGS.computeIfAbsent(uri, k -\u003e new HashMap\u003c\u003e()).put(method, actionClass);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Returns the matching {@link Action} object for the URI and method in {@code req}."},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public static Action getAction(HttpServletRequest req, String method) throws ActionMappingException {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String uri \u003d req.getRequestURI();"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (uri.contains(\";\")) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            uri \u003d uri.split(\";\")[0];"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return getAction(uri, method);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private static Action getAction(String uri, String method) throws ActionMappingException {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (!ACTION_MAPPINGS.containsKey(uri)) {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Resource with URI \" + uri + \" is not found.\", HttpStatus.SC_NOT_FOUND);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Class\u003c? extends Action\u003e controllerClass \u003d"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                ACTION_MAPPINGS.getOrDefault(uri, new HashMap\u003c\u003e()).get(method);"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (controllerClass \u003d\u003d null) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Method [\" + method + \"] is not allowed for URI \" + uri + \".\","},{"lineNumber":204,"author":{"gitId":"-"},"content":"                    HttpStatus.SC_METHOD_NOT_ALLOWED);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return controllerClass.getDeclaredConstructor().newInstance();"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            assert false : \"Could not create the action for \" + uri;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":1,"-":206,"Nicolascwy":8}},{"path":"src/main/java/teammates/ui/webapi/CreateNotificationAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":"import java.util.UUID;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Logger;"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"import teammates.ui.output.NotificationData;"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.NotificationCreateRequest;"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":" * Action: Creates a new notification banner."},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"public class CreateNotificationAction extends AdminOnlyAction {"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"    public JsonResult execute() throws InvalidHttpRequestBodyException, InvalidOperationException {"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"        NotificationCreateRequest notificationRequest \u003d getAndValidateRequestBody(NotificationCreateRequest.class);"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"        Instant startTime \u003d Instant.ofEpochMilli(notificationRequest.getStartTimestamp());"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"        Instant endTime \u003d Instant.ofEpochMilli(notificationRequest.getEndTimestamp());"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"        NotificationAttributes newNotification \u003d NotificationAttributes.builder(UUID.randomUUID().toString())"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"                .withStartTime(startTime)"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"                .withEndTime(endTime)"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"                .withStyle(notificationRequest.getStyle())"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"                .withTargetUser(notificationRequest.getTargetUser())"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"                .withTitle(notificationRequest.getTitle())"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"                .withMessage(notificationRequest.getMessage())"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"                .build();"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"            return new JsonResult(new NotificationData(logic.createNotification(newNotification)));"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"        } catch (InvalidParametersException e) {"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"            throw new InvalidHttpRequestBodyException(e);"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"        } catch (EntityAlreadyExistsException e) {"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"            // Should not happen since UUID is usually unique"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"            log.severe(\"Unexpected error\", e);"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"Nicolascwy":45}},{"path":"src/main/java/teammates/ui/webapi/DeleteNotificationAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Const;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":" * Action: Deletes a notification by its ID."},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"public class DeleteNotificationAction extends AdminOnlyAction {"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"    public JsonResult execute() {"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"        String notificationId \u003d getNonNullRequestParamValue(Const.ParamsNames.NOTIFICATION_ID);"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"        logic.deleteNotification(notificationId);"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"        return new JsonResult(\"Notification has been deleted.\");"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":16}},{"path":"src/main/java/teammates/ui/webapi/GetNotificationAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import teammates.common.util.Const;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import teammates.ui.output.NotificationData;"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":" * Action: Gets a notification by ID."},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"public class GetNotificationAction extends AdminOnlyAction {"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"    public JsonResult execute() throws InvalidHttpRequestBodyException {"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":"        String notificationId \u003d getRequestParamValue(Const.ParamsNames.NOTIFICATION_ID);"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"        if (notificationId \u003d\u003d null) {"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"            throw new InvalidHttpParameterException(\"Notification ID cannot be null\");"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"        NotificationAttributes notification \u003d logic.getNotification(notificationId);"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"        if (notification \u003d\u003d null) {"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"            throw new EntityNotFoundException(\"Notification does not exist.\");"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"        return new JsonResult(new NotificationData(notification));"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":18,"Nicolascwy":11}},{"path":"src/main/java/teammates/ui/webapi/GetNotificationsAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Const;"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.output.NotificationData;"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.output.NotificationsData;"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":" * Action: Gets a list of notifications."},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":"public class GetNotificationsAction extends Action {"},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"    private static final String INVALID_TARGET_USER \u003d \"Target user can only be STUDENT or INSTRUCTOR.\";"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"    private static final String UNAUTHORIZED_ACCESS \u003d \"You are not allowed to view this resource!\";"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"        return AuthType.LOGGED_IN;"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"    void checkSpecificAccessControl() throws UnauthorizedAccessException {"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"        if (userInfo.isAdmin) {"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"            return;"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"        String targetUserString \u003d getRequestParamValue(Const.ParamsNames.NOTIFICATION_TARGET_USER);"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"        String targetUserErrorMessage \u003d FieldValidator.getInvalidityInfoForNotificationTargetUser(targetUserString);"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"        if (!targetUserErrorMessage.isEmpty()) {"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"            throw new InvalidHttpParameterException(targetUserErrorMessage);"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"        NotificationTargetUser targetUser \u003d NotificationTargetUser.valueOf(targetUserString);"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"        if (targetUser \u003d\u003d NotificationTargetUser.INSTRUCTOR \u0026\u0026 userInfo.isStudent"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"                || targetUser \u003d\u003d NotificationTargetUser.STUDENT \u0026\u0026 userInfo.isInstructor) {"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"            throw new UnauthorizedAccessException(UNAUTHORIZED_ACCESS);"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"    public JsonResult execute() {"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"        String targetUserString \u003d getRequestParamValue(Const.ParamsNames.NOTIFICATION_TARGET_USER);"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"        // TODO: Use isFetchingAll to decide whether to fetch unread notification only."},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"        // boolean isFetchingAll \u003d Boolean.parseBoolean("},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"        //     getRequestParamValue(Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL));"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":49,"author":{"gitId":"Nicolascwy"},"content":"        List\u003cNotificationAttributes\u003e notificationAttributes;"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":"        if (targetUserString \u003d\u003d null \u0026\u0026 userInfo.isAdmin) {"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"            // if the admin wants to retrieve all notifications"},{"lineNumber":52,"author":{"gitId":"Nicolascwy"},"content":"            notificationAttributes \u003d logic.getAllNotifications();"},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"            String targetUserErrorMessage \u003d FieldValidator.getInvalidityInfoForNotificationTargetUser(targetUserString);"},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"            if (!targetUserErrorMessage.isEmpty()) {"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":"                throw new InvalidHttpParameterException(targetUserErrorMessage);"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"            NotificationTargetUser targetUser \u003d NotificationTargetUser.valueOf(targetUserString);"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"            if (targetUser \u003d\u003d NotificationTargetUser.GENERAL) {"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"                throw new InvalidHttpParameterException(INVALID_TARGET_USER);"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":"            notificationAttributes \u003d"},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"                    logic.getActiveNotificationsByTargetUser(targetUser);"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":"        NotificationsData responseData \u003d new NotificationsData(notificationAttributes);"},{"lineNumber":67,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"        if (!userInfo.isAdmin) {"},{"lineNumber":69,"author":{"gitId":"Nicolascwy"},"content":"            responseData.getNotifications().forEach(NotificationData::hideInformationForNonAdmin);"},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"        return new JsonResult(responseData);"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":73}},{"path":"src/main/java/teammates/ui/webapi/UpdateNotificationAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes.UpdateOptions;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Const;"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.output.NotificationData;"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.NotificationUpdateRequest;"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":" * Action: Updates a new notification banner."},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"public class UpdateNotificationAction extends AdminOnlyAction {"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"    public JsonResult execute() throws InvalidHttpRequestBodyException {"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"        String notificationId \u003d getNonNullRequestParamValue(Const.ParamsNames.NOTIFICATION_ID);"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"        NotificationUpdateRequest notificationRequest \u003d getAndValidateRequestBody(NotificationUpdateRequest.class);"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"        Instant startTime \u003d Instant.ofEpochMilli(notificationRequest.getStartTimestamp());"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"        Instant endTime \u003d Instant.ofEpochMilli(notificationRequest.getEndTimestamp());"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"        UpdateOptions newNotification \u003d NotificationAttributes.updateOptionsBuilder(notificationId)"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"                .withStartTime(startTime)"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"                .withEndTime(endTime)"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"                .withStyle(notificationRequest.getStyle())"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"                .withTargetUser(notificationRequest.getTargetUser())"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"                .withTitle(notificationRequest.getTitle())"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"                .withMessage(notificationRequest.getMessage())"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"                .build();"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"            return new JsonResult(new NotificationData(logic.updateNotification(newNotification)));"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"        } catch (InvalidParametersException e) {"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"            throw new InvalidHttpRequestBodyException(e);"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"        } catch (EntityDoesNotExistException ednee) {"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"            throw new EntityNotFoundException(ednee);"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"Nicolascwy":43}},{"path":"src/test/java/teammates/architecture/ArchitectureTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.architecture;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static com.tngtech.archunit.lang.syntax.ArchRuleDefinition.noClasses;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.tngtech.archunit.base.DescribedPredicate;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.tngtech.archunit.core.domain.JavaClass;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.tngtech.archunit.core.domain.JavaClasses;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.tngtech.archunit.core.importer.ClassFileImporter;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Checks for the system\u0027s architectural integrity."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ArchitectureTest {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final JavaClasses ALL_CLASSES \u003d forClasses(\"teammates\");"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String COMMON_PACKAGE \u003d \"teammates.common\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String STORAGE_PACKAGE \u003d \"teammates.storage\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String STORAGE_API_PACKAGE \u003d STORAGE_PACKAGE + \".api\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String STORAGE_ENTITY_PACKAGE \u003d STORAGE_PACKAGE + \".entity\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String STORAGE_SEARCH_PACKAGE \u003d STORAGE_PACKAGE + \".search\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOGIC_PACKAGE \u003d \"teammates.logic\";"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOGIC_CORE_PACKAGE \u003d LOGIC_PACKAGE + \".core\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String LOGIC_API_PACKAGE \u003d LOGIC_PACKAGE + \".api\";"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"    private static final String LOGIC_EXTERNAL_PACKAGE \u003d LOGIC_PACKAGE + \".external\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String UI_PACKAGE \u003d \"teammates.ui\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String UI_WEBAPI_PACKAGE \u003d UI_PACKAGE + \".webapi\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String UI_SERVLETS_PACKAGE \u003d UI_PACKAGE + \".servlets\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String UI_OUTPUT_PACKAGE \u003d UI_PACKAGE + \".output\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String UI_REQUEST_PACKAGE \u003d UI_PACKAGE + \".request\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MAIN_PACKAGE \u003d \"teammates.main\";"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String TEST_DRIVER_PACKAGE \u003d \"teammates.test\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String E2E_PACKAGE \u003d \"teammates.e2e\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String E2E_CASES_PACKAGE \u003d E2E_PACKAGE + \".cases\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String E2E_PAGEOBJECTS_PACKAGE \u003d E2E_PACKAGE + \".pageobjects\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String E2E_UTIL_PACKAGE \u003d E2E_PACKAGE + \".util\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String LNP_PACKAGE \u003d \"teammates.lnp\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String LNP_CASES_PACKAGE \u003d LNP_PACKAGE + \".cases\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String LNP_UTIL_PACKAGE \u003d LNP_PACKAGE + \".util\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String CLIENT_PACKAGE \u003d \"teammates.client\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String CLIENT_CONNECTOR_PACKAGE \u003d CLIENT_PACKAGE + \".connector\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String CLIENT_SCRIPTS_PACKAGE \u003d CLIENT_PACKAGE + \".scripts\";"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String CLIENT_UTIL_PACKAGE \u003d CLIENT_PACKAGE + \".util\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String TEST_FILE_SUFFIX \u003d \"Test\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static String includeSubpackages(String pack) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return pack + \"..\";"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static JavaClasses forClasses(String... packageNames) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ClassFileImporter().importPackages(packageNames);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void testArchitecture_uiShouldNotTouchStorage() {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void testArchitecture_mainShouldNotTouchProductionCodeExceptCommon() {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(MAIN_PACKAGE)"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(UI_PACKAGE)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !input.getSimpleName().endsWith(\"Servlet\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                }).check(forClasses(MAIN_PACKAGE));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void testArchitecture_logicShouldNotTouchUi() {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"TaskQueuer\")"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE, UI_PACKAGE));"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .and().haveSimpleName(\"TaskQueuer\")"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(UI_OUTPUT_PACKAGE))"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE, UI_PACKAGE));"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void testArchitecture_storageShouldNotTouchLogic() {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .check(forClasses(STORAGE_PACKAGE, LOGIC_PACKAGE));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void testArchitecture_storageShouldNotTouchUi() {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .check(forClasses(STORAGE_PACKAGE, UI_PACKAGE));"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void testArchitecture_commonShouldNotTouchLogic() {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(COMMON_PACKAGE))"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .check(forClasses(COMMON_PACKAGE, LOGIC_PACKAGE));"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void testArchitecture_commonShouldNotTouchStorage() {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(COMMON_PACKAGE))"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_API_PACKAGE))"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_SEARCH_PACKAGE))"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .check(forClasses(COMMON_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(COMMON_PACKAGE))"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(COMMON_PACKAGE + \".datatransfer.attributes\"))"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .check(forClasses(COMMON_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void testArchitecture_commonShouldNotTouchUi() {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(COMMON_PACKAGE))"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .check(forClasses(COMMON_PACKAGE, UI_PACKAGE));"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void testArchitecture_uiShouldNotTouchLogicExceptForApi() {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_API_PACKAGE))"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE, LOGIC_PACKAGE));"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE, LOGIC_PACKAGE));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_onlyWebApiCanTouchOutput() {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_OUTPUT_PACKAGE))"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_OUTPUT_PACKAGE))"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_onlyWebApiCanTouchRequest() {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_apiRequestCanOnlyTouchRequestAndOutput() {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_apiOutputCanOnlyTouchOutput() {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_OUTPUT_PACKAGE))"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(UI_REQUEST_PACKAGE))"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void testArchitecture_ui_controllerShouldBeSelfContained() {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_SERVLETS_PACKAGE))"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_SERVLETS_PACKAGE))"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_SERVLETS_PACKAGE))"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .check(forClasses(UI_PACKAGE));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void testArchitecture_logic_logicCanOnlyAccessStorageApi() {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_SEARCH_PACKAGE))"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE, STORAGE_PACKAGE));"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void testArchitecture_logic_coreLogicCanOnlyAccessItsCorrespondingDb() {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        for (JavaClass coreLogicClass : forClasses(LOGIC_CORE_PACKAGE)) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            String logicClassName \u003d coreLogicClass.getSimpleName();"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (\"DataBundleLogic\".equals(logicClassName)) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            if (logicClassName.endsWith(TEST_FILE_SUFFIX)) {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            String dbClassName \u003d logicClassName.replace(\"Logic\", \"Db\");"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"            noClasses()"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    .that().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    .and().doNotHaveSimpleName(logicClassName)"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    .and().doNotHaveSimpleName(logicClassName + TEST_FILE_SUFFIX)"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    .and().doNotHaveSimpleName(\"DataBundleLogic\")"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .should()"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                        @Override"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                        public boolean apply(JavaClass input) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                            return input.getPackageName().startsWith(STORAGE_API_PACKAGE)"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                                    \u0026\u0026 input.getSimpleName().equals(dbClassName);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    })"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    .check(forClasses(LOGIC_CORE_PACKAGE, STORAGE_API_PACKAGE));"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public void testArchitecture_logic_coreLogicShouldNotTouchApiLogic() {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_API_PACKAGE))"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                .check(forClasses(LOGIC_PACKAGE));"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":254,"author":{"gitId":"fsgmhoward"},"content":"    public void testArchitecture_logic_coreLogicShouldNotTouchExternalLogic() {"},{"lineNumber":255,"author":{"gitId":"fsgmhoward"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":256,"author":{"gitId":"fsgmhoward"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_EXTERNAL_PACKAGE))"},{"lineNumber":257,"author":{"gitId":"fsgmhoward"},"content":"                .check(forClasses(LOGIC_PACKAGE));"},{"lineNumber":258,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":260,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":261,"author":{"gitId":"fsgmhoward"},"content":"    public void testArchitecture_logic_externalLogicShouldNotTouchCoreLogic() {"},{"lineNumber":262,"author":{"gitId":"fsgmhoward"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LOGIC_EXTERNAL_PACKAGE))"},{"lineNumber":263,"author":{"gitId":"fsgmhoward"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_CORE_PACKAGE))"},{"lineNumber":264,"author":{"gitId":"fsgmhoward"},"content":"                .check(forClasses(LOGIC_PACKAGE));"},{"lineNumber":265,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void testArchitecture_storage_storageSearchShouldNotTouchStorageEntity() {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(STORAGE_SEARCH_PACKAGE))"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                .check(forClasses(STORAGE_PACKAGE));"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void testArchitecture_storage_storageEntityShouldNotTouchOtherStoragePackages() {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(STORAGE_PACKAGE)"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !STORAGE_ENTITY_PACKAGE.equals(input.getPackageName());"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                }).check(forClasses(STORAGE_PACKAGE));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void testArchitecture_testClasses_testCasesShouldBeIndependent() {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        noClasses().that().haveSimpleNameEndingWith(TEST_FILE_SUFFIX)"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                        return input.getSimpleName().endsWith(TEST_FILE_SUFFIX)"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !input.getSimpleName().startsWith(\"Base\");"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                }).check(ALL_CLASSES);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void testArchitecture_testClasses_driverShouldNotHaveAnyDependency() {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(TEST_DRIVER_PACKAGE))"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveSimpleNameEndingWith(TEST_FILE_SUFFIX)"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                .check(forClasses(TEST_DRIVER_PACKAGE));"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(TEST_DRIVER_PACKAGE))"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(STORAGE_PACKAGE)"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"OfyHelper\".equals(input.getSimpleName())"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"AccountRequestSearchManager\".equals(input.getSimpleName())"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"InstructorSearchManager\".equals(input.getSimpleName())"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"StudentSearchManager\".equals(input.getSimpleName())"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"SearchManagerFactory\".equals(input.getSimpleName());"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(LOGIC_CORE_PACKAGE)"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"LogicStarter\".equals(input.getSimpleName());"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(UI_WEBAPI_PACKAGE)"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"Action\".equals(input.getSimpleName())"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !\"ActionFactory\".equals(input.getSimpleName());"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                .check(forClasses(TEST_DRIVER_PACKAGE));"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_e2eShouldBeSelfContained() {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_e2eShouldNotTouchProductionCodeExceptCommon() {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                .check(forClasses(E2E_PACKAGE));"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveSimpleName(\"Config\")"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                .check(forClasses(E2E_PACKAGE));"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_e2eTestCasesShouldBeIndependentOfEachOther() {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        noClasses().that(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            public boolean apply(JavaClass input) {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                return input.getPackageName().startsWith(E2E_CASES_PACKAGE) \u0026\u0026 !input.isInnerClass();"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }).should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            public boolean apply(JavaClass input) {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                return input.getPackageName().startsWith(E2E_CASES_PACKAGE)"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !input.getSimpleName().startsWith(\"Base\")"},{"lineNumber":366,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !input.isInnerClass();"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        }).check(forClasses(E2E_CASES_PACKAGE));"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_onlyE2ETestsCanAccessPageObjects() {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(E2E_PACKAGE))"},{"lineNumber":374,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(E2E_PAGEOBJECTS_PACKAGE))"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(E2E_CASES_PACKAGE))"},{"lineNumber":376,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(E2E_PAGEOBJECTS_PACKAGE))"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                .check(forClasses(E2E_PACKAGE));"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    public void testArchitecture_e2e_utilShouldNotHaveAnyDependency() {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(E2E_UTIL_PACKAGE))"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(E2E_PACKAGE)"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !E2E_UTIL_PACKAGE.equals(input.getPackageName());"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                }).check(forClasses(E2E_PACKAGE));"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    public void testArchitecture_lnp_lnpShouldBeSelfContained() {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(LNP_PACKAGE))"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(LNP_PACKAGE))"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    public void testArchitecture_lnp_lnpShouldNotTouchProductionCodeExceptCommonAndRequests() {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LNP_PACKAGE))"},{"lineNumber":402,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(STORAGE_PACKAGE))"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(includeSubpackages(LOGIC_PACKAGE))"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(UI_PACKAGE)"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !UI_OUTPUT_PACKAGE.equals(input.getPackageName())"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !UI_REQUEST_PACKAGE.equals(input.getPackageName());"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                }).check(ALL_CLASSES);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    public void testArchitecture_lnp_lnpTestCasesShouldBeIndependentOfEachOther() {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        noClasses().that(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            public boolean apply(JavaClass input) {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                return input.getPackageName().startsWith(LNP_CASES_PACKAGE) \u0026\u0026 !input.isInnerClass();"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        }).should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":423,"author":{"gitId":"-"},"content":"            public boolean apply(JavaClass input) {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                return input.getPackageName().startsWith(LNP_CASES_PACKAGE)"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !input.getSimpleName().startsWith(\"Base\")"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !input.isInnerClass();"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        }).check(forClasses(LNP_CASES_PACKAGE));"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    public void testArchitecture_lnp_lnpShouldNotHaveAnyDependency() {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(LNP_UTIL_PACKAGE))"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(LNP_PACKAGE)"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !LNP_UTIL_PACKAGE.equals(input.getPackageName());"},{"lineNumber":439,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":440,"author":{"gitId":"-"},"content":"                }).check(forClasses(LNP_PACKAGE));"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    public void testArchitecture_client_clientShouldBeSelfContained() {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(CLIENT_PACKAGE))"},{"lineNumber":446,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(CLIENT_PACKAGE))"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    public void testArchitecture_client_clientShouldNotTouchUiComponent() {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(CLIENT_PACKAGE))"},{"lineNumber":453,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(UI_PACKAGE))"},{"lineNumber":454,"author":{"gitId":"-"},"content":"                .check(forClasses(CLIENT_PACKAGE, UI_PACKAGE));"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":456,"author":{"gitId":"-"},"content":""},{"lineNumber":457,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    public void testArchitecture_client_connectorShouldNotTouchScripts() {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(CLIENT_CONNECTOR_PACKAGE))"},{"lineNumber":460,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(includeSubpackages(CLIENT_SCRIPTS_PACKAGE))"},{"lineNumber":461,"author":{"gitId":"-"},"content":"                .check(forClasses(CLIENT_PACKAGE));"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    public void testArchitecture_client_utilShouldNotHaveAnyDependency() {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        noClasses().that().resideInAPackage(includeSubpackages(CLIENT_UTIL_PACKAGE))"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                .should().accessClassesThat(new DescribedPredicate\u003c\u003e(\"\") {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                    @Override"},{"lineNumber":469,"author":{"gitId":"-"},"content":"                    public boolean apply(JavaClass input) {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"                        return input.getPackageName().startsWith(CLIENT_PACKAGE)"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                                \u0026\u0026 !CLIENT_UTIL_PACKAGE.equals(input.getPackageName());"},{"lineNumber":472,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":473,"author":{"gitId":"-"},"content":"                }).check(forClasses(CLIENT_PACKAGE));"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_loggingApiCanOnlyBeAccessedByLogger() {"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"Logger\")"},{"lineNumber":479,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"StdOutConsoleHandler\")"},{"lineNumber":480,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"java.util.logging..\")"},{"lineNumber":481,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_solrApiCanOnlyBeAccessedBySearchManagerClasses() {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"SearchManager\")"},{"lineNumber":487,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"AccountRequestSearchManager\")"},{"lineNumber":488,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"InstructorSearchManager\")"},{"lineNumber":489,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"StudentSearchManager\")"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"org.apache.solr..\")"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_cloudStorageApiCanOnlyBeAccessedByGcsService() {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"GoogleCloudStorageService\")"},{"lineNumber":497,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(CLIENT_SCRIPTS_PACKAGE))"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"com.google.cloud.storage..\")"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_cloudTasksApiCanOnlyBeAccessedByCloudTasksService() {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"GoogleCloudTasksService\")"},{"lineNumber":505,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"com.google.cloud.tasks.v2..\")"},{"lineNumber":506,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_cloudLoggingApiCanOnlyBeAccessedByCloudLoggingService() {"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"GoogleCloudLoggingService\")"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"com.google.appengine.logging.v1..\")"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                .orShould().accessClassesThat().resideInAPackage(\"com.google.cloud.logging..\")"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_objectifyApiCanOnlyBeAccessedBySomePackages() {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(STORAGE_API_PACKAGE))"},{"lineNumber":520,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(STORAGE_ENTITY_PACKAGE))"},{"lineNumber":521,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(CLIENT_CONNECTOR_PACKAGE))"},{"lineNumber":522,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(CLIENT_SCRIPTS_PACKAGE))"},{"lineNumber":523,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"BaseTestCaseWithLocalDatabaseAccess\")"},{"lineNumber":524,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"com.googlecode.objectify..\")"},{"lineNumber":525,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_servletApiCanOnlyBeAccessedBySomePackages() {"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        noClasses().that().doNotHaveSimpleName(\"HttpRequestHelper\")"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"OfyHelper\")"},{"lineNumber":532,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"MockFilterChain\")"},{"lineNumber":533,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"MockHttpServletRequest\")"},{"lineNumber":534,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"MockHttpServletResponse\")"},{"lineNumber":535,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"MockPart\")"},{"lineNumber":536,"author":{"gitId":"-"},"content":"                .and().resideOutsideOfPackage(includeSubpackages(UI_WEBAPI_PACKAGE))"},{"lineNumber":537,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveFullyQualifiedName(\"javax.servlet..\")"},{"lineNumber":538,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_jettyApiCanOnlyBeAccessedBySomePackages() {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(MAIN_PACKAGE)"},{"lineNumber":544,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveFullyQualifiedName(\"org.eclipse.jetty..\")"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_assertionApiCanOnlyBeAccessedBySomePackages() {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(includeSubpackages(E2E_PAGEOBJECTS_PACKAGE))"},{"lineNumber":551,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"BaseTestCase\")"},{"lineNumber":552,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"AssertHelper\")"},{"lineNumber":553,"author":{"gitId":"-"},"content":"                .and().doNotHaveSimpleName(\"EmailChecker\")"},{"lineNumber":554,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().haveFullyQualifiedName(\"org.junit.Assert\")"},{"lineNumber":555,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    public void testArchitecture_externalApi_seleniumApiCanOnlyBeAccessedByPageObjects() {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        noClasses().that().resideOutsideOfPackage(E2E_PAGEOBJECTS_PACKAGE)"},{"lineNumber":561,"author":{"gitId":"-"},"content":"                .should().accessClassesThat().resideInAPackage(\"org.openqa.selenium..\")"},{"lineNumber":562,"author":{"gitId":"-"},"content":"                .check(ALL_CLASSES);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":15,"-":550}},{"path":"src/test/java/teammates/common/datatransfer/UserInfoCookieTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":" * SUT: {@link UserInfoCookie}."},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"public class UserInfoCookieTest extends BaseTestCase {"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"    private UserInfoCookie uc \u003d new UserInfoCookie(\"MockId\");"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"    public void testIsValid() {"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Cookie not expired\");"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"        uc.setExpiryTime(Instant.now().plus(1, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"        assertTrue(uc.isValid());"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Cookie expired\");"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"        uc.setExpiryTime(Instant.now().minus(1, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"        assertFalse(uc.isValid());"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Invalid Signature\");"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"        uc.setExpiryTime(Instant.now().plus(1, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"        uc.setVerificationCode(\"WrongCode\");"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"        assertFalse(uc.isValid());"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":31}},{"path":"src/test/java/teammates/common/datatransfer/attributes/NotificationAttributesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.common.datatransfer.attributes;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import teammates.storage.entity.Notification;"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":" * SUT: {@link NotificationAttributes}."},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"public class NotificationAttributesTest extends BaseTestCase {"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    public void testValueOf_withAllFieldPopulatedNotificationAttributes_shouldGenerateAttributesCorrectly() {"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"        Notification notification \u003d new Notification(\"valid-notification-id\","},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"                Instant.now().plusSeconds(3600), Instant.now().plusSeconds(7200),"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"                NotificationStyle.SUCCESS, NotificationTargetUser.INSTRUCTOR,"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"                \"valid notification title\", \"valid notification message\", false,"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"                Instant.now(), Instant.now());"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes nfa \u003d NotificationAttributes.valueOf(notification);"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"        verifyNotificationEquals(nfa, notification);"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    public void testBuilder_withNullArguments_shouldThrowException() {"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            NotificationAttributes"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"                    .builder(null)"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"                    .build();"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"            NotificationAttributes"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"                    .builder(\"notificationId\")"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"                    .withStartTime(null)"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"                    .build();"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"            NotificationAttributes"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"                    .builder(\"notificationId\")"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"                    .withEndTime(null)"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"                    .build();"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"            NotificationAttributes"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"                    .builder(\"notificationId\")"},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":"                    .withStyle(null)"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"                    .build();"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"            NotificationAttributes"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"                    .builder(\"notificationId\")"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"                    .withTargetUser(null)"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"                    .build();"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"            NotificationAttributes"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"                    .builder(\"notificationId\")"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"                    .withTitle(null)"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"                    .build();"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e {"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"            NotificationAttributes"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"                    .builder(\"notificationId\")"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"                    .withMessage(null)"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"                    .build();"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"    public void testBuilder_withTypicalData_shouldBuildCorrectAttributes() {"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes nfa \u003d generateTypicalNotificationAttributesObject();"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"notificationId\", nfa.getNotificationId());"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"        assertEquals(Instant.ofEpochSecond(1234567890), nfa.getStartTime());"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"        assertEquals(Instant.ofEpochSecond(1234567890).plusSeconds(7200), nfa.getEndTime());"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(NotificationStyle.SUCCESS, nfa.getStyle());"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"        assertEquals(NotificationTargetUser.INSTRUCTOR, nfa.getTargetUser());"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"valid notification title\", nfa.getTitle());"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"valid message\", nfa.getMessage());"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"    public void testCopyConstructor_shouldDoDeepCopyOfNotificationDetails() {"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes nfa1 \u003d generateTypicalNotificationAttributesObject();"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes nfa2 \u003d nfa1.getCopy();"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"        nfa1.setMessage(\"The first message\");"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"        nfa2.setMessage(\"The second message\");"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"        assertEquals(nfa1.getMessage(), \"The first message\");"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"        assertEquals(nfa2.getMessage(), \"The second message\");"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"    public void testUpdateOptions_withTypicalUpdateOptions_shouldUpdateAttributeCorrectly() {"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes.UpdateOptions updateOptions \u003d"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(\"notificationId\")"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"                        .withStartTime(Instant.ofEpochSecond(1234567890).plusSeconds(1000))"},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"                        .withEndTime(Instant.ofEpochSecond(1234567890).plusSeconds(10000))"},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":"                        .withStyle(NotificationStyle.WARNING)"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"                        .withTargetUser(NotificationTargetUser.STUDENT)"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":"                        .withTitle(\"The edited title\")"},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"                        .withMessage(\"The edited message\")"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"                        .build();"},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":113,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"notificationId\", updateOptions.getNotificationId());"},{"lineNumber":114,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":115,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notificationAttributes \u003d generateTypicalNotificationAttributesObject();"},{"lineNumber":116,"author":{"gitId":"ziqing26"},"content":"        notificationAttributes.update(updateOptions);"},{"lineNumber":117,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":118,"author":{"gitId":"ziqing26"},"content":"        assertEquals(Instant.ofEpochSecond(1234567890).plusSeconds(1000), notificationAttributes.getStartTime());"},{"lineNumber":119,"author":{"gitId":"ziqing26"},"content":"        assertEquals(Instant.ofEpochSecond(1234567890).plusSeconds(10000), notificationAttributes.getEndTime());"},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(NotificationStyle.WARNING, notificationAttributes.getStyle());"},{"lineNumber":121,"author":{"gitId":"ziqing26"},"content":"        assertEquals(NotificationTargetUser.STUDENT, notificationAttributes.getTargetUser());"},{"lineNumber":122,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"The edited title\", notificationAttributes.getTitle());"},{"lineNumber":123,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"The edited message\", notificationAttributes.getMessage());"},{"lineNumber":124,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":126,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":127,"author":{"gitId":"ziqing26"},"content":"    public void testUpdateOptionsBuilder_withNullInput_shouldFailWithAssertionError() {"},{"lineNumber":128,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e"},{"lineNumber":129,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder((String) null));"},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e"},{"lineNumber":131,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(\"notificationId\")"},{"lineNumber":132,"author":{"gitId":"ziqing26"},"content":"                        .withStartTime(null));"},{"lineNumber":133,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e"},{"lineNumber":134,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(\"notificationId\")"},{"lineNumber":135,"author":{"gitId":"ziqing26"},"content":"                        .withEndTime(null));"},{"lineNumber":136,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e"},{"lineNumber":137,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(\"notificationId\")"},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"                        .withStyle(null));"},{"lineNumber":139,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e"},{"lineNumber":140,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(\"notificationId\")"},{"lineNumber":141,"author":{"gitId":"ziqing26"},"content":"                        .withTargetUser(null));"},{"lineNumber":142,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e"},{"lineNumber":143,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(\"notificationId\")"},{"lineNumber":144,"author":{"gitId":"ziqing26"},"content":"                        .withTitle(null));"},{"lineNumber":145,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e"},{"lineNumber":146,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(\"notificationId\")"},{"lineNumber":147,"author":{"gitId":"ziqing26"},"content":"                        .withMessage(null));"},{"lineNumber":148,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":150,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":151,"author":{"gitId":"ziqing26"},"content":"    public void testEquals() {"},{"lineNumber":152,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notificationAttributes \u003d generateTypicalNotificationAttributesObject();"},{"lineNumber":153,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":154,"author":{"gitId":"ziqing26"},"content":"        // When the two notifications are exact copies"},{"lineNumber":155,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notificationAttributesCopy \u003d notificationAttributes.getCopy();"},{"lineNumber":156,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":157,"author":{"gitId":"ziqing26"},"content":"        assertTrue(notificationAttributes.equals(notificationAttributesCopy));"},{"lineNumber":158,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":159,"author":{"gitId":"ziqing26"},"content":"        // When the two notifications have same values but created at different time"},{"lineNumber":160,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notificationAttributesSimilar \u003d generateTypicalNotificationAttributesObject();"},{"lineNumber":161,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":162,"author":{"gitId":"ziqing26"},"content":"        assertTrue(notificationAttributes.equals(notificationAttributesSimilar));"},{"lineNumber":163,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":164,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notificationAttributesDifferent \u003d"},{"lineNumber":165,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.builder(\"differentId\")"},{"lineNumber":166,"author":{"gitId":"ziqing26"},"content":"                .withStartTime(Instant.ofEpochSecond(1234567890))"},{"lineNumber":167,"author":{"gitId":"ziqing26"},"content":"                .withEndTime(Instant.ofEpochSecond(1234567890).plusSeconds(7200))"},{"lineNumber":168,"author":{"gitId":"fsgmhoward"},"content":"                .withStyle(NotificationStyle.SUCCESS)"},{"lineNumber":169,"author":{"gitId":"ziqing26"},"content":"                .withTargetUser(NotificationTargetUser.INSTRUCTOR)"},{"lineNumber":170,"author":{"gitId":"ziqing26"},"content":"                .withTitle(\"valid notification title\")"},{"lineNumber":171,"author":{"gitId":"ziqing26"},"content":"                .withMessage(\"valid message\")"},{"lineNumber":172,"author":{"gitId":"ziqing26"},"content":"                .build();"},{"lineNumber":173,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":174,"author":{"gitId":"ziqing26"},"content":"        assertFalse(notificationAttributes.equals(notificationAttributesDifferent));"},{"lineNumber":175,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":176,"author":{"gitId":"ziqing26"},"content":"        // When the other object is of different class"},{"lineNumber":177,"author":{"gitId":"ziqing26"},"content":"        assertFalse(notificationAttributes.equals(3));"},{"lineNumber":178,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":180,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":181,"author":{"gitId":"ziqing26"},"content":"    public void testHashCode() {"},{"lineNumber":182,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notificationAttributes \u003d generateTypicalNotificationAttributesObject();"},{"lineNumber":183,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":184,"author":{"gitId":"ziqing26"},"content":"        // When the two notifications are exact copies"},{"lineNumber":185,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notificationAttributesCopy \u003d notificationAttributes.getCopy();"},{"lineNumber":186,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":187,"author":{"gitId":"ziqing26"},"content":"        assertTrue(notificationAttributes.hashCode() \u003d\u003d notificationAttributesCopy.hashCode());"},{"lineNumber":188,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":189,"author":{"gitId":"ziqing26"},"content":"        // When the two notifications have same values but created at different time"},{"lineNumber":190,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notificationAttributesSimilar \u003d generateTypicalNotificationAttributesObject();"},{"lineNumber":191,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":192,"author":{"gitId":"ziqing26"},"content":"        assertTrue(notificationAttributes.hashCode() \u003d\u003d notificationAttributesSimilar.hashCode());"},{"lineNumber":193,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":194,"author":{"gitId":"ziqing26"},"content":"        // notification attributes with a different id."},{"lineNumber":195,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notificationAttributesDifferent \u003d"},{"lineNumber":196,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.builder(\"differentId\")"},{"lineNumber":197,"author":{"gitId":"ziqing26"},"content":"                        .withStartTime(Instant.ofEpochSecond(1234567890))"},{"lineNumber":198,"author":{"gitId":"ziqing26"},"content":"                        .withEndTime(Instant.ofEpochSecond(1234567890).plusSeconds(7200))"},{"lineNumber":199,"author":{"gitId":"fsgmhoward"},"content":"                        .withStyle(NotificationStyle.SUCCESS)"},{"lineNumber":200,"author":{"gitId":"ziqing26"},"content":"                        .withTargetUser(NotificationTargetUser.INSTRUCTOR)"},{"lineNumber":201,"author":{"gitId":"ziqing26"},"content":"                        .withTitle(\"valid notification title\")"},{"lineNumber":202,"author":{"gitId":"ziqing26"},"content":"                        .withMessage(\"valid message\")"},{"lineNumber":203,"author":{"gitId":"ziqing26"},"content":"                        .build();"},{"lineNumber":204,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":205,"author":{"gitId":"ziqing26"},"content":"        assertFalse(notificationAttributes.hashCode() \u003d\u003d notificationAttributesDifferent.hashCode());"},{"lineNumber":206,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":208,"author":{"gitId":"ziqing26"},"content":"    private NotificationAttributes generateTypicalNotificationAttributesObject() {"},{"lineNumber":209,"author":{"gitId":"ziqing26"},"content":"        return NotificationAttributes.builder(\"notificationId\")"},{"lineNumber":210,"author":{"gitId":"ziqing26"},"content":"                .withStartTime(Instant.ofEpochSecond(1234567890))"},{"lineNumber":211,"author":{"gitId":"ziqing26"},"content":"                .withEndTime(Instant.ofEpochSecond(1234567890).plusSeconds(7200))"},{"lineNumber":212,"author":{"gitId":"fsgmhoward"},"content":"                .withStyle(NotificationStyle.SUCCESS)"},{"lineNumber":213,"author":{"gitId":"ziqing26"},"content":"                .withTargetUser(NotificationTargetUser.INSTRUCTOR)"},{"lineNumber":214,"author":{"gitId":"ziqing26"},"content":"                .withTitle(\"valid notification title\")"},{"lineNumber":215,"author":{"gitId":"ziqing26"},"content":"                .withMessage(\"valid message\")"},{"lineNumber":216,"author":{"gitId":"ziqing26"},"content":"                .build();"},{"lineNumber":217,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":219,"author":{"gitId":"ziqing26"},"content":"    private void verifyNotificationEquals(NotificationAttributes nfa, Notification notification) {"},{"lineNumber":220,"author":{"gitId":"ziqing26"},"content":"        assertEquals(notification.getNotificationId(), nfa.getNotificationId());"},{"lineNumber":221,"author":{"gitId":"ziqing26"},"content":"        assertEquals(notification.getStartTime(), nfa.getStartTime());"},{"lineNumber":222,"author":{"gitId":"ziqing26"},"content":"        assertEquals(notification.getEndTime(), nfa.getEndTime());"},{"lineNumber":223,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(notification.getStyle(), nfa.getStyle());"},{"lineNumber":224,"author":{"gitId":"ziqing26"},"content":"        assertEquals(notification.getTargetUser(), nfa.getTargetUser());"},{"lineNumber":225,"author":{"gitId":"ziqing26"},"content":"        assertEquals(notification.getTitle(), nfa.getTitle());"},{"lineNumber":226,"author":{"gitId":"ziqing26"},"content":"        assertEquals(notification.getMessage(), nfa.getMessage());"},{"lineNumber":227,"author":{"gitId":"ziqing26"},"content":"        assertEquals(notification.isShown(), nfa.isShown());"},{"lineNumber":228,"author":{"gitId":"ziqing26"},"content":"        assertEquals(notification.getCreatedAt(), nfa.getCreatedAt());"},{"lineNumber":229,"author":{"gitId":"ziqing26"},"content":"        assertEquals(notification.getUpdatedAt(), nfa.getUpdatedAt());"},{"lineNumber":230,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":220,"fsgmhoward":11}},{"path":"src/test/java/teammates/common/util/FieldValidatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * SUT: {@link FieldValidator}."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FieldValidatorTest extends BaseTestCase {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void testGetValidityInfoForNonHtmlField_cleanInput_returnEmptyString() {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String clean \u003d \"Valid clean input with no special HTML characters\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String testFieldName \u003d \"Inconsequential test field name\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getValidityInfoForNonHtmlField(testFieldName, clean);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid clean input with no special HTML characters should return empty string\", \"\","},{"lineNumber":22,"author":{"gitId":"-"},"content":"                     actual);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void testGetValidityInfoForNonHtmlField_sanitizedInput_returnEmptyString() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String sanitizedInput \u003d \"Valid sanitized input \u0026lt; \u0026gt; \u0026quot; \u0026#x2f; \u0026#39; \u0026amp;\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String testFieldName \u003d \"Inconsequential test field name\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getValidityInfoForNonHtmlField(testFieldName, sanitizedInput);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid sanitized input should return empty string\", \"\", actual);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void testGetValidityInfoForNonHtmlField_unsanitizedInput_returnErrorString() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String unsanitizedInput \u003d \"Invalid unsanitized input \u003c\u003e\\\"/\u0027\u0026\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String testFieldName \u003d \"Inconsequential test field name\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getValidityInfoForNonHtmlField(testFieldName, unsanitizedInput);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid unsanitized input should return error string\","},{"lineNumber":39,"author":{"gitId":"-"},"content":"                     \"The provided Inconsequential test field name is not acceptable to TEAMMATES as it \""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                         + \"cannot contain the following special html characters in brackets: (\u003c \u003e \\\" / \u0027 \u0026)\","},{"lineNumber":41,"author":{"gitId":"-"},"content":"                     actual);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void testGetValidityInfoForSizeCappedPossiblyEmptyString() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String typicalFieldName \u003d \"my field\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        int maxLength \u003d 50;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(\"valid: typical value\","},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \"\","},{"lineNumber":51,"author":{"gitId":"-"},"content":"                FieldValidator.getValidityInfoForSizeCappedPossiblyEmptyString("},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        typicalFieldName,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        maxLength,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        \"Dr. Amy-B s/o O\u0027br, \u0026 2nd \\t \\n (alias \u0027JB\u0027)\"));"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(\"valid: max length\","},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \"\","},{"lineNumber":58,"author":{"gitId":"-"},"content":"                FieldValidator.getValidityInfoForSizeCappedPossiblyEmptyString("},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        typicalFieldName,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        maxLength,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                        StringHelperExtension.generateStringOfLength(maxLength)));"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String emptyValue \u003d \"\";"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(\"valid: empty\","},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \"\","},{"lineNumber":66,"author":{"gitId":"-"},"content":"                FieldValidator.getValidityInfoForSizeCappedPossiblyEmptyString("},{"lineNumber":67,"author":{"gitId":"-"},"content":"                        typicalFieldName,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        maxLength,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                        emptyValue));"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String untrimmedValue \u003d \" abc \";"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(\"invalid: untrimmed\","},{"lineNumber":73,"author":{"gitId":"-"},"content":"                     \"The provided my field is not acceptable to TEAMMATES as it contains only whitespace or \""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                         + \"contains extra spaces at the beginning or at the end of the text.\","},{"lineNumber":75,"author":{"gitId":"-"},"content":"                     FieldValidator.getValidityInfoForSizeCappedPossiblyEmptyString(typicalFieldName, maxLength,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                                                                               untrimmedValue));"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String tooLongName \u003d StringHelperExtension.generateStringOfLength(maxLength + 1);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(\"invalid: too long\","},{"lineNumber":80,"author":{"gitId":"-"},"content":"                     \"\\\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\" is not acceptable to TEAMMATES \""},{"lineNumber":81,"author":{"gitId":"-"},"content":"                         + \"as a/an my field because it is too long. The value of a/an my field should be no \""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                         + \"longer than 50 characters.\","},{"lineNumber":83,"author":{"gitId":"-"},"content":"                     FieldValidator.getValidityInfoForSizeCappedPossiblyEmptyString(typicalFieldName, maxLength,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                                                               tooLongName));"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void testGetValidityInfoForAllowedName() {"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ______TS(\"null value\");"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String typicalFieldName \u003d \"name field\";"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        int typicalLength \u003d 25;"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                FieldValidator.getValidityInfoForAllowedName(typicalFieldName, typicalLength, null));"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        int maxLength \u003d 50;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(\"valid: typical length with valid characters\","},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \"\","},{"lineNumber":103,"author":{"gitId":"-"},"content":"                FieldValidator.getValidityInfoForAllowedName("},{"lineNumber":104,"author":{"gitId":"-"},"content":"                        typicalFieldName,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                        maxLength,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                        \"Ýàn-B. s/o O\u0027br, \u00262\\t\\n(~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\"));"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ______TS(\"failure: invalid characters\");"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String nameContainInvalidChars \u003d \"Dr. Amy-Bén s/o O\u0027\u0026|% 2\\t\\n (~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\";"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(\"invalid: typical length with invalid characters\","},{"lineNumber":112,"author":{"gitId":"-"},"content":"                     \"\\\"Dr. Amy-Bén s/o O\u0027\u0026|% 2\\t\\n (~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\\\" is \""},{"lineNumber":113,"author":{"gitId":"-"},"content":"                         + \"not acceptable to TEAMMATES as a/an name field because it contains invalid \""},{"lineNumber":114,"author":{"gitId":"-"},"content":"                         + \"characters. A/An name field must start with an alphanumeric character, and cannot \""},{"lineNumber":115,"author":{"gitId":"-"},"content":"                         + \"contain any vertical bar (|) or percent sign (%).\","},{"lineNumber":116,"author":{"gitId":"-"},"content":"                     FieldValidator.getValidityInfoForAllowedName(typicalFieldName, maxLength,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                                             nameContainInvalidChars));"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        ______TS(\"failure: starts with non-alphanumeric character\");"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String nameStartedWithNonAlphaNumChar \u003d \"!Amy-Bén s/o O\u0027\u0026|% 2\\t\\n (~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\";"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(\"invalid: typical length with invalid characters\","},{"lineNumber":123,"author":{"gitId":"-"},"content":"                     \"\\\"!Amy-Bén s/o O\u0027\u0026|% 2\\t\\n (~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\\\" is not \""},{"lineNumber":124,"author":{"gitId":"-"},"content":"                         + \"acceptable to TEAMMATES as a/an name field because it starts with a \""},{"lineNumber":125,"author":{"gitId":"-"},"content":"                         + \"non-alphanumeric character. A/An name field must start with an alphanumeric \""},{"lineNumber":126,"author":{"gitId":"-"},"content":"                         + \"character, and cannot contain any vertical bar (|) or percent sign (%).\","},{"lineNumber":127,"author":{"gitId":"-"},"content":"                     FieldValidator.getValidityInfoForAllowedName(typicalFieldName, maxLength,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                                                             nameStartedWithNonAlphaNumChar));"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        ______TS(\"failure: starts with curly braces but contains invalid char\");"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String nameStartedWithBracesButHasInvalidChar \u003d \"{Amy} -Bén s/o O\u0027\u0026|% 2\\t\\n (~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\";"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(\"invalid: typical length with invalid characters\","},{"lineNumber":134,"author":{"gitId":"-"},"content":"                     \"\\\"{Amy} -Bén s/o O\u0027\u0026|% 2\\t\\n (~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\\\" is not \""},{"lineNumber":135,"author":{"gitId":"-"},"content":"                         + \"acceptable to TEAMMATES as a/an name field because it contains invalid \""},{"lineNumber":136,"author":{"gitId":"-"},"content":"                         + \"characters. A/An name field must start with an alphanumeric character, and cannot \""},{"lineNumber":137,"author":{"gitId":"-"},"content":"                         + \"contain any vertical bar (|) or percent sign (%).\","},{"lineNumber":138,"author":{"gitId":"-"},"content":"                     FieldValidator.getValidityInfoForAllowedName(typicalFieldName, maxLength,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                                                             nameStartedWithBracesButHasInvalidChar));"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        ______TS(\"failure: starts with opening curly bracket but dose not have closing bracket\");"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String nameStartedWithCurlyBracketButHasNoEnd \u003d \"{Amy -Bén s/o O\u0027\u0026|% 2\\t\\n (~!@#$^*+_\u003d{[]\\\\:;\\\"\u003c\u003e?)\";"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(\"invalid: typical length started with non-alphanumeric character\","},{"lineNumber":145,"author":{"gitId":"-"},"content":"                     \"\\\"{Amy -Bén s/o O\u0027\u0026|% 2\\t\\n (~!@#$^*+_\u003d{[]\\\\:;\\\"\u003c\u003e?)\\\" is not \""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                         + \"acceptable to TEAMMATES as a/an name field because it starts with a \""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                         + \"non-alphanumeric character. A/An name field must start with an alphanumeric \""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                         + \"character, and cannot contain any vertical bar (|) or percent sign (%).\","},{"lineNumber":149,"author":{"gitId":"-"},"content":"                     FieldValidator.getValidityInfoForAllowedName(typicalFieldName, maxLength,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                                             nameStartedWithCurlyBracketButHasNoEnd));"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ______TS(\"success: with opening and closing curly braces\");"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(\"valid: max length\","},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \"\","},{"lineNumber":156,"author":{"gitId":"-"},"content":"                FieldValidator.getValidityInfoForAllowedName("},{"lineNumber":157,"author":{"gitId":"-"},"content":"                        typicalFieldName,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                        maxLength,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                        \"{last name} first name\"));"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        ______TS(\"success: max length\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(\"valid: max length\","},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \"\","},{"lineNumber":165,"author":{"gitId":"-"},"content":"                FieldValidator.getValidityInfoForAllowedName("},{"lineNumber":166,"author":{"gitId":"-"},"content":"                        typicalFieldName,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                        maxLength,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                        StringHelperExtension.generateStringOfLength(maxLength)));"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ______TS(\"failure: too long\");"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String tooLongName \u003d StringHelperExtension.generateStringOfLength(maxLength + 1);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(\"invalid: too long\","},{"lineNumber":174,"author":{"gitId":"-"},"content":"                     \"\\\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\" is not acceptable to TEAMMATES \""},{"lineNumber":175,"author":{"gitId":"-"},"content":"                         + \"as a/an name field because it is too long. The value of a/an name field should \""},{"lineNumber":176,"author":{"gitId":"-"},"content":"                         + \"be no longer than 50 characters. It should not be empty.\","},{"lineNumber":177,"author":{"gitId":"-"},"content":"                     FieldValidator.getValidityInfoForAllowedName(typicalFieldName, maxLength, tooLongName));"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ______TS(\"failure: empty string\");"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String emptyValue \u003d \"\";"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(\"invalid: empty\","},{"lineNumber":183,"author":{"gitId":"-"},"content":"                     \"The field \u0027name field\u0027 is empty. The value of a/an name field should be no longer \""},{"lineNumber":184,"author":{"gitId":"-"},"content":"                         + \"than 50 characters. It should not be empty.\","},{"lineNumber":185,"author":{"gitId":"-"},"content":"                     FieldValidator.getValidityInfoForAllowedName(typicalFieldName, maxLength, emptyValue));"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ______TS(\"failure: untrimmed value\");"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String untrimmedValue \u003d \" abc \";"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(\"invalid: untrimmed\","},{"lineNumber":191,"author":{"gitId":"-"},"content":"                     \"The provided name field is not acceptable to TEAMMATES as it contains only whitespace \""},{"lineNumber":192,"author":{"gitId":"-"},"content":"                         + \"or contains extra spaces at the beginning or at the end of the text.\","},{"lineNumber":193,"author":{"gitId":"-"},"content":"                     FieldValidator.getValidityInfoForAllowedName(typicalFieldName, maxLength, untrimmedValue));"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForPersonName_invalid_returnSpecificErrorString() {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        String invalidPersonName \u003d \"\";"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForPersonName(invalidPersonName);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid person name (empty) should return error message that is specific to person name\","},{"lineNumber":201,"author":{"gitId":"-"},"content":"                     \"The field \u0027person name\u0027 is empty. The value of a/an person name should be no longer \""},{"lineNumber":202,"author":{"gitId":"-"},"content":"                         + \"than 100 characters. It should not be empty.\","},{"lineNumber":203,"author":{"gitId":"-"},"content":"                     actual);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForInstituteName_invalid_returnSpecificErrorString() {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        String invalidInstituteName \u003d StringHelperExtension.generateStringOfLength("},{"lineNumber":209,"author":{"gitId":"-"},"content":"                                                                FieldValidator.INSTITUTE_NAME_MAX_LENGTH + 1);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForInstituteName(invalidInstituteName);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid institute name (too long) should return error message that is specific to institute name\","},{"lineNumber":212,"author":{"gitId":"-"},"content":"                     \"\\\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\" is not \""},{"lineNumber":213,"author":{"gitId":"-"},"content":"                         + \"acceptable to TEAMMATES as a/an institute name because it is too long. The value \""},{"lineNumber":214,"author":{"gitId":"-"},"content":"                         + \"of a/an institute name should be no longer than 64 characters. It should not be empty.\","},{"lineNumber":215,"author":{"gitId":"-"},"content":"                     actual);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForNationality_invalid_returnSpecificErrorString() {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        String invalidNationality \u003d \"{ Invalid Char Nationality\";"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForNationality(invalidNationality);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid nationality (invalid char) should return error string that is specific to nationality\","},{"lineNumber":223,"author":{"gitId":"-"},"content":"                     String.format(FieldValidator.NATIONALITY_ERROR_MESSAGE, invalidNationality), actual);"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        invalidNationality \u003d \"\u003cscript\u003e alert(\u0027hi!\u0027); \u003c/script\u003e\";"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        actual \u003d FieldValidator.getInvalidityInfoForNationality(invalidNationality);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertEquals(\"Unsanitized, invalid nationality should return sanitized error string\","},{"lineNumber":228,"author":{"gitId":"-"},"content":"                     String.format(FieldValidator.NATIONALITY_ERROR_MESSAGE, invalidNationality), actual);"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForNationality_valid_returnEmptyString() {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        String validNationality \u003d \"New Zealander\";"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForNationality(validNationality);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid nationality should return empty string\", \"\", actual);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForTeamName_invalid_returnSpecificErrorString() {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        String invalidTeamName \u003d \"\";"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForTeamName(invalidTeamName);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid team name (empty) should return error message that is specific to team name\","},{"lineNumber":243,"author":{"gitId":"-"},"content":"                     \"The field \u0027team name\u0027 is empty. The value of a/an team name should be no longer \""},{"lineNumber":244,"author":{"gitId":"-"},"content":"                         + \"than 60 characters. It should not be empty.\","},{"lineNumber":245,"author":{"gitId":"-"},"content":"                     actual);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForSectionName_invalid_returnSpecificErrorString() {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        String invalidSectionName \u003d \"Percent Symbol % Section\";"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForSectionName(invalidSectionName);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid section name (invalid char) should return error string that is specific to section name\","},{"lineNumber":253,"author":{"gitId":"-"},"content":"                     \"\\\"Percent Symbol % Section\\\" is not acceptable to TEAMMATES as a/an section name \""},{"lineNumber":254,"author":{"gitId":"-"},"content":"                         + \"because it contains invalid characters. A/An section name must start with an \""},{"lineNumber":255,"author":{"gitId":"-"},"content":"                         + \"alphanumeric character, and cannot contain any vertical bar (|) or percent sign (%).\","},{"lineNumber":256,"author":{"gitId":"-"},"content":"                     actual);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForCourseName_invalid_returnSpecificErrorString() {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        String invalidCourseName \u003d \"Vertical Bar | Course\";"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForCourseName(invalidCourseName);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid course name (invalid char) should return error string that is specific to course name\","},{"lineNumber":264,"author":{"gitId":"-"},"content":"                     \"\\\"Vertical Bar | Course\\\" is not acceptable to TEAMMATES as a/an course name because \""},{"lineNumber":265,"author":{"gitId":"-"},"content":"                         + \"it contains invalid characters. A/An course name must start with an alphanumeric \""},{"lineNumber":266,"author":{"gitId":"-"},"content":"                         + \"character, and cannot contain any vertical bar (|) or percent sign (%).\","},{"lineNumber":267,"author":{"gitId":"-"},"content":"                     actual);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForFeedbackSessionName_invalid_returnSpecificErrorString() {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        String invalidSessionName \u003d StringHelperExtension.generateStringOfLength("},{"lineNumber":273,"author":{"gitId":"-"},"content":"                                                              FieldValidator.FEEDBACK_SESSION_NAME_MAX_LENGTH + 1);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForFeedbackSessionName(invalidSessionName);"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid feedback session name (too long) should return error message specific to feedback \""},{"lineNumber":276,"author":{"gitId":"-"},"content":"                         + \"session name\","},{"lineNumber":277,"author":{"gitId":"-"},"content":"                     \"\\\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\" \""},{"lineNumber":278,"author":{"gitId":"-"},"content":"                         + \"is not acceptable to TEAMMATES as a/an feedback session name because it is too long. \""},{"lineNumber":279,"author":{"gitId":"-"},"content":"                         + \"The value of a/an feedback session name should be no longer than 64 characters. \""},{"lineNumber":280,"author":{"gitId":"-"},"content":"                         + \"It should not be empty.\","},{"lineNumber":281,"author":{"gitId":"-"},"content":"                     actual);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForRole_null_throwException() {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e FieldValidator.getInvalidityInfoForRole(null));"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForRole_valid_returnEmptyString() {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        String validRole \u003d Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForRole(validRole);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid role should return empty string\", \"\", actual);"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForRole_invalid_returnErrorString() {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        String invalidRole \u003d \"student leader\";"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        String actual \u003d FieldValidator.getInvalidityInfoForRole(invalidRole);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid role should return appropriate error string\","},{"lineNumber":301,"author":{"gitId":"-"},"content":"                String.format(FieldValidator.ROLE_ERROR_MESSAGE, invalidRole),"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                actual);"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        invalidRole \u003d \"\u003cscript\u003e alert(\u0027hi!\u0027); \u003c/script\u003e\";"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        actual \u003d FieldValidator.getInvalidityInfoForRole(invalidRole);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        assertEquals(\"Unsanitized, invalid role should return appropriate error string\","},{"lineNumber":307,"author":{"gitId":"-"},"content":"                String.format(FieldValidator.ROLE_ERROR_MESSAGE, invalidRole), actual);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForGoogleId_null_throwException() {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e FieldValidator.getInvalidityInfoForGoogleId(null));"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForGoogleId_untrimmedGmailDomain_throwException() {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e FieldValidator.getInvalidityInfoForGoogleId(\"abc@GMAIL.com\"));"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForGoogleId_valid_returnEmptyString() {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        String typicalId \u003d \"valid9.Goo-gle.id_\";"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid Google ID (typical) should return empty string\", \"\","},{"lineNumber":324,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(typicalId));"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"        String shortId \u003d \"e\";"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid Google ID (short) should return empty string\", \"\","},{"lineNumber":328,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(shortId));"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"        String emailAsId \u003d \"someone@yahoo.com\";"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid Google ID (typical email) should return empty string\", \"\","},{"lineNumber":332,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(emailAsId));"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"        String shortEmailAsId \u003d \"e@y.c\";"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid Google ID (short email) should return empty string\", \"\","},{"lineNumber":336,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(shortEmailAsId));"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"        String maxLengthId \u003d StringHelperExtension.generateStringOfLength(FieldValidator.GOOGLE_ID_MAX_LENGTH);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid Google ID (max length) should return empty string\", \"\","},{"lineNumber":340,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(maxLengthId));"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForGoogleId_invalid_returnErrorString() {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        String emptyId \u003d \"\";"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Google ID (empty) should return appropriate error message\","},{"lineNumber":347,"author":{"gitId":"-"},"content":"                     \"The field \u0027Google ID\u0027 is empty. A Google ID must be a valid id \""},{"lineNumber":348,"author":{"gitId":"-"},"content":"                         + \"already registered with Google. It cannot be longer than \""},{"lineNumber":349,"author":{"gitId":"-"},"content":"                         + \"254 characters, cannot be empty and cannot contain spaces.\","},{"lineNumber":350,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(emptyId));"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"        String whitespaceId \u003d \"     \";"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Google ID (contains whitespaces only) should return appropriate error message\","},{"lineNumber":354,"author":{"gitId":"-"},"content":"                     FieldValidator.WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace("},{"lineNumber":355,"author":{"gitId":"-"},"content":"                        \"${fieldName}\", FieldValidator.GOOGLE_ID_FIELD_NAME),"},{"lineNumber":356,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(whitespaceId));"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String untrimmedId \u003d \"  googleIdWithSpacesAround    \";"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Google ID (leading/trailing whitespaces) should return appropriate error message\","},{"lineNumber":360,"author":{"gitId":"-"},"content":"                     FieldValidator.WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace("},{"lineNumber":361,"author":{"gitId":"-"},"content":"                        \"${fieldName}\", FieldValidator.GOOGLE_ID_FIELD_NAME),"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(untrimmedId));"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String tooLongId \u003d StringHelperExtension.generateStringOfLength(FieldValidator.GOOGLE_ID_MAX_LENGTH + 1);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Google ID (too long) should return appropriate error message\","},{"lineNumber":366,"author":{"gitId":"-"},"content":"                     \"\\\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\""},{"lineNumber":367,"author":{"gitId":"-"},"content":"                         + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\""},{"lineNumber":368,"author":{"gitId":"-"},"content":"                         + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\""},{"lineNumber":369,"author":{"gitId":"-"},"content":"                         + \"aaaaaaaa\\\" is not acceptable to TEAMMATES as a/an Google ID because it is too \""},{"lineNumber":370,"author":{"gitId":"-"},"content":"                         + \"long. A Google ID must be a valid id already registered with Google. It cannot \""},{"lineNumber":371,"author":{"gitId":"-"},"content":"                         + \"be longer than 254 characters, cannot be empty and cannot contain spaces.\","},{"lineNumber":372,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(tooLongId));"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        String idWithSpaces \u003d \"invalid google id with spaces\";"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Google ID (with spaces) should return appropriate error message\","},{"lineNumber":376,"author":{"gitId":"-"},"content":"                     \"\\\"invalid google id with spaces\\\" is not acceptable to TEAMMATES as a/an Google ID \""},{"lineNumber":377,"author":{"gitId":"-"},"content":"                         + \"because it is not in the correct format. A Google ID must be a valid id already \""},{"lineNumber":378,"author":{"gitId":"-"},"content":"                         + \"registered with Google. It cannot be longer than 254 characters, cannot be empty \""},{"lineNumber":379,"author":{"gitId":"-"},"content":"                         + \"and cannot contain spaces.\","},{"lineNumber":380,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(idWithSpaces));"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"        String idWithInvalidHtmlChar \u003d \"invalid google id with HTML/\u003c special characters\";"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Google ID (contains HTML characters) should return appropriate error message\","},{"lineNumber":384,"author":{"gitId":"-"},"content":"                     \"\\\"invalid google id with HTML/\u003c special characters\\\" is not acceptable to \""},{"lineNumber":385,"author":{"gitId":"-"},"content":"                         + \"TEAMMATES as a/an Google ID because it is not in the correct format. A Google ID \""},{"lineNumber":386,"author":{"gitId":"-"},"content":"                         + \"must be a valid id already registered with Google. It cannot be longer than 254 \""},{"lineNumber":387,"author":{"gitId":"-"},"content":"                         + \"characters, cannot be empty and cannot contain spaces.\","},{"lineNumber":388,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForGoogleId(idWithInvalidHtmlChar));"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForEmail_null_throwException() {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e FieldValidator.getInvalidityInfoForEmail(null));"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForEmail_valid_returnEmptyString() {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        String typicalEmail \u003d \"someone@yahoo.com\";"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid email (typical) should return empty string\", \"\","},{"lineNumber":400,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(typicalEmail));"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"        String shortEmail \u003d \"e@y.c\";"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid email (short) should return empty string\", \"\","},{"lineNumber":404,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(shortEmail));"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"        String maxLengthEmail \u003d StringHelperExtension.generateStringOfLength(FieldValidator.EMAIL_MAX_LENGTH - 6) + \"@c.gov\";"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid email (max-length) should return empty string\", \"\","},{"lineNumber":408,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(maxLengthEmail));"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForEmail_invalid_returnErrorString() {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        String emptyEmail \u003d \"\";"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid email (empty) should return appropriate error string\","},{"lineNumber":415,"author":{"gitId":"-"},"content":"                     \"The field \u0027email\u0027 is empty. An email address contains some text followed by one \""},{"lineNumber":416,"author":{"gitId":"-"},"content":"                         + \"\u0027@\u0027 sign followed by some more text, and should end with a top level domain address like \""},{"lineNumber":417,"author":{"gitId":"-"},"content":"                         + \".com. It cannot be longer than 254 characters, cannot be empty and cannot contain spaces.\","},{"lineNumber":418,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(emptyEmail));"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"        String untrimmedEmail \u003d \"  untrimmed@email.com  \";"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid email (leading/trailing spaces) should return appropriate error string\","},{"lineNumber":422,"author":{"gitId":"-"},"content":"                     FieldValidator.WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace("},{"lineNumber":423,"author":{"gitId":"-"},"content":"                        \"${fieldName}\", FieldValidator.EMAIL_FIELD_NAME),"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(untrimmedEmail));"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"        String whitespaceEmail \u003d \"    \";"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid email (only whitespaces) should return appropriate error string\","},{"lineNumber":428,"author":{"gitId":"-"},"content":"                     FieldValidator.WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace("},{"lineNumber":429,"author":{"gitId":"-"},"content":"                        \"${fieldName}\", FieldValidator.EMAIL_FIELD_NAME),"},{"lineNumber":430,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(whitespaceEmail));"},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"        String tooLongEmail \u003d StringHelperExtension.generateStringOfLength(FieldValidator.EMAIL_MAX_LENGTH + 1) + \"@c.gov\";"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid email (too long) should return appropriate error string\","},{"lineNumber":434,"author":{"gitId":"-"},"content":"                     \"\\\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\""},{"lineNumber":435,"author":{"gitId":"-"},"content":"                         + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\""},{"lineNumber":436,"author":{"gitId":"-"},"content":"                         + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\""},{"lineNumber":437,"author":{"gitId":"-"},"content":"                         + \"aaaaaaaa@c.gov\\\" is not acceptable to TEAMMATES as a/an email because it is too \""},{"lineNumber":438,"author":{"gitId":"-"},"content":"                         + \"long. An email address contains some text followed by one \u0027@\u0027 sign followed by \""},{"lineNumber":439,"author":{"gitId":"-"},"content":"                         + \"some more text, and should end with a top level domain address like .com. \""},{"lineNumber":440,"author":{"gitId":"-"},"content":"                         + \"It cannot be longer than 254 characters, cannot be empty and \""},{"lineNumber":441,"author":{"gitId":"-"},"content":"                         + \"cannot contain spaces.\","},{"lineNumber":442,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(tooLongEmail));"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"        String emailWithSpaceAfterAtSymbol \u003d \"woMAN@com. sg\";"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid email (space character after \u0027@\u0027) should return appropriate error string\","},{"lineNumber":446,"author":{"gitId":"-"},"content":"                     \"\\\"woMAN@com. sg\\\" is not acceptable to TEAMMATES as a/an email because it is not in \""},{"lineNumber":447,"author":{"gitId":"-"},"content":"                         + \"the correct format. An email address contains some text followed by one \u0027@\u0027 sign \""},{"lineNumber":448,"author":{"gitId":"-"},"content":"                         + \"followed by some more text, and should end with a top level domain address like .com. \""},{"lineNumber":449,"author":{"gitId":"-"},"content":"                         + \"It cannot be longer than 254 characters, cannot be \""},{"lineNumber":450,"author":{"gitId":"-"},"content":"                         + \"empty and cannot contain spaces.\","},{"lineNumber":451,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(emailWithSpaceAfterAtSymbol));"},{"lineNumber":452,"author":{"gitId":"-"},"content":""},{"lineNumber":453,"author":{"gitId":"-"},"content":"        String emailWithSpaceBeforeAtSymbol \u003d \"man woman@com.sg\";"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid email (space character before \u0027@\u0027) should return appropriate error string\","},{"lineNumber":455,"author":{"gitId":"-"},"content":"                     \"\\\"man woman@com.sg\\\" is not acceptable to TEAMMATES as a/an email because it \""},{"lineNumber":456,"author":{"gitId":"-"},"content":"                         + \"is not in the correct format. An email address contains some text followed by \""},{"lineNumber":457,"author":{"gitId":"-"},"content":"                         + \"one \u0027@\u0027 sign followed by some more text, and should end with a top level domain address \""},{"lineNumber":458,"author":{"gitId":"-"},"content":"                         + \"like .com. It cannot be longer than 254 \""},{"lineNumber":459,"author":{"gitId":"-"},"content":"                         + \"characters, cannot be empty and cannot contain spaces.\","},{"lineNumber":460,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(emailWithSpaceBeforeAtSymbol));"},{"lineNumber":461,"author":{"gitId":"-"},"content":""},{"lineNumber":462,"author":{"gitId":"-"},"content":"        String emailWithMultipleAtSymbol \u003d \"man@woman@com.lk\";"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid email (multiple \u0027@\u0027 characters) should return appropriate error string\","},{"lineNumber":464,"author":{"gitId":"-"},"content":"                     \"\\\"man@woman@com.lk\\\" is not acceptable to TEAMMATES as a/an email because it is not \""},{"lineNumber":465,"author":{"gitId":"-"},"content":"                         + \"in the correct format. An email address contains some text followed by one \u0027@\u0027 \""},{"lineNumber":466,"author":{"gitId":"-"},"content":"                         + \"sign followed by some more text, and should end with a top level domain address like .com. \""},{"lineNumber":467,"author":{"gitId":"-"},"content":"                         + \"It cannot be longer than 254 characters, \""},{"lineNumber":468,"author":{"gitId":"-"},"content":"                         + \"cannot be empty and cannot contain spaces.\","},{"lineNumber":469,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForEmail(emailWithMultipleAtSymbol));"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForCourseId_null_throwException() {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e FieldValidator.getInvalidityInfoForCourseId(null));"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":476,"author":{"gitId":"-"},"content":""},{"lineNumber":477,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForCourseId_valid_returnEmptyString() {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        String typicalCourseId \u003d \"cs1101-sem1.2_\";"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid Course ID (typical) should return empty string\", \"\","},{"lineNumber":481,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForCourseId(typicalCourseId));"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"        String shortCourseId \u003d \"c\";"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid Course ID (short) should return empty string\", \"\","},{"lineNumber":485,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForCourseId(shortCourseId));"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"        String maxLengthCourseId \u003d StringHelperExtension.generateStringOfLength("},{"lineNumber":488,"author":{"gitId":"-"},"content":"                FieldValidator.COURSE_ID_MAX_LENGTH);"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        assertEquals(\"Valid Course ID (max length) should return empty string\", \"\","},{"lineNumber":490,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForCourseId(maxLengthCourseId));"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForCourseId_invalid_returnErrorString() {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        String emptyCourseId \u003d \"\";"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Course ID (empty) should return appropriate error string\","},{"lineNumber":497,"author":{"gitId":"-"},"content":"                     \"The field \u0027course ID\u0027 is empty. A course ID can contain letters, numbers, \""},{"lineNumber":498,"author":{"gitId":"-"},"content":"                         + \"fullstops, hyphens, underscores, and dollar signs. It cannot be \""},{"lineNumber":499,"author":{"gitId":"-"},"content":"                         + \"longer than 64 characters, cannot be empty and cannot contain spaces.\","},{"lineNumber":500,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForCourseId(emptyCourseId));"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"        String untrimmedCourseId \u003d \" $cs1101-sem1.2_ \";"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Course ID (untrimmed) should return appropriate error string\","},{"lineNumber":504,"author":{"gitId":"-"},"content":"                     FieldValidator.WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace("},{"lineNumber":505,"author":{"gitId":"-"},"content":"                        \"${fieldName}\", FieldValidator.COURSE_NAME_FIELD_NAME),"},{"lineNumber":506,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForCourseId(untrimmedCourseId));"},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":"        String whitespaceOnlyCourseId \u003d \"    \";"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Course ID (whitespace only) should return appropriate error string\","},{"lineNumber":510,"author":{"gitId":"-"},"content":"                     FieldValidator.WHITESPACE_ONLY_OR_EXTRA_WHITESPACE_ERROR_MESSAGE.replace("},{"lineNumber":511,"author":{"gitId":"-"},"content":"                        \"${fieldName}\", FieldValidator.COURSE_NAME_FIELD_NAME),"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForCourseId(whitespaceOnlyCourseId));"},{"lineNumber":513,"author":{"gitId":"-"},"content":""},{"lineNumber":514,"author":{"gitId":"-"},"content":"        String tooLongCourseId \u003d StringHelperExtension.generateStringOfLength("},{"lineNumber":515,"author":{"gitId":"-"},"content":"                                                           FieldValidator.COURSE_ID_MAX_LENGTH + 1);"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Course ID (too long) should return appropriate error string\","},{"lineNumber":517,"author":{"gitId":"-"},"content":"                     \"\\\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\" \""},{"lineNumber":518,"author":{"gitId":"-"},"content":"                         + \"is not acceptable to TEAMMATES as a/an course ID because it is too long. \""},{"lineNumber":519,"author":{"gitId":"-"},"content":"                         + \"A course ID can contain letters, numbers, fullstops, hyphens, underscores, \""},{"lineNumber":520,"author":{"gitId":"-"},"content":"                         + \"and dollar signs. It cannot be longer than 64 characters, \""},{"lineNumber":521,"author":{"gitId":"-"},"content":"                         + \"cannot be empty and cannot contain spaces.\","},{"lineNumber":522,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForCourseId(tooLongCourseId));"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"        String courseIdWithSpaces \u003d \"my course id with spaces\";"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Course ID (contains spaces) should return appropriate error string\","},{"lineNumber":526,"author":{"gitId":"-"},"content":"                     \"\\\"my course id with spaces\\\" is not acceptable to TEAMMATES as a/an course ID because \""},{"lineNumber":527,"author":{"gitId":"-"},"content":"                         + \"it is not in the correct format. A course ID can contain letters, numbers, \""},{"lineNumber":528,"author":{"gitId":"-"},"content":"                         + \"fullstops, hyphens, underscores, and dollar signs. It cannot be longer than 64 \""},{"lineNumber":529,"author":{"gitId":"-"},"content":"                         + \"characters, cannot be empty and cannot contain spaces.\","},{"lineNumber":530,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForCourseId(courseIdWithSpaces));"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"-"},"content":"        String courseIdWithInvalidChar \u003d \"cour@s*hy#\";"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        assertEquals(\"Invalid Course ID (invalid char) should return appropriate error string\","},{"lineNumber":534,"author":{"gitId":"-"},"content":"                     \"\\\"cour@s*hy#\\\" is not acceptable to TEAMMATES as a/an course ID because it is not in \""},{"lineNumber":535,"author":{"gitId":"-"},"content":"                         + \"the correct format. A course ID can contain letters, numbers, fullstops, \""},{"lineNumber":536,"author":{"gitId":"-"},"content":"                         + \"hyphens, underscores, and dollar signs. It cannot be longer than 64 characters, \""},{"lineNumber":537,"author":{"gitId":"-"},"content":"                         + \"cannot be empty and cannot contain spaces.\","},{"lineNumber":538,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForCourseId(courseIdWithInvalidChar));"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForTimeForSessionStartAndEnd_valid_returnEmptyString() {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        Instant sessionStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(-1);"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        Instant sessionEnd \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(1);"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        assertEquals(\"\", FieldValidator.getInvalidityInfoForTimeForSessionStartAndEnd(sessionStart, sessionEnd));"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForTimeForSessionStartAndEnd_invalid_returnErrorString() {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        Instant sessionStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(1);"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        Instant sessionEnd \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(-1);"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        assertEquals(\"The end time for this feedback session cannot be earlier than the start time.\","},{"lineNumber":553,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForTimeForSessionStartAndEnd(sessionStart, sessionEnd));"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":555,"author":{"gitId":"-"},"content":""},{"lineNumber":556,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForTimeForVisibilityStartAndSessionStart_valid_returnEmptyString() {"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        Instant visibilityStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(-1);"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        Instant sessionStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(1);"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        assertEquals(\"\","},{"lineNumber":561,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForTimeForVisibilityStartAndSessionStart("},{"lineNumber":562,"author":{"gitId":"-"},"content":"                         visibilityStart, sessionStart));"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForTimeForVisibilityStartAndSessionStart_invalid_returnErrorString() {"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        Instant visibilityStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(1);"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        Instant sessionStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(-1);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        assertEquals(\"The start time for this feedback session cannot be earlier than the time when the \""},{"lineNumber":570,"author":{"gitId":"-"},"content":"                         + \"session will be visible.\","},{"lineNumber":571,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForTimeForVisibilityStartAndSessionStart("},{"lineNumber":572,"author":{"gitId":"-"},"content":"                         visibilityStart, sessionStart));"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForTimeForVisibilityStartAndResultsPublish_valid_returnEmptyString() {"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        Instant visibilityStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(-1);"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        Instant resultsPublish \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(1);"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        assertEquals(\"\","},{"lineNumber":580,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForTimeForVisibilityStartAndResultsPublish("},{"lineNumber":581,"author":{"gitId":"-"},"content":"                         visibilityStart, resultsPublish));"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForTimeForVisibilityStartAndResultsPublish_invalid_returnErrorString() {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        Instant visibilityStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(1);"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        Instant resultsPublish \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(-1);"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        assertEquals(\"The time when the results will be visible for this feedback session cannot be \""},{"lineNumber":589,"author":{"gitId":"-"},"content":"                         + \"earlier than the time when the session will be visible.\","},{"lineNumber":590,"author":{"gitId":"-"},"content":"                     FieldValidator.getInvalidityInfoForTimeForVisibilityStartAndResultsPublish("},{"lineNumber":591,"author":{"gitId":"-"},"content":"                         visibilityStart, resultsPublish));"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":593,"author":{"gitId":"-"},"content":""},{"lineNumber":594,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":595,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForTimeForSessionEndAndExtendedDeadlines_valid_returnEmptyString() {"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        Instant sessionEnd \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(-1);"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        Map\u003cString, Instant\u003e extendedDeadlines \u003d new HashMap\u003c\u003e();"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        extendedDeadlines.put(\"participant@email.com\", TimeHelperExtension.getInstantHoursOffsetFromNow(1));"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        assertEquals(\"\","},{"lineNumber":600,"author":{"gitId":"-"},"content":"                FieldValidator.getInvalidityInfoForTimeForSessionEndAndExtendedDeadlines("},{"lineNumber":601,"author":{"gitId":"-"},"content":"                        sessionEnd, extendedDeadlines));"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    public void testGetInvalidityInfoForTimeForSessionEndAndExtendedDeadlines_invalid_returnErrorString() {"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        ______TS(\"extended deadline earlier than the end time\");"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        Instant sessionEnd \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(1);"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        Map\u003cString, Instant\u003e extendedDeadlines \u003d new HashMap\u003c\u003e();"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        extendedDeadlines.put(\"participant@email.com\", TimeHelperExtension.getInstantHoursOffsetFromNow(-1));"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        assertEquals(\"The extended deadlines for this feedback session cannot be earlier than or at the same time as \""},{"lineNumber":611,"author":{"gitId":"-"},"content":"                        + \"the end time.\","},{"lineNumber":612,"author":{"gitId":"-"},"content":"                FieldValidator.getInvalidityInfoForTimeForSessionEndAndExtendedDeadlines("},{"lineNumber":613,"author":{"gitId":"-"},"content":"                        sessionEnd, extendedDeadlines));"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"        ______TS(\"extended deadline at the same time as the end time\");"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        extendedDeadlines.put(\"participant@email.com\", sessionEnd);"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        assertEquals(\"The extended deadlines for this feedback session cannot be earlier than or at the same time as \""},{"lineNumber":618,"author":{"gitId":"-"},"content":"                        + \"the end time.\","},{"lineNumber":619,"author":{"gitId":"-"},"content":"                FieldValidator.getInvalidityInfoForTimeForSessionEndAndExtendedDeadlines("},{"lineNumber":620,"author":{"gitId":"-"},"content":"                        sessionEnd, extendedDeadlines));"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":624,"author":{"gitId":"ziqing26"},"content":"    public void testGetInvalidityInfoForTimeForNotificationStartAndEnd_valid_returnEmptyString() {"},{"lineNumber":625,"author":{"gitId":"ziqing26"},"content":"        Instant notificationStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(-1);"},{"lineNumber":626,"author":{"gitId":"ziqing26"},"content":"        Instant notificationEnd \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(1);"},{"lineNumber":627,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":628,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"\","},{"lineNumber":629,"author":{"gitId":"ziqing26"},"content":"                FieldValidator.getInvalidityInfoForTimeForNotificationStartAndEnd("},{"lineNumber":630,"author":{"gitId":"ziqing26"},"content":"                        notificationStart, notificationEnd));"},{"lineNumber":631,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":632,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":633,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":634,"author":{"gitId":"ziqing26"},"content":"    public void testGetInvalidityInfoForTimeForNotificationStartAndEnd_inValid_returnErrorString() {"},{"lineNumber":635,"author":{"gitId":"ziqing26"},"content":"        Instant notificationStart \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(1);"},{"lineNumber":636,"author":{"gitId":"ziqing26"},"content":"        Instant notificationEnd \u003d TimeHelperExtension.getInstantHoursOffsetFromNow(-1);"},{"lineNumber":637,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":638,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"The time when the notification will expire for this notification cannot be earlier \""},{"lineNumber":639,"author":{"gitId":"ziqing26"},"content":"                        + \"than the time when the notification will be visible.\","},{"lineNumber":640,"author":{"gitId":"ziqing26"},"content":"                FieldValidator.getInvalidityInfoForTimeForNotificationStartAndEnd("},{"lineNumber":641,"author":{"gitId":"ziqing26"},"content":"                        notificationStart, notificationEnd));"},{"lineNumber":642,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":643,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":644,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":645,"author":{"gitId":"ziqing26"},"content":"    public void testGetInvalidityInfoForNotificationTitle_valid_returnEmptyString() {"},{"lineNumber":646,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"\", FieldValidator.getInvalidityInfoForNotificationTitle(\"valid title\"));"},{"lineNumber":647,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":648,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":649,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":650,"author":{"gitId":"ziqing26"},"content":"    public void testGetInvalidityInfoForNotificationTitle_inValid_returnErrorString() {"},{"lineNumber":651,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"Empty notification title\");"},{"lineNumber":652,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"The field \u0027notification title\u0027 is empty.\","},{"lineNumber":653,"author":{"gitId":"ziqing26"},"content":"                FieldValidator.getInvalidityInfoForNotificationTitle(\"\"));"},{"lineNumber":654,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":655,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"Notification title exceeds maximum length\");"},{"lineNumber":656,"author":{"gitId":"ziqing26"},"content":"        String invalidNotificationTitle \u003d StringHelperExtension.generateStringOfLength("},{"lineNumber":657,"author":{"gitId":"ziqing26"},"content":"                FieldValidator.NOTIFICATION_TITLE_MAX_LENGTH + 1);"},{"lineNumber":658,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"\\\"\" + invalidNotificationTitle + \"\\\" is not acceptable to TEAMMATES as a/an \""},{"lineNumber":659,"author":{"gitId":"ziqing26"},"content":"                        + \"notification title because it is too long. \""},{"lineNumber":660,"author":{"gitId":"ziqing26"},"content":"                        + \"The value of a/an notification title should be no longer than \""},{"lineNumber":661,"author":{"gitId":"ziqing26"},"content":"                        + FieldValidator.NOTIFICATION_TITLE_MAX_LENGTH"},{"lineNumber":662,"author":{"gitId":"ziqing26"},"content":"                        + \" characters. It should not be empty.\","},{"lineNumber":663,"author":{"gitId":"ziqing26"},"content":"                FieldValidator.getInvalidityInfoForNotificationTitle(invalidNotificationTitle));"},{"lineNumber":664,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":665,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":666,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":667,"author":{"gitId":"ziqing26"},"content":"    public void testGetInvalidityInfoForNotificationBody_valid_returnEmptyString() {"},{"lineNumber":668,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"\", FieldValidator.getInvalidityInfoForNotificationBody(\"valid body\"));"},{"lineNumber":669,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":670,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":671,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":672,"author":{"gitId":"ziqing26"},"content":"    public void testGetInvalidityInfoForNotificationBody_inValid_returnErrorString() {"},{"lineNumber":673,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"The field \u0027notification message\u0027 is empty.\","},{"lineNumber":674,"author":{"gitId":"ziqing26"},"content":"                FieldValidator.getInvalidityInfoForNotificationBody(\"\"));"},{"lineNumber":675,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":676,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":677,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":678,"author":{"gitId":"fsgmhoward"},"content":"    public void testGetInvalidityInfoForNotificationStyle_valid_returnEmptyString() {"},{"lineNumber":679,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(\"\", FieldValidator.getInvalidityInfoForNotificationStyle(\"SUCCESS\"));"},{"lineNumber":680,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":681,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":682,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":683,"author":{"gitId":"fsgmhoward"},"content":"    public void testGetInvalidityInfoForNotificationStyle_inValid_returnErrorString() {"},{"lineNumber":684,"author":{"gitId":"fsgmhoward"},"content":"        String invalidStyle \u003d \"invalid style\";"},{"lineNumber":685,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(\"\\\"\" + invalidStyle + \"\\\" is not an accepted notification style to TEAMMATES. \","},{"lineNumber":686,"author":{"gitId":"fsgmhoward"},"content":"                FieldValidator.getInvalidityInfoForNotificationStyle(invalidStyle));"},{"lineNumber":687,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":688,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":689,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":690,"author":{"gitId":"ziqing26"},"content":"    public void testGetInvalidityInfoForNotificationTargetUser_valid_returnEmptyString() {"},{"lineNumber":691,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"\", FieldValidator.getInvalidityInfoForNotificationTargetUser(\"GENERAL\"));"},{"lineNumber":692,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":693,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":694,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":695,"author":{"gitId":"ziqing26"},"content":"    public void testGetInvalidityInfoForNotificationTargetUser_inValid_returnErrorString() {"},{"lineNumber":696,"author":{"gitId":"ziqing26"},"content":"        String invalidUser \u003d \"invalid user\";"},{"lineNumber":697,"author":{"gitId":"ziqing26"},"content":"        assertEquals(\"\\\"\" + invalidUser + \"\\\" is not an accepted notification target user to TEAMMATES. \","},{"lineNumber":698,"author":{"gitId":"ziqing26"},"content":"                FieldValidator.getInvalidityInfoForNotificationTargetUser(invalidUser));"},{"lineNumber":699,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":700,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":701,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":702,"author":{"gitId":"-"},"content":"    public void testRegexName() {"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        ______TS(\"success: typical name\");"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        String name \u003d \"Benny Charlés\";"},{"lineNumber":705,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(name, FieldValidator.REGEX_NAME));"},{"lineNumber":706,"author":{"gitId":"-"},"content":""},{"lineNumber":707,"author":{"gitId":"-"},"content":"        ______TS(\"success: name begins with accented characters\");"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        name \u003d \"Ýàn-B. s/o O\u0027br, \u00262(~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\";"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(name, FieldValidator.REGEX_NAME));"},{"lineNumber":710,"author":{"gitId":"-"},"content":""},{"lineNumber":711,"author":{"gitId":"-"},"content":"        ______TS(\"failure: name begins with non-alphanumeric character\");"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        name \u003d \"~Amy-Ben. s/o O\u0027br, \u00262(~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\";"},{"lineNumber":713,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(name, FieldValidator.REGEX_NAME));"},{"lineNumber":714,"author":{"gitId":"-"},"content":""},{"lineNumber":715,"author":{"gitId":"-"},"content":"        ______TS(\"failure: name contains invalid character\");"},{"lineNumber":716,"author":{"gitId":"-"},"content":"        name \u003d \"Amy-B. s/o O\u0027br, %|\u00262(~!@#$^*+_\u003d{}[]\\\\:;\\\"\u003c\u003e?)\";"},{"lineNumber":717,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(name, FieldValidator.REGEX_NAME));"},{"lineNumber":718,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":719,"author":{"gitId":"-"},"content":""},{"lineNumber":720,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":721,"author":{"gitId":"-"},"content":"    public void testRegexEmail() {"},{"lineNumber":722,"author":{"gitId":"-"},"content":"        ______TS(\"success: typical email\");"},{"lineNumber":723,"author":{"gitId":"-"},"content":"        String email \u003d \"john@email.com\";"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(email, FieldValidator.REGEX_EMAIL));"},{"lineNumber":725,"author":{"gitId":"-"},"content":""},{"lineNumber":726,"author":{"gitId":"-"},"content":"        ______TS(\"failure: no top level domain\");"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        email \u003d \"a@e\";"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(email, FieldValidator.REGEX_EMAIL));"},{"lineNumber":729,"author":{"gitId":"-"},"content":""},{"lineNumber":730,"author":{"gitId":"-"},"content":"        ______TS(\"success: minimum allowed email format\");"},{"lineNumber":731,"author":{"gitId":"-"},"content":"        email \u003d \"a@e.c\";"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(email, FieldValidator.REGEX_EMAIL));"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"        ______TS(\"success: all allowed special characters\");"},{"lineNumber":735,"author":{"gitId":"-"},"content":"        email \u003d \"a!#$%\u0026\u0027*/\u003d?^_`{}~@e.c\";"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(email, FieldValidator.REGEX_EMAIL));"},{"lineNumber":737,"author":{"gitId":"-"},"content":""},{"lineNumber":738,"author":{"gitId":"-"},"content":"        ______TS(\"failure: invalid starting character\");"},{"lineNumber":739,"author":{"gitId":"-"},"content":"        email \u003d \"$john@email.com\";"},{"lineNumber":740,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(email, FieldValidator.REGEX_EMAIL));"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"        ______TS(\"failure: two consecutive dots in local part\");"},{"lineNumber":743,"author":{"gitId":"-"},"content":"        email \u003d \"john..dot@email.com\";"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(email, FieldValidator.REGEX_EMAIL));"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"-"},"content":"        ______TS(\"failure: invalid characters in domain part\");"},{"lineNumber":747,"author":{"gitId":"-"},"content":"        email \u003d \"john@e\u0026email.com\";"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(email, FieldValidator.REGEX_EMAIL));"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"        ______TS(\"failure: invalid ending character in domain part\");"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        email \u003d \"john@email.com3\";"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(email, FieldValidator.REGEX_EMAIL));"},{"lineNumber":753,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":754,"author":{"gitId":"-"},"content":""},{"lineNumber":755,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":756,"author":{"gitId":"-"},"content":"    public void testRegexCourseId() {"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        ______TS(\"success: typical course ID\");"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        String courseId \u003d \"CS101\";"},{"lineNumber":759,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(courseId, FieldValidator.REGEX_COURSE_ID));"},{"lineNumber":760,"author":{"gitId":"-"},"content":""},{"lineNumber":761,"author":{"gitId":"-"},"content":"        ______TS(\"success: course ID with all accepted symbols\");"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        courseId \u003d \"CS101-B.$\";"},{"lineNumber":763,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(courseId, FieldValidator.REGEX_COURSE_ID));"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"        ______TS(\"failure: contains invalid character\");"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        courseId \u003d \"CS101+B\";"},{"lineNumber":767,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(courseId, FieldValidator.REGEX_COURSE_ID));"},{"lineNumber":768,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":769,"author":{"gitId":"-"},"content":""},{"lineNumber":770,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":771,"author":{"gitId":"-"},"content":"    public void testRegexGoogleIdNonEmail() {"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        ______TS(\"success: typical google id\");"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        String googleId \u003d \"teammates.instr\";"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(googleId, FieldValidator.REGEX_GOOGLE_ID_NON_EMAIL));"},{"lineNumber":775,"author":{"gitId":"-"},"content":""},{"lineNumber":776,"author":{"gitId":"-"},"content":"        ______TS(\"success: google id with all accepted characters\");"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        googleId \u003d \"teammates.new_instr-3\";"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        assertTrue(StringHelper.isMatching(googleId, FieldValidator.REGEX_GOOGLE_ID_NON_EMAIL));"},{"lineNumber":779,"author":{"gitId":"-"},"content":""},{"lineNumber":780,"author":{"gitId":"-"},"content":"        ______TS(\"failure: is email\");"},{"lineNumber":781,"author":{"gitId":"-"},"content":"        googleId \u003d \"teammates.instr@email.com\";"},{"lineNumber":782,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(googleId, FieldValidator.REGEX_GOOGLE_ID_NON_EMAIL));"},{"lineNumber":783,"author":{"gitId":"-"},"content":""},{"lineNumber":784,"author":{"gitId":"-"},"content":"        ______TS(\"failure: contains invalid character\");"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        googleId \u003d \"teammates.$instr\";"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        assertFalse(StringHelper.isMatching(googleId, FieldValidator.REGEX_GOOGLE_ID_NON_EMAIL));"},{"lineNumber":787,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ziqing26":72,"fsgmhoward":6,"-":711}},{"path":"src/test/java/teammates/logic/api/EmailSenderTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.json.JSONArray;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.json.JSONObject;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.jsoup.Jsoup;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.mailjet.client.MailjetRequest;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.mailjet.client.resource.Email;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.sendgrid.helpers.mail.Mail;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.sun.jersey.multipart.FormDataMultiPart;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.MailgunService;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.MailjetService;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"import teammates.logic.external.SendgridService;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * SUT: {@link SendgridService},"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *      {@link MailgunService},"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *      {@link MailjetService}."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EmailSenderTest extends BaseLogicTest {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no test data used in this test"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private EmailWrapper getTypicalEmailWrapper() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String senderName \u003d \"Sender Name\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String senderEmail \u003d \"sender@email.com\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String replyTo \u003d \"replyto@email.com\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String recipient \u003d \"recipient@email.com\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String bcc \u003d \"bcc@email.com\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String subject \u003d \"Test subject\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String content \u003d \"\u003cp\u003eThis is a test content\u003c/p\u003e\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EmailWrapper wrapper \u003d new EmailWrapper();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        wrapper.setSenderName(senderName);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        wrapper.setSenderEmail(senderEmail);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        wrapper.setReplyTo(replyTo);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        wrapper.setRecipient(recipient);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        wrapper.setBcc(bcc);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        wrapper.setSubject(subject);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        wrapper.setContent(content);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return wrapper;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void testConvertToSendgrid() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EmailWrapper wrapper \u003d getTypicalEmailWrapper();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Mail email \u003d new SendgridService().parseToEmail(wrapper);"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSenderEmail(), email.getFrom().getEmail());"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSenderName(), email.getFrom().getName());"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getRecipient(), email.personalization.get(0).getTos().get(0).getEmail());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getBcc(), email.personalization.get(0).getBccs().get(0).getEmail());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getReplyTo(), email.getReplyto().getEmail());"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSubject(), email.getSubject());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(\"text/plain\", email.getContent().get(0).getType());"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(Jsoup.parse(wrapper.getContent()).text(), email.getContent().get(0).getValue());"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(\"text/html\", email.getContent().get(1).getType());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getContent(), email.getContent().get(1).getValue());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void testConvertToMailgun() throws Exception {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EmailWrapper wrapper \u003d getTypicalEmailWrapper();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try (FormDataMultiPart formData \u003d new MailgunService().parseToEmail(wrapper)) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getSenderName() + \" \u003c\" + wrapper.getSenderEmail() + \"\u003e\","},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    formData.getField(\"from\").getValue());"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getRecipient(), formData.getField(\"to\").getValue());"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getBcc(), formData.getField(\"bcc\").getValue());"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getReplyTo(), formData.getField(\"h:Reply-To\").getValue());"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getSubject(), formData.getField(\"subject\").getValue());"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            assertEquals(wrapper.getContent(), formData.getField(\"html\").getValue());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void testConvertToMailjet() {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        EmailWrapper wrapper \u003d getTypicalEmailWrapper();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        MailjetRequest request \u003d new MailjetService().parseToEmail(wrapper);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JSONObject email \u003d new JSONObject(request.getBody());"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSenderEmail(), email.get(Email.FROMEMAIL));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSenderName(), email.get(Email.FROMNAME));"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getRecipient(),"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                     ((JSONArray) email.get(Email.RECIPIENTS)).getJSONObject(0).get(\"Email\"));"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getBcc(),"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                     ((JSONArray) email.get(Email.RECIPIENTS)).getJSONObject(1).get(\"Email\"));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getReplyTo(),"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                     ((JSONObject) email.get(Email.HEADERS)).getString(\"Reply-To\"));"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getSubject(), email.get(Email.SUBJECT));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(wrapper.getContent(), email.get(Email.HTMLPART));"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":97}},{"path":"src/test/java/teammates/logic/core/NotificationsLogicTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.HashSet;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import java.util.UUID;"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"import org.testng.annotations.BeforeMethod;"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"import org.testng.annotations.Test;"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"import teammates.storage.api.NotificationsDb;"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":" * SUT: {@link NotificationsLogic}."},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"public class NotificationsLogicTest extends BaseLogicTest {"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"    private NotificationAttributes n;"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"    private final NotificationsDb notifDb \u003d NotificationsDb.inst();"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"    private final NotificationsLogic notifLogic \u003d NotificationsLogic.inst();"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    private final Map\u003cString, NotificationAttributes\u003e typicalNotifications \u003d getTypicalDataBundle().notifications;"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"    protected void prepareTestData() {"},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"        // test data is refreshed before each test case"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"    @BeforeMethod"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"    public void refreshTestData() {"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"        dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"        removeAndRestoreTypicalDataBundle();"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"    public void testAll() throws Exception {"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"        testGetNotification();"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"        testGetAllNotifications();"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"        testGetActiveNotificationsByTargetUser();"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"        testCreateNotification();"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"        testUpdateNotification();"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"        testDeleteNotification();"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"    private void testGetNotification() {"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"        n \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"success: typical case\");"},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes actual \u003d notifLogic.getNotification(n.getNotificationId());"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        assertNotNull(actual);"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"        verifyNotificationEquals(n, actual);"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"                () -\u003e notifLogic.getNotification(null));"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"failure: non-existent notification\");"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"        assertNull(notifLogic.getNotification(\"invalid_notification_id\"));"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"    private void testGetAllNotifications() {"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"success: retrieve all notifications that exist in database\");"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationAttributes\u003e actual \u003d notifLogic.getAllNotifications();"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"        assertNotNull(actual);"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"        typicalNotifications.values().forEach(n -\u003e {"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"            assertTrue(actual.contains(n));"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"            actual.remove(n);"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"    private void testGetActiveNotificationsByTargetUser() {"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"success: valid target user\");"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationAttributes\u003e actual \u003d"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"                notifLogic.getActiveNotificationsByTargetUser(NotificationTargetUser.STUDENT);"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"        assertNotNull(actual);"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"        Set\u003cNotificationAttributes\u003e expected \u003d new HashSet\u003c\u003e();"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"        expected.add(typicalNotifications.get(\"notification1\"));"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"        expected.add(typicalNotifications.get(\"notification2\"));"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"        expected.add(typicalNotifications.get(\"notification4\"));"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"        expected.add(typicalNotifications.get(\"notification6\"));"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"        expected.forEach(n -\u003e {"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"            assertTrue(actual.contains(n));"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"            actual.remove(n);"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"        });"},{"lineNumber":97,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":99,"author":{"gitId":"Nicolascwy"},"content":"    private void testCreateNotification() throws Exception {"},{"lineNumber":100,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"success: typical case\");"},{"lineNumber":101,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"        n \u003d getNewNotificationAttributes();"},{"lineNumber":103,"author":{"gitId":"Nicolascwy"},"content":"        notifLogic.createNotification(n);"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":105,"author":{"gitId":"Nicolascwy"},"content":"        verifyPresentInDatabase(n);"},{"lineNumber":106,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"failure: duplicate notification with the same ID\");"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":"        assertThrows(EntityAlreadyExistsException.class, () -\u003e notifLogic.createNotification(n));"},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"        removeNotificationsFromDb(n);"},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":113,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"failure: Null parameter\");"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":"                () -\u003e notifLogic.createNotification(null));"},{"lineNumber":117,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":118,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"failure: test create with invalid title name\");"},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":120,"author":{"gitId":"ziqing26"},"content":"        n \u003d getNewNotificationAttributes();"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"        n.setTitle(\"\");"},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":"        Exception e \u003d assertThrows(Exception.class, () -\u003e notifLogic.createNotification(n));"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"The field \u0027notification title\u0027 is empty.\", e.getMessage());"},{"lineNumber":124,"author":{"gitId":"Nicolascwy"},"content":"        verifyAbsentInDatabase(n);"},{"lineNumber":125,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":127,"author":{"gitId":"ziqing26"},"content":"    private void testUpdateNotification() throws Exception {"},{"lineNumber":128,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"success: typical case\");"},{"lineNumber":129,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":"        n \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":131,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes differentNotification \u003d typicalNotifications.get(\"notification2\");"},{"lineNumber":132,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":133,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes.UpdateOptions update1 \u003d"},{"lineNumber":134,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":135,"author":{"gitId":"ziqing26"},"content":"                        .withTitle(differentNotification.getTitle())"},{"lineNumber":136,"author":{"gitId":"ziqing26"},"content":"                        .withMessage(differentNotification.getMessage())"},{"lineNumber":137,"author":{"gitId":"ziqing26"},"content":"                        .withStyle(differentNotification.getStyle())"},{"lineNumber":138,"author":{"gitId":"ziqing26"},"content":"                        .withTargetUser(differentNotification.getTargetUser())"},{"lineNumber":139,"author":{"gitId":"ziqing26"},"content":"                        .withStartTime(differentNotification.getStartTime())"},{"lineNumber":140,"author":{"gitId":"ziqing26"},"content":"                        .withEndTime(differentNotification.getEndTime())"},{"lineNumber":141,"author":{"gitId":"ziqing26"},"content":"                        .withShown()"},{"lineNumber":142,"author":{"gitId":"ziqing26"},"content":"                        .build();"},{"lineNumber":143,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":144,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes actual \u003d notifLogic.updateNotification(update1);"},{"lineNumber":145,"author":{"gitId":"ziqing26"},"content":"        assertEquals(differentNotification.getTitle(), actual.getTitle());"},{"lineNumber":146,"author":{"gitId":"ziqing26"},"content":"        assertEquals(differentNotification.getMessage(), actual.getMessage());"},{"lineNumber":147,"author":{"gitId":"ziqing26"},"content":"        assertEquals(differentNotification.getStyle(), actual.getStyle());"},{"lineNumber":148,"author":{"gitId":"ziqing26"},"content":"        assertEquals(differentNotification.getTargetUser(), actual.getTargetUser());"},{"lineNumber":149,"author":{"gitId":"ziqing26"},"content":"        assertEquals(differentNotification.getStartTime(), actual.getStartTime());"},{"lineNumber":150,"author":{"gitId":"ziqing26"},"content":"        assertEquals(differentNotification.getEndTime(), actual.getEndTime());"},{"lineNumber":151,"author":{"gitId":"ziqing26"},"content":"        assertTrue(actual.isShown());"},{"lineNumber":152,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":153,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"failure: invalid update options\");"},{"lineNumber":154,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":155,"author":{"gitId":"ziqing26"},"content":"        n \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":156,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":157,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes.UpdateOptions update2 \u003d"},{"lineNumber":158,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":159,"author":{"gitId":"ziqing26"},"content":"                        .withTitle(\"\")"},{"lineNumber":160,"author":{"gitId":"ziqing26"},"content":"                        .build();"},{"lineNumber":161,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":162,"author":{"gitId":"ziqing26"},"content":"        assertThrows(InvalidParametersException.class,"},{"lineNumber":163,"author":{"gitId":"ziqing26"},"content":"                () -\u003e notifLogic.updateNotification(update2));"},{"lineNumber":164,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":165,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"failure: invalid notification id\");"},{"lineNumber":166,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":167,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes.UpdateOptions update3 \u003d"},{"lineNumber":168,"author":{"gitId":"ziqing26"},"content":"                NotificationAttributes.updateOptionsBuilder(\"invalid-notification-id\")"},{"lineNumber":169,"author":{"gitId":"ziqing26"},"content":"                        .withTitle(\"A valid title\")"},{"lineNumber":170,"author":{"gitId":"ziqing26"},"content":"                        .build();"},{"lineNumber":171,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":172,"author":{"gitId":"ziqing26"},"content":"        assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":173,"author":{"gitId":"ziqing26"},"content":"                () -\u003e notifLogic.updateNotification(update3));"},{"lineNumber":174,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":175,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"failure: null update options\");"},{"lineNumber":176,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":177,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e notifLogic.updateNotification(null));"},{"lineNumber":178,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":180,"author":{"gitId":"ziqing26"},"content":"    private void testDeleteNotification() {"},{"lineNumber":181,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"success: delete corresponding notification\");"},{"lineNumber":182,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":183,"author":{"gitId":"ziqing26"},"content":"        n \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":184,"author":{"gitId":"ziqing26"},"content":"        notifLogic.deleteNotification(n.getNotificationId());"},{"lineNumber":185,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":186,"author":{"gitId":"ziqing26"},"content":"        verifyAbsentInDatabase(n);"},{"lineNumber":187,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":188,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"failure: silent deletion of the same notification twice\");"},{"lineNumber":189,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":190,"author":{"gitId":"ziqing26"},"content":"        notifLogic.deleteNotification(n.getNotificationId());"},{"lineNumber":191,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":192,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"failure: silent deletion of non-existent notification\");"},{"lineNumber":193,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":194,"author":{"gitId":"ziqing26"},"content":"        int expectedLength \u003d notifDb.getAllNotifications().size();"},{"lineNumber":195,"author":{"gitId":"ziqing26"},"content":"        notifLogic.deleteNotification(\"invalid-id\");"},{"lineNumber":196,"author":{"gitId":"ziqing26"},"content":"        int actualLength \u003d notifDb.getAllNotifications().size();"},{"lineNumber":197,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":198,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expectedLength, actualLength);"},{"lineNumber":199,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":200,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":201,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":202,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, () -\u003e notifLogic.deleteNotification(null));"},{"lineNumber":203,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":205,"author":{"gitId":"ziqing26"},"content":"    private NotificationAttributes getNewNotificationAttributes() {"},{"lineNumber":206,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes typical \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":207,"author":{"gitId":"ziqing26"},"content":"        return NotificationAttributes.builder(UUID.randomUUID().toString())"},{"lineNumber":208,"author":{"gitId":"ziqing26"},"content":"                .withTitle(typical.getTitle())"},{"lineNumber":209,"author":{"gitId":"ziqing26"},"content":"                .withMessage(typical.getMessage())"},{"lineNumber":210,"author":{"gitId":"ziqing26"},"content":"                .withStyle(typical.getStyle())"},{"lineNumber":211,"author":{"gitId":"ziqing26"},"content":"                .withTargetUser(typical.getTargetUser())"},{"lineNumber":212,"author":{"gitId":"ziqing26"},"content":"                .withStartTime(typical.getStartTime())"},{"lineNumber":213,"author":{"gitId":"ziqing26"},"content":"                .withEndTime(typical.getEndTime())"},{"lineNumber":214,"author":{"gitId":"Nicolascwy"},"content":"                .build();"},{"lineNumber":215,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":217,"author":{"gitId":"ziqing26"},"content":"    private void removeNotificationsFromDb(NotificationAttributes... notifications) {"},{"lineNumber":218,"author":{"gitId":"ziqing26"},"content":"        for (NotificationAttributes notif : notifications) {"},{"lineNumber":219,"author":{"gitId":"ziqing26"},"content":"            notifDb.deleteNotification(notif.getNotificationId());"},{"lineNumber":220,"author":{"gitId":"ziqing26"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":223,"author":{"gitId":"ziqing26"},"content":"    private void verifyNotificationEquals(NotificationAttributes expected, NotificationAttributes actual) {"},{"lineNumber":224,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getNotificationId(), actual.getNotificationId());"},{"lineNumber":225,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getMessage(), actual.getMessage());"},{"lineNumber":226,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getStyle(), actual.getStyle());"},{"lineNumber":227,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getTargetUser(), actual.getTargetUser());"},{"lineNumber":228,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getTitle(), actual.getTitle());"},{"lineNumber":229,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getMessage(), actual.getMessage());"},{"lineNumber":230,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getStartTime(), actual.getStartTime());"},{"lineNumber":231,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getEndTime(), actual.getEndTime());"},{"lineNumber":232,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"ziqing26":166,"Nicolascwy":67}},{"path":"src/test/java/teammates/logic/external/GoogleRecaptchaServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.apache.http.client.ClientProtocolException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.apache.http.client.HttpResponseException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.http.conn.ConnectTimeoutException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * SUT: {@link GoogleRecaptchaService}."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GoogleRecaptchaServiceTest extends BaseTestCase {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tests the overloaded {@link GoogleRecaptchaService#isVerificationSuccessful(String)} method."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void testIsVerificationSuccessful() {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ______TS(\"null or empty CAPTCHA response\");"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(null));"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"\"));"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ______TS(\"empty CAPTCHA secret key\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(null).isVerificationSuccessful(\"empty secret key\"));"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"\").isVerificationSuccessful(\"empty secret key\"));"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ______TS(\"Successful verification\");"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Use RecaptchaVerifierStub to mimic success response"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"success\"));"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ______TS(\"reCAPTCHA error codes that can occur during the API request execution\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Use RecaptchaVerifierStub to mimic error codes"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"missing recaptcha params\"));"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"invalid recaptcha secret key\"));"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"invalid recaptcha response\"));"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"invalid recaptcha request\"));"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ______TS(\"Exceptions that can occur during the API request execution\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Use RecaptchaVerifierStub to mimic runtime exceptions"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"null response\"));"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"invalid uri\"));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"http protocol error\"));"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"i/o exception\"));"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"timeout exception\"));"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(new GoogleRecaptchaServiceStub(\"testKey\").isVerificationSuccessful(\"non 2xx http response\"));"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * A subclass to mock responses and exceptions that could result in"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@link GoogleRecaptchaService#getApiResponse(String, String)}."},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Success response is also mocked to decouple from the Google server for testing purposes. This way, tests are not"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * affected by potential issues in the Google server (e.g. server down)."},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://developers.google.com/recaptcha/docs/verify#error-code-reference\"\u003ereCAPTCHA API error codes\u003c/a\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static class GoogleRecaptchaServiceStub extends GoogleRecaptchaService {"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        private GoogleRecaptchaServiceStub(String secretKey) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            super(secretKey);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        @SuppressWarnings(\"PMD.AvoidThrowingNullPointerException\") // deliberately done for testing"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        protected String getApiResponse(String captchaResponse, String secretKey) throws URISyntaxException, IOException {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            switch (captchaResponse) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            case \"success\":"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                return \"{ success: true }\";"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"            case \"missing recaptcha params\":"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                return \"{ success: false, error-codes: [ \u0027missing-input-response\u0027, \u0027missing-input-secret\u0027 ] }\";"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"            case \"invalid recaptcha secret key\":"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                return \"{ success: false, error-codes: [ \u0027invalid-input-secret\u0027 ] }\";"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"            case \"invalid recaptcha response\":"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                return \"{ success: false, error-codes: [ \u0027invalid-input-response\u0027 ] }\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"            case \"invalid recaptcha request\":"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                return \"{ success: false, error-codes: [ \u0027bad-request\u0027 ] }\";"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"            case \"null response\":"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                throw new NullPointerException();"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"            case \"invalid uri\":"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                throw new URISyntaxException(\"Invalid URI\", \"testing with invalid uri exception\");"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"            case \"http protocol error\":"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                throw new ClientProtocolException();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"            case \"i/o exception\":"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                throw new IOException();"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"            case \"timeout exception\":"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                throw new ConnectTimeoutException();"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"            case \"non 2xx http response\":"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                throw new HttpResponseException(500, \"testing with http failure status code\");"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                return \"{ success: false }\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":1,"-":107}},{"path":"src/test/java/teammates/logic/external/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":" * Contains test cases for {@link teammates.logic.external} package."},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"package teammates.logic.external;"}],"authorContributionMap":{"fsgmhoward":4}},{"path":"src/test/java/teammates/storage/api/FeedbackSessionsDbTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static teammates.common.util.FieldValidator.SESSION_END_TIME_FIELD_NAME;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import static teammates.common.util.FieldValidator.SESSION_NAME;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static teammates.common.util.FieldValidator.SESSION_START_TIME_FIELD_NAME;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static teammates.common.util.FieldValidator.TIME_BEFORE_ERROR_MESSAGE;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterMethod;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeMethod;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.AttributesDeletionQuery;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelperExtension;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCaseWithLocalDatabaseAccess;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.test.ThreadHelper;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * SUT: {@link FeedbackSessionsDb}."},{"lineNumber":33,"author":{"gitId":"-"},"content":" */"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class FeedbackSessionsDbTest extends BaseTestCaseWithLocalDatabaseAccess {"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final FeedbackSessionsDb fsDb \u003d FeedbackSessionsDb.inst();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private DataBundle dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @BeforeMethod"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void addSessionsToDb() throws Exception {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e keys \u003d dataBundle.feedbackSessions.keySet();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        for (String i : keys) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            fsDb.createEntity(dataBundle.feedbackSessions.get(i));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @AfterMethod"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void deleteSessionsFromDb() {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e keys \u003d dataBundle.feedbackSessions.keySet();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (String i : keys) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes sessionToDelete \u003d dataBundle.feedbackSessions.get(i);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            fsDb.deleteFeedbackSession(sessionToDelete.getFeedbackSessionName(), sessionToDelete.getCourseId());"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes sessionToDelete \u003d getNewFeedbackSession();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSession(sessionToDelete.getFeedbackSessionName(), sessionToDelete.getCourseId());"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void testGetAllOngoingSessions_typicalCase_shouldQuerySuccessfullyWithoutDuplication() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Instant rangeStart \u003d Instant.parse(\"2000-12-03T10:15:30.00Z\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Instant rangeEnd \u003d Instant.parse(\"2050-04-30T21:59:00Z\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e actualAttributesList \u003d fsDb.getAllOngoingSessions(rangeStart, rangeEnd);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(\"should not return more than 14 sessions as there are only 14 distinct sessions in the range\","},{"lineNumber":64,"author":{"gitId":"-"},"content":"                14, actualAttributesList.size());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackSession() throws Exception {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes fsa \u003d getNewFeedbackSession();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fsDb.createEntity(fsa);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fsa \u003d fsDb.getFeedbackSession(fsa.getCourseId(), fsa.getFeedbackSessionName());"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertNotNull(fsa);"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ______TS(\"non-existent course ID\");"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSession(fsa.getFeedbackSessionName(), \"not_exist\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getFeedbackSession(fsa.getCourseId(), fsa.getFeedbackSessionName()));"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ______TS(\"non-existent session name\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSession(\"not_exist\", fsa.getCourseId());"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getFeedbackSession(fsa.getCourseId(), fsa.getFeedbackSessionName()));"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ______TS(\"non-existent course ID and session name\");"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSession(\"not_exist\", \"not_exist\");"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getFeedbackSession(fsa.getCourseId(), fsa.getFeedbackSessionName()));"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSession(fsa.getFeedbackSessionName(), fsa.getCourseId());"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertNull(fsDb.getFeedbackSession(fsa.getCourseId(), fsa.getFeedbackSessionName()));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackSessions_byCourseId() throws Exception {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes fsa \u003d getNewFeedbackSession();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fsDb.createEntity(fsa);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fsa \u003d fsDb.getFeedbackSession(fsa.getCourseId(), fsa.getFeedbackSessionName());"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertNotNull(fsa);"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes anotherFas \u003d getNewFeedbackSession();"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        anotherFas.setCourseId(\"courseId\");"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        fsDb.createEntity(anotherFas);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        anotherFas \u003d fsDb.getFeedbackSession(anotherFas.getCourseId(), anotherFas.getFeedbackSessionName());"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertNotNull(anotherFas);"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ______TS(\"non-existent course ID\");"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSessions("},{"lineNumber":115,"author":{"gitId":"-"},"content":"                AttributesDeletionQuery.builder()"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        .withCourseId(\"non_exist\")"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getFeedbackSession(fsa.getCourseId(), fsa.getFeedbackSessionName()));"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getFeedbackSession(anotherFas.getCourseId(), anotherFas.getFeedbackSessionName()));"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSessions("},{"lineNumber":125,"author":{"gitId":"-"},"content":"                AttributesDeletionQuery.builder()"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                        .withCourseId(fsa.getCourseId())"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertNull(fsDb.getFeedbackSession(fsa.getCourseId(), fsa.getFeedbackSessionName()));"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getFeedbackSession(anotherFas.getCourseId(), anotherFas.getFeedbackSessionName()));"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSessions("},{"lineNumber":133,"author":{"gitId":"-"},"content":"                AttributesDeletionQuery.builder()"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                        .withCourseId(anotherFas.getCourseId())"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertNull(fsDb.getFeedbackSession(fsa.getCourseId(), fsa.getFeedbackSessionName()));"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertNull(fsDb.getFeedbackSession(anotherFas.getCourseId(), anotherFas.getFeedbackSessionName()));"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void testCreateDeleteFeedbackSession()"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throws Exception {"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes fsa \u003d getNewFeedbackSession();"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        fsDb.createEntity(fsa);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(fsa);"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        ______TS(\"duplicate\");"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EntityAlreadyExistsException eaee \u003d assertThrows(EntityAlreadyExistsException.class, () -\u003e fsDb.createEntity(fsa));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals("},{"lineNumber":154,"author":{"gitId":"-"},"content":"                String.format(FeedbackSessionsDb.ERROR_CREATE_ENTITY_ALREADY_EXISTS, fsa.toString()), eaee.getMessage());"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSession(fsa.getFeedbackSessionName(), fsa.getCourseId());"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        verifyAbsentInDatabase(fsa);"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ______TS(\"null params\");"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e fsDb.createEntity(null));"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"        ______TS(\"invalid params\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // wait for very briefly so that the start timestamp is guaranteed to change"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(5);"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        fsa.setStartTime(Instant.now());"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class, () -\u003e fsDb.createEntity(fsa));"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        AssertHelper.assertContains(\"start time\", ipe.getLocalizedMessage());"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void testGetSoftDeletedFeedbackSession_typicalCase_shouldGetDeletedSession() {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getSoftDeletedFeedbackSession(\"idOfTypicalCourse4\","},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \"First feedback session\"));"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void testGetSoftDeletedFeedbackSession_sessionIsNotDeleted_shouldReturnNull() {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getFeedbackSession(\"idOfTypicalCourse2\", \"Instructor feedback session\"));"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertNull(fsDb.getSoftDeletedFeedbackSession(\"idOfTypicalCourse2\", \"Instructor feedback session\"));"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void testAllGetFeedbackSessions() {"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        testGetFeedbackSessions();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        testGetFeedbackSessionsForCourse();"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        testGetSoftDeletedFeedbackSessionsForCourse();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void testGetFeedbackSessions() {"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes expected \u003d"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                dataBundle.feedbackSessions.get(\"session1InCourse2\");"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes actual \u003d"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                fsDb.getFeedbackSession(\"idOfTypicalCourse2\", \"Instructor feedback session\");"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertEquals(expected.toString(), actual.toString());"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ______TS(\"non-existant session\");"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertNull(fsDb.getFeedbackSession(\"non-course\", \"Non-existant feedback session\"));"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        ______TS(\"soft-deleted session\");"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getSoftDeletedFeedbackSession(\"idOfTypicalCourse4\", \"First feedback session\"));"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertNull(fsDb.getFeedbackSession(\"idOfTypicalCourse4\", \"First feedback session\"));"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"        ______TS(\"null fsName\");"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                () -\u003e fsDb.getFeedbackSession(\"idOfTypicalCourse1\", null));"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        ______TS(\"null courseId\");"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                () -\u003e fsDb.getFeedbackSession(null, \"First feedback session\"));"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private void testGetFeedbackSessionsForCourse() {"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e sessions \u003d fsDb.getFeedbackSessionsForCourse(\"idOfTypicalCourse1\");"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        String expected \u003d"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                dataBundle.feedbackSessions.get(\"session1InCourse1\").toString() + System.lineSeparator()"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                + dataBundle.feedbackSessions.get(\"session2InCourse1\").toString() + System.lineSeparator()"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                + dataBundle.feedbackSessions.get(\"empty.session\").toString() + System.lineSeparator()"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                + dataBundle.feedbackSessions.get(\"awaiting.session\").toString() + System.lineSeparator()"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                + dataBundle.feedbackSessions.get(\"closedSession\").toString() + System.lineSeparator()"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                + dataBundle.feedbackSessions.get(\"gracePeriodSession\").toString() + System.lineSeparator();"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes session : sessions) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            AssertHelper.assertContains(session.toString(), expected);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertEquals(6, sessions.size());"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        ______TS(\"null params\");"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e fsDb.getFeedbackSessionsForCourse(null));"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"        ______TS(\"non-existant course\");"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertTrue(fsDb.getFeedbackSessionsForCourse(\"non-existant course\").isEmpty());"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"        ______TS(\"no sessions in course\");"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertTrue(fsDb.getFeedbackSessionsForCourse(\"idOfCourseNoEvals\").isEmpty());"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"    private void testGetSoftDeletedFeedbackSessionsForCourse() {"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e softDeletedSessions \u003d fsDb"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                .getSoftDeletedFeedbackSessionsForCourse(\"idOfTypicalCourse3\");"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        String expected \u003d"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                dataBundle.feedbackSessions.get(\"session2InCourse3\").toString() + System.lineSeparator();"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes session : softDeletedSessions) {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            AssertHelper.assertContains(session.toString(), expected);"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertEquals(1, softDeletedSessions.size());"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"        ______TS(\"null params\");"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e fsDb.getSoftDeletedFeedbackSessionsForCourse(null));"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"        ______TS(\"non-existant course\");"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertTrue(fsDb.getSoftDeletedFeedbackSessionsForCourse(\"non-existant course\").isEmpty());"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        ______TS(\"no sessions in course\");"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"        assertTrue(fsDb.getSoftDeletedFeedbackSessionsForCourse(\"idOfCourseNoEvals\").isEmpty());"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void testSoftDeleteFeedbackSession() throws Exception {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes fs \u003d getNewFeedbackSession();"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        fsDb.createEntity(fs);"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"        ______TS(\"Success: soft delete an existing feedback session\");"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        fsDb.softDeleteFeedbackSession(fs.getFeedbackSessionName(), fs.getCourseId());"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertNull(fsDb.getFeedbackSession(fs.getCourseId(), fs.getFeedbackSessionName()));"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getSoftDeletedFeedbackSession(fs.getCourseId(),"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                fs.getFeedbackSessionName()));"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"        ______TS(\"Success: restore soft deleted course\");"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        fsDb.restoreDeletedFeedbackSession(fs.getFeedbackSessionName(), fs.getCourseId());"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"        assertNull(fsDb.getSoftDeletedFeedbackSession(fs.getCourseId(),"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                fs.getFeedbackSessionName()));"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        assertNotNull(fsDb.getFeedbackSession(fs.getCourseId(), fs.getFeedbackSessionName()));"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        assertFalse(fsDb.getFeedbackSession(fs.getCourseId(), fs.getFeedbackSessionName()).isSessionDeleted());"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"        ______TS(\"null parameter\");"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e fsDb.softDeleteFeedbackSession(null, null));"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    public void testGetFeedbackSessionsPossiblyNeedingOpeningSoonEmail() throws Exception {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingOpeningSoonEmail();"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertEquals(1, fsaList.size());"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes fsa : fsaList) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSentOpeningSoonEmail());"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSessionDeleted());"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"        ______TS(\"soft-deleted session should not appear\");"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"        // soft delete a feedback session now"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes feedbackSession \u003d fsaList.get(0);"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        fsDb.softDeleteFeedbackSession(feedbackSession.getFeedbackSessionName(), feedbackSession.getCourseId());"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"        fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingOpeningSoonEmail();"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assertEquals(0, fsaList.size());"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public void testGetFeedbackSessionsPossiblyNeedingOpenEmail() throws Exception {"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingOpenEmail();"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"        assertEquals(1, fsaList.size());"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes fsa : fsaList) {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSentOpenEmail());"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSessionDeleted());"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"        ______TS(\"soft-deleted session should not appear\");"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        // soft delete a feedback session now"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes feedbackSession \u003d fsaList.get(0);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        fsDb.softDeleteFeedbackSession(feedbackSession.getFeedbackSessionName(), feedbackSession.getCourseId());"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"        fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingOpenEmail();"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        assertEquals(0, fsaList.size());"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":356,"author":{"gitId":"-"},"content":""},{"lineNumber":357,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    public void testGetFeedbackSessionsPossiblyNeedingClosingEmail() throws Exception {"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingClosingEmail();"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"        assertEquals(9, fsaList.size());"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes fsa : fsaList) {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSentClosingEmail());"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            assertTrue(fsa.isClosingEmailEnabled());"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSessionDeleted());"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"        ______TS(\"soft-deleted session should not appear\");"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        // soft delete a feedback session now"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes feedbackSession \u003d fsaList.get(0);"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        fsDb.softDeleteFeedbackSession(feedbackSession.getFeedbackSessionName(), feedbackSession.getCourseId());"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"        fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingClosingEmail();"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        assertEquals(8, fsaList.size());"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    public void testGetFeedbackSessionsPossiblyNeedingClosedEmail() throws Exception {"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingClosedEmail();"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"        assertEquals(9, fsaList.size());"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes fsa : fsaList) {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSentClosedEmail());"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            assertTrue(fsa.isClosingEmailEnabled());"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSessionDeleted());"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        ______TS(\"soft-deleted session should not appear\");"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"        // soft delete a feedback session now"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes feedbackSession \u003d fsaList.get(0);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        fsDb.softDeleteFeedbackSession(feedbackSession.getFeedbackSessionName(), feedbackSession.getCourseId());"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"        fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingClosedEmail();"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        assertEquals(8, fsaList.size());"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public void testGetFeedbackSessionsPossiblyNeedingPublishedEmail() throws Exception {"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingPublishedEmail();"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"        assertEquals(8, fsaList.size());"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes fsa : fsaList) {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSentPublishedEmail());"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            assertTrue(fsa.isPublishedEmailEnabled());"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            assertFalse(fsa.isSessionDeleted());"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"        ______TS(\"soft-deleted session should not appear\");"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"        // soft delete a feedback session now"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes feedbackSession \u003d fsaList.get(0);"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        fsDb.softDeleteFeedbackSession(feedbackSession.getFeedbackSessionName(), feedbackSession.getCourseId());"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"        fsaList \u003d fsDb.getFeedbackSessionsPossiblyNeedingPublishedEmail();"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        assertEquals(7, fsaList.size());"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    public void testUpdateFeedbackSession_noChangeToSession_shouldNotIssueSaveRequest() throws Exception {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes fs \u003d getNewFeedbackSession();"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        fs \u003d fsDb.putEntity(fs);"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":435,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes.updateOptionsBuilder(fs.getFeedbackSessionName(), fs.getCourseId())"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"        assertEquals(JsonUtils.toJson(fs), JsonUtils.toJson(updatedFs));"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"        // please verify the log message manually to ensure that saving request is not issued"},{"lineNumber":441,"author":{"gitId":"-"},"content":""},{"lineNumber":442,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":443,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes.updateOptionsBuilder(fs.getFeedbackSessionName(), fs.getCourseId())"},{"lineNumber":444,"author":{"gitId":"-"},"content":"                        .withInstructions(fs.getInstructions())"},{"lineNumber":445,"author":{"gitId":"-"},"content":"                        .withStartTime(fs.getStartTime())"},{"lineNumber":446,"author":{"gitId":"-"},"content":"                        .withEndTime(fs.getEndTime())"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                        .withSessionVisibleFromTime(fs.getSessionVisibleFromTime())"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                        .withResultsVisibleFromTime(fs.getResultsVisibleFromTime())"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                        .withTimeZone(fs.getTimeZone())"},{"lineNumber":450,"author":{"gitId":"-"},"content":"                        .withGracePeriod(Duration.ofMinutes(fs.getGracePeriodMinutes()))"},{"lineNumber":451,"author":{"gitId":"-"},"content":"                        .withSentOpenEmail(fs.isSentOpenEmail())"},{"lineNumber":452,"author":{"gitId":"-"},"content":"                        .withSentClosingEmail(fs.isSentClosingEmail())"},{"lineNumber":453,"author":{"gitId":"-"},"content":"                        .withSentClosedEmail(fs.isSentClosedEmail())"},{"lineNumber":454,"author":{"gitId":"-"},"content":"                        .withSentPublishedEmail(fs.isSentPublishedEmail())"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                        .withIsClosingEmailEnabled(fs.isClosingEmailEnabled())"},{"lineNumber":456,"author":{"gitId":"-"},"content":"                        .withIsPublishedEmailEnabled(fs.isPublishedEmailEnabled())"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                        .withStudentDeadlines(fs.getStudentDeadlines())"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                        .withInstructorDeadlines(fs.getInstructorDeadlines())"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"        assertEquals(JsonUtils.toJson(fs), JsonUtils.toJson(updatedFs));"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"        // please verify the log message manually to ensure that saving request is not issued"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":465,"author":{"gitId":"-"},"content":""},{"lineNumber":466,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    public void testUpdateFeedbackSession() throws Exception {"},{"lineNumber":468,"author":{"gitId":"-"},"content":""},{"lineNumber":469,"author":{"gitId":"-"},"content":"        ______TS(\"null params\");"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e fsDb.updateFeedbackSession(null));"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"        ______TS(\"invalid feedback session attributes\");"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes invalidFs \u003d getNewFeedbackSession();"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSession(invalidFs.getFeedbackSessionName(), invalidFs.getCourseId());"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        fsDb.createEntity(invalidFs);"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        Instant afterEndTime \u003d invalidFs.getEndTime().plus(Duration.ofDays(30));"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        invalidFs.setStartTime(afterEndTime);"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        invalidFs.setResultsVisibleFromTime(afterEndTime);"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"                () -\u003e fsDb.updateFeedbackSession("},{"lineNumber":481,"author":{"gitId":"-"},"content":"                        FeedbackSessionAttributes"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                                .updateOptionsBuilder(invalidFs.getFeedbackSessionName(), invalidFs.getCourseId())"},{"lineNumber":483,"author":{"gitId":"-"},"content":"                                .withStartTime(invalidFs.getStartTime())"},{"lineNumber":484,"author":{"gitId":"-"},"content":"                                .withResultsVisibleFromTime(invalidFs.getResultsVisibleFromTime())"},{"lineNumber":485,"author":{"gitId":"-"},"content":"                                .build()));"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        assertEquals("},{"lineNumber":487,"author":{"gitId":"fsgmhoward"},"content":"                String.format(TIME_BEFORE_ERROR_MESSAGE, SESSION_END_TIME_FIELD_NAME, SESSION_NAME,"},{"lineNumber":488,"author":{"gitId":"fsgmhoward"},"content":"                        SESSION_START_TIME_FIELD_NAME),"},{"lineNumber":489,"author":{"gitId":"-"},"content":"                ipe.getLocalizedMessage());"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session does not exist\");"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes nonexistantFs \u003d getNewFeedbackSession();"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        nonexistantFs.setFeedbackSessionName(\"non existant fs\");"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        nonexistantFs.setCourseId(\"non.existant.course\");"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":496,"author":{"gitId":"-"},"content":"                () -\u003e fsDb.updateFeedbackSession("},{"lineNumber":497,"author":{"gitId":"-"},"content":"                        FeedbackSessionAttributes"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                                .updateOptionsBuilder(nonexistantFs.getFeedbackSessionName(), nonexistantFs.getCourseId())"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                                .withInstructions(\"test\")"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                                .build()));"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        AssertHelper.assertContains(FeedbackSessionsDb.ERROR_UPDATE_NON_EXISTENT, ednee.getLocalizedMessage());"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"        ______TS(\"standard success case\");"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes modifiedSession \u003d getNewFeedbackSession();"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        fsDb.deleteFeedbackSession(modifiedSession.getFeedbackSessionName(), modifiedSession.getCourseId());"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        fsDb.createEntity(modifiedSession);"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        verifyPresentInDatabase(modifiedSession);"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        modifiedSession.setInstructions(\"new instructions\");"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        modifiedSession.setGracePeriodMinutes(0);"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        modifiedSession.setSentOpenEmail(false);"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes updatedSession \u003d fsDb.updateFeedbackSession("},{"lineNumber":512,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(modifiedSession.getFeedbackSessionName(), modifiedSession.getCourseId())"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                        .withInstructions(modifiedSession.getInstructions())"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                        .withGracePeriod(Duration.ofMinutes(modifiedSession.getGracePeriodMinutes()))"},{"lineNumber":516,"author":{"gitId":"-"},"content":"                        .withSentOpenEmail(modifiedSession.isSentOpenEmail())"},{"lineNumber":517,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes actualFs \u003d"},{"lineNumber":519,"author":{"gitId":"-"},"content":"                fsDb.getFeedbackSession(modifiedSession.getCourseId(), modifiedSession.getFeedbackSessionName());"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        assertEquals(JsonUtils.toJson(modifiedSession), JsonUtils.toJson(actualFs));"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        assertEquals(JsonUtils.toJson(modifiedSession), JsonUtils.toJson(updatedSession));"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"    // the test is to ensure that optimized saving policy is implemented without false negative"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    public void testUpdateFeedbackSession_singleFieldUpdate_shouldUpdateCorrectly() throws Exception {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes typicalFs \u003d getNewFeedbackSession();"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        typicalFs \u003d fsDb.putEntity(typicalFs);"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"        assertNotEquals(\"new instructions\", typicalFs.getInstructions());"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":532,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":533,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":534,"author":{"gitId":"-"},"content":"                        .withInstructions(\"new instructions\")"},{"lineNumber":535,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes actualFs \u003d"},{"lineNumber":537,"author":{"gitId":"-"},"content":"                fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        assertEquals(\"new instructions\", updatedFs.getInstructions());"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        assertEquals(\"new instructions\", actualFs.getInstructions());"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"        Instant startTime \u003d typicalFs.getStartTime().minusSeconds(1);"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":543,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":544,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                        .withStartTime(startTime)"},{"lineNumber":546,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        assertEquals(startTime, updatedFs.getStartTime());"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        assertEquals(startTime, actualFs.getStartTime());"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"        Instant endTime \u003d typicalFs.getEndTime().minusSeconds(1);"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":553,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":554,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":555,"author":{"gitId":"-"},"content":"                        .withEndTime(endTime)"},{"lineNumber":556,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        assertEquals(endTime, updatedFs.getEndTime());"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        assertEquals(endTime, actualFs.getEndTime());"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"        Instant sessionVisibleTime \u003d typicalFs.getSessionVisibleFromTime().minusSeconds(1);"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":563,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":564,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":565,"author":{"gitId":"-"},"content":"                        .withSessionVisibleFromTime(sessionVisibleTime)"},{"lineNumber":566,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        assertEquals(sessionVisibleTime, updatedFs.getSessionVisibleFromTime());"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        assertEquals(sessionVisibleTime, actualFs.getSessionVisibleFromTime());"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"        Instant resultVisibleTime \u003d typicalFs.getResultsVisibleFromTime().minusSeconds(1);"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":573,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":574,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":575,"author":{"gitId":"-"},"content":"                        .withResultsVisibleFromTime(resultVisibleTime)"},{"lineNumber":576,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        assertEquals(resultVisibleTime, updatedFs.getResultsVisibleFromTime());"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        assertEquals(resultVisibleTime, actualFs.getResultsVisibleFromTime());"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"        assertNotEquals(\"Asia/Singapore\", actualFs.getTimeZone());"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":583,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":584,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":585,"author":{"gitId":"-"},"content":"                        .withTimeZone(\"Asia/Singapore\")"},{"lineNumber":586,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        assertEquals(\"Asia/Singapore\", updatedFs.getTimeZone());"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        assertEquals(\"Asia/Singapore\", actualFs.getTimeZone());"},{"lineNumber":590,"author":{"gitId":"-"},"content":""},{"lineNumber":591,"author":{"gitId":"-"},"content":"        assertNotEquals(10, actualFs.getGracePeriodMinutes());"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":593,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":594,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":595,"author":{"gitId":"-"},"content":"                        .withGracePeriod(Duration.ofMinutes(10))"},{"lineNumber":596,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        assertEquals(10, updatedFs.getGracePeriodMinutes());"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        assertEquals(10, actualFs.getGracePeriodMinutes());"},{"lineNumber":600,"author":{"gitId":"-"},"content":""},{"lineNumber":601,"author":{"gitId":"-"},"content":"        assertFalse(actualFs.isSentOpeningSoonEmail());"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":603,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":604,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":605,"author":{"gitId":"-"},"content":"                        .withSentOpeningSoonEmail(true)"},{"lineNumber":606,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        assertTrue(updatedFs.isSentOpeningSoonEmail());"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        assertTrue(actualFs.isSentOpeningSoonEmail());"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"        assertFalse(actualFs.isSentOpenEmail());"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":613,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":615,"author":{"gitId":"-"},"content":"                        .withSentOpenEmail(true)"},{"lineNumber":616,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":618,"author":{"gitId":"-"},"content":"        assertTrue(updatedFs.isSentOpenEmail());"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        assertTrue(actualFs.isSentOpenEmail());"},{"lineNumber":620,"author":{"gitId":"-"},"content":""},{"lineNumber":621,"author":{"gitId":"-"},"content":"        assertFalse(actualFs.isSentClosingEmail());"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":623,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                        .withSentClosingEmail(true)"},{"lineNumber":626,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":628,"author":{"gitId":"-"},"content":"        assertTrue(updatedFs.isSentClosingEmail());"},{"lineNumber":629,"author":{"gitId":"-"},"content":"        assertTrue(actualFs.isSentClosingEmail());"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"        assertFalse(actualFs.isSentClosedEmail());"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":633,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":634,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":635,"author":{"gitId":"-"},"content":"                        .withSentClosedEmail(true)"},{"lineNumber":636,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":637,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        assertTrue(updatedFs.isSentClosedEmail());"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        assertTrue(actualFs.isSentClosedEmail());"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"        assertFalse(actualFs.isSentPublishedEmail());"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":643,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":644,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":645,"author":{"gitId":"-"},"content":"                        .withSentPublishedEmail(true)"},{"lineNumber":646,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        assertTrue(updatedFs.isSentPublishedEmail());"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        assertTrue(actualFs.isSentPublishedEmail());"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"        assertTrue(actualFs.isClosingEmailEnabled());"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":653,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":654,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":655,"author":{"gitId":"-"},"content":"                        .withIsClosingEmailEnabled(false)"},{"lineNumber":656,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        assertFalse(updatedFs.isClosingEmailEnabled());"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        assertFalse(actualFs.isClosingEmailEnabled());"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"-"},"content":"        assertTrue(actualFs.isPublishedEmailEnabled());"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":663,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":664,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":665,"author":{"gitId":"-"},"content":"                        .withIsPublishedEmailEnabled(false)"},{"lineNumber":666,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":667,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        assertFalse(updatedFs.isPublishedEmailEnabled());"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        assertFalse(actualFs.isPublishedEmailEnabled());"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"        assertEquals(new HashMap\u003c\u003e(), actualFs.getStudentDeadlines());"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        Map\u003cString, Instant\u003e newStudentDeadlines \u003d new HashMap\u003c\u003e();"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        newStudentDeadlines.put(\"student@school.edu\", Instant.now());"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":675,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":676,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":677,"author":{"gitId":"-"},"content":"                        .withStudentDeadlines(newStudentDeadlines)"},{"lineNumber":678,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        assertEquals(newStudentDeadlines, updatedFs.getStudentDeadlines());"},{"lineNumber":681,"author":{"gitId":"-"},"content":"        assertEquals(newStudentDeadlines, actualFs.getStudentDeadlines());"},{"lineNumber":682,"author":{"gitId":"-"},"content":""},{"lineNumber":683,"author":{"gitId":"-"},"content":"        assertEquals(new HashMap\u003c\u003e(), actualFs.getInstructorDeadlines());"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        Map\u003cString, Instant\u003e newInstructorDeadlines \u003d new HashMap\u003c\u003e();"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        newInstructorDeadlines.put(\"instructor@school.edu\", Instant.now());"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        updatedFs \u003d fsDb.updateFeedbackSession("},{"lineNumber":687,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":688,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(typicalFs.getFeedbackSessionName(), typicalFs.getCourseId())"},{"lineNumber":689,"author":{"gitId":"-"},"content":"                        .withInstructorDeadlines(newInstructorDeadlines)"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        actualFs \u003d fsDb.getFeedbackSession(typicalFs.getCourseId(), typicalFs.getFeedbackSessionName());"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        assertEquals(newInstructorDeadlines, updatedFs.getInstructorDeadlines());"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        assertEquals(newInstructorDeadlines, actualFs.getInstructorDeadlines());"},{"lineNumber":694,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":695,"author":{"gitId":"-"},"content":""},{"lineNumber":696,"author":{"gitId":"-"},"content":"    private FeedbackSessionAttributes getNewFeedbackSession() {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"        return FeedbackSessionAttributes.builder(\"fsTest1\", \"testCourse\")"},{"lineNumber":698,"author":{"gitId":"-"},"content":"                .withCreatorEmail(\"valid@email.com\")"},{"lineNumber":699,"author":{"gitId":"-"},"content":"                .withSessionVisibleFromTime(TimeHelperExtension.getInstantMinutesOffsetFromNow(-62))"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                .withStartTime(TimeHelperExtension.getInstantHoursOffsetFromNow(-1))"},{"lineNumber":701,"author":{"gitId":"-"},"content":"                .withEndTime(TimeHelperExtension.getInstantHoursOffsetFromNow(0))"},{"lineNumber":702,"author":{"gitId":"-"},"content":"                .withResultsVisibleFromTime(TimeHelperExtension.getInstantMinutesOffsetFromNow(1))"},{"lineNumber":703,"author":{"gitId":"-"},"content":"                .withGracePeriod(Duration.ofMinutes(5))"},{"lineNumber":704,"author":{"gitId":"-"},"content":"                .withInstructions(\"Give feedback.\")"},{"lineNumber":705,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":706,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":707,"author":{"gitId":"-"},"content":""},{"lineNumber":708,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":3,"-":705}},{"path":"src/test/java/teammates/storage/api/NotificationsDbTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"package teammates.storage.api;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import java.util.HashSet;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import java.util.UUID;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import org.testng.annotations.AfterMethod;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import org.testng.annotations.BeforeMethod;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"import org.testng.annotations.Test;"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"import teammates.test.BaseTestCaseWithLocalDatabaseAccess;"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":" * SUT: {@link NotificationsDb}."},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"public class NotificationsDbTest extends BaseTestCaseWithLocalDatabaseAccess {"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"    private final NotificationsDb notificationsDb \u003d NotificationsDb.inst();"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"    private final Map\u003cString, NotificationAttributes\u003e typicalNotifications \u003d getTypicalDataBundle().notifications;"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    @BeforeMethod"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"    public void setup() throws Exception {"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"        for (NotificationAttributes n : typicalNotifications.values()) {"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"            notificationsDb.createEntity(n);"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"     * Removes all notifications created by each test."},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"    @AfterMethod"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"    public void cleanUp() {"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"        List\u003cNotificationAttributes\u003e retrieved \u003d notificationsDb.getAllNotifications();"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"        retrieved.forEach(n -\u003e notificationsDb.deleteNotification(n.getNotificationId()));"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"    public void testGetNotification() throws Exception {"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes n \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes actual \u003d notificationsDb.getNotification(n.getNotificationId());"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"        assertNotNull(actual);"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"expect null for non-existent notification\");"},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"        actual \u003d notificationsDb.getNotification(\"invalid_notification_id\");"},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":"        assertNull(actual);"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":"        assertThrows(AssertionError.class, () -\u003e notificationsDb.getNotification(null));"},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":"    public void testGetAllNotifications() throws Exception {"},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"        List\u003cNotificationAttributes\u003e actual \u003d notificationsDb.getAllNotifications();"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"        assertNotNull(actual);"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"        typicalNotifications.values().forEach(n -\u003e {"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"            assertTrue(actual.contains(n));"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":"            actual.remove(n);"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"        });"},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"    public void testGetActiveNotificationsByTargetUser() throws Exception {"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"        // Conditions for this API: endTime \u003e now, startTime \u003c now, targetUser \u003d\u003d specified target user"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"        List\u003cNotificationAttributes\u003e actual \u003d"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":"                notificationsDb.getActiveNotificationsByTargetUser(NotificationTargetUser.STUDENT);"},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"        assertNotNull(actual);"},{"lineNumber":81,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"        // This set may need to be updated when the typical data bundle is updated"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"        Set\u003cNotificationAttributes\u003e expected \u003d new HashSet\u003c\u003e();"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"        expected.add(typicalNotifications.get(\"notification1\"));"},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"        expected.add(typicalNotifications.get(\"notification2\"));"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"        expected.add(typicalNotifications.get(\"notification4\"));"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"        expected.add(typicalNotifications.get(\"notification6\"));"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"        expected.forEach(n -\u003e {"},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":"            assertTrue(actual.contains(n));"},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"            actual.remove(n);"},{"lineNumber":92,"author":{"gitId":"fsgmhoward"},"content":"        });"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"    public void testCreateNotification() throws Exception {"},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":98,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes n1 \u003d createNewNotification();"},{"lineNumber":99,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"failure: duplicate notification with the same ID\");"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":"        assertThrows(EntityAlreadyExistsException.class, () -\u003e notificationsDb.createEntity(n1));"},{"lineNumber":102,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"failure: invalid non-null parameters\");"},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes n2 \u003d getNewNotificationAttributes();"},{"lineNumber":105,"author":{"gitId":"fsgmhoward"},"content":"        n2.setTitle(\"\");"},{"lineNumber":106,"author":{"gitId":"fsgmhoward"},"content":"        assertThrows(InvalidParametersException.class, () -\u003e notificationsDb.createEntity(n2));"},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"failure: null parameters\");"},{"lineNumber":109,"author":{"gitId":"fsgmhoward"},"content":"        assertThrows(AssertionError.class, () -\u003e notificationsDb.createEntity(null));"},{"lineNumber":110,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":112,"author":{"gitId":"fsgmhoward"},"content":"    // TODO: for extension, some fields are not allowed to be updated after shown is true"},{"lineNumber":113,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":114,"author":{"gitId":"fsgmhoward"},"content":"    public void testUpdateNotification() throws Exception {"},{"lineNumber":115,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes n \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":116,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":117,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":118,"author":{"gitId":"fsgmhoward"},"content":"        // Try to update to another set of values, currently n\u0027s attributes are from notification1"},{"lineNumber":119,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes original \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes differentNotification \u003d typicalNotifications.get(\"notification2\");"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":122,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getTitle(), n.getTitle());"},{"lineNumber":123,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getMessage(), n.getMessage());"},{"lineNumber":124,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getStyle(), n.getStyle());"},{"lineNumber":125,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getTargetUser(), n.getTargetUser());"},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getStartTime(), n.getStartTime());"},{"lineNumber":127,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getEndTime(), n.getEndTime());"},{"lineNumber":128,"author":{"gitId":"fsgmhoward"},"content":"        assertFalse(n.isShown());"},{"lineNumber":129,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"        notificationsDb.updateNotification("},{"lineNumber":131,"author":{"gitId":"fsgmhoward"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":132,"author":{"gitId":"fsgmhoward"},"content":"                        .withTitle(differentNotification.getTitle())"},{"lineNumber":133,"author":{"gitId":"fsgmhoward"},"content":"                        .withMessage(differentNotification.getMessage())"},{"lineNumber":134,"author":{"gitId":"fsgmhoward"},"content":"                        .withStyle(differentNotification.getStyle())"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"                        .withTargetUser(differentNotification.getTargetUser())"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":"                        .withStartTime(differentNotification.getStartTime())"},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":"                        .withEndTime(differentNotification.getEndTime())"},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"                        .withShown()"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"                        .build());"},{"lineNumber":140,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":141,"author":{"gitId":"fsgmhoward"},"content":"        n \u003d notificationsDb.getNotification(n.getNotificationId());"},{"lineNumber":142,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getTitle(), n.getTitle());"},{"lineNumber":143,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getMessage(), n.getMessage());"},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getStyle(), n.getStyle());"},{"lineNumber":145,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getTargetUser(), n.getTargetUser());"},{"lineNumber":146,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getStartTime(), n.getStartTime());"},{"lineNumber":147,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getEndTime(), n.getEndTime());"},{"lineNumber":148,"author":{"gitId":"fsgmhoward"},"content":"        assertTrue(n.isShown());"},{"lineNumber":149,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":150,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"failure: update non-existent notification\");"},{"lineNumber":151,"author":{"gitId":"fsgmhoward"},"content":"        assertThrows(EntityDoesNotExistException.class, () -\u003e"},{"lineNumber":152,"author":{"gitId":"fsgmhoward"},"content":"                notificationsDb.updateNotification(NotificationAttributes.updateOptionsBuilder(\"invalid_notification_id\")"},{"lineNumber":153,"author":{"gitId":"fsgmhoward"},"content":"                        .withTitle(\"title\")"},{"lineNumber":154,"author":{"gitId":"fsgmhoward"},"content":"                        .build()));"},{"lineNumber":155,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":156,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"failure: invalid non-null parameters\");"},{"lineNumber":157,"author":{"gitId":"fsgmhoward"},"content":"        final String notificationId \u003d n.getNotificationId();"},{"lineNumber":158,"author":{"gitId":"fsgmhoward"},"content":"        // Empty title is used here, which triggers InvalidParametersException"},{"lineNumber":159,"author":{"gitId":"fsgmhoward"},"content":"        assertThrows(InvalidParametersException.class, () -\u003e"},{"lineNumber":160,"author":{"gitId":"fsgmhoward"},"content":"                notificationsDb.updateNotification(NotificationAttributes.updateOptionsBuilder(notificationId)"},{"lineNumber":161,"author":{"gitId":"fsgmhoward"},"content":"                        .withTitle(\"\")"},{"lineNumber":162,"author":{"gitId":"fsgmhoward"},"content":"                        .build()));"},{"lineNumber":163,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":164,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"failure: null update options\");"},{"lineNumber":165,"author":{"gitId":"fsgmhoward"},"content":"        assertThrows(AssertionError.class, () -\u003e notificationsDb.updateNotification(null));"},{"lineNumber":166,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":168,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":169,"author":{"gitId":"fsgmhoward"},"content":"    public void testUpdateNotification_singleFieldUpdate_shouldUpdateSuccessfully() throws Exception {"},{"lineNumber":170,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes n \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":171,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":172,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"success: single field - title\");"},{"lineNumber":173,"author":{"gitId":"fsgmhoward"},"content":"        // Try to update to another set of values, currently n\u0027s attributes are from notification1"},{"lineNumber":174,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes original \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":175,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes differentNotification \u003d typicalNotifications.get(\"notification2\");"},{"lineNumber":176,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":177,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getTitle(), notificationsDb.getNotification(n.getNotificationId()).getTitle());"},{"lineNumber":178,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getTitle(), notificationsDb.updateNotification("},{"lineNumber":179,"author":{"gitId":"fsgmhoward"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":180,"author":{"gitId":"fsgmhoward"},"content":"                        .withTitle(differentNotification.getTitle())"},{"lineNumber":181,"author":{"gitId":"fsgmhoward"},"content":"                        .build()).getTitle());"},{"lineNumber":182,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getTitle(), notificationsDb.getNotification(n.getNotificationId()).getTitle());"},{"lineNumber":183,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":184,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"success: single field - message\");"},{"lineNumber":185,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getMessage(), notificationsDb.getNotification(n.getNotificationId()).getMessage());"},{"lineNumber":186,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getMessage(), notificationsDb.updateNotification("},{"lineNumber":187,"author":{"gitId":"fsgmhoward"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":188,"author":{"gitId":"fsgmhoward"},"content":"                        .withMessage(differentNotification.getMessage())"},{"lineNumber":189,"author":{"gitId":"fsgmhoward"},"content":"                        .build()).getMessage());"},{"lineNumber":190,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getMessage(),"},{"lineNumber":191,"author":{"gitId":"fsgmhoward"},"content":"                notificationsDb.getNotification(n.getNotificationId()).getMessage());"},{"lineNumber":192,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":193,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"success: single field - style\");"},{"lineNumber":194,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getStyle(), notificationsDb.getNotification(n.getNotificationId()).getStyle());"},{"lineNumber":195,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getStyle(), notificationsDb.updateNotification("},{"lineNumber":196,"author":{"gitId":"fsgmhoward"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":197,"author":{"gitId":"fsgmhoward"},"content":"                        .withStyle(differentNotification.getStyle())"},{"lineNumber":198,"author":{"gitId":"fsgmhoward"},"content":"                        .build()).getStyle());"},{"lineNumber":199,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getStyle(), notificationsDb.getNotification(n.getNotificationId()).getStyle());"},{"lineNumber":200,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":201,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"success: single field - targetUser\");"},{"lineNumber":202,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getTargetUser(), notificationsDb.getNotification(n.getNotificationId()).getTargetUser());"},{"lineNumber":203,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getTargetUser(), notificationsDb.updateNotification("},{"lineNumber":204,"author":{"gitId":"fsgmhoward"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":205,"author":{"gitId":"fsgmhoward"},"content":"                        .withTargetUser(differentNotification.getTargetUser())"},{"lineNumber":206,"author":{"gitId":"fsgmhoward"},"content":"                        .build()).getTargetUser());"},{"lineNumber":207,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getTargetUser(),"},{"lineNumber":208,"author":{"gitId":"fsgmhoward"},"content":"                notificationsDb.getNotification(n.getNotificationId()).getTargetUser());"},{"lineNumber":209,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":210,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"success: single field - startTime\");"},{"lineNumber":211,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getStartTime(), notificationsDb.getNotification(n.getNotificationId()).getStartTime());"},{"lineNumber":212,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getStartTime(), notificationsDb.updateNotification("},{"lineNumber":213,"author":{"gitId":"fsgmhoward"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":214,"author":{"gitId":"fsgmhoward"},"content":"                        .withStartTime(differentNotification.getStartTime())"},{"lineNumber":215,"author":{"gitId":"fsgmhoward"},"content":"                        .build()).getStartTime());"},{"lineNumber":216,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getStartTime(),"},{"lineNumber":217,"author":{"gitId":"fsgmhoward"},"content":"                notificationsDb.getNotification(n.getNotificationId()).getStartTime());"},{"lineNumber":218,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":219,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"success: single field - endTime\");"},{"lineNumber":220,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(original.getEndTime(), notificationsDb.getNotification(n.getNotificationId()).getEndTime());"},{"lineNumber":221,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getEndTime(), notificationsDb.updateNotification("},{"lineNumber":222,"author":{"gitId":"fsgmhoward"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":223,"author":{"gitId":"fsgmhoward"},"content":"                        .withEndTime(differentNotification.getEndTime())"},{"lineNumber":224,"author":{"gitId":"fsgmhoward"},"content":"                        .build()).getEndTime());"},{"lineNumber":225,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(differentNotification.getEndTime(),"},{"lineNumber":226,"author":{"gitId":"fsgmhoward"},"content":"                notificationsDb.getNotification(n.getNotificationId()).getEndTime());"},{"lineNumber":227,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":228,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"success: single field - shown\");"},{"lineNumber":229,"author":{"gitId":"fsgmhoward"},"content":"        assertFalse(notificationsDb.getNotification(n.getNotificationId()).isShown());"},{"lineNumber":230,"author":{"gitId":"fsgmhoward"},"content":"        assertTrue(notificationsDb.updateNotification("},{"lineNumber":231,"author":{"gitId":"fsgmhoward"},"content":"                NotificationAttributes.updateOptionsBuilder(n.getNotificationId())"},{"lineNumber":232,"author":{"gitId":"fsgmhoward"},"content":"                        .withShown()"},{"lineNumber":233,"author":{"gitId":"fsgmhoward"},"content":"                        .build()).isShown());"},{"lineNumber":234,"author":{"gitId":"fsgmhoward"},"content":"        assertTrue(notificationsDb.getNotification(n.getNotificationId()).isShown());"},{"lineNumber":235,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":237,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":238,"author":{"gitId":"fsgmhoward"},"content":"    public void testDeleteNotification() throws Exception {"},{"lineNumber":239,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes n \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":240,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":241,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"silent deletion of non-existent notification\");"},{"lineNumber":242,"author":{"gitId":"fsgmhoward"},"content":"        notificationsDb.deleteNotification(\"invalid_notification_id\");"},{"lineNumber":243,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":244,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"typical success case\");"},{"lineNumber":245,"author":{"gitId":"fsgmhoward"},"content":"        assertNotNull(notificationsDb.getNotification(n.getNotificationId()));"},{"lineNumber":246,"author":{"gitId":"fsgmhoward"},"content":"        notificationsDb.deleteNotification(n.getNotificationId());"},{"lineNumber":247,"author":{"gitId":"fsgmhoward"},"content":"        assertNull(notificationsDb.getNotification(n.getNotificationId()));"},{"lineNumber":248,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":249,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"silent deletion of the same notification twice\");"},{"lineNumber":250,"author":{"gitId":"fsgmhoward"},"content":"        notificationsDb.deleteNotification(n.getNotificationId());"},{"lineNumber":251,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":252,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"failure: null parameter\");"},{"lineNumber":253,"author":{"gitId":"fsgmhoward"},"content":"        assertThrows(AssertionError.class, () -\u003e notificationsDb.deleteNotification(null));"},{"lineNumber":254,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":256,"author":{"gitId":"fsgmhoward"},"content":"    @Test"},{"lineNumber":257,"author":{"gitId":"fsgmhoward"},"content":"    public void testHasExistingEntities() throws Exception {"},{"lineNumber":258,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes n \u003d getNewNotificationAttributes();"},{"lineNumber":259,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":260,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"false before entity creation\");"},{"lineNumber":261,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(false, notificationsDb.hasExistingEntities(n));"},{"lineNumber":262,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":263,"author":{"gitId":"fsgmhoward"},"content":"        ______TS(\"true after entity creation\");"},{"lineNumber":264,"author":{"gitId":"fsgmhoward"},"content":"        notificationsDb.createEntity(n);"},{"lineNumber":265,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(true, notificationsDb.hasExistingEntities(n));"},{"lineNumber":266,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":267,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":268,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationAttributes createNewNotification()"},{"lineNumber":269,"author":{"gitId":"fsgmhoward"},"content":"            throws EntityAlreadyExistsException, InvalidParametersException {"},{"lineNumber":270,"author":{"gitId":"fsgmhoward"},"content":"        return notificationsDb.createEntity(getNewNotificationAttributes());"},{"lineNumber":271,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":273,"author":{"gitId":"fsgmhoward"},"content":"    private NotificationAttributes getNewNotificationAttributes() {"},{"lineNumber":274,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes typical \u003d typicalNotifications.get(\"notification1\");"},{"lineNumber":275,"author":{"gitId":"fsgmhoward"},"content":"        return NotificationAttributes.builder(UUID.randomUUID().toString())"},{"lineNumber":276,"author":{"gitId":"fsgmhoward"},"content":"                .withTitle(typical.getTitle())"},{"lineNumber":277,"author":{"gitId":"fsgmhoward"},"content":"                .withMessage(typical.getMessage())"},{"lineNumber":278,"author":{"gitId":"fsgmhoward"},"content":"                .withStyle(typical.getStyle())"},{"lineNumber":279,"author":{"gitId":"fsgmhoward"},"content":"                .withTargetUser(typical.getTargetUser())"},{"lineNumber":280,"author":{"gitId":"fsgmhoward"},"content":"                .withStartTime(typical.getStartTime())"},{"lineNumber":281,"author":{"gitId":"fsgmhoward"},"content":"                .withEndTime(typical.getEndTime())"},{"lineNumber":282,"author":{"gitId":"fsgmhoward"},"content":"                .build();"},{"lineNumber":283,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":284,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"ziqing26":2,"fsgmhoward":282}},{"path":"src/test/java/teammates/test/AbstractBackDoor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.InputStreamReader;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URI;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.apache.http.HttpEntity;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.apache.http.NameValuePair;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.CloseableHttpResponse;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpDelete;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPut;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpRequestBase;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.apache.http.client.utils.URIBuilder;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.apache.http.entity.StringEntity;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.CloseableHttpClient;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.apache.http.impl.client.HttpClients;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.apache.http.message.BasicNameValuePair;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import teammates.common.exception.HttpRequestFailedException;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import teammates.ui.output.AccountData;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import teammates.ui.output.AccountRequestData;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import teammates.ui.output.CourseData;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import teammates.ui.output.CoursesData;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackQuestionData;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackQuestionsData;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponseCommentData;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponseData;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackResponsesData;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackSessionData;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackSessionsData;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import teammates.ui.output.FeedbackVisibilityType;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import teammates.ui.output.InstructorData;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import teammates.ui.output.InstructorsData;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import teammates.ui.output.MessageOutput;"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.output.NotificationData;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import teammates.ui.output.NumberOfEntitiesToGiveFeedbackToSetting;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import teammates.ui.output.ResponseVisibleSetting;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"import teammates.ui.output.SessionVisibleSetting;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"import teammates.ui.output.StudentData;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import teammates.ui.request.Intent;"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":70,"author":{"gitId":"-"},"content":" * Used to create API calls to the back-end without going through the UI."},{"lineNumber":71,"author":{"gitId":"-"},"content":" */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"public abstract class AbstractBackDoor {"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Gets the URL of the back-end."},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    protected abstract String getAppUrl();"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Gets the backdoor key used to authenticate with the back-end."},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    protected abstract String getBackdoorKey();"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Gets the CSRF key used to authenticate with the back-end."},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    protected abstract String getCsrfKey();"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Executes GET request with the given {@code relativeUrl}."},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executeGetRequest(String relativeUrl, Map\u003cString, String\u003e params) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return executeRequest(HttpGet.METHOD_NAME, relativeUrl, params, null);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes POST request with the given {@code relativeUrl}."},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executePostRequest(String relativeUrl, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return executeRequest(HttpPost.METHOD_NAME, relativeUrl, params, body);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes PUT request with the given {@code relativeUrl}."},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executePutRequest(String relativeUrl, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return executeRequest(HttpPut.METHOD_NAME, relativeUrl, params, body);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes DELETE request with the given {@code relativeUrl}."},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @return The body content and status of the HTTP response"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ResponseBodyAndCode executeDeleteRequest(String relativeUrl, Map\u003cString, String\u003e params) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return executeRequest(HttpDelete.METHOD_NAME, relativeUrl, params, null);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes HTTP request with the given {@code method} and {@code relativeUrl}."},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @return The content of the HTTP response"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private ResponseBodyAndCode executeRequest("},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String method, String relativeUrl, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String url \u003d getAppUrl() + relativeUrl;"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        HttpRequestBase request;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        switch (method) {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        case HttpGet.METHOD_NAME:"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            request \u003d createGetRequest(url, params);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        case HttpPost.METHOD_NAME:"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            request \u003d createPostRequest(url, params, body);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        case HttpPut.METHOD_NAME:"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            request \u003d createPutRequest(url, params, body);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        case HttpDelete.METHOD_NAME:"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            request \u003d createDeleteRequest(url, params);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Unaccepted HTTP method: \" + method);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        addAuthKeys(request);"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"        try (CloseableHttpClient httpClient \u003d HttpClients.createDefault();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                CloseableHttpResponse response \u003d httpClient.execute(request)) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String responseBody \u003d null;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            HttpEntity entity \u003d response.getEntity();"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            if (entity !\u003d null) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                try (BufferedReader br \u003d new BufferedReader("},{"lineNumber":161,"author":{"gitId":"-"},"content":"                        new InputStreamReader(entity.getContent(), Const.ENCODING))) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    responseBody \u003d br.lines().collect(Collectors.joining(System.lineSeparator()));"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return new ResponseBodyAndCode(responseBody, response.getStatusLine().getStatusCode());"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Executes GET request with the given {@code relativeUrl}."},{"lineNumber":174,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @return The content of the HTTP response"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private static HttpGet createGetRequest(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return new HttpGet(createBasicUri(url, params));"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private static HttpPost createPostRequest(String url, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        HttpPost post \u003d new HttpPost(createBasicUri(url, params));"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (body !\u003d null) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            StringEntity entity \u003d new StringEntity(body, Const.ENCODING);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            post.setEntity(entity);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return post;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private static HttpPut createPutRequest(String url, Map\u003cString, String\u003e params, String body) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        HttpPut put \u003d new HttpPut(createBasicUri(url, params));"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (body !\u003d null) {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            StringEntity entity \u003d new StringEntity(body, Const.ENCODING);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            put.setEntity(entity);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return put;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"    private static HttpDelete createDeleteRequest(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return new HttpDelete(createBasicUri(url, params));"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private static URI createBasicUri(String url, Map\u003cString, String\u003e params) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        List\u003cNameValuePair\u003e postParameters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (params !\u003d null) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            params.forEach((key, value) -\u003e postParameters.add(new BasicNameValuePair(key, value)));"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            URIBuilder uriBuilder \u003d new URIBuilder(url);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            uriBuilder.addParameters(postParameters);"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return uriBuilder.build();"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        } catch (URISyntaxException e) {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    private void addAuthKeys(HttpRequestBase request) {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        request.addHeader(Const.HeaderNames.BACKDOOR_KEY, getBackdoorKey());"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        request.addHeader(Const.HeaderNames.CSRF_KEY, getCsrfKey());"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Removes and restores given data in the database. This method is to be called on test startup."},{"lineNumber":230,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * \u003cp\u003eNote:  The data associated with the test accounts have to be \u003cstrong\u003emanually\u003c/strong\u003e removed by removing the data"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * bundle when a test ends because the test accounts are shared across tests."},{"lineNumber":233,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * \u003cp\u003eTest data should never be cleared after test in order to prevent incurring additional database costs because the"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * test\u0027s data may not be accessed in another test. Also although unlikely in normal conditions, when a test fail to"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * remove data bundle on teardown, another test should have no reason to fail."},{"lineNumber":237,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * \u003cp\u003eAnother reason not to remove associated data after a test is that in case of test failures, it helps to have the"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * associated data in the database to debug the failure."},{"lineNumber":240,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThis means that removing the data bundle on startup is not always sufficient because a test only knows how"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * to remove its associated data."},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * This is why some tests would fail when they use the same account and use different data."},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * Extending this method to remove data outside its associated data would introduce"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * unnecessary complications such as extra costs and knowing exactly how much data to remove. Removing too much data"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * would not just incur higher database costs but we can make tests unexpectedly pass(fail) when the data is expected to"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * be not present(present) in another test."},{"lineNumber":248,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * \u003cp\u003eTODO: Hence, we need to explicitly remove the data bundle in tests on teardown to avoid instability of tests."},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * However, removing the data bundle on teardown manually is not a perfect solution because two tests can concurrently"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * access the same account and their data may get mixed up in the process. This is a major problem we need to address."},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public String removeAndRestoreDataBundle(DataBundle dataBundle) throws HttpRequestFailedException {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        removeDataBundle(dataBundle);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode putRequestOutput \u003d"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                executePostRequest(Const.ResourceURIs.DATABUNDLE, null, JsonUtils.toJson(dataBundle));"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        if (putRequestOutput.responseCode !\u003d HttpStatus.SC_OK) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            throw new HttpRequestFailedException(\"Request failed: [\" + putRequestOutput.responseCode + \"] \""},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    + putRequestOutput.responseBody);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return putRequestOutput.responseBody;"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * Removes given data from the database."},{"lineNumber":266,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf given entities have already been deleted, it fails silently."},{"lineNumber":268,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void removeDataBundle(DataBundle dataBundle) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        executePutRequest(Const.ResourceURIs.DATABUNDLE, null, JsonUtils.toJson(dataBundle));"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * Gets the cookie format for the given user ID."},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public String getUserCookie(String userId) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.USER_ID, userId);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executePostRequest(Const.ResourceURIs.USER_COOKIE, params, null);"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        MessageOutput output \u003d JsonUtils.fromJson(response.responseBody, MessageOutput.class);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        return output.getMessage();"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * Puts searchable documents in data bundle into the database."},{"lineNumber":287,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    public String putDocuments(DataBundle dataBundle) throws HttpRequestFailedException {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode putRequestOutput \u003d"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                executePutRequest(Const.ResourceURIs.DATABUNDLE_DOCUMENTS, null, JsonUtils.toJson(dataBundle));"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        if (putRequestOutput.responseCode !\u003d HttpStatus.SC_OK) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            throw new HttpRequestFailedException(\"Request failed: [\" + putRequestOutput.responseCode + \"] \""},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    + putRequestOutput.responseBody);"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        return putRequestOutput.responseBody;"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     * Gets an account from the database."},{"lineNumber":300,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    public AccountAttributes getAccount(String googleId) {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_ID, googleId);"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.ACCOUNT, params);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"        AccountData accountData \u003d JsonUtils.fromJson(response.responseBody, AccountData.class);"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        return AccountAttributes.builder(accountData.getGoogleId())"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                .withName(accountData.getName())"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                .withEmail(accountData.getEmail())"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                .withInstitute(accountData.getInstitute())"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                .withIsInstructor(accountData.isInstructor())"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":319,"author":{"gitId":"-"},"content":"     * Gets course data from the database."},{"lineNumber":320,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    public CourseData getCourseData(String courseId) {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.STUDENT);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.COURSE, params);"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, CourseData.class);"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":334,"author":{"gitId":"-"},"content":"     * Gets a course from the database."},{"lineNumber":335,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CourseAttributes getCourse(String courseId) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d getCourseData(courseId);"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        return CourseAttributes.builder(courseData.getCourseId())"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                .withName(courseData.getCourseName())"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                .withTimezone(courseData.getTimeZone())"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                .withInstitute(courseData.getInstitute())"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     * Gets archived course data from the database."},{"lineNumber":350,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    public CourseData getArchivedCourseData(String instructorId, String courseId) {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.USER_ID, instructorId);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_STATUS, Const.CourseStatus.ARCHIVED);"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.COURSES, params);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"        CoursesData coursesData \u003d JsonUtils.fromJson(response.responseBody, CoursesData.class);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d coursesData.getCourses()"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":366,"author":{"gitId":"-"},"content":"                .filter(cd -\u003e cd.getCourseId().equals(courseId))"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        return courseData;"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":378,"author":{"gitId":"-"},"content":"     * Gets a archived course from the database."},{"lineNumber":379,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    public CourseAttributes getArchivedCourse(String instructorId, String courseId) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d getArchivedCourseData(instructorId, courseId);"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        return CourseAttributes.builder(courseData.getCourseId())"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                .withName(courseData.getCourseName())"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                .withTimezone(courseData.getTimeZone())"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                .withInstitute(courseData.getInstitute())"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":393,"author":{"gitId":"-"},"content":"     * Returns true if the course exists and is in recycle bin."},{"lineNumber":394,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    public boolean isCourseInRecycleBin(String courseId) {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d getCourseData(courseId);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        if (courseData \u003d\u003d null) {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        return courseData.getDeletionTimestamp() !\u003d 0;"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":404,"author":{"gitId":"-"},"content":"     * Gets instructor data from the database."},{"lineNumber":405,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public InstructorData getInstructorData(String courseId, String email) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString());"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.INSTRUCTORS, params);"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"        InstructorsData instructorsData \u003d JsonUtils.fromJson(response.responseBody, InstructorsData.class);"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        InstructorData instructorData \u003d instructorsData.getInstructors()"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                .filter(instructor -\u003e instructor.getEmail().equals(email))"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"        if (instructorData \u003d\u003d null) {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"        return instructorData;"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":430,"author":{"gitId":"-"},"content":"     * Get instructor from database. Does not include certain fields like InstructorPrivileges."},{"lineNumber":431,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    public InstructorAttributes getInstructor(String courseId, String instructorEmail) {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        InstructorData instructorData \u003d getInstructorData(courseId, instructorEmail);"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        if (instructorData \u003d\u003d null) {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        InstructorAttributes.Builder instructor \u003d InstructorAttributes.builder(instructorData.getCourseId(),"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                instructorData.getEmail());"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        if (instructorData.getGoogleId() !\u003d null) {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"            instructor.withGoogleId(instructorData.getGoogleId());"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        if (instructorData.getName() !\u003d null) {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"            instructor.withName(instructorData.getName());"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        if (instructorData.getRole() !\u003d null) {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"            instructor.withRole(instructorData.getRole().getRoleName());"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        if (instructorData.getIsDisplayedToStudents() !\u003d null) {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"            instructor.withIsDisplayedToStudents(instructorData.getIsDisplayedToStudents());"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        if (instructorData.getDisplayedToStudentsAs() !\u003d null) {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            instructor.withDisplayedName(instructorData.getDisplayedToStudentsAs());"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        InstructorAttributes instructorAttributes \u003d instructor.build();"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        if (instructorData.getKey() !\u003d null) {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"            instructorAttributes.setKey(instructorData.getKey());"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        return instructorAttributes;"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":462,"author":{"gitId":"-"},"content":"     * Gets student data from the database."},{"lineNumber":463,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    public StudentData getStudentData(String courseId, String studentEmail) {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.STUDENT_EMAIL, studentEmail);"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.STUDENT, params);"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, StudentData.class);"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":476,"author":{"gitId":"-"},"content":"     * Get student from database."},{"lineNumber":477,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public StudentAttributes getStudent(String courseId, String studentEmail) {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        StudentData studentData \u003d getStudentData(courseId, studentEmail);"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        if (studentData \u003d\u003d null) {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        StudentAttributes.Builder builder \u003d StudentAttributes.builder(studentData.getCourseId(),"},{"lineNumber":484,"author":{"gitId":"-"},"content":"                studentData.getEmail());"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        if (studentData.getGoogleId() !\u003d null) {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            builder.withGoogleId(studentData.getGoogleId());"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        if (studentData.getName() !\u003d null) {"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            builder.withName(studentData.getName());"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        if (studentData.getSectionName() !\u003d null) {"},{"lineNumber":492,"author":{"gitId":"-"},"content":"            builder.withSectionName(studentData.getSectionName());"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        if (studentData.getTeamName() !\u003d null) {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            builder.withTeamName(studentData.getTeamName());"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        if (studentData.getComments() !\u003d null) {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"            builder.withComment(studentData.getComments());"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d builder.build();"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        if (studentData.getKey() !\u003d null) {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            student.setKey(studentData.getKey());"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        return student;"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":508,"author":{"gitId":"-"},"content":"     * Get feedback session data from database."},{"lineNumber":509,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    public FeedbackSessionData getFeedbackSessionData(String courseId, String feedbackSessionName) {"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString());"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.SESSION, params);"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":517,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, FeedbackSessionData.class);"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":523,"author":{"gitId":"-"},"content":"     * Get feedback session from database."},{"lineNumber":524,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        FeedbackSessionData sessionData \u003d getFeedbackSessionData(courseId, feedbackSessionName);"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        if (sessionData \u003d\u003d null) {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes sessionAttributes \u003d FeedbackSessionAttributes"},{"lineNumber":532,"author":{"gitId":"-"},"content":"                .builder(sessionData.getFeedbackSessionName(), sessionData.getCourseId())"},{"lineNumber":533,"author":{"gitId":"-"},"content":"                .withInstructions(sessionData.getInstructions())"},{"lineNumber":534,"author":{"gitId":"-"},"content":"                .withStartTime(Instant.ofEpochMilli(sessionData.getSubmissionStartTimestamp()))"},{"lineNumber":535,"author":{"gitId":"-"},"content":"                .withEndTime(Instant.ofEpochMilli(sessionData.getSubmissionEndTimestamp()))"},{"lineNumber":536,"author":{"gitId":"-"},"content":"                .withTimeZone(sessionData.getTimeZone())"},{"lineNumber":537,"author":{"gitId":"-"},"content":"                .withGracePeriod(Duration.ofMinutes(sessionData.getGracePeriod()))"},{"lineNumber":538,"author":{"gitId":"-"},"content":"                .withIsClosingEmailEnabled(sessionData.getIsClosingEmailEnabled())"},{"lineNumber":539,"author":{"gitId":"-"},"content":"                .withIsPublishedEmailEnabled(sessionData.getIsPublishedEmailEnabled())"},{"lineNumber":540,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"        sessionAttributes.setCreatedTime(Instant.ofEpochMilli(sessionData.getCreatedAtTimestamp()));"},{"lineNumber":543,"author":{"gitId":"-"},"content":""},{"lineNumber":544,"author":{"gitId":"-"},"content":"        if (sessionData.getSessionVisibleSetting().equals(SessionVisibleSetting.AT_OPEN)) {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"            sessionAttributes.setSessionVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_OPENING);"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            sessionAttributes.setSessionVisibleFromTime(Instant.ofEpochMilli("},{"lineNumber":548,"author":{"gitId":"-"},"content":"                    sessionData.getCustomSessionVisibleTimestamp()));"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"        if (sessionData.getResponseVisibleSetting().equals(ResponseVisibleSetting.AT_VISIBLE)) {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"            sessionAttributes.setResultsVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_VISIBLE);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        } else if (sessionData.getResponseVisibleSetting().equals(ResponseVisibleSetting.LATER)) {"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            sessionAttributes.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"            sessionAttributes.setResultsVisibleFromTime(Instant.ofEpochMilli("},{"lineNumber":557,"author":{"gitId":"-"},"content":"                    sessionData.getCustomResponseVisibleTimestamp()));"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":559,"author":{"gitId":"-"},"content":""},{"lineNumber":560,"author":{"gitId":"-"},"content":"        return sessionAttributes;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":562,"author":{"gitId":"-"},"content":""},{"lineNumber":563,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":564,"author":{"gitId":"-"},"content":"     * Get soft deleted feedback session from database."},{"lineNumber":565,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    public FeedbackSessionAttributes getSoftDeletedSession(String feedbackSessionName, String instructorId) {"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.IS_IN_RECYCLE_BIN, \"true\");"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.USER_ID, instructorId);"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.SESSIONS, params);"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":573,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":575,"author":{"gitId":"-"},"content":""},{"lineNumber":576,"author":{"gitId":"-"},"content":"        FeedbackSessionsData sessionsData \u003d JsonUtils.fromJson(response.responseBody, FeedbackSessionsData.class);"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        FeedbackSessionData feedbackSession \u003d sessionsData.getFeedbackSessions()"},{"lineNumber":578,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":579,"author":{"gitId":"-"},"content":"                .filter(fs -\u003e fs.getFeedbackSessionName().equals(feedbackSessionName))"},{"lineNumber":580,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":581,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":582,"author":{"gitId":"-"},"content":""},{"lineNumber":583,"author":{"gitId":"-"},"content":"        if (feedbackSession \u003d\u003d null) {"},{"lineNumber":584,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"        return FeedbackSessionAttributes"},{"lineNumber":588,"author":{"gitId":"-"},"content":"                .builder(feedbackSession.getCourseId(), feedbackSession.getFeedbackSessionName())"},{"lineNumber":589,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":590,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":591,"author":{"gitId":"-"},"content":""},{"lineNumber":592,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":593,"author":{"gitId":"-"},"content":"     * Get feedback question from database."},{"lineNumber":594,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":595,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes getFeedbackQuestion(String courseId, String feedbackSessionName,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"                                                                 int qnNumber) {"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString());"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.QUESTIONS, params);"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":603,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":605,"author":{"gitId":"-"},"content":""},{"lineNumber":606,"author":{"gitId":"-"},"content":"        FeedbackQuestionsData questionsData \u003d JsonUtils.fromJson(response.responseBody, FeedbackQuestionsData.class);"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        FeedbackQuestionData question \u003d questionsData.getQuestions()"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":609,"author":{"gitId":"-"},"content":"                .filter(fq -\u003e fq.getQuestionNumber() \u003d\u003d qnNumber)"},{"lineNumber":610,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":611,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":612,"author":{"gitId":"-"},"content":""},{"lineNumber":613,"author":{"gitId":"-"},"content":"        if (question \u003d\u003d null) {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionAttr \u003d FeedbackQuestionAttributes.builder()"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                .withCourseId(courseId)"},{"lineNumber":619,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(feedbackSessionName)"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                .withQuestionDetails(question.getQuestionDetails())"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                .withQuestionDescription(question.getQuestionDescription())"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                .withQuestionNumber(question.getQuestionNumber())"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                .withGiverType(question.getGiverType())"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                .withRecipientType(question.getRecipientType())"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                .withNumberOfEntitiesToGiveFeedbackTo(question.getNumberOfEntitiesToGiveFeedbackToSetting()"},{"lineNumber":626,"author":{"gitId":"-"},"content":"                        .equals(NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED)"},{"lineNumber":627,"author":{"gitId":"-"},"content":"                        ? Const.MAX_POSSIBLE_RECIPIENTS"},{"lineNumber":628,"author":{"gitId":"-"},"content":"                        : question.getCustomNumberOfEntitiesToGiveFeedbackTo())"},{"lineNumber":629,"author":{"gitId":"-"},"content":"                .withShowResponsesTo(convertToFeedbackParticipantType(question.getShowResponsesTo()))"},{"lineNumber":630,"author":{"gitId":"-"},"content":"                .withShowGiverNameTo(convertToFeedbackParticipantType(question.getShowGiverNameTo()))"},{"lineNumber":631,"author":{"gitId":"-"},"content":"                .withShowRecipientNameTo(convertToFeedbackParticipantType(question.getShowRecipientNameTo()))"},{"lineNumber":632,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        if (question.getFeedbackQuestionId() !\u003d null) {"},{"lineNumber":634,"author":{"gitId":"-"},"content":"            questionAttr.setId(question.getFeedbackQuestionId());"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":636,"author":{"gitId":"-"},"content":"        return questionAttr;"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":638,"author":{"gitId":"-"},"content":""},{"lineNumber":639,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":640,"author":{"gitId":"-"},"content":"     * Converts List of FeedbackParticipantType to sorted List of FeedbackVisibilityType."},{"lineNumber":641,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    private static List\u003cFeedbackParticipantType\u003e convertToFeedbackParticipantType("},{"lineNumber":643,"author":{"gitId":"-"},"content":"            List\u003cFeedbackVisibilityType\u003e feedbackVisibilityTypeList) {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e feedbackParticipantTypeList \u003d feedbackVisibilityTypeList.stream()"},{"lineNumber":645,"author":{"gitId":"-"},"content":"                .map(feedbackParticipantType -\u003e {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"                    switch (feedbackParticipantType) {"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                    case STUDENTS:"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.STUDENTS;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"                    case INSTRUCTORS:"},{"lineNumber":650,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.INSTRUCTORS;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                    case RECIPIENT:"},{"lineNumber":652,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.RECEIVER;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"                    case GIVER_TEAM_MEMBERS:"},{"lineNumber":654,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.OWN_TEAM_MEMBERS;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"                    case RECIPIENT_TEAM_MEMBERS:"},{"lineNumber":656,"author":{"gitId":"-"},"content":"                        return FeedbackParticipantType.RECEIVER_TEAM_MEMBERS;"},{"lineNumber":657,"author":{"gitId":"-"},"content":"                    default:"},{"lineNumber":658,"author":{"gitId":"-"},"content":"                        throw new RuntimeException(\"Unknown FeedbackVisibilityType \" + feedbackParticipantType);"},{"lineNumber":659,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":660,"author":{"gitId":"-"},"content":"                }).collect(Collectors.toList());"},{"lineNumber":661,"author":{"gitId":"-"},"content":"        Collections.sort(feedbackParticipantTypeList);"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        return feedbackParticipantTypeList;"},{"lineNumber":663,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":664,"author":{"gitId":"-"},"content":""},{"lineNumber":665,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":666,"author":{"gitId":"-"},"content":"     * Get feedback response from database."},{"lineNumber":667,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":668,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId, String giver,"},{"lineNumber":669,"author":{"gitId":"-"},"content":"                                                                 String recipient) {"},{"lineNumber":670,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_QUESTION_ID, feedbackQuestionId);"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString());"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, giver);"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.RESPONSES, params);"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":676,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":678,"author":{"gitId":"-"},"content":""},{"lineNumber":679,"author":{"gitId":"-"},"content":"        FeedbackResponsesData responsesData \u003d JsonUtils.fromJson(response.responseBody, FeedbackResponsesData.class);"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        FeedbackResponseData fr \u003d responsesData.getResponses()"},{"lineNumber":681,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":682,"author":{"gitId":"-"},"content":"                .filter(r -\u003e r.getGiverIdentifier().equals(giver) \u0026\u0026 r.getRecipientIdentifier().equals(recipient))"},{"lineNumber":683,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":684,"author":{"gitId":"-"},"content":"                .orElse(null);"},{"lineNumber":685,"author":{"gitId":"-"},"content":""},{"lineNumber":686,"author":{"gitId":"-"},"content":"        if (fr \u003d\u003d null) {"},{"lineNumber":687,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes responseAttr \u003d FeedbackResponseAttributes"},{"lineNumber":691,"author":{"gitId":"-"},"content":"                .builder(feedbackQuestionId, fr.getGiverIdentifier(), fr.getRecipientIdentifier())"},{"lineNumber":692,"author":{"gitId":"-"},"content":"                .withResponseDetails(fr.getResponseDetails())"},{"lineNumber":693,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        if (fr.getFeedbackResponseId() !\u003d null) {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"            responseAttr.setId(fr.getFeedbackResponseId());"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":697,"author":{"gitId":"-"},"content":"        return responseAttr;"},{"lineNumber":698,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":701,"author":{"gitId":"-"},"content":"     * Get feedback response comment from database."},{"lineNumber":702,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    public FeedbackResponseCommentAttributes getFeedbackResponseComment(String feedbackResponseId) {"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":705,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.FEEDBACK_RESPONSE_ID, feedbackResponseId);"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString());"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.RESPONSE_COMMENT, params);"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":709,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"        FeedbackResponseCommentData frc \u003d JsonUtils.fromJson(response.responseBody, FeedbackResponseCommentData.class);"},{"lineNumber":713,"author":{"gitId":"-"},"content":""},{"lineNumber":714,"author":{"gitId":"-"},"content":"        if (frc \u003d\u003d null) {"},{"lineNumber":715,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":716,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"-"},"content":"        return FeedbackResponseCommentAttributes.builder()"},{"lineNumber":719,"author":{"gitId":"-"},"content":"                .withCommentGiver(frc.getCommentGiver())"},{"lineNumber":720,"author":{"gitId":"-"},"content":"                .withCommentText(frc.getCommentText())"},{"lineNumber":721,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":722,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":723,"author":{"gitId":"-"},"content":""},{"lineNumber":724,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":725,"author":{"gitId":"-"},"content":"     * Deletes a course from the database."},{"lineNumber":726,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":727,"author":{"gitId":"-"},"content":"    public void deleteCourse(String courseId) {"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.COURSE_ID, courseId);"},{"lineNumber":730,"author":{"gitId":"-"},"content":"        executeDeleteRequest(Const.ResourceURIs.COURSE, params);"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":732,"author":{"gitId":"-"},"content":""},{"lineNumber":733,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":734,"author":{"gitId":"-"},"content":"     * Gets an account request from the database."},{"lineNumber":735,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":736,"author":{"gitId":"-"},"content":"    public AccountRequestAttributes getAccountRequest(String email, String institute) {"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":739,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":740,"author":{"gitId":"-"},"content":""},{"lineNumber":741,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.ACCOUNT_REQUEST, params);"},{"lineNumber":742,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":743,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"-"},"content":"        AccountRequestData accountRequestData \u003d JsonUtils.fromJson(response.responseBody, AccountRequestData.class);"},{"lineNumber":747,"author":{"gitId":"-"},"content":""},{"lineNumber":748,"author":{"gitId":"-"},"content":"        return AccountRequestAttributes"},{"lineNumber":749,"author":{"gitId":"-"},"content":"                .builder(accountRequestData.getEmail(), accountRequestData.getInstitute(), accountRequestData.getName())"},{"lineNumber":750,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":751,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":752,"author":{"gitId":"-"},"content":""},{"lineNumber":753,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":754,"author":{"gitId":"-"},"content":"     * Gets registration key of an account request from the database."},{"lineNumber":755,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":756,"author":{"gitId":"-"},"content":"    public String getRegKeyForAccountRequest(String email, String institute) {"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":759,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":760,"author":{"gitId":"-"},"content":""},{"lineNumber":761,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.ACCOUNT_REQUEST, params);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":763,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":764,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":765,"author":{"gitId":"-"},"content":""},{"lineNumber":766,"author":{"gitId":"-"},"content":"        return JsonUtils.fromJson(response.responseBody, AccountRequestData.class).getRegistrationKey();"},{"lineNumber":767,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":768,"author":{"gitId":"-"},"content":""},{"lineNumber":769,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":770,"author":{"gitId":"-"},"content":"     * Deletes an account request from the database."},{"lineNumber":771,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":772,"author":{"gitId":"-"},"content":"    public void deleteAccountRequest(String email, String institute) {"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_EMAIL, email);"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        params.put(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        executeDeleteRequest(Const.ResourceURIs.ACCOUNT_REQUEST, params);"},{"lineNumber":777,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":780,"author":{"gitId":"Nicolascwy"},"content":"     * Gets notification data from the database."},{"lineNumber":781,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":782,"author":{"gitId":"Nicolascwy"},"content":"    public NotificationData getNotificationData(String notificationId) {"},{"lineNumber":783,"author":{"gitId":"Nicolascwy"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":784,"author":{"gitId":"Nicolascwy"},"content":"        params.put(Const.ParamsNames.NOTIFICATION_ID, notificationId);"},{"lineNumber":785,"author":{"gitId":"Nicolascwy"},"content":"        ResponseBodyAndCode response \u003d executeGetRequest(Const.ResourceURIs.NOTIFICATION, params);"},{"lineNumber":786,"author":{"gitId":"Nicolascwy"},"content":"        if (response.responseCode \u003d\u003d HttpStatus.SC_NOT_FOUND) {"},{"lineNumber":787,"author":{"gitId":"Nicolascwy"},"content":"            return null;"},{"lineNumber":788,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":789,"author":{"gitId":"Nicolascwy"},"content":"        return JsonUtils.fromJson(response.responseBody, NotificationData.class);"},{"lineNumber":790,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":791,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":792,"author":{"gitId":"Nicolascwy"},"content":"    /**"},{"lineNumber":793,"author":{"gitId":"Nicolascwy"},"content":"     * Gets a notification from the database."},{"lineNumber":794,"author":{"gitId":"Nicolascwy"},"content":"     */"},{"lineNumber":795,"author":{"gitId":"Nicolascwy"},"content":"    public NotificationAttributes getNotification(String notificationId) {"},{"lineNumber":796,"author":{"gitId":"Nicolascwy"},"content":"        NotificationData notificationData \u003d getNotificationData(notificationId);"},{"lineNumber":797,"author":{"gitId":"Nicolascwy"},"content":"        if (notificationData \u003d\u003d null) {"},{"lineNumber":798,"author":{"gitId":"Nicolascwy"},"content":"            return null;"},{"lineNumber":799,"author":{"gitId":"Nicolascwy"},"content":"        }"},{"lineNumber":800,"author":{"gitId":"zhaojj2209"},"content":"        NotificationAttributes notification \u003d NotificationAttributes.builder(notificationData.getNotificationId())"},{"lineNumber":801,"author":{"gitId":"Nicolascwy"},"content":"                .withStartTime(Instant.ofEpochMilli(notificationData.getStartTimestamp()))"},{"lineNumber":802,"author":{"gitId":"Nicolascwy"},"content":"                .withEndTime(Instant.ofEpochMilli(notificationData.getEndTimestamp()))"},{"lineNumber":803,"author":{"gitId":"fsgmhoward"},"content":"                .withStyle(notificationData.getStyle())"},{"lineNumber":804,"author":{"gitId":"Nicolascwy"},"content":"                .withTargetUser(notificationData.getTargetUser())"},{"lineNumber":805,"author":{"gitId":"Nicolascwy"},"content":"                .withTitle(notificationData.getTitle())"},{"lineNumber":806,"author":{"gitId":"Nicolascwy"},"content":"                .withMessage(notificationData.getMessage())"},{"lineNumber":807,"author":{"gitId":"Nicolascwy"},"content":"                .build();"},{"lineNumber":808,"author":{"gitId":"zhaojj2209"},"content":"        notification.setCreatedAt(Instant.ofEpochMilli(notificationData.getCreatedAt()));"},{"lineNumber":809,"author":{"gitId":"zhaojj2209"},"content":"        notification.setUpdatedAt(Instant.ofEpochMilli(notificationData.getUpdatedAt()));"},{"lineNumber":810,"author":{"gitId":"zhaojj2209"},"content":"        return notification;"},{"lineNumber":811,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":812,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"    private static final class ResponseBodyAndCode {"},{"lineNumber":814,"author":{"gitId":"-"},"content":""},{"lineNumber":815,"author":{"gitId":"-"},"content":"        String responseBody;"},{"lineNumber":816,"author":{"gitId":"-"},"content":"        int responseCode;"},{"lineNumber":817,"author":{"gitId":"-"},"content":""},{"lineNumber":818,"author":{"gitId":"-"},"content":"        ResponseBodyAndCode(String responseBody, int responseCode) {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"            this.responseBody \u003d responseBody;"},{"lineNumber":820,"author":{"gitId":"-"},"content":"            this.responseCode \u003d responseCode;"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":822,"author":{"gitId":"-"},"content":""},{"lineNumber":823,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":824,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":4,"fsgmhoward":1,"-":788,"Nicolascwy":31}},{"path":"src/test/java/teammates/test/BaseTestCaseWithDatabaseAccess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.DeadlineExtensionAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.EntityAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Base class for all test cases which are allowed to access the database."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public abstract class BaseTestCaseWithDatabaseAccess extends BaseTestCase {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final int VERIFICATION_RETRY_COUNT \u003d 5;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final int VERIFICATION_RETRY_DELAY_IN_MS \u003d 1000;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final int OPERATION_RETRY_COUNT \u003d 5;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final int OPERATION_RETRY_DELAY_IN_MS \u003d 1000;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    protected void verifyPresentInDatabase(DataBundle data) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        data.accounts.values().forEach(this::verifyPresentInDatabase);"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        data.instructors.values().forEach(this::verifyPresentInDatabase);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        data.courses.values().stream()"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .filter(course -\u003e !course.isCourseDeleted())"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .forEach(this::verifyPresentInDatabase);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        data.students.values().forEach(this::verifyPresentInDatabase);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    protected void verifyPresentInDatabase(EntityAttributes\u003c?\u003e expected) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        int retryLimit \u003d VERIFICATION_RETRY_COUNT;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EntityAttributes\u003c?\u003e actual \u003d getEntity(expected);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        while (actual \u003d\u003d null \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(VERIFICATION_RETRY_DELAY_IN_MS);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            actual \u003d getEntity(expected);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        verifyEquals(expected, actual);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private EntityAttributes\u003c?\u003e getEntity(EntityAttributes\u003c?\u003e expected) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (expected instanceof AccountAttributes) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return getAccount((AccountAttributes) expected);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentProfileAttributes) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return getStudentProfile((StudentProfileAttributes) expected);"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } else if (expected instanceof CourseAttributes) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return getCourse((CourseAttributes) expected);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackQuestionAttributes) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return getFeedbackQuestion((FeedbackQuestionAttributes) expected);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseCommentAttributes) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return getFeedbackResponseComment((FeedbackResponseCommentAttributes) expected);"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseAttributes) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return getFeedbackResponse((FeedbackResponseAttributes) expected);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackSessionAttributes) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return getFeedbackSession((FeedbackSessionAttributes) expected);"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } else if (expected instanceof InstructorAttributes) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return getInstructor((InstructorAttributes) expected);"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentAttributes) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return getStudent((StudentAttributes) expected);"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        } else if (expected instanceof AccountRequestAttributes) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return getAccountRequest((AccountRequestAttributes) expected);"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } else if (expected instanceof DeadlineExtensionAttributes) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return getDeadlineExtension((DeadlineExtensionAttributes) expected);"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"        } else if (expected instanceof NotificationAttributes) {"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"            return getNotification((NotificationAttributes) expected);"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Unknown entity type!\");"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    protected void verifyAbsentInDatabase(EntityAttributes\u003c?\u003e entity) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        int retryLimit \u003d VERIFICATION_RETRY_COUNT;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EntityAttributes\u003c?\u003e actual \u003d getEntity(entity);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        while (actual !\u003d null \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(VERIFICATION_RETRY_DELAY_IN_MS);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            actual \u003d getEntity(entity);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertNull(actual);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void verifyEquals(EntityAttributes\u003c?\u003e expected, EntityAttributes\u003c?\u003e actual) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (expected instanceof AccountAttributes) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            AccountAttributes expectedAccount \u003d ((AccountAttributes) expected).getCopy();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            AccountAttributes actualAccount \u003d (AccountAttributes) actual;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedAccount, actualAccount);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedAccount), JsonUtils.toJson(actualAccount));"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentProfileAttributes) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            StudentProfileAttributes expectedProfile \u003d ((StudentProfileAttributes) expected).getCopy();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            StudentProfileAttributes actualProfile \u003d (StudentProfileAttributes) actual;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedProfile, actualProfile);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedProfile), JsonUtils.toJson(actualProfile));"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } else if (expected instanceof CourseAttributes) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            CourseAttributes expectedCourse \u003d (CourseAttributes) expected;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            CourseAttributes actualCourse \u003d (CourseAttributes) actual;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedCourse, actualCourse);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedCourse), JsonUtils.toJson(actualCourse));"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackQuestionAttributes) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes expectedFq \u003d (FeedbackQuestionAttributes) expected;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes actualFq \u003d (FeedbackQuestionAttributes) actual;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedFq, actualFq);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedFq), JsonUtils.toJson(actualFq));"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseCommentAttributes) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes expectedFrc \u003d (FeedbackResponseCommentAttributes) expected;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            FeedbackResponseCommentAttributes actualFrc \u003d (FeedbackResponseCommentAttributes) actual;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getCourseId(), actualFrc.getCourseId());"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getCommentGiver(), actualFrc.getCommentGiver());"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getFeedbackSessionName(), actualFrc.getFeedbackSessionName());"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            assertEquals(expectedFrc.getCommentText(), actualFrc.getCommentText());"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackResponseAttributes) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            FeedbackResponseAttributes expectedFr \u003d (FeedbackResponseAttributes) expected;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            FeedbackResponseAttributes actualFr \u003d (FeedbackResponseAttributes) actual;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedFr, actualFr);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedFr), JsonUtils.toJson(actualFr));"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } else if (expected instanceof FeedbackSessionAttributes) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes expectedFs \u003d ((FeedbackSessionAttributes) expected).getCopy();"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes actualFs \u003d (FeedbackSessionAttributes) actual;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedFs, actualFs);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedFs), JsonUtils.toJson(actualFs));"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else if (expected instanceof InstructorAttributes) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            InstructorAttributes expectedInstructor \u003d ((InstructorAttributes) expected).getCopy();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            InstructorAttributes actualInstructor \u003d (InstructorAttributes) actual;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedInstructor, actualInstructor);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedInstructor), JsonUtils.toJson(actualInstructor));"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else if (expected instanceof StudentAttributes) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            StudentAttributes expectedStudent \u003d ((StudentAttributes) expected).getCopy();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            StudentAttributes actualStudent \u003d (StudentAttributes) actual;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedStudent, actualStudent);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedStudent), JsonUtils.toJson(actualStudent));"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else if (expected instanceof AccountRequestAttributes) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            AccountRequestAttributes expectedAccountRequest \u003d (AccountRequestAttributes) expected;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            AccountRequestAttributes actualAccountRequest \u003d (AccountRequestAttributes) actual;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedAccountRequest), JsonUtils.toJson(actualAccountRequest));"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } else if (expected instanceof DeadlineExtensionAttributes) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            DeadlineExtensionAttributes expectedDeadlineExtension \u003d (DeadlineExtensionAttributes) expected;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            DeadlineExtensionAttributes actualDeadlineExtension \u003d (DeadlineExtensionAttributes) actual;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            equalizeIrrelevantData(expectedDeadlineExtension, actualDeadlineExtension);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            assertEquals(JsonUtils.toJson(expectedDeadlineExtension), JsonUtils.toJson(actualDeadlineExtension));"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"Nicolascwy"},"content":"        } else if (expected instanceof NotificationAttributes) {"},{"lineNumber":174,"author":{"gitId":"Nicolascwy"},"content":"            NotificationAttributes expectedNotification \u003d (NotificationAttributes) expected;"},{"lineNumber":175,"author":{"gitId":"Nicolascwy"},"content":"            NotificationAttributes actualNotification \u003d (NotificationAttributes) actual;"},{"lineNumber":176,"author":{"gitId":"Nicolascwy"},"content":"            equalizeIrrelevantData(expectedNotification, actualNotification);"},{"lineNumber":177,"author":{"gitId":"Nicolascwy"},"content":"            assertEquals(JsonUtils.toJson(expectedNotification), JsonUtils.toJson(actualNotification));"},{"lineNumber":178,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new RuntimeException(\"Unknown entity type!\");"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    protected abstract AccountAttributes getAccount(AccountAttributes account);"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(AccountAttributes expected, AccountAttributes actual) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // Ignore time field as it is stamped at the time of creation in testing"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        expected.setCreatedAt(actual.getCreatedAt());"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(StudentProfileAttributes expected, StudentProfileAttributes actual) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        expected.setModifiedDate(actual.getModifiedDate());"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(CourseAttributes expected, CourseAttributes actual) {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // Ignore time field as it is stamped at the time of creation in testing"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expected.setCreatedAt(actual.getCreatedAt());"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(FeedbackQuestionAttributes expected, FeedbackQuestionAttributes actual) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        expected.setId(actual.getId());"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(FeedbackResponseAttributes expected, FeedbackResponseAttributes actual) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        expected.setId(actual.getId());"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(FeedbackSessionAttributes expected, FeedbackSessionAttributes actual) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        expected.setCreatedTime(actual.getCreatedTime());"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // Not available in FeedbackSessionData and thus ignored"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        expected.setCreatorEmail(actual.getCreatorEmail());"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(InstructorAttributes expected, InstructorAttributes actual) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // pretend keys match because the key is generated only before storing into database"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (actual.getKey() !\u003d null) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            expected.setKey(actual.getKey());"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(StudentAttributes expected, StudentAttributes actual) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // For these fields, we consider null and \"\" equivalent."},{"lineNumber":223,"author":{"gitId":"-"},"content":"        if (expected.getGoogleId() \u003d\u003d null \u0026\u0026 actual.getGoogleId().isEmpty()) {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            expected.setGoogleId(\"\");"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (expected.getTeam() \u003d\u003d null \u0026\u0026 actual.getTeam().isEmpty()) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            expected.setTeam(\"\");"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        if (expected.getComments() \u003d\u003d null \u0026\u0026 actual.getComments().isEmpty()) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            expected.setComments(\"\");"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // pretend keys match because the key is generated only before storing into database"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (actual.getKey() !\u003d null) {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            expected.setKey(actual.getKey());"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    private void equalizeIrrelevantData(DeadlineExtensionAttributes expected, DeadlineExtensionAttributes actual) {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // Ignore time field as it is stamped at the time of creation in testing"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        expected.setCreatedAt(actual.getCreatedAt());"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        expected.setUpdatedAt(actual.getUpdatedAt());"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"Nicolascwy"},"content":"    private void equalizeIrrelevantData(NotificationAttributes expected, NotificationAttributes actual) {"},{"lineNumber":246,"author":{"gitId":"Nicolascwy"},"content":"        // Ignore time field as it is stamped at the time of creation in testing"},{"lineNumber":247,"author":{"gitId":"Nicolascwy"},"content":"        expected.setCreatedAt(actual.getCreatedAt());"},{"lineNumber":248,"author":{"gitId":"Nicolascwy"},"content":"        expected.setUpdatedAt(actual.getUpdatedAt());"},{"lineNumber":249,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    protected abstract StudentProfileAttributes getStudentProfile(StudentProfileAttributes studentProfileAttributes);"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    protected abstract CourseAttributes getCourse(CourseAttributes course);"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    protected abstract FeedbackQuestionAttributes getFeedbackQuestion(FeedbackQuestionAttributes fq);"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"    protected abstract FeedbackResponseCommentAttributes getFeedbackResponseComment(FeedbackResponseCommentAttributes frc);"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    protected abstract FeedbackResponseAttributes getFeedbackResponse(FeedbackResponseAttributes fr);"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    protected abstract FeedbackSessionAttributes getFeedbackSession(FeedbackSessionAttributes fs);"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"    protected abstract InstructorAttributes getInstructor(InstructorAttributes instructor);"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    protected abstract StudentAttributes getStudent(StudentAttributes student);"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"    protected abstract AccountRequestAttributes getAccountRequest(AccountRequestAttributes accountRequest);"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    protected abstract DeadlineExtensionAttributes getDeadlineExtension(DeadlineExtensionAttributes accountRequest);"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"Nicolascwy"},"content":"    protected abstract NotificationAttributes getNotification(NotificationAttributes notification);"},{"lineNumber":272,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    protected void removeAndRestoreDataBundle(DataBundle testData) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        int retryLimit \u003d OPERATION_RETRY_COUNT;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        boolean isOperationSuccess \u003d doRemoveAndRestoreDataBundle(testData);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        while (!isOperationSuccess \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            print(\"Re-trying removeAndRestoreDataBundle\");"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(OPERATION_RETRY_DELAY_IN_MS);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            isOperationSuccess \u003d doRemoveAndRestoreDataBundle(testData);"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertTrue(isOperationSuccess);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    protected abstract boolean doRemoveAndRestoreDataBundle(DataBundle testData);"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"    protected void putDocuments(DataBundle testData) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        int retryLimit \u003d OPERATION_RETRY_COUNT;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        boolean isOperationSuccess \u003d doPutDocuments(testData);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        while (!isOperationSuccess \u0026\u0026 retryLimit \u003e 0) {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            retryLimit--;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            print(\"Re-trying putDocuments\");"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            ThreadHelper.waitFor(OPERATION_RETRY_DELAY_IN_MS);"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            isOperationSuccess \u003d doPutDocuments(testData);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        assertTrue(isOperationSuccess);"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"    protected abstract boolean doPutDocuments(DataBundle testData);"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":283,"Nicolascwy":18}},{"path":"src/test/java/teammates/test/BaseTestCaseWithLocalDatabaseAccess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterClass;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.testng.annotations.AfterSuite;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeSuite;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.DatastoreOptions;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.cloud.datastore.testing.LocalDatastoreHelper;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyFactory;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.ObjectifyService;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.googlecode.objectify.util.Closeable;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountRequestAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.DeadlineExtensionAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentProfileAttributes;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.logic.api.LogicExtension;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.logic.core.LogicStarter;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.storage.api.OfyHelper;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.storage.search.AccountRequestSearchManager;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.storage.search.InstructorSearchManager;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.storage.search.SearchManagerFactory;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.storage.search.StudentSearchManager;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Base class for all tests which require access to a locally run database."},{"lineNumber":38,"author":{"gitId":"-"},"content":" *"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * \u003cp\u003eAs all tests are run against a single DB instance and we use shared test data for most tests,"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * the tests need to be run in a single thread to prevent test data contamination across different tests."},{"lineNumber":41,"author":{"gitId":"-"},"content":" */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"@Test(singleThreaded \u003d true)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public abstract class BaseTestCaseWithLocalDatabaseAccess extends BaseTestCaseWithDatabaseAccess {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final LocalDatastoreHelper LOCAL_DATASTORE_HELPER \u003d LocalDatastoreHelper.newBuilder()"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .setConsistency(1.0)"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .setPort(TestProperties.TEST_LOCALDATASTORE_PORT)"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .setStoreOnDisk(false)"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .build();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final LogicExtension logic \u003d new LogicExtension();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Closeable closeable;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @BeforeSuite"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setupDbLayer() throws Exception {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        LOCAL_DATASTORE_HELPER.start();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DatastoreOptions options \u003d LOCAL_DATASTORE_HELPER.getOptions();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ObjectifyService.init(new ObjectifyFactory("},{"lineNumber":57,"author":{"gitId":"-"},"content":"                options.getService()"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ));"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        OfyHelper.registerEntityClasses();"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        SearchManagerFactory.registerAccountRequestSearchManager("},{"lineNumber":62,"author":{"gitId":"-"},"content":"                new AccountRequestSearchManager(TestProperties.SEARCH_SERVICE_HOST, true));"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        SearchManagerFactory.registerInstructorSearchManager("},{"lineNumber":64,"author":{"gitId":"-"},"content":"                new InstructorSearchManager(TestProperties.SEARCH_SERVICE_HOST, true));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        SearchManagerFactory.registerStudentSearchManager("},{"lineNumber":66,"author":{"gitId":"-"},"content":"                new StudentSearchManager(TestProperties.SEARCH_SERVICE_HOST, true));"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        LogicStarter.initializeDependencies();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setupObjectify() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        closeable \u003d ObjectifyService.begin();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void tearDownObjectify() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        closeable.close();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void resetDbLayer() throws Exception {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        SearchManagerFactory.getAccountRequestSearchManager().resetCollections();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        SearchManagerFactory.getInstructorSearchManager().resetCollections();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        SearchManagerFactory.getStudentSearchManager().resetCollections();"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        LOCAL_DATASTORE_HELPER.reset();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @AfterSuite"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void tearDownLocalDatastoreHelper() throws Exception {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        LOCAL_DATASTORE_HELPER.stop();"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    protected AccountAttributes getAccount(AccountAttributes account) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return logic.getAccount(account.getGoogleId());"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    protected StudentProfileAttributes getStudentProfile(StudentProfileAttributes studentProfileAttributes) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return logic.getStudentProfile(studentProfileAttributes.getGoogleId());"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected CourseAttributes getCourse(CourseAttributes course) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return logic.getCourse(course.getId());"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    protected FeedbackQuestionAttributes getFeedbackQuestion(FeedbackQuestionAttributes fq) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return logic.getFeedbackQuestion(fq.getFeedbackSessionName(), fq.getCourseId(), fq.getQuestionNumber());"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    protected FeedbackResponseCommentAttributes getFeedbackResponseComment(FeedbackResponseCommentAttributes frc) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return logic.getFeedbackResponseComment(frc.getFeedbackResponseId(), frc.getCommentGiver(), frc.getCreatedAt());"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    protected FeedbackResponseAttributes getFeedbackResponse(FeedbackResponseAttributes fr) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return logic.getFeedbackResponse(fr.getFeedbackQuestionId(), fr.getGiver(), fr.getRecipient());"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    protected FeedbackSessionAttributes getFeedbackSession(FeedbackSessionAttributes fs) {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return logic.getFeedbackSession(fs.getFeedbackSessionName(), fs.getCourseId());"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    protected InstructorAttributes getInstructor(InstructorAttributes instructor) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return instructor.getGoogleId() \u003d\u003d null"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                ? logic.getInstructorForEmail(instructor.getCourseId(), instructor.getEmail())"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                : logic.getInstructorForGoogleId(instructor.getCourseId(), instructor.getGoogleId());"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    protected StudentAttributes getStudent(StudentAttributes student) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return logic.getStudentForEmail(student.getCourse(), student.getEmail());"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected AccountRequestAttributes getAccountRequest(AccountRequestAttributes accountRequest) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return logic.getAccountRequest(accountRequest.getEmail(), accountRequest.getInstitute());"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    protected DeadlineExtensionAttributes getDeadlineExtension(DeadlineExtensionAttributes deadlineExtension) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return logic.getDeadlineExtension("},{"lineNumber":150,"author":{"gitId":"-"},"content":"                deadlineExtension.getCourseId(), deadlineExtension.getFeedbackSessionName(),"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                deadlineExtension.getUserEmail(), deadlineExtension.getIsInstructor());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":155,"author":{"gitId":"Nicolascwy"},"content":"    protected NotificationAttributes getNotification(NotificationAttributes notification) {"},{"lineNumber":156,"author":{"gitId":"Nicolascwy"},"content":"        return logic.getNotification(notification.getNotificationId());"},{"lineNumber":157,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected void removeAndRestoreTypicalDataBundle() {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        DataBundle dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(dataBundle);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected boolean doRemoveAndRestoreDataBundle(DataBundle dataBundle) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logic.removeDataBundle(dataBundle);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logic.persistDataBundle(dataBundle);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    protected boolean doPutDocuments(DataBundle dataBundle) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logic.putDocuments(dataBundle);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":181,"Nicolascwy":6}},{"path":"src/test/java/teammates/ui/webapi/CreateNotificationActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Const;"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.output.NotificationData;"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.NotificationCreateRequest;"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":" * SUT: {@link CreateNotificationAction}."},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":"public class CreateNotificationActionTest extends BaseActionTest\u003cCreateNotificationAction\u003e {"},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":"    private static final String TEST_NOTIFICATION \u003d \"notification1\";"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"    private final NotificationAttributes testNotificationAttribute \u003d typicalBundle.notifications.get(TEST_NOTIFICATION);"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"    String getActionUri() {"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"        return Const.ResourceURIs.NOTIFICATION;"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"    String getRequestMethod() {"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"        return POST;"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"    protected void testExecute() throws Exception {"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"        long startTime \u003d testNotificationAttribute.getStartTime().toEpochMilli();"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"        long endTime \u003d testNotificationAttribute.getEndTime().toEpochMilli();"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"        NotificationStyle style \u003d testNotificationAttribute.getStyle();"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"        NotificationTargetUser targetUser \u003d testNotificationAttribute.getTargetUser();"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"        String title \u003d testNotificationAttribute.getTitle();"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"        String message \u003d testNotificationAttribute.getMessage();"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"        String invalidTitle \u003d \"\";"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"        loginAsAdmin();"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Typical Case: Add notification successfully\");"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"        NotificationCreateRequest req \u003d getTypicalCreateRequest();"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"        CreateNotificationAction action \u003d getAction(req);"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"        NotificationData res \u003d (NotificationData) action.execute().getOutput();"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"        NotificationAttributes createdNotification \u003d logic.getNotification(res.getNotificationId());"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":49,"author":{"gitId":"Nicolascwy"},"content":"        // check that notification returned has same properties as notification created"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(createdNotification.getStartTime().toEpochMilli(), res.getStartTimestamp());"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(createdNotification.getEndTime().toEpochMilli(), res.getEndTimestamp());"},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(createdNotification.getStyle(), res.getStyle());"},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(createdNotification.getTargetUser(), res.getTargetUser());"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(createdNotification.getTitle(), res.getTitle());"},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(createdNotification.getMessage(), res.getMessage());"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":"        // check DB correctly processed request"},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(startTime, createdNotification.getStartTime().toEpochMilli());"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(endTime, createdNotification.getEndTime().toEpochMilli());"},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(style, createdNotification.getStyle());"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(targetUser, createdNotification.getTargetUser());"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(title, createdNotification.getTitle());"},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(message, createdNotification.getMessage());"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Parameters cannot be null\");"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalCreateRequest();"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"        req.setStyle(null);"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"        InvalidHttpRequestBodyException ex \u003d verifyHttpRequestBodyFailure(req);"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(\"Notification style cannot be null\", ex.getMessage());"},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalCreateRequest();"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"        req.setTargetUser(null);"},{"lineNumber":73,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req);"},{"lineNumber":74,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Notification target user cannot be null\", ex.getMessage());"},{"lineNumber":75,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":76,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalCreateRequest();"},{"lineNumber":77,"author":{"gitId":"Nicolascwy"},"content":"        req.setTitle(null);"},{"lineNumber":78,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req);"},{"lineNumber":79,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Notification title cannot be null\", ex.getMessage());"},{"lineNumber":80,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":81,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalCreateRequest();"},{"lineNumber":82,"author":{"gitId":"Nicolascwy"},"content":"        req.setMessage(null);"},{"lineNumber":83,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req);"},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Notification message cannot be null\", ex.getMessage());"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Timestamps should be greater than 0\");"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalCreateRequest();"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"        req.setStartTimestamp(-1);"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req);"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Start timestamp should be greater than zero\", ex.getMessage());"},{"lineNumber":91,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":92,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalCreateRequest();"},{"lineNumber":93,"author":{"gitId":"Nicolascwy"},"content":"        req.setEndTimestamp(-1);"},{"lineNumber":94,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req);"},{"lineNumber":95,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"End timestamp should be greater than zero\", ex.getMessage());"},{"lineNumber":96,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":97,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Invalid parameter should throw an error\");"},{"lineNumber":98,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalCreateRequest();"},{"lineNumber":99,"author":{"gitId":"Nicolascwy"},"content":"        req.setTitle(invalidTitle);"},{"lineNumber":100,"author":{"gitId":"Nicolascwy"},"content":"        verifyHttpRequestBodyFailure(req);"},{"lineNumber":101,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":103,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"Nicolascwy"},"content":"    protected void testAccessControl() throws Exception {"},{"lineNumber":106,"author":{"gitId":"Nicolascwy"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":107,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":109,"author":{"gitId":"Nicolascwy"},"content":"    private NotificationCreateRequest getTypicalCreateRequest() {"},{"lineNumber":110,"author":{"gitId":"Nicolascwy"},"content":"        NotificationCreateRequest req \u003d new NotificationCreateRequest();"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":112,"author":{"gitId":"Nicolascwy"},"content":"        req.setStartTimestamp(testNotificationAttribute.getStartTime().toEpochMilli());"},{"lineNumber":113,"author":{"gitId":"Nicolascwy"},"content":"        req.setEndTimestamp(testNotificationAttribute.getEndTime().toEpochMilli());"},{"lineNumber":114,"author":{"gitId":"fsgmhoward"},"content":"        req.setStyle(testNotificationAttribute.getStyle());"},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":"        req.setTargetUser(testNotificationAttribute.getTargetUser());"},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":"        req.setTitle(testNotificationAttribute.getTitle());"},{"lineNumber":117,"author":{"gitId":"Nicolascwy"},"content":"        req.setMessage(testNotificationAttribute.getMessage());"},{"lineNumber":118,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":"        return req;"},{"lineNumber":120,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"fsgmhoward":7,"Nicolascwy":114}},{"path":"src/test/java/teammates/ui/webapi/DeleteNotificationActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.output.MessageOutput;"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":" * SUT: {@link DeleteNotificationAction}."},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"public class DeleteNotificationActionTest extends BaseActionTest\u003cDeleteNotificationAction\u003e {"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"    String getActionUri() {"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":"        return Const.ResourceURIs.NOTIFICATION;"},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"    String getRequestMethod() {"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"        return DELETE;"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"    protected void testExecute() throws Exception {"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"        NotificationAttributes testNotificationAttribute \u003d typicalBundle.notifications.get(\"notification1\");"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"        loginAsAdmin();"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Typical Case: Delete notification successfully\");"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"        String[] requestParams \u003d new String[] {"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"                Const.ParamsNames.NOTIFICATION_ID, testNotificationAttribute.getNotificationId(),"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"        };"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"        DeleteNotificationAction action \u003d getAction(requestParams);"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"        JsonResult response \u003d getJsonResult(action);"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"        MessageOutput msg \u003d (MessageOutput) response.getOutput();"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Notification has been deleted.\", msg.getMessage());"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"        verifyAbsentInDatabase(testNotificationAttribute);"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Deleting non-existent notification should fail silently\");"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"        String invalidNotificationId \u003d \"non-existent notification\";"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"        requestParams \u003d new String[] {"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"                Const.ParamsNames.NOTIFICATION_ID, invalidNotificationId,"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"        };"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":"        NotificationAttributes nonExistentNotification \u003d typicalBundle.notifications.get(\"notification1\");"},{"lineNumber":49,"author":{"gitId":"Nicolascwy"},"content":"        nonExistentNotification.setNotificationId(invalidNotificationId);"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"        verifyAbsentInDatabase(nonExistentNotification);"},{"lineNumber":52,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":"        action \u003d getAction(requestParams);"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"        response \u003d getJsonResult(action);"},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"        msg \u003d (MessageOutput) response.getOutput();"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Notification has been deleted.\", msg.getMessage());"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Notification ID cannot be null\");"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"        requestParams \u003d new String[] {"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"                Const.ParamsNames.NOTIFICATION_ID, null,"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"        };"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"        verifyHttpParameterFailure(requestParams);"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Not enough request parameters should throw an error\");"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":67,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"    protected void testAccessControl() throws Exception {"},{"lineNumber":73,"author":{"gitId":"Nicolascwy"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":74,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":75}},{"path":"src/test/java/teammates/ui/webapi/GetActionClassesActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.ui.output.ActionClasses;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * SUT: {@link GetActionClassesAction}."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GetActionClassesActionTest extends BaseActionTest\u003cGetActionClassesAction\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.ACTION_CLASS;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return GET;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    protected void testExecute() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cClass\u003c? extends Action\u003e\u003e expectedActionClasses \u003d Arrays.asList("},{"lineNumber":32,"author":{"gitId":"-"},"content":"                DeleteFeedbackResponseCommentAction.class,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                CreateFeedbackResponseCommentAction.class,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                GetFeedbackResponseCommentAction.class,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                UpdateFeedbackResponseCommentAction.class,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                RestoreFeedbackSessionAction.class,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                BinFeedbackSessionAction.class,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                GetCoursesAction.class,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                GetRegkeyValidityAction.class,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                PutDataBundleAction.class,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                DeleteDataBundleAction.class,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                CreateFeedbackSessionLogAction.class,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                GetFeedbackSessionLogsAction.class,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                GetInstructorPrivilegeAction.class,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                UpdateInstructorPrivilegeAction.class,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                GetFeedbackSessionsAction.class,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                GenerateEmailAction.class,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                GetFeedbackQuestionsAction.class,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                GetOngoingSessionsAction.class,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                GetStudentProfileAction.class,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                UpdateStudentProfileAction.class,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                GetNationalitiesAction.class,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                AdminExceptionTestAction.class,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                GetUserCookieAction.class,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                RemindFeedbackSessionResultAction.class,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteInstructorAction.class,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                CreateInstructorAction.class,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                GetInstructorAction.class,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                UpdateInstructorAction.class,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                ArchiveCourseAction.class,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                InstructorCourseJoinEmailWorkerAction.class,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteStudentAction.class,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                GetStudentAction.class,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                UpdateStudentAction.class,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                SearchStudentsAction.class,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindEmailWorkerAction.class,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                DeleteStudentProfilePictureAction.class,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                PostStudentProfilePictureAction.class,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                GetStudentProfilePictureAction.class,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                DeleteFeedbackSessionAction.class,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                CreateFeedbackSessionAction.class,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                GetFeedbackSessionAction.class,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                UpdateFeedbackSessionAction.class,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                FeedbackSessionClosingRemindersAction.class,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                GetTimeZonesAction.class,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindParticularUsersEmailWorkerAction.class,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                GetFeedbackResponsesAction.class,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                SubmitFeedbackResponsesAction.class,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FeedbackSessionPublishedEmailWorkerAction.class,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                FeedbackSessionClosedRemindersAction.class,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                SendErrorReportAction.class,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                GetActionClassesAction.class,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                UnpublishFeedbackSessionAction.class,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                PublishFeedbackSessionAction.class,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                GetSessionResultsAction.class,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                GetHasResponsesAction.class,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                DatastoreBackupAction.class,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                RestoreCourseAction.class,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                BinCourseAction.class,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                DeleteAccountAction.class,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                CreateAccountAction.class,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                CreateAccountRequestAction.class,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                GetAccountRequestAction.class,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                DeleteAccountRequestAction.class,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                GetAccountAction.class,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                GetAccountsAction.class,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                FeedbackSessionPublishedRemindersAction.class,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                QueryLogsAction.class,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                SessionLinksRecoveryAction.class,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                SendJoinReminderEmailAction.class,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                RegenerateInstructorKeyAction.class,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                RegenerateStudentKeyAction.class,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                CompileLogsAction.class,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                GetAuthInfoAction.class,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                GetFeedbackSessionSubmittedGiverSetAction.class,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                GetCourseJoinStatusAction.class,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                JoinCourseAction.class,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                GetSessionResponseStatsAction.class,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                DeleteCourseAction.class,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                CreateCourseAction.class,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                GetCourseAction.class,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                UpdateCourseAction.class,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                GetFeedbackQuestionRecipientsAction.class,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                DowngradeAccountAction.class,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                RemindFeedbackSessionSubmissionAction.class,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                FeedbackSessionUnpublishedEmailWorkerAction.class,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                SendEmailWorkerAction.class,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                GetInstructorsAction.class,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                PutDataBundleDocumentsAction.class,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                FeedbackSessionResendPublishedEmailWorkerAction.class,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                StudentCourseJoinEmailWorkerAction.class,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                SearchInstructorsAction.class,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                GetCourseSectionNamesAction.class,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                ResetAccountAction.class,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningRemindersAction.class,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                FeedbackSessionOpeningSoonRemindersAction.class,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                DeleteStudentsAction.class,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                GetStudentsAction.class,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                EnrollStudentsAction.class,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                DeleteFeedbackQuestionAction.class,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                CreateFeedbackQuestionAction.class,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                UpdateFeedbackQuestionAction.class,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                InstructorSearchIndexingWorkerAction.class,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                StudentSearchIndexingWorkerAction.class,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                AccountRequestSearchIndexingWorkerAction.class,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                SearchAccountRequestsAction.class,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                ResetAccountRequestAction.class,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                CalculateUsageStatisticsAction.class,"},{"lineNumber":139,"author":{"gitId":"Nicolascwy"},"content":"                GetUsageStatisticsAction.class,"},{"lineNumber":140,"author":{"gitId":"Nicolascwy"},"content":"                GetNotificationAction.class,"},{"lineNumber":141,"author":{"gitId":"Nicolascwy"},"content":"                CreateNotificationAction.class,"},{"lineNumber":142,"author":{"gitId":"Nicolascwy"},"content":"                UpdateNotificationAction.class,"},{"lineNumber":143,"author":{"gitId":"Nicolascwy"},"content":"                DeleteNotificationAction.class,"},{"lineNumber":144,"author":{"gitId":"Nicolascwy"},"content":"                GetNotificationsAction.class"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedActionClassesNames \u003d expectedActionClasses.stream()"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .map(Class::getSimpleName)"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .sorted()"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        GetActionClassesAction action \u003d getAction();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        ActionClasses data \u003d (ActionClasses) result.getOutput();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        List\u003cString\u003e actualActionClasses \u003d data.getActionClasses();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Collections.sort(actualActionClasses);"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedActionClassesNames, actualActionClasses);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected void testAccessControl() {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        verifyAccessibleForAdmin();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        verifyAccessibleForMaintainers();"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        verifyInaccessibleForStudents();"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        verifyInaccessibleForInstructors();"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        verifyInaccessibleWithoutLogin();"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        verifyInaccessibleForUnregisteredUsers();"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":166,"Nicolascwy":6}},{"path":"src/test/java/teammates/ui/webapi/GetNotificationsActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import teammates.common.util.Const;"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import teammates.ui.output.NotificationData;"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"import teammates.ui.output.NotificationsData;"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":" * SUT: {@link GetNotificationsAction}."},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":" */"},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":"public class GetNotificationsActionTest extends BaseActionTest\u003cGetNotificationsAction\u003e {"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    // TODO: add tests for isfetchingall"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    String getActionUri() {"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"        return Const.ResourceURIs.NOTIFICATIONS;"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    String getRequestMethod() {"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        return GET;"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    protected void testExecute() {"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        // See independent test cases"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"    protected void testAccessControl() {"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        InstructorAttributes instructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"        loginAsInstructor(instructor.getGoogleId());"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"student notification not accessible to instructor\");"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"        String[] requestParams \u003d new String[] {"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_TARGET_USER, NotificationTargetUser.STUDENT.toString(),"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL, String.valueOf(true),"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"        };"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"        verifyCannotAccess(requestParams);"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"accessible to instructor\");"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        requestParams \u003d new String[] {"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_TARGET_USER, NotificationTargetUser.INSTRUCTOR.toString(),"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL, String.valueOf(true),"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        };"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        verifyCanAccess(requestParams);"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"instructor notification not accessible to student\");"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"        StudentAttributes studentAttributes \u003d typicalBundle.students.get(\"student1InCourse1\");"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"        loginAsStudent(studentAttributes.getGoogleId());"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"        requestParams \u003d new String[] {"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_TARGET_USER, NotificationTargetUser.INSTRUCTOR.toString(),"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL, String.valueOf(true),"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"        };"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"        verifyCannotAccess(requestParams);"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"accessible to student\");"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"        requestParams \u003d new String[] {"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_TARGET_USER, NotificationTargetUser.STUDENT.toString(),"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL, String.valueOf(true),"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"        };"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"        verifyCanAccess(requestParams);"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"unknown target user\");"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"        loginAsInstructor(instructor.getGoogleId());"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"        requestParams \u003d new String[] {"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_TARGET_USER, \"unknown\","},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL, String.valueOf(true),"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"        };"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"        verifyHttpParameterFailureAcl(requestParams);"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"accessible to admin\");"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"        loginAsAdmin();"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"        requestParams \u003d new String[] {"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_TARGET_USER, null,"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL, String.valueOf(true),"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"        };"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"        verifyCanAccess(requestParams);"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"    public void testExecute_withValidUserTypeForNonAdmin_shouldReturnData() {"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"Request to fetch notification\");"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"        InstructorAttributes instructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"        loginAsInstructor(instructor.getGoogleId());"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"        NotificationAttributes notification \u003d typicalBundle.notifications.get(\"notification5\");"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"        int expectedNumberOfNotifications \u003d"},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"                logic.getActiveNotificationsByTargetUser(notification.getTargetUser()).size();"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"        String[] requestParams \u003d new String[] {"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_TARGET_USER, NotificationTargetUser.INSTRUCTOR.toString(),"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL, String.valueOf(true),"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"        };"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":104,"author":{"gitId":"Nicolascwy"},"content":"        GetNotificationsAction action \u003d getAction(requestParams);"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"        JsonResult jsonResult \u003d getJsonResult(action);"},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"        NotificationsData output \u003d (NotificationsData) jsonResult.getOutput();"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationData\u003e notifications \u003d output.getNotifications();"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expectedNumberOfNotifications, notifications.size());"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":"        NotificationData firstNotification \u003d notifications.get(0);"},{"lineNumber":113,"author":{"gitId":"ziqing26"},"content":"        verifyNotificationEquals(notification, firstNotification);"},{"lineNumber":114,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":116,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"ziqing26"},"content":"    public void testExecute_withoutUserTypeForAdmin_shouldReturnAllNotifications() {"},{"lineNumber":118,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"Admin request to fetch notification\");"},{"lineNumber":119,"author":{"gitId":"ziqing26"},"content":"        int expectedNumberOfNotifications \u003d typicalBundle.notifications.size();"},{"lineNumber":120,"author":{"gitId":"ziqing26"},"content":"        loginAsAdmin();"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":"        NotificationAttributes notification \u003d typicalBundle.notifications.get(\"notStartedNotification2\");"},{"lineNumber":122,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":123,"author":{"gitId":"ziqing26"},"content":"        String[] requestParams \u003d new String[] {"},{"lineNumber":124,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_TARGET_USER, null,"},{"lineNumber":125,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL, String.valueOf(true),"},{"lineNumber":126,"author":{"gitId":"ziqing26"},"content":"        };"},{"lineNumber":127,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":128,"author":{"gitId":"Nicolascwy"},"content":"        GetNotificationsAction action \u003d getAction(requestParams);"},{"lineNumber":129,"author":{"gitId":"ziqing26"},"content":"        JsonResult jsonResult \u003d getJsonResult(action);"},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":131,"author":{"gitId":"ziqing26"},"content":"        NotificationsData output \u003d (NotificationsData) jsonResult.getOutput();"},{"lineNumber":132,"author":{"gitId":"ziqing26"},"content":"        List\u003cNotificationData\u003e notifications \u003d output.getNotifications();"},{"lineNumber":133,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":134,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expectedNumberOfNotifications,"},{"lineNumber":135,"author":{"gitId":"ziqing26"},"content":"                logic.getAllNotifications().size());"},{"lineNumber":136,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expectedNumberOfNotifications, notifications.size());"},{"lineNumber":137,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":138,"author":{"gitId":"ziqing26"},"content":"        NotificationData firstNotification \u003d notifications.get(0);"},{"lineNumber":139,"author":{"gitId":"ziqing26"},"content":"        verifyNotificationEquals(notification, firstNotification);"},{"lineNumber":140,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":142,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":143,"author":{"gitId":"ziqing26"},"content":"    public void testExecute_withoutUserTypeForNonAdmin_shouldFail() {"},{"lineNumber":144,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"Request without user type for non admin\");"},{"lineNumber":145,"author":{"gitId":"ziqing26"},"content":"        InstructorAttributes instructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":146,"author":{"gitId":"ziqing26"},"content":"        loginAsInstructor(instructor.getGoogleId());"},{"lineNumber":147,"author":{"gitId":"Nicolascwy"},"content":"        GetNotificationsAction action \u003d getAction(Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL, String.valueOf(true));"},{"lineNumber":148,"author":{"gitId":"ziqing26"},"content":"        assertThrows(AssertionError.class, action::execute);"},{"lineNumber":149,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":151,"author":{"gitId":"ziqing26"},"content":"    @Test"},{"lineNumber":152,"author":{"gitId":"ziqing26"},"content":"    public void testExecute_invalidUserType_shouldFail() {"},{"lineNumber":153,"author":{"gitId":"ziqing26"},"content":"        ______TS(\"Request without invalid user type\");"},{"lineNumber":154,"author":{"gitId":"ziqing26"},"content":"        InstructorAttributes instructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":155,"author":{"gitId":"ziqing26"},"content":"        loginAsInstructor(instructor.getGoogleId());"},{"lineNumber":156,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":157,"author":{"gitId":"ziqing26"},"content":"        // when usertype is GENERAL"},{"lineNumber":158,"author":{"gitId":"ziqing26"},"content":"        verifyHttpParameterFailure(Const.ParamsNames.NOTIFICATION_TARGET_USER,"},{"lineNumber":159,"author":{"gitId":"ziqing26"},"content":"                NotificationTargetUser.GENERAL.toString(),"},{"lineNumber":160,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL,"},{"lineNumber":161,"author":{"gitId":"ziqing26"},"content":"                String.valueOf(true));"},{"lineNumber":162,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":163,"author":{"gitId":"ziqing26"},"content":"        // when usertype is a random string"},{"lineNumber":164,"author":{"gitId":"ziqing26"},"content":"        verifyHttpParameterFailure(Const.ParamsNames.NOTIFICATION_TARGET_USER,"},{"lineNumber":165,"author":{"gitId":"ziqing26"},"content":"                \"invalid string\","},{"lineNumber":166,"author":{"gitId":"ziqing26"},"content":"                Const.ParamsNames.NOTIFICATION_IS_FETCHING_ALL,"},{"lineNumber":167,"author":{"gitId":"ziqing26"},"content":"                String.valueOf(true));"},{"lineNumber":168,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"ziqing26"},"content":""},{"lineNumber":170,"author":{"gitId":"ziqing26"},"content":"    private void verifyNotificationEquals(NotificationAttributes expected, NotificationData actual) {"},{"lineNumber":171,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getNotificationId(), actual.getNotificationId());"},{"lineNumber":172,"author":{"gitId":"fsgmhoward"},"content":"        assertEquals(expected.getStyle(), actual.getStyle());"},{"lineNumber":173,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getTargetUser(), actual.getTargetUser());"},{"lineNumber":174,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getTitle(), actual.getTitle());"},{"lineNumber":175,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected.getMessage(), actual.getMessage());"},{"lineNumber":176,"author":{"gitId":"ziqing26"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"ziqing26"},"content":"}"}],"authorContributionMap":{"ziqing26":169,"fsgmhoward":2,"Nicolascwy":6}},{"path":"src/test/java/teammates/ui/webapi/UpdateNotificationActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicolascwy"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":3,"author":{"gitId":"Nicolascwy"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"Nicolascwy"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"import org.testng.annotations.Test;"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.NotificationStyle;"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.NotificationTargetUser;"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.datatransfer.attributes.NotificationAttributes;"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"import teammates.common.util.Const;"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.output.NotificationData;"},{"lineNumber":13,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.InvalidHttpRequestBodyException;"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"import teammates.ui.request.NotificationUpdateRequest;"},{"lineNumber":15,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":16,"author":{"gitId":"Nicolascwy"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Nicolascwy"},"content":" * SUT: {@link UpdateNotificationAction}."},{"lineNumber":18,"author":{"gitId":"Nicolascwy"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Nicolascwy"},"content":"public class UpdateNotificationActionTest extends BaseActionTest\u003cUpdateNotificationAction\u003e {"},{"lineNumber":20,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"    String getActionUri() {"},{"lineNumber":22,"author":{"gitId":"Nicolascwy"},"content":"        return Const.ResourceURIs.NOTIFICATION;"},{"lineNumber":23,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":25,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"    String getRequestMethod() {"},{"lineNumber":27,"author":{"gitId":"Nicolascwy"},"content":"        return PUT;"},{"lineNumber":28,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":30,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"    protected void testExecute() throws Exception {"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"        NotificationAttributes testNotificationAttribute \u003d typicalBundle.notifications.get(\"notification1\");"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"        String[] requestParams \u003d new String[] {"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"                Const.ParamsNames.NOTIFICATION_ID, testNotificationAttribute.getNotificationId(),"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"        };"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"        NotificationUpdateRequest req \u003d getTypicalUpdateRequest();"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"        NotificationStyle style \u003d req.getStyle();"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"        NotificationTargetUser targetUser \u003d req.getTargetUser();"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"        String title \u003d req.getTitle();"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"        String message \u003d req.getMessage();"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"        String invalidTitle \u003d \"\";"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"        String invalidNotificationId \u003d \"InvalidNotificationId\";"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"        loginAsAdmin();"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Typical Case: Update notification successfully\");"},{"lineNumber":49,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":"        UpdateNotificationAction action \u003d getAction(req, requestParams);"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"        NotificationData res \u003d (NotificationData) action.execute().getOutput();"},{"lineNumber":52,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":"        NotificationAttributes updatedNotification \u003d logic.getNotification(res.getNotificationId());"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"        // Verify that correctly updated in the DB"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(req.getStartTimestamp(), updatedNotification.getStartTime().toEpochMilli());"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(req.getEndTimestamp(), updatedNotification.getEndTime().toEpochMilli());"},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(style, updatedNotification.getStyle());"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(targetUser, updatedNotification.getTargetUser());"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(title, updatedNotification.getTitle());"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(message, updatedNotification.getMessage());"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Parameters cannot be null\");"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"        req.setStyle(null);"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":"        InvalidHttpRequestBodyException ex \u003d verifyHttpRequestBodyFailure(req, requestParams);"},{"lineNumber":67,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Notification style cannot be null\", ex.getMessage());"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":69,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":"        req.setTargetUser(null);"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req, requestParams);"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Notification target user cannot be null\", ex.getMessage());"},{"lineNumber":73,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":74,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":75,"author":{"gitId":"Nicolascwy"},"content":"        req.setTitle(null);"},{"lineNumber":76,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req, requestParams);"},{"lineNumber":77,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Notification title cannot be null\", ex.getMessage());"},{"lineNumber":78,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":79,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":80,"author":{"gitId":"Nicolascwy"},"content":"        req.setMessage(null);"},{"lineNumber":81,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req, requestParams);"},{"lineNumber":82,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Notification message cannot be null\", ex.getMessage());"},{"lineNumber":83,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Timestamps should be greater than 0\");"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"        req.setStartTimestamp(-1);"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req, requestParams);"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"Start timestamp should be greater than zero\", ex.getMessage());"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":91,"author":{"gitId":"Nicolascwy"},"content":"        req.setEndTimestamp(-1);"},{"lineNumber":92,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req, requestParams);"},{"lineNumber":93,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"End timestamp should be greater than zero\", ex.getMessage());"},{"lineNumber":94,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":95,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Start timestamp should not be after end timestamp\");"},{"lineNumber":96,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":97,"author":{"gitId":"Nicolascwy"},"content":"        req.setEndTimestamp(req.getStartTimestamp() - 100);"},{"lineNumber":98,"author":{"gitId":"Nicolascwy"},"content":"        ex \u003d verifyHttpRequestBodyFailure(req, requestParams);"},{"lineNumber":99,"author":{"gitId":"Nicolascwy"},"content":"        assertEquals(\"The time when the notification will expire for this notification \""},{"lineNumber":100,"author":{"gitId":"Nicolascwy"},"content":"                + \"cannot be earlier than the time when the notification will be visible.\","},{"lineNumber":101,"author":{"gitId":"Nicolascwy"},"content":"                ex.getMessage());"},{"lineNumber":102,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":103,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Invalid parameter should throw an error\");"},{"lineNumber":104,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":105,"author":{"gitId":"Nicolascwy"},"content":"        req.setTitle(invalidTitle);"},{"lineNumber":106,"author":{"gitId":"Nicolascwy"},"content":"        verifyHttpRequestBodyFailure(req, requestParams);"},{"lineNumber":107,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":108,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Non-existent notification should throw an error\");"},{"lineNumber":109,"author":{"gitId":"Nicolascwy"},"content":"        requestParams \u003d new String[] {"},{"lineNumber":110,"author":{"gitId":"Nicolascwy"},"content":"                Const.ParamsNames.NOTIFICATION_ID, invalidNotificationId,"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":"        };"},{"lineNumber":112,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":113,"author":{"gitId":"Nicolascwy"},"content":"        verifyEntityNotFound(req, requestParams);"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":"        ______TS(\"Not enough request parameters should throw an error\");"},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":"        req \u003d getTypicalUpdateRequest();"},{"lineNumber":117,"author":{"gitId":"Nicolascwy"},"content":"        verifyHttpParameterFailure(req);"},{"lineNumber":118,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":120,"author":{"gitId":"Nicolascwy"},"content":"    @Test"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"    @Override"},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":"    protected void testAccessControl() throws Exception {"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":124,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":126,"author":{"gitId":"Nicolascwy"},"content":"    private NotificationUpdateRequest getTypicalUpdateRequest() {"},{"lineNumber":127,"author":{"gitId":"Nicolascwy"},"content":"        NotificationUpdateRequest req \u003d new NotificationUpdateRequest();"},{"lineNumber":128,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":129,"author":{"gitId":"Nicolascwy"},"content":"        req.setStartTimestamp(Instant.now().toEpochMilli());"},{"lineNumber":130,"author":{"gitId":"Nicolascwy"},"content":"        req.setEndTimestamp(Instant.now().plus(5, ChronoUnit.DAYS).toEpochMilli());"},{"lineNumber":131,"author":{"gitId":"Nicolascwy"},"content":"        req.setStyle(NotificationStyle.INFO);"},{"lineNumber":132,"author":{"gitId":"Nicolascwy"},"content":"        req.setTargetUser(NotificationTargetUser.GENERAL);"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":"        req.setTitle(\"New notification title\");"},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":"        req.setMessage(\"New notification message\");"},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":136,"author":{"gitId":"Nicolascwy"},"content":"        return req;"},{"lineNumber":137,"author":{"gitId":"Nicolascwy"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"Nicolascwy"},"content":"}"}],"authorContributionMap":{"Nicolascwy":138}},{"path":"src/web/app/components/datepicker/datepicker-formatter.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbDateParserFormatter, NgbDateStruct } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"const DATE_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":" * Date formatter for date picker"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Injectable()"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"export class DatePickerFormatter extends NgbDateParserFormatter {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  format(date: NgbDateStruct): string {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    if (date \u003d\u003d null) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      return \u0027\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    const inst: moment.Moment \u003d moment();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    inst.set(\u0027year\u0027, date.year);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    inst.set(\u0027date\u0027, date.day);"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    return inst.format(DATE_FORMAT);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  parse(value: string): NgbDateStruct {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    const inst: moment.Moment \u003d moment(value, DATE_FORMAT);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      year: inst.year(),"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      month: inst.month() + 1, // moment return 0-11 for month"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      day: inst.date(),"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":33}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"question-submission-form\" class\u003d\"card\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-header bg-primary text-white question-header\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cspan id\u003d\"question-details\"\u003e\u003cb\u003eQuestion {{ model.questionNumber }}: \u003c/b\u003e{{ model.questionBrief }}\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\" *tmIsLoading\u003d\"model.isLoading\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card mb-3\" *ngIf\u003d\"model.questionDescription\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-header\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003cb\u003eMore details\u003c/b\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"question-description\" class\u003d\"card-body\" [innerHTML]\u003d\"model.questionDescription | safeHtml\"\u003e\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body visibility-card\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cp class\u003d\"text-secondary\"\u003eOnly the following persons can see your responses: \u003c/p\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cul id\u003d\"visibility-list\" class\u003d\"text-secondary\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.SELF\"\u003eYou can see your own feedback in the results page later on.\u003c/li\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cng-container *ngFor\u003d\"let visibilityType of FeedbackVisibilityType | enumToArray\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cli *ngIf\u003d\"visibilityStateMachine.isVisibilityTypeApplicable(visibilityType) \u0026\u0026 visibilityStateMachine.hasAnyVisibilityControl(visibilityType)\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            {{ visibilityType | visibilityEntityName:model.recipientType:model.numberOfEntitiesToGiveFeedbackToSetting:model.customNumberOfEntitiesToGiveFeedbackTo }} {{ visibilityStateMachine.getVisibilityControlUnderVisibilityType(visibilityType) | visibilityCapability }}"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"!visibilityStateMachine.hasAnyVisibilityControlForAll()\"\u003eNo-one can see your responses\u003c/li\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003ctm-contribution-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\"\u003e\u003c/tm-contribution-question-instruction\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-instruction\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-instruction\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003ctm-contribution-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\"\u003e\u003c/tm-contribution-question-constraint\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-constraint\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-constraint\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003ctm-rank-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-options-question-instruction\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003ctm-msq-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-msq-question-constraint\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003ctm-rank-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-recipients-question-instruction\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-constsum-options-question-instruction\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                                 [questionDetails]\u003d\"model.questionDetails\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-constsum-recipients-question-instruction\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.NONE \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.SELF\" class\u003d\"margin-top-30px margin-bottom-0px\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"ngb-tooltip-class font-bold\" ngbTooltip\u003d\"The party being evaluated or given feedback to\"\u003eEvaluee/Recipient\u003c/span\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\" *ngIf\u003d\"model.giverType \u003d\u003d\u003d FeedbackParticipantType.TEAMS\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      Please note that you are submitting this response on behalf of your team."},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"evaluee-col col-12\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row\" *ngFor\u003d\"let recipientSubmissionFormModel of model.recipientSubmissionForms; let i \u003d index; trackBy: trackRecipientSubmissionFormByFn\"\u003e"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"col-md-5 col-xs-12 margin-top-20px\" *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.SELF \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.NONE\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"recipient-name-{{ i }}\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cb\u003e{{ getRecipientName(recipientSubmissionFormModel.recipientIdentifier) }} \u003c/b\u003e \u003cspan\u003e({{ model.recipientType | recipientTypeName:model.giverType }})\u003c/span\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row evaluee-select align-items-center\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003cselect id\u003d\"recipient-dropdown\" class\u003d\"form-control font-weight-bold col\" [ngModel]\u003d\"recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                      (ngModelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027recipientIdentifier\u0027, $event)\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"isFormsDisabled\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003coption value\u003d\"\"\u003e\u003c/option\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003cng-container *ngFor\u003d\"let recipient of model.recipientList\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                  \u003coption *ngIf\u003d\"!isRecipientSelected(recipient) || recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier\" [ngValue]\u003d\"recipient.recipientIdentifier\"\u003e{{ recipient.recipientName }}\u003c/option\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"              \u003cdiv class\u003d\"col-auto text-left\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                ({{ model.recipientType | recipientTypeName: model.giverType }})"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"col margin-top-20px\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003ctm-contribution-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                                      [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                                                      [shouldShowHelpLink]\u003d\"i \u003d\u003d\u003d 0\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                                                      (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                                      [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-contribution-question-edit-answer-form\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003ctm-text-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-text-question-edit-answer-form\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003ctm-rank-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                                       [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                                       (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                                       [isDisabled]\u003d\"isFormsDisabled\"\u003e\u003c/tm-rank-options-question-edit-answer-form\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003ctm-rank-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                                          [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                                                          (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                                                          [isDisabled]\u003d\"isFormsDisabled\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-rank-recipients-question-edit-answer-form\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003ctm-num-scale-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-num-scale-question-edit-answer-form\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003ctm-mcq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MCQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                                    [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-mcq-question-edit-answer-form\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003ctm-msq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-msq-question-edit-answer-form\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003ctm-rubric-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RUBRIC\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                                 [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                                 (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                                 [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                                 [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\"\u003e\u003c/tm-rubric-question-edit-answer-form\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isFormsDisabled\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003c/tm-constsum-options-question-edit-answer-form\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isFormsDisabled\"\u003e\u003c/tm-constsum-recipients-question-edit-answer-form\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"comment-section\" *ngIf\u003d\"allowedToHaveParticipantComment\" class\u003d\"col-12 margin-bottom-20px margin-top-10px indent\"\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver \u0026\u0026 recipientSubmissionFormModel.commentByGiver.originalComment else newComment\"\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              \u003ctm-comment-row [mode]\u003d\"CommentRowMode.EDIT\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"                              [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":125,"author":{"gitId":"-"},"content":"                              (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":126,"author":{"gitId":"-"},"content":"                              [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                              [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"                              [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                              (deleteCommentEvent)\u003d\"triggerDeleteCommentEvent(i)\""},{"lineNumber":130,"author":{"gitId":"-"},"content":"                              (closeEditingEvent)\u003d\"discardEditedParticipantComment(i)\""},{"lineNumber":131,"author":{"gitId":"-"},"content":"                              [isDisabled]\u003d\"isFormsDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u003cng-template #newComment\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"              \u003cdiv style\u003d\"display: inline-block;\" [ngbTooltip]\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails) ? \u0027Give a valid response in order to comment\u0027 : \u0027\u0027\"\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-add-comment\" *ngIf\u003d\"!recipientSubmissionFormModel.commentByGiver\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        (click)\u003d\"addNewParticipantCommentToResponse(i)\""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"isFormsDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-comment\"\u003e\u003c/i\u003e [Optional] Comment on your response"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver\"\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u003ctm-comment-row [mode]\u003d\"CommentRowMode.ADD\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                                [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                                [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                                (closeEditingEvent)\u003d\"cancelAddingNewParticipantComment(i)\""},{"lineNumber":152,"author":{"gitId":"-"},"content":"                                [isDisabled]\u003d\"isFormsDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                  You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 constraint-margins\"\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003ctm-rank-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\""},{"lineNumber":165,"author":{"gitId":"-"},"content":"                                              [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":166,"author":{"gitId":"-"},"content":"                                              [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":167,"author":{"gitId":"-"},"content":"                                              (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-rank-recipients-question-constraint\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      \u003ctm-constsum-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":170,"author":{"gitId":"-"},"content":"                                                  [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                                                  [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                                                  (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":173,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-constsum-recipients-question-constraint\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"!model.recipientList.length \u0026\u0026 model.isLoaded\"\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS\"\u003eThis question is for team members and you don\u0027t have any team members. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS\"\u003eThis question is for other teams in this course and this course doesn\u0027t have any other team. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS\"\u003eThis question is for other students in this course and this course doesn\u0027t have any other student. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"model.recipientList.length \u003e 0\"\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center\"\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-submit-qn-{{ model.questionNumber }}\" type\u003d\"submit\" class\u003d\"btn btn-success\""},{"lineNumber":185,"author":{"gitId":"-"},"content":"                ngbTooltip\u003d\"You can save your responses for this question at any time and come back later to continue.\""},{"lineNumber":186,"author":{"gitId":"-"},"content":"                (click)\u003d\"saveFeedbackResponses()\" [disabled]\u003d\"isSavingResponses || isSubmissionDisabled\""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        \u003e\u003ctm-ajax-loading *ngIf\u003d\"isSavingResponses\"\u003e\u003c/tm-ajax-loading\u003eSubmit Responses\u003c/button\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":3,"-":188}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":7,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackNumericalScaleResponseDetails,"},{"lineNumber":8,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackParticipantType,"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackQuestionType,"},{"lineNumber":10,"author":{"gitId":"Nicolascwy"},"content":"  FeedbackVisibilityType,"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { CommentBoxModule } from \u0027../comment-box/comment-box.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { QuestionConstraintModule } from \u0027../question-types/question-constraint/question-constraint.module\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  QuestionEditAnswerFormModule,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"} from \u0027../question-types/question-edit-answer-form/question-edit-answer-form.module\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { QuestionInstructionModule } from \u0027../question-types/question-instruction/question-instruction.module\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { VisibilityMessagesModule } from \u0027../visibility-messages/visibility-messages.module\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"} from \u0027./question-submission-form-model\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { QuestionSubmissionFormComponent } from \u0027./question-submission-form.component\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { RecipientTypeNamePipe } from \u0027./recipient-type-name.pipe\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"Nicolascwy"},"content":"const formResponse1: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-1\u0027,"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027hans-charlie-id\u0027,"},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"    answer: 5,"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"const formResponse2: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-2\u0027,"},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027harris-barry-id\u0027,"},{"lineNumber":43,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":44,"author":{"gitId":"Nicolascwy"},"content":"    answer: 4,"},{"lineNumber":45,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":46,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":47,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":48,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":49,"author":{"gitId":"Nicolascwy"},"content":"const formResponse3: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":50,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-3\u0027,"},{"lineNumber":51,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027rogers-alan-id\u0027,"},{"lineNumber":52,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":53,"author":{"gitId":"Nicolascwy"},"content":"    answer: 3,"},{"lineNumber":54,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":55,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":56,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":57,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":58,"author":{"gitId":"Nicolascwy"},"content":"const formResponse4: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":59,"author":{"gitId":"Nicolascwy"},"content":"  responseId: \u0027response-id-4\u0027,"},{"lineNumber":60,"author":{"gitId":"Nicolascwy"},"content":"  recipientIdentifier: \u0027buck-arthur-id\u0027,"},{"lineNumber":61,"author":{"gitId":"Nicolascwy"},"content":"  responseDetails: {"},{"lineNumber":62,"author":{"gitId":"Nicolascwy"},"content":"    answer: 2,"},{"lineNumber":63,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"  isValid: true,"},{"lineNumber":65,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":66,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":67,"author":{"gitId":"Nicolascwy"},"content":"const testNumscaleQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":68,"author":{"gitId":"Nicolascwy"},"content":"  feedbackQuestionId: \u0027feedback-question-id-numscale\u0027,"},{"lineNumber":69,"author":{"gitId":"Nicolascwy"},"content":"  questionNumber: 1,"},{"lineNumber":70,"author":{"gitId":"Nicolascwy"},"content":"  questionBrief: \u0027numerical scale question\u0027,"},{"lineNumber":71,"author":{"gitId":"Nicolascwy"},"content":"  questionDescription: \u0027question description\u0027,"},{"lineNumber":72,"author":{"gitId":"Nicolascwy"},"content":"  questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":73,"author":{"gitId":"Nicolascwy"},"content":"  questionDetails: {"},{"lineNumber":74,"author":{"gitId":"Nicolascwy"},"content":"    minScale: 1,"},{"lineNumber":75,"author":{"gitId":"Nicolascwy"},"content":"    maxScale: 10,"},{"lineNumber":76,"author":{"gitId":"Nicolascwy"},"content":"    step: 1,"},{"lineNumber":77,"author":{"gitId":"Nicolascwy"},"content":"  } as FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":78,"author":{"gitId":"Nicolascwy"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":79,"author":{"gitId":"Nicolascwy"},"content":"  recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":80,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":81,"author":{"gitId":"Nicolascwy"},"content":"  recipientList: [{ recipientName: \u0027Alan Rogers\u0027, recipientIdentifier: \u0027rogers-alan-id\u0027 },"},{"lineNumber":82,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Arthur Buck\u0027, recipientIdentifier: \u0027buck-arthur-id\u0027 },"},{"lineNumber":83,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027harris-barry-id\u0027 },"},{"lineNumber":84,"author":{"gitId":"Nicolascwy"},"content":"    { recipientName: \u0027Charlie Hans\u0027, recipientIdentifier: \u0027hans-charlie-id\u0027 }],"},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"  recipientSubmissionForms: [formResponse1, formResponse2, formResponse3, formResponse4],"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM,"},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 4,"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"  showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":"  showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":91,"author":{"gitId":"Nicolascwy"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  isLoading: false,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  isLoaded: true,"},{"lineNumber":94,"author":{"gitId":"Nicolascwy"},"content":"};"},{"lineNumber":95,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"describe(\u0027QuestionSubmissionFormComponent\u0027, () \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  let component: QuestionSubmissionFormComponent;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cQuestionSubmissionFormComponent\u003e;"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      declarations: ["},{"lineNumber":103,"author":{"gitId":"-"},"content":"        QuestionSubmissionFormComponent,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        RecipientTypeNamePipe,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":107,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        VisibilityMessagesModule,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        QuestionInstructionModule,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        QuestionConstraintModule,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        QuestionEditAnswerFormModule,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        RichTextEditorModule,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommentBoxModule,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        NgbModule,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(QuestionSubmissionFormComponent);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should set model\u0027, () \u003d\u003e {"},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"    const model: QuestionSubmissionFormModel \u003d testNumscaleQuestionSubmissionForm;"},{"lineNumber":136,"author":{"gitId":"Nicolascwy"},"content":"    component.formModel \u003d model;"},{"lineNumber":137,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":138,"author":{"gitId":"Nicolascwy"},"content":"    expect(component.model).toBe(model);"},{"lineNumber":139,"author":{"gitId":"Nicolascwy"},"content":"  });"},{"lineNumber":140,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":141,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should arrange recipients according to alphabetical order of name after ngOnInit (Sorted recipient list)\u0027, () \u003d\u003e {"},{"lineNumber":142,"author":{"gitId":"Nicolascwy"},"content":"    const model: QuestionSubmissionFormModel \u003d JSON.parse(JSON.stringify(testNumscaleQuestionSubmissionForm));"},{"lineNumber":143,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":144,"author":{"gitId":"Nicolascwy"},"content":"    component.formModel \u003d model;"},{"lineNumber":145,"author":{"gitId":"Nicolascwy"},"content":"    component.ngOnInit();"},{"lineNumber":146,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":147,"author":{"gitId":"Nicolascwy"},"content":"    expect(model.recipientSubmissionForms).toEqual([formResponse3, formResponse4, formResponse2, formResponse1]);"},{"lineNumber":148,"author":{"gitId":"Nicolascwy"},"content":"  });"},{"lineNumber":149,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":150,"author":{"gitId":"Nicolascwy"},"content":"  it(\u0027should arrange recipients according to alphabetical order of name after ngOnInit (Unsorted recipient list)\u0027,"},{"lineNumber":151,"author":{"gitId":"Nicolascwy"},"content":"    () \u003d\u003e {"},{"lineNumber":152,"author":{"gitId":"Nicolascwy"},"content":"      const model: QuestionSubmissionFormModel \u003d JSON.parse(JSON.stringify(testNumscaleQuestionSubmissionForm));"},{"lineNumber":153,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":154,"author":{"gitId":"Nicolascwy"},"content":"      // Change recipient list to unsorted"},{"lineNumber":155,"author":{"gitId":"Nicolascwy"},"content":"      model.recipientList \u003d [{ recipientName: \u0027Charlie Hans\u0027, recipientIdentifier: \u0027hans-charlie-id\u0027 },"},{"lineNumber":156,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Alan Rogers\u0027, recipientIdentifier: \u0027rogers-alan-id\u0027 },"},{"lineNumber":157,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027harris-barry-id\u0027 },"},{"lineNumber":158,"author":{"gitId":"Nicolascwy"},"content":"      { recipientName: \u0027Arthur Buck\u0027, recipientIdentifier: \u0027buck-arthur-id\u0027 },"},{"lineNumber":159,"author":{"gitId":"Nicolascwy"},"content":"      ];"},{"lineNumber":160,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"      component.formModel \u003d model;"},{"lineNumber":162,"author":{"gitId":"Nicolascwy"},"content":"      component.ngOnInit();"},{"lineNumber":163,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":164,"author":{"gitId":"Nicolascwy"},"content":"      expect(model.recipientSubmissionForms).toEqual([formResponse3, formResponse4, formResponse2, formResponse1]);"},{"lineNumber":165,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":166,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":62,"Nicolascwy":104}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackQuestionType, FeedbackResponseDetails, FeedbackTextQuestionDetails,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { CommentRowMode } from \u0027../comment-box/comment-row/comment-row.mode\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"} from \u0027./question-submission-form-model\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The question submission form for a question."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  selector: \u0027tm-question-submission-form\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./question-submission-form.component.html\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./question-submission-form.component.scss\u0027],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"})"},{"lineNumber":29,"author":{"gitId":"-"},"content":"export class QuestionSubmissionFormComponent implements OnInit {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode: typeof QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackParticipantType: typeof FeedbackParticipantType \u003d FeedbackParticipantType;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType: typeof FeedbackVisibilityType \u003d FeedbackVisibilityType;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  CommentRowMode: typeof CommentRowMode \u003d CommentRowMode;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  formMode: QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  isFormsDisabled: boolean \u003d false;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  isSubmissionDisabled: boolean \u003d false;"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  isSavingResponses: boolean \u003d false;"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  set formModel(model: QuestionSubmissionFormModel) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.model \u003d model;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine(model.giverType, model.recipientType);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    const visibilitySetting: { [TKey in VisibilityControl]: FeedbackVisibilityType[] } \u003d {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      SHOW_RESPONSE: model.showResponsesTo,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      SHOW_GIVER_NAME: model.showGiverNameTo,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      SHOW_RECIPIENT_NAME: model.showRecipientNameTo,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.allowedToHaveParticipantComment \u003d"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.isAllowedToHaveParticipantComment(this.model.questionType);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  formModelChange: EventEmitter\u003cQuestionSubmissionFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  responsesSave: EventEmitter\u003cQuestionSubmissionFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [],"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  deleteCommentEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  visibilityStateMachine: VisibilityStateMachine;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  allowedToHaveParticipantComment: boolean \u003d false;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  constructor(private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"              private feedbackResponseService: FeedbackResponsesService) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":109,"author":{"gitId":"-"},"content":"            this.model.giverType, this.model.recipientType);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":113,"author":{"gitId":"Nicolascwy"},"content":"    this.sortRecipientsByName();"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"  }"},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":"  /**"},{"lineNumber":117,"author":{"gitId":"Nicolascwy"},"content":"   * Sorts recipients of feedback by their name."},{"lineNumber":118,"author":{"gitId":"Nicolascwy"},"content":"   */"},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":"  private sortRecipientsByName(): void {"},{"lineNumber":120,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientList.sort((firstRecipient: FeedbackResponseRecipient,"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"      secondRecipient: FeedbackResponseRecipient) \u003d\u003e"},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":"      firstRecipient.recipientName.localeCompare(secondRecipient.recipientName));"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":124,"author":{"gitId":"Nicolascwy"},"content":"    const indexes: Map\u003cString, number\u003e \u003d new Map();"},{"lineNumber":125,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientList.forEach((recipient: FeedbackResponseRecipient, index: number) \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"Nicolascwy"},"content":"      indexes.set(recipient.recipientIdentifier, index);"},{"lineNumber":127,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":128,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":129,"author":{"gitId":"Nicolascwy"},"content":"    this.model.recipientSubmissionForms.sort((firstRecipient: FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":130,"author":{"gitId":"Nicolascwy"},"content":"      secondRecipient: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"Nicolascwy"},"content":"      const firstRecipientIndex: number \u003d indexes.get(firstRecipient.recipientIdentifier) || 0;"},{"lineNumber":132,"author":{"gitId":"Nicolascwy"},"content":"      const secondRecipientIndex: number \u003d indexes.get(secondRecipient.recipientIdentifier) || 0;"},{"lineNumber":133,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":134,"author":{"gitId":"Nicolascwy"},"content":"      return firstRecipientIndex - secondRecipientIndex;"},{"lineNumber":135,"author":{"gitId":"Nicolascwy"},"content":"    });"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":139,"author":{"gitId":"-"},"content":"   * Tracks submission form for each recipient by the index in the array."},{"lineNumber":140,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  trackRecipientSubmissionFormByFn(index: number): any {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    return index;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":148,"author":{"gitId":"-"},"content":"   * Gets recipient name in {@code FIXED_RECIPIENT} mode."},{"lineNumber":149,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  getRecipientName(recipientIdentifier: string): string {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    const recipient: FeedbackResponseRecipient | undefined \u003d"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        this.model.recipientList.find("},{"lineNumber":153,"author":{"gitId":"-"},"content":"            (r: FeedbackResponseRecipient) \u003d\u003e r.recipientIdentifier \u003d\u003d\u003d recipientIdentifier);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    return recipient ? recipient.recipientName : \u0027Unknown\u0027;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":158,"author":{"gitId":"-"},"content":"   * Checks whether the recipient is already selected in {@code FLEXIBLE_RECIPIENT} mode."},{"lineNumber":159,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  isRecipientSelected(recipient: FeedbackResponseRecipient): boolean {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    return this.model.recipientSubmissionForms.some("},{"lineNumber":162,"author":{"gitId":"-"},"content":"        (recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   * Triggers the change of the recipient submission form."},{"lineNumber":168,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  triggerRecipientSubmissionFormChange(index: number, field: string, data: any): void {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice();"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    recipientSubmissionForms[index] \u003d {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      ...recipientSubmissionForms[index],"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      [field]: data,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   * Triggers deletion of a participant comment associated with the response."},{"lineNumber":185,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  triggerDeleteCommentEvent(index: number): void {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    this.deleteCommentEvent.emit(index);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":191,"author":{"gitId":"-"},"content":"   * Add new participant comment to response with index."},{"lineNumber":192,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  addNewParticipantCommentToResponse(index: number): void {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"      isEditing: true,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * Cancel adding new participant comment."},{"lineNumber":205,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  cancelAddingNewParticipantComment(index: number): void {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, null);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * Discards the current editing and restore the original comment."},{"lineNumber":212,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  discardEditedParticipantComment(index: number): void {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    const commentModel: CommentRowModel | undefined \u003d this.model.recipientSubmissionForms[index].commentByGiver;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    if (!commentModel || !commentModel.originalComment) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"          ...commentModel,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"          commentEditFormModel: {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            commentText: commentModel.originalComment.commentText,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":224,"author":{"gitId":"-"},"content":"          isEditing: false,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   * Checks whether the response is empty or not."},{"lineNumber":230,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  isFeedbackResponseDetailsEmpty(responseDetails: FeedbackResponseDetails): boolean {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    return this.feedbackResponseService.isFeedbackResponseDetailsEmpty("},{"lineNumber":233,"author":{"gitId":"-"},"content":"        this.model.questionType, responseDetails);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":237,"author":{"gitId":"-"},"content":"   * Updates validity of all responses in a question."},{"lineNumber":238,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  updateValidity(isValid: boolean): void {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    if (this.model.recipientSubmissionForms.length \u003d\u003d\u003d 0) { return; }"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice().map("},{"lineNumber":243,"author":{"gitId":"-"},"content":"            (model: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e ({ ...model, isValid }));"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"   * Triggers saving of responses for the specific question."},{"lineNumber":252,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  saveFeedbackResponses(): void {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    this.responsesSave.emit(this.model);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":234,"Nicolascwy":23}},{"path":"src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"!isAllFormsNotAnswered\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isInsufficientPointsDistributed\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Distribute the remaining {{ totalRequiredPoints - totalAnsweredPoints }} points.\u003c/p\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isPointsOverAllocated\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Remove the extra  {{ totalAnsweredPoints - totalRequiredPoints }} points allocated.\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isAllPointsDistributed\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      All points distributed!\u003c/p\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"    \u003cp *ngIf\u003d\"isAnyPointsNegative\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"      Points cannot be negative!\u003c/p\u003e"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isWronglyAllUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      Multiple recipients are given same points!\u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isCorrectlyAllUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      All allocated points are different!\u003c/p\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isWronglySomeUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      All recipients are given {{ allAnswers[0] }} points. Please allocate different points to at least one recipient.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"isCorrectlySomeUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      At least one recipient has been allocated different number of points.\u003c/p\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":3,"-":24}},{"path":"src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { QuestionConstraintComponent } from \u0027./question-constraint.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Constraint of constsum recipients question."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  selector: \u0027tm-constsum-recipients-question-constraint\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./constsum-recipients-question-constraint.component.html\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./constsum-recipients-question-constraint.component.scss\u0027],"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class ConstsumRecipientsQuestionConstraintComponent"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    extends QuestionConstraintComponent\u003cFeedbackConstantSumQuestionDetails\u003e {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType: typeof FeedbackConstantSumDistributePointsType \u003d"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      FeedbackConstantSumDistributePointsType;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    super(DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS());"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * Checks if all forms are not answered."},{"lineNumber":36,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  get isAllFormsNotAnswered(): boolean {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    return this.recipientSubmissionForms.every((form: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      const details: FeedbackConstantSumResponseDetails \u003d form.responseDetails as FeedbackConstantSumResponseDetails;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      return details.answers.length \u003d\u003d\u003d 0;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   * Gets total required points."},{"lineNumber":46,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  get totalRequiredPoints(): number {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (this.questionDetails.pointsPerOption) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return this.questionDetails.points * this.recipientSubmissionForms.length;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    return this.questionDetails.points;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * Get answers for the recipients."},{"lineNumber":56,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  get allAnswers(): number[] {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    return this.recipientSubmissionForms.map("},{"lineNumber":59,"author":{"gitId":"-"},"content":"        (form: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          const details: FeedbackConstantSumResponseDetails \u003d"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              form.responseDetails as FeedbackConstantSumResponseDetails;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          if (details.answers.length \u003d\u003d\u003d 0) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          return details.answers[0];"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * Gets total answer points."},{"lineNumber":71,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  get totalAnsweredPoints(): number {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    return this.allAnswers.reduce((total: number, curr: number) \u003d\u003e total + curr, 0);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * Checks if all points are distributed unevenly."},{"lineNumber":78,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  get isAllPointsUneven(): boolean {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    this.allAnswers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    return set.size \u003d\u003d\u003d this.allAnswers.length;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * Checks if some points are distributed unevenly."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  get isSomePointsUneven(): boolean {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    if (this.allAnswers.length \u003d\u003d\u003d 1) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.allAnswers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    return set.size !\u003d\u003d 1;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * Checks if all points have been distributed."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  get isAllPointsDistributed(): boolean {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003d\u003d\u003d this.totalRequiredPoints;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * Checks if the points have been insufficiently distributed."},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  get isInsufficientPointsDistributed(): boolean {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003c this.totalRequiredPoints;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Checks if the points have been over allocated."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  get isPointsOverAllocated(): boolean {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    return this.totalAnsweredPoints \u003e this.totalRequiredPoints;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":"   * Checks if any of the points are negative."},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":124,"author":{"gitId":"zhaojj2209"},"content":"  get isAnyPointsNegative(): boolean {"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":"    return this.allAnswers.reduce((isNegative: boolean, curr: number) \u003d\u003e isNegative || (curr \u003c 0), false);"},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * Returns true if the question requires uneven distribution but the points are not unevenly distributed."},{"lineNumber":130,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  get isWronglyAllUneven(): boolean {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        \u0026\u0026 !this.isAllPointsUneven;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Returns true if the question requires uneven distribution and the points are unevenly distributed."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  get isCorrectlyAllUneven(): boolean {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u0026\u0026 this.isAllPointsUneven;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   * Returns true if the question requires some uneven distribution but points are not unevenly distributed for some."},{"lineNumber":146,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  get isWronglySomeUneven(): boolean {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u0026\u0026 !this.isSomePointsUneven;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * Returns true if the question requires some uneven distribution and points are unevenly distributed for some."},{"lineNumber":154,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  get isCorrectlySomeUneven(): boolean {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    return this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        \u0026\u0026 this.isSomePointsUneven;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  get isValid(): boolean {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    return this.isAllPointsDistributed \u0026\u0026 !this.isAnyPointsNegative"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        \u0026\u0026 (this.isCorrectlyAllUneven || this.isCorrectlySomeUneven"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        || this.questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.NONE);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":7,"-":158}},{"path":"src/web/app/components/question-types/question-constraint/rank-recipients-question-constraint.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"!questionDetails.areDuplicatesAllowed \u0026\u0026 isSameRanksAssigned\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"    The same rank should not be given multiple times.\u003c/p\u003e"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isNoRecipientRanked\" class\u003d\"text-info\"\u003e\u003cspan class\u003d\"fa fa-info-circle\"\u003e\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"    Please rank the above recipients.\u003c/p\u003e"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMinRecipientsEnabled \u0026\u0026 isRecipientsRankedLessThanMin\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"    Rank at least {{ questionDetails.minOptionsToBeRanked }} recipients.\u003c/p\u003e"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMaxRecipientsEnabled \u0026\u0026 isRecipientsRankedMoreThanMax\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"    Rank no more than {{questionDetails.maxOptionsToBeRanked}} recipients.\u003c/p\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":8,"-":2}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-options-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row text-left\" *ngFor\u003d\"let option of questionDetails.constSumOptions; let i \u003d index;\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-5 col-xs-12 text-md-right col-form-label\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cstrong\u003e{{ option }}\u003c/strong\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-7 col-xs-12 text-md-left\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cinput type\u003d\"number\" class\u003d\"form-control\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"           [ngModel]\u003d\"i \u003c responseDetails.answers.length ? responseDetails.answers[i] : \u0027\u0027\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"           (ngModelChange)\u003d\"triggerResponse(i, $event)\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"           [disabled]\u003d\"isDisabled\""},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"           min\u003d\"0\" step\u003d\"1\""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"           tmDisableWheel\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row\" *ngIf\u003d\"responseDetails.answers.length !\u003d\u003d 0\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12 col-sm-5 offset-sm-2\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" (click)\u003d\"triggerResponseDetailsChange(\u0027answers\u0027, [])\" [disabled]\u003d\"isDisabled\"\u003eClear Points\u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"responseDetails.answers.length !\u003d\u003d 0\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003c totalRequiredPoints\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Distribute the remaining {{ totalRequiredPoints - totalAnsweredPoints }} points.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003e totalRequiredPoints\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      Actual total is {{ totalAnsweredPoints }}! Remove the extra  {{ totalAnsweredPoints - totalRequiredPoints }} points allocated.\u003c/p\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"totalAnsweredPoints \u003d\u003d\u003d totalRequiredPoints\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      All points distributed!\u003c/p\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"    \u003cp *ngIf\u003d\"isAnyPointsNegative\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":"      Points cannot be negative!\u003c/p\u003e"},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY \u0026\u0026 !isAllPointsUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      Multiple options are given same points!\u003c/p\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY \u0026\u0026 isAllPointsUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      All allocated points are different!\u003c/p\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY \u0026\u0026 !isSomePointsUneven\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      All options are given {{ responseDetails.answers[0] }} points. Please allocate different points to at least one option.\u003c/p\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"questionDetails.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY \u0026\u0026 isSomePointsUneven\" class\u003d\"text-success\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      At least one option has been allocated different number of points.\u003c/p\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":3,"fsgmhoward":4,"-":38}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-options-question-edit-answer-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  DEFAULT_CONSTSUM_RESPONSE_DETAILS,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { QuestionEditAnswerFormComponent } from \u0027./question-edit-answer-form\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The constsum question options submission form for a recipient."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027tm-constsum-options-question-edit-answer-form\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./constsum-options-question-edit-answer-form.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./constsum-options-question-edit-answer-form.component.scss\u0027],"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class ConstsumOptionsQuestionEditAnswerFormComponent"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    extends QuestionEditAnswerFormComponent\u003cFeedbackConstantSumQuestionDetails, FeedbackConstantSumResponseDetails\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType: typeof FeedbackConstantSumDistributePointsType \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      FeedbackConstantSumDistributePointsType;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    super(DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS(), DEFAULT_CONSTSUM_RESPONSE_DETAILS());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * Assigns a point to the option specified by index."},{"lineNumber":34,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  triggerResponse(index: number, event: number): void {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    let newAnswers: number[] \u003d this.responseDetails.answers.slice();"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    if (newAnswers.length !\u003d\u003d this.questionDetails.constSumOptions.length) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      // initialize answers array on the fly"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      newAnswers \u003d Array(this.questionDetails.constSumOptions.length).fill(0);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    newAnswers[index] \u003d event ? Math.ceil(event) : 0;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.triggerResponseDetailsChange(\u0027answers\u0027, newAnswers);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * Gets total required points."},{"lineNumber":49,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  get totalRequiredPoints(): number {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    if (this.questionDetails.pointsPerOption) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      return this.questionDetails.points * this.questionDetails.constSumOptions.length;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    return this.questionDetails.points;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Gets total answer points."},{"lineNumber":59,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  get totalAnsweredPoints(): number {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    return this.responseDetails.answers.reduce((total: number, curr: number) \u003d\u003e total + curr, 0);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * Checks if all points are distributed unevenly."},{"lineNumber":66,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  get isAllPointsUneven(): boolean {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.responseDetails.answers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    return set.size \u003d\u003d\u003d this.responseDetails.answers.length;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * Checks if some points are distributed unevenly."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  get isSomePointsUneven(): boolean {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    if (this.responseDetails.answers.length \u003d\u003d\u003d 1) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    const set: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    this.responseDetails.answers.forEach((ans: number) \u003d\u003e set.add(ans));"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    return set.size !\u003d\u003d 1;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":"   * Checks if any of the points are negative."},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":"  get isAnyPointsNegative(): boolean {"},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"    return this.responseDetails.answers.reduce((isNegative: boolean, curr: number) \u003d\u003e isNegative || (curr \u003c 0), false);"},{"lineNumber":93,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":7,"-":88}},{"path":"src/web/app/components/question-types/question-edit-answer-form/constsum-recipients-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"      \u003cinput type\u003d\"number\" class\u003d\"form-control\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"             [ngModel]\u003d\"responseDetails.answers.length \u003d\u003d\u003d 1 ? responseDetails.answers[0] : \u0027\u0027\""},{"lineNumber":5,"author":{"gitId":"-"},"content":"             (ngModelChange)\u003d\"triggerResponse($event)\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"             [disabled]\u003d\"isDisabled\""},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"             min\u003d\"0\" step\u003d\"1\""},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"             tmDisableWheel\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":4,"-":6}},{"path":"src/web/app/components/question-types/question-edit-answer-form/num-scale-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-row text-left\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-md-2 col-xs-5\"\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"    \u003cinput type\u003d\"number\" class\u003d\"form-control\" min\u003d\"{{ questionDetails.minScale }}\" max\u003d\"{{ questionDetails.maxScale }}\" step\u003d\"{{ questionDetails.step }}\" tmDisableWheel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"           [ngModel]\u003d\"responseDetails.answer \u003d\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED ? \u0027\u0027 : responseDetails.answer\" (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"possible-values\" class\u003d\"col-md-9 col-xs-6 text-secondary\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Possible values: {{ possibleValues }}"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row mt-1\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"!isValidPossibleValue(responseDetails.answer) \u0026\u0026 responseDetails.answer !\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED\" class\u003d\"text-danger\"\u003eThe scale entered is not a possible value.\u003c/p\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cp *ngIf\u003d\"responseDetails.answer \u003d\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED\" class\u003d\"text-info\"\u003ePlease enter a scale number.\u003c/p\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":15}},{"path":"src/web/app/components/question-types/question-edit-answer-form/question-edit-answer-form.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../teammates-common/teammates-common.module\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import { WheelDisablerModule } from \u0027../../wheel-disabler/wheel-disabler.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ConstsumOptionsQuestionEditAnswerFormComponent } from \u0027./constsum-options-question-edit-answer-form.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  ConstsumRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027./constsum-recipients-question-edit-answer-form.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ContributionPointDescriptionPipe } from \u0027./contribution-point-description.pipe\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { ContributionQuestionEditAnswerFormComponent } from \u0027./contribution-question-edit-answer-form.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { McqQuestionEditAnswerFormComponent } from \u0027./mcq-question-edit-answer-form.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { MsqQuestionEditAnswerFormComponent } from \u0027./msq-question-edit-answer-form.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { NumScaleQuestionEditAnswerFormComponent } from \u0027./num-scale-question-edit-answer-form.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { RankOptionsQuestionEditAnswerFormComponent } from \u0027./rank-options-question-edit-answer-form.component\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { RankRecipientsQuestionEditAnswerFormComponent } from \u0027./rank-recipients-question-edit-answer-form.component\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { RubricQuestionEditAnswerFormComponent } from \u0027./rubric-question-edit-answer-form.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { TextQuestionEditAnswerFormComponent } from \u0027./text-question-edit-answer-form.component\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Module for all different types of question edit answer forms."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ContributionQuestionEditAnswerFormComponent,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    TextQuestionEditAnswerFormComponent,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    McqQuestionEditAnswerFormComponent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    NumScaleQuestionEditAnswerFormComponent,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ContributionPointDescriptionPipe,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    MsqQuestionEditAnswerFormComponent,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    RankOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    RankRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    RubricQuestionEditAnswerFormComponent,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ConstsumOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ConstsumRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ContributionQuestionEditAnswerFormComponent,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    TextQuestionEditAnswerFormComponent,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    McqQuestionEditAnswerFormComponent,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    NumScaleQuestionEditAnswerFormComponent,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ContributionPointDescriptionPipe,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    MsqQuestionEditAnswerFormComponent,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    RankOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    RankRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    RubricQuestionEditAnswerFormComponent,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    ConstsumOptionsQuestionEditAnswerFormComponent,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    ConstsumRecipientsQuestionEditAnswerFormComponent,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":52,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    FormsModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    RichTextEditorModule,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    TeammatesCommonModule,"},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"    WheelDisablerModule,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":58,"author":{"gitId":"-"},"content":"})"},{"lineNumber":59,"author":{"gitId":"-"},"content":"export class QuestionEditAnswerFormModule { }"}],"authorContributionMap":{"fsgmhoward":2,"-":57}},{"path":"src/web/app/components/question-types/question-edit-answer-form/rank-options-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"form-group row text-left\" *ngFor\u003d\"let num of questionDetails.options; let i \u003d index;\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-5 col-xs-12 text-md-right col-form-label\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cstrong\u003e{{ questionDetails.options[i] }}\u003c/strong\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-md-7 col-xs-12 text-md-left\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"responseDetails.answers[i]\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"            (ngModelChange)\u003d\"triggerResponse(i, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003coption [ngValue]\u003d\"RANK_OPTIONS_ANSWER_NOT_SUBMITTED\"\u003e\u003c/option\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003coption *ngFor\u003d\"let rank of ranksToBeAssigned\" [ngValue]\u003d\"rank\"\u003e{{ rank }}\u003c/option\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/select\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv\u003e"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"!questionDetails.areDuplicatesAllowed \u0026\u0026 isSameRanksAssigned\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"    The same rank should not be given multiple times.\u003c/p\u003e"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isNoOptionRanked\" class\u003d\"text-info\"\u003e\u003cspan class\u003d\"fa fa-info-circle\"\u003e\u003c/span\u003e"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"    Please rank the above options.\u003c/p\u003e"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMinOptionsEnabled \u0026\u0026 isOptionsRankedLessThanMin\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"    You need to rank at least {{ questionDetails.minOptionsToBeRanked }} options.\u003c/p\u003e"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  \u003cp *ngIf\u003d\"isMaxOptionsEnabled \u0026\u0026 isOptionsRankedMoreThanMax\" class\u003d\"text-danger\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    Rank no more than {{questionDetails.maxOptionsToBeRanked}} options.\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":11,"-":12}},{"path":"src/web/app/components/question-types/question-edit-answer-form/rank-recipients-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv class\u003d\"margin-bottom-15px\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"responseDetails.answer\""},{"lineNumber":3,"author":{"gitId":"-"},"content":"          (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003coption [ngValue]\u003d\"RANK_RECIPIENTS_ANSWER_NOT_SUBMITTED\"\u003e\u003c/option\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003coption *ngFor\u003d\"let rank of ranksToBeAssigned\" [ngValue]\u003d\"rank\"\u003e{{ rank }}\u003c/option\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/select\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":6}},{"path":"src/web/app/components/session-edit-form/session-edit-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card card-plain\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"close-header\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"closeEditFormHandler()\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":9,"author":{"gitId":"Nicolascwy"},"content":"      \u003cdiv class\u003d\"col-md-7\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row align-items-center\"\u003e"},{"lineNumber":11,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"col-md-3\"\u003e"},{"lineNumber":12,"author":{"gitId":"Nicolascwy"},"content":"            \u003ch5 class\u003d\"text-right\"\u003eCreate new\u003c/h5\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"col-9 col-md-8\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cselect id\u003d\"session-type\" class\u003d\"form-control\" [ngModel]\u003d\"model.templateSessionName\" (ngModelChange)\u003d\"triggerModelChange(\u0027templateSessionName\u0027, $event)\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"              \u003coption *ngFor\u003d\"let templateSession of templateSessions\" [ngValue]\u003d\"templateSession.name\"\u003e{{ templateSession.name }}\u003c/option\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003c/select\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-1 col-md-1\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003ca type\u003d\"button\" class\u003d\"btn btn-link\" tmRouterLink\u003d\"/web/instructor/help\" [queryParams]\u003d\"{ questionId: \u0027sessions\u0027, section: \u0027sessions\u0027 }\" target\u003d\"_blank\"\u003e\u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e\u003c/a\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"Nicolascwy"},"content":"      \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center align-items-center mt-1\"\u003e"},{"lineNumber":26,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"col-md-2\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003ch5 class\u003d\"text-md-right\"\u003eOr: \u003c/h5\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-copy-session\" type\u003d\"button\" class\u003d\"btn btn-info align-row\" (click)\u003d\"copyOthersHandler()\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cspan\u003eCopy from previous feedback sessions\u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"padding-left-7px\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003ctm-ajax-loading *ngIf\u003d\"isCopyOtherSessionLoading\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center text-md-right session-form-buttons\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-edit\" type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"triggerModelChange(\u0027isEditable\u0027, true)\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT \u0026\u0026 !model.isEditable \u0026\u0026 !model.isSaving\"\u003e\u003ci class\u003d\"fas fa-pencil-alt\"\u003e\u003c/i\u003e Edit\u003c/button\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-save\" type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"submitFormHandler()\" [disabled]\u003d\"model.isSaving\" *ngIf\u003d\"model.isEditable || model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003e \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Save\u003c/button\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" ngbTooltip\u003d\"Discard changes to the feedback session\" (click)\u003d\"cancelHandler()\" *ngIf\u003d\"model.isEditable\" [disabled]\u003d\"model.isSaving\"\u003e\u003ci class\u003d\"fas fa-ban\"\u003e\u003c/i\u003e Cancel\u003c/button\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-delete\" type\u003d\"button\" class\u003d\"btn btn-primary\" ngbTooltip\u003d\"Delete the feedback session\" (click)\u003d\"deleteHandler()\" [disabled]\u003d\"model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isDeleting\"\u003e\u003c/tm-ajax-loading\u003e\u003ci class\u003d\"fas fa-trash\"\u003e\u003c/i\u003e Delete\u003c/button\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-copy\" type\u003d\"button\" class\u003d\"btn btn-primary\" ngbTooltip\u003d\"Copy this feedback session to other courses\" (click)\u003d\"copyHandler()\" [disabled]\u003d\"model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isCopying\"\u003e\u003c/tm-ajax-loading\u003e\u003ci class\u003d\"far fa-copy\"\u003e\u003c/i\u003e Copy\u003c/button\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\" [ngClass]\u003d\"{\u0027col-form-label\u0027: formMode \u003d\u003d\u003d SessionEditFormMode.ADD}\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Course for which the feedback session is for.\"\u003eCourse ID\u003c/span\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-auto text-md-left\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cselect id\u003d\"add-course-id\" class\u003d\"form-control\" [ngClass]\u003d\"{\u0027is-invalid\u0027: courseCandidates.length \u003d\u003d\u003d 0}\" [ngModel]\u003d\"model.courseId\" (ngModelChange)\u003d\"courseIdChangeHandler($event)\" [disabled]\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003coption *ngFor\u003d\"let course of courseCandidates\" [ngValue]\u003d\"course.courseId\"\u003e{{ course.courseId }}\u003c/option\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"invalid-feedback\" *ngIf\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                There is no un-archived course."},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"edit-course-id\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e {{ model.courseId }} \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\" [ngClass]\u003d\"{\u0027col-form-label\u0027: formMode \u003d\u003d\u003d SessionEditFormMode.ADD}\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Time Zone"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"time-zone\" class\u003d\"col-md-3 text-md-left\" [ngClass]\u003d\"{\u0027col-form-label\u0027: formMode \u003d\u003d\u003d SessionEditFormMode.ADD}\"\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"To change this, edit the course settings. TEAMMATES automatically adjusts to match the current time offset in your area, including clock changes due to daylight saving time.\"\u003e{{ model.timeZone }}\u003c/span\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Course Name"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"course-name\" class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            {{ model.courseName }}"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\" class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Enter the name of the feedback session e.g. Feedback Session 1.\"\u003eSession Name\u003c/span\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"formMode !\u003d\u003d SessionEditFormMode.ADD\"\u003eSession Name\u003c/span\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"              \u003cinput id\u003d\"add-session-name\" type\u003d\"text\" class\u003d\"form-control\" [ngModel]\u003d\"model.feedbackSessionName\" (ngModelChange)\u003d\"triggerModelChange(\u0027feedbackSessionName\u0027, $event)\" placeholder\u003d\"e.g. Feedback for Project Presentation 1\" maxlength\u003d\"64\" /\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"              \u003cdiv\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                {{FEEDBACK_SESSION_NAME_MAX_LENGTH - model.feedbackSessionName.length}} characters left"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"edit-session-name\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e {{ model.feedbackSessionName }} \u003c/div\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Will be displayed at the top of the page when users respond to the session.\"\u003eInstructions\u003c/span\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003ctm-rich-text-editor id\u003d\"instructions\" [richText]\u003d\"model.instructions\" (richTextChange)\u003d\"triggerModelChange(\u0027instructions\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\"\u003e\u003c/tm-rich-text-editor\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Submission Status"},{"lineNumber":115,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"submission-status\" class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            {{ model.submissionStatus | submissionStatusName }}"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold mt-3 mt-md-0\"\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Published Status"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"published-status\" class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            {{ model.publishStatus | publishStatusName }}"},{"lineNumber":124,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\"\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"col-12 text-md-left\"\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              \u003cdiv\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"Users can start submitting responses.\"\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                  Submission opening time"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center align-items-center\"\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"              \u003cdiv id\u003d\"submission-start-date\" class\u003d\"col-md-7 col-xs-center\"\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u003ctm-datepicker [disabled]\u003d\"!model.isEditable\" (dateChangeCallback)\u003d\"triggerModelChange(\u0027submissionStartDate\u0027, $event)\""},{"lineNumber":143,"author":{"gitId":"-"},"content":"                                     [date]\u003d\"model.submissionStartDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u003ctm-timepicker id\u003d\"submission-start-time\" [time]\u003d\"model.submissionStartTime\" (timeChange)\u003d\"triggerModelChange(\u0027submissionStartTime\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-5 border-left-gray\"\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12 text-md-left ml-md-2\"\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"No more submissions from users.\"\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                  Submission closing time"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row align-items-center\"\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              \u003cdiv id\u003d\"submission-end-date\" class\u003d\"col-md-7 col-xs-center\"\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u003ctm-datepicker [disabled]\u003d\"!model.isEditable\" (dateChangeCallback)\u003d\"triggerModelChange(\u0027submissionEndDate\u0027, $event)\""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                                     [minDate]\u003d\"model.submissionStartDate\" [date]\u003d\"model.submissionEndDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u003ctm-timepicker id\u003d\"submission-end-time\" [time]\u003d\"model.submissionEndTime\" (timeChange)\u003d\"triggerModelChange(\u0027submissionEndTime\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 border-left-gray\"\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"ngb-tooltip-class col-12 text-md-left ml-md-2\" ngbTooltip\u003d\"Amount of time the system will continue accepting submissions after the specified deadline.\"\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"control-label font-bold\"\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                  Grace period"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u003cselect id\u003d\"grace-period\" class\u003d\"form-control\" [ngModel]\u003d\"model.gracePeriod\" (ngModelChange)\u003d\"triggerModelChange(\u0027gracePeriod\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                  \u003coption *ngFor\u003d\"let graceMinute of [0, 5, 10, 15, 20, 25, 30]\" [ngValue]\u003d\"graceMinute\"\u003e{{ graceMinute + \u0027 min\u0027}}\u003c/option\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                \u003c/select\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!model.hasVisibleSettingsPanelExpanded\" class\u003d\"margin-top-20px\"\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"text-muted\"\u003eSession is visible at submission opening time, responses are only visible when you publish the results.\u003c/span\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"btn-change-visibility\" type\u003d\"button\" class\u003d\"btn btn-link\" (click)\u003d\"triggerModelChange(\u0027hasVisibleSettingsPanelExpanded\u0027, true)\" [disabled]\u003d\"!model.isEditable\"\u003e[Change]\u003c/button\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\" *ngIf\u003d\"model.hasVisibleSettingsPanelExpanded\" @collapseAnim\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row align-items-start\"\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-6 text-center text-md-left\"\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row ml-md-1\"\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"Session can be visible before it is open for submissions so that users can preview the questions.\"\u003eMake session visible \u003c/label\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-2 mt-md-1\"\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                  \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    \u003cinput id\u003d\"session-visibility-custom\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"sessionVisibleRadio\" [value]\u003d\"SessionVisibleSetting.CUSTOM\" [ngModel]\u003d\"model.sessionVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027sessionVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    At"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                  \u003c/label\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":209,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"              \u003cdiv id\u003d\"session-visibility-date\" class\u003d\"col-md-6\"\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                \u003ctm-datepicker [disabled]\u003d\"model.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.CUSTOM || !model.isEditable\""},{"lineNumber":212,"author":{"gitId":"-"},"content":"                                     (dateChangeCallback)\u003d\"triggerModelChange(\u0027customSessionVisibleDate\u0027, $event)\""},{"lineNumber":213,"author":{"gitId":"-"},"content":"                                     [maxDate]\u003d\"maxDateForSessionVisible\" [date]\u003d\"model.customSessionVisibleDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                \u003ctm-timepicker id\u003d\"session-visibility-time\" [time]\u003d\"model.customSessionVisibleTime\" (timeChange)\u003d\"triggerModelChange(\u0027customSessionVisibleTime\u0027, $event)\" [isDisabled]\u003d\"model.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.CUSTOM || !model.isEditable\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-1 ml-md-3\"\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12 form-check\"\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                  \u003cinput id\u003d\"session-visibility-at-open\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"sessionVisibleRadio\" [value]\u003d\"SessionVisibleSetting.AT_OPEN\" [ngModel]\u003d\"model.sessionVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027sessionVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                  Submission opening time"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-6 sessionVisibleRadio border-left-gray text-center text-md-left\"\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row ml-md-1\"\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"Make responses for the feedback session visible to designated recipients.\"\u003eMake response visible \u003c/label\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"col-md-2 mt-md-1\"\u003e"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                      \u003cinput id\u003d\"response-visibility-custom\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"responseVisibleRadio\" [value]\u003d\"ResponseVisibleSetting.CUSTOM\" [ngModel]\u003d\"model.responseVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027responseVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"/\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                      At"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u003c/label\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                  \u003c/div\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                \u003cdiv id\u003d\"response-visibility-date\" class\u003d\"col-md-6\"\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                  \u003ctm-datepicker [disabled]\u003d\"model.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.CUSTOM || !model.isEditable\""},{"lineNumber":245,"author":{"gitId":"-"},"content":"                                       (dateChangeCallback)\u003d\"triggerModelChange(\u0027customResponseVisibleDate\u0027, $event)\""},{"lineNumber":246,"author":{"gitId":"-"},"content":"                                       [minDate]\u003d\"minDateForResponseVisible\" [date]\u003d\"model.customResponseVisibleDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                  \u003ctm-timepicker id\u003d\"response-visibility-time\" [time]\u003d\"model.customResponseVisibleTime\" (timeChange)\u003d\"triggerModelChange(\u0027customResponseVisibleTime\u0027, $event)\" [isDisabled]\u003d\"model.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.CUSTOM || !model.isEditable\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                  \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Same time as when the session becomes visible to users.\"\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    \u003cinput id\u003d\"response-visibility-immediately\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"responseVisibleRadio\" [value]\u003d\"ResponseVisibleSetting.AT_VISIBLE\" [ngModel]\u003d\"model.responseVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027responseVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    Immediately"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                  \u003c/label\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":263,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                  \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Remember to manually publish the responses for this session later on.\"\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    \u003cinput id\u003d\"response-visibility-manually\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"responseVisibleRadio\" [value]\u003d\"ResponseVisibleSetting.LATER\" [ngModel]\u003d\"model.responseVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027responseVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    Not now (publish manually)"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                  \u003c/label\u003e"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":270,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!model.hasEmailSettingsPanelExpanded\"\u003e"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"text-muted\"\u003eEmails are sent when session opens (within 15 minutes), 24 hrs before session closes and when results are published.\u003c/span\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"btn-change-email\" type\u003d\"button\" class\u003d\"btn btn-link\" (click)\u003d\"triggerModelChange(\u0027hasEmailSettingsPanelExpanded\u0027, true)\" [disabled]\u003d\"!model.isEditable\"\u003e[Change]\u003c/button\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\" *ngIf\u003d\"model.hasEmailSettingsPanelExpanded\" @collapseAnim\u003e"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"col-12 font-bold\"\u003e"},{"lineNumber":283,"author":{"gitId":"-"},"content":"          Send emails for"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row ml-md-1 mt-md-3\"\u003e"},{"lineNumber":286,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"},{"lineNumber":288,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Notify students when the session is open for submission.\"\u003e"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                \u003cinput id\u003d\"email-opening\" class\u003d\"form-check-input\" type\u003d\"checkbox\" checked disabled\u003eSession opening reminder"},{"lineNumber":290,"author":{"gitId":"-"},"content":"              \u003c/label\u003e"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":293,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"},{"lineNumber":295,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Remind students to submit 24 hours before the end of the session.\"\u003e"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                \u003cinput id\u003d\"email-closing\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"model.isClosingEmailEnabled\" (ngModelChange)\u003d\"triggerModelChange(\u0027isClosingEmailEnabled\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e Session closing reminder"},{"lineNumber":297,"author":{"gitId":"-"},"content":"              \u003c/label\u003e"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":299,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":300,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"},{"lineNumber":302,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Notify students when the session results is published.\"\u003e"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                \u003cinput id\u003d\"email-published\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"model.isPublishedEmailEnabled\" (ngModelChange)\u003d\"triggerModelChange(\u0027isPublishedEmailEnabled\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e Results published announcement"},{"lineNumber":304,"author":{"gitId":"-"},"content":"              \u003c/label\u003e"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":306,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row margin-top-20px\"\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center\"\u003e"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        \u003cspan class\u003d\"loader\"\u003e\u003c/span\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":314,"author":{"gitId":"-"},"content":"          \u003cbutton id\u003d\"btn-create-session\" type\u003d\"button\" class\u003d\"btn btn-primary\" [disabled]\u003d\"courseCandidates.length \u003d\u003d\u003d 0 || model.isSaving\" (click)\u003d\"submitFormHandler()\"\u003e"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003eCreate Feedback Session"},{"lineNumber":316,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":"          \u003cp class\u003d\"text-danger margin-top-20px\" *ngIf\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e\u003cb\u003eYou need to have an active(unarchived) course to create a session!\u003c/b\u003e\u003c/p\u003e"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e"},{"lineNumber":320,"author":{"gitId":"-"},"content":"          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-success\" [disabled]\u003d\"model.isSaving || !model.isEditable\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\" (click)\u003d\"submitFormHandler()\"\u003e"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003eSave Changes"},{"lineNumber":322,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"-":320,"Nicolascwy":7}},{"path":"src/web/app/components/session-edit-form/session-edit-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbCalendar, NgbDateParserFormatter } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { TemplateSession } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FEEDBACK_SESSION_NAME_MAX_LENGTH } from \u0027../../../types/field-validator\u0027;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import { DatePickerFormatter } from \u0027../datepicker/datepicker-formatter\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { DateFormat } from \u0027../datepicker/datepicker.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../simple-modal/simple-modal-type\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../teammates-common/collapse-anim\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { SessionEditFormMode, SessionEditFormModel } from \u0027./session-edit-form-model\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Form to Add/Edit feedback sessions."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-edit-form\u0027,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-edit-form.component.html\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-edit-form.component.scss\u0027],"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"  providers: [{ provide: NgbDateParserFormatter, useClass: DatePickerFormatter }],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":29,"author":{"gitId":"-"},"content":"})"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export class SessionEditFormComponent {"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  SessionVisibleSetting: typeof SessionVisibleSetting \u003d SessionVisibleSetting;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting: typeof ResponseVisibleSetting \u003d ResponseVisibleSetting;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  // const"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  FEEDBACK_SESSION_NAME_MAX_LENGTH: number \u003d FEEDBACK_SESSION_NAME_MAX_LENGTH;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  model: SessionEditFormModel \u003d {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    submissionStartTime: { hour: 0, minute: 0 },"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    submissionStartDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    submissionEndTime: { hour: 0, minute: 0 },"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    submissionEndDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    customSessionVisibleTime: { hour: 0, minute: 0 },"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    customResponseVisibleTime: { hour: 0, minute: 0 },"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    templateSessionName: \u0027\u0027,"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    isEditable: true,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    isCopying: false,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    hasVisibleSettingsPanelExpanded: false,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    hasEmailSettingsPanelExpanded: false,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  modelChange: EventEmitter\u003cSessionEditFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  formMode: SessionEditFormMode \u003d SessionEditFormMode.ADD;"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  // add mode specific"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  courseCandidates: Course[] \u003d [];"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  templateSessions: TemplateSession[] \u003d [];"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  isCopyOtherSessionLoading: boolean \u003d false;"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  // event emission"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  addNewSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  editExistingSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  cancelEditingSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  deleteExistingSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  copyCurrentSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  copyOtherSessionsEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  closeEditFormEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  constructor(private simpleModalService: SimpleModalService, public calendar: NgbCalendar) { }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":120,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  triggerModelChange(field: string, data: any): void {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    this.modelChange.emit({"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      [field]: data,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * Handles course Id change event."},{"lineNumber":130,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":131,"author":{"gitId":"-"},"content":"   * \u003cp\u003eUsed in ADD mode."},{"lineNumber":132,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  courseIdChangeHandler(newCourseId: string): void {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    const course: Course | undefined \u003d this.courseCandidates.find((c: Course) \u003d\u003e c.courseId \u003d\u003d\u003d newCourseId);"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    if (course) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      this.modelChange.emit({"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        ...this.model,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        courseId: newCourseId,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        courseName: course.courseName,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        timeZone: course.timeZone,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   * Gets the maximum date for a session to be visible based on the input model."},{"lineNumber":148,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  get maxDateForSessionVisible(): DateFormat {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    switch (this.model.responseVisibleSetting) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      case ResponseVisibleSetting.LATER:"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      case ResponseVisibleSetting.AT_VISIBLE:"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return this.model.submissionStartDate;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      case ResponseVisibleSetting.CUSTOM: {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        const submissionStartDate: moment.Moment \u003d this.getMomentInstance(this.model.submissionStartDate);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        const responseVisibleDate: moment.Moment \u003d this.getMomentInstance(this.model.customResponseVisibleDate);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (submissionStartDate.isBefore(responseVisibleDate)) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          return this.model.submissionStartDate;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return this.model.customResponseVisibleDate;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"          year: 0,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"          month: 0,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          day: 0,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   * Gets the minimum date for responses to be visible based on the input model."},{"lineNumber":174,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  get minDateForResponseVisible(): DateFormat {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    switch (this.model.sessionVisibleSetting) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      case SessionVisibleSetting.AT_OPEN:"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return this.model.submissionStartDate;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      case SessionVisibleSetting.CUSTOM:"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return this.model.customSessionVisibleDate;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"          year: 0,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"          month: 0,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"          day: 0,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":191,"author":{"gitId":"-"},"content":"   * Gets a moment instance from a date."},{"lineNumber":192,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  getMomentInstance(date: DateFormat): moment.Moment {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    const inst: moment.Moment \u003d moment();"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    inst.set(\u0027year\u0027, date.year);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    inst.set(\u0027date\u0027, date.day);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    return inst;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":202,"author":{"gitId":"-"},"content":"   * Handles submit button click event."},{"lineNumber":203,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  submitFormHandler(): void {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    // resolve local date time to timestamp"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d SessionEditFormMode.ADD) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      this.addNewSessionEvent.emit();"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d SessionEditFormMode.EDIT) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      this.editExistingSessionEvent.emit();"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * Handles cancel button click event."},{"lineNumber":217,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  cancelHandler(): void {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    this.simpleModalService.openConfirmationModal(\u0027Discard unsaved edit?\u0027,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, \u0027Warning: Any unsaved changes will be lost.\u0027).result.then(() \u003d\u003e {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"          this.cancelEditingSessionEvent.emit();"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":226,"author":{"gitId":"-"},"content":"   * Handles delete current feedback session button click event."},{"lineNumber":227,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  deleteHandler(): void {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    this.simpleModalService.openConfirmationModal("},{"lineNumber":230,"author":{"gitId":"-"},"content":"        `Delete the session \u003cstrong\u003e${this.model.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        \u0027The session will be moved to the recycle bin. This action can be reverted \u0027"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        + \u0027by going to the \"Sessions\" tab and restoring the desired session(s).\u0027,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    ).result.then(() \u003d\u003e {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      this.deleteExistingSessionEvent.emit();"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":240,"author":{"gitId":"-"},"content":"   * Handles copy current feedback session button click event."},{"lineNumber":241,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  copyHandler(): void {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    this.copyCurrentSessionEvent.emit();"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * Handles copy from other feedback sessions button click event."},{"lineNumber":248,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  copyOthersHandler(): void {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    this.copyOtherSessionsEvent.emit();"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":254,"author":{"gitId":"-"},"content":"   * Handles closing of the edit form."},{"lineNumber":255,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  closeEditFormHandler(): void {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    this.closeEditFormEvent.emit();"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":257}},{"path":"src/web/app/components/sessions-table/send-reminders-to-respondents-modal/send-reminders-to-respondents-modal.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  InstructorListInfoTableRowModel,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  StudentListInfoTableRowModel,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Send reminders to respondents modal."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  selector: \u0027tm-send-reminders-to-respondents-modal\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./send-reminders-to-respondents-modal.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./send-reminders-to-respondents-modal.component.scss\u0027],"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class SendRemindersToRespondentsModalComponent {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  // values below will be injected by other component"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  studentListInfoTableRowModels: StudentListInfoTableRowModel[] \u003d [];"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  instructorListInfoTableRowModels: InstructorListInfoTableRowModel[] \u003d [];"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  constructor(public activeModal: NgbActiveModal) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * Changes selection state for all students."},{"lineNumber":29,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllStudentsHandler(shouldSelect: boolean): void {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.studentListInfoTableRowModels.forEach((model: StudentListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      model.isSelected \u003d shouldSelect;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * Changes selection state for all yet to submit students."},{"lineNumber":38,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllYetSubmittedStudentsHandler(shouldSelect: boolean): void {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    this.studentListInfoTableRowModels.forEach((model: StudentListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      if (!model.hasSubmittedSession) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        model.isSelected \u003d shouldSelect;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * Changes selection state for all instructors."},{"lineNumber":49,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllInstructorsHandler(shouldSelect: boolean): void {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.instructorListInfoTableRowModels.forEach((model: InstructorListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      model.isSelected \u003d shouldSelect;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * Changes selection state for all yet to submit instructors."},{"lineNumber":58,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  changeSelectionStatusForAllYetSubmittedInstructorsHandler(shouldSelect: boolean): void {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.instructorListInfoTableRowModels.forEach((model: InstructorListInfoTableRowModel) \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      if (!model.hasSubmittedSession) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.isSelected \u003d shouldSelect;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * Collates a list of selected students with selected status."},{"lineNumber":69,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  collateRespondentsToSendHandler(): (StudentListInfoTableRowModel | InstructorListInfoTableRowModel)[] {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    const studentsToSend: (StudentListInfoTableRowModel | InstructorListInfoTableRowModel)[] \u003d"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.studentListInfoTableRowModels.map("},{"lineNumber":73,"author":{"gitId":"-"},"content":"            (model: StudentListInfoTableRowModel) \u003d\u003e ({ ...model }))"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            .filter((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    const instructorsToSend: (StudentListInfoTableRowModel | InstructorListInfoTableRowModel)[] \u003d"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.instructorListInfoTableRowModels.map("},{"lineNumber":77,"author":{"gitId":"-"},"content":"            (model: InstructorListInfoTableRowModel) \u003d\u003e ({ ...model }))"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            .filter((model: InstructorListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    return studentsToSend.concat(instructorsToSend);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * Checks whether all students are selected."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  get isAllStudentsSelected(): boolean {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return this.studentListInfoTableRowModels.every((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * Checks whether all yet to submit students are selected."},{"lineNumber":91,"author":{"gitId":"Nicolascwy"},"content":"   *"},{"lineNumber":92,"author":{"gitId":"Nicolascwy"},"content":"   * If all students have submitted it will return false."},{"lineNumber":93,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  get isAllYetToSubmitStudentsSelected(): boolean {"},{"lineNumber":95,"author":{"gitId":"Nicolascwy"},"content":"    const nonSubmitters: StudentListInfoTableRowModel[] \u003d this.studentListInfoTableRowModels"},{"lineNumber":96,"author":{"gitId":"Nicolascwy"},"content":"      .filter((model: StudentListInfoTableRowModel) \u003d\u003e !model.hasSubmittedSession);"},{"lineNumber":97,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":98,"author":{"gitId":"Nicolascwy"},"content":"    return nonSubmitters.length \u003e 0 \u0026\u0026 nonSubmitters.every((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":102,"author":{"gitId":"-"},"content":"   * Checks whether all instructors are selected."},{"lineNumber":103,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  get isAllInstructorsSelected(): boolean {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    return this.instructorListInfoTableRowModels.every((model: InstructorListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   * Checks whether all yet to submit instructors are selected."},{"lineNumber":110,"author":{"gitId":"Nicolascwy"},"content":"   *"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":"   * If all instructors have submitted it will return false."},{"lineNumber":112,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  get isAllYetToSubmitInstructorsSelected(): boolean {"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"    const nonSubmitters: InstructorListInfoTableRowModel[] \u003d this.instructorListInfoTableRowModels"},{"lineNumber":115,"author":{"gitId":"Nicolascwy"},"content":"      .filter((model: InstructorListInfoTableRowModel) \u003d\u003e !model.hasSubmittedSession);"},{"lineNumber":116,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    return nonSubmitters.length \u003e 0"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u0026\u0026 nonSubmitters.every((model: InstructorListInfoTableRowModel) \u003d\u003e model.isSelected);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":109,"Nicolascwy":11}},{"path":"src/web/app/components/sessions-table/sessions-table.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"sessionsTableRowModels.length \u003e 0; else noSessionMessage\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003ctable id\u003d\"sessions-table\" class\u003d\"table table-responsive-lg table-striped table-bordered margin-bottom-0\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cthead\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003ctr [ngClass]\u003d\"{ \u0027bg-primary text-white\u0027: headerColorScheme \u003d\u003d\u003d SessionsTableHeaderColorScheme.BLUE }\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003cth id\u003d\"sort-course-id\" class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.COURSE_ID)\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.COURSE_ID)\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          Course ID"},{"lineNumber":8,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cth id\u003d\"sort-session-name\" class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.SESSION_NAME)\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          Session Name"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_NAME \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_NAME \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.SESSION_START_DATE)\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.START_DATE)\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          Start Date"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_START_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_START_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortSessionsTableRowModels(SortBy.SESSION_END_DATE)\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.END_DATE)\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          End Date"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_END_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"sessionsTableRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_END_DATE \u0026\u0026 sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/th\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cth\u003eSubmissions\u003c/th\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cth\u003eResponses\u003c/th\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Number of students submitted / Class size\" container\u003d\"body\"\u003e\u003cspan \u003eResponse Rate\u003c/span\u003e\u003c/th\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/thead\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003ctbody\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003ctr *ngFor\u003d\"let sessionsTableRowModel of sessionsTableRowModels; let idx \u003d index\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003ctd class\u003d\"text-break\" *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.COURSE_ID)\"\u003e{{ sessionsTableRowModel.feedbackSession.courseId }}\u003c/td\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003ctd class\u003d\"text-break\"\u003e{{ sessionsTableRowModel.feedbackSession.feedbackSessionName }}\u003c/td\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003ctd *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.START_DATE)\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.submissionStartTimestamp | formatDateDetail: sessionsTableRowModel.feedbackSession.timeZone\" \u003e{{ sessionsTableRowModel.feedbackSession.submissionStartTimestamp | formatDateBrief: sessionsTableRowModel.feedbackSession.timeZone }}\u003c/span\u003e\u003c/td\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003ctd *ngIf\u003d\"columnsToShow.includes(SessionsTableColumn.END_DATE)\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.submissionEndTimestamp | formatDateDetail: sessionsTableRowModel.feedbackSession.timeZone\"\u003e{{ sessionsTableRowModel.feedbackSession.submissionEndTimestamp | formatDateBrief: sessionsTableRowModel.feedbackSession.timeZone }}\u003c/span\u003e\u003c/td\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003ctd\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus | submissionStatusTooltip\"\u003e{{ sessionsTableRowModel.feedbackSession.submissionStatus | submissionStatusName }}\u003c/span\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003ctd\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"sessionsTableRowModel.feedbackSession.publishStatus | publishStatusTooltip\"\u003e{{ sessionsTableRowModel.feedbackSession.publishStatus | publishStatusName }}\u003c/span\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003ctd\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003ca id\u003d\"show-response-rate-{{ idx }}\" href\u003d\"#\" *ngIf\u003d\"sessionsTableRowModel.responseRate.length \u003d\u003d\u003d 0 \u0026\u0026 !sessionsTableRowModel.isLoadingResponseRate\" (click)\u003d\"loadResponseRateEvent.emit(idx); $event.preventDefault()\"\u003eShow\u003c/a\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"response-rate-{{ idx }}\" *ngIf\u003d\"sessionsTableRowModel.responseRate.length !\u003d\u003d 0\"\u003e{{ sessionsTableRowModel.responseRate }}\u003c/div\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003ctm-ajax-loading *ngIf\u003d\"sessionsTableRowModel.isLoadingResponseRate\" [useBlueSpinner]\u003d\"true\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003ctd class\u003d\"actions-cell\"\u003e"},{"lineNumber":64,"author":{"gitId":"Nicolascwy"},"content":"          \u003cdiv class\u003d\"d-flex\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003ca *ngIf\u003d\"sessionsTableRowModel.instructorPrivilege.canModifySession; else editSessionBtn\" tmRouterLink\u003d\"/web/instructor/sessions/edit\" [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName, editingMode: true }\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003cng-container *ngTemplateOutlet\u003d\"editSessionBtn\"\u003e\u003c/ng-container\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cng-template #editSessionBtn\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canModifySession\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                Edit"},{"lineNumber":72,"author":{"gitId":"-"},"content":"              \u003c/button\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-soft-delete-{{ idx }}\" type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" (click)\u003d\"moveSessionToRecycleBin(idx)\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canModifySession\"\u003eDelete\u003c/button\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-copy-{{ idx }}\" type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" ngbTooltip\u003d\"Copy feedback session details\" (click)\u003d\"copySession(idx)\"\u003eCopy\u003c/button\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003ca *ngIf\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN \u0026\u0026 sessionsTableRowModel.instructorPrivilege.canSubmitSessionInSections; else submitBtn\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"              tmRouterLink\u003d\"/web/instructor/sessions/submission\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"              [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName }\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003cng-container *ngTemplateOutlet\u003d\"submitBtn\"\u003e\u003c/ng-container\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \u003cng-template #submitBtn\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" ngbTooltip\u003d\"Start submitting feedback\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus !\u003d\u003d FeedbackSessionSubmissionStatus.OPEN"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        || !sessionsTableRowModel.instructorPrivilege.canSubmitSessionInSections\" (click)\u003d\"submitSessionAsInstructorEvent.emit(idx)\"\u003eSubmit\u003c/button\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cdiv ngbDropdown class\u003d\"d-inline-block\" container\u003d\"body\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"btn-results-{{ idx }}\" class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003eResults\u003c/button\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn dropdown-item clickable\" [ngClass]\u003d\"{disabled: !sessionsTableRowModel.instructorPrivilege.canViewSessionInSections}\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        tmRouterLink\u003d\"/web/instructor/sessions/result\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName }\"\u003eView Results (from/to me)\u003c/a\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn dropdown-item clickable\" [ngClass]\u003d\"{disabled: !sessionsTableRowModel.instructorPrivilege.canViewSessionInSections}\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                        tmRouterLink\u003d\"/web/instructor/sessions/report\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                        [queryParams]\u003d\"{ courseid: sessionsTableRowModel.feedbackSession.courseId, fsname: sessionsTableRowModel.feedbackSession.feedbackSessionName }\"\u003eView Results (course-wide)\u003c/a\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-unpublish-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" ngbTooltip\u003d\"Make responses no longer visible\" placement\u003d\"left\" container\u003d\"body\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        *ngIf\u003d\"![FeedbackSessionSubmissionStatus.NOT_VISIBLE, FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN].includes(sessionsTableRowModel.feedbackSession.submissionStatus)"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                          \u0026\u0026 sessionsTableRowModel.feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED; else publishButton\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canModifySession\" (click)\u003d\"unpublishSession(idx)\"\u003eUnpublish Results\u003c/button\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u003cng-template #publishButton\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"btn-publish-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" [disabled]\u003d\"[FeedbackSessionSubmissionStatus.NOT_VISIBLE, FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN].includes(sessionsTableRowModel.feedbackSession.submissionStatus)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    || sessionsTableRowModel.feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED || !sessionsTableRowModel.instructorPrivilege.canModifySession\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                          ngbTooltip\u003d\"Make session responses available for viewing\" placement\u003d\"left\" container\u003d\"body\" (click)\u003d\"publishSession(idx)\"\u003ePublish Results\u003c/button\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u003c/ng-template\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-resend-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" *ngIf\u003d\"sessionsTableRowModel.feedbackSession.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED\" (click)\u003d\"remindResultsLinkToStudent(idx)\"\u003eResend link to view results\u003c/button\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-download-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" (click)\u003d\"downloadSessionResults(idx)\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"!sessionsTableRowModel.instructorPrivilege.canViewSessionInSections\"\u003eDownload Results\u003c/button\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003cdiv ngbDropdown class\u003d\"d-inline-block\" ngbTooltip\u003d\"Send e-mails to remind students and instructors who have not submitted their feedbacks to do so\"\u003e"},{"lineNumber":111,"author":{"gitId":"Nicolascwy"},"content":"              \u003cbutton ngbDropdownToggle id\u003d\"btn-remind-{{ idx }}\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"sessionsTableRowModel.feedbackSession.submissionStatus !\u003d\u003d FeedbackSessionSubmissionStatus.OPEN ||"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                            !sessionsTableRowModel.instructorPrivilege.canModifySession\"\u003e"},{"lineNumber":114,"author":{"gitId":"Nicolascwy"},"content":"                \u003cdiv class\u003d\"d-inline-flex\"\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                  \u003cspan\u003eRemind\u003c/span\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                  \u003cdiv class\u003d\"padding-left-7px\"\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    \u003ctm-ajax-loading [color]\u003d\"\u0027#000000\u0027\" *ngIf\u003d\"isSendReminderLoading \u0026\u0026 rowClicked \u003d\u003d\u003d idx\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                  \u003c/div\u003e"},{"lineNumber":119,"author":{"gitId":"Nicolascwy"},"content":"                \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              \u003c/button\u003e"},{"lineNumber":121,"author":{"gitId":"Nicolascwy"},"content":"              \u003cdiv ngbDropdownMenu\u003e"},{"lineNumber":122,"author":{"gitId":"Nicolascwy"},"content":"                \u003cbutton id\u003d\"btn-remind-all-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" (click)\u003d\"sendRemindersToAllNonSubmitters(idx); setRowClicked(idx)\"\u003eRemind all non-submitters\u003c/button\u003e"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"                \u003cbutton id\u003d\"btn-remind-selected-{{ idx }}\" class\u003d\"btn dropdown-item clickable\" (click)\u003d\"sendRemindersToSelectedNonSubmitters(idx); setRowClicked(idx)\" \u003eSelect non-submitters to remind\u003c/button\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":125,"author":{"gitId":"Nicolascwy"},"content":"            \u003c/div\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        \u003c/td\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003c/tbody\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    \u003c/table\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cng-template #noSessionMessage\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"no-session-message\"\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    There are no feedback sessions in this course."},{"lineNumber":137,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/ng-template\u003e"}],"authorContributionMap":{"-":130,"Nicolascwy":8}},{"path":"src/web/app/components/sessions-table/sessions-table.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Course, FeedbackSessionPublishStatus, FeedbackSessionSubmissionStatus } from \u0027../../../types/api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { CopySessionModalResult } from \u0027../copy-session-modal/copy-session-modal-model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CopySessionModalComponent } from \u0027../copy-session-modal/copy-session-modal.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../simple-modal/simple-modal-type\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  CopySessionResult,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  SessionsTableColumn,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  SessionsTableRowModel,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"} from \u0027./sessions-table-model\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A table to display a list of feedback sessions."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  selector: \u0027tm-sessions-table\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./sessions-table.component.html\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./sessions-table.component.scss\u0027],"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class SessionsTableComponent {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  SortOrder: typeof SortOrder \u003d SortOrder;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus: typeof FeedbackSessionPublishStatus \u003d FeedbackSessionPublishStatus;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  // variable"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  rowClicked: number \u003d -1;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  sessionsTableRowModels: SessionsTableRowModel[] \u003d [];"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  courseCandidates: Course[] \u003d [];"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  columnsToShow: SessionsTableColumn[] \u003d [SessionsTableColumn.COURSE_ID];"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortBy: SortBy \u003d SortBy.NONE;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  headerColorScheme: SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme.BLUE;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  isSendReminderLoading: boolean \u003d false;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  sortSessionsTableRowModelsEvent: EventEmitter\u003cSortBy\u003e \u003d new EventEmitter();"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  loadResponseRateEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  moveSessionToRecycleBinEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  copySessionEvent: EventEmitter\u003cCopySessionResult\u003e \u003d new EventEmitter();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  submitSessionAsInstructorEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  publishSessionEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  unpublishSessionEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  resendResultsLinkToStudentsEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  downloadSessionResultsEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"Nicolascwy"},"content":"  @Output()"},{"lineNumber":86,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToAllNonSubmittersEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":87,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":88,"author":{"gitId":"Nicolascwy"},"content":"  @Output()"},{"lineNumber":89,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToSelectedNonSubmittersEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":90,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  constructor(private ngbModal: NgbModal, private simpleModalService: SimpleModalService) { }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * Sorts the list of feedback session row."},{"lineNumber":95,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  sortSessionsTableRowModels(by: SortBy): void {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.sortSessionsTableRowModelsEvent.emit(by);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * Moves the feedback session to the recycle bin."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  moveSessionToRecycleBin(rowIndex: number): void {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d \u0027Session will be moved to the recycle bin. \u0027"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        + \u0027This action can be reverted by going to the \"Sessions\" tab and restoring the desired session(s).\u0027;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":107,"author":{"gitId":"-"},"content":"        `Delete session \u003cstrong\u003e${this.sessionsTableRowModels[rowIndex].feedbackSession.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, modalContent);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      this.moveSessionToRecycleBinEvent.emit(rowIndex);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Copies the feedback session."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  copySession(rowIndex: number): void {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(CopySessionModalComponent);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.newFeedbackSessionName \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.courseCandidates \u003d this.courseCandidates;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.sessionToCopyCourseId \u003d model.feedbackSession.courseId;"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      this.copySessionEvent.emit({"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ...result,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        sessionToCopyRowIndex: rowIndex,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   * Publishes a feedback session."},{"lineNumber":134,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  publishSession(rowIndex: number): void {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":139,"author":{"gitId":"-"},"content":"        `Publish session \u003cstrong\u003e${model.feedbackSession.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u0027An email will be sent to students to inform them that the responses are ready for viewing.\u0027);"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      this.publishSessionEvent.emit(rowIndex);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   * Unpublishes a feedback session."},{"lineNumber":150,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  unpublishSession(rowIndex: number): void {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `An email will be sent to students to inform them that the session has been unpublished"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        and the session responses will no longer be viewable by students.`;"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":157,"author":{"gitId":"-"},"content":"        `Unpublish session \u003cstrong\u003e${model.feedbackSession.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, modalContent);"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      this.unpublishSessionEvent.emit(rowIndex);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   * Resend links to students to view results."},{"lineNumber":167,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  remindResultsLinkToStudent(rowIndex: number): void {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    this.resendResultsLinkToStudentsEvent.emit(rowIndex);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":173,"author":{"gitId":"Nicolascwy"},"content":"   * Sends e-mails to remind all students and instructors who have not submitted their feedback."},{"lineNumber":174,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":175,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToAllNonSubmitters(rowIndex: number): void {"},{"lineNumber":176,"author":{"gitId":"Nicolascwy"},"content":"    this.sendRemindersToAllNonSubmittersEvent.emit(rowIndex);"},{"lineNumber":177,"author":{"gitId":"Nicolascwy"},"content":"  }"},{"lineNumber":178,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":179,"author":{"gitId":"Nicolascwy"},"content":"  /**"},{"lineNumber":180,"author":{"gitId":"Nicolascwy"},"content":"   * Sends e-mails to remind selected students and instructors who have not submitted their feedback."},{"lineNumber":181,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":182,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToSelectedNonSubmitters(rowIndex: number): void {"},{"lineNumber":183,"author":{"gitId":"Nicolascwy"},"content":"    this.sendRemindersToSelectedNonSubmittersEvent.emit(rowIndex);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   * Triggers the download of session results as a CSV file."},{"lineNumber":188,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  downloadSessionResults(rowIndex: number): void {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    this.downloadSessionResultsEvent.emit(rowIndex);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   * Set row number of button clicked."},{"lineNumber":195,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  setRowClicked(rowIndex: number): void {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    this.rowClicked \u003d rowIndex;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":185,"Nicolascwy":15}},{"path":"src/web/app/components/teammates-common/notification-style-class.pipe.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationStyleClassPipe } from \u0027./notification-style-class.pipe\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"describe(\u0027NotificationStyleClassPipe\u0027, () \u003d\u003e {"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027create an instance\u0027, () \u003d\u003e {"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"    const pipe \u003d new NotificationStyleClassPipe();"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"    expect(pipe).toBeTruthy();"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"});"}],"authorContributionMap":{"fsgmhoward":8}},{"path":"src/web/app/components/teammates-common/notification-style-class.pipe.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { Pipe, PipeTransform } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationStyle } from \u0027../../../types/api-output\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" * Two available colors for notification font, depending on the style"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"enum NotificationFontColor {"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  WHITE \u003d \u0027text-white\u0027,"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  DARK \u003d \u0027text-dark\u0027,"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":" * Maps between notification style and font color."},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"const fontColorMapping: Record\u003cNotificationStyle, string\u003e \u003d {"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"  PRIMARY: NotificationFontColor.WHITE,"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"  SECONDARY: NotificationFontColor.WHITE,"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"  SUCCESS: NotificationFontColor.WHITE,"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  DANGER: NotificationFontColor.WHITE,"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"  WARNING: NotificationFontColor.DARK,"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  INFO: NotificationFontColor.WHITE,"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"  LIGHT: NotificationFontColor.DARK,"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"  DARK: NotificationFontColor.WHITE,"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"};"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":" * Pipe to handle the transformation of an NotificationStyle to a css class."},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"@Pipe({"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"  name: \u0027notificationStyleClass\u0027,"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"export class NotificationStyleClassPipe implements PipeTransform {"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"  transform(style: NotificationStyle): string {"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"    return `bg-${style.toLowerCase()} ${fontColorMapping[style]}`;"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":38}},{"path":"src/web/app/components/teammates-common/notification-style-description.pipe.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationStyleDescriptionPipe } from \u0027./notification-style-description.pipe\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"describe(\u0027NotificationStyleDescriptionPipe\u0027, () \u003d\u003e {"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027create an instance\u0027, () \u003d\u003e {"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"    const pipe \u003d new NotificationStyleDescriptionPipe();"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"    expect(pipe).toBeTruthy();"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"});"}],"authorContributionMap":{"fsgmhoward":8}},{"path":"src/web/app/components/teammates-common/notification-style-description.pipe.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { Pipe, PipeTransform } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationStyle } from \u0027../../../types/api-output\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" * Maps between notification style and description text."},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"const descriptionMapping: Record\u003cNotificationStyle, string\u003e \u003d {"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  PRIMARY: \u0027Primary (blue)\u0027,"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  SECONDARY: \u0027Secondary (grey)\u0027,"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"  SUCCESS: \u0027Success (green)\u0027,"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"  DANGER: \u0027Danger (red)\u0027,"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  WARNING: \u0027Warning (yellow)\u0027,"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"  INFO: \u0027Info (cyan)\u0027,"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"  LIGHT: \u0027Light\u0027,"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"  DARK: \u0027Dark\u0027,"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"};"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":" * Pipe to handle the transformation of an NotificationStyle to a string description."},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"@Pipe({"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"  name: \u0027notificationStyleDescription\u0027,"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"export class NotificationStyleDescriptionPipe implements PipeTransform {"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"  transform(style: NotificationStyle): string {"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"    return descriptionMapping[style];"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":30}},{"path":"src/web/app/components/teammates-common/teammates-common.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterModule } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbPopoverModule, NgbTooltipModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../teammates-router/teammates-router.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { EnumToArrayPipe } from \u0027./enum-to-array.pipe\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { GiverTypeDescriptionPipe, RecipientTypeDescriptionPipe } from \u0027./feedback-path.pipe\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { FormatDateBriefPipe } from \u0027./format-date-brief.pipe\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { FormatDateDetailPipe } from \u0027./format-date-detail.pipe\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FormatPhotoUrlPipe } from \u0027./format-photo-url.pipe\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { GeneratedChoicePipe } from \u0027./generated-choice.pipe\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { InstructorRoleDescriptionPipe } from \u0027./instructor-role-description.pipe\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { InstructorRoleNamePipe } from \u0027./instructor-role-name.pipe\u0027;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationStyleClassPipe } from \u0027./notification-style-class.pipe\u0027;"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationStyleDescriptionPipe } from \u0027./notification-style-description.pipe\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { PublishStatusNamePipe } from \u0027./publish-status-name.pipe\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { QuestionTypeNamePipe } from \u0027./question-type-name.pipe\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { SafeHtmlPipe } from \u0027./safe-html.pipe\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { StripHtmlTagsPipe } from \u0027./strip-html-tags.pipe\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { StudentNameWithPhotoComponent } from \u0027./student-name/student-name-with-photo.component\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { GenderFormatPipe } from \u0027./student-profile-gender.pipe\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { SubmissionStatusNamePipe } from \u0027./submission-status-name.pipe\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { ViewPhotoPopoverComponent } from \u0027./view-photo-popover/view-photo-popover.component\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  VisibilityControlNamePipe,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  VisibilityTypeDescriptionPipe,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  VisibilityTypeNamePipe,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"} from \u0027./visibility-setting.pipe\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Common module in the project."},{"lineNumber":34,"author":{"gitId":"-"},"content":" */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":37,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    RouterModule,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    NgbPopoverModule,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    NgbTooltipModule,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    TeammatesRouterModule,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":44,"author":{"gitId":"-"},"content":"    EnumToArrayPipe,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    SubmissionStatusNamePipe,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    PublishStatusNamePipe,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    FormatDateDetailPipe,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GenderFormatPipe,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    SafeHtmlPipe,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    StripHtmlTagsPipe,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    QuestionTypeNamePipe,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    InstructorRoleDescriptionPipe,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    InstructorRoleNamePipe,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    FormatDateBriefPipe,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    FormatPhotoUrlPipe,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    GeneratedChoicePipe,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ViewPhotoPopoverComponent,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    StudentNameWithPhotoComponent,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    GiverTypeDescriptionPipe,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    RecipientTypeDescriptionPipe,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    VisibilityControlNamePipe,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    VisibilityTypeDescriptionPipe,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    VisibilityTypeNamePipe,"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"    NotificationStyleDescriptionPipe,"},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"    NotificationStyleClassPipe,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":68,"author":{"gitId":"-"},"content":"    EnumToArrayPipe,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    SubmissionStatusNamePipe,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    PublishStatusNamePipe,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    FormatDateDetailPipe,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    GenderFormatPipe,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    SafeHtmlPipe,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    StripHtmlTagsPipe,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    QuestionTypeNamePipe,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    InstructorRoleDescriptionPipe,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    InstructorRoleNamePipe,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    FormatDateBriefPipe,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    FormatPhotoUrlPipe,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    GeneratedChoicePipe,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ViewPhotoPopoverComponent,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    StudentNameWithPhotoComponent,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    GiverTypeDescriptionPipe,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    RecipientTypeDescriptionPipe,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    VisibilityControlNamePipe,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    VisibilityTypeDescriptionPipe,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    VisibilityTypeNamePipe,"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"    NotificationStyleDescriptionPipe,"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"    NotificationStyleClassPipe,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":91,"author":{"gitId":"-"},"content":"})"},{"lineNumber":92,"author":{"gitId":"-"},"content":"export class TeammatesCommonModule { }"}],"authorContributionMap":{"fsgmhoward":6,"-":86}},{"path":"src/web/app/components/wheel-disabler/wheel-disabler.directive.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Directive, HostListener } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":" * Directive for loading spinner component"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"@Directive({"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"  selector: \u0027[tmDisableWheel]\u0027,"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"export class WheelDisablerDirective {"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"  @HostListener(\u0027wheel\u0027, [\u0027$event\u0027])"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  onWheel(e: Event): void {"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"    e.preventDefault();"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":15,"-":1}},{"path":"src/web/app/components/wheel-disabler/wheel-disabler.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { WheelDisablerDirective } from \u0027./wheel-disabler.directive\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" * Module for progress bar used to show download progress."},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"@NgModule({"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  declarations: [WheelDisablerDirective],"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  imports: [],"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"  exports: ["},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"    WheelDisablerDirective,"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  ],"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"export class WheelDisablerModule { }"}],"authorContributionMap":{"fsgmhoward":14}},{"path":"src/web/app/pages-admin/admin-notifications-page/admin-notifications-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003ch1\u003eNotifications\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"\u003cp\u003eThis page allows you to create and manage notifications which are shown to respective target users when they access TEAMMATES.\u003c/p\u003e"},{"lineNumber":3,"author":{"gitId":"zhaojj2209"},"content":"\u003cdiv id\u003d\"notifications-timezone\"\u003e"},{"lineNumber":4,"author":{"gitId":"zhaojj2209"},"content":"  \u003cp\u003eAll dates are displayed in {{ guessTimezone }} time.\u003c/p\u003e"},{"lineNumber":5,"author":{"gitId":"zhaojj2209"},"content":"\u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv\u003e"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  \u003cbutton id\u003d\"btn-add-notification\" class\u003d\"btn btn-success\" (click)\u003d\"isNotificationEditFormExpanded \u003d true\""},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"          [disabled]\u003d\"isNotificationEditFormExpanded || isNotificationLoading\"\u003e"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"          \u003cspan *ngIf\u003d\"currentNotificationEditFormMode \u003d\u003d\u003d NotificationEditFormMode.ADD else editbtn\"\u003e\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Notification\u003c/span\u003e"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"          \u003cng-template #editbtn\u003e\u003ci class\u003d\"fas fa-cog\"\u003e\u003c/i\u003e Edit Existing Notification\u003c/ng-template\u003e"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  \u003c/button\u003e"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv class\u003d\"margin-top-30px\" *ngIf\u003d\"isNotificationEditFormExpanded \u0026\u0026 !isNotificationLoading\" @collapseAnim\u003e"},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"  \u003ctm-notification-edit-form [formMode]\u003d\"currentNotificationEditFormMode\""},{"lineNumber":17,"author":{"gitId":"zhaojj2209"},"content":"                             [(model)]\u003d\"notificationEditFormModel\""},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"                             [guessTimezone]\u003d\"guessTimezone\""},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"                             (addNewNotificationEvent)\u003d\"addNewNotificationHandler()\""},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"                             (editExistingNotificationEvent)\u003d\"editExistingNotificationHandler()\""},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"                             (cancelEditingNotificationEvent)\u003d\"initNotificationEditFormModel()\"\u003e\u003c/tm-notification-edit-form\u003e"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"\u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasNotificationLoadingFailed\" [message]\u003d\"\u0027Failed to load data\u0027\""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"                  (retryEvent)\u003d\"retryLoadingAllData()\"\u003e"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"    \u003cdiv *tmIsLoading\u003d\"isNotificationLoading\"\u003e"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"      \u003cdiv class\u003d\"alert alert-warning margin-top-30px\" role\u003d\"alert\" *ngIf\u003d\"notificationsTableRowModels.length \u003d\u003d\u003d 0 \u0026\u0026 !isNotificationLoading\"\u003e"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"        You have not created any notifications yet. Use the form above to create a notification."},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"      \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"      \u003ctm-notifications-table *ngIf \u003d \"notificationsTableRowModels.length \u003e 0\""},{"lineNumber":33,"author":{"gitId":"zhaojj2209"},"content":"                              [guessTimezone]\u003d\"guessTimezone\""},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"                              [notificationsTableRowModels]\u003d\"notificationsTableRowModels\""},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"                              [notificationsTableRowModelsSortBy]\u003d\"notificationsTableRowModelsSortBy\""},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"                              [notificationsTableRowModelsSortOrder]\u003d\"notificationsTableRowModelsSortOrder\""},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"                              (deleteNotificationEvent)\u003d\"deleteNotificationHandler($event)\""},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"                              (loadNotificationEditFormEvent)\u003d\"loadNotificationEditFormHandler($event)\""},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"                              (sortNotificationsTableRowModelsEvent)\u003d\"sortNotificationsTableRowModelsHandler($event)\"\u003e\u003c/tm-notifications-table\u003e"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"    \u003c/div\u003e"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"  \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"  \u003cbr/\u003e"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"zhaojj2209":7,"fsgmhoward":36}},{"path":"src/web/app/pages-admin/admin-notifications-page/admin-notifications-page.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":".margin-top-30px {"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  margin-top: 30px;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":".sortable-header {"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"  cursor: pointer;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":".actions-cell button {"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"  margin: 2px;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":11}},{"path":"src/web/app/pages-admin/admin-notifications-page/admin-notifications-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import { AdminNotificationsPageComponent } from \u0027./admin-notifications-page.component\u0027;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import { AdminNotificationsPageModule } from \u0027./admin-notifications-page.module\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"describe(\u0027AdminNotificationsPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  let component: AdminNotificationsPageComponent;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  let fixture: ComponentFixture\u003cAdminNotificationsPageComponent\u003e;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"  beforeEach(async () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"    await TestBed.configureTestingModule({"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"      imports: ["},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"        AdminNotificationsPageModule,"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"        HttpClientTestingModule,"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"      ],"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"    })"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"    .compileComponents();"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    fixture \u003d TestBed.createComponent(AdminNotificationsPageComponent);"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"    fixture.detectChanges();"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"});"}],"authorContributionMap":{"fsgmhoward":30}},{"path":"src/web/app/pages-admin/admin-notifications-page/admin-notifications-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationService } from \u0027../../../services/notification.service\u0027;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import { MessageOutput, Notification, Notifications } from \u0027../../../types/api-output\u0027;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationStyle, NotificationTargetUser } from \u0027../../../types/api-request\u0027;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import {"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"  NotificationEditFormMode,"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"  NotificationEditFormModel,"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"} from \u0027./notification-edit-form/notification-edit-form-model\u0027;"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationsTableRowModel } from \u0027./notifications-table/notifications-table-model\u0027;"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"@Component({"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"  selector: \u0027tm-admin-notifications-page\u0027,"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"  templateUrl: \u0027./admin-notifications-page.component.html\u0027,"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"  styleUrls: [\u0027./admin-notifications-page.component.scss\u0027],"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"  animations: [collapseAnim],"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"export class AdminNotificationsPageComponent implements OnInit {"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"  NotificationEditFormMode \u003d NotificationEditFormMode;"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"  currentNotificationEditFormMode \u003d NotificationEditFormMode.ADD;"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"  isNotificationLoading \u003d false;"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"  hasNotificationLoadingFailed \u003d false;"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"  isNotificationEditFormExpanded \u003d false;"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"  notificationEditFormModel: NotificationEditFormModel \u003d {"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"    notificationId: \u0027\u0027,"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"    shown: false,"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"    startTime: { hour: 0, minute: 0 },"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"    startDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"    endTime: { hour: 0, minute: 0 },"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"    endDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"    style: NotificationStyle.SUCCESS,"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"    targetUser: NotificationTargetUser.GENERAL,"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"    title: \u0027\u0027,"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"    message: \u0027\u0027,"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":"    isSaving: false,"},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"    isDeleting: false,"},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":"  };"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"  notificationsTableRowModels: NotificationsTableRowModel[] \u003d [];"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":"  notificationsTableRowModelsSortBy \u003d SortBy.NOTIFICATION_CREATE_TIME;"},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"  notificationsTableRowModelsSortOrder \u003d SortOrder.DESC;"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"  guessTimezone \u003d \u0027UTC\u0027;"},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":"  constructor("},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"    private notificationService: NotificationService,"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"    private simpleModalService: SimpleModalService,"},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"    private statusMessageService: StatusMessageService,"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"    private tableComparatorService: TableComparatorService,"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"    private timezoneService: TimezoneService,"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":"  ) {}"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"  ngOnInit(): void {"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":"    this.initNotificationEditFormModel();"},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"    this.loadNotifications();"},{"lineNumber":73,"author":{"gitId":"zhaojj2209"},"content":"    this.guessTimezone \u003d this.timezoneService.guessTimezone();"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"   * Closes form and initializes values for the edit form model."},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":"  initNotificationEditFormModel(): void {"},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"    this.isNotificationEditFormExpanded \u003d false;"},{"lineNumber":81,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"    const nearFuture: moment.Moment \u003d moment().add(1, \u0027hours\u0027);"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"    const tomorrow: moment.Moment \u003d moment().add(1, \u0027days\u0027);"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationEditFormModel \u003d {"},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"      notificationId: \u0027\u0027,"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"      shown: false,"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"      startTime: {"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"        minute: nearFuture.hour() \u003d\u003d\u003d 0 ? 59 : 0, // for 00:00 midnight, we use 23:59"},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":"        hour: nearFuture.hour() \u003d\u003d\u003d 0 ? 23 : nearFuture.hour(),"},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":92,"author":{"gitId":"fsgmhoward"},"content":"      startDate: {"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":"        year: nearFuture.year(),"},{"lineNumber":94,"author":{"gitId":"fsgmhoward"},"content":"        month: nearFuture.month() + 1, // moment return 0-11 for month"},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"        day: nearFuture.date(),"},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":"      endTime: { hour: 23, minute: 59 },"},{"lineNumber":98,"author":{"gitId":"fsgmhoward"},"content":"      endDate: {"},{"lineNumber":99,"author":{"gitId":"fsgmhoward"},"content":"        year: tomorrow.year(),"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"        month: tomorrow.month() + 1, // moment return 0-11 for month"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":"        day: tomorrow.date(),"},{"lineNumber":102,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"      style: NotificationStyle.SUCCESS,"},{"lineNumber":105,"author":{"gitId":"fsgmhoward"},"content":"      targetUser: NotificationTargetUser.GENERAL,"},{"lineNumber":106,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":"      title: \u0027\u0027,"},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":"      message: \u0027\u0027,"},{"lineNumber":109,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":110,"author":{"gitId":"fsgmhoward"},"content":"      isSaving: false,"},{"lineNumber":111,"author":{"gitId":"fsgmhoward"},"content":"      isDeleting: false,"},{"lineNumber":112,"author":{"gitId":"fsgmhoward"},"content":"    };"},{"lineNumber":113,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":114,"author":{"gitId":"fsgmhoward"},"content":"    this.currentNotificationEditFormMode \u003d NotificationEditFormMode.ADD;"},{"lineNumber":115,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":117,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":118,"author":{"gitId":"fsgmhoward"},"content":"   * Loads all notifications from backend."},{"lineNumber":119,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"  loadNotifications(): void {"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":"    this.isNotificationLoading \u003d true;"},{"lineNumber":122,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationService.getNotifications()"},{"lineNumber":123,"author":{"gitId":"fsgmhoward"},"content":"      .pipe(finalize(() \u003d\u003e { this.isNotificationLoading \u003d false; }))"},{"lineNumber":124,"author":{"gitId":"fsgmhoward"},"content":"      .subscribe("},{"lineNumber":125,"author":{"gitId":"fsgmhoward"},"content":"        (notifications: Notifications) \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"          notifications.notifications.forEach((notification: Notification) \u003d\u003e {"},{"lineNumber":127,"author":{"gitId":"fsgmhoward"},"content":"            this.notificationsTableRowModels.push({"},{"lineNumber":128,"author":{"gitId":"fsgmhoward"},"content":"              isHighlighted: false,"},{"lineNumber":129,"author":{"gitId":"fsgmhoward"},"content":"              notification,"},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"            });"},{"lineNumber":131,"author":{"gitId":"fsgmhoward"},"content":"          });"},{"lineNumber":132,"author":{"gitId":"fsgmhoward"},"content":"          // sort the list using create time, and allocate the index in ascending order"},{"lineNumber":133,"author":{"gitId":"fsgmhoward"},"content":"          // note: order is set to be descending here as it will be reversed later"},{"lineNumber":134,"author":{"gitId":"fsgmhoward"},"content":"          this.notificationsTableRowModelsSortOrder \u003d SortOrder.ASC;"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"          this.sortNotificationsTableRowModelsHandler(SortBy.NOTIFICATION_CREATE_TIME);"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":"        },"},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":"        (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"          this.hasNotificationLoadingFailed \u003d true;"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":140,"author":{"gitId":"fsgmhoward"},"content":"        },"},{"lineNumber":141,"author":{"gitId":"fsgmhoward"},"content":"      );"},{"lineNumber":142,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":145,"author":{"gitId":"fsgmhoward"},"content":"   * Resets error state and retry loading data."},{"lineNumber":146,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":147,"author":{"gitId":"fsgmhoward"},"content":"  retryLoadingAllData(): void {"},{"lineNumber":148,"author":{"gitId":"fsgmhoward"},"content":"    this.isNotificationLoading \u003d false;"},{"lineNumber":149,"author":{"gitId":"fsgmhoward"},"content":"    this.hasNotificationLoadingFailed \u003d false;"},{"lineNumber":150,"author":{"gitId":"fsgmhoward"},"content":"    this.loadNotifications();"},{"lineNumber":151,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":152,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":153,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":154,"author":{"gitId":"fsgmhoward"},"content":"   * Loads notification data into the edit form for updating actions."},{"lineNumber":155,"author":{"gitId":"fsgmhoward"},"content":"   * Will do checks to skip or show warnings if necessary."},{"lineNumber":156,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":157,"author":{"gitId":"fsgmhoward"},"content":"  loadNotificationEditFormHandler(notification: Notification): void {"},{"lineNumber":158,"author":{"gitId":"fsgmhoward"},"content":"    if (this.isNotificationEditFormExpanded) {"},{"lineNumber":159,"author":{"gitId":"fsgmhoward"},"content":"      if (this.notificationEditFormModel.notificationId !\u003d\u003d notification.notificationId) {"},{"lineNumber":160,"author":{"gitId":"fsgmhoward"},"content":"        // Warns user that the existing edits will be cleared"},{"lineNumber":161,"author":{"gitId":"fsgmhoward"},"content":"        this.simpleModalService.openConfirmationModal("},{"lineNumber":162,"author":{"gitId":"fsgmhoward"},"content":"          \u0027Discard unsaved edit?\u0027,"},{"lineNumber":163,"author":{"gitId":"fsgmhoward"},"content":"          SimpleModalType.WARNING,"},{"lineNumber":164,"author":{"gitId":"fsgmhoward"},"content":"          \u0027Warning: If you choose to edit another notification, any unsaved changes will be lost.\u0027,"},{"lineNumber":165,"author":{"gitId":"fsgmhoward"},"content":"        ).result.then(() \u003d\u003e {"},{"lineNumber":166,"author":{"gitId":"fsgmhoward"},"content":"          this.loadNotificationEditForm(notification);"},{"lineNumber":167,"author":{"gitId":"fsgmhoward"},"content":"        });"},{"lineNumber":168,"author":{"gitId":"fsgmhoward"},"content":"      }"},{"lineNumber":169,"author":{"gitId":"fsgmhoward"},"content":"      // Not to do anything if the notification is already loaded"},{"lineNumber":170,"author":{"gitId":"fsgmhoward"},"content":"    } else {"},{"lineNumber":171,"author":{"gitId":"fsgmhoward"},"content":"      // Loads notification data into the edit form without doing any check if the form was closed originally"},{"lineNumber":172,"author":{"gitId":"fsgmhoward"},"content":"      this.loadNotificationEditForm(notification);"},{"lineNumber":173,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":175,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":176,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":177,"author":{"gitId":"fsgmhoward"},"content":"   * The actual function to load data into edit form."},{"lineNumber":178,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":179,"author":{"gitId":"fsgmhoward"},"content":"  loadNotificationEditForm(notification: Notification): void {"},{"lineNumber":180,"author":{"gitId":"fsgmhoward"},"content":"    const startTime \u003d moment(notification.startTimestamp);"},{"lineNumber":181,"author":{"gitId":"fsgmhoward"},"content":"    const endTime \u003d moment(notification.endTimestamp);"},{"lineNumber":182,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationEditFormModel \u003d {"},{"lineNumber":183,"author":{"gitId":"fsgmhoward"},"content":"      notificationId: notification.notificationId,"},{"lineNumber":184,"author":{"gitId":"fsgmhoward"},"content":"      shown: notification.shown,"},{"lineNumber":185,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":186,"author":{"gitId":"fsgmhoward"},"content":"      startTime: {"},{"lineNumber":187,"author":{"gitId":"fsgmhoward"},"content":"        minute: startTime.hour() \u003d\u003d\u003d 0 ? 59 : 0, // for 00:00 midnight, we use 23:59"},{"lineNumber":188,"author":{"gitId":"fsgmhoward"},"content":"        hour: startTime.hour() \u003d\u003d\u003d 0 ? 23 : startTime.hour(),"},{"lineNumber":189,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":190,"author":{"gitId":"fsgmhoward"},"content":"      startDate: {"},{"lineNumber":191,"author":{"gitId":"fsgmhoward"},"content":"        year: startTime.year(),"},{"lineNumber":192,"author":{"gitId":"fsgmhoward"},"content":"        month: startTime.month() + 1, // moment return 0-11 for month"},{"lineNumber":193,"author":{"gitId":"fsgmhoward"},"content":"        day: startTime.date(),"},{"lineNumber":194,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":195,"author":{"gitId":"fsgmhoward"},"content":"      endTime: {"},{"lineNumber":196,"author":{"gitId":"fsgmhoward"},"content":"        minute: endTime.hour() \u003d\u003d\u003d 0 ? 59 : 0, // for 00:00 midnight, we use 23:59"},{"lineNumber":197,"author":{"gitId":"fsgmhoward"},"content":"        hour: endTime.hour() \u003d\u003d\u003d 0 ? 23 : endTime.hour(),"},{"lineNumber":198,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":199,"author":{"gitId":"fsgmhoward"},"content":"      endDate: {"},{"lineNumber":200,"author":{"gitId":"fsgmhoward"},"content":"        year: endTime.year(),"},{"lineNumber":201,"author":{"gitId":"fsgmhoward"},"content":"        month: endTime.month() + 1, // moment return 0-11 for month"},{"lineNumber":202,"author":{"gitId":"fsgmhoward"},"content":"        day: endTime.date(),"},{"lineNumber":203,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":204,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":205,"author":{"gitId":"fsgmhoward"},"content":"      style: notification.style,"},{"lineNumber":206,"author":{"gitId":"fsgmhoward"},"content":"      targetUser: notification.targetUser,"},{"lineNumber":207,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":208,"author":{"gitId":"fsgmhoward"},"content":"      title: notification.title,"},{"lineNumber":209,"author":{"gitId":"fsgmhoward"},"content":"      message: notification.message,"},{"lineNumber":210,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":211,"author":{"gitId":"fsgmhoward"},"content":"      isSaving: false,"},{"lineNumber":212,"author":{"gitId":"fsgmhoward"},"content":"      isDeleting: false,"},{"lineNumber":213,"author":{"gitId":"fsgmhoward"},"content":"    };"},{"lineNumber":214,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":215,"author":{"gitId":"fsgmhoward"},"content":"    this.currentNotificationEditFormMode \u003d NotificationEditFormMode.EDIT;"},{"lineNumber":216,"author":{"gitId":"fsgmhoward"},"content":"    this.isNotificationEditFormExpanded \u003d true;"},{"lineNumber":217,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":218,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":219,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":220,"author":{"gitId":"fsgmhoward"},"content":"   * Adds a new notification."},{"lineNumber":221,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":222,"author":{"gitId":"fsgmhoward"},"content":"  addNewNotificationHandler(): void {"},{"lineNumber":223,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationEditFormModel.isSaving \u003d true;"},{"lineNumber":224,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":225,"author":{"gitId":"fsgmhoward"},"content":"    // Timezone is not specified here so it will be guessed from browser\u0027s request."},{"lineNumber":226,"author":{"gitId":"fsgmhoward"},"content":"    const startTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":227,"author":{"gitId":"fsgmhoward"},"content":"      this.notificationEditFormModel.startDate, this.notificationEditFormModel.startTime,"},{"lineNumber":228,"author":{"gitId":"fsgmhoward"},"content":"    );"},{"lineNumber":229,"author":{"gitId":"fsgmhoward"},"content":"    const endTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":230,"author":{"gitId":"fsgmhoward"},"content":"      this.notificationEditFormModel.endDate, this.notificationEditFormModel.endTime,"},{"lineNumber":231,"author":{"gitId":"fsgmhoward"},"content":"    );"},{"lineNumber":232,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":233,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationService.createNotification({"},{"lineNumber":234,"author":{"gitId":"fsgmhoward"},"content":"      title: this.notificationEditFormModel.title,"},{"lineNumber":235,"author":{"gitId":"fsgmhoward"},"content":"      message: this.notificationEditFormModel.message,"},{"lineNumber":236,"author":{"gitId":"fsgmhoward"},"content":"      style: this.notificationEditFormModel.style,"},{"lineNumber":237,"author":{"gitId":"fsgmhoward"},"content":"      targetUser: this.notificationEditFormModel.targetUser,"},{"lineNumber":238,"author":{"gitId":"fsgmhoward"},"content":"      startTimestamp: startTime,"},{"lineNumber":239,"author":{"gitId":"fsgmhoward"},"content":"      endTimestamp: endTime,"},{"lineNumber":240,"author":{"gitId":"fsgmhoward"},"content":"    })"},{"lineNumber":241,"author":{"gitId":"fsgmhoward"},"content":"    .pipe(finalize(() \u003d\u003e { this.notificationEditFormModel.isSaving \u003d false; }))"},{"lineNumber":242,"author":{"gitId":"fsgmhoward"},"content":"    .subscribe("},{"lineNumber":243,"author":{"gitId":"fsgmhoward"},"content":"      (notification: Notification) \u003d\u003e {"},{"lineNumber":244,"author":{"gitId":"fsgmhoward"},"content":"        this.notificationsTableRowModels.unshift({"},{"lineNumber":245,"author":{"gitId":"fsgmhoward"},"content":"          isHighlighted: true,"},{"lineNumber":246,"author":{"gitId":"fsgmhoward"},"content":"          notification,"},{"lineNumber":247,"author":{"gitId":"fsgmhoward"},"content":"        });"},{"lineNumber":248,"author":{"gitId":"zhaojj2209"},"content":"        this.statusMessageService.showSuccessToast(\u0027Notification created successfully.\u0027);"},{"lineNumber":249,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":250,"author":{"gitId":"fsgmhoward"},"content":"        this.initNotificationEditFormModel();"},{"lineNumber":251,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":252,"author":{"gitId":"fsgmhoward"},"content":"      (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":253,"author":{"gitId":"fsgmhoward"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":254,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":255,"author":{"gitId":"fsgmhoward"},"content":"    );"},{"lineNumber":256,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":257,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":258,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":259,"author":{"gitId":"fsgmhoward"},"content":"   * Updates an existing notification."},{"lineNumber":260,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":261,"author":{"gitId":"fsgmhoward"},"content":"  editExistingNotificationHandler(): void {"},{"lineNumber":262,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationEditFormModel.isSaving \u003d true;"},{"lineNumber":263,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":264,"author":{"gitId":"fsgmhoward"},"content":"    // Timezone is not specified here so it will be guessed from browser\u0027s request."},{"lineNumber":265,"author":{"gitId":"fsgmhoward"},"content":"    const startTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":266,"author":{"gitId":"fsgmhoward"},"content":"      this.notificationEditFormModel.startDate, this.notificationEditFormModel.startTime,"},{"lineNumber":267,"author":{"gitId":"fsgmhoward"},"content":"    );"},{"lineNumber":268,"author":{"gitId":"fsgmhoward"},"content":"    const endTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":269,"author":{"gitId":"fsgmhoward"},"content":"      this.notificationEditFormModel.endDate, this.notificationEditFormModel.endTime,"},{"lineNumber":270,"author":{"gitId":"fsgmhoward"},"content":"    );"},{"lineNumber":271,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":272,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationService.updateNotification({"},{"lineNumber":273,"author":{"gitId":"fsgmhoward"},"content":"      title: this.notificationEditFormModel.title,"},{"lineNumber":274,"author":{"gitId":"fsgmhoward"},"content":"      message: this.notificationEditFormModel.message,"},{"lineNumber":275,"author":{"gitId":"fsgmhoward"},"content":"      style: this.notificationEditFormModel.style,"},{"lineNumber":276,"author":{"gitId":"fsgmhoward"},"content":"      targetUser: this.notificationEditFormModel.targetUser,"},{"lineNumber":277,"author":{"gitId":"fsgmhoward"},"content":"      startTimestamp: startTime,"},{"lineNumber":278,"author":{"gitId":"fsgmhoward"},"content":"      endTimestamp: endTime,"},{"lineNumber":279,"author":{"gitId":"fsgmhoward"},"content":"    }, this.notificationEditFormModel.notificationId)"},{"lineNumber":280,"author":{"gitId":"fsgmhoward"},"content":"    .pipe(finalize(() \u003d\u003e { this.notificationEditFormModel.isSaving \u003d false; }))"},{"lineNumber":281,"author":{"gitId":"fsgmhoward"},"content":"    .subscribe("},{"lineNumber":282,"author":{"gitId":"fsgmhoward"},"content":"      (notification: Notification) \u003d\u003e {"},{"lineNumber":283,"author":{"gitId":"fsgmhoward"},"content":"        this.statusMessageService.showSuccessToast(\u0027Notification updated successfully.\u0027);"},{"lineNumber":284,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":285,"author":{"gitId":"fsgmhoward"},"content":"        this.notificationsTableRowModels.forEach((rowModel: NotificationsTableRowModel) \u003d\u003e {"},{"lineNumber":286,"author":{"gitId":"fsgmhoward"},"content":"          if (rowModel.notification.notificationId \u003d\u003d\u003d notification.notificationId) {"},{"lineNumber":287,"author":{"gitId":"fsgmhoward"},"content":"            rowModel.isHighlighted \u003d true;"},{"lineNumber":288,"author":{"gitId":"fsgmhoward"},"content":"            rowModel.notification \u003d notification;"},{"lineNumber":289,"author":{"gitId":"fsgmhoward"},"content":"          }"},{"lineNumber":290,"author":{"gitId":"fsgmhoward"},"content":"        });"},{"lineNumber":291,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":292,"author":{"gitId":"fsgmhoward"},"content":"        this.initNotificationEditFormModel();"},{"lineNumber":293,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":294,"author":{"gitId":"fsgmhoward"},"content":"      (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":295,"author":{"gitId":"fsgmhoward"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":296,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":297,"author":{"gitId":"fsgmhoward"},"content":"    );"},{"lineNumber":298,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":299,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":300,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":301,"author":{"gitId":"fsgmhoward"},"content":"   * Deletes a notification."},{"lineNumber":302,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":303,"author":{"gitId":"fsgmhoward"},"content":"  deleteNotificationHandler(notificationId: string): void {"},{"lineNumber":304,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationService.deleteNotification(notificationId)"},{"lineNumber":305,"author":{"gitId":"fsgmhoward"},"content":"      .subscribe("},{"lineNumber":306,"author":{"gitId":"fsgmhoward"},"content":"        (msg: MessageOutput) \u003d\u003e {"},{"lineNumber":307,"author":{"gitId":"fsgmhoward"},"content":"          this.statusMessageService.showSuccessToast(msg.message);"},{"lineNumber":308,"author":{"gitId":"fsgmhoward"},"content":"          this.notificationsTableRowModels \u003d this.notificationsTableRowModels.filter("},{"lineNumber":309,"author":{"gitId":"fsgmhoward"},"content":"            (notificationsTableRowModel: NotificationsTableRowModel) \u003d\u003e {"},{"lineNumber":310,"author":{"gitId":"fsgmhoward"},"content":"              return notificationsTableRowModel.notification.notificationId !\u003d\u003d notificationId;"},{"lineNumber":311,"author":{"gitId":"fsgmhoward"},"content":"            },"},{"lineNumber":312,"author":{"gitId":"fsgmhoward"},"content":"          );"},{"lineNumber":313,"author":{"gitId":"fsgmhoward"},"content":"        },"},{"lineNumber":314,"author":{"gitId":"fsgmhoward"},"content":"        (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":315,"author":{"gitId":"fsgmhoward"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":316,"author":{"gitId":"fsgmhoward"},"content":"        },"},{"lineNumber":317,"author":{"gitId":"fsgmhoward"},"content":"      );"},{"lineNumber":318,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":319,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":320,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":321,"author":{"gitId":"fsgmhoward"},"content":"   * Handles sorting event from the table sub-component."},{"lineNumber":322,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":323,"author":{"gitId":"fsgmhoward"},"content":"  sortNotificationsTableRowModelsHandler(sortBy: SortBy): void {"},{"lineNumber":324,"author":{"gitId":"fsgmhoward"},"content":"    if (this.notificationsTableRowModelsSortBy \u003d\u003d\u003d sortBy) {"},{"lineNumber":325,"author":{"gitId":"fsgmhoward"},"content":"      // if sorting the same column, reverse the order"},{"lineNumber":326,"author":{"gitId":"fsgmhoward"},"content":"      this.notificationsTableRowModelsSortOrder \u003d"},{"lineNumber":327,"author":{"gitId":"fsgmhoward"},"content":"        this.notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;"},{"lineNumber":328,"author":{"gitId":"fsgmhoward"},"content":"    } else {"},{"lineNumber":329,"author":{"gitId":"fsgmhoward"},"content":"      // if different column, change the sortBy value and but sort order will not be changed"},{"lineNumber":330,"author":{"gitId":"fsgmhoward"},"content":"      this.notificationsTableRowModelsSortBy \u003d sortBy;"},{"lineNumber":331,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":332,"author":{"gitId":"fsgmhoward"},"content":"    // before sorting, remove highlights from all rows"},{"lineNumber":333,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationsTableRowModels.forEach("},{"lineNumber":334,"author":{"gitId":"fsgmhoward"},"content":"      (notificationsTableRowModel: NotificationsTableRowModel) \u003d\u003e {"},{"lineNumber":335,"author":{"gitId":"fsgmhoward"},"content":"        notificationsTableRowModel.isHighlighted \u003d false;"},{"lineNumber":336,"author":{"gitId":"fsgmhoward"},"content":"      },"},{"lineNumber":337,"author":{"gitId":"fsgmhoward"},"content":"    );"},{"lineNumber":338,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":339,"author":{"gitId":"fsgmhoward"},"content":"    this.notificationsTableRowModels.sort(this.getNotificationsTableRowModelsComparator());"},{"lineNumber":340,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":341,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":342,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":343,"author":{"gitId":"fsgmhoward"},"content":"   * Gets a comparator to sort the row models based on sortBy and sortOrder."},{"lineNumber":344,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":345,"author":{"gitId":"fsgmhoward"},"content":"  getNotificationsTableRowModelsComparator():"},{"lineNumber":346,"author":{"gitId":"fsgmhoward"},"content":"    ((a: NotificationsTableRowModel, b: NotificationsTableRowModel) \u003d\u003e number) {"},{"lineNumber":347,"author":{"gitId":"fsgmhoward"},"content":"      return (a: NotificationsTableRowModel, b: NotificationsTableRowModel) \u003d\u003e {"},{"lineNumber":348,"author":{"gitId":"fsgmhoward"},"content":"        let strA: string;"},{"lineNumber":349,"author":{"gitId":"fsgmhoward"},"content":"        let strB: string;"},{"lineNumber":350,"author":{"gitId":"fsgmhoward"},"content":"        switch (this.notificationsTableRowModelsSortBy) {"},{"lineNumber":351,"author":{"gitId":"fsgmhoward"},"content":"          case SortBy.NOTIFICATION_CREATE_TIME:"},{"lineNumber":352,"author":{"gitId":"fsgmhoward"},"content":"            strA \u003d String(a.notification.createdAt);"},{"lineNumber":353,"author":{"gitId":"fsgmhoward"},"content":"            strB \u003d String(b.notification.createdAt);"},{"lineNumber":354,"author":{"gitId":"fsgmhoward"},"content":"            break;"},{"lineNumber":355,"author":{"gitId":"fsgmhoward"},"content":"          case SortBy.NOTIFICATION_TITLE:"},{"lineNumber":356,"author":{"gitId":"fsgmhoward"},"content":"            strA \u003d a.notification.title;"},{"lineNumber":357,"author":{"gitId":"fsgmhoward"},"content":"            strB \u003d b.notification.title;"},{"lineNumber":358,"author":{"gitId":"fsgmhoward"},"content":"            break;"},{"lineNumber":359,"author":{"gitId":"fsgmhoward"},"content":"          case SortBy.NOTIFICATION_START_TIME:"},{"lineNumber":360,"author":{"gitId":"fsgmhoward"},"content":"            strA \u003d String(a.notification.startTimestamp);"},{"lineNumber":361,"author":{"gitId":"fsgmhoward"},"content":"            strB \u003d String(b.notification.startTimestamp);"},{"lineNumber":362,"author":{"gitId":"fsgmhoward"},"content":"            break;"},{"lineNumber":363,"author":{"gitId":"fsgmhoward"},"content":"          case SortBy.NOTIFICATION_END_TIME:"},{"lineNumber":364,"author":{"gitId":"fsgmhoward"},"content":"            strA \u003d String(a.notification.endTimestamp);"},{"lineNumber":365,"author":{"gitId":"fsgmhoward"},"content":"            strB \u003d String(b.notification.endTimestamp);"},{"lineNumber":366,"author":{"gitId":"fsgmhoward"},"content":"            break;"},{"lineNumber":367,"author":{"gitId":"fsgmhoward"},"content":"          case SortBy.NOTIFICATION_TARGET_USER:"},{"lineNumber":368,"author":{"gitId":"fsgmhoward"},"content":"            strA \u003d String(a.notification.targetUser);"},{"lineNumber":369,"author":{"gitId":"fsgmhoward"},"content":"            strB \u003d String(b.notification.targetUser);"},{"lineNumber":370,"author":{"gitId":"fsgmhoward"},"content":"            break;"},{"lineNumber":371,"author":{"gitId":"fsgmhoward"},"content":"          case SortBy.NOTIFICATION_STYLE:"},{"lineNumber":372,"author":{"gitId":"fsgmhoward"},"content":"            strA \u003d String(a.notification.style);"},{"lineNumber":373,"author":{"gitId":"fsgmhoward"},"content":"            strB \u003d String(b.notification.style);"},{"lineNumber":374,"author":{"gitId":"fsgmhoward"},"content":"            break;"},{"lineNumber":375,"author":{"gitId":"fsgmhoward"},"content":"          default:"},{"lineNumber":376,"author":{"gitId":"fsgmhoward"},"content":"            strA \u003d \u0027\u0027;"},{"lineNumber":377,"author":{"gitId":"fsgmhoward"},"content":"            strB \u003d \u0027\u0027;"},{"lineNumber":378,"author":{"gitId":"fsgmhoward"},"content":"        }"},{"lineNumber":379,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":380,"author":{"gitId":"fsgmhoward"},"content":"        return this.tableComparatorService.compare("},{"lineNumber":381,"author":{"gitId":"fsgmhoward"},"content":"          this.notificationsTableRowModelsSortBy, this.notificationsTableRowModelsSortOrder, strA, strB);"},{"lineNumber":382,"author":{"gitId":"fsgmhoward"},"content":"      };"},{"lineNumber":383,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":384,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"zhaojj2209":4,"fsgmhoward":380}},{"path":"src/web/app/pages-admin/admin-notifications-page/admin-notifications-page.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import { NgbTooltipModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import { DatepickerModule } from \u0027../../components/datepicker/datepicker.module\u0027;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"import { RichTextEditorModule } from \u0027../../components/rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"import { TimepickerModule } from \u0027../../components/timepicker/timepicker.module\u0027;"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"import { AdminNotificationsPageComponent } from \u0027./admin-notifications-page.component\u0027;"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationEditFormComponent } from \u0027./notification-edit-form/notification-edit-form.component\u0027;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationsTableComponent } from \u0027./notifications-table/notifications-table.component\u0027;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"const routes: Routes \u003d ["},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"  {"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"    path: \u0027\u0027,"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"    component: AdminNotificationsPageComponent,"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  },"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"];"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":" * Module for admin notifications page."},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"@NgModule({"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"  declarations: ["},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"    AdminNotificationsPageComponent,"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"    NotificationsTableComponent,"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"    NotificationEditFormComponent,"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"  ],"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"  exports: ["},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"    AdminNotificationsPageComponent,"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"  ],"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"  imports: ["},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"    AjaxLoadingModule,"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"    CommonModule,"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"    DatepickerModule,"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"    FormsModule,"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"    RichTextEditorModule,"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"    LoadingSpinnerModule,"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"    LoadingRetryModule,"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"    NgbTooltipModule,"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"    TeammatesCommonModule,"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"    TimepickerModule,"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"  ],"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"export class AdminNotificationsPageModule { }"}],"authorContributionMap":{"fsgmhoward":50}},{"path":"src/web/app/pages-admin/admin-notifications-page/notification-edit-form/notification-edit-form-model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationTargetUser, NotificationStyle } from \u0027../../../../types/api-request\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { DateFormat } from \u0027../../../components/datepicker/datepicker.component\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import { TimeFormat } from \u0027../../../components/timepicker/timepicker.component\u0027;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":" * The mode of operation for notification edit form."},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":" export enum NotificationEditFormMode {"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"   * Adding a new notification."},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  ADD,"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"   * Editing the existing notification."},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"  EDIT,"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":" * The form model of notification edit form."},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"export interface NotificationEditFormModel {"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"  // EDIT mode specific"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"  notificationId: string;"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"  shown: boolean;"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"  startTime: TimeFormat;"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"  startDate: DateFormat;"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"  endTime: TimeFormat;"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"  endDate: DateFormat;"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"  style: NotificationStyle;"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"  targetUser: NotificationTargetUser;"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"  title: string;"},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"  message: string;"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"  isSaving: boolean;"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"  isDeleting: boolean;"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":41}},{"path":"src/web/app/pages-admin/admin-notifications-page/notification-edit-form/notification-edit-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv class\u003d\"card card-plain\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"    \u003cdiv class\u003d\"close-header\"\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"      \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"cancelHandler()\"\u003e"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"        \u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"      \u003c/button\u003e"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"    \u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"    \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"      \u003cdiv class\u003d\"card border-primary margin-top-20px\"\u003e"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"        \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-2 text-md-right font-weight-bold\"\u003e"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"              \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"The indended recipients of this notification.\"\u003eTarget user group\u003c/span\u003e"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-auto text-md-left\"\u003e"},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"              \u003cselect id\u003d\"notification-target-user\" class\u003d\"form-control\" [ngModel]\u003d\"model.targetUser\" (ngModelChange)\u003d\"triggerModelChange(\u0027targetUser\u0027, $event)\"\u003e"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"                \u003coption [ngValue]\u003d\"NotificationTargetUser.STUDENT\"\u003eStudents\u003c/option\u003e"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"                \u003coption [ngValue]\u003d\"NotificationTargetUser.INSTRUCTOR\"\u003eInstructors\u003c/option\u003e"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"                \u003coption [ngValue]\u003d\"NotificationTargetUser.GENERAL\"\u003eGeneral (for both students and instructors)\u003c/option\u003e"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"              \u003c/select\u003e"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"          \u003cbr/\u003e"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-2 text-md-right font-weight-bold\"\u003e"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"              \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Different styles correspond to different background colours at display.\"\u003eNotification style\u003c/span\u003e"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-auto text-md-left\"\u003e"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"              \u003cselect id\u003d\"notification-style\" class\u003d\"form-control\" [ngModel]\u003d\"model.style\" (ngModelChange)\u003d\"triggerModelChange(\u0027style\u0027, $event)\"\u003e"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"                \u003coption *ngFor\u003d\"let style of NotificationStyle | keyvalue\" [ngValue]\u003d\"style.value\"\u003e{{ style.key | notificationStyleDescription }}\u003c/option\u003e"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"              \u003c/select\u003e"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-auto text-md-middle d-flex\" [ngClass]\u003d\"model.style | notificationStyleClass\"\u003e"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"              \u003cspan class\u003d\"align-self-center\"\u003eStyle Demonstration\u003c/span\u003e"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"          \u003cbr/\u003e"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-2 text-md-right font-weight-bold\"\u003e"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"              \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Enter the name of the notification e.g. Version Changelog 8.9.1.\"\u003eTitle\u003c/span\u003e"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"              \u003cinput id\u003d\"notification-title\" type\u003d\"text\" class\u003d\"form-control\" [ngModel]\u003d\"model.title\" (ngModelChange)\u003d\"triggerModelChange(\u0027title\u0027, $event)\" placeholder\u003d\"e.g. Version Changelog 8.9.1\" maxlength\u003d\"{{NOTIFICATION_TITLE_MAX_LENGTH}}\" /\u003e"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"              \u003cdiv\u003e"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"                {{NOTIFICATION_TITLE_MAX_LENGTH - model.title.length}} characters left"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"              \u003c/div\u003e"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"          \u003cbr/\u003e"},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-2 text-md-right font-weight-bold\"\u003e"},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":"              \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Message body of the notification.\"\u003eMessage content\u003c/span\u003e"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":57,"author":{"gitId":"zhaojj2209"},"content":"              \u003ctm-rich-text-editor id\u003d\"notification-message\" [richText]\u003d\"model.message\" (richTextChange)\u003d\"triggerModelChange(\u0027message\u0027, $event)\"\u003e\u003c/tm-rich-text-editor\u003e"},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"          \u003cbr/\u003e"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"row text-center\" *ngIf\u003d\"formMode \u003d\u003d\u003d NotificationEditFormMode.EDIT\"\u003e"},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-2 text-md-right font-weight-bold\"\u003e"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"              Shown Status"},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv id\u003d\"submission-status\" class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"              {{ model.shown ? \u0027Yes\u0027 : \u0027No\u0027 }}"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"      \u003c/div\u003e"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"      \u003cdiv class\u003d\"card border-primary margin-top-20px\"\u003e"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"        \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-2 text-md-right font-weight-bold\"\u003e"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":"              \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"This timezone is deduced based on your system/browser\u0027s settings.\"\u003eTimezone\u003c/span\u003e"},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv id\u003d\"submission-status\" class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":81,"author":{"gitId":"fsgmhoward"},"content":"              {{ guessTimezone }}"},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"row text-center margin-top-20px\"\u003e"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-6\"\u003e"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"              \u003cdiv class\u003d\"col-12 text-md-left\"\u003e"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":"                \u003cdiv\u003e"},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"                  \u003clabel class\u003d\"ngb-tooltip-class label-control font-weight-bold\" ngbTooltip\u003d\"Users will be able to see the notification.\"\u003e"},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":"                    Notification start time"},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"                  \u003c/label\u003e"},{"lineNumber":92,"author":{"gitId":"fsgmhoward"},"content":"                \u003c/div\u003e"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":"              \u003c/div\u003e"},{"lineNumber":94,"author":{"gitId":"fsgmhoward"},"content":"              \u003cdiv class\u003d\"row text-center align-items-center\"\u003e"},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"                \u003cdiv id\u003d\"notification-start-date\" class\u003d\"col-md-7 col-xs-center\"\u003e"},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"                  \u003ctm-datepicker (dateChangeCallback)\u003d\"triggerModelChange(\u0027startDate\u0027, $event)\""},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":"                                 [date]\u003d\"model.startDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":98,"author":{"gitId":"fsgmhoward"},"content":"                \u003c/div\u003e"},{"lineNumber":99,"author":{"gitId":"fsgmhoward"},"content":"                \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"                  \u003ctm-timepicker id\u003d\"notification-start-time\" [time]\u003d\"model.startTime\" (timeChange)\u003d\"triggerModelChange(\u0027startTime\u0027, $event)\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":"                \u003c/div\u003e"},{"lineNumber":102,"author":{"gitId":"fsgmhoward"},"content":"              \u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"            \u003cdiv class\u003d\"col-md-6 border-left-gray\"\u003e"},{"lineNumber":105,"author":{"gitId":"fsgmhoward"},"content":"              \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":106,"author":{"gitId":"fsgmhoward"},"content":"                \u003cdiv class\u003d\"col-12 text-md-left ml-md-2\"\u003e"},{"lineNumber":107,"author":{"gitId":"fsgmhoward"},"content":"                  \u003clabel class\u003d\"ngb-tooltip-class label-control font-weight-bold\" ngbTooltip\u003d\"Notification will be hidden from users.\"\u003e"},{"lineNumber":108,"author":{"gitId":"fsgmhoward"},"content":"                    Notification end time"},{"lineNumber":109,"author":{"gitId":"fsgmhoward"},"content":"                  \u003c/label\u003e"},{"lineNumber":110,"author":{"gitId":"fsgmhoward"},"content":"                \u003c/div\u003e"},{"lineNumber":111,"author":{"gitId":"fsgmhoward"},"content":"              \u003c/div\u003e"},{"lineNumber":112,"author":{"gitId":"fsgmhoward"},"content":"              \u003cdiv class\u003d\"row align-items-center\"\u003e"},{"lineNumber":113,"author":{"gitId":"fsgmhoward"},"content":"                \u003cdiv id\u003d\"notification-end-date\" class\u003d\"col-md-7 col-xs-center\"\u003e"},{"lineNumber":114,"author":{"gitId":"fsgmhoward"},"content":"                  \u003ctm-datepicker (dateChangeCallback)\u003d\"triggerModelChange(\u0027endDate\u0027, $event)\""},{"lineNumber":115,"author":{"gitId":"fsgmhoward"},"content":"                                 [minDate]\u003d\"model.startDate\" [date]\u003d\"model.endDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":116,"author":{"gitId":"fsgmhoward"},"content":"                \u003c/div\u003e"},{"lineNumber":117,"author":{"gitId":"fsgmhoward"},"content":"                \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":118,"author":{"gitId":"fsgmhoward"},"content":"                  \u003ctm-timepicker id\u003d\"notification-end-time\" [time]\u003d\"model.endTime\" (timeChange)\u003d\"triggerModelChange(\u0027endTime\u0027, $event)\"\u003e\u003c/tm-timepicker\u003e"},{"lineNumber":119,"author":{"gitId":"fsgmhoward"},"content":"                \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"fsgmhoward"},"content":"              \u003c/div\u003e"},{"lineNumber":121,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/div\u003e"},{"lineNumber":122,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":123,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/div\u003e"},{"lineNumber":124,"author":{"gitId":"fsgmhoward"},"content":"      \u003c/div\u003e"},{"lineNumber":125,"author":{"gitId":"fsgmhoward"},"content":"      \u003cdiv class\u003d\"row margin-top-20px\"\u003e"},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"        \u003cdiv class\u003d\"col-12 text-center\"\u003e"},{"lineNumber":127,"author":{"gitId":"fsgmhoward"},"content":"          \u003cspan class\u003d\"loader\"\u003e\u003c/span\u003e"},{"lineNumber":128,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d NotificationEditFormMode.ADD\"\u003e"},{"lineNumber":129,"author":{"gitId":"fsgmhoward"},"content":"            \u003cbutton id\u003d\"btn-create-notification\" type\u003d\"button\" class\u003d\"btn btn-primary\" [disabled]\u003d\"model.isSaving\" (click)\u003d\"submitFormHandler()\"\u003e"},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"              \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003eCreate Notification"},{"lineNumber":131,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/button\u003e"},{"lineNumber":132,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":133,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d NotificationEditFormMode.EDIT\"\u003e"},{"lineNumber":134,"author":{"gitId":"zhaojj2209"},"content":"            \u003cbutton id\u003d\"btn-edit-notification\" type\u003d\"button\" class\u003d\"btn btn-success\" [disabled]\u003d\"model.isSaving\" *ngIf\u003d\"formMode \u003d\u003d\u003d NotificationEditFormMode.EDIT\" (click)\u003d\"submitFormHandler()\"\u003e"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"              \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003eSave Changes"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/button\u003e"},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/div\u003e"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"      \u003c/div\u003e"},{"lineNumber":140,"author":{"gitId":"fsgmhoward"},"content":"    \u003c/div\u003e"},{"lineNumber":141,"author":{"gitId":"fsgmhoward"},"content":"  \u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":3,"fsgmhoward":138}},{"path":"src/web/app/pages-admin/admin-notifications-page/notification-edit-form/notification-edit-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":".card-plain {"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  background-color: #EAEFF5;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"  background-image: none;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"  border: 0;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"  box-shadow: 0 0 0 0;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":".close-header {"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  padding-top: .75rem;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"  padding-right: 1.25rem;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"  margin-bottom: 0;"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":".border-left-gray {"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"  border-left: 1px solid #DDD;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":".margin-top-20px {"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  margin-top: 20px;"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":".align-row {"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"  display: flex;"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"  flex-direction: row;"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":".padding-left-7px {"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"  padding-left: 7px;"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":29}},{"path":"src/web/app/pages-admin/admin-notifications-page/notification-edit-form/notification-edit-form.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import { AdminNotificationsPageModule } from \u0027../admin-notifications-page.module\u0027;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationEditFormComponent } from \u0027./notification-edit-form.component\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"describe(\u0027NotificationEditFormComponent\u0027, () \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  let component: NotificationEditFormComponent;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  let fixture: ComponentFixture\u003cNotificationEditFormComponent\u003e;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"  beforeEach(async () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"    await TestBed.configureTestingModule({"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"      imports: ["},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"        AdminNotificationsPageModule,"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"        HttpClientTestingModule,"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"      ],"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"    })"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"    .compileComponents();"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    fixture \u003d TestBed.createComponent(NotificationEditFormComponent);"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"    fixture.detectChanges();"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"});"}],"authorContributionMap":{"fsgmhoward":30}},{"path":"src/web/app/pages-admin/admin-notifications-page/notification-edit-form/notification-edit-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"zhaojj2209"},"content":"import { Component, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { NgbDateParserFormatter } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import { SimpleModalService } from \u0027../../../../services/simple-modal.service\u0027;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import { ApiConst } from \u0027../../../../types/api-const\u0027;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationTargetUser, NotificationStyle } from \u0027../../../../types/api-request\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import { DatePickerFormatter } from \u0027../../../components/datepicker/datepicker-formatter\u0027;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"import { SimpleModalType } from \u0027../../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"import { collapseAnim } from \u0027../../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationEditFormMode, NotificationEditFormModel } from \u0027./notification-edit-form-model\u0027;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  selector: \u0027tm-notification-edit-form\u0027,"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"  templateUrl: \u0027./notification-edit-form.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"  styleUrls: [\u0027./notification-edit-form.component.scss\u0027],"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"  providers: [{ provide: NgbDateParserFormatter, useClass: DatePickerFormatter }],"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"  animations: [collapseAnim],"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"export class NotificationEditFormComponent {"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"  NotificationEditFormMode \u003d NotificationEditFormMode;"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  NotificationStyle \u003d NotificationStyle;"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"  NotificationTargetUser \u003d NotificationTargetUser;"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"  NOTIFICATION_TITLE_MAX_LENGTH \u003d ApiConst.NOTIFICATION_TITLE_MAX_LENGTH;"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":26,"author":{"gitId":"zhaojj2209"},"content":"  @Input()"},{"lineNumber":27,"author":{"gitId":"zhaojj2209"},"content":"  guessTimezone \u003d \u0027UTC\u0027;"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"  @Input()"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"  model: NotificationEditFormModel \u003d {"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"    notificationId: \u0027\u0027,"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"    shown: false,"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"    startTime: { hour: 0, minute: 0 },"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"    startDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"    endTime: { hour: 0, minute: 0 },"},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"    endDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"    style: NotificationStyle.SUCCESS,"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"    targetUser: NotificationTargetUser.GENERAL,"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"    title: \u0027\u0027,"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"    message: \u0027\u0027,"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"    isSaving: false,"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"    isDeleting: false,"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"  };"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"  @Output()"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"  modelChange: EventEmitter\u003cNotificationEditFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":"  @Input()"},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"  formMode: NotificationEditFormMode \u003d NotificationEditFormMode.ADD;"},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":"  @Input()"},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"  courseCandidates: Notification[] \u003d [];"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"  // event emission"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"  @Output()"},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"  addNewNotificationEvent \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":"  @Output()"},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"  editExistingNotificationEvent \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"  @Output()"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"  cancelEditingNotificationEvent \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"  constructor(private simpleModalService: SimpleModalService) { }"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"  triggerModelChange(field: string, data: any): void {"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"    this.modelChange.emit({"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"      ...this.model,"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":"      [field]: data,"},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"    });"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":80,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":81,"author":{"gitId":"fsgmhoward"},"content":"   * Handles submit button click event."},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":83,"author":{"gitId":"fsgmhoward"},"content":"  submitFormHandler(): void {"},{"lineNumber":84,"author":{"gitId":"fsgmhoward"},"content":"    // resolve local date time to timestamp"},{"lineNumber":85,"author":{"gitId":"fsgmhoward"},"content":"    if (this.formMode \u003d\u003d\u003d NotificationEditFormMode.ADD) {"},{"lineNumber":86,"author":{"gitId":"fsgmhoward"},"content":"      this.addNewNotificationEvent.emit();"},{"lineNumber":87,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":89,"author":{"gitId":"fsgmhoward"},"content":"    if (this.formMode \u003d\u003d\u003d NotificationEditFormMode.EDIT) {"},{"lineNumber":90,"author":{"gitId":"fsgmhoward"},"content":"      this.editExistingNotificationEvent.emit();"},{"lineNumber":91,"author":{"gitId":"fsgmhoward"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":94,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":95,"author":{"gitId":"fsgmhoward"},"content":"   * Handles cancel button click event."},{"lineNumber":96,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":97,"author":{"gitId":"fsgmhoward"},"content":"  cancelHandler(): void {"},{"lineNumber":98,"author":{"gitId":"fsgmhoward"},"content":"    this.simpleModalService.openConfirmationModal(\u0027Discard unsaved edit?\u0027,"},{"lineNumber":99,"author":{"gitId":"fsgmhoward"},"content":"        SimpleModalType.WARNING, \u0027Warning: Any unsaved changes will be lost.\u0027).result.then(() \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"          this.cancelEditingNotificationEvent.emit();"},{"lineNumber":101,"author":{"gitId":"fsgmhoward"},"content":"        });"},{"lineNumber":102,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":104,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"zhaojj2209":5,"fsgmhoward":99}},{"path":"src/web/app/pages-admin/admin-notifications-page/notifications-table/notifications-table-model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { Notification } from \u0027../../../../types/api-output\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":" * The model for a row in the notifications table."},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"export interface NotificationsTableRowModel {"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"  isHighlighted: boolean;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  notification: Notification;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":" * The color scheme of the header of the table"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"export enum NotificationsTableHeaderColorScheme {"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"   * Blue background with white text."},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"  BLUE,"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"   * White background with black text."},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"  WHITE,"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":24}},{"path":"src/web/app/pages-admin/admin-notifications-page/notifications-table/notifications-table.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"    \u003ctable id\u003d\"notifications-table\" class\u003d\"table table-responsive-lg table-striped table-bordered margin-bottom-0\"\u003e"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"      \u003cthead\u003e"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"      \u003ctr [ngClass]\u003d\"{ \u0027bg-primary text-white\u0027: headerColorScheme \u003d\u003d\u003d NotificationsTableHeaderColorScheme.BLUE }\"\u003e"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortNotificationsTableRowModels(SortBy.NOTIFICATION_TITLE)\"\u003e"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"          Title"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_TITLE \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_TITLE \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/th\u003e"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortNotificationsTableRowModels(SortBy.NOTIFICATION_START_TIME)\"\u003e"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"          Start Time"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_START_TIME \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_START_TIME \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/span\u003e"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/th\u003e"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortNotificationsTableRowModels(SortBy.NOTIFICATION_END_TIME)\"\u003e"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"          End Time"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_END_TIME \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_END_TIME \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/span\u003e"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/th\u003e"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortNotificationsTableRowModels(SortBy.NOTIFICATION_TARGET_USER)\"\u003e"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"          Target User"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_TARGET_USER \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_TARGET_USER \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/th\u003e"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortNotificationsTableRowModels(SortBy.NOTIFICATION_STYLE)\"\u003e"},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"          Style"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_STYLE \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_STYLE \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/span\u003e"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/th\u003e"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"        \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortNotificationsTableRowModels(SortBy.NOTIFICATION_CREATE_TIME)\"\u003e"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"          Creation Time"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"          \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_CREATE_TIME \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"            \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"notificationsTableRowModelsSortBy \u003d\u003d\u003d SortBy.NOTIFICATION_CREATE_TIME \u0026\u0026 notificationsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/span\u003e"},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/th\u003e"},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":"        \u003cth\u003eActions\u003c/th\u003e"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":"      \u003c/tr\u003e"},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"      \u003c/thead\u003e"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":"      \u003ctbody\u003e"},{"lineNumber":58,"author":{"gitId":"zhaojj2209"},"content":"      \u003ctr *ngFor\u003d\"let notificationsTableRowModel of notificationsTableRowModels\" [id]\u003d\"notificationsTableRowModel.notification.notificationId\" [ngClass]\u003d\"{ \u0027table-success\u0027: notificationsTableRowModel.isHighlighted }\"\u003e"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"        \u003ctd class\u003d\"text-break\"\u003e{{ notificationsTableRowModel.notification.title }}\u003c/td\u003e"},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"        \u003ctd class\u003d\"text-break\"\u003e\u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"{{ notificationsTableRowModel.notification.startTimestamp | formatDateDetail: guessTimezone }}\"\u003e{{ notificationsTableRowModel.notification.startTimestamp | formatDateBrief: guessTimezone }}\u003c/span\u003e\u003c/td\u003e"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":"        \u003ctd class\u003d\"text-break\"\u003e\u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"{{ notificationsTableRowModel.notification.endTimestamp | formatDateDetail: guessTimezone }}\"\u003e{{ notificationsTableRowModel.notification.endTimestamp | formatDateBrief: guessTimezone }}\u003c/span\u003e\u003c/td\u003e"},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":"        \u003ctd class\u003d\"text-break\"\u003e{{ notificationsTableRowModel.notification.targetUser }}\u003c/td\u003e"},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"        \u003ctd class\u003d\"text-break\" [ngClass]\u003d\"notificationsTableRowModel.notification.style | notificationStyleClass\"\u003e{{ notificationsTableRowModel.notification.style | notificationStyleDescription }}\u003c/td\u003e"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"        \u003ctd class\u003d\"text-break\"\u003e\u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"{{ notificationsTableRowModel.notification.createdAt | formatDateDetail: guessTimezone }}\"\u003e{{ notificationsTableRowModel.notification.createdAt | formatDateBrief: guessTimezone }}\u003c/span\u003e\u003c/td\u003e"},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"        \u003ctd class\u003d\"actions-cell\"\u003e"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"          \u003cdiv class\u003d\"d-flex\"\u003e"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" (click)\u003d\"loadNotificationEditForm(notificationsTableRowModel.notification)\"\u003e"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":"              Edit"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/button\u003e"},{"lineNumber":70,"author":{"gitId":"fsgmhoward"},"content":"            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-danger btn-sm\" (click)\u003d\"deleteNotification(notificationsTableRowModel.notification.notificationId, notificationsTableRowModel.notification.title)\"\u003e"},{"lineNumber":71,"author":{"gitId":"fsgmhoward"},"content":"              Delete"},{"lineNumber":72,"author":{"gitId":"fsgmhoward"},"content":"            \u003c/button\u003e"},{"lineNumber":73,"author":{"gitId":"fsgmhoward"},"content":"          \u003c/div\u003e"},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"        \u003c/td\u003e"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"      \u003c/tr\u003e"},{"lineNumber":76,"author":{"gitId":"fsgmhoward"},"content":"      \u003c/tbody\u003e"},{"lineNumber":77,"author":{"gitId":"fsgmhoward"},"content":"    \u003c/table\u003e"},{"lineNumber":78,"author":{"gitId":"fsgmhoward"},"content":"  \u003c/div\u003e"},{"lineNumber":79,"author":{"gitId":"fsgmhoward"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":1,"fsgmhoward":78}},{"path":"src/web/app/pages-admin/admin-notifications-page/notifications-table/notifications-table.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":".actions-cell button:not(.dropdown-item) {"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"  margin-left: var(--btn-margin);"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":".sortable-header {"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"  cursor: pointer;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":".clickable {"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"  cursor: pointer;"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":".margin-bottom-0 {"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"  margin-bottom: 0;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"}"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":".padding-left-7px {"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"  padding-left: 7px;"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":19}},{"path":"src/web/app/pages-admin/admin-notifications-page/notifications-table/notifications-table.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import { AdminNotificationsPageModule } from \u0027../admin-notifications-page.module\u0027;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationsTableComponent } from \u0027./notifications-table.component\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"describe(\u0027NotificationsTableComponent\u0027, () \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  let component: NotificationsTableComponent;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  let fixture: ComponentFixture\u003cNotificationsTableComponent\u003e;"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"  beforeEach(async () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"    await TestBed.configureTestingModule({"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"      imports: ["},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"        AdminNotificationsPageModule,"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"        HttpClientTestingModule,"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"      ],"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"    })"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"    .compileComponents();"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    fixture \u003d TestBed.createComponent(NotificationsTableComponent);"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"    fixture.detectChanges();"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"});"}],"authorContributionMap":{"fsgmhoward":30}},{"path":"src/web/app/pages-admin/admin-notifications-page/notifications-table/notifications-table.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"zhaojj2209"},"content":"import { Component, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { SimpleModalService } from \u0027../../../../services/simple-modal.service\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import { Notification } from \u0027../../../../types/api-output\u0027;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import { SortBy, SortOrder } from \u0027../../../../types/sort-properties\u0027;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":"import { SimpleModalType } from \u0027../../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationsTableHeaderColorScheme, NotificationsTableRowModel } from \u0027./notifications-table-model\u0027;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"@Component({"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":"  selector: \u0027tm-notifications-table\u0027,"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"  templateUrl: \u0027./notifications-table.component.html\u0027,"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"  styleUrls: [\u0027./notifications-table.component.scss\u0027],"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"export class NotificationsTableComponent {"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"  SortBy \u003d SortBy;"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"  SortOrder \u003d SortOrder;"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"  NotificationsTableHeaderColorScheme \u003d NotificationsTableHeaderColorScheme;"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"  @Input()"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"  guessTimezone \u003d \u0027UTC\u0027;"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"  @Input()"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"  notificationsTableRowModels: NotificationsTableRowModel[] \u003d [];"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"  @Input()"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"  notificationsTableRowModelsSortBy \u003d SortBy.NOTIFICATION_CREATE_TIME;"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"  @Input()"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"  notificationsTableRowModelsSortOrder \u003d SortOrder.DESC;"},{"lineNumber":29,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"  @Input()"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":"  headerColorScheme \u003d NotificationsTableHeaderColorScheme.BLUE;"},{"lineNumber":32,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":33,"author":{"gitId":"fsgmhoward"},"content":"  @Output()"},{"lineNumber":34,"author":{"gitId":"fsgmhoward"},"content":"  sortNotificationsTableRowModelsEvent: EventEmitter\u003cSortBy\u003e \u003d new EventEmitter();"},{"lineNumber":35,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":36,"author":{"gitId":"fsgmhoward"},"content":"  @Output()"},{"lineNumber":37,"author":{"gitId":"fsgmhoward"},"content":"  deleteNotificationEvent: EventEmitter\u003cString\u003e \u003d new EventEmitter();"},{"lineNumber":38,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":39,"author":{"gitId":"fsgmhoward"},"content":"  @Output()"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"  loadNotificationEditFormEvent: EventEmitter\u003cNotification\u003e \u003d new EventEmitter();"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":42,"author":{"gitId":"zhaojj2209"},"content":"  constructor(private simpleModalService: SimpleModalService) { }"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"   * Sorts the list of feedback session row."},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"  sortNotificationsTableRowModels(by: SortBy): void {"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"    this.sortNotificationsTableRowModelsEvent.emit(by);"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"fsgmhoward"},"content":"   * Deletes a notification based on its ID."},{"lineNumber":53,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":54,"author":{"gitId":"fsgmhoward"},"content":"  deleteNotification(notificationId: string, title: string): void {"},{"lineNumber":55,"author":{"gitId":"fsgmhoward"},"content":"    const modalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":56,"author":{"gitId":"fsgmhoward"},"content":"      \u0027Confirm your action\u0027,"},{"lineNumber":57,"author":{"gitId":"fsgmhoward"},"content":"      SimpleModalType.DANGER,"},{"lineNumber":58,"author":{"gitId":"fsgmhoward"},"content":"      `Do you want to delete this notification (titled \"${title}\") permanently? This action will not be reversible.`,"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"    );"},{"lineNumber":60,"author":{"gitId":"fsgmhoward"},"content":"    modalRef.result.then(() \u003d\u003e this.deleteNotificationEvent.emit(notificationId));"},{"lineNumber":61,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":63,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":64,"author":{"gitId":"fsgmhoward"},"content":"   * Loads the notification edit form."},{"lineNumber":65,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":66,"author":{"gitId":"fsgmhoward"},"content":"  loadNotificationEditForm(notification: Notification): void {"},{"lineNumber":67,"author":{"gitId":"fsgmhoward"},"content":"    this.loadNotificationEditFormEvent.emit(notification);"},{"lineNumber":68,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"zhaojj2209":4,"fsgmhoward":65}},{"path":"src/web/app/pages-admin/admin-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../environments/environment\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../services/auth.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../services/navigation.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AuthInfo } from \u0027../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Base skeleton for admin pages."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  selector: \u0027tm-admin-page\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./admin-page.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class AdminPageComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  user: string \u003d \u0027\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  institute?: string \u003d \u0027\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  isInstructor: boolean \u003d false;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  isStudent: boolean \u003d false;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  isAdmin: boolean \u003d false;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  isMaintainer: boolean \u003d false;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  navItems: any[] \u003d ["},{"lineNumber":24,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      url: \u0027/web/admin\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      display: \u0027Home\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      url: \u0027/web/admin/search\u0027,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      display: \u0027Search\u0027,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      url: \u0027/web/admin/sessions\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      display: \u0027Sessions\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      url: \u0027/web/admin/timezone\u0027,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      display: \u0027Timezone Listing\u0027,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":40,"author":{"gitId":"fsgmhoward"},"content":"    {"},{"lineNumber":41,"author":{"gitId":"fsgmhoward"},"content":"      url: \u0027/web/admin/notifications\u0027,"},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"      display: \u0027Notifications\u0027,"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"    },"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      url: \u0027/web/admin/logs\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      display: \u0027Logs\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      url: \u0027/web/admin/stats\u0027,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      display: \u0027Usage Statistics\u0027,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  isFetchingAuthDetails: boolean \u003d false;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  constructor(private router: Router, private authService: AuthService, private navigationService: NavigationService) {}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.isFetchingAuthDetails \u003d true;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.authService.getAuthUser().subscribe((res: AuthInfo) \u003d\u003e {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      if (res.user) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.user \u003d res.user.id;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.institute \u003d res.institute;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.isInstructor \u003d res.user.isInstructor;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.isStudent \u003d res.user.isStudent;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.isAdmin \u003d res.user.isAdmin;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.isMaintainer \u003d res.user.isMaintainer;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!this.isAdmin) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          // User is not a valid admin; redirect to home page."},{"lineNumber":71,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(this.router, \u0027/web\u0027,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"              \u0027You are not authorized to view the page.\u0027);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        window.location.href \u003d `${this.backendUrl}${res.adminLoginUrl}`;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      this.isFetchingAuthDetails \u003d false;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      this.navigationService.navigateWithErrorMessage(this.router, \u0027/web\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"          \u0027You are not authorized to view the page.\u0027);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":4,"-":80}},{"path":"src/web/app/pages-admin/admin-pages.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { PageNotFoundComponent } from \u0027../page-not-found/page-not-found.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PageNotFoundModule } from \u0027../page-not-found/page-not-found.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":8,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    path: \u0027home\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027./admin-home-page/admin-home-page.module\u0027)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.AdminHomePageModule),"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    data: {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      pageTitle: \u0027Add New Instructor\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    path: \u0027accounts\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027./admin-accounts-page/admin-accounts-page.module\u0027)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.AdminAccountsPageModule),"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    data: {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      pageTitle: \u0027Account Details\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    path: \u0027search\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027./admin-search-page/admin-search-page.module\u0027)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.AdminSearchPageModule),"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    data: {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      pageTitle: \u0027Admin Search\u0027,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    path: \u0027sessions\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027./admin-sessions-page/admin-sessions-page.module\u0027)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.AdminSessionsPageModule),"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    data: {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      pageTitle: \u0027Ongoing Sessions\u0027,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    path: \u0027timezone\u0027,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027../pages-monitoring/timezone-page/timezone-page.module\u0027)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.TimezonePageModule),"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"  {"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"    path: \u0027notifications\u0027,"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"    loadChildren: () \u003d\u003e import(\u0027./admin-notifications-page/admin-notifications-page.module\u0027)"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"        .then((m: any) \u003d\u003e m.AdminNotificationsPageModule),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    path: \u0027logs\u0027,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    data: {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      isAdmin: true,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027../pages-monitoring/logs-page/logs-page.module\u0027)"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.LogsPageModule),"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    path: \u0027stats\u0027,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027../pages-monitoring/usage-stats-page/usage-statistics-page.module\u0027)"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.UsageStatisticsPageModule),"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    data: {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      pageTitle: \u0027Usage Statistics\u0027,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    pathMatch: \u0027full\u0027,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    redirectTo: \u0027home\u0027,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    path: \u0027**\u0027,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    pathMatch: \u0027full\u0027,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    component: PageNotFoundComponent,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":76,"author":{"gitId":"-"},"content":"];"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":79,"author":{"gitId":"-"},"content":" * Module for admin pages."},{"lineNumber":80,"author":{"gitId":"-"},"content":" */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":83,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    PageNotFoundModule,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":87,"author":{"gitId":"-"},"content":"})"},{"lineNumber":88,"author":{"gitId":"-"},"content":"export class AdminPagesModule {}"}],"authorContributionMap":{"fsgmhoward":4,"-":84}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-students-section/instructor-help-students-section.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch2 class\u003d\"color-blue\" *ngIf\u003d\"!key || showQuestion.length \u003e 0\"\u003eStudents\u003c/h2\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(0, 4)\"\u003eStudent Records\u003c/h4\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_VIEW_PROFILE)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_VIEW_PROFILE\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view a student\u0027s profile?\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_PROFILE]\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cp\u003eTo view the profile of Student A from Course B:\u003c/p\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in the course."},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Click the"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eView\u003c/button\u003e button in the last column of the row corresponding to Student A. A new page will open displaying the student\u0027s profile, similar to the sample profile below."},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_PROFILE]\" @collapseAnim\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003ctm-student-profile [studentProfile]\u003d\"exampleStudentProfile\"\u003e\u003c/tm-student-profile\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003ctm-course-related-info [student]\u003d\"exampleStudentAttributes\" [isDisplayOnly]\u003d\"true\"\u003e\u003c/tm-course-related-info\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      The student\u0027s profile page displays the student\u0027s details and course-related information, such as:"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cb\u003eSection Name\u003c/b\u003e: the name of the section you enrolled the student in. This only appears if sections are created for the course."},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cb\u003eTeam Name\u003c/b\u003e: the name of the team you enrolled the student in, or \u003ci\u003eNA\u003c/i\u003e if the student does not belong to a team."},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cb\u003eOfficial Email\u003c/b\u003e: the email address that will be used to contact the student, taken from enrollment information."},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cb\u003eComments\u003c/b\u003e: additional student information you entered in the Comments column during enrollment."},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      Below this is the \u003cb\u003eMore Info\u003c/b\u003e section containing a personal description given by the student, if any."},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cbr\u003e You can press the \u003cspan class\u003d\"text-muted fas fa-expand-arrows-alt cursor-pointer\"\u003e\u003c/span\u003e button in the top-right corner to display the information in a lightbox for better readability."},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_PROFILE]\" @collapseAnim\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003ctm-more-info [studentName]\u003d\"exampleStudentAttributes.name\" [moreInfoText]\u003d\"exampleStudentProfile.moreInfo\"\u003e\u003c/tm-more-info\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_EDIT_DETAILS)\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_EDIT_DETAILS\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I edit a student\u0027s details after enrolling the student?\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_EDIT_DETAILS]\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      To edit the name, section, team, contact email, or instructor comments of Student A from Course B:"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in Course B."},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Click the"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eEdit\u003c/button\u003e button in the last column of the row corresponding to Student A."},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cbr\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        In the new page that opens, edit the relevant fields of Student A\u0027s details. The page will look similar to the example below."},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Click"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eSave Changes\u003c/button\u003e to save your changes to Student A\u0027s details."},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      Note that moving a student to a different team (i.e. changing the student\u0027s Team ID) will change the student\u0027s team in all existing sessions in the course."},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_EDIT_DETAILS]\" @collapseAnim\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-course-student-edit-page [isEnabled]\u003d\"false\"\u003e\u003c/tm-instructor-course-student-edit-page\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":82,"author":{"gitId":"fsgmhoward"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_VIEW_RESPONSES)\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_VIEW_RESPONSES\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view all the responses a student has given and received?\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_RESPONSES]\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      To view the responses that Student A from Course B has given and received:"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in the course."},{"lineNumber":92,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Click"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eAll Records\u003c/button\u003e button corresponding to Student A to access all the responses Student A has given and received."},{"lineNumber":96,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  \u003c!--Question --\u003e"},{"lineNumber":100,"author":{"gitId":"fsgmhoward"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_SEARCH)\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_SEARCH\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I search for a student in my course?\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\"\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      You can search for students from the \u003cb\u003eSearch\u003c/b\u003e page. Click the \u003cb\u003eSearch\u003c/b\u003e tab in the navigation bar at the top of the page. You should see a search bar similar to the one below:"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\" @collapseAnim\u003e\u003ctm-instructor-search-bar\u003e\u003c/tm-instructor-search-bar\u003e\u003c/tm-example-box\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      To search for a student:"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Tick the option \u003cb\u003eStudents\u003c/b\u003e below the search box."},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Type your search terms into the search bar. You can search for a student record based on:"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003cul\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          \u003cli\u003eSection name\u003c/li\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003cli\u003eTeam name\u003c/li\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          \u003cli\u003eStudent name\u003c/li\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003cli\u003eEmail\u003c/li\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003c/ul\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Click the"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eSearch\u003c/button\u003e button."},{"lineNumber":127,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      If you search for \u003ccode\u003ealice\u003c/code\u003e, the search results would show something like this (assuming such a student exists):"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\" @collapseAnim\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      \u003ctm-student-result-table [studentTables]\u003d\"exampleSingleStudentResultTables\" [isActionButtonsEnabled]\u003d\"false\"\u003e\u003c/tm-student-result-table\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      You can search for multiple students based on the attributes mentioned above. To do so, include the terms you wish to search for in the search box separated by spaces.\u003cbr\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      For example, if you search for \u003ccode\u003ealice Section A Team B jack@email.com\u003c/code\u003e, the search would result in something similar to this (assuming the corresponding data exists):"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\" @collapseAnim\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003ctm-student-result-table [studentTables]\u003d\"exampleMultipleStudentResultTables\" [isActionButtonsEnabled]\u003d\"false\"\u003e\u003c/tm-student-result-table\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":144,"author":{"gitId":"fsgmhoward"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(4, 6)\"\u003eStudent Accounts\u003c/h4\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_GOOGLE_ACCOUNT)\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_GOOGLE_ACCOUNT\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Is it compulsory for students to use Google accounts?\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_GOOGLE_ACCOUNT]\"\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      Students can submit feedback and view results without having to login to TEAMMATES, unless they choose to link their Google account (optional). TEAMMATES will send students a unique URL to access their feedback sessions and results. However, students"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      who link their TEAMMATES account with their Google account will be able to access a dashboard of all their sessions and results through the TEAMMATES website."},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_CHANGE_ID)\""},{"lineNumber":157,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_CHANGE_ID\""},{"lineNumber":158,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I change the Google ID associated with a student?\""},{"lineNumber":159,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_CHANGE_ID]\"\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      At the moment, there is no way for students to update their own Google IDs."},{"lineNumber":162,"author":{"gitId":"-"},"content":"      \u003cbr\u003e Please ask the student to \u003ca href\u003d\"mailto:{{ supportEmail }}\"\u003econtact us\u003c/a\u003e for assistance changing his/her Google ID."},{"lineNumber":163,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"fsgmhoward":4,"-":161}},{"path":"src/web/app/pages-instructor/instructor-audit-logs-page/instructor-audit-logs-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbDateParserFormatter } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ApiConst } from \u0027../../../types/api-const\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  FeedbackSessionLog, FeedbackSessionLogEntry,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  FeedbackSessionLogs, FeedbackSessionLogType,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { SortBy } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"import { DatePickerFormatter } from \u0027../../components/datepicker/datepicker-formatter\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { DateFormat } from \u0027../../components/datepicker/datepicker.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { ColumnData, SortableTableCellData } from \u0027../../components/sortable-table/sortable-table.component\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { TimeFormat } from \u0027../../components/timepicker/timepicker.component\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Model for searching of logs"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"interface SearchLogsFormModel {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  logsDateFrom: DateFormat;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  logsDateTo: DateFormat;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  logsTimeFrom: TimeFormat;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  logsTimeTo: TimeFormat;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  courseId: string;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  studentEmail: string;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Model for displaying of feedback session logs"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"interface FeedbackSessionLogModel {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  feedbackSessionName: string;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  logColumnsData: ColumnData[];"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  logRowsData: SortableTableCellData[][];"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  isTabExpanded: boolean;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":46,"author":{"gitId":"-"},"content":" * Component for instructor logs"},{"lineNumber":47,"author":{"gitId":"-"},"content":" */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-audit-logs-page\u0027,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-audit-logs-page.component.html\u0027,"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"  providers: [{ provide: NgbDateParserFormatter, useClass: DatePickerFormatter }],"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-audit-logs-page.component.scss\u0027],"},{"lineNumber":53,"author":{"gitId":"-"},"content":"})"},{"lineNumber":54,"author":{"gitId":"-"},"content":"export class InstructorAuditLogsPageComponent implements OnInit {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  LOGS_DATE_TIME_FORMAT: string \u003d \u0027ddd, DD MMM YYYY hh:mm:ss A\u0027;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  LOGS_RETENTION_PERIOD: number \u003d ApiConst.LOGS_RETENTION_PERIOD;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  formModel: SearchLogsFormModel \u003d {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    logsDateFrom: { year: 0, month: 0, day: 0 },"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    logsTimeFrom: { hour: 0, minute: 0 },"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    logsDateTo: { year: 0, month: 0, day: 0 },"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    logsTimeTo: { hour: 0, minute: 0 },"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    studentEmail: \u0027\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  dateToday: DateFormat \u003d { year: 0, month: 0, day: 0 };"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  earliestSearchDate: DateFormat \u003d { year: 0, month: 0, day: 0 };"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  courses: Course[] \u003d [];"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  courseToStudents: Record\u003cstring, Student[]\u003e \u003d {};"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  searchResults: FeedbackSessionLogModel[] \u003d [];"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  isLoading: boolean \u003d true;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  isSearching: boolean \u003d false;"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  constructor(private courseService: CourseService,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"              private logsService: LogService,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService) { }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    const today: Date \u003d new Date();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    this.dateToday.year \u003d today.getFullYear();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    this.dateToday.month \u003d today.getMonth() + 1;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    this.dateToday.day \u003d today.getDate();"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    const earliestSearchDate: Date \u003d new Date(Date.now() - this.LOGS_RETENTION_PERIOD * 24 * 60 * 60 * 1000);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    this.earliestSearchDate.year \u003d earliestSearchDate.getFullYear();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    this.earliestSearchDate.month \u003d earliestSearchDate.getMonth() + 1;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    this.earliestSearchDate.day \u003d earliestSearchDate.getDate();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    const fromDate: Date \u003d new Date();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    fromDate.setDate(today.getDate() - 1);"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.formModel.logsDateFrom \u003d {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      year: fromDate.getFullYear(),"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      month: fromDate.getMonth() + 1,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      day: fromDate.getDate(),"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    this.formModel.logsDateTo \u003d { ...this.dateToday };"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    this.formModel.logsTimeFrom \u003d { hour: 23, minute: 59 };"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    this.formModel.logsTimeTo \u003d { hour: 23, minute: 59 };"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    this.loadCourses();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   * Search for logs of student activity"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  search(): void {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    this.isSearching \u003d true;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    this.searchResults \u003d [];"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    const selectedCourse: Course | undefined \u003d"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      this.courses.find((course: Course) \u003d\u003e course.courseId \u003d\u003d\u003d this.formModel.courseId);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    const timeZone: string \u003d selectedCourse ? selectedCourse.timeZone : this.timezoneService.guessTimezone();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    const searchFrom: number \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.formModel.logsDateFrom, this.formModel.logsTimeFrom, timeZone, true);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const searchUntil: number \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":120,"author":{"gitId":"-"},"content":"        this.formModel.logsDateTo, this.formModel.logsTimeTo, timeZone, true);"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    this.logsService.searchFeedbackSessionLog({"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      courseId: this.formModel.courseId,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      searchFrom: searchFrom.toString(),"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      searchUntil: searchUntil.toString(),"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      studentEmail: this.formModel.studentEmail,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":128,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"          this.isSearching \u003d false;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    ).subscribe((logs: FeedbackSessionLogs) \u003d\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      logs.feedbackSessionLogs.map((log: FeedbackSessionLog) \u003d\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          this.searchResults.push(this.toFeedbackSessionLogModel(log)));"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }, (e: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(e.error.message);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   * Load all courses that the instructor has"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  private loadCourses(): void {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    this.courseService"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        .getAllCoursesAsInstructor(\u0027active\u0027)"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          this.isLoading \u003d false;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        .subscribe(({ courses }: { courses: Course[] }) \u003d\u003e courses"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            .filter((course: Course) \u003d\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                course.privileges?.canModifyStudent"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 course.privileges?.canModifySession"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 course.privileges?.canModifySession)"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            .forEach((course: Course) \u003d\u003e {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"              this.courses.push(course);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            (e: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(e.error.message));"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":160,"author":{"gitId":"-"},"content":"   * Load all students for the selected course"},{"lineNumber":161,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  loadStudents(): void {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    const courseId: string \u003d this.formModel.courseId;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    if (!this.courseToStudents[courseId]) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      this.isLoading \u003d true;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({ courseId })"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e { this.isLoading \u003d false; }))"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          .subscribe(({ students }: { students: Student[] }) \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            const emptyStudent: Student \u003d {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"              courseId: \u0027\u0027, email: \u0027\u0027, name: \u0027\u0027, sectionName: \u0027\u0027, teamName: \u0027\u0027,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            students.sort((a: Student, b: Student): number \u003d\u003e a.name.localeCompare(b.name));"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"            // Student with no name is selectable to search for all students since the field is optional"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.courseToStudents[courseId] \u003d [emptyStudent, ...students];"},{"lineNumber":176,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"  private toFeedbackSessionLogModel(log: FeedbackSessionLog): FeedbackSessionLogModel {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      isTabExpanded: log.feedbackSessionLogEntries.length \u003d\u003d\u003d 0,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      feedbackSessionName: log.feedbackSessionData.feedbackSessionName,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      logColumnsData: ["},{"lineNumber":185,"author":{"gitId":"-"},"content":"        { header: \u0027Time\u0027, sortBy: SortBy.LOG_DATE },"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        { header: \u0027Name\u0027, sortBy: SortBy.GIVER_NAME },"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        { header: \u0027Activity\u0027, sortBy: SortBy.LOG_TYPE },"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        { header: \u0027Email\u0027, sortBy: SortBy.RESPONDENT_EMAIL },"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        { header: \u0027Section\u0027, sortBy: SortBy.SECTION_NAME },"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        { header: \u0027Team\u0027, sortBy: SortBy.TEAM_NAME },"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      logRowsData: log.feedbackSessionLogEntries"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        .filter((entry: FeedbackSessionLogEntry) \u003d\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            entry.feedbackSessionLogType.toString() as keyof typeof FeedbackSessionLogType"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            !\u003d\u003d \u0027VIEW_RESULT\u0027)"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        .map((entry: FeedbackSessionLogEntry) \u003d\u003e {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"          return ["},{"lineNumber":198,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"              value: this.timezoneService.formatToString("},{"lineNumber":200,"author":{"gitId":"-"},"content":"                  entry.timestamp, log.feedbackSessionData.timeZone,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                  this.LOGS_DATE_TIME_FORMAT),"},{"lineNumber":202,"author":{"gitId":"-"},"content":"              style: \u0027font-family:monospace;\u0027,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            { value: entry.studentData.name },"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"              value: entry.feedbackSessionLogType.toString() as keyof typeof FeedbackSessionLogType"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                  \u003d\u003d\u003d \u0027ACCESS\u0027 ? \u0027Viewed the submission page\u0027 : \u0027Submitted responses\u0027,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            { value: entry.studentData.email },"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            { value: entry.studentData.sectionName },"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            { value: entry.studentData.teamName },"},{"lineNumber":212,"author":{"gitId":"-"},"content":"          ];"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":214}},{"path":"src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1\u003eHome\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light\" style\u003d\"margin-bottom: 20px;\" *ngIf\u003d\"isNewUser\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    New to TEAMMATES? You may wish to have a look at our \u003ca href\u003d\"/web/instructor/getting-started\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003eGetting Started Guide\u003c/a\u003e."},{"lineNumber":6,"author":{"gitId":"-"},"content":"    A video tour is also available in our \u003ca href\u003d\"/web\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003ehome page\u003c/a\u003e."},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row mb-3\" *tmIsLoading\u003d\"!hasCoursesLoaded\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-4\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003ca tmRouterLink\u003d\"/web/instructor/courses\" class\u003d\"btn btn-success\" [queryParams]\u003d\"{isAddNewCourse: true}\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Course"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/a\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-8\" *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"float-right\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstrong class\u003d\"d-inline\"\u003e Sort By: \u003c/strong\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"btn-group\" data-toggle\u003d\"buttons\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-id\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_ID)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-name\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_NAME)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-date\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_CREATION_DATE)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_CREATION_DATE)\"\u003eCreation Date\u003c/button\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCoursesLoadingFailed\" [message]\u003d\"\u0027Something went wrong\u0027\" (retryEvent)\u003d\"loadCourses()\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"!hasCoursesLoaded || isCopyLoading\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-tab\" class\u003d\"card\" *ngFor\u003d\"let courseTabModel of courseTabModels; let idx \u003d index\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cdiv id\u003d\"course-tab-header\" class\u003d\"card-header bg-primary text-white cursor-pointer\" (click)\u003d\"courseTabModel.isTabExpanded \u003d handleClick($event, courseTabModel); this.loadFeedbackSessions(idx);\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cb id\u003d\"course-details\" class\u003d\"text-break\"\u003e[{{ courseTabModel.course.courseId }}]: {{ courseTabModel.course.courseName }}\u003c/b\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"card-header-btn-toolbar flex-lg-shrink-0\" *ngIf\u003d\"courseTabModel.isAjaxSuccess\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Students \u003c/button\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyStudent\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                  \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Enroll"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/courses/details\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Instructors \u003c/button\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/courses/edit\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Sessions \u003c/button\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/sessions\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Add"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"btn-course\" class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Course \u003c/button\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u003ca id\u003d\"btn-archive-course\" class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                   ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still access it from the \u0027Courses\u0027 tab)\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                   (click)\u003d\"archiveCourse(courseTabModel.course.courseId)\"\u003e Archive"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyCourse\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                  \u003ca id\u003d\"btn-delete-course\" class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"                     ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                     (click)\u003d\"deleteCourse(courseTabModel.course.courseId)\"\u003e Delete"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u003ctm-panel-chevron [isExpanded]\u003d\"courseTabModel.isTabExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body padding-0\" *ngIf\u003d\"courseTabModel.isTabExpanded\" @collapseAnim\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          \u003ctm-loading-retry [shouldShowRetry]\u003d\"courseTabModel.hasLoadingFailed\" [message]\u003d\"\u0027Error loading feedback sessions\u0027\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                            (retryEvent)\u003d\"loadFeedbackSessions(idx)\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003ctm-sessions-table *tmIsLoading\u003d\"!courseTabModel.hasPopulated\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                [sessionsTableRowModels]\u003d\"courseTabModel.sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"courseTabModel.sessionsTableRowModelsSortBy\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                [sessionsTableRowModelsSortOrder]\u003d\"courseTabModel.sessionsTableRowModelsSortOrder\" [courseCandidates]\u003d\"courseCandidates\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.WHITE\" [columnsToShow]\u003d\"[ SessionsTableColumn.START_DATE, SessionsTableColumn.END_DATE ]\" [isSendReminderLoading]\u003d\"isSendReminderLoading\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent(idx, $event)\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler(idx, $event)\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler(idx, $event)\" (copySessionEvent)\u003d\"copySessionEventHandler(idx, $event)\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler(idx, $event)\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                (publishSessionEvent)\u003d\"publishSessionEventHandler(idx, $event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler(idx, $event)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                (downloadSessionResultsEvent)\u003d\"downloadSessionResultEventHandler(idx, $event)\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\""},{"lineNumber":99,"author":{"gitId":"Nicolascwy"},"content":"                (sendRemindersToAllNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event], true)\""},{"lineNumber":100,"author":{"gitId":"Nicolascwy"},"content":"                (sendRemindersToSelectedNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event], false)\"\u003e\u003c/tm-sessions-table\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          \u003c/tm-loading-retry\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"-":104,"Nicolascwy":2}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal-model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { FeedbackQuestion } from \u0027../../../../types/api-output\u0027;"},{"lineNumber":2,"author":{"gitId":"zhaojj2209"},"content":"import { SortBy, SortOrder } from \u0027../../../../types/sort-properties\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"zhaojj2209"},"content":" * The model for a feedback session tab."},{"lineNumber":6,"author":{"gitId":"-"},"content":" */"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"export interface FeedbackSessionTabModel {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  courseId: string;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  feedbackSessionName: string;"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"  createdAtTimestamp: number;"},{"lineNumber":11,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"  questionsTableRowModels: QuestionToCopyCandidate[];"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"  questionsTableRowModelsSortBy: SortBy;"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":"  questionsTableRowModelsSortOrder: SortOrder;"},{"lineNumber":15,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"  hasQuestionsLoaded: boolean;"},{"lineNumber":17,"author":{"gitId":"zhaojj2209"},"content":"  isTabExpanded: boolean;"},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"  hasLoadingFailed: boolean;"},{"lineNumber":19,"author":{"gitId":"zhaojj2209"},"content":"}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"zhaojj2209"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"zhaojj2209"},"content":" * The model for a question to copy."},{"lineNumber":23,"author":{"gitId":"zhaojj2209"},"content":" */"},{"lineNumber":24,"author":{"gitId":"zhaojj2209"},"content":"export interface QuestionToCopyCandidate {"},{"lineNumber":25,"author":{"gitId":"zhaojj2209"},"content":"  question: FeedbackQuestion;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  isSelected: boolean;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":18,"-":9}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-header\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch4 class\u003d\"modal-title\"\u003eCopy Questions\u003c/h4\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"activeModal.dismiss()\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"copy-question-modal\" class\u003d\"modal-body\"\u003e"},{"lineNumber":8,"author":{"gitId":"zhaojj2209"},"content":"  \u003cdiv class\u003d\"col-12 mb-3 text-md-right\"\u003e"},{"lineNumber":9,"author":{"gitId":"zhaojj2209"},"content":"    \u003cstrong class\u003d\"d-inline\"\u003e Sort Sessions By: \u003c/strong\u003e"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"    \u003cdiv class\u003d\"btn-group\" data-toggle\u003d\"buttons\"\u003e"},{"lineNumber":11,"author":{"gitId":"zhaojj2209"},"content":"      \u003cbutton id\u003d\"sort-course-id\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_ID)\" (click)\u003d\"sortFeedbackSessionTabs(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"      \u003cbutton id\u003d\"sort-session-name\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.SESSION_NAME)\" (click)\u003d\"sortFeedbackSessionTabs(SortBy.SESSION_NAME)\"\u003eSession Name\u003c/button\u003e"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"      \u003cbutton id\u003d\"sort-creation-date\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.SESSION_CREATION_DATE)\" (click)\u003d\"sortFeedbackSessionTabs(SortBy.SESSION_CREATION_DATE)\"\u003eCreation Date\u003c/button\u003e"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":"    \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"zhaojj2209"},"content":"  \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"  \u003cdiv class\u003d\"feedback-session-tabs\" *ngFor\u003d\"let feedbackSessionTabModel of feedbackSessionTabModels\"\u003e"},{"lineNumber":17,"author":{"gitId":"zhaojj2209"},"content":"    \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"      \u003cdiv class\u003d\"card-header cursor-pointer bg-primary text-white\" (click)\u003d\"toggleCard(feedbackSessionTabModel)\"\u003e"},{"lineNumber":19,"author":{"gitId":"zhaojj2209"},"content":"        \u003cstrong class\u003d\"text-break\"\u003e[{{feedbackSessionTabModel.courseId}}] Session: {{feedbackSessionTabModel.feedbackSessionName}}\u003c/strong\u003e"},{"lineNumber":20,"author":{"gitId":"zhaojj2209"},"content":"        \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":21,"author":{"gitId":"zhaojj2209"},"content":"          \u003ctm-panel-chevron [isExpanded]\u003d\"feedbackSessionTabModel.isTabExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":22,"author":{"gitId":"zhaojj2209"},"content":"        \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"zhaojj2209"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":25,"author":{"gitId":"zhaojj2209"},"content":"      \u003cdiv *ngIf\u003d\"feedbackSessionTabModel.isTabExpanded\"\u003e"},{"lineNumber":26,"author":{"gitId":"zhaojj2209"},"content":"        \u003ctm-loading-retry [shouldShowRetry]\u003d\"feedbackSessionTabModel.hasLoadingFailed\" [message]\u003d\"\u0027Failed to load questions\u0027\" (retryEvent)\u003d\"loadQuestions(feedbackSessionTabModel)\"\u003e"},{"lineNumber":27,"author":{"gitId":"zhaojj2209"},"content":"          \u003cdiv *tmIsLoading\u003d\"!feedbackSessionTabModel.hasQuestionsLoaded\"\u003e"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"            \u003cdiv *ngIf\u003d\"!feedbackSessionTabModel.hasLoadingFailed\" class\u003d\"card-body\"\u003e"},{"lineNumber":29,"author":{"gitId":"zhaojj2209"},"content":"              \u003cng-container *ngIf\u003d\"feedbackSessionTabModel.hasQuestionsLoaded \u0026\u0026 feedbackSessionTabModel.questionsTableRowModels.length \u003e 0, else noQuestionsTemplate\"\u003e"},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"                \u003ctable id\u003d\"copy-question-table\" class\u003d\"table table-bordered table-responsive-lg\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                  \u003cthead class\u003d\"bg-primary text-white\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003ctr\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                      \u003cth\u003e#\u003c/th\u003e"},{"lineNumber":34,"author":{"gitId":"zhaojj2209"},"content":"                      \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortQuestionsToCopyForFeedbackSession(feedbackSessionTabModel, SortBy.QUESTION_TYPE)\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        Question Type"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                          \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":38,"author":{"gitId":"zhaojj2209"},"content":"                          \u003ci *ngIf\u003d\"isSortQuestionsBy(feedbackSessionTabModel, SortBy.QUESTION_TYPE, SortOrder.DESC)\" class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e"},{"lineNumber":39,"author":{"gitId":"zhaojj2209"},"content":"                          \u003ci *ngIf\u003d\"isSortQuestionsBy(feedbackSessionTabModel, SortBy.QUESTION_TYPE, SortOrder.ASC)\" class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        \u003c/span\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                      \u003c/th\u003e"},{"lineNumber":42,"author":{"gitId":"zhaojj2209"},"content":"                      \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortQuestionsToCopyForFeedbackSession(feedbackSessionTabModel, SortBy.QUESTION_TEXT)\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        Question Text"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                          \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"                          \u003ci *ngIf\u003d\"isSortQuestionsBy(feedbackSessionTabModel, SortBy.QUESTION_TEXT, SortOrder.DESC)\" class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e"},{"lineNumber":47,"author":{"gitId":"zhaojj2209"},"content":"                          \u003ci *ngIf\u003d\"isSortQuestionsBy(feedbackSessionTabModel, SortBy.QUESTION_TEXT, SortOrder.ASC)\" class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        \u003c/span\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                      \u003c/th\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003c/tr\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                  \u003c/thead\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                  \u003ctbody\u003e"},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":"                    \u003ctr *ngFor\u003d\"let questionCandidate of feedbackSessionTabModel.questionsTableRowModels\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                      \u003ctd\u003e\u003cinput type\u003d\"checkbox\" class\u003d\"form-control\" [(ngModel)]\u003d\"questionCandidate.isSelected\"\u003e\u003c/td\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                      \u003ctd\u003e{{ questionCandidate.question.questionType | questionTypeName }}\u003c/td\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                      \u003ctd\u003e{{ questionCandidate.question.questionBrief }}\u003c/td\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    \u003c/tr\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                  \u003c/tbody\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003c/table\u003e"},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"              \u003c/ng-container\u003e"},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":"              \u003cbutton (click)\u003d\"loadQuestions(feedbackSessionTabModel)\" class\u003d\"btn btn-primary float-right mt-2 mb-3\"\u003e"},{"lineNumber":62,"author":{"gitId":"zhaojj2209"},"content":"                \u003ci class\u003d\"fas fa-redo\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":"                \u0026nbsp;Reload"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"              \u003c/button\u003e"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"            \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"          \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":"        \u003c/tm-loading-retry\u003e"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"      \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":70,"author":{"gitId":"zhaojj2209"},"content":"      \u003cng-template #noQuestionsTemplate\u003e"},{"lineNumber":71,"author":{"gitId":"zhaojj2209"},"content":"        \u003ch5\u003eThere are no questions in this feedback session available for copying.\u003c/h5\u003e"},{"lineNumber":72,"author":{"gitId":"zhaojj2209"},"content":"      \u003c/ng-template\u003e"},{"lineNumber":73,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":74,"author":{"gitId":"zhaojj2209"},"content":"    \u003c/div\u003e"},{"lineNumber":75,"author":{"gitId":"zhaojj2209"},"content":"  \u003c/div\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-footer\"\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003cbutton id\u003d\"btn-confirm-copy-question\" type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"activeModal.close(getSelectedQuestions())\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"!hasAnyQuestionsToCopySelected\"\u003eCopy\u003c/button\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"activeModal.dismiss()\"\u003eCancel\u003c/button\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"zhaojj2209":46,"-":35}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".sortable-header {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copy-question-modal {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  table-layout: auto;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"  margin-bottom: 10px;"},{"lineNumber":8,"author":{"gitId":"zhaojj2209"},"content":"  width: 70vw;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":".modal-footer {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  justify-content: right;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  background-color: white;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":".form-control {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  height: calc(.5em + 1.5vh);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  width: calc(.5em + 1.5vw);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":2,"-":17}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"zhaojj2209"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"zhaojj2209"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackQuestionsService } from \u0027../../../../services/feedback-questions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"zhaojj2209"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackParticipantType,"},{"lineNumber":11,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackQuestion,"},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackQuestions,"},{"lineNumber":13,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackQuestionType,"},{"lineNumber":14,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":15,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":16,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackVisibilityType,"},{"lineNumber":17,"author":{"gitId":"zhaojj2209"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":19,"author":{"gitId":"zhaojj2209"},"content":"import { SortBy, SortOrder } from \u0027../../../../types/sort-properties\u0027;"},{"lineNumber":20,"author":{"gitId":"zhaojj2209"},"content":"import { LoadingRetryModule } from \u0027../../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":21,"author":{"gitId":"zhaojj2209"},"content":"import { LoadingSpinnerModule } from \u0027../../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":22,"author":{"gitId":"zhaojj2209"},"content":"import { PanelChevronModule } from \u0027../../../components/panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":24,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackSessionTabModel, QuestionToCopyCandidate } from \u0027./copy-questions-from-other-sessions-modal-model\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { CopyQuestionsFromOtherSessionsModalComponent } from \u0027./copy-questions-from-other-sessions-modal.component\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"describe(\u0027CopyQuestionsFromOtherSessionsModalComponent\u0027, () \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":29,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackQuestion1: FeedbackQuestion \u003d {"},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"    feedbackQuestionId: \u0027feedback-question-1\u0027,"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":"    questionNumber: 1,"},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":33,"author":{"gitId":"zhaojj2209"},"content":"    questionDescription: \u0027description\u0027,"},{"lineNumber":34,"author":{"gitId":"zhaojj2209"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":35,"author":{"gitId":"zhaojj2209"},"content":"    questionDetails: {"},{"lineNumber":36,"author":{"gitId":"zhaojj2209"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":37,"author":{"gitId":"zhaojj2209"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":38,"author":{"gitId":"zhaojj2209"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":39,"author":{"gitId":"zhaojj2209"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":40,"author":{"gitId":"zhaojj2209"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":41,"author":{"gitId":"zhaojj2209"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":42,"author":{"gitId":"zhaojj2209"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":43,"author":{"gitId":"zhaojj2209"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":44,"author":{"gitId":"zhaojj2209"},"content":"    showGiverNameTo: [],"},{"lineNumber":45,"author":{"gitId":"zhaojj2209"},"content":"    showRecipientNameTo: [],"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":47,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":48,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackQuestion2: FeedbackQuestion \u003d {"},{"lineNumber":49,"author":{"gitId":"zhaojj2209"},"content":"    feedbackQuestionId: \u0027feedback-question-2\u0027,"},{"lineNumber":50,"author":{"gitId":"zhaojj2209"},"content":"    questionNumber: 2,"},{"lineNumber":51,"author":{"gitId":"zhaojj2209"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":52,"author":{"gitId":"zhaojj2209"},"content":"    questionDescription: \u0027description\u0027,"},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":54,"author":{"gitId":"zhaojj2209"},"content":"    questionDetails: {"},{"lineNumber":55,"author":{"gitId":"zhaojj2209"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":56,"author":{"gitId":"zhaojj2209"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":57,"author":{"gitId":"zhaojj2209"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":58,"author":{"gitId":"zhaojj2209"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":59,"author":{"gitId":"zhaojj2209"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":62,"author":{"gitId":"zhaojj2209"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"    showGiverNameTo: [],"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"    showRecipientNameTo: [],"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackQuestion3: FeedbackQuestion \u003d {"},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":"    feedbackQuestionId: \u0027feedback-question-3\u0027,"},{"lineNumber":70,"author":{"gitId":"zhaojj2209"},"content":"    questionNumber: 3,"},{"lineNumber":71,"author":{"gitId":"zhaojj2209"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":72,"author":{"gitId":"zhaojj2209"},"content":"    questionDescription: \u0027description\u0027,"},{"lineNumber":73,"author":{"gitId":"zhaojj2209"},"content":"    questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":74,"author":{"gitId":"zhaojj2209"},"content":"    questionDetails: {"},{"lineNumber":75,"author":{"gitId":"zhaojj2209"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":76,"author":{"gitId":"zhaojj2209"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":77,"author":{"gitId":"zhaojj2209"},"content":"      minOptionsToBeRanked: 5,"},{"lineNumber":78,"author":{"gitId":"zhaojj2209"},"content":"      maxOptionsToBeRanked: 5,"},{"lineNumber":79,"author":{"gitId":"zhaojj2209"},"content":"      areDuplicatesAllowed: true,"},{"lineNumber":80,"author":{"gitId":"zhaojj2209"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":81,"author":{"gitId":"zhaojj2209"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":82,"author":{"gitId":"zhaojj2209"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":83,"author":{"gitId":"zhaojj2209"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":84,"author":{"gitId":"zhaojj2209"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":85,"author":{"gitId":"zhaojj2209"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":86,"author":{"gitId":"zhaojj2209"},"content":"    showGiverNameTo: [],"},{"lineNumber":87,"author":{"gitId":"zhaojj2209"},"content":"    showRecipientNameTo: [],"},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"  const testQuestionToCopyCandidate1: QuestionToCopyCandidate \u003d {"},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":"    question: testFeedbackQuestion1,"},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"    isSelected: false,"},{"lineNumber":93,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":94,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":95,"author":{"gitId":"zhaojj2209"},"content":"  const testQuestionToCopyCandidate2: QuestionToCopyCandidate \u003d {"},{"lineNumber":96,"author":{"gitId":"zhaojj2209"},"content":"    question: testFeedbackQuestion2,"},{"lineNumber":97,"author":{"gitId":"zhaojj2209"},"content":"    isSelected: false,"},{"lineNumber":98,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":99,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":100,"author":{"gitId":"zhaojj2209"},"content":"  const testQuestionToCopyCandidate3: QuestionToCopyCandidate \u003d {"},{"lineNumber":101,"author":{"gitId":"zhaojj2209"},"content":"    question: testFeedbackQuestion3,"},{"lineNumber":102,"author":{"gitId":"zhaojj2209"},"content":"    isSelected: false,"},{"lineNumber":103,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":104,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":105,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackSessionTabModel1: FeedbackSessionTabModel \u003d {"},{"lineNumber":106,"author":{"gitId":"zhaojj2209"},"content":"    courseId: \u0027testId1\u0027,"},{"lineNumber":107,"author":{"gitId":"zhaojj2209"},"content":"    feedbackSessionName: \u0027Test Session 1\u0027,"},{"lineNumber":108,"author":{"gitId":"zhaojj2209"},"content":"    createdAtTimestamp: 1644458400, // Thursday, 10 February 2022 10:00:00 GMT+08:00"},{"lineNumber":109,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModels: [],"},{"lineNumber":110,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":111,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":112,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":113,"author":{"gitId":"zhaojj2209"},"content":"    hasQuestionsLoaded: false,"},{"lineNumber":114,"author":{"gitId":"zhaojj2209"},"content":"    isTabExpanded: false,"},{"lineNumber":115,"author":{"gitId":"zhaojj2209"},"content":"    hasLoadingFailed: false,"},{"lineNumber":116,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":117,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":118,"author":{"gitId":"zhaojj2209"},"content":"  const testFeedbackSessionTabModel2: FeedbackSessionTabModel \u003d {"},{"lineNumber":119,"author":{"gitId":"zhaojj2209"},"content":"    courseId: \u0027testId2\u0027,"},{"lineNumber":120,"author":{"gitId":"zhaojj2209"},"content":"    feedbackSessionName: \u0027Test Session 2\u0027,"},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"    createdAtTimestamp: 1645063200, // Thursday, 17 February 2022 10:00:00 GMT+08:00"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModels: [],"},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":124,"author":{"gitId":"zhaojj2209"},"content":"    questionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"    hasQuestionsLoaded: false,"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":"    isTabExpanded: false,"},{"lineNumber":128,"author":{"gitId":"zhaojj2209"},"content":"    hasLoadingFailed: false,"},{"lineNumber":129,"author":{"gitId":"zhaojj2209"},"content":"  };"},{"lineNumber":130,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  let component: CopyQuestionsFromOtherSessionsModalComponent;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cCopyQuestionsFromOtherSessionsModalComponent\u003e;"},{"lineNumber":133,"author":{"gitId":"zhaojj2209"},"content":"  let feedbackQuestionsService: FeedbackQuestionsService;"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      declarations: [CopyQuestionsFromOtherSessionsModalComponent],"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommonModule,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":142,"author":{"gitId":"zhaojj2209"},"content":"        PanelChevronModule,"},{"lineNumber":143,"author":{"gitId":"zhaojj2209"},"content":"        LoadingSpinnerModule,"},{"lineNumber":144,"author":{"gitId":"zhaojj2209"},"content":"        LoadingRetryModule,"},{"lineNumber":145,"author":{"gitId":"zhaojj2209"},"content":"        HttpClientTestingModule,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":148,"author":{"gitId":"-"},"content":"        NgbActiveModal,"},{"lineNumber":149,"author":{"gitId":"zhaojj2209"},"content":"        FeedbackQuestionsService,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(CopyQuestionsFromOtherSessionsModalComponent);"},{"lineNumber":157,"author":{"gitId":"zhaojj2209"},"content":"    feedbackQuestionsService \u003d TestBed.inject(FeedbackQuestionsService);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":165,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":166,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":167,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":168,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":169,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":170,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap with feedback sessions\u0027, () \u003d\u003e {"},{"lineNumber":171,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1, testFeedbackSessionTabModel2];"},{"lineNumber":172,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":173,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":174,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":175,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":176,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap when feedback questions are loading\u0027, () \u003d\u003e {"},{"lineNumber":177,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.isTabExpanded \u003d true;"},{"lineNumber":178,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.hasQuestionsLoaded \u003d false;"},{"lineNumber":179,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1];"},{"lineNumber":180,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":181,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":182,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":183,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":184,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap when feedback questions are loaded\u0027, () \u003d\u003e {"},{"lineNumber":185,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.isTabExpanded \u003d true;"},{"lineNumber":186,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.hasQuestionsLoaded \u003d true;"},{"lineNumber":187,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.questionsTableRowModels \u003d [testQuestionToCopyCandidate1, testQuestionToCopyCandidate2];"},{"lineNumber":188,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1];"},{"lineNumber":189,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":190,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":191,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":192,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":193,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should snap when feedback questions failed to load\u0027, () \u003d\u003e {"},{"lineNumber":194,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.isTabExpanded \u003d true;"},{"lineNumber":195,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.hasLoadingFailed \u003d true;"},{"lineNumber":196,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1];"},{"lineNumber":197,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":198,"author":{"gitId":"zhaojj2209"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":199,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":200,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":201,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should load feedback questions\u0027, () \u003d\u003e {"},{"lineNumber":202,"author":{"gitId":"zhaojj2209"},"content":"    const feedbackQuestions: FeedbackQuestions \u003d {"},{"lineNumber":203,"author":{"gitId":"zhaojj2209"},"content":"      questions: [testFeedbackQuestion1, testFeedbackQuestion2],"},{"lineNumber":204,"author":{"gitId":"zhaojj2209"},"content":"    };"},{"lineNumber":205,"author":{"gitId":"zhaojj2209"},"content":"    jest.spyOn(feedbackQuestionsService, \u0027getFeedbackQuestions\u0027).mockReturnValue(of(feedbackQuestions));"},{"lineNumber":206,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1];"},{"lineNumber":207,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":208,"author":{"gitId":"zhaojj2209"},"content":"    component.loadQuestions(testFeedbackSessionTabModel1);"},{"lineNumber":209,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":210,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].hasQuestionsLoaded).toBeTruthy();"},{"lineNumber":211,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].hasLoadingFailed).toBeFalsy();"},{"lineNumber":212,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].questionsTableRowModels.length).toBe(2);"},{"lineNumber":213,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].questionsTableRowModels[0].question.feedbackQuestionId)"},{"lineNumber":214,"author":{"gitId":"zhaojj2209"},"content":"      .toBe(testFeedbackQuestion1.feedbackQuestionId);"},{"lineNumber":215,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.feedbackSessionTabModels[0].questionsTableRowModels[1].question.feedbackQuestionId)"},{"lineNumber":216,"author":{"gitId":"zhaojj2209"},"content":"      .toBe(testFeedbackQuestion2.feedbackQuestionId);"},{"lineNumber":217,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":218,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":219,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should not allow copying when no questions are selected\u0027, () \u003d\u003e {"},{"lineNumber":220,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.questionsTableRowModels \u003d [testQuestionToCopyCandidate1, testQuestionToCopyCandidate2];"},{"lineNumber":221,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel2.questionsTableRowModels \u003d [testQuestionToCopyCandidate3];"},{"lineNumber":222,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1, testFeedbackSessionTabModel2];"},{"lineNumber":223,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":224,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":225,"author":{"gitId":"zhaojj2209"},"content":"    const questions: FeedbackQuestion[] \u003d component.getSelectedQuestions();"},{"lineNumber":226,"author":{"gitId":"zhaojj2209"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-confirm-copy-question\u0027);"},{"lineNumber":227,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":228,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.hasAnyQuestionsToCopySelected).toBeFalsy();"},{"lineNumber":229,"author":{"gitId":"zhaojj2209"},"content":"    expect(questions.length).toBe(0);"},{"lineNumber":230,"author":{"gitId":"zhaojj2209"},"content":"    expect(button.disabled).toBeTruthy();"},{"lineNumber":231,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":232,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":233,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should copy selected questions\u0027, () \u003d\u003e {"},{"lineNumber":234,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionToCopyCandidate1.isSelected \u003d true;"},{"lineNumber":235,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionToCopyCandidate2.isSelected \u003d true;"},{"lineNumber":236,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionToCopyCandidate3.isSelected \u003d true;"},{"lineNumber":237,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel1.questionsTableRowModels \u003d [testQuestionToCopyCandidate1, testQuestionToCopyCandidate2];"},{"lineNumber":238,"author":{"gitId":"zhaojj2209"},"content":"    testFeedbackSessionTabModel2.questionsTableRowModels \u003d [testQuestionToCopyCandidate3];"},{"lineNumber":239,"author":{"gitId":"zhaojj2209"},"content":"    component.feedbackSessionTabModels \u003d [testFeedbackSessionTabModel1, testFeedbackSessionTabModel2];"},{"lineNumber":240,"author":{"gitId":"zhaojj2209"},"content":"    fixture.detectChanges();"},{"lineNumber":241,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":242,"author":{"gitId":"zhaojj2209"},"content":"    jest.spyOn(component.activeModal, \u0027close\u0027).mockImplementation((questions: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":243,"author":{"gitId":"zhaojj2209"},"content":"      expect(questions.length).toBe(3);"},{"lineNumber":244,"author":{"gitId":"zhaojj2209"},"content":"      expect(questions[0].feedbackQuestionId).toBe(testFeedbackQuestion1.feedbackQuestionId);"},{"lineNumber":245,"author":{"gitId":"zhaojj2209"},"content":"      expect(questions[1].feedbackQuestionId).toBe(testFeedbackQuestion2.feedbackQuestionId);"},{"lineNumber":246,"author":{"gitId":"zhaojj2209"},"content":"      expect(questions[2].feedbackQuestionId).toBe(testFeedbackQuestion3.feedbackQuestionId);"},{"lineNumber":247,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":248,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":249,"author":{"gitId":"zhaojj2209"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-confirm-copy-question\u0027);"},{"lineNumber":250,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":251,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.hasAnyQuestionsToCopySelected).toBeTruthy();"},{"lineNumber":252,"author":{"gitId":"zhaojj2209"},"content":"    expect(button.disabled).toBeFalsy();"},{"lineNumber":253,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":254,"author":{"gitId":"zhaojj2209"},"content":"    button.click();"},{"lineNumber":255,"author":{"gitId":"zhaojj2209"},"content":"    expect(component.activeModal.close).toHaveBeenCalledTimes(1);"},{"lineNumber":256,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":257,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":221,"-":36}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackQuestionsService } from \u0027../../../../services/feedback-questions.service\u0027;"},{"lineNumber":4,"author":{"gitId":"zhaojj2209"},"content":"import { StatusMessageService } from \u0027../../../../services/status-message.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../../services/table-comparator.service\u0027;"},{"lineNumber":6,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackQuestion, FeedbackQuestions } from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"import { Intent } from \u0027../../../../types/api-request\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../../types/sort-properties\u0027;"},{"lineNumber":9,"author":{"gitId":"zhaojj2209"},"content":"import { ErrorMessageOutput } from \u0027../../../error-message-output\u0027;"},{"lineNumber":10,"author":{"gitId":"zhaojj2209"},"content":"import { FeedbackSessionTabModel, QuestionToCopyCandidate } from \u0027./copy-questions-from-other-sessions-modal-model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Modal to select questions to copy from other sessions."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  selector: \u0027tm-copy-questions-from-other-sessions-modal\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./copy-questions-from-other-sessions-modal.component.html\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./copy-questions-from-other-sessions-modal.component.scss\u0027],"},{"lineNumber":19,"author":{"gitId":"-"},"content":"})"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export class CopyQuestionsFromOtherSessionsModalComponent {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  SortOrder: typeof SortOrder \u003d SortOrder;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  // data"},{"lineNumber":27,"author":{"gitId":"zhaojj2209"},"content":"  feedbackSessionTabModels: FeedbackSessionTabModel[] \u003d [];"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":"  feedbackSessionTabModelsSortBy: SortBy \u003d SortBy.COURSE_ID;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"  constructor(public activeModal: NgbActiveModal,"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":"              public statusMessageService: StatusMessageService,"},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":"              public feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":33,"author":{"gitId":"zhaojj2209"},"content":"              private tableComparatorService: TableComparatorService) { }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":36,"author":{"gitId":"zhaojj2209"},"content":"   * Toggles specific card and loads questions if needed."},{"lineNumber":37,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":38,"author":{"gitId":"zhaojj2209"},"content":"  toggleCard(feedbackSessionTabModel: FeedbackSessionTabModel): void {"},{"lineNumber":39,"author":{"gitId":"zhaojj2209"},"content":"    feedbackSessionTabModel.isTabExpanded \u003d !feedbackSessionTabModel.isTabExpanded;"},{"lineNumber":40,"author":{"gitId":"zhaojj2209"},"content":"    if (!feedbackSessionTabModel.hasQuestionsLoaded) {"},{"lineNumber":41,"author":{"gitId":"zhaojj2209"},"content":"      this.loadQuestions(feedbackSessionTabModel);"},{"lineNumber":42,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":45,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"   * Loads the questions in the feedback session."},{"lineNumber":47,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":48,"author":{"gitId":"zhaojj2209"},"content":"  loadQuestions(model: FeedbackSessionTabModel): void {"},{"lineNumber":49,"author":{"gitId":"zhaojj2209"},"content":"    model.hasQuestionsLoaded \u003d false;"},{"lineNumber":50,"author":{"gitId":"zhaojj2209"},"content":"    model.hasLoadingFailed \u003d false;"},{"lineNumber":51,"author":{"gitId":"zhaojj2209"},"content":"    model.questionsTableRowModels \u003d [];"},{"lineNumber":52,"author":{"gitId":"zhaojj2209"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":"      courseId: model.courseId,"},{"lineNumber":54,"author":{"gitId":"zhaojj2209"},"content":"      feedbackSessionName: model.feedbackSessionName,"},{"lineNumber":55,"author":{"gitId":"zhaojj2209"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":56,"author":{"gitId":"zhaojj2209"},"content":"    })"},{"lineNumber":57,"author":{"gitId":"zhaojj2209"},"content":"    .subscribe((response: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"zhaojj2209"},"content":"      response.questions.forEach((q: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"zhaojj2209"},"content":"        const questionToCopy: QuestionToCopyCandidate \u003d {"},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"          question: q,"},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":"          isSelected: false,"},{"lineNumber":62,"author":{"gitId":"zhaojj2209"},"content":"        };"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":"        model.questionsTableRowModels.push(questionToCopy);"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"      });"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"      model.hasQuestionsLoaded \u003d true;"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":"      model.hasLoadingFailed \u003d true;"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"   * Gets the selected questions to copy."},{"lineNumber":74,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  getSelectedQuestions(): FeedbackQuestion[] {"},{"lineNumber":76,"author":{"gitId":"zhaojj2209"},"content":"    const selectedQuestions: FeedbackQuestion[] \u003d [];"},{"lineNumber":77,"author":{"gitId":"zhaojj2209"},"content":"    this.feedbackSessionTabModels.forEach((model: FeedbackSessionTabModel) \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"zhaojj2209"},"content":"      if (model.questionsTableRowModels.length \u003e 0) {"},{"lineNumber":79,"author":{"gitId":"zhaojj2209"},"content":"        selectedQuestions.push("},{"lineNumber":80,"author":{"gitId":"zhaojj2209"},"content":"          ...model.questionsTableRowModels"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .filter((c: QuestionToCopyCandidate) \u003d\u003e c.isSelected)"},{"lineNumber":82,"author":{"gitId":"zhaojj2209"},"content":"            .map((c: QuestionToCopyCandidate) \u003d\u003e c.question),"},{"lineNumber":83,"author":{"gitId":"zhaojj2209"},"content":"        );"},{"lineNumber":84,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":85,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":86,"author":{"gitId":"zhaojj2209"},"content":"    return selectedQuestions;"},{"lineNumber":87,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":89,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"   * Checks the option selected to sort feedback sessions."},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"  isSelectedForSorting(by: SortBy): boolean {"},{"lineNumber":93,"author":{"gitId":"zhaojj2209"},"content":"    return this.feedbackSessionTabModelsSortBy \u003d\u003d\u003d by;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":97,"author":{"gitId":"zhaojj2209"},"content":"   * Check whether the feedback session questions are sorted by the given type and in the given order."},{"lineNumber":98,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":99,"author":{"gitId":"zhaojj2209"},"content":"  isSortQuestionsBy(model: FeedbackSessionTabModel, by: SortBy, order: SortOrder): boolean {"},{"lineNumber":100,"author":{"gitId":"zhaojj2209"},"content":"    return model.questionsTableRowModelsSortBy \u003d\u003d\u003d by \u0026\u0026 model.questionsTableRowModelsSortOrder \u003d\u003d\u003d order;"},{"lineNumber":101,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":102,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":103,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":104,"author":{"gitId":"zhaojj2209"},"content":"   * Sorts the list of feedback sessions."},{"lineNumber":105,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":106,"author":{"gitId":"zhaojj2209"},"content":"  sortFeedbackSessionTabs(by: SortBy): void {"},{"lineNumber":107,"author":{"gitId":"zhaojj2209"},"content":"    this.feedbackSessionTabModelsSortBy \u003d by;"},{"lineNumber":108,"author":{"gitId":"zhaojj2209"},"content":"    this.feedbackSessionTabModels.sort(this.sortFeedbackSessionsBy(by));"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":112,"author":{"gitId":"zhaojj2209"},"content":"   * Sorts the list of questions for a feedback session."},{"lineNumber":113,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":114,"author":{"gitId":"zhaojj2209"},"content":"  sortQuestionsToCopyForFeedbackSession(model: FeedbackSessionTabModel, by: SortBy): void {"},{"lineNumber":115,"author":{"gitId":"zhaojj2209"},"content":"    model.questionsTableRowModelsSortBy \u003d by;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    // reverse the sort order"},{"lineNumber":117,"author":{"gitId":"zhaojj2209"},"content":"    model.questionsTableRowModelsSortOrder \u003d"},{"lineNumber":118,"author":{"gitId":"zhaojj2209"},"content":"      model.questionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"},{"lineNumber":119,"author":{"gitId":"zhaojj2209"},"content":"    model.questionsTableRowModels.sort(this.sortQuestionsBy(by, model.questionsTableRowModelsSortOrder));"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"   * Generates a sorting function for sessions."},{"lineNumber":124,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":"  protected sortFeedbackSessionsBy(by: SortBy):"},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"      ((a: FeedbackSessionTabModel, b: FeedbackSessionTabModel) \u003d\u003e number) {"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":"    return ((a: FeedbackSessionTabModel, b: FeedbackSessionTabModel): number \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      let strA: string;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      let strB: string;"},{"lineNumber":130,"author":{"gitId":"zhaojj2209"},"content":"      let order: SortOrder;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      switch (by) {"},{"lineNumber":132,"author":{"gitId":"zhaojj2209"},"content":"        case SortBy.COURSE_ID:"},{"lineNumber":133,"author":{"gitId":"zhaojj2209"},"content":"          strA \u003d a.courseId.toString();"},{"lineNumber":134,"author":{"gitId":"zhaojj2209"},"content":"          strB \u003d b.courseId.toString();"},{"lineNumber":135,"author":{"gitId":"zhaojj2209"},"content":"          order \u003d SortOrder.ASC;"},{"lineNumber":136,"author":{"gitId":"zhaojj2209"},"content":"          break;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        case SortBy.SESSION_NAME:"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          strA \u003d a.feedbackSessionName;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          strB \u003d b.feedbackSessionName;"},{"lineNumber":140,"author":{"gitId":"zhaojj2209"},"content":"          order \u003d SortOrder.ASC;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":142,"author":{"gitId":"zhaojj2209"},"content":"        case SortBy.SESSION_CREATION_DATE:"},{"lineNumber":143,"author":{"gitId":"zhaojj2209"},"content":"          strA \u003d a.createdAtTimestamp.toString();"},{"lineNumber":144,"author":{"gitId":"zhaojj2209"},"content":"          strB \u003d b.createdAtTimestamp.toString();"},{"lineNumber":145,"author":{"gitId":"zhaojj2209"},"content":"          order \u003d SortOrder.DESC;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":147,"author":{"gitId":"zhaojj2209"},"content":"        default:"},{"lineNumber":148,"author":{"gitId":"zhaojj2209"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":149,"author":{"gitId":"zhaojj2209"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":150,"author":{"gitId":"zhaojj2209"},"content":"          order \u003d SortOrder.ASC;"},{"lineNumber":151,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":152,"author":{"gitId":"zhaojj2209"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":153,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":154,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":155,"author":{"gitId":"zhaojj2209"},"content":"  /**"},{"lineNumber":156,"author":{"gitId":"zhaojj2209"},"content":"   * Generates a sorting function for questions."},{"lineNumber":157,"author":{"gitId":"zhaojj2209"},"content":"   */"},{"lineNumber":158,"author":{"gitId":"zhaojj2209"},"content":"  protected sortQuestionsBy(by: SortBy, order: SortOrder):"},{"lineNumber":159,"author":{"gitId":"zhaojj2209"},"content":"      ((a: QuestionToCopyCandidate, b: QuestionToCopyCandidate) \u003d\u003e number) {"},{"lineNumber":160,"author":{"gitId":"zhaojj2209"},"content":"    return ((a: QuestionToCopyCandidate, b: QuestionToCopyCandidate): number \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"zhaojj2209"},"content":"      let strA: string;"},{"lineNumber":162,"author":{"gitId":"zhaojj2209"},"content":"      let strB: string;"},{"lineNumber":163,"author":{"gitId":"zhaojj2209"},"content":"      switch (by) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        case SortBy.QUESTION_TYPE:"},{"lineNumber":165,"author":{"gitId":"zhaojj2209"},"content":"          strA \u003d a.question.questionType;"},{"lineNumber":166,"author":{"gitId":"zhaojj2209"},"content":"          strB \u003d b.question.questionType;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        case SortBy.QUESTION_TEXT:"},{"lineNumber":169,"author":{"gitId":"-"},"content":"          strA \u003d a.question.questionBrief;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"          strB \u003d b.question.questionBrief;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":173,"author":{"gitId":"-"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":181,"author":{"gitId":"zhaojj2209"},"content":"   * Checks whether there are any selected questions."},{"lineNumber":182,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  get hasAnyQuestionsToCopySelected(): boolean {"},{"lineNumber":184,"author":{"gitId":"zhaojj2209"},"content":"    return this.feedbackSessionTabModels.reduce((a: boolean, b: FeedbackSessionTabModel) \u003d\u003e {"},{"lineNumber":185,"author":{"gitId":"zhaojj2209"},"content":"      return a || !!b.questionsTableRowModels.find((c: QuestionToCopyCandidate) \u003d\u003e c.isSelected);"},{"lineNumber":186,"author":{"gitId":"zhaojj2209"},"content":"    }, false);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":119,"-":70}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { ChangeDetectorRef, Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"zhaojj2209"},"content":"import { concatMap, finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  CommonVisibilitySetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackQuestionsService,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  NewQuestionModel,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackSessionActionsService } from \u0027../../../services/feedback-session-actions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails, FeedbackVisibilityType,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  HasResponses,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  Instructors,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":46,"author":{"gitId":"zhaojj2209"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import { CopySessionModalResult } from \u0027../../components/copy-session-modal/copy-session-modal-model\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import { CopySessionModalComponent } from \u0027../../components/copy-session-modal/copy-session-modal.component\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import { DateFormat } from \u0027../../components/datepicker/datepicker.component\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  QuestionEditFormMode,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  QuestionEditFormModel,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-edit-form/question-edit-form-model\u0027;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  SessionEditFormMode,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  SessionEditFormModel,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import { TimeFormat } from \u0027../../components/timepicker/timepicker.component\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import { InstructorSessionBasePageComponent } from \u0027../instructor-session-base-page.component\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"  FeedbackSessionTabModel,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal-model\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  CopyQuestionsFromOtherSessionsModalComponent,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component\u0027;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"import { TemplateQuestionModalComponent } from \u0027./template-question-modal/template-question-modal.component\u0027;"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":72,"author":{"gitId":"-"},"content":" * Instructor feedback session edit page."},{"lineNumber":73,"author":{"gitId":"-"},"content":" */"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-session-edit-page\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-session-edit-page.component.html\u0027,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-session-edit-page.component.scss\u0027],"},{"lineNumber":78,"author":{"gitId":"-"},"content":"})"},{"lineNumber":79,"author":{"gitId":"-"},"content":"export class InstructorSessionEditPageComponent extends InstructorSessionBasePageComponent implements OnInit {"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  // url param"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  isEditingMode: boolean \u003d false;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  courseName: string \u003d \u0027\u0027;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  // models"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  sessionEditFormModel: SessionEditFormModel \u003d {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    submissionStartTime: { hour: 23, minute: 59 },"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    submissionStartDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    submissionEndTime: { hour: 23, minute: 59 },"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    submissionEndDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    customSessionVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    customResponseVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    templateSessionName: \u0027\u0027,"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    isEditable: false,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    isCopying: false,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    hasVisibleSettingsPanelExpanded: false,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    hasEmailSettingsPanelExpanded: false,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  // to get the original session model on discard changes"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  feedbackSessionModelBeforeEditing: SessionEditFormModel \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"  // to get the original question model"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  feedbackQuestionModels: Map\u003cstring, FeedbackQuestion\u003e \u003d new Map();"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"  questionEditFormModels: QuestionEditFormModel[] \u003d [];"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  newQuestionEditFormModel: QuestionEditFormModel \u003d {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    isQuestionHasResponses: false,"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 1,"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    isDuplicating: false,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    isEditable: true,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    isCollapsed: false,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    isVisibilityChanged: false,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    isFeedbackPathChanged: false,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    isQuestionDetailsChanged: false,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"  isAddingFromTemplate: boolean \u003d false;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  isAddingQuestionPanelExpanded: boolean \u003d false;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  isLoadingFeedbackSession: boolean \u003d false;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackSessionFailed: boolean \u003d false;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  isLoadingFeedbackQuestions: boolean \u003d false;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackQuestionsFailed: boolean \u003d false;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  isCopyingQuestion: boolean \u003d false;"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"  // all students of the course"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  studentsOfCourse: Student[] \u003d [];"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  emailOfStudentToPreview: string \u003d \u0027\u0027;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  // instructors which can be previewed as"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  instructorsCanBePreviewedAs: Instructor[] \u003d [];"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  emailOfInstructorToPreview: string \u003d \u0027\u0027;"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"  get isAllCollapsed(): boolean {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    return this.questionEditFormModels.some((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      return model.isCollapsed;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"  constructor(router: Router,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"              instructorService: InstructorService,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"              statusMessageService: StatusMessageService,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              navigationService: NavigationService,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"              feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"              feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"              tableComparatorService: TableComparatorService,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"              ngbModal: NgbModal,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"              simpleModalService: SimpleModalService,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"              progressBarService: ProgressBarService,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"              feedbackSessionActionsService: FeedbackSessionActionsService,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"              private changeDetectorRef: ChangeDetectorRef) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        feedbackSessionsService, feedbackQuestionsService, tableComparatorService,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ngbModal, simpleModalService, progressBarService, feedbackSessionActionsService);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      this.isEditingMode \u003d queryParams.editingMode \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"      this.loadFeedbackSession();"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      this.loadFeedbackQuestions();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      this.getAllStudentsOfCourse();"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      this.getAllInstructorsCanBePreviewedAs();"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   * Loads a feedback session."},{"lineNumber":230,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackSessionFailed \u003d false;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackSession \u003d true;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    // load the course of the feedback session first"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    this.courseService.getCourseAsInstructor(this.courseId).subscribe((course: Course) \u003d\u003e {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      this.courseName \u003d course.courseName;"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        courseId: this.courseId,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        intent: Intent.FULL_DETAIL,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        this.isLoadingFeedbackSession \u003d false;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      }))"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession, this.isEditingMode);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        this.feedbackSessionModelBeforeEditing \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      this.isLoadingFeedbackSession \u003d false;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":260,"author":{"gitId":"-"},"content":"   * Copies the feedback session."},{"lineNumber":261,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  copyCurrentSession(): Promise\u003cvoid\u003e {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    // load course candidates first"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    return new Promise\u003cvoid\u003e((_resolve: any, reject: any) \u003d\u003e {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"      this.courseService.getInstructorCoursesThatAreActive()"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      .pipe(finalize(() \u003d\u003e {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      }))"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      .subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        this.failedToCopySessions \u003d {};"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(CopySessionModalComponent);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.newFeedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseCandidates \u003d courses.courses;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.sessionToCopyCourseId \u003d this.courseId;"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"          const requestList: Observable\u003cFeedbackSession\u003e[] \u003d this.createSessionCopyRequestsFromModal("},{"lineNumber":278,"author":{"gitId":"-"},"content":"              result, this.courseId, this.feedbackSessionName);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.isCopying \u003d true;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"          if (requestList.length \u003d\u003d\u003d 1) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            this.copySingleSession(requestList[0].pipe(finalize(() \u003d\u003e {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            })));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":285,"author":{"gitId":"-"},"content":"          if (requestList.length \u003e 1) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            forkJoin(requestList)"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            .pipe(finalize(() \u003d\u003e {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            }))"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"              this.showCopyStatusMessage();"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":293,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"          reject(resp);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        .catch(() \u003d\u003e {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":306,"author":{"gitId":"-"},"content":"   * Gets the {@code sessionEditFormModel} with {@link FeedbackSession} entity."},{"lineNumber":307,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  getSessionEditFormModel(feedbackSession: FeedbackSession, isEditable: boolean \u003d false): SessionEditFormModel {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    const submissionStart: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        this.getDateTimeAtTimezone(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone, true);"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"    const submissionEnd: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        this.getDateTimeAtTimezone(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone, true);"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    const model: SessionEditFormModel \u003d {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      isEditable,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      courseId: feedbackSession.courseId,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      timeZone: feedbackSession.timeZone,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      courseName: this.courseName,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      feedbackSessionName: feedbackSession.feedbackSessionName,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      instructions: feedbackSession.instructions,"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"      submissionStartTime: submissionStart.time,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      submissionStartDate: submissionStart.date,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      submissionEndTime: submissionEnd.time,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      submissionEndDate: submissionEnd.date,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      gracePeriod: feedbackSession.gracePeriod,"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: feedbackSession.sessionVisibleSetting,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      customSessionVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"      responseVisibleSetting: feedbackSession.responseVisibleSetting,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      customResponseVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"      submissionStatus: feedbackSession.submissionStatus,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      publishStatus: feedbackSession.publishStatus,"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"      templateSessionName: \u0027\u0027,"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: feedbackSession.isClosingEmailEnabled,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      isCopying: false,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      hasVisibleSettingsPanelExpanded: feedbackSession.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.AT_OPEN"},{"lineNumber":349,"author":{"gitId":"-"},"content":"          || feedbackSession.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.LATER,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      hasEmailSettingsPanelExpanded: !feedbackSession.isClosingEmailEnabled || !feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"    if (feedbackSession.customSessionVisibleTimestamp) {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      const customSessionVisible: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":355,"author":{"gitId":"-"},"content":"          this.getDateTimeAtTimezone(feedbackSession.customSessionVisibleTimestamp, feedbackSession.timeZone, true);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      model.customSessionVisibleTime \u003d customSessionVisible.time;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      model.customSessionVisibleDate \u003d customSessionVisible.date;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"    if (feedbackSession.customResponseVisibleTimestamp) {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      const customResponseVisible: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":362,"author":{"gitId":"-"},"content":"          this.getDateTimeAtTimezone(feedbackSession.customResponseVisibleTimestamp, feedbackSession.timeZone, true);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"      model.customResponseVisibleTime \u003d customResponseVisible.time;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      model.customResponseVisibleDate \u003d customResponseVisible.date;"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"    return model;"},{"lineNumber":368,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":371,"author":{"gitId":"-"},"content":"   * Get the local date and time of timezone from timestamp."},{"lineNumber":372,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":373,"author":{"gitId":"-"},"content":"  private getDateTimeAtTimezone(timestamp: number, timeZone: string, resolveMidnightTo2359: boolean):"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      { date: DateFormat, time: TimeFormat } {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    let momentInstance: moment.Moment \u003d this.timezoneService.getMomentInstance(timestamp, timeZone);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    if (resolveMidnightTo2359 \u0026\u0026 momentInstance.hour() \u003d\u003d\u003d 0 \u0026\u0026 momentInstance.minute() \u003d\u003d\u003d 0) {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      momentInstance \u003d momentInstance.subtract(1, \u0027minute\u0027);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    const date: DateFormat \u003d {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      year: momentInstance.year(),"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      month: momentInstance.month() + 1, // moment return 0-11 for month"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      day: momentInstance.date(),"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    const time: TimeFormat \u003d {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      minute: momentInstance.minute(),"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      hour: momentInstance.hour(),"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      date,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      time,"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":392,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":395,"author":{"gitId":"-"},"content":"   * Handles editing existing session event."},{"lineNumber":396,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  editExistingSessionHandler(): void {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isEditable \u003d false;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    this.feedbackSessionModelBeforeEditing \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isSaving \u003d true;"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"    const submissionStartTime: number \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":403,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.submissionStartDate, this.sessionEditFormModel.submissionStartTime,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.timeZone, true);"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    const submissionEndTime: number \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":406,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.submissionEndDate, this.sessionEditFormModel.submissionEndTime,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.timeZone, true);"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    let sessionVisibleTime: number \u003d 0;"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    if (this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM) {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      sessionVisibleTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":411,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.customSessionVisibleDate, this.sessionEditFormModel.customSessionVisibleTime,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.timeZone, true);"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    let responseVisibleTime: number \u003d 0;"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    if (this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      responseVisibleTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":417,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.customResponseVisibleDate, this.sessionEditFormModel.customResponseVisibleTime,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.timeZone, true);"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.updateFeedbackSession(this.courseId, this.feedbackSessionName, {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      instructions: this.sessionEditFormModel.instructions,"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"      submissionStartTimestamp: submissionStartTime,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      submissionEndTimestamp: submissionEndTime,"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      gracePeriod: this.sessionEditFormModel.gracePeriod,"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      customSessionVisibleTimestamp: sessionVisibleTime,"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"      responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      customResponseVisibleTimestamp: responseVisibleTime,"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"      studentDeadlines: {},"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      instructorDeadlines: {},"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.isSaving \u003d false;"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    })).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(\u0027The feedback session has been updated.\u0027);"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":448,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   * Handles canceling existing session event without saving changes."},{"lineNumber":452,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":453,"author":{"gitId":"-"},"content":"  cancelEditingSessionHandler(): void {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel \u003d JSON.parse(JSON.stringify(this.feedbackSessionModelBeforeEditing));"},{"lineNumber":455,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":456,"author":{"gitId":"-"},"content":""},{"lineNumber":457,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":458,"author":{"gitId":"-"},"content":"   * Handles deleting current feedback session."},{"lineNumber":459,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":460,"author":{"gitId":"-"},"content":"  deleteExistingSessionHandler(): void {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isDeleting \u003d true;"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.moveSessionToRecycleBin(this.courseId, this.feedbackSessionName)"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      .pipe(finalize(() \u003d\u003e {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.isDeleting \u003d false;"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      }))"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      .subscribe(() \u003d\u003e {"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions\u0027,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"          \u0027The feedback session has been deleted. You can restore it from the deleted sessions table below.\u0027);"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":472,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":475,"author":{"gitId":"-"},"content":"   * Loads feedback questions."},{"lineNumber":476,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":477,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    this.questionEditFormModels \u003d [];"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackQuestionsFailed \u003d false;"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackQuestions \u003d true;"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":482,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e {"},{"lineNumber":487,"author":{"gitId":"-"},"content":"          this.isLoadingFeedbackQuestions \u003d false;"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"            const addedQuestionEditFormModel: QuestionEditFormModel \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":492,"author":{"gitId":"-"},"content":"            this.questionEditFormModels.push(addedQuestionEditFormModel);"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            this.loadResponseStatusForQuestion(addedQuestionEditFormModel);"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            this.feedbackQuestionModels.set(feedbackQuestion.feedbackQuestionId, feedbackQuestion);"},{"lineNumber":495,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"          this.hasLoadingFeedbackQuestionsFailed \u003d true;"},{"lineNumber":498,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":500,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   * Tracks the question edit form by feedback question id."},{"lineNumber":504,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":506,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":507,"author":{"gitId":"-"},"content":"  trackQuestionEditFormByFn(_: any, item: QuestionEditFormModel): any {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":509,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   * Converts feedback question to the question edit form model."},{"lineNumber":513,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":514,"author":{"gitId":"-"},"content":"  private getQuestionEditFormModel(feedbackQuestion: FeedbackQuestion): QuestionEditFormModel {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"      questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"      questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"      questionType: feedbackQuestion.questionType,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"      questionDetails: this.deepCopy(feedbackQuestion.questionDetails),"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"      giverType: feedbackQuestion.giverType,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      recipientType: feedbackQuestion.recipientType,"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":532,"author":{"gitId":"-"},"content":"          ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"      showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      isDuplicating: false,"},{"lineNumber":540,"author":{"gitId":"-"},"content":"      isEditable: false,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":543,"author":{"gitId":"-"},"content":""},{"lineNumber":544,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":547,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":548,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":549,"author":{"gitId":"-"},"content":""},{"lineNumber":550,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":551,"author":{"gitId":"-"},"content":"   * Loads the isQuestionHasResponses value for a question edit for model."},{"lineNumber":552,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":553,"author":{"gitId":"-"},"content":"  private loadResponseStatusForQuestion(model: QuestionEditFormModel): void {"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.hasResponsesForQuestion(model.feedbackQuestionId)"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        .subscribe((resp: HasResponses) \u003d\u003e {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"          model.isQuestionHasResponses \u003d resp.hasResponses;"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":558,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":559,"author":{"gitId":"-"},"content":""},{"lineNumber":560,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":561,"author":{"gitId":"-"},"content":"   * Saves the existing question."},{"lineNumber":562,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":563,"author":{"gitId":"-"},"content":"  saveExistingQuestionHandler(index: number): void {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    const originalQuestionNumber: number \u003d"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber;"},{"lineNumber":568,"author":{"gitId":"-"},"content":""},{"lineNumber":569,"author":{"gitId":"-"},"content":"    questionEditFormModel.isSaving \u003d true;"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.saveFeedbackQuestion(questionEditFormModel.feedbackQuestionId, {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"      questionNumber: questionEditFormModel.questionNumber,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":577,"author":{"gitId":"-"},"content":""},{"lineNumber":578,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":582,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":586,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":589,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"              questionEditFormModel.isSaving \u003d false;"},{"lineNumber":591,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        .subscribe((updatedQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":594,"author":{"gitId":"-"},"content":"          this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(updatedQuestion);"},{"lineNumber":595,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(updatedQuestion.feedbackQuestionId, updatedQuestion);"},{"lineNumber":596,"author":{"gitId":"-"},"content":"          this.loadResponseStatusForQuestion(this.questionEditFormModels[index]);"},{"lineNumber":597,"author":{"gitId":"-"},"content":""},{"lineNumber":598,"author":{"gitId":"-"},"content":"          // shift question if needed"},{"lineNumber":599,"author":{"gitId":"-"},"content":"          if (originalQuestionNumber !\u003d\u003d updatedQuestion.questionNumber) {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"            // move question form"},{"lineNumber":601,"author":{"gitId":"-"},"content":"            this.moveQuestionForm("},{"lineNumber":602,"author":{"gitId":"-"},"content":"                originalQuestionNumber - 1, updatedQuestion.questionNumber - 1);"},{"lineNumber":603,"author":{"gitId":"-"},"content":"            this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":604,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":605,"author":{"gitId":"-"},"content":""},{"lineNumber":606,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The changes to the question have been updated.\u0027);"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":608,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":609,"author":{"gitId":"-"},"content":""},{"lineNumber":610,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   * Moves question edit form from the original position to the new position."},{"lineNumber":612,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":613,"author":{"gitId":"-"},"content":"  private moveQuestionForm(originalPosition: number, newPosition: number): void {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.splice(newPosition, 0,"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        this.questionEditFormModels.splice(originalPosition, 1)[0]);"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"    // all expanded questions that were moved upwards must be re-expanded to reload rich text editor"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    const start: number \u003d Math.min(originalPosition, newPosition);"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    const movedExpandedQuestions: QuestionEditFormModel[] \u003d this.questionEditFormModels"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      .slice(start, newPosition + 1)"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      .filter((model: QuestionEditFormModel) \u003d\u003e !model.isCollapsed);"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":623,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d true;"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    this.changeDetectorRef.detectChanges();"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":627,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d false;"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":629,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":632,"author":{"gitId":"-"},"content":"   * Normalizes question number in question forms by setting question number in sequence (i.e. 1, 2, 3, 4 ...)."},{"lineNumber":633,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":634,"author":{"gitId":"-"},"content":"  private normalizeQuestionNumberInQuestionForms(): void {"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 1; i \u003c\u003d this.questionEditFormModels.length; i +\u003d 1) {"},{"lineNumber":636,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[i - 1];"},{"lineNumber":637,"author":{"gitId":"-"},"content":"      questionEditFormModel.questionNumber \u003d i;"},{"lineNumber":638,"author":{"gitId":"-"},"content":"      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber \u003d i;"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":641,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":644,"author":{"gitId":"-"},"content":"   * Discards the changes made to the existing question."},{"lineNumber":645,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":646,"author":{"gitId":"-"},"content":"  discardExistingQuestionHandler(index: number): void {"},{"lineNumber":647,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":648,"author":{"gitId":"-"},"content":"    const feedbackQuestion: FeedbackQuestion \u003d"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":652,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":653,"author":{"gitId":"-"},"content":""},{"lineNumber":654,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":655,"author":{"gitId":"-"},"content":"   * Duplicates the question."},{"lineNumber":656,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":657,"author":{"gitId":"-"},"content":"  duplicateCurrentQuestionHandler(index: number): void {"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":659,"author":{"gitId":"-"},"content":""},{"lineNumber":660,"author":{"gitId":"-"},"content":"    questionEditFormModel.isDuplicating \u003d true;"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":662,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1, // add the duplicated question at the end"},{"lineNumber":663,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":664,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":668,"author":{"gitId":"-"},"content":""},{"lineNumber":669,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":670,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":671,"author":{"gitId":"-"},"content":""},{"lineNumber":672,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":673,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":676,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":677,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":680,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":681,"author":{"gitId":"-"},"content":"              questionEditFormModel.isDuplicating \u003d false;"},{"lineNumber":682,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":683,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":685,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":686,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":687,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been duplicated below.\u0027);"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":689,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":690,"author":{"gitId":"-"},"content":""},{"lineNumber":691,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":692,"author":{"gitId":"-"},"content":"   * Deletes the existing question."},{"lineNumber":693,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":694,"author":{"gitId":"-"},"content":"  deleteExistingQuestionHandler(index: number): void {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":696,"author":{"gitId":"-"},"content":"        \u0027Delete the question?\u0027, SimpleModalType.DANGER,"},{"lineNumber":697,"author":{"gitId":"-"},"content":"        \u0027Warning: Deleted question cannot be recovered. \u0027"},{"lineNumber":698,"author":{"gitId":"-"},"content":"        + \u0027\u003cb\u003eAll existing responses for this question to be deleted.\u003c/b\u003e\u0027);"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":700,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":701,"author":{"gitId":"-"},"content":"      questionEditFormModel.isDeleting \u003d true;"},{"lineNumber":702,"author":{"gitId":"-"},"content":"      this.feedbackQuestionsService.deleteFeedbackQuestion(questionEditFormModel.feedbackQuestionId)"},{"lineNumber":703,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e {"},{"lineNumber":704,"author":{"gitId":"-"},"content":"            questionEditFormModel.isDeleting \u003d false;"},{"lineNumber":705,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":706,"author":{"gitId":"-"},"content":"          .subscribe("},{"lineNumber":707,"author":{"gitId":"-"},"content":"            () \u003d\u003e {"},{"lineNumber":708,"author":{"gitId":"-"},"content":"              // remove form model"},{"lineNumber":709,"author":{"gitId":"-"},"content":"              this.feedbackQuestionModels.delete(questionEditFormModel.feedbackQuestionId);"},{"lineNumber":710,"author":{"gitId":"-"},"content":"              this.questionEditFormModels.splice(index, 1);"},{"lineNumber":711,"author":{"gitId":"-"},"content":"              this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":712,"author":{"gitId":"-"},"content":""},{"lineNumber":713,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast(\u0027The question has been deleted.\u0027);"},{"lineNumber":714,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":715,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":716,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":719,"author":{"gitId":"-"},"content":"   * Handles display of template question modal."},{"lineNumber":720,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":721,"author":{"gitId":"-"},"content":"  templateQuestionModalHandler(): void {"},{"lineNumber":722,"author":{"gitId":"-"},"content":"    const windowClass: string \u003d \u0027modal-large\u0027;"},{"lineNumber":723,"author":{"gitId":"-"},"content":"    this.ngbModal.open(TemplateQuestionModalComponent, { windowClass }).result.then((questions: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":724,"author":{"gitId":"-"},"content":"      let questionNumber: number \u003d this.questionEditFormModels.length; // append the questions at the end"},{"lineNumber":725,"author":{"gitId":"-"},"content":"      this.isAddingFromTemplate \u003d true;"},{"lineNumber":726,"author":{"gitId":"-"},"content":"      of(...questions).pipe("},{"lineNumber":727,"author":{"gitId":"-"},"content":"          concatMap((question: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":728,"author":{"gitId":"-"},"content":"            questionNumber +\u003d 1;"},{"lineNumber":729,"author":{"gitId":"-"},"content":"            return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":730,"author":{"gitId":"-"},"content":"              questionNumber,"},{"lineNumber":731,"author":{"gitId":"-"},"content":"              questionBrief: question.questionBrief,"},{"lineNumber":732,"author":{"gitId":"-"},"content":"              questionDescription: question.questionDescription,"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"              questionDetails: question.questionDetails,"},{"lineNumber":735,"author":{"gitId":"-"},"content":"              questionType: question.questionType,"},{"lineNumber":736,"author":{"gitId":"-"},"content":""},{"lineNumber":737,"author":{"gitId":"-"},"content":"              giverType: question.giverType,"},{"lineNumber":738,"author":{"gitId":"-"},"content":"              recipientType: question.recipientType,"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":741,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":742,"author":{"gitId":"-"},"content":""},{"lineNumber":743,"author":{"gitId":"-"},"content":"              showResponsesTo: question.showResponsesTo,"},{"lineNumber":744,"author":{"gitId":"-"},"content":"              showGiverNameTo: question.showGiverNameTo,"},{"lineNumber":745,"author":{"gitId":"-"},"content":"              showRecipientNameTo: question.showRecipientNameTo,"},{"lineNumber":746,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":747,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":748,"author":{"gitId":"-"},"content":"      ).pipe("},{"lineNumber":749,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"          this.isAddingFromTemplate \u003d false;"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":752,"author":{"gitId":"-"},"content":"      ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":755,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); }, () \u003d\u003e {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        if (questions.length \u003d\u003d\u003d 1) {"},{"lineNumber":757,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":759,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The questions have been added to this feedback session.\u0027);"},{"lineNumber":760,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":761,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":762,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":763,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":766,"author":{"gitId":"-"},"content":"   * Populates and shows new question edit form."},{"lineNumber":767,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":768,"author":{"gitId":"-"},"content":"  populateAndShowNewQuestionForm(type: FeedbackQuestionType): void {"},{"lineNumber":769,"author":{"gitId":"-"},"content":"    this.isAddingQuestionPanelExpanded \u003d true;"},{"lineNumber":770,"author":{"gitId":"-"},"content":""},{"lineNumber":771,"author":{"gitId":"-"},"content":"    const newQuestionModel: NewQuestionModel \u003d"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewQuestionModel(type);"},{"lineNumber":773,"author":{"gitId":"-"},"content":""},{"lineNumber":774,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel \u003d {"},{"lineNumber":775,"author":{"gitId":"-"},"content":"      feedbackQuestionId: \u0027\u0027,"},{"lineNumber":776,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1,"},{"lineNumber":777,"author":{"gitId":"-"},"content":"      questionBrief: newQuestionModel.questionBrief,"},{"lineNumber":778,"author":{"gitId":"-"},"content":"      questionDescription: newQuestionModel.questionDescription,"},{"lineNumber":779,"author":{"gitId":"-"},"content":""},{"lineNumber":780,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"      questionType: newQuestionModel.questionType,"},{"lineNumber":783,"author":{"gitId":"-"},"content":"      questionDetails: newQuestionModel.questionDetails,"},{"lineNumber":784,"author":{"gitId":"-"},"content":""},{"lineNumber":785,"author":{"gitId":"-"},"content":"      giverType: newQuestionModel.giverType,"},{"lineNumber":786,"author":{"gitId":"-"},"content":"      recipientType: newQuestionModel.recipientType,"},{"lineNumber":787,"author":{"gitId":"-"},"content":""},{"lineNumber":788,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: newQuestionModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":789,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":790,"author":{"gitId":"-"},"content":"          ? newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":791,"author":{"gitId":"-"},"content":""},{"lineNumber":792,"author":{"gitId":"-"},"content":"      showResponsesTo: newQuestionModel.showResponsesTo,"},{"lineNumber":793,"author":{"gitId":"-"},"content":"      showGiverNameTo: newQuestionModel.showGiverNameTo,"},{"lineNumber":794,"author":{"gitId":"-"},"content":"      showRecipientNameTo: newQuestionModel.showRecipientNameTo,"},{"lineNumber":795,"author":{"gitId":"-"},"content":""},{"lineNumber":796,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":797,"author":{"gitId":"-"},"content":"      isDuplicating: false,"},{"lineNumber":798,"author":{"gitId":"-"},"content":"      isEditable: true,"},{"lineNumber":799,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":800,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":801,"author":{"gitId":"-"},"content":""},{"lineNumber":802,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":803,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":804,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":805,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":806,"author":{"gitId":"-"},"content":""},{"lineNumber":807,"author":{"gitId":"-"},"content":"    // inherit some settings from the last question"},{"lineNumber":808,"author":{"gitId":"-"},"content":"    if (this.questionEditFormModels.length \u003e 0) {"},{"lineNumber":809,"author":{"gitId":"-"},"content":"      const lastQuestionEditFormModel: QuestionEditFormModel \u003d"},{"lineNumber":810,"author":{"gitId":"-"},"content":"          this.questionEditFormModels[this.questionEditFormModels.length - 1];"},{"lineNumber":811,"author":{"gitId":"-"},"content":""},{"lineNumber":812,"author":{"gitId":"-"},"content":"      const newQuestionAllowedFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d"},{"lineNumber":813,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getAllowedFeedbackPaths(type);"},{"lineNumber":814,"author":{"gitId":"-"},"content":"      // inherit feedback path if applicable"},{"lineNumber":815,"author":{"gitId":"-"},"content":"      if (newQuestionAllowedFeedbackPaths.has(lastQuestionEditFormModel.giverType)"},{"lineNumber":816,"author":{"gitId":"-"},"content":"          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":817,"author":{"gitId":"-"},"content":"          \u0026\u0026 newQuestionAllowedFeedbackPaths.get(lastQuestionEditFormModel.giverType)!"},{"lineNumber":818,"author":{"gitId":"-"},"content":"              .indexOf(lastQuestionEditFormModel.recipientType) !\u003d\u003d -1) {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.giverType \u003d lastQuestionEditFormModel.giverType;"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.recipientType \u003d lastQuestionEditFormModel.recipientType;"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting \u003d"},{"lineNumber":822,"author":{"gitId":"-"},"content":"          lastQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting;"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo \u003d"},{"lineNumber":824,"author":{"gitId":"-"},"content":"          lastQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":825,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":826,"author":{"gitId":"-"},"content":""},{"lineNumber":827,"author":{"gitId":"-"},"content":"      const newQuestionVisibilityStateMachine: VisibilityStateMachine \u003d"},{"lineNumber":828,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":829,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.giverType, this.newQuestionEditFormModel.recipientType);"},{"lineNumber":830,"author":{"gitId":"-"},"content":"      // inherit visibility settings if applicable, the state machine will automatically filter out invalid choices"},{"lineNumber":831,"author":{"gitId":"-"},"content":"      newQuestionVisibilityStateMachine.applyVisibilitySettings({"},{"lineNumber":832,"author":{"gitId":"-"},"content":"        SHOW_RESPONSE: lastQuestionEditFormModel.showResponsesTo,"},{"lineNumber":833,"author":{"gitId":"-"},"content":"        SHOW_GIVER_NAME: lastQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":834,"author":{"gitId":"-"},"content":"        SHOW_RECIPIENT_NAME: lastQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":835,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":836,"author":{"gitId":"-"},"content":"      const newQuestionShowResponsesTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":837,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RESPONSE);"},{"lineNumber":838,"author":{"gitId":"-"},"content":"      const newQuestionShowGiverNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":839,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_GIVER_NAME);"},{"lineNumber":840,"author":{"gitId":"-"},"content":"      const newQuestionShowRecipientNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":841,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine"},{"lineNumber":842,"author":{"gitId":"-"},"content":"              .getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RECIPIENT_NAME);"},{"lineNumber":843,"author":{"gitId":"-"},"content":""},{"lineNumber":844,"author":{"gitId":"-"},"content":"      let isAllowedToUseInheritedVisibility: boolean \u003d false;"},{"lineNumber":845,"author":{"gitId":"-"},"content":"      if (this.feedbackQuestionsService"},{"lineNumber":846,"author":{"gitId":"-"},"content":"          .isCustomFeedbackVisibilitySettingAllowed(this.newQuestionEditFormModel.questionType)) {"},{"lineNumber":847,"author":{"gitId":"-"},"content":"        isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":848,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":849,"author":{"gitId":"-"},"content":"        const commonFeedbackVisibilitySettings: CommonVisibilitySetting[] \u003d"},{"lineNumber":850,"author":{"gitId":"-"},"content":"            this.feedbackQuestionsService.getCommonFeedbackVisibilitySettings("},{"lineNumber":851,"author":{"gitId":"-"},"content":"                newQuestionVisibilityStateMachine, this.newQuestionEditFormModel.questionType);"},{"lineNumber":852,"author":{"gitId":"-"},"content":"        // new question is only allowed to have common visibility settings"},{"lineNumber":853,"author":{"gitId":"-"},"content":"        // check whether the inherited settings fall into that or not"},{"lineNumber":854,"author":{"gitId":"-"},"content":"        for (const commonVisibilityOption of commonFeedbackVisibilitySettings) {"},{"lineNumber":855,"author":{"gitId":"-"},"content":"          if (this.isSameSet(newQuestionShowResponsesTo, commonVisibilityOption.visibilitySettings.SHOW_RESPONSE)"},{"lineNumber":856,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowGiverNameTo,"},{"lineNumber":857,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_GIVER_NAME)"},{"lineNumber":858,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowRecipientNameTo,"},{"lineNumber":859,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_RECIPIENT_NAME)) {"},{"lineNumber":860,"author":{"gitId":"-"},"content":"            isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":861,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":862,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":863,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":864,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":865,"author":{"gitId":"-"},"content":""},{"lineNumber":866,"author":{"gitId":"-"},"content":"      if (isAllowedToUseInheritedVisibility) {"},{"lineNumber":867,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showResponsesTo \u003d newQuestionShowResponsesTo;"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showGiverNameTo \u003d newQuestionShowGiverNameTo;"},{"lineNumber":869,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showRecipientNameTo \u003d newQuestionShowRecipientNameTo;"},{"lineNumber":870,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":871,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":872,"author":{"gitId":"-"},"content":""},{"lineNumber":873,"author":{"gitId":"-"},"content":"    this.scrollToNewEditForm();"},{"lineNumber":874,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":875,"author":{"gitId":"-"},"content":""},{"lineNumber":876,"author":{"gitId":"-"},"content":"  private isSameSet(setA: FeedbackVisibilityType[], setB: FeedbackVisibilityType[]): boolean {"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    return setA.length \u003d\u003d\u003d setB.length \u0026\u0026 setA.every((ele: FeedbackVisibilityType) \u003d\u003e setB.includes(ele));"},{"lineNumber":878,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":879,"author":{"gitId":"-"},"content":""},{"lineNumber":880,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":881,"author":{"gitId":"-"},"content":"   * Creates a new question."},{"lineNumber":882,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":883,"author":{"gitId":"-"},"content":"  createNewQuestionHandler(): void {"},{"lineNumber":884,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel.isSaving \u003d true;"},{"lineNumber":885,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":886,"author":{"gitId":"-"},"content":"      questionNumber: this.newQuestionEditFormModel.questionNumber,"},{"lineNumber":887,"author":{"gitId":"-"},"content":"      questionBrief: this.newQuestionEditFormModel.questionBrief,"},{"lineNumber":888,"author":{"gitId":"-"},"content":"      questionDescription: this.newQuestionEditFormModel.questionDescription,"},{"lineNumber":889,"author":{"gitId":"-"},"content":""},{"lineNumber":890,"author":{"gitId":"-"},"content":"      questionDetails: this.newQuestionEditFormModel.questionDetails,"},{"lineNumber":891,"author":{"gitId":"-"},"content":"      questionType: this.newQuestionEditFormModel.questionType,"},{"lineNumber":892,"author":{"gitId":"-"},"content":""},{"lineNumber":893,"author":{"gitId":"-"},"content":"      giverType: this.newQuestionEditFormModel.giverType,"},{"lineNumber":894,"author":{"gitId":"-"},"content":"      recipientType: this.newQuestionEditFormModel.recipientType,"},{"lineNumber":895,"author":{"gitId":"-"},"content":""},{"lineNumber":896,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":897,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":898,"author":{"gitId":"-"},"content":""},{"lineNumber":899,"author":{"gitId":"-"},"content":"      showResponsesTo: this.newQuestionEditFormModel.showResponsesTo,"},{"lineNumber":900,"author":{"gitId":"-"},"content":"      showGiverNameTo: this.newQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":901,"author":{"gitId":"-"},"content":"      showRecipientNameTo: this.newQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":902,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":903,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":904,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":905,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.isSaving \u003d false;"},{"lineNumber":906,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":907,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":908,"author":{"gitId":"-"},"content":"        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":909,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":910,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":911,"author":{"gitId":"-"},"content":""},{"lineNumber":912,"author":{"gitId":"-"},"content":"          this.moveQuestionForm("},{"lineNumber":913,"author":{"gitId":"-"},"content":"              this.questionEditFormModels.length - 1, newQuestion.questionNumber - 1);"},{"lineNumber":914,"author":{"gitId":"-"},"content":"          this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":915,"author":{"gitId":"-"},"content":"          this.isAddingQuestionPanelExpanded \u003d false;"},{"lineNumber":916,"author":{"gitId":"-"},"content":""},{"lineNumber":917,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":918,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":919,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":920,"author":{"gitId":"-"},"content":""},{"lineNumber":921,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":922,"author":{"gitId":"-"},"content":"   * Handles \u0027Copy Question\u0027 click event."},{"lineNumber":923,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":924,"author":{"gitId":"-"},"content":"  copyQuestionsFromOtherSessionsHandler(): void {"},{"lineNumber":925,"author":{"gitId":"-"},"content":"    this.isCopyingQuestion \u003d true;"},{"lineNumber":926,"author":{"gitId":"zhaojj2209"},"content":"    const feedbackSessionTabModels: FeedbackSessionTabModel[] \u003d [];"},{"lineNumber":927,"author":{"gitId":"-"},"content":""},{"lineNumber":928,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionsForInstructor().pipe("},{"lineNumber":929,"author":{"gitId":"-"},"content":"      finalize(() \u003d\u003e {"},{"lineNumber":930,"author":{"gitId":"-"},"content":"        this.isCopyingQuestion \u003d false;"},{"lineNumber":931,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":932,"author":{"gitId":"zhaojj2209"},"content":"    ).subscribe((response: FeedbackSessions) \u003d\u003e {"},{"lineNumber":933,"author":{"gitId":"zhaojj2209"},"content":"      response.feedbackSessions.forEach((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":934,"author":{"gitId":"zhaojj2209"},"content":"        const model: FeedbackSessionTabModel \u003d {"},{"lineNumber":935,"author":{"gitId":"zhaojj2209"},"content":"          courseId: feedbackSession.courseId,"},{"lineNumber":936,"author":{"gitId":"zhaojj2209"},"content":"          feedbackSessionName: feedbackSession.feedbackSessionName,"},{"lineNumber":937,"author":{"gitId":"zhaojj2209"},"content":"          createdAtTimestamp: feedbackSession.createdAtTimestamp,"},{"lineNumber":938,"author":{"gitId":"zhaojj2209"},"content":"          questionsTableRowModels: [],"},{"lineNumber":939,"author":{"gitId":"zhaojj2209"},"content":"          isTabExpanded: false,"},{"lineNumber":940,"author":{"gitId":"zhaojj2209"},"content":"          hasQuestionsLoaded: false,"},{"lineNumber":941,"author":{"gitId":"zhaojj2209"},"content":"          hasLoadingFailed: false,"},{"lineNumber":942,"author":{"gitId":"zhaojj2209"},"content":"          questionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":943,"author":{"gitId":"zhaojj2209"},"content":"          questionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":944,"author":{"gitId":"zhaojj2209"},"content":"        };"},{"lineNumber":945,"author":{"gitId":"zhaojj2209"},"content":"        feedbackSessionTabModels.push(model);"},{"lineNumber":946,"author":{"gitId":"zhaojj2209"},"content":"      });"},{"lineNumber":947,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); }, () \u003d\u003e {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"      const ref: NgbModalRef \u003d this.ngbModal.open(CopyQuestionsFromOtherSessionsModalComponent);"},{"lineNumber":949,"author":{"gitId":"zhaojj2209"},"content":"      ref.componentInstance.feedbackSessionTabModels \u003d feedbackSessionTabModels;"},{"lineNumber":950,"author":{"gitId":"-"},"content":""},{"lineNumber":951,"author":{"gitId":"-"},"content":"      ref.result.then((questionsToCopy: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":952,"author":{"gitId":"-"},"content":"        this.isCopyingQuestion \u003d true;"},{"lineNumber":953,"author":{"gitId":"-"},"content":"        of(...questionsToCopy).pipe("},{"lineNumber":954,"author":{"gitId":"-"},"content":"            concatMap((questionToCopy: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":955,"author":{"gitId":"-"},"content":"              return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":956,"author":{"gitId":"-"},"content":"                questionNumber: this.questionEditFormModels.length + 1, // add the copied question at the end"},{"lineNumber":957,"author":{"gitId":"-"},"content":"                questionBrief: questionToCopy.questionBrief,"},{"lineNumber":958,"author":{"gitId":"-"},"content":"                questionDescription: questionToCopy.questionDescription,"},{"lineNumber":959,"author":{"gitId":"-"},"content":""},{"lineNumber":960,"author":{"gitId":"-"},"content":"                questionDetails: questionToCopy.questionDetails,"},{"lineNumber":961,"author":{"gitId":"-"},"content":"                questionType: questionToCopy.questionType,"},{"lineNumber":962,"author":{"gitId":"-"},"content":""},{"lineNumber":963,"author":{"gitId":"-"},"content":"                giverType: questionToCopy.giverType,"},{"lineNumber":964,"author":{"gitId":"-"},"content":"                recipientType: questionToCopy.recipientType,"},{"lineNumber":965,"author":{"gitId":"-"},"content":""},{"lineNumber":966,"author":{"gitId":"-"},"content":"                numberOfEntitiesToGiveFeedbackToSetting: questionToCopy.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":967,"author":{"gitId":"-"},"content":"                customNumberOfEntitiesToGiveFeedbackTo: questionToCopy.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":968,"author":{"gitId":"-"},"content":""},{"lineNumber":969,"author":{"gitId":"-"},"content":"                showResponsesTo: questionToCopy.showResponsesTo,"},{"lineNumber":970,"author":{"gitId":"-"},"content":"                showGiverNameTo: questionToCopy.showGiverNameTo,"},{"lineNumber":971,"author":{"gitId":"-"},"content":"                showRecipientNameTo: questionToCopy.showRecipientNameTo,"},{"lineNumber":972,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":973,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":974,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":975,"author":{"gitId":"-"},"content":"              this.isCopyingQuestion \u003d false;"},{"lineNumber":976,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":977,"author":{"gitId":"-"},"content":"        ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":978,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":979,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":980,"author":{"gitId":"zhaojj2209"},"content":"          this.statusMessageService.showSuccessToast("},{"lineNumber":981,"author":{"gitId":"zhaojj2209"},"content":"            \u0027The selected question(s) have been added to this feedback session.\u0027,"},{"lineNumber":982,"author":{"gitId":"zhaojj2209"},"content":"          );"},{"lineNumber":983,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":984,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":985,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":986,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":987,"author":{"gitId":"-"},"content":""},{"lineNumber":988,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":989,"author":{"gitId":"-"},"content":"   * Gets all students of a course."},{"lineNumber":990,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":991,"author":{"gitId":"-"},"content":"  getAllStudentsOfCourse(): void {"},{"lineNumber":992,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: this.courseId })"},{"lineNumber":993,"author":{"gitId":"-"},"content":"        .subscribe((students: Students) \u003d\u003e {"},{"lineNumber":994,"author":{"gitId":"-"},"content":"          this.studentsOfCourse \u003d students.students;"},{"lineNumber":995,"author":{"gitId":"-"},"content":""},{"lineNumber":996,"author":{"gitId":"-"},"content":"          // sort the student list based on team name and student name"},{"lineNumber":997,"author":{"gitId":"-"},"content":"          this.studentsOfCourse.sort((a: Student, b: Student): number \u003d\u003e {"},{"lineNumber":998,"author":{"gitId":"-"},"content":"            const teamNameCompare: number \u003d a.teamName.localeCompare(b.teamName);"},{"lineNumber":999,"author":{"gitId":"-"},"content":"            if (teamNameCompare \u003d\u003d\u003d 0) {"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"              return a.name.localeCompare(b.name);"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"            return teamNameCompare;"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":1004,"author":{"gitId":"-"},"content":""},{"lineNumber":1005,"author":{"gitId":"-"},"content":"          // select the first student"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"          if (this.studentsOfCourse.length \u003e\u003d 1) {"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"            this.emailOfStudentToPreview \u003d this.studentsOfCourse[0].email;"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1011,"author":{"gitId":"-"},"content":""},{"lineNumber":1012,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"   * Gets all instructors of a course which can be previewed as."},{"lineNumber":1014,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"  getAllInstructorsCanBePreviewedAs(): void {"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"    this.instructorService.loadInstructors({"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"        .subscribe((instructors: Instructors) \u003d\u003e {"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"          this.instructorsCanBePreviewedAs \u003d instructors.instructors;"},{"lineNumber":1022,"author":{"gitId":"-"},"content":""},{"lineNumber":1023,"author":{"gitId":"-"},"content":"          // TODO use privilege API to filter instructors who has INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"          // in the feedback session"},{"lineNumber":1025,"author":{"gitId":"-"},"content":""},{"lineNumber":1026,"author":{"gitId":"-"},"content":"          // sort the instructor list based on name"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"          this.instructorsCanBePreviewedAs.sort((a: Instructor, b: Instructor): number \u003d\u003e {"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"            return a.name.localeCompare(b.name);"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":1030,"author":{"gitId":"-"},"content":""},{"lineNumber":1031,"author":{"gitId":"-"},"content":"          // select the first instructor"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"          if (this.instructorsCanBePreviewedAs.length \u003e\u003d 1) {"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"            this.emailOfInstructorToPreview \u003d this.instructorsCanBePreviewedAs[0].email;"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1037,"author":{"gitId":"-"},"content":""},{"lineNumber":1038,"author":{"gitId":"-"},"content":"  expandAll(): void {"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d false;"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1043,"author":{"gitId":"-"},"content":""},{"lineNumber":1044,"author":{"gitId":"-"},"content":"  collapseAll(): void {"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d true;"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1049,"author":{"gitId":"-"},"content":""},{"lineNumber":1050,"author":{"gitId":"-"},"content":"  private deepCopy\u003cT\u003e(obj: T): T {"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"    return JSON.parse(JSON.stringify(obj));"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1053,"author":{"gitId":"-"},"content":""},{"lineNumber":1054,"author":{"gitId":"-"},"content":"  private scrollToNewEditForm(): void {"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"      const allEditForms: NodeListOf\u003cElement\u003e \u003d document.querySelectorAll(\u0027tm-question-edit-form\u0027);"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"      const newEditForm: Element \u003d allEditForms[allEditForms.length - 1];"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"      const yOffset: number \u003d -70; // Need offset because of the navBar"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"      const y: number \u003d newEditForm.getBoundingClientRect().top + window.pageYOffset + yOffset;"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"      window.scrollTo({ top: y, behavior: \u0027smooth\u0027 });"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"    }, 0);"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":23,"-":1040}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgbCollapseModule, NgbDropdownModule, NgbTooltipModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { AddingQuestionPanelModule } from \u0027../../components/adding-question-panel/adding-question-panel.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { CopySessionModalModule } from \u0027../../components/copy-session-modal/copy-session-modal.module\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":12,"author":{"gitId":"zhaojj2209"},"content":"import { PanelChevronModule } from \u0027../../components/panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { PreviewSessionPanelModule } from \u0027../../components/preview-session-panel/preview-session-panel.module\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { QuestionEditFormModule } from \u0027../../components/question-edit-form/question-edit-form.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { SessionEditFormModule } from \u0027../../components/session-edit-form/session-edit-form.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../../components/teammates-router/teammates-router.module\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  CopyQuestionsFromOtherSessionsModalComponent,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { InstructorSessionEditPageComponent } from \u0027./instructor-session-edit-page.component\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { TemplateQuestionModalComponent } from \u0027./template-question-modal/template-question-modal.component\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":26,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    component: InstructorSessionEditPageComponent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":30,"author":{"gitId":"-"},"content":"];"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Module for instructor session edit page."},{"lineNumber":34,"author":{"gitId":"-"},"content":" */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":37,"author":{"gitId":"-"},"content":"    AddingQuestionPanelModule,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    AjaxLoadingModule,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    FormsModule,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    NgbCollapseModule,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    NgbDropdownModule,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    NgbTooltipModule,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    TeammatesCommonModule,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    SessionEditFormModule,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    QuestionEditFormModule,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    CopySessionModalModule,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    LoadingSpinnerModule,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    LoadingRetryModule,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    TeammatesRouterModule,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    PreviewSessionPanelModule,"},{"lineNumber":53,"author":{"gitId":"zhaojj2209"},"content":"    PanelChevronModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  entryComponents: ["},{"lineNumber":56,"author":{"gitId":"-"},"content":"    TemplateQuestionModalComponent,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    CopyQuestionsFromOtherSessionsModalComponent,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":60,"author":{"gitId":"-"},"content":"    InstructorSessionEditPageComponent,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    TemplateQuestionModalComponent,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CopyQuestionsFromOtherSessionsModalComponent,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":65,"author":{"gitId":"-"},"content":"    InstructorSessionEditPageComponent,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":67,"author":{"gitId":"-"},"content":"})"},{"lineNumber":68,"author":{"gitId":"-"},"content":"export class InstructorSessionEditPageModule { }"}],"authorContributionMap":{"zhaojj2209":2,"-":66}},{"path":"src/web/app/pages-instructor/instructor-session-modal-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { forkJoin } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../services/feedback-questions.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { FeedbackSessionActionsService } from \u0027../../services/feedback-session-actions.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../services/feedback-sessions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../services/instructor.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../services/navigation.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ProgressBarService } from \u0027../../services/progress-bar.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../services/simple-modal.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../services/status-message.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../services/student.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../services/table-comparator.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmittedGiverSet, Instructor, Instructors,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  Student, Students,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"} from \u0027../../types/api-output\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../types/api-request\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  ResendResultsLinkToRespondentModalComponent,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/resend-results-link-to-respondent-modal/resend-results-link-to-respondent-modal.component\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    InstructorListInfoTableRowModel,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    StudentListInfoTableRowModel,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  SendRemindersToRespondentsModalComponent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/send-reminders-to-respondents-modal/send-reminders-to-respondents-modal.component\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  SessionsTableRowModel,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/sessions-table-model\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../error-message-output\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  InstructorSessionBasePageComponent,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"} from \u0027./instructor-session-base-page.component\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * The base page for session related page."},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"export abstract class InstructorSessionModalPageComponent extends InstructorSessionBasePageComponent {"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  isSendReminderLoading: boolean \u003d false;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  protected constructor(router: Router,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        instructorService: InstructorService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        statusMessageService: StatusMessageService,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        navigationService: NavigationService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        tableComparatorService: TableComparatorService,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        ngbModal: NgbModal,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        simpleModalService: SimpleModalService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        progressBarService: ProgressBarService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        feedbackSessionActionsService: FeedbackSessionActionsService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        protected studentService: StudentService) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        feedbackSessionsService, feedbackQuestionsService, tableComparatorService,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ngbModal, simpleModalService, progressBarService, feedbackSessionActionsService);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents on the published results link."},{"lineNumber":64,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  resendResultsLinkToRespondentsEventHandler(model: SessionsTableRowModel): void {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.isSendReminderLoading \u003d true;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    const courseId: string \u003d model.feedbackSession.courseId;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":71,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({ courseId }),"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    ]).pipe(finalize(() \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.isSendReminderLoading \u003d false;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      .subscribe((result: any[]) \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        const students: Student[] \u003d (result[0] as Students).students;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        const instructors: Instructor[] \u003d (result[1] as Instructors).instructors;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(ResendResultsLinkToRespondentModalComponent);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          email: student.email,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          name: student.name,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          teamName: student.teamName,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          sectionName: student.sectionName,"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"          hasSubmittedSession: false,"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"          isSelected: false,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } as StudentListInfoTableRowModel));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.instructorListInfoTableRowModels \u003d"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            instructors.map((instructor: Instructor) \u003d\u003e ({"},{"lineNumber":96,"author":{"gitId":"-"},"content":"              email: instructor.email,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              name: instructor.name,"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"              hasSubmittedSession: false,"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"              isSelected: false,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            } as InstructorListInfoTableRowModel));"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modalRef.result.then((respondentsToRemind: any[]) \u003d\u003e {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          this.isSendReminderLoading \u003d true;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.remindResultsLinkToRespondents(courseId, feedbackSessionName, {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            usersToRemind: respondentsToRemind.map((m: any) \u003d\u003e m.email),"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            this.isSendReminderLoading \u003d false;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast("},{"lineNumber":113,"author":{"gitId":"-"},"content":"                  \u0027Session published notification emails have been resent to those students and instructors. \u0027"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                  + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents who have not submitted their feedback."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"Nicolascwy"},"content":"  sendRemindersToRespondentsEventHandler(model: SessionsTableRowModel, selectAllRespondents: boolean): void {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.isSendReminderLoading \u003d true;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    const courseId: string \u003d model.feedbackSession.courseId;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":129,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({ courseId }),"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({ courseId, feedbackSessionName }),"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    ]).pipe(finalize(() \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      this.isSendReminderLoading \u003d false;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      .subscribe((result: any[]) \u003d\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        const students: Student[] \u003d (result[0] as Students).students;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        const giverSet: Set\u003cstring\u003e \u003d new Set((result[1] as FeedbackSessionSubmittedGiverSet).giverIdentifiers);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        const instructors: Instructor[] \u003d (result[2] as Instructors).instructors;"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(SendRemindersToRespondentsModalComponent);"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          email: student.email,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          name: student.name,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"          teamName: student.teamName,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"          sectionName: student.sectionName,"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"          hasSubmittedSession: giverSet.has(student.email),"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"Nicolascwy"},"content":"          isSelected: selectAllRespondents \u0026\u0026 !giverSet.has(student.email),"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } as StudentListInfoTableRowModel));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.instructorListInfoTableRowModels \u003d instructors.map("},{"lineNumber":155,"author":{"gitId":"-"},"content":"            (instructor: Instructor) \u003d\u003e ({"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              email: instructor.email,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"              name: instructor.name,"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"              hasSubmittedSession: giverSet.has(instructor.email),"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"Nicolascwy"},"content":"              isSelected: selectAllRespondents \u0026\u0026 !giverSet.has(instructor.email),"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            } as InstructorListInfoTableRowModel));"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        modalRef.result.then((respondentsToRemind: any[]) \u003d\u003e {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"          this.isSendReminderLoading \u003d true;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.remindFeedbackSessionSubmissionForRespondents(courseId, feedbackSessionName, {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            usersToRemind: respondentsToRemind.map((m: any) \u003d\u003e m.email),"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.isSendReminderLoading \u003d false;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast("},{"lineNumber":173,"author":{"gitId":"-"},"content":"                  \u0027Reminder e-mails have been sent out to those students and instructors. \u0027"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                  + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":176,"Nicolascwy":3}},{"path":"src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"!isCoursesLoading \u0026\u0026 courseCandidates.length \u003d\u003d\u003d 0 \u0026\u0026 !hasCourseLoadingFailed\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  You have not created any courses yet, or you have no active courses. Go \u003ca tmRouterLink\u003d\"/web/instructor/courses\"\u003ehere\u003c/a\u003e to create or unarchive a course."},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cbutton id\u003d\"btn-add-session\" class\u003d\"btn btn-success\" (click)\u003d\"isSessionEditFormExpanded \u003d true\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isSessionEditFormExpanded || isCoursesLoading\"\u003e\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Feedback Session"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"margin-top-30px\" *ngIf\u003d\"isSessionEditFormExpanded \u0026\u0026 !isCoursesLoading\" @collapseAnim\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cdiv\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ctm-session-edit-form [formMode]\u003d\"SessionEditFormMode.ADD\" [(model)]\u003d\"sessionEditFormModel\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                          [courseCandidates]\u003d\"courseCandidates\" [templateSessions]\u003d\"templateSessions\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                          [isCopyOtherSessionLoading]\u003d\"isCopyOtherSessionLoading\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                          (addNewSessionEvent)\u003d\"addNewSessionHandler()\" (copyOtherSessionsEvent)\u003d\"copyFromOtherSessionsHandler()\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                          (closeEditFormEvent)\u003d\"isSessionEditFormExpanded \u003d false\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-session-edit-form\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCourseLoadingFailed || hasFeedbackSessionLoadingFailed\" [message]\u003d\"\u0027Failed to load data\u0027\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                  (retryEvent)\u003d\"retryLoadingAllData()\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cdiv *tmIsLoading\u003d\"isCoursesLoading || isMoveToRecycleBinLoading || isCopySessionLoading || isResultActionLoading\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"alert alert-warning margin-top-30px\" role\u003d\"alert\" *ngIf\u003d\"sessionsTableRowModels.length \u003d\u003d\u003d 0 \u0026\u0026 !isFeedbackSessionsLoading\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        You have not created any sessions yet. Use the form above to create a session."},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-table *tmIsLoading\u003d\"isFeedbackSessionsLoading\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                         [sessionsTableRowModels]\u003d\"sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"sessionsTableRowModelsSortBy\" [sessionsTableRowModelsSortOrder]\u003d\"sessionsTableRowModelsSortOrder\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                         [courseCandidates]\u003d\"courseCandidates\" [columnsToShow]\u003d\"[ SessionsTableColumn.COURSE_ID ]\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"                         [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.BLUE\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"                         [isSendReminderLoading]\u003d\"isSendReminderLoading\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                         (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent($event)\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                         (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler($event)\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                         (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler($event)\" (copySessionEvent)\u003d\"copySessionEventHandler($event)\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                         (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler($event)\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                         (publishSessionEvent)\u003d\"publishSessionEventHandler($event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler($event)\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                         (downloadSessionResultsEvent)\u003d\"downloadSessionResultEventHandler($event)\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                         (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToRespondentsEventHandler(sessionsTableRowModels[$event])\""},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":"                         (sendRemindersToAllNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(sessionsTableRowModels[$event], true)\""},{"lineNumber":42,"author":{"gitId":"Nicolascwy"},"content":"                         (sendRemindersToSelectedNonSubmittersEvent)\u003d\"sendRemindersToRespondentsEventHandler(sessionsTableRowModels[$event], false)\"\u003e\u003c/tm-sessions-table\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003cbr/\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 text-muted\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cp\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Note: The table above doesn\u0027t contain sessions from archived courses and courses in recycle bin."},{"lineNumber":51,"author":{"gitId":"-"},"content":"        To view sessions from an archived course, unarchive the course first; to view sessions from a course in recycle bin, restore the course first."},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003ctm-sessions-recycle-bin-table"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        *tmIsLoading\u003d\"isRecycleBinLoading || isRestoreFeedbackSessionLoading\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        [isRecycleBinExpanded]\u003d\"isRecycleBinExpanded\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModels]\u003d\"recycleBinFeedbackSessionRowModels\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortBy]\u003d\"recycleBinFeedbackSessionRowModelsSortBy\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortOrder]\u003d\"recycleBinFeedbackSessionRowModelsSortOrder\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        [isPermanentDeleteLoading]\u003d\"isPermanentDeleteLoading\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        (restoreSessionEvent)\u003d\"restoreRecycleBinFeedbackSession($event)\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        (restoreAllRecycleBinFeedbackSessionEvent)\u003d\"restoreAllRecycleBinFeedbackSession()\""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        (permanentlyDeleteSessionEvent)\u003d\"permanentDeleteSession($event)\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        (permanentDeleteAllSessionsEvent)\u003d\"permanentDeleteAllSessions()\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        (sortRecycleBinFeedbackSessionRowsEvent)\u003d\"sortRecycleBinFeedbackSessionRowsEvent($event)\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        (recycleBinExpandEvent)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded;\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"-":70,"Nicolascwy":2}},{"path":"src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CourseService, CourseStatistics } from \u0027../../../services/course.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  InstructorPermissionSet,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  InstructorPrivilege,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { JoinStatePipe } from \u0027../../components/student-list/join-state.pipe\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StudentListRowModel } from \u0027../../components/student-list/student-list.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"interface StudentIndexedData {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  [key: string]: Student[];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"interface CourseTab {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  course: Course;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  studentList: StudentListRowModel[];"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  studentSortBy: SortBy;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  studentSortOrder: SortOrder;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  hasTabExpanded: boolean;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  hasStudentLoaded: boolean;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  hasLoadingFailed: boolean;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  stats: CourseStatistics;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Instructor student list page."},{"lineNumber":39,"author":{"gitId":"-"},"content":" */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-student-list-page\u0027,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-student-list-page.component.html\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-student-list-page.component.scss\u0027],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":45,"author":{"gitId":"-"},"content":"})"},{"lineNumber":46,"author":{"gitId":"-"},"content":"export class InstructorStudentListPageComponent implements OnInit {"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  courseTabList: CourseTab[] \u003d [];"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  hasLoadingFailed: boolean \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  isLoadingCourses: boolean \u003d false;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  constructor(private instructorService: InstructorService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              private tableComparatorService: TableComparatorService) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.loadCourses();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * Loads courses of current instructor."},{"lineNumber":65,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  loadCourses(): void {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.hasLoadingFailed \u003d false;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.isLoadingCourses \u003d true;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.courseService.getAllCoursesAsInstructor(\u0027active\u0027)"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          this.isLoadingCourses \u003d false;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        .subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          courses.courses.forEach((course: Course) \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            const courseTab: CourseTab \u003d {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"              course,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"              studentList: [],"},{"lineNumber":78,"author":{"gitId":"-"},"content":"              studentSortBy: SortBy.NONE,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"              studentSortOrder: SortOrder.ASC,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              hasTabExpanded: false,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              hasStudentLoaded: false,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"              hasLoadingFailed: false,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              stats: {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                numOfSections: 0,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                numOfStudents: 0,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                numOfTeams: 0,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.courseTabList.push(courseTab);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          this.courseTabList \u003d [];"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          this.hasLoadingFailed \u003d true;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e this.sortCourses());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   * Toggles specific card and loads students if needed"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  toggleCard(courseTab: CourseTab): void {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    courseTab.hasTabExpanded \u003d !courseTab.hasTabExpanded;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    if (!courseTab.hasStudentLoaded) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      this.loadStudents(courseTab);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   * Loads students of a specified course."},{"lineNumber":111,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  loadStudents(courseTab: CourseTab): void {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    courseTab.hasLoadingFailed \u003d false;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    courseTab.hasStudentLoaded \u003d false;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: courseTab.course.courseId })"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        .subscribe((students: Students) \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          courseTab.studentList \u003d []; // Reset the list of students for the course"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          const sections: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            const term: string \u003d x.sectionName;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            (acc[term] \u003d acc[term] || []).push(x);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return acc;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          }, {});"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"          this.instructorService.loadInstructorPrivilege({"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            courseId: courseTab.course.courseId,"},{"lineNumber":126,"author":{"gitId":"fsgmhoward"},"content":"          })"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            courseTab.hasStudentLoaded \u003d true;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":130,"author":{"gitId":"fsgmhoward"},"content":"          .subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            const courseLevelPrivilege: InstructorPermissionSet \u003d instructorPrivilege.privileges.courseLevel;"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Object.keys(sections).forEach((sectionName: string) \u003d\u003e {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              const sectionLevelPrivilege: InstructorPermissionSet \u003d"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                  instructorPrivilege.privileges.sectionLevel[sectionName] || courseLevelPrivilege;"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"              const studentsInSection: Student[] \u003d sections[sectionName];"},{"lineNumber":138,"author":{"gitId":"-"},"content":"              const studentModels: StudentListRowModel[] \u003d studentsInSection.map((studentInSection: Student) \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                return {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                  student: studentInSection,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  isAllowedToViewStudentInSection: sectionLevelPrivilege.canViewStudentInSections,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                  isAllowedToModifyStudent: sectionLevelPrivilege.canModifyStudent,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"              courseTab.studentList.push(...studentModels);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              courseTab.studentList.sort(this.sortStudentBy(SortBy.NONE, SortOrder.ASC));"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"            courseTab.stats \u003d this.courseService.calculateCourseStatistics(students.students);"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            courseTab.hasLoadingFailed \u003d true;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            courseTab.studentList \u003d [];"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          courseTab.hasLoadingFailed \u003d true;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          courseTab.studentList \u003d [];"},{"lineNumber":160,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":165,"author":{"gitId":"-"},"content":"   * Removes the student from course and update the course statistics."},{"lineNumber":166,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  removeStudentFromCourse(courseTab: CourseTab, studentEmail: string): void {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    this.courseService.removeStudentFromCourse(courseTab.course.courseId, studentEmail).subscribe(() \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      courseTab.studentList \u003d"},{"lineNumber":170,"author":{"gitId":"-"},"content":"          courseTab.studentList.filter("},{"lineNumber":171,"author":{"gitId":"-"},"content":"              (studentModel: StudentListRowModel) \u003d\u003e studentModel.student.email !\u003d\u003d studentEmail);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"      const students: Student[] \u003d"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          courseTab.studentList.map((studentModel: StudentListRowModel) \u003d\u003e studentModel.student);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      courseTab.stats \u003d this.courseService.calculateCourseStatistics(students);"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"      this.statusMessageService"},{"lineNumber":178,"author":{"gitId":"-"},"content":"          .showSuccessToast(`Student is successfully deleted from course \"${courseTab.course.courseId}\"`);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":185,"author":{"gitId":"-"},"content":"   * Sorts the courses in the list according to course ID."},{"lineNumber":186,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  sortCourses(): void {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    this.courseTabList.sort((a: CourseTab, b: CourseTab) \u003d\u003e {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      return this.tableComparatorService"},{"lineNumber":190,"author":{"gitId":"-"},"content":"          .compare(SortBy.COURSE_ID, SortOrder.ASC, a.course.courseId, b.course.courseId);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   * Sorts the student list."},{"lineNumber":196,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  sortStudentList(courseTab: CourseTab, by: SortBy): void {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    courseTab.studentSortBy \u003d by;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    courseTab.studentSortOrder \u003d"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      courseTab.studentSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    courseTab.studentList.sort(this.sortStudentBy(by, courseTab.studentSortOrder));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * Returns a function to determine the order of sort for students."},{"lineNumber":206,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  sortStudentBy(by: SortBy, order: SortOrder):"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      ((a: StudentListRowModel, b: StudentListRowModel) \u003d\u003e number) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    const joinStatePipe: JoinStatePipe \u003d new JoinStatePipe();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    if (by \u003d\u003d\u003d SortBy.NONE) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      // Default order: section name \u003e team name \u003e student name"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      return ((a: StudentListRowModel, b: StudentListRowModel): number \u003d\u003e {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return this.tableComparatorService"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            .compare(SortBy.SECTION_NAME, order, a.student.sectionName, b.student.sectionName)"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          || this.tableComparatorService.compare(SortBy.TEAM_NAME, order, a.student.teamName, b.student.teamName)"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          || this.tableComparatorService.compare(SortBy.RESPONDENT_NAME, order, a.student.name, b.student.name);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    return (a: StudentListRowModel, b: StudentListRowModel): number \u003d\u003e {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      let strA: string;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      let strB: string;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      switch (by) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        case SortBy.SECTION_NAME:"},{"lineNumber":224,"author":{"gitId":"-"},"content":"          strA \u003d a.student.sectionName;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"          strB \u003d b.student.sectionName;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        case SortBy.RESPONDENT_NAME:"},{"lineNumber":228,"author":{"gitId":"-"},"content":"          strA \u003d a.student.name;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"          strB \u003d b.student.name;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        case SortBy.TEAM_NAME:"},{"lineNumber":232,"author":{"gitId":"-"},"content":"          strA \u003d a.student.teamName;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          strB \u003d b.student.teamName;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        case SortBy.RESPONDENT_EMAIL:"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          strA \u003d a.student.email;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"          strB \u003d b.student.email;"},{"lineNumber":238,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        case SortBy.JOIN_STATUS:"},{"lineNumber":240,"author":{"gitId":"-"},"content":"          strA \u003d joinStatePipe.transform(a.student.joinState);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"          strB \u003d joinStatePipe.transform(b.student.joinState);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":244,"author":{"gitId":"-"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":249}},{"path":"src/web/app/pages-instructor/instructor-track-view-page/instructor-track-view-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbDateParserFormatter, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { concatMap, finalize, mergeAll } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ApiConst } from \u0027../../../types/api-const\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackSessionLog,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  FeedbackSessionLogEntry,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  FeedbackSessionLogs,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  FeedbackSessionLogType,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { SortBy } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"import { DatePickerFormatter } from \u0027../../components/datepicker/datepicker-formatter\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { DateFormat } from \u0027../../components/datepicker/datepicker.component\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { ColumnData, SortableTableCellData } from \u0027../../components/sortable-table/sortable-table.component\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { TimeFormat } from \u0027../../components/timepicker/timepicker.component\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Model for searching of logs"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"interface SearchLogsFormModel {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  courseId: string;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  feedbackSessionName: string;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Model for displaying of feedback session logs"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"interface FeedbackSessionLogModel {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  courseId: string;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  feedbackSessionName: string;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  publishedDate: string;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  logColumnsData: ColumnData[];"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  logRowsData: SortableTableCellData[][];"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":54,"author":{"gitId":"-"},"content":" * Component for tracking student results view"},{"lineNumber":55,"author":{"gitId":"-"},"content":" */"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-track-view-page\u0027,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-track-view-page.component.html\u0027,"},{"lineNumber":59,"author":{"gitId":"fsgmhoward"},"content":"  providers: [{ provide: NgbDateParserFormatter, useClass: DatePickerFormatter }],"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-track-view-page.component.scss\u0027],"},{"lineNumber":61,"author":{"gitId":"-"},"content":"})"},{"lineNumber":62,"author":{"gitId":"-"},"content":"export class InstructorTrackViewPageComponent implements OnInit {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  LOGS_DATE_TIME_FORMAT: string \u003d \u0027ddd, DD MMM YYYY hh:mm:ss A\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  LOGS_RETENTION_PERIOD_IN_DAYS: number \u003d ApiConst.LOGS_RETENTION_PERIOD;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  LOGS_RETENTION_PERIOD_IN_MILLISECONDS: number \u003d this.LOGS_RETENTION_PERIOD_IN_DAYS * 24 * 60 * 60 * 1000;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  ONE_MINUTE_IN_MILLISECONDS: number \u003d 60 * 1000;"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  formModel: SearchLogsFormModel \u003d {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  courses: Course[] \u003d [];"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  courseToFeedbackSession: Record\u003cstring, FeedbackSession[]\u003e \u003d {};"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  searchResult: FeedbackSessionLogModel \u003d {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    publishedDate: \u0027\u0027,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    logColumnsData: [],"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    logRowsData: [],"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  students: Student[] \u003d [];"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  studentToLog: Record\u003cstring, FeedbackSessionLogEntry\u003e \u003d {};"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  isLoading: boolean \u003d true;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  isSearching: boolean \u003d false;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  hasResult: boolean \u003d false;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  publishedTime: number \u003d 0;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  notViewedSince: number \u003d 0;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  logsDateFrom: DateFormat \u003d { year: 0, month: 0, day: 0 };"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  logsTimeFrom: TimeFormat \u003d { hour: 23, minute: 59 };"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  logsDateTo: DateFormat \u003d { year: 0, month: 0, day: 0 };"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  logsTimeTo: TimeFormat \u003d { hour: 23, minute: 59 };"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  constructor(private courseService: CourseService,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private logsService: LogService,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private simpleModalService: SimpleModalService,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private statusMessageService: StatusMessageService,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private studentService: StudentService,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private timezoneService: TimezoneService) { }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    this.loadData();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   * Load all courses that the instructor have"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  private loadData(): void {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    this.courseService"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      .getAllCoursesAsInstructor(\u0027active\u0027)"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":115,"author":{"gitId":"-"},"content":"          concatMap((courses: Courses) \u003d\u003e courses.courses.map((course: Course) \u003d\u003e {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            this.courses.push(course);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return this.feedbackSessionsService.getFeedbackSessionsForInstructor(course.courseId);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          })),"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          mergeAll(),"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          finalize(() \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            this.isLoading \u003d false;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      .subscribe(((feedbackSessions: FeedbackSessions) \u003d\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (feedbackSessions.feedbackSessions.length \u003e 0) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"          this.courseToFeedbackSession[feedbackSessions.feedbackSessions[0].courseId] \u003d"},{"lineNumber":126,"author":{"gitId":"-"},"content":"              [...feedbackSessions.feedbackSessions];"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      (e: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(e.error.message));"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   * Get the selected feedback session"},{"lineNumber":134,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  getFeedbackSession(): void {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    this.isSearching \u003d true;"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    // Get the publish status and time of feedback session"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      .getFeedbackSession({"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        courseId: this.formModel.courseId,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        feedbackSessionName: this.formModel.feedbackSessionName,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        intent: Intent.INSTRUCTOR_RESULT,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        this.publishedTime \u003d feedbackSession.resultVisibleFromTimestamp || this.publishedTime;"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // Feedback session is not published, do not need to search."},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (feedbackSession.publishStatus !\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          this.isSearching \u003d false;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(\u0027This feedback session is not published\u0027);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        const earliestSearchTime: number \u003d Date.now() - this.LOGS_RETENTION_PERIOD_IN_MILLISECONDS;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Feedback session is published more than 30 days ago, open a dialog."},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (this.publishedTime \u003c earliestSearchTime) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          this.openModal();"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // Published time of the feedback session is less than 30 days ago, update the form model to"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // search only up till the publish date."},{"lineNumber":164,"author":{"gitId":"-"},"content":"        const publishedDate: Date \u003d new Date(this.publishedTime);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        this.notViewedSince \u003d publishedDate.getTime();"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        this.logsDateFrom \u003d {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          year: publishedDate.getFullYear(),"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          month: publishedDate.getMonth() + 1,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"          day: publishedDate.getDate(),"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        this.logsTimeFrom \u003d {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          hour: publishedDate.getHours(),"},{"lineNumber":173,"author":{"gitId":"-"},"content":"          minute: publishedDate.getMinutes(),"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        this.search();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"   * Search for logs of student activity"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  private search(): void {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    this.students \u003d [];"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    this.studentToLog \u003d {};"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    const today: Date \u003d new Date();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    this.logsDateTo \u003d {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      year: today.getFullYear(),"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      month: today.getMonth() + 1,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      day: today.getDate(),"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"    const logsDateFrom: number \u003d this.timezoneService.resolveLocalDateTime(this.logsDateFrom, this.logsTimeFrom);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    const logsDateTo: number \u003d this.timezoneService.resolveLocalDateTime(this.logsDateTo, this.logsTimeTo);"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    this.logsService.searchFeedbackSessionLog({"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      courseId: this.formModel.courseId,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      searchFrom: logsDateFrom.toString(),"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      searchUntil: logsDateTo.toString(),"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      sessionName: this.formModel.feedbackSessionName,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":202,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"          this.isSearching \u003d false;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"          this.hasResult \u003d true;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    ).subscribe((logs: FeedbackSessionLogs) \u003d\u003e {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      this.studentService"},{"lineNumber":208,"author":{"gitId":"-"},"content":"          .getStudentsFromCourse({ courseId: this.formModel.courseId })"},{"lineNumber":209,"author":{"gitId":"-"},"content":"          .subscribe((students: Students) \u003d\u003e {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.students.push(...students.students);"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"            const targetFeedbackSessionLog: FeedbackSessionLog | undefined \u003d logs.feedbackSessionLogs"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .find((fsLog: FeedbackSessionLog) \u003d\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                    fsLog.feedbackSessionData.feedbackSessionName \u003d\u003d\u003d this.formModel.feedbackSessionName);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (!targetFeedbackSessionLog) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"            targetFeedbackSessionLog.feedbackSessionLogEntries"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .filter((entry: FeedbackSessionLogEntry) \u003d\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    entry.feedbackSessionLogType.toString() as keyof typeof FeedbackSessionLogType"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u003d\u003d\u003d \u0027VIEW_RESULT\u0027)"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .filter((entry: FeedbackSessionLogEntry) \u003d\u003e"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    !(entry.studentData.email in this.studentToLog)"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    || this.studentToLog[entry.studentData.email].timestamp \u003c entry.timestamp)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .forEach((entry: FeedbackSessionLogEntry) \u003d\u003e {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                  this.studentToLog[entry.studentData.email] \u003d entry;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.searchResult \u003d this.toFeedbackSessionLogModel(targetFeedbackSessionLog);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }, (e: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(e.error.message);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"  private openModal(): void {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d \u0027Published date of selected feedback session is more than 30 days ago. \u0027"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      + \u0027Only activities within the last 30 days will be shown.\u0027;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      this.simpleModalService.openConfirmationModal(\u0027Continue the operation?\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    modalRef.result.then("},{"lineNumber":243,"author":{"gitId":"-"},"content":"      () \u003d\u003e {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        const earliestSearchDate: Date \u003d"},{"lineNumber":245,"author":{"gitId":"-"},"content":"          new Date(Date.now() - this.LOGS_RETENTION_PERIOD_IN_MILLISECONDS + this.ONE_MINUTE_IN_MILLISECONDS);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        this.logsDateFrom \u003d {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"          year: earliestSearchDate.getFullYear(),"},{"lineNumber":248,"author":{"gitId":"-"},"content":"          month: earliestSearchDate.getMonth() + 1,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"          day: earliestSearchDate.getDate(),"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        this.logsTimeFrom \u003d {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"          hour: earliestSearchDate.getHours(),"},{"lineNumber":253,"author":{"gitId":"-"},"content":"          minute: earliestSearchDate.getMinutes(),"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"        this.notViewedSince \u003d earliestSearchDate.getTime();"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        this.search();"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      () \u003d\u003e { this.isSearching \u003d false; },"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"  private toFeedbackSessionLogModel(log: FeedbackSessionLog): FeedbackSessionLogModel {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"      courseId: this.formModel.courseId,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.formModel.feedbackSessionName,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      publishedDate: this.timezoneService.formatToString("},{"lineNumber":268,"author":{"gitId":"-"},"content":"          this.publishedTime, log.feedbackSessionData.timeZone, this.LOGS_DATE_TIME_FORMAT),"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      logColumnsData: ["},{"lineNumber":270,"author":{"gitId":"-"},"content":"        { header: \u0027Status\u0027, sortBy: SortBy.RESULT_VIEW_STATUS },"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        { header: \u0027Name\u0027, sortBy: SortBy.GIVER_NAME },"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        { header: \u0027Email\u0027, sortBy: SortBy.RESPONDENT_EMAIL },"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        { header: \u0027Section\u0027, sortBy: SortBy.SECTION_NAME },"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        { header: \u0027Team\u0027, sortBy: SortBy.TEAM_NAME },"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      logRowsData: this.students"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        .map((student: Student) \u003d\u003e {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"          let status: string;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"          let dataStyle: string \u003d \u0027font-family:monospace; white-space:pre;\u0027;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"          if (student.email in this.studentToLog) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            const entry: FeedbackSessionLogEntry \u003d this.studentToLog[student.email];"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            const timestamp: string \u003d this.timezoneService.formatToString("},{"lineNumber":283,"author":{"gitId":"-"},"content":"                entry.timestamp, log.feedbackSessionData.timeZone, this.LOGS_DATE_TIME_FORMAT);"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            status \u003d `Viewed last at   ${timestamp}`;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            const timestamp: string \u003d this.timezoneService.formatToString("},{"lineNumber":287,"author":{"gitId":"-"},"content":"                this.notViewedSince, log.feedbackSessionData.timeZone, this.LOGS_DATE_TIME_FORMAT);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            status \u003d `Not viewed since ${timestamp}`;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            dataStyle +\u003d \u0027color:red;\u0027;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":291,"author":{"gitId":"-"},"content":"          return ["},{"lineNumber":292,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"              value: status,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"              style: dataStyle,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            { value: student.name },"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            { value: student.email },"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            { value: student.sectionName },"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            { value: student.teamName },"},{"lineNumber":300,"author":{"gitId":"-"},"content":"          ];"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":2,"-":302}},{"path":"src/web/app/pages-session/session-result-page/session-result-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  Feedback Session Results"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"regKey\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"loggedInUser\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        You are viewing feedback results as {{ personName }}. If you wish to link your Google account ({{ loggedInUser }}) with this user,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003ca href\u003d\"#\" id\u003d\"join-course-btn\" (click)\u003d\"joinCourseForUnregisteredEntity(); $event.preventDefault()\"\u003eclick here\u003c/a\u003e."},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"!loggedInUser\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        You are viewing feedback results as {{ personName }}. You may submit feedback for sessions that are currently open and view results without logging in."},{"lineNumber":13,"author":{"gitId":"-"},"content":"        To access other features you need to \u003ca href\u003d\"#\" (click)\u003d\"joinCourseForUnregisteredEntity(); $event.preventDefault()\"\u003elogin using a Google account\u003c/a\u003e (recommended)."},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"!isFeedbackSessionResultsLoading \u0026\u0026 questions.length !\u003d\u003d 0\" class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Note: Questions without responses (i.e., no responses received or responses are not meant to be visible to you) are not shown below."},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"\u003cdiv *ngIf\u003d\"!isFeedbackSessionDetailsLoading\" class\u003d\"card card-plain mt-3\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eCourse ID:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-id\" class\u003d\"col-md-7 text-md-left\"\u003e{{ session.courseId }}\u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eSession:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"session-name\" class\u003d\"col-md-7 text-md-left\"\u003e{{ session.feedbackSessionName }}\u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eOpening time:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"opening-time\" class\u003d\"col-md-7 text-md-left\"\u003e{{ formattedSessionOpeningTime }}\u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eClosing time:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"closing-time\" class\u003d\"col-md-7 text-md-left\"\u003e{{ formattedSessionClosingTime }}\u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light\" style\u003d\"margin-bottom: 20px;\" *ngIf\u003d\"intent \u003d\u003d\u003d Intent.INSTRUCTOR_RESULT\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    If you wish to view the feedback results of the entire course, \u003ca href\u003d\"javascript:;\" (click)\u003d\"navigateToSessionReportPage(); $event.preventDefault()\"\u003eclick here\u003c/a\u003e."},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasFeedbackSessionResultsLoadingFailed\" [message]\u003d\"\u0027Failed to load results\u0027\" (retryEvent)\u003d\"retryLoadingFeedbackSessionResults()\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isFeedbackSessionResultsLoading\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"questions.length \u003d\u003d\u003d 0\" class\u003d\"mt-4\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"alert alert-primary d-flex align-items-center justify-content-center\" style\u003d\"background-color: #D1ECF1;\" role\u003d\"alert\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Nothing to show. The responses are either not configured to be visible or there are no responses."},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003ctm-question-response-panel [questions]\u003d\"questions\" [session]\u003d\"session\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                                [intent]\u003d\"intent\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-question-response-panel\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":63}},{"path":"src/web/app/pages-session/session-result-page/session-result-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import SpyInstance \u003d jest.SpyInstance;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  AuthInfo, FeedbackContributionQuestionDetails, FeedbackContributionResponseDetails,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails, FeedbackMcqResponseDetails,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  FeedbackQuestionType, FeedbackRubricQuestionDetails, FeedbackRubricResponseDetails,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus, FeedbackTextQuestionDetails, FeedbackTextResponseDetails,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  QuestionOutput,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting, SessionResults,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { QuestionResponsePanelModule } from \u0027../../components/question-response-panel/question-response-panel.module\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { SingleStatisticsModule } from \u0027../../components/question-responses/single-statistics/single-statistics.module\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  StudentViewResponsesModule,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-responses/student-view-responses/student-view-responses.module\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import { QuestionTextWithInfoModule } from \u0027../../components/question-text-with-info/question-text-with-info.module\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { SessionResultPageComponent } from \u0027./session-result-page.component\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"describe(\u0027SessionResultPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  const testFeedbackSession: FeedbackSession \u003d {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 0,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: 1549095330000,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    studentDeadlines: {},"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    instructorDeadlines: {},"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  const testInfo: AuthInfo \u003d {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    masquerade: false,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    user: {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      id: \u0027user-id\u0027,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      isAdmin: false,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      isInstructor: true,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      isStudent: false,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      isMaintainer: false,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  const testQuestion1: FeedbackQuestion \u003d {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestion1\u0027,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    questionNumber: 1,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    questionBrief: \u0027How well did team member perform?\u0027,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      hasAssignedWeights: false,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      mcqWeights: [],"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      mcqOtherWeight: 0,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      mcqChoices: ["},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u0027\u003cp\u003eGood\u003c/p\u003e\u0027,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        \u0027\u003cp\u003eNormal\u003c/p\u003e\u0027,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u0027\u003cp\u003eBad\u003c/p\u003e\u0027,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      otherEnabled: false,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      generateOptionsFor: \u0027NONE\u0027,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      questionText: \u0027How well did team member perform?\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  const testQuestion2: FeedbackQuestion \u003d {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestion2\u0027,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    questionNumber: 2,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    questionBrief: \u0027Rate your teammates in contribution\u0027,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      questionText: \u0027Rate your teammates in contribution\u0027,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      isNotSureAllowed: false,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    } as FeedbackContributionQuestionDetails,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  const testQuestion3: FeedbackQuestion \u003d {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestion3\u0027,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    questionNumber: 3,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    questionBrief: \u0027Rate your teammates proficiency\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      questionText: \u0027Rate your teammates proficiency\u0027,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      hasAssignedWeights: false,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      rubricWeightsForEachCell: [[]],"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      rubricChoices: [\u0027Poor\u0027, \u0027Average\u0027, \u0027Good\u0027],"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      rubricSubQuestions: [],"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      rubricDescriptions: [[]],"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    } as FeedbackRubricQuestionDetails,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  const testQuestionAnonymousResponse1: FeedbackQuestion \u003d {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestionAnonymousResponse1\u0027,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    questionNumber: 1,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    questionBrief: \u0027What comments do you have regarding each of your team members? \u0027"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        + \u0027(response is confidential and will only be shown to the instructor).\u0027,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      shouldAllowRichText: true,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      questionText: \u0027What comments do you have regarding each of your team members? \u0027"},{"lineNumber":154,"author":{"gitId":"-"},"content":"          + \u0027(response is confidential and will only be shown to the instructor).\u0027,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"  const testQuestionAnonymousResponse2: FeedbackQuestion \u003d {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedbackQuestionAnonymousResponse2\u0027,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    questionNumber: 2,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    questionBrief: \u0027How are the team dynamics thus far? \u0027"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        + \u0027(response is confidential and will only be shown to the instructor).\u0027,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      shouldAllowRichText: true,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      questionText: \u0027How are the team dynamics thus far? \u0027"},{"lineNumber":176,"author":{"gitId":"-"},"content":"          + \u0027(response is confidential and will only be shown to the instructor).\u0027,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"  let component: SessionResultPageComponent;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cSessionResultPageComponent\u003e;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  let authService: AuthService;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  let navService: NavigationService;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  let studentService: StudentService;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  let feedbackSessionService: FeedbackSessionsService;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  let logService: LogService;"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"  const testQueryParams: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    courseid: \u0027CS3281\u0027,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    fsname: \u0027Peer Feedback\u0027,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    key: \u0027reg-key\u0027,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":205,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        StudentViewResponsesModule,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        QuestionTextWithInfoModule,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        QuestionResponsePanelModule,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        SingleStatisticsModule,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      declarations: [SessionResultPageComponent],"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":216,"author":{"gitId":"-"},"content":"        AuthService,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        NavigationService,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        StudentService,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        FeedbackSessionsService,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        LogService,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"          provide: ActivatedRoute,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"          useValue: {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            queryParams: of(testQueryParams),"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            data: {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"              intent: Intent.STUDENT_RESULT,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"              pipe: () \u003d\u003e {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                return {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                  subscribe: (fn: (value: any) \u003d\u003e void) \u003d\u003e fn(testQueryParams),"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":231,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        .compileComponents();"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(SessionResultPageComponent);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    feedbackSessionService \u003d TestBed.inject(FeedbackSessionsService);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    logService \u003d TestBed.inject(LogService);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":248,"author":{"gitId":"fsgmhoward"},"content":"    // Set both loading flags to false initially for testing purposes only"},{"lineNumber":249,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionDetailsLoading \u003d false;"},{"lineNumber":250,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionResultsLoading \u003d false;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027should snap with session details and results are loading\u0027, () \u003d\u003e {"},{"lineNumber":263,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionDetailsLoading \u003d true;"},{"lineNumber":264,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionResultsLoading \u003d true;"},{"lineNumber":265,"author":{"gitId":"fsgmhoward"},"content":"    fixture.detectChanges();"},{"lineNumber":266,"author":{"gitId":"fsgmhoward"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":267,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":268,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":269,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027should snap with session details loaded and results are loading\u0027, () \u003d\u003e {"},{"lineNumber":270,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionDetailsLoading \u003d false;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionResultsLoading \u003d true;"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"  it(\u0027should snap when session results failed to load\u0027, () \u003d\u003e {"},{"lineNumber":277,"author":{"gitId":"fsgmhoward"},"content":"    component.isFeedbackSessionDetailsLoading \u003d false;"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionResultsLoading \u003d false;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    component.hasFeedbackSessionResultsLoadingFailed \u003d true;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027session-link-key\u0027;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027alice\u0027;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is not logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027session-link-key\u0027;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027\u0027;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"  it(\u0027should snap with an open feedback session with no questions\u0027, () \u003d\u003e {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    component.session \u003d {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      courseId: \u0027CS3281\u0027,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      timeZone: \u0027UTC\u0027,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      feedbackSessionName: \u0027Peer Review 1\u0027,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      instructions: \u0027\u0027,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      submissionStartTimestamp: 1555232400,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      submissionEndTimestamp: 1555233400,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      gracePeriod: 0,"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"      responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: true,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: true,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      createdAtTimestamp: 1555231400,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      studentDeadlines: {},"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      instructorDeadlines: {},"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    component.questions \u003d [];"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":322,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session with questions\u0027, () \u003d\u003e {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    component.session \u003d testFeedbackSession;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    component.questions \u003d ["},{"lineNumber":327,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestion1,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        allResponses: [],"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        responsesToSelf: [],"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":333,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-1\u0027,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient1\u0027,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"              answer: \u0027Good\u0027,"},{"lineNumber":344,"author":{"gitId":"-"},"content":"              isOther: false,"},{"lineNumber":345,"author":{"gitId":"-"},"content":"              otherFieldContent: \u0027\u0027,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            } as FeedbackMcqResponseDetails,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":348,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        otherResponses: [[]],"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestion2,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        allResponses: [],"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        responsesToSelf: ["},{"lineNumber":357,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-2\u0027,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            recipient: \u0027giver1\u0027,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"              answer: 120,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            } as FeedbackContributionResponseDetails,"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":370,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":373,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-3\u0027,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient2\u0027,"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team2\u0027,"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section2\u0027,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"              answer: 110,"},{"lineNumber":384,"author":{"gitId":"-"},"content":"            } as FeedbackContributionResponseDetails,"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":386,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":387,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-4\u0027,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team2\u0027,"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section2\u0027,"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":397,"author":{"gitId":"-"},"content":"              answer: 100,"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            } as FeedbackContributionResponseDetails,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":400,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        otherResponses: [[]],"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":404,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestion3,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        allResponses: [],"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        responsesToSelf: [],"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":410,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-5\u0027,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team2\u0027,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section2\u0027,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"              answer: [1],"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            } as FeedbackRubricResponseDetails,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            instructorComments: ["},{"lineNumber":423,"author":{"gitId":"-"},"content":"              {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                commentGiver: \u0027comment-giver-1\u0027,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                lastEditorEmail: \u0027comment@egeg.com\u0027,"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                feedbackResponseCommentId: 1,"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                commentText: \u0027this is a text\u0027,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"                createdAt: 1402775804,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"                lastEditedAt: 1402775804,"},{"lineNumber":430,"author":{"gitId":"-"},"content":"                isVisibilityFollowingFeedbackQuestion: true,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                showGiverNameTo: [],"},{"lineNumber":432,"author":{"gitId":"-"},"content":"                showCommentTo: [],"},{"lineNumber":433,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":434,"author":{"gitId":"-"},"content":"            ],"},{"lineNumber":435,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        otherResponses: [[]],"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":443,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session with questions of anonymous responses\u0027, () \u003d\u003e {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    component.session \u003d testFeedbackSession;"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    component.questions \u003d ["},{"lineNumber":448,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestionAnonymousResponse1,"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        allResponses: ["},{"lineNumber":452,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-1\u0027,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient1\u0027,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":462,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":465,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":466,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":467,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-2\u0027,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":470,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient2\u0027,"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":475,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":477,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":479,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":480,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-3\u0027,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":485,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":491,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":493,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        responsesToSelf: [],"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":497,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":499,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-1\u0027,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":501,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":503,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient1\u0027,"},{"lineNumber":504,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":505,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":506,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":510,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":511,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":513,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-2\u0027,"},{"lineNumber":514,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":515,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":517,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient2\u0027,"},{"lineNumber":518,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":522,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":523,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":524,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":525,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":526,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-3\u0027,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":531,"author":{"gitId":"-"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":534,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":537,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":538,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        otherResponses: [],"},{"lineNumber":541,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        feedbackQuestion: testQuestionAnonymousResponse2,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        allResponses: ["},{"lineNumber":546,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":548,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-4\u0027,"},{"lineNumber":549,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"            recipient: \u0027team1\u0027,"},{"lineNumber":553,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":555,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":557,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":559,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":561,"author":{"gitId":"-"},"content":"        responsesToSelf: [],"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        responsesFromSelf: ["},{"lineNumber":563,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"            isMissingResponse: false,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            responseId: \u0027resp-id-4\u0027,"},{"lineNumber":566,"author":{"gitId":"-"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":567,"author":{"gitId":"-"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":568,"author":{"gitId":"-"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"            recipient: \u0027team1\u0027,"},{"lineNumber":570,"author":{"gitId":"-"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"            responseDetails: {"},{"lineNumber":573,"author":{"gitId":"-"},"content":"              answer: \u0027\u003cp\u003easdf\u003c/p\u003e\u0027,"},{"lineNumber":574,"author":{"gitId":"-"},"content":"            } as FeedbackTextResponseDetails,"},{"lineNumber":575,"author":{"gitId":"-"},"content":"            instructorComments: [],"},{"lineNumber":576,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        otherResponses: [],"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":584,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":585,"author":{"gitId":"-"},"content":""},{"lineNumber":586,"author":{"gitId":"-"},"content":"  it(\u0027should fetch auth info on init\u0027, () \u003d\u003e {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":590,"author":{"gitId":"-"},"content":""},{"lineNumber":591,"author":{"gitId":"-"},"content":"    expect(component.courseId).toEqual(\u0027CS3281\u0027);"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionName).toEqual(\u0027Peer Feedback\u0027);"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    expect(component.regKey).toEqual(\u0027reg-key\u0027);"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    expect(component.loggedInUser).toEqual(\u0027user-id\u0027);"},{"lineNumber":595,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":596,"author":{"gitId":"-"},"content":""},{"lineNumber":597,"author":{"gitId":"-"},"content":"  it(\u0027should verify allowed access and used reg key\u0027, () \u003d\u003e {"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":599,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      isUsed: true,"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":603,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURLWithParamEncoding\u0027).mockImplementation();"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":608,"author":{"gitId":"-"},"content":""},{"lineNumber":609,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/sessions/result\u0027,"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        { courseid: \u0027CS3281\u0027, fsname: \u0027Peer Feedback\u0027 });"},{"lineNumber":612,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":613,"author":{"gitId":"-"},"content":""},{"lineNumber":614,"author":{"gitId":"-"},"content":"  it(\u0027should load info and create log for unused reg key that is allowed\u0027, () \u003d\u003e {"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":616,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":617,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":618,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    jest.spyOn(studentService, \u0027getStudent\u0027).mockReturnValue(of({"},{"lineNumber":623,"author":{"gitId":"-"},"content":"      name: \u0027student-name\u0027,"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      email: \u0027\u0027,"},{"lineNumber":625,"author":{"gitId":"-"},"content":"      courseId: \u0027\u0027,"},{"lineNumber":626,"author":{"gitId":"-"},"content":"      sectionName: \u0027\u0027,"},{"lineNumber":627,"author":{"gitId":"-"},"content":"      teamName: \u0027\u0027,"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionService, \u0027getFeedbackSession\u0027).mockReturnValue(of(testFeedbackSession));"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    const logSpy: SpyInstance \u003d jest.spyOn(logService, \u0027createFeedbackSessionLog\u0027).mockReturnValue(of(\u0027log created\u0027));"},{"lineNumber":631,"author":{"gitId":"-"},"content":""},{"lineNumber":632,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(\u0027student-name\u0027);"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    expect(component.session.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    expect(logSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":637,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":638,"author":{"gitId":"-"},"content":""},{"lineNumber":639,"author":{"gitId":"-"},"content":"  it(\u0027should fetch session results when loading feedback session\u0027, () \u003d\u003e {"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":641,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":642,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":643,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":645,"author":{"gitId":"-"},"content":""},{"lineNumber":646,"author":{"gitId":"-"},"content":"    const testFeedbackSessionResult: SessionResults \u003d {"},{"lineNumber":647,"author":{"gitId":"-"},"content":"      questions: ["},{"lineNumber":648,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":649,"author":{"gitId":"-"},"content":"          feedbackQuestion: testQuestion1,"},{"lineNumber":650,"author":{"gitId":"-"},"content":"          questionStatistics: \u0027\u0027,"},{"lineNumber":651,"author":{"gitId":"-"},"content":"          allResponses: [],"},{"lineNumber":652,"author":{"gitId":"-"},"content":"          responsesToSelf: [],"},{"lineNumber":653,"author":{"gitId":"-"},"content":"          responsesFromSelf: [],"},{"lineNumber":654,"author":{"gitId":"-"},"content":"          otherResponses: [],"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":656,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"          feedbackQuestion: testQuestion3,"},{"lineNumber":658,"author":{"gitId":"-"},"content":"          questionStatistics: \u0027\u0027,"},{"lineNumber":659,"author":{"gitId":"-"},"content":"          allResponses: [],"},{"lineNumber":660,"author":{"gitId":"-"},"content":"          responsesToSelf: [],"},{"lineNumber":661,"author":{"gitId":"-"},"content":"          responsesFromSelf: [],"},{"lineNumber":662,"author":{"gitId":"-"},"content":"          otherResponses: [],"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":665,"author":{"gitId":"-"},"content":"          feedbackQuestion: testQuestion2,"},{"lineNumber":666,"author":{"gitId":"-"},"content":"          questionStatistics: \u0027\u0027,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"          allResponses: [],"},{"lineNumber":668,"author":{"gitId":"-"},"content":"          responsesToSelf: [],"},{"lineNumber":669,"author":{"gitId":"-"},"content":"          responsesFromSelf: [],"},{"lineNumber":670,"author":{"gitId":"-"},"content":"          otherResponses: [],"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":672,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":676,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionService, \u0027getFeedbackSession\u0027).mockReturnValue(of(testFeedbackSession));"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionService, \u0027getFeedbackSessionResults\u0027)"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testFeedbackSessionResult));"},{"lineNumber":680,"author":{"gitId":"-"},"content":""},{"lineNumber":681,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":682,"author":{"gitId":"-"},"content":""},{"lineNumber":683,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith({"},{"lineNumber":685,"author":{"gitId":"-"},"content":"      courseId: \u0027CS3281\u0027,"},{"lineNumber":686,"author":{"gitId":"-"},"content":"      feedbackSessionName: \u0027Peer Feedback\u0027,"},{"lineNumber":687,"author":{"gitId":"-"},"content":"      intent: Intent.STUDENT_RESULT,"},{"lineNumber":688,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":689,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":690,"author":{"gitId":"-"},"content":"    expect(component.questions.map((question: QuestionOutput) \u003d\u003e question.feedbackQuestion.questionNumber))"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        .toEqual([1, 2, 3]);"},{"lineNumber":692,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":693,"author":{"gitId":"-"},"content":""},{"lineNumber":694,"author":{"gitId":"-"},"content":"  it(\u0027should deny access for reg key not belonging to logged in user\u0027, () \u003d\u003e {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":696,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":697,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":698,"author":{"gitId":"-"},"content":"      isValid: true,"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":700,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":701,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":702,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":703,"author":{"gitId":"-"},"content":""},{"lineNumber":704,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":707,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        `You are trying to access TEAMMATES using the Google account user-id, which"},{"lineNumber":709,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":710,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":711,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":712,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":714,"author":{"gitId":"-"},"content":""},{"lineNumber":715,"author":{"gitId":"-"},"content":"  it(\u0027should deny access for invalid reg key\u0027, () \u003d\u003e {"},{"lineNumber":716,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":717,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":718,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":719,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":721,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":722,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":723,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":724,"author":{"gitId":"-"},"content":""},{"lineNumber":725,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":726,"author":{"gitId":"-"},"content":""},{"lineNumber":727,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":728,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":730,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":731,"author":{"gitId":"-"},"content":""},{"lineNumber":732,"author":{"gitId":"-"},"content":"  it(\u0027should navigate away when error occurs\u0027, () \u003d\u003e {"},{"lineNumber":733,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(throwError({"},{"lineNumber":734,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is error\u0027 },"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":736,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":737,"author":{"gitId":"-"},"content":""},{"lineNumber":738,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":739,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":740,"author":{"gitId":"-"},"content":""},{"lineNumber":741,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":743,"author":{"gitId":"-"},"content":"        \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":744,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"-"},"content":"  it(\u0027should navigate to join course when user click on join course link\u0027, () \u003d\u003e {"},{"lineNumber":747,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":748,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027user\u0027;"},{"lineNumber":749,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":750,"author":{"gitId":"-"},"content":""},{"lineNumber":751,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":752,"author":{"gitId":"-"},"content":""},{"lineNumber":753,"author":{"gitId":"-"},"content":"    const btn: any \u003d fixture.debugElement.nativeElement"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        .querySelector(\u0027#join-course-btn\u0027);"},{"lineNumber":755,"author":{"gitId":"-"},"content":"    btn.click();"},{"lineNumber":756,"author":{"gitId":"-"},"content":""},{"lineNumber":757,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":758,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/join\u0027, { entitytype: \u0027student\u0027, key: \u0027reg-key\u0027 });"},{"lineNumber":759,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":760,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"fsgmhoward":13,"-":747}},{"path":"src/web/app/pages-session/session-result-page/session-result-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackSession, FeedbackSessionLogType,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus, FeedbackSessionSubmissionStatus,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  QuestionOutput, RegkeyValidity,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  SessionResults,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  SessionVisibleSetting, Student,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { FeedbackVisibilityType, Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { DEFAULT_NUMBER_OF_RETRY_ATTEMPTS } from \u0027../../../types/default-retry-attempts\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027../../components/error-report/error-report.component\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Feedback session result page."},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-result-page\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-result-page.component.html\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-result-page.component.scss\u0027],"},{"lineNumber":36,"author":{"gitId":"-"},"content":"})"},{"lineNumber":37,"author":{"gitId":"-"},"content":"export class SessionResultPageComponent implements OnInit {"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  Intent: typeof Intent \u003d Intent;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  session: FeedbackSession \u003d {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    timeZone: \u0027\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 0,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: 0,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    studentDeadlines: {},"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    instructorDeadlines: {},"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  questions: QuestionOutput[] \u003d [];"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  personName: string \u003d \u0027\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  personEmail: string \u003d \u0027\u0027;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  entityType: string \u003d \u0027student\u0027;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  regKey: string \u003d \u0027\u0027;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  loggedInUser: string \u003d \u0027\u0027;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  visibilityRecipient: FeedbackVisibilityType \u003d FeedbackVisibilityType.RECIPIENT;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  intent: Intent \u003d Intent.STUDENT_RESULT;"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"fsgmhoward"},"content":"  isFeedbackSessionDetailsLoading: boolean \u003d true;"},{"lineNumber":75,"author":{"gitId":"fsgmhoward"},"content":"  isFeedbackSessionResultsLoading: boolean \u003d true;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  hasFeedbackSessionResultsLoadingFailed: boolean \u003d false;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  retryAttempts: number \u003d DEFAULT_NUMBER_OF_RETRY_ATTEMPTS;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  constructor(private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"              private logService: LogService,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    this.route.data.pipe("},{"lineNumber":97,"author":{"gitId":"-"},"content":"        tap((data: any) \u003d\u003e {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          this.intent \u003d data.intent;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        switchMap(() \u003d\u003e this.route.queryParams),"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ).subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      this.regKey \u003d queryParams.key || \u0027\u0027;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      if (queryParams.entitytype \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.intent \u003d Intent.INSTRUCTOR_RESULT;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search.replace(/\u0026/g, \u0027%26\u0027)}`;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) \u003d\u003e {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (auth.user) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          this.loggedInUser \u003d auth.user.id;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (this.regKey) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"          this.authService.getAuthRegkeyValidity(this.regKey, this.intent).subscribe((resp: RegkeyValidity) \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (resp.isAllowedAccess) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              if (resp.isUsed) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                // The logged in user matches the registration key; redirect to the logged in URL"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"                this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":122,"author":{"gitId":"-"},"content":"                    this.router, `/web/${this.entityType}/sessions/result`,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":124,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                // Valid, unused registration key; load information based on the key"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                this.loadPersonName();"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                this.loadFeedbackSession();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            } else if (resp.isValid) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"              // At this point, registration key must already be used, otherwise access would be granted"},{"lineNumber":131,"author":{"gitId":"-"},"content":"              if (this.loggedInUser) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                // Registration key belongs to another user who is not the logged in user"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    `You are trying to access TEAMMATES using the Google account ${this.loggedInUser}, which"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                // There is no logged in user for a valid, used registration key, redirect to login page"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                // eslint-disable-next-line no-lonely-if"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                if (this.entityType \u003d\u003d\u003d \u0027student\u0027) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                } else if (this.entityType \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.instructorLoginUrl}`;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"              // The registration key is invalid"},{"lineNumber":150,"author":{"gitId":"-"},"content":"              this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                  \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else if (this.loggedInUser) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          // Load information based on logged in user"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          this.loadPersonName();"},{"lineNumber":160,"author":{"gitId":"-"},"content":"          this.loadFeedbackSession();"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"              \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      }, () \u003d\u003e {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  private loadPersonName(): void {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    switch (this.intent) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      case Intent.STUDENT_RESULT:"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        this.studentService.getStudent(this.courseId, \u0027\u0027, this.regKey).subscribe((student: Student) \u003d\u003e {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"          this.personName \u003d student.name;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"          this.personEmail \u003d student.email;"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"          this.logService.createFeedbackSessionLog({"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            courseId: this.courseId,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            studentEmail: this.personEmail,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logType: FeedbackSessionLogType.VIEW_RESULT,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"          }).subscribe("},{"lineNumber":185,"author":{"gitId":"-"},"content":"              () \u003d\u003e {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                // No action needed if log is successfully created."},{"lineNumber":187,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":188,"author":{"gitId":"-"},"content":"              () \u003d\u003e this.statusMessageService.showWarningToast(\u0027Failed to log feedback session view\u0027));"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      case Intent.INSTRUCTOR_RESULT:"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        this.instructorService.getInstructor({"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"          feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"          intent: this.intent,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"          this.personName \u003d instructor.name;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          this.personEmail \u003d instructor.email;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"  private loadFeedbackSession(): void {"},{"lineNumber":207,"author":{"gitId":"fsgmhoward"},"content":"    this.isFeedbackSessionDetailsLoading \u003d true;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionResultsLoading \u003d true;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":214,"author":{"gitId":"fsgmhoward"},"content":"    })"},{"lineNumber":215,"author":{"gitId":"fsgmhoward"},"content":"    .pipe(finalize(() \u003d\u003e { this.isFeedbackSessionDetailsLoading \u003d false; }))"},{"lineNumber":216,"author":{"gitId":"fsgmhoward"},"content":"    .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      this.session \u003d feedbackSession;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":220,"author":{"gitId":"-"},"content":"          .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      this.formattedSessionClosingTime \u003d this.timezoneService"},{"lineNumber":222,"author":{"gitId":"-"},"content":"          .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSessionResults({"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        courseId: this.courseId,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        intent: this.intent,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        key: this.regKey,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":229,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.isFeedbackSessionResultsLoading \u003d false;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":232,"author":{"gitId":"-"},"content":"          .subscribe((sessionResults: SessionResults) \u003d\u003e {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            this.questions \u003d sessionResults.questions.sort("},{"lineNumber":234,"author":{"gitId":"-"},"content":"                (a: QuestionOutput, b: QuestionOutput) \u003d\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    a.feedbackQuestion.questionNumber - b.feedbackQuestion.questionNumber);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            this.handleError(resp);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionResultsLoading \u003d false;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      this.handleError(resp);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   * Redirects to join course link for unregistered student/instructor."},{"lineNumber":247,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  joinCourseForUnregisteredEntity(): void {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/join\u0027, { entitytype: this.entityType, key: this.regKey });"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"  navigateToSessionReportPage(): void {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/instructor/sessions/report\u0027,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"  retryLoadingFeedbackSessionResults(): void {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionResultsLoadingFailed \u003d false;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003e\u003d 0) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      this.retryAttempts -\u003d 1;"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    this.loadFeedbackSession();"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":266,"author":{"gitId":"-"},"content":"   * Handles error according to number of attempts at retry"},{"lineNumber":267,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  handleError(resp: ErrorMessageOutput): void {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionResultsLoadingFailed \u003d true;"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003c 0) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      const report: NgbModalRef \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      report.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      report.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":6,"-":272}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { NgxPageScrollCoreModule } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import SpyInstance \u003d jest.SpyInstance;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  CommentVisibilityType,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackContributionQuestionDetails,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackContributionResponseDetails,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackMcqResponseDetails,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackMsqQuestionDetails,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackMsqResponseDetails,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackNumericalScaleResponseDetails,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  FeedbackRankOptionsQuestionDetails,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  FeedbackRankOptionsResponseDetails,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  FeedbackRubricQuestionDetails,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  FeedbackRubricResponseDetails,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  FeedbackTextResponseDetails,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  JoinState,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModule,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form.module\u0027;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"import { SessionSubmissionPageComponent } from \u0027./session-submission-page.component\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"describe(\u0027SessionSubmissionPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  const deepCopy: \u003cT\u003e(obj: T) \u003d\u003e T \u003d \u003cT\u003e(obj: T) \u003d\u003e JSON.parse(JSON.stringify(obj));"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  const testStudent: Student \u003d {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    email: \u0027alice@tmms.com\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    courseId: \u0027course-id\u0027,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    name: \u0027Alice Betsy\u0027,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    teamName: \u0027Team 1\u0027,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    sectionName: \u0027Section 1\u0027,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  const testInstructor: Instructor \u003d {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    courseId: \u0027course-id\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    email: \u0027test@example.com\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    name: \u0027Instructor Ho\u0027,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    joinState: JoinState.JOINED,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  const testOpenFeedbackSession: FeedbackSession \u003d {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    instructions: \u0027Instructions\u0027,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 1000000000000,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: Date.now() + 10 * 60 * 1000, // 10 minutes before closing"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    studentDeadlines: {},"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    instructorDeadlines: {},"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  const testComment: FeedbackResponseComment \u003d {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    commentGiver: \u0027comment giver\u0027,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    lastEditorEmail: \u0027last-editor@email.com\u0027,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    feedbackResponseCommentId: 1,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    commentText: \u0027comment text\u0027,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    createdAt: 10000000,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    lastEditedAt: 20000000,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    isVisibilityFollowingFeedbackQuestion: true,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-1\u0027,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      originalRecipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text here\u0027,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm2: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-2\u0027,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027recipient-identifier\u0027,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      originalRecipientIdentifier: \u0027recipient-identifier\u0027,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"  const testTextRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-3\u0027,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      answer: \u0027answer\u0027,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    } as FeedbackTextResponseDetails,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text here\u0027,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm3: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-4\u0027,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      answer: \u0027barry-harris-answer\u0027,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"  const testMcqRecipientSubmissionForm4: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-5\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      answer: \u0027gene-harris-answer\u0027,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"  const testMsqRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-6\u0027,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      answers: [\u0027answer 1\u0027, \u0027answer 2\u0027],"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      isOther: false,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      otherFieldContent: \u0027other field content\u0027,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MSQ,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    } as FeedbackMsqResponseDetails,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    commentByGiver: {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      originalComment: testComment,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      originalRecipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        commentText: \u0027comment text\u0027,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        showCommentTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        showGiverNameTo: [CommentVisibilityType.GIVER, CommentVisibilityType.RECIPIENT],"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  const testNumscaleRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-7\u0027,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"  const testConstsumRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-8\u0027,"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      answers: [7, 13],"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"  const testContribRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-9\u0027,"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      answer: 20,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"  const testRubricRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-10\u0027,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      answer: [3, 4],"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"  const testRankOptionsRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-11\u0027,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      answers: [2, 1],"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    } as FeedbackRankOptionsResponseDetails,"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"  const testRankRecipientsRecipientSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    responseId: \u0027response-id-12\u0027,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      minOptionsToBeRanked: 1,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      maxOptionsToBeRanked: 2,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      areDuplicatesAllowed: false,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    isValid: true,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"  const testResponse1: FeedbackResponse \u003d {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    feedbackResponseId: \u0027response-id-4\u0027,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    giverIdentifier: \u0027giver-identifier\u0027,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      answer: \u0027barry-harris-answer\u0027,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"  const testResponse2: FeedbackResponse \u003d {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    feedbackResponseId: \u0027response-id-5\u0027,"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    giverIdentifier: \u0027giver-identifier\u0027,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      answer: \u0027gene-harris-answer\u0027,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    } as FeedbackMcqResponseDetails,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"  const testMcqQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-mcq\u0027,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    questionNumber: 1,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMcqRecipientSubmissionForm],"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.STUDENTS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"  const testMcqQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-mcq-2\u0027,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    questionNumber: 2,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      mcqChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027, \u0027choice 3\u0027],"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.TEAMS,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [],"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    isLoaded: false,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"  const testTextQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-text\u0027,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    questionNumber: 3,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"      questionText: \u0027question text\u0027,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testTextRecipientSubmissionForm],"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":373,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"  const testMsqQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-msq\u0027,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    questionNumber: 4,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    questionBrief: \u0027MSQ question\u0027,"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MSQ,"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      msqChoices: [\u0027first\u0027, \u0027second\u0027, \u0027third\u0027],"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      otherEnabled: false,"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      hasAssignedWeights: true,"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      msqWeights: [1, 2, 3],"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      maxSelectableChoices: 2,"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      minSelectableChoices: 1,"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    } as FeedbackMsqQuestionDetails,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testMsqRecipientSubmissionForm],"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":400,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"  const testNumscaleQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-numscale\u0027,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    questionNumber: 5,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    questionBrief: \u0027numerical scale question\u0027,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      minScale: 1,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      maxScale: 10,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      step: 1,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleQuestionDetails,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testNumscaleRecipientSubmissionForm],"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":424,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"  const testConstsumQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-constsum\u0027,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    questionNumber: 6,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    questionBrief: \u0027constant sum question\u0027,"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONSTSUM_RECIPIENTS,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"      constSumOptions: [\u0027option 1\u0027, \u0027option 2\u0027],"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      distributeToRecipients: true,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      pointsPerOption: true,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"      forceUnevenDistribution: false,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      distributePointsFor: \u0027distribute points for\u0027,"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      points: 20,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumQuestionDetails,"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testConstsumRecipientSubmissionForm],"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":451,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":452,"author":{"gitId":"-"},"content":""},{"lineNumber":453,"author":{"gitId":"-"},"content":"  const testContribQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-contrib\u0027,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    questionNumber: 7,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    questionBrief: \u0027contribution question\u0027,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      isNotSureAllowed: false,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    } as FeedbackContributionQuestionDetails,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testContribRecipientSubmissionForm],"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":473,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"  const testRubricQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rubric\u0027,"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    questionNumber: 8,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"      hasAssignedWeights: false,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      rubricWeightsForEachCell: [[1, 2], [2, 1]],"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      rubricChoices: [\u0027choice 1\u0027, \u0027choice 2\u0027],"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      rubricSubQuestions: [\u0027subquestion 1\u0027, \u0027subquestion 2\u0027],"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      rubricDescriptions: [[\u0027description 1\u0027, \u0027description 2\u0027], [\u0027description 3\u0027, \u0027description 4\u0027]],"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    } as FeedbackRubricQuestionDetails,"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRubricRecipientSubmissionForm],"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":499,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"  const testRankOptionsQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rank-options\u0027,"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    questionNumber: 9,"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RANK_OPTIONS,"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      options: [\u0027option 1\u0027, \u0027option 2\u0027],"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    } as FeedbackRankOptionsQuestionDetails,"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRankOptionsRecipientSubmissionForm],"},{"lineNumber":514,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":521,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"  const testRankRecipientsQuestionSubmissionForm: QuestionSubmissionFormModel \u003d {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027feedback-question-id-rank-recipients\u0027,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    questionNumber: 10,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    questionBrief: \u0027question brief\u0027,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    questionDescription: \u0027question description\u0027,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      minOptionsToBeRanked: 1,"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      maxOptionsToBeRanked: 2,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      areDuplicatesAllowed: false,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.INSTRUCTORS,"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    recipientList: [{ recipientName: \u0027Barry Harris\u0027, recipientIdentifier: \u0027barry-harris-id\u0027 }],"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [testRankRecipientsRecipientSubmissionForm],"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 5,"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    showResponsesTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    showGiverNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [FeedbackVisibilityType.RECIPIENT, FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    isLoaded: true,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"  const testInfo: AuthInfo \u003d {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    masquerade: false,"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    user: {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      id: \u0027user-id\u0027,"},{"lineNumber":551,"author":{"gitId":"-"},"content":"      isAdmin: false,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      isInstructor: false,"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      isStudent: true,"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      isMaintainer: false,"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":556,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"  const testQueryParams: any \u003d {"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    courseid: \u0027CS3281\u0027,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    fsname: \u0027Feedback Session Name\u0027,"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    key: \u0027reg-key\u0027,"},{"lineNumber":562,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":563,"author":{"gitId":"-"},"content":""},{"lineNumber":564,"author":{"gitId":"-"},"content":"  const getFeedbackSessionArgs: any \u003d {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    courseId: testQueryParams.courseid,"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    feedbackSessionName: testQueryParams.fsname,"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    intent: Intent.STUDENT_SUBMISSION,"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    key: testQueryParams.key,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    moderatedPerson: \u0027\u0027,"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    previewAs: \u0027\u0027,"},{"lineNumber":571,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":572,"author":{"gitId":"-"},"content":""},{"lineNumber":573,"author":{"gitId":"-"},"content":"  let component: SessionSubmissionPageComponent;"},{"lineNumber":574,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cSessionSubmissionPageComponent\u003e;"},{"lineNumber":575,"author":{"gitId":"-"},"content":"  let authService: AuthService;"},{"lineNumber":576,"author":{"gitId":"-"},"content":"  let navService: NavigationService;"},{"lineNumber":577,"author":{"gitId":"-"},"content":"  let studentService: StudentService;"},{"lineNumber":578,"author":{"gitId":"-"},"content":"  let instructorService: InstructorService;"},{"lineNumber":579,"author":{"gitId":"-"},"content":"  let feedbackSessionsService: FeedbackSessionsService;"},{"lineNumber":580,"author":{"gitId":"-"},"content":"  let feedbackResponsesService: FeedbackResponsesService;"},{"lineNumber":581,"author":{"gitId":"-"},"content":"  let feedbackResponseCommentService: FeedbackResponseCommentService;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"  let feedbackQuestionsService: FeedbackQuestionsService;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"  let simpleModalService: SimpleModalService;"},{"lineNumber":584,"author":{"gitId":"-"},"content":"  let ngbModal: NgbModal;"},{"lineNumber":585,"author":{"gitId":"-"},"content":""},{"lineNumber":586,"author":{"gitId":"-"},"content":"  beforeEach(waitForAsync(() \u003d\u003e {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      declarations: [SessionSubmissionPageComponent, SavingCompleteModalComponent],"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":590,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        NgxPageScrollCoreModule,"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        QuestionSubmissionFormModule,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":599,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      providers: ["},{"lineNumber":601,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":602,"author":{"gitId":"-"},"content":"          provide: ActivatedRoute,"},{"lineNumber":603,"author":{"gitId":"-"},"content":"          useValue: {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"            data: {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"              intent: Intent.STUDENT_SUBMISSION,"},{"lineNumber":606,"author":{"gitId":"-"},"content":"              pipe: () \u003d\u003e {"},{"lineNumber":607,"author":{"gitId":"-"},"content":"                return {"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                  subscribe: (fn: (value: any) \u003d\u003e void) \u003d\u003e fn(testQueryParams),"},{"lineNumber":609,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":610,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":611,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":612,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":614,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":617,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(SessionSubmissionPageComponent);"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    instructorService \u003d TestBed.inject(InstructorService);"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    feedbackQuestionsService \u003d TestBed.inject(FeedbackQuestionsService);"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    feedbackResponsesService \u003d TestBed.inject(FeedbackResponsesService);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    feedbackResponseCommentService \u003d TestBed.inject(FeedbackResponseCommentService);"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    feedbackSessionsService \u003d TestBed.inject(FeedbackSessionsService);"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    simpleModalService \u003d TestBed.inject(SimpleModalService);"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    ngbModal \u003d TestBed.inject(NgbModal);"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":633,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":634,"author":{"gitId":"-"},"content":""},{"lineNumber":635,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":637,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":638,"author":{"gitId":"-"},"content":""},{"lineNumber":639,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":641,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"  it(\u0027should snap when feedback session questions have failed to load\u0027, () \u003d\u003e {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    component.retryAttempts \u003d 0;"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    component.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":646,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":647,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":648,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":649,"author":{"gitId":"-"},"content":""},{"lineNumber":650,"author":{"gitId":"-"},"content":"  it(\u0027should snap when saving responses\u0027, () \u003d\u003e {"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    component.isSavingResponses \u003d true;"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":654,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027alice\u0027;"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":660,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":662,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":663,"author":{"gitId":"-"},"content":""},{"lineNumber":664,"author":{"gitId":"-"},"content":"  it(\u0027should snap with user that is not logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":665,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027\u0027;"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":668,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":670,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":671,"author":{"gitId":"-"},"content":""},{"lineNumber":672,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session and user details\u0027, () \u003d\u003e {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    component.courseId \u003d \u0027test.exa-demo\u0027;"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    component.feedbackSessionName \u003d \u0027First team feedback session\u0027;"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"    component.loggedInUser \u003d \u0027logged-in-user\u0027;"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    component.personName \u003d \u0027person name\u0027;"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    component.personEmail \u003d \u0027person@email.com\u0027;"},{"lineNumber":679,"author":{"gitId":"-"},"content":"    component.formattedSessionOpeningTime \u003d \u0027Sun, 01 Apr, 2012, 11:59 PM +08\u0027;"},{"lineNumber":680,"author":{"gitId":"-"},"content":"    component.formattedSessionClosingTime \u003d \u0027Mon, 02 Apr, 2012, 11:59 PM +08\u0027;"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    component.feedbackSessionInstructions \u003d \u0027Please give your feedback based on the following questions.\u0027;"},{"lineNumber":682,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":683,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":685,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":686,"author":{"gitId":"-"},"content":""},{"lineNumber":687,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session question submission forms\u0027, () \u003d\u003e {"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d ["},{"lineNumber":689,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm,"},{"lineNumber":690,"author":{"gitId":"-"},"content":"      testTextQuestionSubmissionForm,"},{"lineNumber":691,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm2,"},{"lineNumber":692,"author":{"gitId":"-"},"content":"      testMsqQuestionSubmissionForm,"},{"lineNumber":693,"author":{"gitId":"-"},"content":"      testNumscaleQuestionSubmissionForm,"},{"lineNumber":694,"author":{"gitId":"-"},"content":"      testConstsumQuestionSubmissionForm,"},{"lineNumber":695,"author":{"gitId":"-"},"content":"      testContribQuestionSubmissionForm,"},{"lineNumber":696,"author":{"gitId":"-"},"content":"      testRubricQuestionSubmissionForm,"},{"lineNumber":697,"author":{"gitId":"-"},"content":"      testRankOptionsQuestionSubmissionForm,"},{"lineNumber":698,"author":{"gitId":"-"},"content":"      testRankRecipientsQuestionSubmissionForm,"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":700,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":701,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":702,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":704,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"  it(\u0027should snap with feedback session question submission forms when disabled\u0027, () \u003d\u003e {"},{"lineNumber":707,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d ["},{"lineNumber":708,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm,"},{"lineNumber":709,"author":{"gitId":"-"},"content":"      testTextQuestionSubmissionForm,"},{"lineNumber":710,"author":{"gitId":"-"},"content":"      testMcqQuestionSubmissionForm2,"},{"lineNumber":711,"author":{"gitId":"-"},"content":"      testMsqQuestionSubmissionForm,"},{"lineNumber":712,"author":{"gitId":"-"},"content":"      testNumscaleQuestionSubmissionForm,"},{"lineNumber":713,"author":{"gitId":"-"},"content":"      testConstsumQuestionSubmissionForm,"},{"lineNumber":714,"author":{"gitId":"-"},"content":"      testContribQuestionSubmissionForm,"},{"lineNumber":715,"author":{"gitId":"-"},"content":"      testRubricQuestionSubmissionForm,"},{"lineNumber":716,"author":{"gitId":"-"},"content":"      testRankOptionsQuestionSubmissionForm,"},{"lineNumber":717,"author":{"gitId":"-"},"content":"      testRankRecipientsQuestionSubmissionForm,"},{"lineNumber":718,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    component.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionLoading \u003d false;"},{"lineNumber":721,"author":{"gitId":"-"},"content":"    component.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":722,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":723,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":724,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":725,"author":{"gitId":"-"},"content":""},{"lineNumber":726,"author":{"gitId":"-"},"content":"  it(\u0027should fetch auth info on init\u0027, () \u003d\u003e {"},{"lineNumber":727,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":728,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    expect(component.intent).toEqual(Intent.STUDENT_SUBMISSION);"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    expect(component.courseId).toEqual(testQueryParams.courseid);"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionName).toEqual(testQueryParams.fsname);"},{"lineNumber":732,"author":{"gitId":"-"},"content":"    expect(component.regKey).toEqual(testQueryParams.key);"},{"lineNumber":733,"author":{"gitId":"-"},"content":"    expect(component.loggedInUser).toEqual(testInfo.user?.id);"},{"lineNumber":734,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"-"},"content":"  it(\u0027should verify allowed access with used reg key\u0027, () \u003d\u003e {"},{"lineNumber":737,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"      isAllowedAccess: true,"},{"lineNumber":739,"author":{"gitId":"-"},"content":"      isUsed: true,"},{"lineNumber":740,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":741,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":743,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":744,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURLWithParamEncoding\u0027).mockImplementation();"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":747,"author":{"gitId":"-"},"content":""},{"lineNumber":748,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":749,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/sessions/submission\u0027,"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        { courseid: \u0027CS3281\u0027, fsname: \u0027Feedback Session Name\u0027 });"},{"lineNumber":751,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":752,"author":{"gitId":"-"},"content":""},{"lineNumber":753,"author":{"gitId":"-"},"content":"  it(\u0027should deny unallowed access with valid reg key for logged in user\u0027, () \u003d\u003e {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":755,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":756,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":757,"author":{"gitId":"-"},"content":"      isValid: true,"},{"lineNumber":758,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":759,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":760,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":761,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":762,"author":{"gitId":"-"},"content":""},{"lineNumber":763,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":767,"author":{"gitId":"-"},"content":"        `You are trying to access TEAMMATES using the Google account user-id, which"},{"lineNumber":768,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":769,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":770,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":771,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":772,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":773,"author":{"gitId":"-"},"content":""},{"lineNumber":774,"author":{"gitId":"-"},"content":"  it(\u0027should deny unallowed access with invalid reg key\u0027, () \u003d\u003e {"},{"lineNumber":775,"author":{"gitId":"-"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":776,"author":{"gitId":"-"},"content":"      isAllowedAccess: false,"},{"lineNumber":777,"author":{"gitId":"-"},"content":"      isUsed: false,"},{"lineNumber":778,"author":{"gitId":"-"},"content":"      isValid: false,"},{"lineNumber":779,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":780,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthUser\u0027).mockReturnValue(of(testInfo));"},{"lineNumber":781,"author":{"gitId":"-"},"content":"    jest.spyOn(authService, \u0027getAuthRegkeyValidity\u0027).mockReturnValue(of(testValidity));"},{"lineNumber":782,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateWithErrorMessage\u0027).mockImplementation();"},{"lineNumber":783,"author":{"gitId":"-"},"content":""},{"lineNumber":784,"author":{"gitId":"-"},"content":"    component.ngOnInit();"},{"lineNumber":785,"author":{"gitId":"-"},"content":""},{"lineNumber":786,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":787,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/front\u0027,"},{"lineNumber":788,"author":{"gitId":"-"},"content":"        \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":789,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":790,"author":{"gitId":"-"},"content":""},{"lineNumber":791,"author":{"gitId":"-"},"content":"  it(\u0027should load a student name\u0027, () \u003d\u003e {"},{"lineNumber":792,"author":{"gitId":"-"},"content":"    component.intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    jest.spyOn(studentService, \u0027getStudent\u0027).mockReturnValue(of(testStudent));"},{"lineNumber":794,"author":{"gitId":"-"},"content":"    component.loadPersonName();"},{"lineNumber":795,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(testStudent.name);"},{"lineNumber":796,"author":{"gitId":"-"},"content":"    expect(component.personEmail).toEqual(testStudent.email);"},{"lineNumber":797,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":798,"author":{"gitId":"-"},"content":""},{"lineNumber":799,"author":{"gitId":"-"},"content":"  it(\u0027should load an instructor name\u0027, () \u003d\u003e {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"    component.intent \u003d Intent.INSTRUCTOR_SUBMISSION;"},{"lineNumber":801,"author":{"gitId":"-"},"content":"    jest.spyOn(instructorService, \u0027getInstructor\u0027).mockReturnValue(of(testInstructor));"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    component.loadPersonName();"},{"lineNumber":803,"author":{"gitId":"-"},"content":"    expect(component.personName).toEqual(testInstructor.name);"},{"lineNumber":804,"author":{"gitId":"-"},"content":"    expect(component.personEmail).toEqual(testInstructor.email);"},{"lineNumber":805,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":806,"author":{"gitId":"-"},"content":""},{"lineNumber":807,"author":{"gitId":"-"},"content":"  it(\u0027should join course for unregistered student\u0027, () \u003d\u003e {"},{"lineNumber":808,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":809,"author":{"gitId":"-"},"content":"    component.joinCourseForUnregisteredEntity();"},{"lineNumber":810,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/join\u0027,"},{"lineNumber":812,"author":{"gitId":"-"},"content":"        { entitytype: \u0027student\u0027, key: testQueryParams.key });"},{"lineNumber":813,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":814,"author":{"gitId":"-"},"content":""},{"lineNumber":815,"author":{"gitId":"-"},"content":"  it(\u0027should load an open feedback session\u0027, () \u003d\u003e {"},{"lineNumber":816,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":817,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testOpenFeedbackSession));"},{"lineNumber":818,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":819,"author":{"gitId":"-"},"content":""},{"lineNumber":820,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":821,"author":{"gitId":"-"},"content":""},{"lineNumber":822,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":825,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Will Be Closing Soon!\u0027,"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, \u0027Warning: you have less than 15 minutes before the submission deadline expires!\u0027);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testOpenFeedbackSession.instructions);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testOpenFeedbackSession.submissionStatus);"},{"lineNumber":829,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testOpenFeedbackSession.timeZone);"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(false);"},{"lineNumber":831,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"  it(\u0027should load a closed feedback session\u0027, () \u003d\u003e {"},{"lineNumber":834,"author":{"gitId":"-"},"content":"    const testClosedFeedbackSession: FeedbackSession \u003d deepCopy(testOpenFeedbackSession);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    testClosedFeedbackSession.submissionStatus \u003d FeedbackSessionSubmissionStatus.CLOSED;"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":837,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testClosedFeedbackSession));"},{"lineNumber":838,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":839,"author":{"gitId":"-"},"content":""},{"lineNumber":840,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":841,"author":{"gitId":"-"},"content":""},{"lineNumber":842,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":844,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":845,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Closed\u0027, SimpleModalType.WARNING, expect.anything());"},{"lineNumber":846,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testClosedFeedbackSession.instructions);"},{"lineNumber":847,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testClosedFeedbackSession.submissionStatus);"},{"lineNumber":848,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testClosedFeedbackSession.timeZone);"},{"lineNumber":849,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(true);"},{"lineNumber":850,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":851,"author":{"gitId":"-"},"content":""},{"lineNumber":852,"author":{"gitId":"-"},"content":"  it(\u0027should load a visible not open feedback session\u0027, () \u003d\u003e {"},{"lineNumber":853,"author":{"gitId":"-"},"content":"    const testVisibleNotOpenFeedbackSession: FeedbackSession \u003d deepCopy(testOpenFeedbackSession);"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    testVisibleNotOpenFeedbackSession.submissionStatus \u003d FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN;"},{"lineNumber":855,"author":{"gitId":"-"},"content":"    const fsSpy: SpyInstance \u003d jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027)"},{"lineNumber":856,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testVisibleNotOpenFeedbackSession));"},{"lineNumber":857,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":860,"author":{"gitId":"-"},"content":""},{"lineNumber":861,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":862,"author":{"gitId":"-"},"content":"    expect(fsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":863,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":864,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Not Open\u0027, SimpleModalType.WARNING, expect.anything());"},{"lineNumber":865,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionInstructions).toEqual(testVisibleNotOpenFeedbackSession.instructions);"},{"lineNumber":866,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionSubmissionStatus).toEqual(testVisibleNotOpenFeedbackSession.submissionStatus);"},{"lineNumber":867,"author":{"gitId":"-"},"content":"    expect(component.feedbackSessionTimezone).toEqual(testVisibleNotOpenFeedbackSession.timeZone);"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    expect(component.isSubmissionFormsDisabled).toEqual(true);"},{"lineNumber":869,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":870,"author":{"gitId":"-"},"content":""},{"lineNumber":871,"author":{"gitId":"-"},"content":"  it(\u0027should redirect when loading non-existent feedback session\u0027, () \u003d\u003e {"},{"lineNumber":872,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027).mockReturnValue(throwError({"},{"lineNumber":873,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is an error\u0027 },"},{"lineNumber":874,"author":{"gitId":"-"},"content":"      status: 404,"},{"lineNumber":875,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":876,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":878,"author":{"gitId":"-"},"content":""},{"lineNumber":879,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":880,"author":{"gitId":"-"},"content":""},{"lineNumber":881,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":882,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Feedback Session Does Not Exist!\u0027, SimpleModalType.DANGER,"},{"lineNumber":883,"author":{"gitId":"-"},"content":"        \u0027The session does not exist (most likely deleted by the instructor after the submission link was sent).\u0027);"},{"lineNumber":884,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":885,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/home\u0027);"},{"lineNumber":886,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":887,"author":{"gitId":"-"},"content":""},{"lineNumber":888,"author":{"gitId":"-"},"content":"  it(\u0027should redirect when loading non-viewable feedback session\u0027, () \u003d\u003e {"},{"lineNumber":889,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackSessionsService, \u0027getFeedbackSession\u0027).mockReturnValue(throwError({"},{"lineNumber":890,"author":{"gitId":"-"},"content":"      error: { message: \u0027This is an error\u0027 },"},{"lineNumber":891,"author":{"gitId":"-"},"content":"      status: 403,"},{"lineNumber":892,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":893,"author":{"gitId":"-"},"content":"    const navSpy: SpyInstance \u003d jest.spyOn(navService, \u0027navigateByURL\u0027).mockImplementation();"},{"lineNumber":894,"author":{"gitId":"-"},"content":"    const modalSpy: SpyInstance \u003d jest.spyOn(simpleModalService, \u0027openInformationModal\u0027).mockImplementation();"},{"lineNumber":895,"author":{"gitId":"-"},"content":""},{"lineNumber":896,"author":{"gitId":"-"},"content":"    component.loadFeedbackSession();"},{"lineNumber":897,"author":{"gitId":"-"},"content":""},{"lineNumber":898,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":899,"author":{"gitId":"-"},"content":"    expect(modalSpy).toHaveBeenLastCalledWith(\u0027Not Authorised To Access!\u0027, SimpleModalType.DANGER, \u0027This is an error\u0027);"},{"lineNumber":900,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":901,"author":{"gitId":"-"},"content":"    expect(navSpy).toHaveBeenLastCalledWith(expect.anything(), \u0027/web/student/home\u0027);"},{"lineNumber":902,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":903,"author":{"gitId":"-"},"content":""},{"lineNumber":904,"author":{"gitId":"-"},"content":"  it(\u0027should load feedback questions\u0027, () \u003d\u003e {"},{"lineNumber":905,"author":{"gitId":"-"},"content":"    const testFeedbackQuestions: FeedbackQuestions \u003d {"},{"lineNumber":906,"author":{"gitId":"-"},"content":"      questions: ["},{"lineNumber":907,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":908,"author":{"gitId":"-"},"content":"          feedbackQuestionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":909,"author":{"gitId":"-"},"content":"          questionNumber: testMcqQuestionSubmissionForm2.questionNumber,"},{"lineNumber":910,"author":{"gitId":"-"},"content":"          questionBrief: testMcqQuestionSubmissionForm2.questionBrief,"},{"lineNumber":911,"author":{"gitId":"-"},"content":"          questionDescription: testMcqQuestionSubmissionForm2.questionDescription,"},{"lineNumber":912,"author":{"gitId":"-"},"content":"          questionDetails: testMcqQuestionSubmissionForm2.questionDetails,"},{"lineNumber":913,"author":{"gitId":"-"},"content":"          questionType: testMcqQuestionSubmissionForm2.questionType,"},{"lineNumber":914,"author":{"gitId":"-"},"content":"          giverType: testMcqQuestionSubmissionForm2.giverType,"},{"lineNumber":915,"author":{"gitId":"-"},"content":"          recipientType: testMcqQuestionSubmissionForm2.recipientType,"},{"lineNumber":916,"author":{"gitId":"-"},"content":"          numberOfEntitiesToGiveFeedbackToSetting:"},{"lineNumber":917,"author":{"gitId":"-"},"content":"            testMcqQuestionSubmissionForm2.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":918,"author":{"gitId":"-"},"content":"          customNumberOfEntitiesToGiveFeedbackTo: testMcqQuestionSubmissionForm2.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":919,"author":{"gitId":"-"},"content":"          showResponsesTo: testMcqQuestionSubmissionForm2.showResponsesTo,"},{"lineNumber":920,"author":{"gitId":"-"},"content":"          showGiverNameTo: testMcqQuestionSubmissionForm2.showGiverNameTo,"},{"lineNumber":921,"author":{"gitId":"-"},"content":"          showRecipientNameTo: testMcqQuestionSubmissionForm2.showRecipientNameTo,"},{"lineNumber":922,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":923,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":924,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":925,"author":{"gitId":"-"},"content":""},{"lineNumber":926,"author":{"gitId":"-"},"content":"    const getQuestionsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027getFeedbackQuestions\u0027)"},{"lineNumber":927,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testFeedbackQuestions));"},{"lineNumber":928,"author":{"gitId":"-"},"content":""},{"lineNumber":929,"author":{"gitId":"-"},"content":"    component.loadFeedbackQuestions();"},{"lineNumber":930,"author":{"gitId":"-"},"content":""},{"lineNumber":931,"author":{"gitId":"-"},"content":"    expect(getQuestionsSpy).toHaveBeenLastCalledWith(getFeedbackSessionArgs);"},{"lineNumber":932,"author":{"gitId":"-"},"content":"    expect(component.questionSubmissionForms.length).toEqual(1);"},{"lineNumber":933,"author":{"gitId":"-"},"content":"    expect(component.questionSubmissionForms[0]).toEqual(testMcqQuestionSubmissionForm2);"},{"lineNumber":934,"author":{"gitId":"-"},"content":"    expect(component.questionsNeedingSubmission.length).toEqual(0);"},{"lineNumber":935,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":936,"author":{"gitId":"-"},"content":""},{"lineNumber":937,"author":{"gitId":"-"},"content":"  it(\u0027should load the recipients and responses of a question if not yet loaded\u0027, () \u003d\u003e {"},{"lineNumber":938,"author":{"gitId":"-"},"content":"    const testFeedbackQuestionRecipients: FeedbackQuestionRecipients \u003d {"},{"lineNumber":939,"author":{"gitId":"-"},"content":"      recipients: ["},{"lineNumber":940,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":941,"author":{"gitId":"-"},"content":"          name: \u0027Barry Harris\u0027,"},{"lineNumber":942,"author":{"gitId":"-"},"content":"          identifier: \u0027barry-harris-id\u0027,"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":944,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":945,"author":{"gitId":"-"},"content":"          name: \u0027Gene Harris\u0027,"},{"lineNumber":946,"author":{"gitId":"-"},"content":"          identifier: \u0027gene-harris-id\u0027,"},{"lineNumber":947,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":948,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":949,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":950,"author":{"gitId":"-"},"content":"    const testExistingResponses: FeedbackResponses \u003d {"},{"lineNumber":951,"author":{"gitId":"-"},"content":"      responses: [testResponse1, testResponse2],"},{"lineNumber":952,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":953,"author":{"gitId":"-"},"content":""},{"lineNumber":954,"author":{"gitId":"-"},"content":"    const loadRecipientsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027loadFeedbackQuestionRecipients\u0027)"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testFeedbackQuestionRecipients));"},{"lineNumber":956,"author":{"gitId":"-"},"content":"    const getResponseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027getFeedbackResponse\u0027)"},{"lineNumber":957,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testExistingResponses));"},{"lineNumber":958,"author":{"gitId":"-"},"content":""},{"lineNumber":959,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testMcqQuestionSubmissionForm2];"},{"lineNumber":960,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({ visible: true }, testMcqQuestionSubmissionForm2);"},{"lineNumber":961,"author":{"gitId":"-"},"content":""},{"lineNumber":962,"author":{"gitId":"-"},"content":"    expect(loadRecipientsSpy).toHaveBeenLastCalledWith({"},{"lineNumber":963,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":964,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":965,"author":{"gitId":"-"},"content":"      moderatedPerson: \u0027\u0027,"},{"lineNumber":966,"author":{"gitId":"-"},"content":"      previewAs: \u0027\u0027,"},{"lineNumber":967,"author":{"gitId":"-"},"content":"      questionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":968,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":969,"author":{"gitId":"-"},"content":"    expect(getResponseSpy).toHaveBeenLastCalledWith({"},{"lineNumber":970,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":971,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":972,"author":{"gitId":"-"},"content":"      moderatedPerson: \u0027\u0027,"},{"lineNumber":973,"author":{"gitId":"-"},"content":"      questionId: testMcqQuestionSubmissionForm2.feedbackQuestionId,"},{"lineNumber":974,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":975,"author":{"gitId":"-"},"content":"    expect(testMcqQuestionSubmissionForm2.isLoading).toBe(false);"},{"lineNumber":976,"author":{"gitId":"-"},"content":"    expect(testMcqQuestionSubmissionForm2.isLoaded).toBe(true);"},{"lineNumber":977,"author":{"gitId":"-"},"content":"    expect(testMcqQuestionSubmissionForm2.recipientList).toEqual(["},{"lineNumber":978,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":979,"author":{"gitId":"-"},"content":"        recipientName: \u0027Barry Harris\u0027,"},{"lineNumber":980,"author":{"gitId":"-"},"content":"        recipientIdentifier: \u0027barry-harris-id\u0027,"},{"lineNumber":981,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":982,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":983,"author":{"gitId":"-"},"content":"        recipientName: \u0027Gene Harris\u0027,"},{"lineNumber":984,"author":{"gitId":"-"},"content":"        recipientIdentifier: \u0027gene-harris-id\u0027,"},{"lineNumber":985,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":986,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":987,"author":{"gitId":"-"},"content":"    expect(testMcqQuestionSubmissionForm2.recipientSubmissionForms).toEqual(["},{"lineNumber":988,"author":{"gitId":"-"},"content":"      testMcqRecipientSubmissionForm3, testMcqRecipientSubmissionForm4,"},{"lineNumber":989,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":990,"author":{"gitId":"-"},"content":"    expect(component.questionsNeedingSubmission.length).toEqual(1);"},{"lineNumber":991,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":992,"author":{"gitId":"-"},"content":""},{"lineNumber":993,"author":{"gitId":"-"},"content":"  it(\u0027should not load the recipients and responses of a question if already loaded\u0027, () \u003d\u003e {"},{"lineNumber":994,"author":{"gitId":"-"},"content":"    const loadRecipientsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027loadFeedbackQuestionRecipients\u0027);"},{"lineNumber":995,"author":{"gitId":"-"},"content":"    const getResponseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027getFeedbackResponse\u0027);"},{"lineNumber":996,"author":{"gitId":"-"},"content":""},{"lineNumber":997,"author":{"gitId":"-"},"content":"    testMcqQuestionSubmissionForm2.isLoaded \u003d true;"},{"lineNumber":998,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({ visible: true }, testMcqQuestionSubmissionForm2);"},{"lineNumber":999,"author":{"gitId":"-"},"content":""},{"lineNumber":1000,"author":{"gitId":"-"},"content":"    testMsqQuestionSubmissionForm.isLoading \u003d true;"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({ visible: true }, testMsqQuestionSubmissionForm);"},{"lineNumber":1002,"author":{"gitId":"-"},"content":""},{"lineNumber":1003,"author":{"gitId":"-"},"content":"    expect(loadRecipientsSpy).not.toHaveBeenCalled();"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    expect(getResponseSpy).not.toHaveBeenCalled();"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1006,"author":{"gitId":"-"},"content":""},{"lineNumber":1007,"author":{"gitId":"-"},"content":"  it(\u0027should not load the recipients and responses of a question if the event is not correct\u0027, () \u003d\u003e {"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    const loadRecipientsSpy: SpyInstance \u003d jest.spyOn(feedbackQuestionsService, \u0027loadFeedbackQuestionRecipients\u0027);"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"    const getResponseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027getFeedbackResponse\u0027);"},{"lineNumber":1010,"author":{"gitId":"-"},"content":""},{"lineNumber":1011,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses(null, testMcqQuestionSubmissionForm2);"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({}, testMcqQuestionSubmissionForm2);"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"    component.loadRecipientsAndResponses({ visible: false }, testMsqQuestionSubmissionForm);"},{"lineNumber":1014,"author":{"gitId":"-"},"content":""},{"lineNumber":1015,"author":{"gitId":"-"},"content":"    expect(loadRecipientsSpy).not.toHaveBeenCalled();"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"    expect(getResponseSpy).not.toHaveBeenCalled();"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1018,"author":{"gitId":"-"},"content":""},{"lineNumber":1019,"author":{"gitId":"-"},"content":"  it(\u0027should check that there are no responses to submit\u0027, () \u003d\u003e {"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"    const testSubmissionForm: QuestionSubmissionFormModel \u003d deepCopy(testTextQuestionSubmissionForm);"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"    testSubmissionForm.recipientSubmissionForms \u003d [];"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testSubmissionForm];"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"    expect(component.questionsNeedingSubmission.length).toEqual(0);"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1025,"author":{"gitId":"-"},"content":""},{"lineNumber":1026,"author":{"gitId":"-"},"content":"  it(\u0027should save feedback responses\u0027, () \u003d\u003e {"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"    const mockModalRef: any \u003d { componentInstance: {} };"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"    const testResponseDetails1: any \u003d deepCopy(testMcqRecipientSubmissionForm.responseDetails);"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"    // leave question unanswered"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"    const testResponseDetails2: FeedbackTextResponseDetails \u003d { answer: \u0027\u0027, questionType: FeedbackQuestionType.TEXT };"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"    const testQuestionSubmissionForm1: QuestionSubmissionFormModel \u003d deepCopy(testMcqQuestionSubmissionForm);"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"    const testQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d deepCopy(testTextQuestionSubmissionForm);"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"    testQuestionSubmissionForm1.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails1;"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails2;"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testQuestionSubmissionForm1, testQuestionSubmissionForm2];"},{"lineNumber":1036,"author":{"gitId":"-"},"content":""},{"lineNumber":1037,"author":{"gitId":"-"},"content":"    const responseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027submitFeedbackResponses\u0027)"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"        .mockImplementation((id: string) \u003d\u003e {"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"          if (id \u003d\u003d\u003d testQuestionSubmissionForm1.feedbackQuestionId) {"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"            return of({ responses: [testResponse1], requestId: \u002710\u0027 });"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"          return of({ responses: [testResponse2], requestId: \u002720\u0027 });"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027updateComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockReturnValue(mockModalRef);"},{"lineNumber":1047,"author":{"gitId":"-"},"content":""},{"lineNumber":1048,"author":{"gitId":"-"},"content":"    component.saveFeedbackResponses(component.questionSubmissionForms);"},{"lineNumber":1049,"author":{"gitId":"-"},"content":""},{"lineNumber":1050,"author":{"gitId":"-"},"content":"    expect(responseSpy).toBeCalledTimes(2);"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"    expect(responseSpy).toHaveBeenNthCalledWith(1, \u0027feedback-question-id-mcq\u0027, {"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"      responses: [{"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"        recipient: testMcqRecipientSubmissionForm.recipientIdentifier,"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"        responseDetails: testResponseDetails1,"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"      }],"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"    }, {"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"      moderatedperson: \u0027\u0027,"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"    expect(responseSpy).toHaveBeenLastCalledWith(\u0027feedback-question-id-text\u0027, {"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"      responses: [], // do not call for empty response details"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"    }, {"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"      moderatedperson: \u0027\u0027,"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1068,"author":{"gitId":"-"},"content":""},{"lineNumber":1069,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.requestIds).toEqual({"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-mcq\u0027: \u002710\u0027,"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-text\u0027: \u002720\u0027,"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.questions).toEqual(["},{"lineNumber":1074,"author":{"gitId":"-"},"content":"      testQuestionSubmissionForm1,"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"      testQuestionSubmissionForm2,"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.answers).toEqual({"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-mcq\u0027: [testResponse1],"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"      \u0027feedback-question-id-text\u0027: [testResponse2],"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.notYetAnsweredQuestions).toHaveLength(1);"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"    expect(mockModalRef.componentInstance.failToSaveQuestions).toEqual({});"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1084,"author":{"gitId":"-"},"content":""},{"lineNumber":1085,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should not save invalid feedback responses\u0027, () \u003d\u003e {"},{"lineNumber":1086,"author":{"gitId":"zhaojj2209"},"content":"    const mockModalRef: any \u003d { componentInstance: {} };"},{"lineNumber":1087,"author":{"gitId":"zhaojj2209"},"content":"    const testResponseDetails1: any \u003d deepCopy(testMcqRecipientSubmissionForm.responseDetails);"},{"lineNumber":1088,"author":{"gitId":"zhaojj2209"},"content":"    const testResponseDetails2: any \u003d deepCopy(testConstsumRecipientSubmissionForm.responseDetails);"},{"lineNumber":1089,"author":{"gitId":"zhaojj2209"},"content":"    const testQuestionSubmissionForm1: QuestionSubmissionFormModel \u003d deepCopy(testMcqQuestionSubmissionForm);"},{"lineNumber":1090,"author":{"gitId":"zhaojj2209"},"content":"    const testQuestionSubmissionForm2: QuestionSubmissionFormModel \u003d deepCopy(testConstsumQuestionSubmissionForm);"},{"lineNumber":1091,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm1.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails1;"},{"lineNumber":1092,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].responseDetails \u003d testResponseDetails2;"},{"lineNumber":1093,"author":{"gitId":"zhaojj2209"},"content":"    // invalid response"},{"lineNumber":1094,"author":{"gitId":"zhaojj2209"},"content":"    testQuestionSubmissionForm2.recipientSubmissionForms[0].isValid \u003d false;"},{"lineNumber":1095,"author":{"gitId":"zhaojj2209"},"content":"    component.questionSubmissionForms \u003d [testQuestionSubmissionForm1, testQuestionSubmissionForm2];"},{"lineNumber":1096,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1097,"author":{"gitId":"-"},"content":"    const responseSpy: SpyInstance \u003d jest.spyOn(feedbackResponsesService, \u0027submitFeedbackResponses\u0027)"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"        .mockImplementation(() \u003d\u003e {"},{"lineNumber":1099,"author":{"gitId":"zhaojj2209"},"content":"          return of({ responses: [testResponse1], requestId: \u002710\u0027 });"},{"lineNumber":1100,"author":{"gitId":"zhaojj2209"},"content":"        });"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"    jest.spyOn(feedbackResponseCommentService, \u0027updateComment\u0027).mockReturnValue(of(testComment));"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"    jest.spyOn(ngbModal, \u0027open\u0027).mockReturnValue(mockModalRef);"},{"lineNumber":1104,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1105,"author":{"gitId":"-"},"content":"    component.saveFeedbackResponses(component.questionSubmissionForms);"},{"lineNumber":1106,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1107,"author":{"gitId":"zhaojj2209"},"content":"    expect(responseSpy).toBeCalledTimes(1);"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"    expect(responseSpy).toHaveBeenNthCalledWith(1, testQuestionSubmissionForm1.feedbackQuestionId, {"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"      responses: [{"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"        recipient: testMcqRecipientSubmissionForm.recipientIdentifier,"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"        responseDetails: testResponseDetails1,"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"      }],"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"    }, {"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"      intent: \u0027STUDENT_SUBMISSION\u0027,"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"      moderatedperson: \u0027\u0027,"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1118,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1119,"author":{"gitId":"zhaojj2209"},"content":"    // only the valid response is saved"},{"lineNumber":1120,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.requestIds).toEqual({"},{"lineNumber":1121,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm1.feedbackQuestionId]: \u002710\u0027,"},{"lineNumber":1122,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1123,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.questions).toEqual(["},{"lineNumber":1124,"author":{"gitId":"zhaojj2209"},"content":"      testQuestionSubmissionForm1,"},{"lineNumber":1125,"author":{"gitId":"zhaojj2209"},"content":"      testQuestionSubmissionForm2,"},{"lineNumber":1126,"author":{"gitId":"zhaojj2209"},"content":"    ]);"},{"lineNumber":1127,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.answers).toEqual({"},{"lineNumber":1128,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm1.feedbackQuestionId]: [testResponse1],"},{"lineNumber":1129,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1130,"author":{"gitId":"zhaojj2209"},"content":"    expect(mockModalRef.componentInstance.failToSaveQuestions).toEqual({"},{"lineNumber":1131,"author":{"gitId":"zhaojj2209"},"content":"      [testQuestionSubmissionForm2.questionNumber]: \u0027Invalid responses provided. Please check question constraints.\u0027,"},{"lineNumber":1132,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":1133,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":1134,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":1135,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to create new comment when submission form has no original comment\u0027, () \u003d\u003e {"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testTextRecipientSubmissionForm);"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027)"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testComment));"},{"lineNumber":1139,"author":{"gitId":"-"},"content":""},{"lineNumber":1140,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual("},{"lineNumber":1142,"author":{"gitId":"-"},"content":"          component.getCommentModel(testComment, testSubmissionForm.recipientIdentifier));"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1144,"author":{"gitId":"-"},"content":""},{"lineNumber":1145,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith({"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"    }, testTextRecipientSubmissionForm.responseId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1153,"author":{"gitId":"-"},"content":""},{"lineNumber":1154,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to create new comment when submission form has original comment\u0027"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"      + \u0027with different original recipient\u0027, () \u003d\u003e {"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm);"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"    testSubmissionForm.commentByGiver!.originalRecipientIdentifier \u003d \u0027other-recipient-identifier\u0027;"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027createComment\u0027)"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testComment));"},{"lineNumber":1160,"author":{"gitId":"-"},"content":""},{"lineNumber":1161,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual("},{"lineNumber":1163,"author":{"gitId":"-"},"content":"          component.getCommentModel(testComment, testSubmissionForm.recipientIdentifier));"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1165,"author":{"gitId":"-"},"content":""},{"lineNumber":1166,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith({"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"    }, testMcqRecipientSubmissionForm.responseId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1174,"author":{"gitId":"-"},"content":""},{"lineNumber":1175,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to update existing comment when submission form has original comment\u0027, () \u003d\u003e {"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm);"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMcqRecipientSubmissionForm.commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027updateComment\u0027)"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(testComment));"},{"lineNumber":1180,"author":{"gitId":"-"},"content":""},{"lineNumber":1181,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual("},{"lineNumber":1183,"author":{"gitId":"-"},"content":"          component.getCommentModel(testComment, testSubmissionForm.recipientIdentifier));"},{"lineNumber":1184,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1185,"author":{"gitId":"-"},"content":""},{"lineNumber":1186,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith({"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"      commentText: \u0027comment text here\u0027,"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"    }, expectedId, Intent.STUDENT_SUBMISSION, { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1193,"author":{"gitId":"-"},"content":""},{"lineNumber":1194,"author":{"gitId":"-"},"content":"  it(\u0027should create comment request to delete existing comment when new comment text is empty\u0027, () \u003d\u003e {"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"    const testSubmissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d deepCopy(testMcqRecipientSubmissionForm2);"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMcqRecipientSubmissionForm2.commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027deleteComment\u0027)"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"        .mockReturnValue(of({}));"},{"lineNumber":1199,"author":{"gitId":"-"},"content":""},{"lineNumber":1200,"author":{"gitId":"-"},"content":"    component.createCommentRequest(testSubmissionForm).subscribe(() \u003d\u003e {"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"      expect(testSubmissionForm.commentByGiver).toEqual(undefined);"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1203,"author":{"gitId":"-"},"content":""},{"lineNumber":1204,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith(expectedId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1208,"author":{"gitId":"-"},"content":""},{"lineNumber":1209,"author":{"gitId":"-"},"content":"  it(\u0027should delete participant comment\u0027, () \u003d\u003e {"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"    const testSubmissionForm: QuestionSubmissionFormModel \u003d deepCopy(testMsqQuestionSubmissionForm);"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"    const expectedId: any \u003d testMsqQuestionSubmissionForm.recipientSubmissionForms[0]"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"        .commentByGiver?.originalComment?.feedbackResponseCommentId;"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"    const commentSpy: SpyInstance \u003d jest.spyOn(feedbackResponseCommentService, \u0027deleteComment\u0027)"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"        .mockReturnValue(of(true));"},{"lineNumber":1215,"author":{"gitId":"-"},"content":""},{"lineNumber":1216,"author":{"gitId":"-"},"content":"    component.questionSubmissionForms \u003d [testSubmissionForm];"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"    component.deleteParticipantComment(0, 0);"},{"lineNumber":1218,"author":{"gitId":"-"},"content":""},{"lineNumber":1219,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenCalledTimes(1);"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"    expect(commentSpy).toHaveBeenLastCalledWith(expectedId, Intent.STUDENT_SUBMISSION,"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"        { key: testQueryParams.key, moderatedperson: \u0027\u0027 });"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":34,"-":1189}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DOCUMENT } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PageScrollService } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackResponsesResponse, FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipient,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSessionLogType,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { FeedbackResponseRequest, Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import { DEFAULT_NUMBER_OF_RETRY_ATTEMPTS } from \u0027../../../types/default-retry-attempts\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../../components/comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027../../components/error-report/error-report.component\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"interface FeedbackQuestionsResponse {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  questions: FeedbackQuestion[];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":57,"author":{"gitId":"-"},"content":" * Feedback session submission page."},{"lineNumber":58,"author":{"gitId":"-"},"content":" */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-submission-page\u0027,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-submission-page.component.html\u0027,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-submission-page.component.scss\u0027],"},{"lineNumber":63,"author":{"gitId":"-"},"content":"})"},{"lineNumber":64,"author":{"gitId":"-"},"content":"export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  Intent: typeof Intent \u003d Intent;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  regKey: string \u003d \u0027\u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  entityType: string \u003d \u0027student\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  loggedInUser: string \u003d \u0027\u0027;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  moderatedPerson: string \u003d \u0027\u0027;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  previewAsPerson: string \u003d \u0027\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  // the name of the person involved"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  // (e.g. the student name for unregistered student, the name of instructor being moderated)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  personName: string \u003d \u0027\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  personEmail: string \u003d \u0027\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  feedbackSessionInstructions: string \u003d \u0027\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  feedbackSessionTimezone: string \u003d \u0027\u0027;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  feedbackSessionSubmissionStatus: FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus.OPEN;"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  intent: Intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  questionSubmissionForms: QuestionSubmissionFormModel[] \u003d [];"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  isSavingResponses: boolean \u003d false;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  isSubmissionFormsDisabled: boolean \u003d false;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  isModerationHintExpanded: boolean \u003d false;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  moderatedQuestionId: string \u003d \u0027\u0027;"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  isFeedbackSessionLoading: boolean \u003d true;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  isFeedbackSessionQuestionsLoading: boolean \u003d true;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  hasFeedbackSessionQuestionsLoadingFailed: boolean \u003d false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  retryAttempts: number \u003d DEFAULT_NUMBER_OF_RETRY_ATTEMPTS;"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"              private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"              private feedbackResponsesService: FeedbackResponsesService,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"              private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              private pageScrollService: PageScrollService,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              private commentService: FeedbackResponseCommentService,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"              private logService: LogService,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"              @Inject(DOCUMENT) private document: any) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    this.route.data.pipe("},{"lineNumber":128,"author":{"gitId":"-"},"content":"        tap((data: any) \u003d\u003e {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"          this.intent \u003d data.intent;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        switchMap(() \u003d\u003e this.route.queryParams),"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    ).subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      this.regKey \u003d queryParams.key ? queryParams.key : \u0027\u0027;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      this.moderatedPerson \u003d queryParams.moderatedperson ? queryParams.moderatedperson : \u0027\u0027;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      this.previewAsPerson \u003d queryParams.previewas ? queryParams.previewas : \u0027\u0027;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      if (queryParams.entitytype \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        this.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        this.intent \u003d Intent.INSTRUCTOR_SUBMISSION;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      this.moderatedQuestionId \u003d queryParams.moderatedquestionId ? queryParams.moderatedquestionId : \u0027\u0027;"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // disable submission in the preview mode"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search.replace(/\u0026/g, \u0027%26\u0027)}`;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) \u003d\u003e {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        const isPreviewOrModeration: boolean \u003d !!(auth.user \u0026\u0026 (this.moderatedPerson || this.previewAsPerson));"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (auth.user) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"          this.loggedInUser \u003d auth.user.id;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (this.regKey \u0026\u0026 !isPreviewOrModeration) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          this.authService.getAuthRegkeyValidity(this.regKey, this.intent).subscribe((resp: RegkeyValidity) \u003d\u003e {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (resp.isAllowedAccess) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"              if (resp.isUsed) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                // The logged in user matches the registration key; redirect to the logged in URL"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    this.router, `/web/${this.entityType}/sessions/submission`,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":164,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                // Valid, unused registration key; load information based on the key"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                this.loadPersonName();"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                this.loadFeedbackSession();"},{"lineNumber":168,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            } else if (resp.isValid) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"              // At this point, registration key must already be used, otherwise access would be granted"},{"lineNumber":171,"author":{"gitId":"-"},"content":"              if (this.loggedInUser) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                // Registration key belongs to another user who is not the logged in user"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                    `You are trying to access TEAMMATES using the Google account ${this.loggedInUser}, which"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    cannot remember which Google account you used before, please email us at"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    ${environment.supportEmail} for help.`);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                // There is no logged in user for a valid, used registration key, redirect to login page"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                // eslint-disable-next-line no-lonely-if"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                if (this.entityType \u003d\u003d\u003d \u0027student\u0027) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                } else if (this.entityType \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                  window.location.href \u003d `${this.backendUrl}${auth.instructorLoginUrl}`;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"              // The registration key is invalid"},{"lineNumber":190,"author":{"gitId":"-"},"content":"              this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                  \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } else if (this.loggedInUser) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"          // Load information based on logged in user"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          // This will also cover moderation/preview cases"},{"lineNumber":200,"author":{"gitId":"-"},"content":"          this.loadPersonName();"},{"lineNumber":201,"author":{"gitId":"-"},"content":"          this.loadFeedbackSession();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"              \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      }, () \u003d\u003e {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"  // Solution for checking partial element visibility adapted from"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  // https://stackoverflow.com/questions/30943662/check-if-element-is-partially-in-viewport"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * Checks if a given element is in view."},{"lineNumber":217,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   * @param e element to perform check for"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  isInViewport(e: HTMLElement): boolean {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    const rect: ClientRect \u003d e.getBoundingClientRect();"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    const windowHeight: number \u003d (window.innerHeight || document.documentElement.clientHeight);"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    return !("},{"lineNumber":225,"author":{"gitId":"-"},"content":"      Math.floor(100 - (((rect.top \u003e\u003d 0 ? 0 : rect.top) / +-rect.height) * 100)) \u003c 1"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      || Math.floor(100 - ((rect.bottom - windowHeight) / rect.height) * 100) \u003c 1"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":231,"author":{"gitId":"-"},"content":"   * Scrolls to the question based on its given question id."},{"lineNumber":232,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  scrollToQuestion(): void {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    const div: HTMLElement | null \u003d document.getElementById(this.moderatedQuestionId);"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    // continue scrolling as long as the element to scroll to is yet to be found or not in view"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    if (div \u003d\u003d null || !(this.isInViewport(div))) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      setTimeout(() \u003d\u003e {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        this.pageScrollService.scroll({"},{"lineNumber":240,"author":{"gitId":"-"},"content":"          document: this.document,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"          scrollTarget: `#${this.moderatedQuestionId}`,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"          scrollOffset: 70,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        this.scrollToQuestion();"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      }, 500);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    if (!this.moderatedQuestionId) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    this.scrollToQuestion();"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * Loads the name of the person involved in the submission."},{"lineNumber":258,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  loadPersonName(): void {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    switch (this.intent) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      case Intent.STUDENT_SUBMISSION:"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        this.studentService.getStudent("},{"lineNumber":263,"author":{"gitId":"-"},"content":"            this.courseId,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            this.moderatedPerson || this.previewAsPerson,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            this.regKey,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        ).subscribe((student: Student) \u003d\u003e {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"          this.personName \u003d student.name;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"          this.personEmail \u003d student.email;"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"          this.logService.createFeedbackSessionLog({"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            courseId: this.courseId,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            studentEmail: this.personEmail,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            logType: FeedbackSessionLogType.ACCESS,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"          }).subscribe(() \u003d\u003e {"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            this.statusMessageService.showWarningToast(\u0027Failed to log feedback session access\u0027);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      case Intent.INSTRUCTOR_SUBMISSION:"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        this.instructorService.getInstructor({"},{"lineNumber":285,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"          feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"          intent: this.intent,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":289,"author":{"gitId":"-"},"content":"          moderatedPerson: this.moderatedPerson,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"          previewAs: this.previewAsPerson,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"          this.personName \u003d instructor.name;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"          this.personEmail \u003d instructor.email;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":301,"author":{"gitId":"-"},"content":"   * Redirects to join course link for unregistered student/instructor."},{"lineNumber":302,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  joinCourseForUnregisteredEntity(): void {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/join\u0027, { entitytype: this.entityType, key: this.regKey });"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":308,"author":{"gitId":"-"},"content":"   * Loads the feedback session information."},{"lineNumber":309,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionLoading \u003d true;"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionLoading \u003d false;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        this.feedbackSessionInstructions \u003d feedbackSession.instructions;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":326,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        this.formattedSessionClosingTime \u003d this.timezoneService"},{"lineNumber":329,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        this.feedbackSessionSubmissionStatus \u003d feedbackSession.submissionStatus;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        this.feedbackSessionTimezone \u003d feedbackSession.timeZone;"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"        // don\u0027t show alert modal in moderation"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        if (!this.moderatedPerson) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"          let modalContent: string;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"          switch (feedbackSession.submissionStatus) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN:"},{"lineNumber":339,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eThe feedback session is currently not open for submissions.\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":344,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Not Open\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.OPEN:"},{"lineNumber":347,"author":{"gitId":"-"},"content":"              // closing in 15 minutes"},{"lineNumber":348,"author":{"gitId":"-"},"content":"              if (feedbackSession.submissionEndTimestamp - Date.now() \u003c 15 * 60 * 1000) {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                modalContent \u003d \u0027Warning: you have less than 15 minutes before the submission deadline expires!\u0027;"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                this.simpleModalService.openInformationModal("},{"lineNumber":351,"author":{"gitId":"-"},"content":"                  \u0027Feedback Session Will Be Closing Soon!\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":353,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.CLOSED:"},{"lineNumber":355,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eFeedback Session is Closed\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":360,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Closed\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.GRACE_PERIOD:"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":364,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"        this.loadFeedbackQuestions();"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"        // Display note on submission on mobile device"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        const mobileDeviceWidth: number \u003d 768;"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        if (this.feedbackSessionSubmissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN"},{"lineNumber":372,"author":{"gitId":"-"},"content":"          \u0026\u0026 window.innerWidth \u003c mobileDeviceWidth) {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"          const modalContent: string \u003d `Note that you can use the Submit button to save responses already entered,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"              and continue to answer remaining questions after that."},{"lineNumber":375,"author":{"gitId":"-"},"content":"              You may also edit your submission any number of times before the closing time of this session.`;"},{"lineNumber":376,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal("},{"lineNumber":377,"author":{"gitId":"-"},"content":"              \u0027Note On Submission\u0027, SimpleModalType.INFO, modalContent);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal(\u0027Feedback Session Does Not Exist!\u0027, SimpleModalType.DANGER,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"              \u0027The session does not exist (most likely deleted by the instructor after the submission link was sent).\u0027);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"          this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        } else if (resp.status \u003d\u003d\u003d 403) {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal(\u0027Not Authorised To Access!\u0027, SimpleModalType.DANGER,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"              resp.error.message);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"          this.navigationService.navigateByURL(this.router, `/web/${this.entityType}/home`);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage("},{"lineNumber":390,"author":{"gitId":"-"},"content":"              this.router, `/web/${this.entityType}/home`, resp.error.message);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":396,"author":{"gitId":"-"},"content":"   * Loads feedback questions to submit."},{"lineNumber":397,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionQuestionsLoading \u003d true;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    this.questionSubmissionForms \u003d [];"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":402,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackQuestionsResponse) \u003d\u003e {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            const model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"              isLoading: false,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"              isLoaded: false,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"              feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"              questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"              questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"              questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"              giverType: feedbackQuestion.giverType,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"              recipientType: feedbackQuestion.recipientType,"},{"lineNumber":424,"author":{"gitId":"-"},"content":"              recipientList: [],"},{"lineNumber":425,"author":{"gitId":"-"},"content":"              recipientSubmissionForms: [],"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"              questionType: feedbackQuestion.questionType,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"              questionDetails: feedbackQuestion.questionDetails,"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":432,"author":{"gitId":"-"},"content":"                      ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 0,"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"              showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"              showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"              showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            this.questionSubmissionForms.push(model);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"          this.handleError(resp);"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":443,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   * Tracks the question submission form by feedback question id."},{"lineNumber":447,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":450,"author":{"gitId":"-"},"content":"  trackQuestionSubmissionFormByFn(_: any, item: QuestionSubmissionFormModel): any {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":452,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   * Loads the feedback question recipients for the question."},{"lineNumber":456,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":457,"author":{"gitId":"-"},"content":"  loadFeedbackQuestionRecipientsForQuestion(model: QuestionSubmissionFormModel): void {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.loadFeedbackQuestionRecipients({"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    }).subscribe((response: FeedbackQuestionRecipients) \u003d\u003e {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      response.recipients.forEach((recipient: FeedbackQuestionRecipient) \u003d\u003e {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        model.recipientList.push({"},{"lineNumber":467,"author":{"gitId":"-"},"content":"          recipientIdentifier: recipient.identifier,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"          recipientName: recipient.name,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":470,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        // don\u0027t load responses in preview mode"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        // generate a list of empty response box"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        const formMode: QuestionSubmissionFormMode \u003d this.getQuestionSubmissionFormMode(model);"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"          if (formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT"},{"lineNumber":478,"author":{"gitId":"-"},"content":"              \u0026\u0026 model.recipientSubmissionForms.length \u003e\u003d model.customNumberOfEntitiesToGiveFeedbackTo) {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":480,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"-"},"content":"          let recipientIdentifier: string \u003d \u0027\u0027;"},{"lineNumber":483,"author":{"gitId":"-"},"content":"          if (formMode !\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            recipientIdentifier \u003d recipient.recipientIdentifier;"},{"lineNumber":485,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"          model.recipientSubmissionForms.push({"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            recipientIdentifier,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            responseId: \u0027\u0027,"},{"lineNumber":491,"author":{"gitId":"-"},"content":"            isValid: true,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        model.isLoading \u003d false;"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        model.isLoaded \u003d true;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        this.loadFeedbackResponses(model);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":500,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   * Gets the form mode of the question submission form."},{"lineNumber":504,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":505,"author":{"gitId":"-"},"content":"  getQuestionSubmissionFormMode(model: QuestionSubmissionFormModel): QuestionSubmissionFormMode {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    const isNumberOfEntitiesToGiveFeedbackToSettingLimited: boolean \u003d"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        (model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS_IN_SAME_SECTION"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS_IN_SAME_SECTION"},{"lineNumber":511,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.numberOfEntitiesToGiveFeedbackToSetting \u003d\u003d\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.recipientList.length \u003e model.customNumberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    return isNumberOfEntitiesToGiveFeedbackToSettingLimited"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        ? QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT : QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   * Loads the responses of the feedback question to {@recipientSubmissionForms} in the model."},{"lineNumber":521,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":522,"author":{"gitId":"-"},"content":"  loadFeedbackResponses(model: QuestionSubmissionFormModel): void {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    this.feedbackResponsesService.getFeedbackResponse({"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      model.isLoading \u003d false;"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      model.isLoaded \u003d true;"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      .subscribe((existingResponses: FeedbackResponsesResponse) \u003d\u003e {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT) {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"          // need to generate a full list of submission forms"},{"lineNumber":535,"author":{"gitId":"-"},"content":"          model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            const matchedExistingResponse: FeedbackResponse | undefined \u003d"},{"lineNumber":537,"author":{"gitId":"-"},"content":"              existingResponses.responses.find("},{"lineNumber":538,"author":{"gitId":"-"},"content":"                  (response: FeedbackResponse) \u003d\u003e response.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            const submissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"              recipientIdentifier: recipient.recipientIdentifier,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"              responseDetails: matchedExistingResponse"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                ? matchedExistingResponse.responseDetails"},{"lineNumber":543,"author":{"gitId":"-"},"content":"                : this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":544,"author":{"gitId":"-"},"content":"              responseId: matchedExistingResponse ? matchedExistingResponse.feedbackResponseId : \u0027\u0027,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            if (matchedExistingResponse \u0026\u0026 matchedExistingResponse.giverComment) {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"              submissionForm.commentByGiver \u003d this.getCommentModel("},{"lineNumber":549,"author":{"gitId":"-"},"content":"                  matchedExistingResponse.giverComment, recipient.recipientIdentifier);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push(submissionForm);"},{"lineNumber":552,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"          // need to generate limited number of submission forms"},{"lineNumber":557,"author":{"gitId":"-"},"content":"          let numberOfRecipientSubmissionFormsNeeded: number \u003d"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            model.customNumberOfEntitiesToGiveFeedbackTo - existingResponses.responses.length;"},{"lineNumber":559,"author":{"gitId":"-"},"content":""},{"lineNumber":560,"author":{"gitId":"-"},"content":"          existingResponses.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":561,"author":{"gitId":"-"},"content":"            const submissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":562,"author":{"gitId":"-"},"content":"              recipientIdentifier: response.recipientIdentifier,"},{"lineNumber":563,"author":{"gitId":"-"},"content":"              responseDetails: response.responseDetails,"},{"lineNumber":564,"author":{"gitId":"-"},"content":"              responseId: response.feedbackResponseId,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":566,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":567,"author":{"gitId":"-"},"content":"            if (response.giverComment) {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"              submissionForm.commentByGiver \u003d this.getCommentModel("},{"lineNumber":569,"author":{"gitId":"-"},"content":"                  response.giverComment, response.recipientIdentifier);"},{"lineNumber":570,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push(submissionForm);"},{"lineNumber":572,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"          // generate empty submission forms"},{"lineNumber":575,"author":{"gitId":"-"},"content":"          while (numberOfRecipientSubmissionFormsNeeded \u003e 0) {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push({"},{"lineNumber":577,"author":{"gitId":"-"},"content":"              recipientIdentifier: \u0027\u0027,"},{"lineNumber":578,"author":{"gitId":"-"},"content":"              responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":579,"author":{"gitId":"-"},"content":"              responseId: \u0027\u0027,"},{"lineNumber":580,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":581,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":582,"author":{"gitId":"-"},"content":"            numberOfRecipientSubmissionFormsNeeded -\u003d 1;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":586,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":587,"author":{"gitId":"-"},"content":""},{"lineNumber":588,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":589,"author":{"gitId":"-"},"content":"   * Gets the comment model for a given comment."},{"lineNumber":590,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":591,"author":{"gitId":"-"},"content":"  getCommentModel(comment: FeedbackResponseComment, recipientIdentifier: string): CommentRowModel {"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":593,"author":{"gitId":"-"},"content":"      originalComment: comment,"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      originalRecipientIdentifier: recipientIdentifier,"},{"lineNumber":595,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        commentText: comment.commentText,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        // the participant comment shall not use custom visibilities"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":602,"author":{"gitId":"-"},"content":"      timezone: this.feedbackSessionTimezone,"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":605,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   * Checks whether there is any submission forms in the current page."},{"lineNumber":609,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":610,"author":{"gitId":"-"},"content":"  get questionsNeedingSubmission(): QuestionSubmissionFormModel[] {"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    return this.questionSubmissionForms"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        .filter((model: QuestionSubmissionFormModel) \u003d\u003e model.recipientSubmissionForms.length !\u003d\u003d 0);"},{"lineNumber":613,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":616,"author":{"gitId":"-"},"content":"   * Saves the feedback responses for the specific questions."},{"lineNumber":617,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":618,"author":{"gitId":"-"},"content":"   * \u003cp\u003eAll empty feedback response will be deleted; For non-empty responses, update/create them if necessary."},{"lineNumber":619,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":620,"author":{"gitId":"-"},"content":"  saveFeedbackResponses(questionSubmissionForms: QuestionSubmissionFormModel[]): void {"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    const notYetAnsweredQuestions: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    const requestIds: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    const answers: Record\u003cstring, FeedbackResponse[]\u003e \u003d {};"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    const failToSaveQuestions: Record\u003cnumber, string\u003e \u003d {}; // Map of question number to error message"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    const savingRequests: Observable\u003cany\u003e[] \u003d [];"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"    this.logService.createFeedbackSessionLog({"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":630,"author":{"gitId":"-"},"content":"      studentEmail: this.personEmail,"},{"lineNumber":631,"author":{"gitId":"-"},"content":"      logType: FeedbackSessionLogType.SUBMISSION,"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    }).subscribe(() \u003d\u003e {"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {"},{"lineNumber":635,"author":{"gitId":"-"},"content":"      this.statusMessageService.showWarningToast(\u0027Failed to log feedback session submission\u0027);"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":637,"author":{"gitId":"-"},"content":""},{"lineNumber":638,"author":{"gitId":"-"},"content":"    questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) \u003d\u003e {"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      let isQuestionFullyAnswered: boolean \u003d true;"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"      const responses: FeedbackResponseRequest[] \u003d [];"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"      questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":644,"author":{"gitId":"-"},"content":"          .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"            if (!recipientSubmissionFormModel.isValid) {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"              failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                  \u0027Invalid responses provided. Please check question constraints.\u0027;"},{"lineNumber":648,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":650,"author":{"gitId":"-"},"content":"            const isFeedbackResponseDetailsEmpty: boolean \u003d"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                this.feedbackResponsesService.isFeedbackResponseDetailsEmpty("},{"lineNumber":652,"author":{"gitId":"-"},"content":"                    questionSubmissionFormModel.questionType, recipientSubmissionFormModel.responseDetails);"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            isQuestionFullyAnswered \u003d isQuestionFullyAnswered \u0026\u0026 !isFeedbackResponseDetailsEmpty;"},{"lineNumber":654,"author":{"gitId":"-"},"content":""},{"lineNumber":655,"author":{"gitId":"-"},"content":"            if (!isFeedbackResponseDetailsEmpty) {"},{"lineNumber":656,"author":{"gitId":"-"},"content":"              responses.push({"},{"lineNumber":657,"author":{"gitId":"-"},"content":"                recipient: recipientSubmissionFormModel.recipientIdentifier,"},{"lineNumber":658,"author":{"gitId":"-"},"content":"                responseDetails: recipientSubmissionFormModel.responseDetails,"},{"lineNumber":659,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":660,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":661,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"zhaojj2209"},"content":"      if (!failToSaveQuestions[questionSubmissionFormModel.questionNumber]) {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        savingRequests.push("},{"lineNumber":665,"author":{"gitId":"-"},"content":"            this.feedbackResponsesService.submitFeedbackResponses(questionSubmissionFormModel.feedbackQuestionId, {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"              responses,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            }, {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"              intent: this.intent,"},{"lineNumber":669,"author":{"gitId":"-"},"content":"              key: this.regKey,"},{"lineNumber":670,"author":{"gitId":"-"},"content":"              moderatedperson: this.moderatedPerson,"},{"lineNumber":671,"author":{"gitId":"-"},"content":"            }).pipe("},{"lineNumber":672,"author":{"gitId":"-"},"content":"                tap((resp: FeedbackResponses) \u003d\u003e {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"                  const responsesMap: Record\u003cstring, FeedbackResponse\u003e \u003d {};"},{"lineNumber":674,"author":{"gitId":"-"},"content":"                  resp.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"                    responsesMap[response.recipientIdentifier] \u003d response;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId] \u003d"},{"lineNumber":677,"author":{"gitId":"-"},"content":"                        answers[questionSubmissionFormModel.feedbackQuestionId] || [];"},{"lineNumber":678,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId].push(response);"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                  });"},{"lineNumber":680,"author":{"gitId":"-"},"content":"                  requestIds[questionSubmissionFormModel.feedbackQuestionId] \u003d resp.requestId || \u0027\u0027;"},{"lineNumber":681,"author":{"gitId":"-"},"content":""},{"lineNumber":682,"author":{"gitId":"-"},"content":"                  questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":683,"author":{"gitId":"-"},"content":"                      .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":684,"author":{"gitId":"-"},"content":"                        if (responsesMap[recipientSubmissionFormModel.recipientIdentifier]) {"},{"lineNumber":685,"author":{"gitId":"-"},"content":"                          const correspondingResp: FeedbackResponse \u003d"},{"lineNumber":686,"author":{"gitId":"-"},"content":"                              responsesMap[recipientSubmissionFormModel.recipientIdentifier];"},{"lineNumber":687,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d correspondingResp.feedbackResponseId;"},{"lineNumber":688,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseDetails \u003d correspondingResp.responseDetails;"},{"lineNumber":689,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.recipientIdentifier \u003d correspondingResp.recipientIdentifier;"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                        } else {"},{"lineNumber":691,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d \u0027\u0027;"},{"lineNumber":692,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":693,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":694,"author":{"gitId":"-"},"content":"                      });"},{"lineNumber":695,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":696,"author":{"gitId":"-"},"content":"                switchMap(() \u003d\u003e"},{"lineNumber":697,"author":{"gitId":"-"},"content":"                    forkJoin(questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":698,"author":{"gitId":"-"},"content":"                        .map((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":699,"author":{"gitId":"-"},"content":"                            this.createCommentRequest(recipientSubmissionFormModel))),"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                ),"},{"lineNumber":701,"author":{"gitId":"-"},"content":"                catchError((error: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"                  failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d error.error.message;"},{"lineNumber":703,"author":{"gitId":"-"},"content":"                  return of(error);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":705,"author":{"gitId":"-"},"content":"            ),"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":707,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":708,"author":{"gitId":"-"},"content":""},{"lineNumber":709,"author":{"gitId":"-"},"content":"      if (!isQuestionFullyAnswered) {"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        notYetAnsweredQuestions.add(questionSubmissionFormModel.questionNumber);"},{"lineNumber":711,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":713,"author":{"gitId":"-"},"content":""},{"lineNumber":714,"author":{"gitId":"-"},"content":"    this.isSavingResponses \u003d true;"},{"lineNumber":715,"author":{"gitId":"-"},"content":"    forkJoin(savingRequests).pipe("},{"lineNumber":716,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":717,"author":{"gitId":"-"},"content":"          this.isSavingResponses \u003d false;"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"          const modalRef: NgbModalRef \u003d this.ngbModal.open(SavingCompleteModalComponent);"},{"lineNumber":720,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.requestIds \u003d requestIds;"},{"lineNumber":721,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.courseId \u003d this.courseId;"},{"lineNumber":722,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":723,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionTimezone \u003d this.feedbackSessionTimezone;"},{"lineNumber":724,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personEmail \u003d this.personEmail;"},{"lineNumber":725,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personName \u003d this.personName;"},{"lineNumber":726,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.questions \u003d questionSubmissionForms;"},{"lineNumber":727,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.answers \u003d answers;"},{"lineNumber":728,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.notYetAnsweredQuestions \u003d Array.from(notYetAnsweredQuestions.values());"},{"lineNumber":729,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.failToSaveQuestions \u003d failToSaveQuestions;"},{"lineNumber":730,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    ).subscribe();"},{"lineNumber":732,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":735,"author":{"gitId":"-"},"content":"   * Creates comment request."},{"lineNumber":736,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":737,"author":{"gitId":"-"},"content":"  createCommentRequest(recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel): Observable\u003cany\u003e {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.responseId) {"},{"lineNumber":739,"author":{"gitId":"-"},"content":"      // responseId not set, cannot set comment"},{"lineNumber":740,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":741,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver) {"},{"lineNumber":743,"author":{"gitId":"-"},"content":"      // comment not given, do nothing"},{"lineNumber":744,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":745,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":746,"author":{"gitId":"-"},"content":""},{"lineNumber":747,"author":{"gitId":"-"},"content":"    const isSameRecipient \u003d recipientSubmissionFormModel.recipientIdentifier"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        \u003d\u003d\u003d recipientSubmissionFormModel.commentByGiver.originalRecipientIdentifier;"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver.originalComment || !isSameRecipient) {"},{"lineNumber":751,"author":{"gitId":"-"},"content":"      // comment is new or original comment deleted because recipient has changed"},{"lineNumber":752,"author":{"gitId":"-"},"content":""},{"lineNumber":753,"author":{"gitId":"-"},"content":"      if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        // new comment is empty"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        return of({});"},{"lineNumber":757,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":758,"author":{"gitId":"-"},"content":""},{"lineNumber":759,"author":{"gitId":"-"},"content":"      // create new comment"},{"lineNumber":760,"author":{"gitId":"-"},"content":"      return this.commentService.createComment({"},{"lineNumber":761,"author":{"gitId":"-"},"content":"        commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        // we ignore the fields in comment edit model as participant comment"},{"lineNumber":763,"author":{"gitId":"-"},"content":"        // will follow visibilities from question by design"},{"lineNumber":764,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":765,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":766,"author":{"gitId":"-"},"content":"      }, recipientSubmissionFormModel.responseId, this.intent, {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"        key: this.regKey,"},{"lineNumber":768,"author":{"gitId":"-"},"content":"        moderatedperson: this.moderatedPerson,"},{"lineNumber":769,"author":{"gitId":"-"},"content":"      }).pipe("},{"lineNumber":770,"author":{"gitId":"-"},"content":"          tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":771,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel("},{"lineNumber":772,"author":{"gitId":"-"},"content":"                comment, recipientSubmissionFormModel.recipientIdentifier);"},{"lineNumber":773,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":774,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":775,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":776,"author":{"gitId":"-"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"    // existing comment"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"    if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":780,"author":{"gitId":"-"},"content":"      // comment is empty, create delete request"},{"lineNumber":781,"author":{"gitId":"-"},"content":"      return this.commentService.deleteComment("},{"lineNumber":782,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":783,"author":{"gitId":"-"},"content":"            key: this.regKey,"},{"lineNumber":784,"author":{"gitId":"-"},"content":"            moderatedperson: this.moderatedPerson,"},{"lineNumber":785,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":786,"author":{"gitId":"-"},"content":"          .pipe("},{"lineNumber":787,"author":{"gitId":"-"},"content":"              tap(() \u003d\u003e {"},{"lineNumber":788,"author":{"gitId":"-"},"content":"                recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":789,"author":{"gitId":"-"},"content":"              }));"},{"lineNumber":790,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":791,"author":{"gitId":"-"},"content":""},{"lineNumber":792,"author":{"gitId":"-"},"content":"    // update comment"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    return this.commentService.updateComment({"},{"lineNumber":794,"author":{"gitId":"-"},"content":"      commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":795,"author":{"gitId":"-"},"content":"      // we ignore the fields in comment edit model as participant comment"},{"lineNumber":796,"author":{"gitId":"-"},"content":"      // will follow visibilities from question by design"},{"lineNumber":797,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":798,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    }, recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":801,"author":{"gitId":"-"},"content":"      moderatedperson: this.moderatedPerson,"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":803,"author":{"gitId":"-"},"content":"        tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":804,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel("},{"lineNumber":805,"author":{"gitId":"-"},"content":"              comment, recipientSubmissionFormModel.recipientIdentifier);"},{"lineNumber":806,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":808,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":811,"author":{"gitId":"-"},"content":"   * Deletes a comment by participants."},{"lineNumber":812,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":813,"author":{"gitId":"-"},"content":"  deleteParticipantComment(questionIndex: number, responseIdx: number): void {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"    const recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel \u003d"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        this.questionSubmissionForms[questionIndex].recipientSubmissionForms[responseIdx];"},{"lineNumber":816,"author":{"gitId":"-"},"content":""},{"lineNumber":817,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver || !recipientSubmissionFormModel.commentByGiver.originalComment) {"},{"lineNumber":818,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"    this.commentService.deleteComment("},{"lineNumber":822,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":823,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":824,"author":{"gitId":"-"},"content":"          moderatedperson: this.moderatedPerson,"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        }).subscribe(() \u003d\u003e {"},{"lineNumber":826,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":827,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027Your comment has been deleted!\u0027);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":829,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":830,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":831,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"  retryLoadingFeedbackSessionQuestions(): void {"},{"lineNumber":834,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d false;"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003e\u003d 0) {"},{"lineNumber":836,"author":{"gitId":"-"},"content":"      this.retryAttempts -\u003d 1;"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":838,"author":{"gitId":"-"},"content":"    this.loadFeedbackQuestions();"},{"lineNumber":839,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":840,"author":{"gitId":"-"},"content":""},{"lineNumber":841,"author":{"gitId":"-"},"content":"  handleError(resp: ErrorMessageOutput): void {"},{"lineNumber":842,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003c 0) {"},{"lineNumber":844,"author":{"gitId":"-"},"content":"      const report: NgbModalRef \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":845,"author":{"gitId":"-"},"content":"      report.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":846,"author":{"gitId":"-"},"content":"      report.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":847,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":848,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":849,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":850,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":851,"author":{"gitId":"-"},"content":""},{"lineNumber":852,"author":{"gitId":"-"},"content":"  loadRecipientsAndResponses(event: any, questionSubmissionForm: QuestionSubmissionFormModel): void {"},{"lineNumber":853,"author":{"gitId":"-"},"content":"    if (event \u0026\u0026 event.visible \u0026\u0026 !questionSubmissionForm.isLoaded \u0026\u0026 !questionSubmissionForm.isLoading) {"},{"lineNumber":854,"author":{"gitId":"-"},"content":"      questionSubmissionForm.isLoading \u003d true;"},{"lineNumber":855,"author":{"gitId":"-"},"content":"      this.loadFeedbackQuestionRecipientsForQuestion(questionSubmissionForm);"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":857,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhaojj2209":2,"-":857}},{"path":"src/web/app/pages-student/student-home-page/student-home-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCoursesLoadingFailed\" [message]\u003d\"\u0027Failed to load courses\u0027\" (retryEvent)\u003d\"loadStudentCourses()\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isCoursesLoading\"\u003e\u003c/div\u003e"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"  \u003cdiv *ngIf\u003d\"!isCoursesLoading\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courses.length \u003d\u003d\u003d 0; else coursesContainer\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      You are not enrolled in any courses. Please refer to the \u003ca tmRouterLink\u003d\"/web/student/help\"\u003ehelp page\u003c/a\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      if you need more information."},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cng-template #coursesContainer\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courses.length\" class\u003d\"row mb-2\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"float-right\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cstrong class\u003d\"d-inline\"\u003e Sort By: \u003c/strong\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"btn-group\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"sort-course-id-btn\" class\u003d\"btn btn-light\" [disabled]\u003d\"sortBy \u003d\u003d\u003d SortBy.COURSE_ID\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"sort-course-name-btn\" class\u003d\"btn btn-light\" [disabled]\u003d\"sortBy \u003d\u003d\u003d SortBy.COURSE_NAME\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cng-container *ngFor\u003d\"let studentCourse of courses; index as i\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card bg-light top-padded\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-header bg-primary text-white\" *ngIf\u003d\"studentCourse.course as course\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cstrong class\u003d\"text-break\"\u003e[{{ course.courseId }}]: {{ course.courseName }}\u003c/strong\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003ca tmRouterLink\u003d\"/web/student/course\" [queryParams]\u003d\"{courseid: course.courseId}\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"               id\u003d\"view-team-btn-{{i}}\" class\u003d\"btn btn-primary btn-sm button text-nowrap\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              View team"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"table-responsive\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003ctable class\u003d\"table table-striped table-bordered margin-0\" *ngIf\u003d\"studentCourse.feedbackSessions \u0026\u0026 studentCourse.feedbackSessions.length\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cthead\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003ctr\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cth\u003eSession Name\u003c/th\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cth\u003eDeadline\u003c/th\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003cth\u003eSubmissions\u003c/th\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cth\u003eResponses\u003c/th\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"              \u003cth\u003eAction(s)\u003c/th\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/thead\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003ctbody\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003ctr *ngFor\u003d\"let session of studentCourse.feedbackSessions; index as i\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003cng-container\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003ctd class\u003d\"text-break\"\u003e{{ session.session.feedbackSessionName }}\u003c/td\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u003ctd *ngIf\u003d\"session.session.submissionEndTimestamp\"\u003e{{ session.session.submissionEndTimestamp | formatDateDetail: session.session.timeZone }}\u003c/td\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                  \u003cspan [ngbTooltip]\u003d\"getSubmissionStatusTooltip(session)\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    {{ session.isOpened | sessionSubmissionStatus: session.isWaitingToOpen : session.isSubmitted }}"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                  \u003c/span\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                  \u003cspan [ngbTooltip]\u003d\"getResponseStatusTooltip(session.isPublished)\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    {{ session.isPublished | sessionResponseStatus }}"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                  \u003c/span\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                  \u003ca [ngClass]\u003d\"{\u0027disabled\u0027 : !session.isPublished}\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/result\" [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"                     id\u003d\"view-responses-btn-{{i}}\" class\u003d\"btn btn-light btn-sm btn-margin-right\"\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    View Responses"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isWaitingToOpen\" id\u003d\"disabled-start-submit-btn-{{i}}\" class\u003d\"btn btn-light btn-sm disabled\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    Start Submission"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isOpened \u0026\u0026 !session.isSubmitted\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                     id\u003d\"start-submit-btn-{{i}}\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                     class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    Start Submission"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isOpened \u0026\u0026 session.isSubmitted\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                     id\u003d\"edit-submit-btn-{{i}}\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                     class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    Edit Submission"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"!session.isOpened \u0026\u0026 !session.isWaitingToOpen\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                     id\u003d\"view-submit-btn-{{i}}\" class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    View Submission"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              \u003c/ng-container\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \u003c/tbody\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          \u003c/table\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"          \u003ctable class\u003d\"table table-striped table-bordered margin-0\" *ngIf\u003d\"!(studentCourse.feedbackSessions \u0026\u0026 studentCourse.feedbackSessions.length)\"\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003ctbody\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003ctr\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              \u003cth class\u003d\"align-center white\"\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Currently, there are no open evaluation/feedback sessions in this course. When a session is open for submission you will be notified."},{"lineNumber":99,"author":{"gitId":"-"},"content":"              \u003c/th\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003c/tbody\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          \u003c/table\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \u003c/ng-container\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \u003c/ng-template\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"fsgmhoward":1,"-":106}},{"path":"src/web/services/notification.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import { NotificationService } from \u0027./notification.service\u0027;"},{"lineNumber":5,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"describe(\u0027NotificationService\u0027, () \u003d\u003e {"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":"  let spyHttpRequestService: any;"},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"  let service: NotificationService;"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"    spyHttpRequestService \u003d {"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"      get: jest.fn(),"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"      post: jest.fn(),"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"      put: jest.fn(),"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":"      delete: jest.fn(),"},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"    };"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"      imports: [HttpClientTestingModule],"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"      providers: [{ provide: HttpRequestService, useValue: spyHttpRequestService }],"},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"    });"},{"lineNumber":21,"author":{"gitId":"fsgmhoward"},"content":"    service \u003d TestBed.inject(NotificationService);"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":"  it(\u0027should be created\u0027, () \u003d\u003e {"},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"    expect(service).toBeTruthy();"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"  });"},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"});"}],"authorContributionMap":{"fsgmhoward":27}},{"path":"src/web/services/notification.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"fsgmhoward"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"fsgmhoward"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"fsgmhoward"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":4,"author":{"gitId":"fsgmhoward"},"content":"import { MessageOutput, Notification, Notifications } from \u0027../types/api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"Nicolascwy"},"content":"import { NotificationCreateRequest, NotificationUpdateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":6,"author":{"gitId":"fsgmhoward"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":7,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":8,"author":{"gitId":"fsgmhoward"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"fsgmhoward"},"content":" * Handles notification related logic injection"},{"lineNumber":10,"author":{"gitId":"fsgmhoward"},"content":" */"},{"lineNumber":11,"author":{"gitId":"fsgmhoward"},"content":"@Injectable({"},{"lineNumber":12,"author":{"gitId":"fsgmhoward"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":13,"author":{"gitId":"fsgmhoward"},"content":"})"},{"lineNumber":14,"author":{"gitId":"fsgmhoward"},"content":"export class NotificationService {"},{"lineNumber":15,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":16,"author":{"gitId":"fsgmhoward"},"content":"  constructor(private httpRequestService: HttpRequestService) { }"},{"lineNumber":17,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":18,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":19,"author":{"gitId":"fsgmhoward"},"content":"   * Creates a notification by calling API."},{"lineNumber":20,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":21,"author":{"gitId":"Nicolascwy"},"content":"  createNotification(request: NotificationCreateRequest): Observable\u003cNotification\u003e {"},{"lineNumber":22,"author":{"gitId":"fsgmhoward"},"content":"    return this.httpRequestService.post(ResourceEndpoints.NOTIFICATION, {}, request);"},{"lineNumber":23,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":25,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":26,"author":{"gitId":"fsgmhoward"},"content":"   * Retrieve all notifications by calling API."},{"lineNumber":27,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":28,"author":{"gitId":"fsgmhoward"},"content":"  getNotifications(): Observable\u003cNotifications\u003e {"},{"lineNumber":29,"author":{"gitId":"Nicolascwy"},"content":"    return this.httpRequestService.get(ResourceEndpoints.NOTIFICATIONS);"},{"lineNumber":30,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":32,"author":{"gitId":"Nicolascwy"},"content":"  /**"},{"lineNumber":33,"author":{"gitId":"Nicolascwy"},"content":"   * Updates a notification by calling API."},{"lineNumber":34,"author":{"gitId":"Nicolascwy"},"content":"   */"},{"lineNumber":35,"author":{"gitId":"Nicolascwy"},"content":"  updateNotification(request: NotificationUpdateRequest, notificationId: string): Observable\u003cNotification\u003e {"},{"lineNumber":36,"author":{"gitId":"Nicolascwy"},"content":"    const paramsMap: { [key: string]: string } \u003d {"},{"lineNumber":37,"author":{"gitId":"Nicolascwy"},"content":"      notificationid: notificationId,"},{"lineNumber":38,"author":{"gitId":"Nicolascwy"},"content":"    };"},{"lineNumber":39,"author":{"gitId":"Nicolascwy"},"content":"    return this.httpRequestService.put(ResourceEndpoints.NOTIFICATION, paramsMap, request);"},{"lineNumber":40,"author":{"gitId":"Nicolascwy"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"Nicolascwy"},"content":""},{"lineNumber":42,"author":{"gitId":"fsgmhoward"},"content":"  /**"},{"lineNumber":43,"author":{"gitId":"fsgmhoward"},"content":"   * Deletes a notification by calling API."},{"lineNumber":44,"author":{"gitId":"fsgmhoward"},"content":"   */"},{"lineNumber":45,"author":{"gitId":"fsgmhoward"},"content":"  deleteNotification(notificationId: string): Observable\u003cMessageOutput\u003e {"},{"lineNumber":46,"author":{"gitId":"fsgmhoward"},"content":"    const paramsMap: { [key: string]: string } \u003d {"},{"lineNumber":47,"author":{"gitId":"fsgmhoward"},"content":"      notificationid: notificationId,"},{"lineNumber":48,"author":{"gitId":"fsgmhoward"},"content":"    };"},{"lineNumber":49,"author":{"gitId":"fsgmhoward"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.NOTIFICATION, paramsMap);"},{"lineNumber":50,"author":{"gitId":"fsgmhoward"},"content":"  }"},{"lineNumber":51,"author":{"gitId":"fsgmhoward"},"content":"}"}],"authorContributionMap":{"fsgmhoward":38,"Nicolascwy":13}},{"path":"src/web/services/table-comparator.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../types/sort-properties\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Handles comparison logic between sortable table elements"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"})"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export class TableComparatorService {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   * Compares two strings which are expected to be dates depending on order given."},{"lineNumber":15,"author":{"gitId":"-"},"content":"   * If either string cannot be parsed into a date, it will be seen as \u0027smaller\u0027."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   * If both strings cannot be parsed into dates, strA will always be seen as \u0027larger\u0027."},{"lineNumber":17,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  compareChronologically(strA: string, strB: string, order: SortOrder): number {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    const dateA: moment.Moment \u003d moment(strA);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    const dateB: moment.Moment \u003d moment(strB);"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    if (!dateA.isValid()) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      return 1;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    if (!dateB.isValid()) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      return -1;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.ASC) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      return dateA.diff(dateB);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.DESC) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      return dateB.diff(dateA);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    return 0;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * Compares two strings lexicographically depending on order given."},{"lineNumber":43,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  compareLexicographically(strA: string, strB: string, order: SortOrder): number {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.ASC) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      return strA.localeCompare(strB);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.DESC) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      return strB.localeCompare(strA);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    return 0;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * Compares two strings naturally depending on the order given."},{"lineNumber":58,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  compareNaturally(strA: string, strB: string, order: SortOrder): number {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.ASC) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      return strA.localeCompare(strB, undefined, { numeric: true });"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.DESC) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      return strB.localeCompare(strA, undefined, { numeric: true });"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    return 0;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":72,"author":{"gitId":"-"},"content":"   * Compares two strings which are expected to be numbers depending on the order given."},{"lineNumber":73,"author":{"gitId":"-"},"content":"   * If either string cannot be parsed into number, it will be seen as \u0027smaller\u0027"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   * If both strings cannot be parsed into number, strA will always be seen as \u0027larger\u0027"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  compareNumbers(strA: string, strB: string, order: SortOrder): number {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    const numA: number \u003d Number(strA);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    const numB: number \u003d Number(strB);"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    if (Number.isNaN(numA)) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      return 1;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    if (Number.isNaN(numB)) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      return -1;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    return (order \u003d\u003d\u003d SortOrder.DESC ? -1 : 1) * Math.sign(numA - numB);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":92,"author":{"gitId":"-"},"content":"   * Compares two strings depending on element to sort by and the order given."},{"lineNumber":93,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  compare(sortBy: SortBy, order: SortOrder, strA: string, strB: string): number {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    switch (sortBy) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      case SortBy.CONTRIBUTION_TEAM:"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      case SortBy.CONTRIBUTION_VALUE:"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      case SortBy.RUBRIC_SUBQUESTION:"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      case SortBy.RUBRIC_CHOICE:"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_TEAM:"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_RECIPIENT:"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_TEAM:"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_OPTION_SELECTED_TIMES:"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_TEAM:"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_OPTION_SELECTED_TIMES:"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      case SortBy.SECTION_NAME:"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      case SortBy.TEAM_NAME:"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_NAME:"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      case SortBy.GIVER_TEAM:"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      case SortBy.RECIPIENT_TEAM:"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this.compareNaturally(strA, strB, order);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      case SortBy.CONSTSUM_OPTIONS_OPTION:"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      case SortBy.CONTRIBUTION_RECIPIENT:"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      case SortBy.COMMENTS_CREATION_DATE:"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      case SortBy.RANK_OPTIONS_OPTION:"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_CHOICE:"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_RECIPIENT_NAME:"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_CHOICE:"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_RECIPIENT_NAME:"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      case SortBy.RESPONDENT_NAME:"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      case SortBy.RESPONDENT_EMAIL:"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      case SortBy.STUDENT_GENDER:"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      case SortBy.INSTITUTION:"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      case SortBy.NATIONALITY:"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      case SortBy.JOIN_STATUS:"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      case SortBy.COURSE_ID:"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      case SortBy.COURSE_NAME:"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      case SortBy.COURSE_CREATION_DATE:"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_COMPLETION_STATUS:"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_START_DATE:"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_END_DATE:"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_CREATION_DATE:"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_DELETION_DATE:"},{"lineNumber":134,"author":{"gitId":"fsgmhoward"},"content":"      case SortBy.NOTIFICATION_START_TIME:"},{"lineNumber":135,"author":{"gitId":"fsgmhoward"},"content":"      case SortBy.NOTIFICATION_END_TIME:"},{"lineNumber":136,"author":{"gitId":"fsgmhoward"},"content":"      case SortBy.NOTIFICATION_CREATE_TIME:"},{"lineNumber":137,"author":{"gitId":"fsgmhoward"},"content":"      case SortBy.NOTIFICATION_TITLE:"},{"lineNumber":138,"author":{"gitId":"fsgmhoward"},"content":"      case SortBy.NOTIFICATION_TARGET_USER:"},{"lineNumber":139,"author":{"gitId":"fsgmhoward"},"content":"      case SortBy.NOTIFICATION_STYLE:"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      case SortBy.QUESTION_TYPE:"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      case SortBy.QUESTION_TEXT:"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      case SortBy.GIVER_NAME:"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      case SortBy.RECIPIENT_NAME:"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      case SortBy.LOG_TYPE:"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      case SortBy.RESULT_VIEW_STATUS:"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return this.compareLexicographically(strA, strB, order);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_RESPONSE_COUNT:"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_RESPONSE_COUNT:"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      case SortBy.RANK_OPTIONS_OVERALL_RANK:"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_SELF_RANK:"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_OVERALL_RANK:"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_OVERALL_RANK_EXCLUDING_SELF:"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_TEAM_RANK:"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_TEAM_RANK_EXCLUDING_SELF:"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      case SortBy.CONSTSUM_OPTIONS_POINTS:"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      case SortBy.CONSTSUM_RECIPIENTS_POINTS:"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      case SortBy.RUBRIC_WEIGHT_AVERAGE:"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      case SortBy.RUBRIC_TOTAL_CHOSEN_WEIGHT:"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      case SortBy.NUMERICAL_SCALE_MAX:"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      case SortBy.NUMERICAL_SCALE_MIN:"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      case SortBy.NUMERICAL_SCALE_AVERAGE:"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      case SortBy.NUMERICAL_SCALE_AVERAGE_EXCLUDE_SELF:"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_WEIGHT:"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_PERCENTAGE:"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_WEIGHTED_PERCENTAGE:"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_WEIGHT_TOTAL:"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_WEIGHT_AVERAGE:"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_WEIGHT:"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_PERCENTAGE:"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_WEIGHTED_PERCENTAGE:"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_WEIGHT_TOTAL:"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_WEIGHT_AVERAGE:"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return this.compareNumbers(strA, strB, order);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      case SortBy.LOG_DATE:"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return this.compareChronologically(strA, strB, order);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return 0;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":6,"-":174}},{"path":"src/web/types/sort-properties.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Elements that tables are sorted by."},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export enum SortBy {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"-"},"content":"     * Nothing."},{"lineNumber":7,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    NONE,"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Section Name."},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    SECTION_NAME,"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Team name."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    TEAM_NAME,"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Respondent Name (student/instructor)."},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    RESPONDENT_NAME,"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The email of a respondent (student/instructor)."},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    RESPONDENT_EMAIL,"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * The gender of the student."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    STUDENT_GENDER,"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Institution."},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    INSTITUTION,"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Nationality."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    NATIONALITY,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Join status"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    JOIN_STATUS,"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Course ID."},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    COURSE_ID,"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Course Name."},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    COURSE_NAME,"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * The creation time of the course."},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    COURSE_CREATION_DATE,"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The deletion time of the course."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    COURSE_DELETION_DATE,"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Completion status of feedback session."},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    SESSION_COMPLETION_STATUS,"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Feedback session name."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    SESSION_NAME,"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Start time of the feedback session."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    SESSION_START_DATE,"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * End time of the feedback session."},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    SESSION_END_DATE,"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The creation time of the feedback session."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    SESSION_CREATION_DATE,"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The time when the feedback session is moved to recycle bin."},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    SESSION_DELETION_DATE,"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Feedback question type."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    QUESTION_TYPE,"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Feedback question text (brief)."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    QUESTION_TEXT,"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Team of the giver of the feedback response."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    GIVER_TEAM,"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Name of the giver of the feedback response."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    GIVER_NAME,"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Team of the recipient of the feedback response."},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    RECIPIENT_TEAM,"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Name of the recipient of the feedback response."},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    RECIPIENT_NAME,"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Average score of the numerical scale question."},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_AVERAGE,"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Maximum score of the numerical scale question."},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_MAX,"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Minimum score of the numerical scale question."},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_MIN,"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Average score (exclude self-review) of the numerical scale question."},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_AVERAGE_EXCLUDE_SELF,"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Option text"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    MCQ_CHOICE,"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Weight assigned to the option"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    MCQ_WEIGHT,"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Number of selection of that option"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    MCQ_RESPONSE_COUNT,"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Percentage of selection of that option"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    MCQ_PERCENTAGE,"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Weighted percentage of selection of that option"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    MCQ_WEIGHTED_PERCENTAGE,"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Team"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    MCQ_TEAM,"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Name"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    MCQ_RECIPIENT_NAME,"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Number of times option chosen"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    MCQ_OPTION_SELECTED_TIMES,"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Sum of weight of options"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    MCQ_WEIGHT_TOTAL,"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Average of weights"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    MCQ_WEIGHT_AVERAGE,"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Option text"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    MSQ_CHOICE,"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Weight assigned to the option"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    MSQ_WEIGHT,"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Number of selection of that option"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    MSQ_RESPONSE_COUNT,"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Percentage of selection of that option"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    MSQ_PERCENTAGE,"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Weighted percentage of selection of that option"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    MSQ_WEIGHTED_PERCENTAGE,"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Team"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    MSQ_TEAM,"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Name"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    MSQ_RECIPIENT_NAME,"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * Number of times option chosen"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    MSQ_OPTION_SELECTED_TIMES,"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * Sum of weight of options"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    MSQ_WEIGHT_TOTAL,"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * Average of weights"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    MSQ_WEIGHT_AVERAGE,"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Option to rank"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    RANK_OPTIONS_OPTION,"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Overall ranking of the option"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    RANK_OPTIONS_OVERALL_RANK,"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Giver\u0027s / Recipient\u0027s team"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_TEAM,"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * Recipient\u0027s name"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_RECIPIENT,"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * Recipient\u0027s self rank"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_SELF_RANK,"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * Recipient\u0027s overall rank"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_OVERALL_RANK,"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * Recipient\u0027s overall rank excluding self"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_OVERALL_RANK_EXCLUDING_SELF,"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * Recipient\u0027s team rank"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_TEAM_RANK,"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * Recipient\u0027s team rank excluding self"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_TEAM_RANK_EXCLUDING_SELF,"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * Rubric sub question"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    RUBRIC_SUBQUESTION,"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * Frequency of choice"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    RUBRIC_CHOICE,"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     * Weight average."},{"lineNumber":307,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    RUBRIC_WEIGHT_AVERAGE,"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * Total chosen weight."},{"lineNumber":312,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    RUBRIC_TOTAL_CHOSEN_WEIGHT,"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     * Option to constsum options"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    CONSTSUM_OPTIONS_OPTION,"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * Option\u0027s received/total/average points"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    CONSTSUM_OPTIONS_POINTS,"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     * Recipient\u0027s received/total/average/average excluding self points"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    CONSTSUM_RECIPIENTS_POINTS,"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":331,"author":{"gitId":"-"},"content":"     * Team for contribution measurement"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    CONTRIBUTION_TEAM,"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * Contribution recipient\u0027s name"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    CONTRIBUTION_RECIPIENT,"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     * Amount of contribution measured in numbers"},{"lineNumber":342,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    CONTRIBUTION_VALUE,"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * The creation date of a comment"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    COMMENTS_CREATION_DATE,"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":351,"author":{"gitId":"-"},"content":"     * The type of log"},{"lineNumber":352,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    LOG_TYPE,"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * The date of log"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    LOG_DATE,"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * The status of result view"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    RESULT_VIEW_STATUS,"},{"lineNumber":364,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":365,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":366,"author":{"gitId":"fsgmhoward"},"content":"     * The title of notification"},{"lineNumber":367,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":368,"author":{"gitId":"fsgmhoward"},"content":"    NOTIFICATION_TITLE,"},{"lineNumber":369,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":370,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":371,"author":{"gitId":"fsgmhoward"},"content":"     * The start date/time of notification"},{"lineNumber":372,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":373,"author":{"gitId":"fsgmhoward"},"content":"    NOTIFICATION_START_TIME,"},{"lineNumber":374,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":375,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":376,"author":{"gitId":"fsgmhoward"},"content":"     * The end date/time of notification"},{"lineNumber":377,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":378,"author":{"gitId":"fsgmhoward"},"content":"    NOTIFICATION_END_TIME,"},{"lineNumber":379,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":380,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":381,"author":{"gitId":"fsgmhoward"},"content":"     * The date/time for the creation of notification"},{"lineNumber":382,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":383,"author":{"gitId":"fsgmhoward"},"content":"    NOTIFICATION_CREATE_TIME,"},{"lineNumber":384,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":385,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":386,"author":{"gitId":"fsgmhoward"},"content":"     * The target user (visibility) of notification"},{"lineNumber":387,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":388,"author":{"gitId":"fsgmhoward"},"content":"    NOTIFICATION_TARGET_USER,"},{"lineNumber":389,"author":{"gitId":"fsgmhoward"},"content":""},{"lineNumber":390,"author":{"gitId":"fsgmhoward"},"content":"    /**"},{"lineNumber":391,"author":{"gitId":"fsgmhoward"},"content":"     * The style of notification"},{"lineNumber":392,"author":{"gitId":"fsgmhoward"},"content":"     */"},{"lineNumber":393,"author":{"gitId":"fsgmhoward"},"content":"    NOTIFICATION_STYLE,"},{"lineNumber":394,"author":{"gitId":"-"},"content":"}"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":397,"author":{"gitId":"-"},"content":" * Sort order."},{"lineNumber":398,"author":{"gitId":"-"},"content":" */"},{"lineNumber":399,"author":{"gitId":"-"},"content":"export enum SortOrder {"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":401,"author":{"gitId":"-"},"content":"     * Descending sort order."},{"lineNumber":402,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    DESC,"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":406,"author":{"gitId":"-"},"content":"     * Ascending sort order"},{"lineNumber":407,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    ASC,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fsgmhoward":30,"-":379}}]
